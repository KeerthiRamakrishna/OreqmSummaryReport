<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_E2EP05_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2EP05_requirements_ASR_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2EP05_requirements_AUTOSAR_SWS_E2ETransformer_P05.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2EP05_requirements_EB_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2EP05_requirements_PRS_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2EP05_requirements_TL_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_Pxx_AUTOSAR_SWS_E2ETransformer_PXX.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2E_requirements_E2E_PRS_Pxx_PRS_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2E_requirements_E2E_SWS_PRS_UC_E2E_SWS_PRS_UC_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2E_requirements_TL_ProfilesDynLen_TL_Requirements_DynLen.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2E_requirements_TL_ProfilesGeneral_TL_Requirements_General.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/common_req/E2EP05_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 22:13:03 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_E2EP05_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2EP05_requirements_ASR_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2EP05_requirements_AUTOSAR_SWS_E2ETransformer_P05.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2EP05_requirements_EB_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2EP05_requirements_PRS_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2EP05_requirements_TL_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_Pxx_AUTOSAR_SWS_E2ETransformer_PXX.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2E_requirements_E2E_PRS_Pxx_PRS_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2E_requirements_E2E_SWS_PRS_UC_E2E_SWS_PRS_UC_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2E_requirements_TL_ProfilesDynLen_TL_Requirements_DynLen.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_Native/asc_E2E_requirements_TL_ProfilesGeneral_TL_Requirements_General.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/common_req/E2EP05_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/2018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>feavc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swpad</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swts</regex>
      <regex>pdoc</regex>       <!-- since 10/2018: introduced for updated tracing model-->
      <regex>dev</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swadvc</regex>     <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swuvc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/2020: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>
      <regex>doc</regex>

      <!-- legacy items -->
      <regex>req</regex>        <!-- deprecated 10/2017: old swrs type -->
      <regex>dsn</regex>        <!-- deprecated 10/2017: old swdd -->
      <regex>src</regex>        <!-- deprecated 10/2017: old impl type -->
      <regex>tcs</regex>        <!-- deprecated 10/2017: replaced by swintts and swuts -->
      <regex>dsn_arch</regex>   <!-- deprecated 10/2017: old swad type -->
      <regex>man</regex>
      <regex>tso</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='req') and (../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.rejected</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.count</name>
      <description>Requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.req.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='req') or (../@doctype='swrs')) and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='swdd') or (../@doctype='dsn')) and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.doctypes</name>
      <description>Requirements can be covered only by req, dsn_arch, dev, lim, dsn, src, tcs, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req')]</applyto>
          <condition>(./needscoverage/needsobj="req" or ./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swad, dev, lim, swurs, swdd, src, swuts, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.doctypes</name>
      <description>Design elements can only be covered by dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn')]</applyto>
          <condition>(./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.src.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='src')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="tsc" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes") )</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="dsn_arch" or ./fulfilledby/ffbObj/ffbType="dsn_arch" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>



    <rule>
      <name>ERR.dsn_arch.needscoverage.doctypes</name>
      <description>Architectural design objects can only be covered by dsn_arch, dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn_arch')]</applyto>
          <condition>(./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, req, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
         </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
  </rules>
    <oreqmRules>
          <rule>
            <name>WRN.tsc.needscoverage.count</name>
            <description>Violated if there are more than 10 tsc specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='tcs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='tsc'])) &gt; 10]/furtherinfo</applyto>
                    <regex>tsc.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.req.needscoverage.count</name>
            <description>Violated if there are more than 10 req specobjects covering one specobject and no appropriate information is provided in furtherinfo, refinement on req to req are excluded. Refinements of requirements Req to Req and Req to Fea are excluded from this rule since this is tracing on the same level. The justification in furtherinfo must contain the rule name.</description>
           <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(../@doctype != 'req') and (../@doctype != 'fea') and ((count(./needscoverage/needscov[needsobj='req']/coveredby/linkedfrom)) &gt; 10)]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='req'])) &gt; 10]/furtherinfo</applyto>
                    <regex>req.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
     </rule>

        <rule>
            <name>WRN.src.needscoverage.count</name>
            <description>Violated if there are more than 10 src specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='src']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn_arch.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn_arch specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn_arch']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn_arch'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn_arch.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="req">

  <!--  GENERIC AUTOSAR REQUIREMENTS  -->

    <specobject>
      <id>ASR_E2EP05020050</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00050.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00050'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020311</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00311.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00311'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_E2E_00048
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00048'])"/>
              </para>
            </listitem>
          </itemizedlist>
      </para>
      <para>
        applies,
        but the E2E library Profile 05 shall be built of the following files:
        E2E_P05.h and E2E_P05.c
      </para>
      <para>
        Note:
        E2E.h (common header) is shared by all profiles and exists in a different module.
      </para>
      </description>
      <comment> R22-11 : E2E_PXX.h and E2E_SM.h files are removed.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_05_Files</srcid><srcstatus/><internalId>462</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020215</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00215.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00215'])"/>
              </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020115</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00115.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00115'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_04_IncludeFiles</srcid><srcstatus/><internalId>461</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020049</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00049.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00049'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00011.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00011'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01002_P05ProtectInit_InvalidInput</srcid><srcstatus/><internalId>444</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01003_P05Protect_InvalidInput</srcid><srcstatus/><internalId>445</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02008_P05CheckInit_InvalidInput</srcid><srcstatus/><internalId>455</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02009_P05Check_InvalidInput</srcid><srcstatus/><internalId>456</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01101_P05Forward_InvalidInput</srcid><srcstatus/><internalId>497</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020216</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00216.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00216'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_E2E_00047
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00047'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        applies,
        but the error flag <code>E2E_E_INTERR</code> is not used as return value.
      </description>
      <furtherinfo>
        Justifying rule: WRN.swurs.needscoverage.count violation.
        This swurs is covered by more than 10 EB swurs.
      </furtherinfo>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01002_P05ProtectInit_InvalidInput</srcid><srcstatus/><internalId>444</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01003_P05Protect_InvalidInput</srcid><srcstatus/><internalId>445</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02000_P05CheckStatus_Ok</srcid><srcstatus/><internalId>447</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02001_P05CheckStatus_OkSomeLost</srcid><srcstatus/><internalId>448</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02002_P05CheckStatus_WrongSequence</srcid><srcstatus/><internalId>449</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02003_P05CheckStatus_Repeated</srcid><srcstatus/><internalId>450</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02004_P05CheckStatus_WrongCrc</srcid><srcstatus/><internalId>451</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02005_P05CheckStatus_NoNewData</srcid><srcstatus/><internalId>452</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02008_P05CheckInit_InvalidInput</srcid><srcstatus/><internalId>455</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02009_P05Check_InvalidInput</srcid><srcstatus/><internalId>456</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01101_P05Forward_InvalidInput</srcid><srcstatus/><internalId>497</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020017</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00017.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00017'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00037.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00037'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_03_NoConfigParams</srcid><srcstatus/><internalId>460</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_E2E_00038
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00038'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      applies,
      but the version numbers shall be published
      as stated in SWS_BSW_00059 according to the General Specification of Basic Software Modules
      of ASR CP R22-11.
      <para>
        That is, the following version numbers shall be defined in the header file
        according to SWS_BSW_00059 (General Specification of Basic Software Modules):
        <itemizedlist>
          <listitem>E2E_VENDOR_ID</listitem>
          <listitem>E2E_AR_RELEASE_MAJOR_VERSION</listitem>
          <listitem>E2E_AR_RELEASE_MINOR_VERSION</listitem>
          <listitem>E2E_AR_RELEASE_REVISION_VERSION</listitem>
          <listitem>E2E_SW_MAJOR_VERSION</listitem>
          <listitem>E2E_SW_MINOR_VERSION</listitem>
          <listitem>E2E_SW_PATCH_VERSION</listitem>
        </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_03_PublishedInformation</srcid><srcstatus/><internalId>459</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <!-- ASR E2EP05 Requirements -->

    <specobject>
      <id>ASR_E2EP05020437</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00437.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00437'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01004_P05Protect_Structures</srcid><srcstatus/><internalId>446</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02011_P05Check_Structures</srcid><srcstatus/><internalId>458</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020654</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020438</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00438.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00438'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01004_P05Protect_Structures</srcid><srcstatus/><internalId>446</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020652</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020439</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00439.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00439'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_02011_P05Check_Structures</srcid><srcstatus/><internalId>458</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020440</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00440.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00440'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_02010_P05Check_CheckEnum</srcid><srcstatus/><internalId>457</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020591</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020446</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_E2E_00446
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00446'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        applies, but
        the first argument (Config) is of type: <code>E2E_P05ConfigType const *</code>
        and return type is <code>Std_ReturnType</code>.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ComTest_01</srcid><srcstatus/><internalId>441</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01003_P05Protect_InvalidInput</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020447</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00447.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00447'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <comment>
        In R22-11 StatePtr parameter has changed to Output parameter from in-out Parameter.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ComTest_01</srcid><srcstatus/><internalId>441</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01001_P05ProtectInit_Ok</srcid><srcstatus/><internalId>443</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01002_P05ProtectInit_InvalidInput</srcid><srcstatus/><internalId>444</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020448</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00448.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00448'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01001_P05ProtectInit_Ok</srcid><srcstatus/><internalId>443</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01002_P05ProtectInit_InvalidInput</srcid><srcstatus/><internalId>444</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>E2E.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020585</id>
      <status>approved</status><!-- draft in ASR R22-11 -->
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00585.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00585'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <comment>This requirement Status=draft</comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ComTest_01</srcid><srcstatus/><internalId>441</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01101_P05Forward_InvalidInput</srcid><srcstatus/><internalId>497</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020449</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_E2E_00449
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00449'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        applies, but
        the first argument (Config) is of type: <code>E2E_P05ConfigType const *</code>,
        the third argument (Data) is of type: <code>uint8 const *</code>
        and return type is <code>Std_ReturnType</code>.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ComTest_01</srcid><srcstatus/><internalId>441</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02000_P05CheckStatus_Ok</srcid><srcstatus/><internalId>447</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02001_P05CheckStatus_OkSomeLost</srcid><srcstatus/><internalId>448</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02002_P05CheckStatus_WrongSequence</srcid><srcstatus/><internalId>449</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02003_P05CheckStatus_Repeated</srcid><srcstatus/><internalId>450</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02004_P05CheckStatus_WrongCrc</srcid><srcstatus/><internalId>451</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02005_P05CheckStatus_NoNewData</srcid><srcstatus/><internalId>452</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02009_P05Check_InvalidInput</srcid><srcstatus/><internalId>456</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020450</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00450.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00450'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ComTest_01</srcid><srcstatus/><internalId>441</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02007_P05CheckInit_Ok</srcid><srcstatus/><internalId>454</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02008_P05CheckInit_InvalidInput</srcid><srcstatus/><internalId>455</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020451</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_E2E_00451
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00451'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_02007_P05CheckInit_Ok</srcid><srcstatus/><internalId>454</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02008_P05CheckInit_InvalidInput</srcid><srcstatus/><internalId>455</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>E2E.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020452</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00452.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00452'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ComTest_01</srcid><srcstatus/><internalId>441</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020453</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00453.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00453'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
          applies,
          but if Status equals E2E_P05STATUS_NONEWDATA, then E2E_P05MapStatusToSM() shall return E2E_P_NONEWDATA instead of E2E_P_REPEATED.
          See also <ulink url="https://www.autosar.org/bugzilla/show_bug.cgi?id=67553">https://www.autosar.org/bugzilla/show_bug.cgi?id=67553</ulink>.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_02006_P05MapStatusToSM</srcid><srcstatus/><internalId>453</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020601</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020454</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR SWS, Design Item SWS_E2E_00454.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00454'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_02006_P05MapStatusToSM</srcid><srcstatus/><internalId>453</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

    <!-- SWS UC Requirements -->

    <specobject>
      <id>ASR_E2EP0502UC00313</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00313
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00313'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00202</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00202
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00202'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00203</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00203
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00203'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00204</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00204
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00204'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00205</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00205
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00205'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00232</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00232
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00232'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00232</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00206</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00206
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00206'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00207</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00207
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00207'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00209</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00209
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00209'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00233</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00233
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00233'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00233</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00277</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00277
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00277'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00277</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00278</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00278
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00278'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00278</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00258</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00258
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00258'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00258</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>E2EP05.SWS_E2EXf_00102.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        In-place E2EXf_&lt;transformerId&gt; shall perform the following two precondition
        checks, without continuing further processing:
         1.  (buffer == NULL)
             ||
             (buffer != NULL &amp;&amp; inputBufferLength  &lt;
              EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
         2.  bufferLength == NULL.
        If any of above conditions is TRUE, then the function shall return
        E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
      </description>
      <comment>
        Incorporated Bugzilla RfC 75163:
        Rewrite '(buffer == NULL &amp;&amp; inputBufferLength != 0)' to '(buffer == NULL)'
        in point 1, see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06001_IOValidParamCheck</srcid><srcstatus/><internalId>464</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00106.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        Out-of-place E2EXf_&lt;transformerId&gt; shall perform the
        following three precondition checks, without continuing further processing:
         1.  (inputBuffer == NULL)
             ||
             (inputBuffer != NULL &amp;&amp; inputBufferLength  &lt;
             EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
         2.  bufferLength == NULL
         3.  buffer == NULL
        If any of above conditions is TRUE, then the function shall return
        E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
      </description>
      <comment>
        Incorporated Bugzilla RfC 75163:
        Rewrite '(inputBuffer == NULL &amp;&amp; inputBufferLength != 0)' to '(inputBuffer == NULL)'
        in point 1, see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07001_IOValidParamCheck</srcid><srcstatus/><internalId>478</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00108.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        If (EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0), in-place
        E2EXf_&lt;transformerId&gt; shall copy the amount upperHeaderBitsToShift bits,
        in parameter buffer, with starting offset of BufferProperties.headerLength, in
        direction left by 'distance' of BufferProperties.headerLength. (RS_E2E_08538)
      </description>
      <comment>
        Incorporated Bugzilla RfC 75163:
        Rewrite '(buffer != NULL &amp;&amp; EndToEndTransformationDescription.upperHeaderBitsToShift
        &gt; 0)' to '(EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)',
        see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06002_CopyUpperHeader</srcid><srcstatus/><internalId>465</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00109.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        If (EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0), out-of-place
        E2EXf_&lt;transformerId&gt; shall copy the first upperHeaderBitsToShift bits from
        inputBuffer to buffer, and then copy the remaining part of inputBuffer (i.e. starting
        with offset upperHeaderBitsToShift) to parameter buffer starting with the destination
        offset of (upperHeaderBitsToShift+ BufferProperties.headerLength). (RS_E2E_08538)
      </description>
      <comment>
        Incorporated Bugzilla RfC 75163:
        Rewrite '(inputBuffer != NULL &amp;&amp;
        EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)' to
        '(EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)',
        see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07002_CopyUpperHeader</srcid><srcstatus/><internalId>479</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00115.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        If (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), out-of-place
        E2EXf_&lt;transformerId&gt; shall copy inputBuffer to buffer starting with the
        destination offset of BufferProperties.headerLength. (RS_E2E_08538)
      </description>
      <comment>
        Incorporated Bugzilla RfC 75163:
        Rewrite '(inputBuffer != NULL &amp;&amp;
        EndToEndTransformationDescription.upperHeaderBitsToShift == 0)' to
        '(EndToEndTransformationDescription.upperHeaderBitsToShift == 0)',
        see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_08000_CopyUpperHeader</srcid><srcstatus/><internalId>491</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00111.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        E2EXf_&lt;transformerId&gt; shall set
        *bufferLength = inputBufferLength + BufferProperties.headerLength/8.
        (RS_E2E_08538)
      </description>
      <comment>
        Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
        BufferProperties.headerLength'.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06003_BufLength</srcid><srcstatus/><internalId>466</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07003_BufLength</srcid><srcstatus/><internalId>480</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00139.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        For PXX = 01 or 02, the function E2EXf_&lt;transformerId&gt;
        shall perform a check of the *bufferLength (after the computation of *bufferLength):
        If (*bufferLength != config-&gt;DataLength / 8), then the function shall return
        immediately E_SAFETY_HARD_RUNTIMEERROR, i.e. without calling an E2E Library function.
        (RS_E2E_08538)
      </description>
      <rationale>
        This requirement is not applicable for profile 05.
      </rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00107.P05</id>
      <status>approved</status> <!-- draft in R22-11 -->
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>2</version>
      <description>
        If DataTransformationStatusForwarding is set to noTransformerStatusForwarding and
        PXX is P01 ,P02 ,P04 ,P05 ,P06 ,P07 ,P08 ,P11 ,P22 or P44,
        the function E2EXf_&lt;transformerId&gt;() shall invoke E2E_PXXProtect(),
        passing to that function the appropriate Config and State structures
        (see [SWS_E2EXf_00125] and [SWS_E2EXf_00126]) that are associated with
        &lt;transformerId&gt;, as well as buffer and bufferLength (only for P04, P05, P06, P07,
        P08 ,P11 ,P22 and P44) that were updated in above requirements SWS_E2EXf_00108,
        SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06004_InvokeProtect</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07004_InvokeProtect</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_12000_FWCodeStatusCheck</srcid><srcstatus/><internalId>502</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_13000_FWCodeStatusCheck</srcid><srcstatus/><internalId>503</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00107</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00018.P05</id>
      <status>approved</status> <!-- draft in R22-11 -->
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>2</version>
      <description>
        In case E2E_PXXProtect() or E2E_PXXForward() returns E2E_E_OK, then
        E2EXf_&lt;transformerId&gt; shall return E_OK, otherwise E2EXf_&lt;transformerId&gt;
        shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06005_RetValProtect</srcid><srcstatus/><internalId>468</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07005_RetValProtect</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00018</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00105.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        In-place E2EXf_Inv_&lt;transformerId&gt; shall perform the
        following two precondition checks, without continuing further processing:
          1.  (buffer == NULL &amp;&amp; inputBufferLength != 0)
              ||
              (buffer != NULL &amp;&amp; inputBufferLength &lt; BufferProperties.headerLength/8u
               + EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
          2.  bufferLength == NULL.
        If any of above conditions is TRUE, then the function shall return
        E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06101_IOValidParamCheck</srcid><srcstatus/><internalId>470</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00103.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        Out-of-place E2EXf_Inv_&lt;transformerId&gt; shall perform the
        following three precondition checks, without continuing further processing:
         1.  (inputBuffer == NULL &amp;&amp; inputBufferLength != 0)
             ||
             (inputBuffer != NULL &amp;&amp; inputBufferLength &lt;
             BufferProperties.headerLength/8u +
             EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
         2.  If (bufferLength == NULL)
         3.  If (buffer == NULL).
        If any of above conditions is TRUE, then the function shall return
        E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07101_IOValidParamCheck</srcid><srcstatus/><internalId>484</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00140.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>2</version>
      <description>
        For PXX = 01 or 02 (i.e. for profile 1 and 2), the out-of-place function
        E2EXf_Inv_&lt;transformerId&gt; shall
         1.  if(inputBuffer == NULL and inputBufferLength == 0), then
              -  variable NewDataAvailable of state object of type
                 E2E_PXXCheckStateType (see [SWS_E2EXf_00125]) associated with
                 &lt;transformerId&gt; shall be set to FALSE
         2.  else if (inputBufferLength == config-&gt;DataLength / 8), then
              -  variable NewDataAvailable of state object of type
                 E2E_PXXCheckState Type (see [SWS_E2EXf_00125]) associated with
                 &lt;transformerId&gt; shall be set to TRUE.
         3   else return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
      </description>
      <rationale>
        This requirement is not applicable for profile 05.
      </rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00140</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00123.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        For PXX = 01 or 02 (i.e. for profiles 1 and 2), the out-of-place function
        E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that
        function:
          -  config,
          -  state,
          -  Data
        Concerning pointer to data: if(inputBuffer == NULL and inputBufferLength == 0), then it
        shall pass a pointer to a 1-byte variable of E2E transformer, otherwise it shall pass
        inputBuffer.(RS_E2E_08538)
      </description>
      <rationale>
        This requirement is not applicable for profile 05.
      </rationale>
      <comment>
        Incorporated RfC 70069
        'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
        see https://www.autosar.org/bugzilla/show_bug.cgi?id=70069.
        For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient to
        have a valid pointer to data. From the dummy variable where it points to is never read. The
        size of the variable where it points to is considered as an implementation detail and thus
        not important for the fulfillment of this requirement.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00141.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        For PXX = 01 or 02 (i.e. for profiles 1 and 2), the in-place
        function E2EXf_Inv_&lt;transformerId&gt; shall
         1.  If(buffer == NULL and inputBufferLength == 0), then
              - variable NewDataAvailable of state object of type
                E2E_PXXCheckStateType (see [SWS_E2EXf_00125]) associated with
                &lt;transformerId&gt; shall be set to FALSE.
         2.  Else if (inputBufferLength == config-&gt;DataLength / 8), then
              - variable NewDataAvailable of state object of type      E2E_PXXCheckState
                Type (see [SWS_E2EXf_00125]) associated with &lt;transformerId&gt; shall be
                set to TRUE.
         3.  Else return E_SAFETY_HARD_RUNTIMEERROR.
        (RS_E2E_08538)
      </description>
      <rationale>
        This requirement is not applicable for profile 05.
      </rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00124.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        For PXX = 01 or 02 (i.e. for profiles 1 and 2), the in-place function
        E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that
        function:
          -  config,
          -  state,
          -  Data
        Concerning pointer to data: if(buffer == NULL and inputBufferLength == 0), then it shall
        pass a pointer to a 1-byte variable of E2E transformer, otherwise it shall pass buffer.
        (RS_E2E_08538)
      </description>
      <rationale>
        This requirement is not applicable for profile 05.
      </rationale>
      <comment>
        Incorporated RfC 70069
        'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
        see https://www.autosar.org/bugzilla/show_bug.cgi?id=70069.
        For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient to
        have a valid pointer to data. From the dummy variable where it points to is never read. The
        size of the variable where it points to is considered as an implementation detail and thus
        not important for the fulfillment of this requirement.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00142.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        If configuration parameter profileBehavior is PRE_R4_2, then
        for PXX = 01 or 02, E2EXf_Inv_&lt;transformerId&gt;() shall set the variable
        MaxDeltaCounter of the state object to the value of variable MaxDeltaCounterInit of
        the corresponding configuration object. (RS_E2E_08538)
      </description>
      <rationale>
        This requirement is not applicable for profile 05.
      </rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00104.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        For PXX = 04, 05, 06, 07, 11, 22: the function
        E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that function:
          -  config,
          -  state,
          -  data length: inputBufferLength
        pointer to data: inputBuffer (out-of-place version) or buffer (in-place
        version). (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06102_InvokeCheck</srcid><srcstatus/><internalId>471</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07102_InvokeCheck</srcid><srcstatus/><internalId>485</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06108_CheckCRCandSM</srcid><srcstatus/><internalId>495</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00029.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        The function E2EXf_Inv_&lt;transformerId&gt; shall invoke
        E2E_PXXMapStatusToSM(), passing to that function the return value of E2E_PXXCheck
        and the profiles check Status (variable Status of state object of type
        E2E_PXXCheckStateType, see [SWS_E2EXf_00125]), to obtain the profile-
        independent check status. For P1/P2 mapping functions, there is an additional call
        parameter profileBehavior:
          -  if configuration parameter profileBehavior is R4_2, then E2E_PXXMapStatusToSM()
             shall be invoked with the call parameter profileBehavior = 1
          -  if configuration parameter profileBehavior is PRE_R4_2, then
             E2E_PXXMapStatusToSM()  shall be invoked with call parameter profileBehavior = 0
        (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06103_InvokeMapStatusToSM</srcid><srcstatus/><internalId>472</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07103_InvokeMapStatusToSM</srcid><srcstatus/><internalId>486</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00028.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        The function E2EXf_Inv_&lt;transformerId&gt; shall invoke the
        E2E_SMCheck() function, passing to that function the configuration object of type
        E2E_SMConfigType (see [SWS_E2EXf_00126] and [SWS_E2EXf_00088]) and state
        object of type E2E_SMCheckStateType (see [SWS_E2EXf_00125]) that are
        associated with &lt;transformerId&gt;, plus the profile-independent check status that
        was computed by E2E_PXXMapStatusToSM() in SWS_E2EXf_00029. (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06104_InvokeSMCheck</srcid><srcstatus/><internalId>473</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07104_InvokeSMCheck</srcid><srcstatus/><internalId>487</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00027.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>2</version>
      <description>
        If E2E_SMCheck() returns E2E_E_OK and disableEndToEndStateMachine is FALSE, then:
          - the high nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt; shall be
            set to the low nibble of the state of the state machine (member SMState of object of
            type E2E_SMStateType that is associated with &lt;transformerId&gt;, see
            [SWS_E2EXf_00125]).
          - The low nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt;
            shall  be set to the low nibble of the profile-independent check status
            of type E2E_PCheckStatusType.
            If E2E_SMCheck() does not return E2E_E_OK, the return value shall be
            E_SAFETY_SOFT_RUNTIMEERROR. (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06105_SMCheckRetVal</srcid><srcstatus/><internalId>474</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07105_SMCheckRetVal</srcid><srcstatus/><internalId>488</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00027</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00112.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        If (buffer != NULL &amp;&amp;
        EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0), in-place
        E2EXf_Inv_&lt;transformerId&gt; shall copy the first upperHeaderBitsToShift
        bits, in parameter buffer, in direction right by 'distance' of
        BufferProperties.headerLength.(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06106_CopyUpperHeader</srcid><srcstatus/><internalId>475</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00113.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        If (inputBuffer != NULL &amp;&amp;
        EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0),
        out-of-place E2EXf_Inv_&lt;transformerId&gt; shall copy the first
        upperHeaderBitsToShift bits from inputBuffer to buffer, and then copy the
        remaining part of inputBuffer skipping E2E header (i.e. starting with
        offset upperHeaderBitsToShift+BufferProperties.headerLength) to parameter
        buffer starting with the destination offset of
        (upperHeaderBitsToShift).(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07106_CopyUpperHeader</srcid><srcstatus/><internalId>489</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00116.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        If (inputBuffer != NULL &amp;&amp;
        EndToEndTransformationDescription.upperHeaderBitsToShift == 0),
        out-of-place E2EXf_Inv_&lt;transformerId&gt; shall copy inputBuffer starting
        with the offset of BufferProperties.headerLength, to
        buffer.(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_08100_CopyUpperHeader</srcid><srcstatus/><internalId>492</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00114.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        If inputBufferLength == 0, then E2EXf_Inv_&lt;transformerId&gt; shall set
        *bufferLength = 0, otherwise it shall set
        *bufferLength = inputBufferLength - BufferProperties.headerLength/8.
        (RS_E2E_08538)
      </description>
      <comment>
        Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
        BufferProperties.headerLength' and
        RfC 69321 'Correction of calculation of bufferLength'.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06107_BufLength</srcid><srcstatus/><internalId>476</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07107_BufLength</srcid><srcstatus/><internalId>490</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00167.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        In case of Client/Server-Communication on the server side, if the return value ret equals
        to E_SAFETY_*_ERR, the value shall be overwritten to E_E2E_HARD_SAFETY_ERR.
        (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EP05.CSCommunication</srcid><srcstatus/><internalId>438</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00037.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>2</version>
      <description>
        Mandatory Interfaces
        API function            Description
        E2E_P05Check           Checks the Data received using the E2E profile 5. This includes
                               CRC calculation, handling of Counter. The function checks only
                               one single data in one cycle, it does not determine/compute the
                               accumulated state of the communication link.
        E2E_P05CheckInit       Initializes the check state
        E2E_P05Forward (draft) Protects data which is forwarded by using the E2E profile 05.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P05MapStatusToSM   The function maps the check status of Profile 5 to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 5 delivers a more fine-granular status,
                               but this is not relevant for the E2E state machine.
        E2E_P05Protect         Protects the array/buffer to be transmitted using the E2E
                               profile 5. This includes checksum calculation, handling of
                               counter.
        E2E_P05ProtectInit     Initializes the protection state.
        E2E_SMCheck            Checks the communication channel. It determines if the data can
                               be used for safety-related application, based on history of
                               checks performed by a corresponding E2E_P0XCheck() function.
        E2E_SMCheckInit        Initializes the state machine.
        (RS_E2E_08538)
      </description>
      <furtherinfo>
        Justifying rule: WRN.swurs.needscoverage.count violation.
        This swurs is covered by more than 10 EB swurs.
      </furtherinfo>
      <comment>
        Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
        This applies to all profiles.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06004_InvokeProtect</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06102_InvokeCheck</srcid><srcstatus/><internalId>471</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06103_InvokeMapStatusToSM</srcid><srcstatus/><internalId>472</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06104_InvokeSMCheck</srcid><srcstatus/><internalId>473</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07004_InvokeProtect</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07102_InvokeCheck</srcid><srcstatus/><internalId>485</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07103_InvokeMapStatusToSM</srcid><srcstatus/><internalId>486</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07104_InvokeSMCheck</srcid><srcstatus/><internalId>487</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06108_CheckCRCandSM</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_12000_FWCodeStatusCheck</srcid><srcstatus/><internalId>502</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_13000_FWCodeStatusCheck</srcid><srcstatus/><internalId>503</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_14000_InvokeCheck_DisableE2ESM_TRUE</srcid><srcstatus/><internalId>504</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_15000_InvokeCheck_DisableE2ESM_TRUE</srcid><srcstatus/><internalId>505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00037</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_Xfrm_00108.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release R22-11</source>
      <version>2</version>
      <description>
        A transformer which is called with NULL_PTR as input data shall
        not change the output buffer unless the transformer invocation shall trigger an autonomous
        error reaction (see also [SWS_Rte_07420]).(SRS_Xfrm_00005)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06001_IOValidParamCheck</srcid><srcstatus/><internalId>464</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06101_IOValidParamCheck</srcid><srcstatus/><internalId>470</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07001_IOValidParamCheck</srcid><srcstatus/><internalId>478</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07101_IOValidParamCheck</srcid><srcstatus/><internalId>484</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_Xfrm_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_Xfrm_00032.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_OK                       | 0x00       | -          | The communication is safe.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_REP         | 0x01       | Soft       | The data are valid according to
                                                               safety, although data with a re-
                                                               peated counter were received.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_SEQ         | 0x02       | Soft       | The data are valid according to
                                                               safety, although a counter jump
                                                               occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_ERR         | 0x03       | Soft       | The data are valid according to
                                                               safety, although the check itself
                                                               failed.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_NND         | 0x05       | Soft       | Communication is valid according to
                                                               safety, but no new data received.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_OK         | 0x20       | Soft       | No data are available since ini-
                                                               tialization of transformer.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_REP        | 0x21       | Soft       | No data are available since
                                                               initialization of transformer be-
                                                               cause a repeated counter was
                                                               received.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_SEQ        | 0x22       | Soft       | No data are available since ini-
                                                               tialization of transformer and a
                                                               counter jump occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_ERR        | 0x23       | Soft       | No data are available since ini-
                                                               tialization of transformer. There-
                                                               fore the check failed.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_NND        | 0x25       | Soft       | No data are available since
                                                               initialization of transformer.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_OK           | 0x30       | Soft       | Not enough data were received
                                                               to use them.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_REP          | 0x31       | Soft       | Not enough data were received
                                                               to use them but some with a re-
                                                               peated counter were received.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_SEQ          | 0x32       | Soft       | Not enough data were received
                                                               to use them, additionally a
                                                               counter jump occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_ERR          | 0x33       | Soft       | Not enough data were received
                                                               to use them, additionally a check
                                                               failed.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_NND          | 0x35       | Soft       | Not enough data were received to use
                                                               them, additionally no new data
                                                               received.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_OK        | 0x40       | Soft       | The data are invalid and cannot
                                                               be used.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_REP       | 0x41       | Soft       | The data are invalid and can-
                                                               not be used because a repeated
                                                               counter was received.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_SEQ       | 0x42       | Soft       | The data are invalid and cannot
                                                               be used due to a counter jump.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_ERR       | 0x43       | Soft       | The data are invalid and cannot
                                                               be used because a check failed.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_NND       | 0x45       | Soft       | Communication is invalid according to
                                                               safety and no new data received
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_OK           | 0x60       | Soft       | Communication is safe, Statemachine
                                                               is not active.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_REP          | 0x61       | Soft       | Data with a repeated counter were
                                                               received. E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_SEQ          | 0x62       | Soft       | A counter jump occurred.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_ERR          | 0x63       | Soft       | The data are invalid and cannot
                                                               be used because a check failed.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_NND          | 0x65       | Soft       | No new data available.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_DEC          | 0x66       | Soft       | Disabled E2E State machine and
                                                               disabled E2E check.
        -----------------------------------------------------------------------------
        E_SAFETY_SOFT_RUNTIMEERROR | 0x77       | Soft       | A runtime error occurred, safety
                                                               properties could not be checked
                                                               (state or status cannot be deter-
                                                               mined) but non-protected output
                                                               data could be produced nonethe-
                                                               less.
        -----------------------------------------------------------------------------
        E_E2E_HARD_SAFETY_ERR      | 0x8d       | Hard       | Not further specified E2E error
        -----------------------------------------------------------------------------
        E_SAFETY_HARD_RUNTIMEERROR | 0xFF       | Hard       | A runtime error occurred, safety
                                                               properties could not be checked
                                                               and NO output data could be pro-
                                                               duced.
        -----------------------------------------------------------------------------
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_14000_InvokeCheck_DisableE2ESM_TRUE</srcid><srcstatus/><internalId>504</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_15000_InvokeCheck_DisableE2ESM_TRUE</srcid><srcstatus/><internalId>505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
         <provcov>
            <linksto>E2E.SWS_Xfrm_00032</linksto>
            <dstversion>1</dstversion>
         <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_Xfrm_00051.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If a transformer returns a hard error, it shall leave the output buffer unchanged
        (SRS_Xfrm_00004)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06001_IOValidParamCheck</srcid><srcstatus/><internalId>464</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06101_IOValidParamCheck</srcid><srcstatus/><internalId>470</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07001_IOValidParamCheck</srcid><srcstatus/><internalId>478</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07101_IOValidParamCheck</srcid><srcstatus/><internalId>484</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_Xfrm_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

    <specobject>
      <id>E2EP05.EB.SWS_E2EXf_00133.P05</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the E2E Transformer has not been correctly initialized (which means that
        E2EXf_[&lt;PartitionId&gt;]_PartitionInit() was not successfully
        called before), then all generated E2E
        Transformer APIs shall immediately return E_SAFETY_HARD_RUNTIMEERROR.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06000_NotInitialized</srcid><srcstatus/><internalId>463</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06100_NotInitialized</srcid><srcstatus/><internalId>469</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07000_NotInitialized</srcid><srcstatus/><internalId>477</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07001_IOValidParamCheck</srcid><srcstatus/><internalId>478</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07100_NotInitialized</srcid><srcstatus/><internalId>483</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.EB.SWS_E2EXf_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

    <specobject>
      <id>E2EP05.EB.Transformer.InPlace.NoCopying.P05</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If (buffer != NULL) &amp;&amp;
        (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), in-place
        E2EXf_&lt;transformerId&gt; shall keep buffer unchanged.
      </description>
      <comment>
        The setting upperHeaderBitsToShift == 0 implicits the use of ComXf
        which is applicable for profile 05.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_09000_CopyUpperHeader</srcid><srcstatus/><internalId>493</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.EB.Transformer.InPlace.NoCopying</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

    <specobject>
      <id>E2EP05.EB.InvTransformer.InPlace.NoCopying.P05</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If (buffer != NULL) &amp;&amp;
        (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), in-place
        E2EXf_Inv_&lt;transformerId&gt; shall keep buffer unchanged.
      </description>
      <comment>
        The setting upperHeaderBitsToShift == 0 implicits the use of ComXf
        which is applicable for profile 05.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_09100_CopyUpperHeader</srcid><srcstatus/><internalId>494</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.EB.InvTransformer.InPlace.NoCopying</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

    <specobject>
      <id>E2EP05.EB.SWS_E2EXf_00021.P05</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf_[_&lt;PartitionId&gt;]_PartitionInit() function shall initialize
        all state structures managed by E2E transformer, calling the corresponding
        E2E_Init() method on each state variable.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06004_InvokeProtect</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06102_InvokeCheck</srcid><srcstatus/><internalId>471</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06104_InvokeSMCheck</srcid><srcstatus/><internalId>473</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07004_InvokeProtect</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07102_InvokeCheck</srcid><srcstatus/><internalId>485</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07104_InvokeSMCheck</srcid><srcstatus/><internalId>487</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06108_CheckCRCandSM</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_13000_FWCodeStatusCheck</srcid><srcstatus/><internalId>503</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.EB.SWS_E2EXf_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

    <specobject>
      <id>E2EP05.EB.Transformer.Server.ProtectStatePtrInputCheck.P05</id>
      <status>rejected</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In C/S communication, the E2EXf_&lt;transformerId&gt; on server-side shall perform the
        following additional precondition check, without continuing further processing:
        - ProtectStatePtr == NULL_PTR
        If the above condition is TRUE, then the function shall return
        E_SAFETY_HARD_RUNTIMEERROR.
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <comment>
        Checking ProtectStatePtr for NULL_PTR is necessary as it is dereferenced
        and set by the RequestCounter of csTransactionHandlePtr-&gt;e2eCounter.
      </comment>
      <providescoverage>
        <provcov>
          <linksto>E2E.EB.Transformer.Server.ProtectStatePtrInputCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

    <specobject>
      <id>E2EP05.EB.InvTransformer.Client.ProtectStatePtrInputCheck.P05</id>
      <status>rejected</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In C/S communication, the E2EXf_Inv_&lt;transformerId&gt; on client-side shall perform the
        following additional precondition check, without continuing further processing:
        - ProtectStatePtr == NULL_PTR
        If the above condition is TRUE, then the function shall return
        E_SAFETY_HARD_RUNTIMEERROR.
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <comment>
        Checking ProtectStatePtr for NULL_PTR is necessary as it is dereferenced
        to setting the Counter member of CheckStatesPtr-&gt;PXXmCheckState.
      </comment>
      <providescoverage>
        <provcov>
          <linksto>E2E.EB.InvTransformer.Client.ProtectStatePtrInputCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00047.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
      <version>2</version>
      <description>
        Imported Types
        Module:Imported Type
        E2E:
                    E2E_P05CheckStateType
                    E2E_P05CheckStatusType
                    E2E_P05ConfigType
                    E2E_P05ProtectStateType
                    E2E_PCheckStatusType
                    E2E_SMCheckStateType
                    E2E_SMConfigType
                    E2E_SMStateType
        Std_Types:
                    Std_ExtractProtocolHeaderFieldsType
                    Std_MessageResultType
                    Std_MessageTypeType
                    Std_ReturnType
                    Std_TransformerForwardCode (draft)
                    Std_VersionInfoType
        (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_09000_CopyUpperHeader</srcid><srcstatus/><internalId>493</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_12000_FWCodeStatusCheck</srcid><srcstatus/><internalId>502</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_13000_FWCodeStatusCheck</srcid><srcstatus/><internalId>503</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00047</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00175.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        In case of Client/Server Communication on the client side, if the E2E_PXXCheck function
        returns a value different from E2E_P_OK, the status shall be set to E2E_P_ERR.
        (RS_E2E_08538)
      </description>
      <rationale>
          This requirement is not applicable in profile 05
      </rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00169.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        If disableEndToEndStateMachine is to TRUE,
          - The high nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt; shall
            be set to 0x6.
          - The low nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt; shall
            be set to the low nibble of the profile-independent check status of type
            E2E_PCheckStatusType.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_14000_InvokeCheck_DisableE2ESM_TRUE</srcid><srcstatus/><internalId>504</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_15000_InvokeCheck_DisableE2ESM_TRUE</srcid><srcstatus/><internalId>505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00173.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        In case of Client/Server Communication on the client side and Profile is P04, P05, P06, P07,
        P08, P11, P22 or P44, P04m, P07m, P08m, P44m state-&gt;Counter of
        E2EXf_Inv_&lt;transformerId&gt; shall be set to the requestCounter - 1.(RS_E2E_08538)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EP05.CSCommunication</srcid><srcstatus/><internalId>438</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00172.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        In case of Client/Server Communication on the client side and Profile is P01 or P02,
        state-&gt;LastValidCounter of E2EXf_Inv_&lt;transformerId&gt; shall be set to the
        requestCounter-1.(RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable for profile 05</rationale>
      <comment/>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00203.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For profile P04m, P07m, P08m and P44m both the in-place and the out-of-place
        E2EXf_Inv_&lt;transformerId&gt; on the server-side shall set the e2eCounter element
        of the csTransactionHandle to the value of the local variable receivedRequestCounter.
        (RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <comment/>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00202.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For profile P04m, P07m, P08m and P44m both the in-place and the out-of-place
        E2EXf_Inv_&lt;transformerId&gt; on the server-side shall set the e2eSourceId element
        of the csTransactionHandle to the value of the local variable sourceID.(RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00201.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For PXX = P04m, P07m, P08m and P44m: the function E2EXf_Inv_&lt;transformerId&gt; on the
        server-side shall invoke E2E_PXXSinkCheck(), passing to that function:
          - config,
          - state,
          - the local variables messageType, messageResult, and the address of the local
            variable sourceID
          - data length:
            inputBufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
          - pointer to data:
            . inputBuffer + EndToEndTransformationDescription.upperHeaderBitsToShift
              (out-of-place version) or
            . buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
              (in-place version).(RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00200.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For PXX = P04m, P07m, P08m and P44m: the function E2EXf_Inv_&lt;transformerId&gt; on the
        client-side shall invoke E2E_PXXSourceCheck(), passing to that function:
          - config,
          - state,
          - the local variables messageType, messageResult, and the local variable sourceID
          - data length:
                inputBufferLength – EndToEndTransformationDescription.upperHeaderBitsToShift
          - pointer to data:
              . inputBuffer + EndToEndTransformationDescription.upperHeaderBitsToShift (
                out-of-place version) or
              . buffer + EndToEndTransformationDescription.upperHeaderBitsToShift (
                in-place version).
        (RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00199.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        If extractProtocolHeaderFields() returns something different from E_OK,
        E2EXf_Inv_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00198.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_Inv_&lt;transformerId&gt;
        on the server-side shall call the extractProtocolHeaderFields() function passing the
        inputBuffer, the inputBufferLength, the address of local messageType variable, and the
        address of a local messageResult variable as parameters.(RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00197.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m the in-place E2EXf_Inv_&lt;transformerId&gt;
        on the server-side shall call the extractProtocolHeaderFields() function
        passing the buffer, the bufferLength, the address of local messageType variable,
        and the address of a local messageResult variable as parameters.(RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00196.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m both the in-place and the out-of-place
        E2EXf_Inv_&lt;transformerId&gt; on the client-side shall set a local variable sourceID
        to the sourceID stored in the configuration.
        (RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00194.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_Inv_&lt;transformerId&gt;
        on the client-side shall call the extractProtocolHeaderFields() function passing the
        inputBuffer, the inputBufferLength, the address of a local variable named messageType,
        and the address of a local variable named messageResult as parameters.(RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00193.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m the in-place E2EXf_Inv_&lt;transformerId&gt; on
        the client-side shall call the extractProtocolHeaderFields() function passing
        the buffer, the bufferLength, the address of local messageType variable, and
        the address of a local messageResult variable as parameters.(RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00192.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m both the in-place and the out-of-place
        E2EXf_Inv_&lt;transformerId&gt; shall perform the following additional precondition checks,
        without continuing further processing:
          1. extractProtocolHeaderFields == NULL
          2. csTransactionHandle == NULL.
        If any of above conditions is TRUE, then the function shall return
        E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00191.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        If DataTransformationStatusForwarding is set to transformerStatusForwarding and
        PXX = P04m, P07m, P08m or P44m: The function E2EXf_&lt;transformerId&gt;() shall invoke
        E2E_PXXForward(), passing to that function:
          - the appropriate Config structure (see [SWS_E2EXf_00125]),
          - the appropriate State structure (see [SWS_E2EXf_00126]),
          - the local variables sourceID, messageType, and messageResult
          - buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
          - bufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
        Hereby buffer and bufferLength were updated according to the above requirements
        SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.(RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00168.P05</id>
      <status>approved</status> <!-- draft in R22-11 -->
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        If DataTransformationStatusForwarding is set to transformerStatusForwarding and
        PXX is P01, P02, P04, P05, P06, P07, P08, P11, P22 or P44 the function
        E2EXf_&lt;transformerId&gt;() shall invoke E2E_PXXForward(), passing to that function
        the appropriate Config and State structures (see [SWS_E2EXf_00125] and
        [SWS_E2EXf_00126]) that are associated with &lt;transformerId&gt;, as well as buffer
        and bufferLength (only for P04, P05, P06, P07, P08, P11, P22 and P44)
        that were updated above in requirements SWS_E2EXf_00108, SWS_E2EXf_00109,
        SWS_E2EXf_00115, SWS_E2EXf_00111.
        In addition the parameter ForwardStatus shall be passed to the E2E_PXXForward()
        function, which is provided by the RTE.
        This parameter is associated with the optional IN parameter ForwardStatus from
        Rte_Write (SWS_Rte_01071), Rte_Send (SWS_Rte_01072), Rte_IWrite (SWS_Rte_03744)
        and Rte_IWriteRef (SWS_Rte_05509)
        (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_12000_FWCodeStatusCheck</srcid><srcstatus/><internalId>502</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_13000_FWCodeStatusCheck</srcid><srcstatus/><internalId>503</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00190.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        If DataTransformationStatusForwarding is set to noTransformerStatusForwarding
        and PXX = P04m, P07m, P08m or P44m the function E2EXf_&lt;transformerId&gt;()
        shall invoke E2E_PXXProtect(), passing to that function:
          - the appropriate Config structure (see [SWS_E2EXf_00125]),
          - the appropriate State structure (see [SWS_E2EXf_00126]),
          - the local variables sourceID, messageType, and messageResult
          - buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
          - bufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
        Hereby buffer and bufferLength were updated according to the requirements
        SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.
        (RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00166.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        If E2E-Transformer is used in a Client-Server Communication and Profile is P01, P04, P04m,
        P05, P06, P07, P07m, P08, P08m, P11, P44 or P44m the sequence counter for protecting the
        response shall be set to requestCounter. (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EP05.CSCommunication</srcid><srcstatus/><internalId>438</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00208.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        The function E2EXf_MapCodeToStatus shall return the values depending on the value of
        forwardedCode.(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_12000_FWCodeStatusCheck</srcid><srcstatus/><internalId>502</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_13000_FWCodeStatusCheck</srcid><srcstatus/><internalId>503</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00165.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        If E2E-Transformer is used for a response in a Client-Server Communication and Profile is
        P02 or P22 the sequence counter used for protecting the response shall be set to
        requestCounter -1. (RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable for profile 05</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00189.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m both the in-place and the out-of-place
        E2EXf_&lt;transformerId&gt; on the server-side shall set a local variable named
        requestCounter to the value of the e2eCounter element of the csTransactionHandle.
        (RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00188.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m both the in-place and the out-of-place
        E2EXf_&lt;transformerId&gt; on the server-side shall set a local variable sourceID to the
        value of the e2eSourceId element of the csTransactionHandle. (RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00187.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        If extractProtocolHeaderFields() returns something different from E_OK,
        E2EXf_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00186.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_&lt;transformerId&gt;
        on the server-side shall call the extractProtocolHeaderFields() function passing the
        inputBuffer, the inputBufferLength, the address of local messageType variable,
        and the address of a local messageResult variable as parameters.(RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00185.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m the in-place E2EXf_&lt;transformerId&gt; on
        the server-side shall call the extractProtocolHeaderFields() function passing the buffer,
        the bufferLength, the address of local messageType variable, and the address of a local
        messageResult variable as parameters. (RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00184.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m both the in-place and the out-of-place
        E2EXf_&lt;transformerId&gt; on the client-side shall set a local variable sourceID
        to the sourceID stored in the configuration (see SWS_E2EXf_00126). (RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00183.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        If extractProtocolHeaderFields() returns something different from E_OK,
        E2EXf_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00181.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m the in-place E2EXf_&lt;transformerId&gt; on the
        client-side shall call the extractProtocolHeaderFields() function passing the buffer, the
        bufferLength, the address of local messageType variable, and the address of a local
        messageResult variable as parameters.(RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00182.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_&lt;transformerId&gt; on
        the client-side shall call the extractProtocolHeaderFields() function passing
        the inputBuffer, the inputBufferLength, the address of a local variable
        named messageType, and the address of a local variable named messageResult as
        parameters.(RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00171.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        If E2EXf_&lt;transformerId&gt; is used in a Client-Server Communication on the client-side
        and Profile is P01, P04, P05, P06, P07, P08, P11 or P44, state-&gt;Counter - 1 shall be
        stored as requestCounter to be accessed by the E2EXf_Inv_&lt;transformerId&gt; for
        checking the response. (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EP05.CSCommunication</srcid><srcstatus/><internalId>438</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00170.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        If E2EXf_&lt;transformerId&gt; is used in a Client-Server Communication on the client-side
        and Profile is P02 or P22, state-&gt;Counter shall be stored to as requestCounter to be
        accessed by the E2EXf_Inv_&lt;transformerId&gt; for checking the response.
      </description>
      <rationale>This requirement is not applicable for profile 05</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00180.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m both the in-place and the out-of-place
        E2EXf_&lt;transformerId&gt; shall perform the following additional precondition checks,
        without continuing further processing:
          1. extractProtocolHeaderFields == NULL
          2. csTransactionHandle == NULL.
        If any of above conditions is TRUE, then the function shall return E_SAFETY_HARD_RUNTIMEERROR.
        (RS_E2E_08538)
      </description>
      <rationale>This requirement is not applicable as not supported in profile 05 so far.</rationale>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>

    <specobject>
      <id>E2EP05.EB.Transformer.Init.SR.P05</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In S/R communication each transformer can be initialized individually.
        API used is &lt;transformerId&gt;_Init().
      </description>
      <rationale>
        This requirement is not applicable
      </rationale>
      <comment>
        Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06004_InvokeProtect</srcid><srcstatus/><internalId>467</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06102_InvokeCheck</srcid><srcstatus/><internalId>471</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07004_InvokeProtect</srcid><srcstatus/><internalId>481</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_07102_InvokeCheck</srcid><srcstatus/><internalId>485</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_12000_FWCodeStatusCheck</srcid><srcstatus/><internalId>502</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_13000_FWCodeStatusCheck</srcid><srcstatus/><internalId>503</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.EB.Transformer.Init.SR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>

    <specobject>
      <id>E2EP05.EB.Transformer.Init.Client.P05</id>
      <status>rejected</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In C/S communication at client end both non-inverse transformer and inverse transformer
        shall be initialized at the time same.
        API used is &lt;non-inversetransformerId&gt;_&lt;inversetransformerId&gt;_Init().
      </description>
      <rationale>
        This requirement is not applicable to E2EP05.
      </rationale>
      <comment>
        Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
      </comment>
      <providescoverage>
        <provcov>
          <linksto>E2E.EB.Transformer.Init.Client</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00206.P05</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        In case of Client/Server Communication on the client side
        and Profile is P01 or P02, the receivedRequestCounter shall be set to state-&gt;
        LastValidCounter of E2EXf_Inv_&lt;transformerId&gt;.(RS_E2E_08538)
      </description>
      <rationale>
        This requirement is not applicable to E2EP05.
      </rationale>
      <comment/>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>

    <specobject>
      <id>E2EP05.SWS_E2EXf_00207.P05</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        In case of Client/Server Communication on the client side
        and Profile is P04, P05, P06, P07, P08, P11, P22, P44, P04m, P07m,
        P08m or P44m the receivedRequestCounter shall be set to state-&gt;Counter of
        E2EXf_Inv_&lt;transformerId&gt;.(RS_E2E_08538)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EP05.CSCommunication</srcid><srcstatus/><internalId>438</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.SWS_E2EXf_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>

</specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>EB_E2EP05020113</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description> 
        E2E_PXX.h shall exclusively include E2E.h.
      </description>
      <needscoverage>
         <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_04_IncludeFiles</srcid><srcstatus/><internalId>461</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
         <provcov>
            <linksto>E2E.top.004</linksto>
            <dstversion>1</dstversion>
         <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>

    <specobject>
      <id>EB_E2EP05020114</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Each E2E_PXX.c file shall exclusively include the corresponding
      E2E_PXX.h file and it shall include the E2E_MemMap.h file.
      </description>
      <needscoverage>
         <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_04_IncludeFiles</srcid><srcstatus/><internalId>461</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
         <provcov>
            <linksto>E2E.top.004</linksto>
            <dstversion>1</dstversion>
         <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>

    <specobject>
     <id>EB_E2EP05020472</id>
     <status>approved</status>
     <source>EB</source>
      <version>1</version>
      <description>
        In E2E Profile 5, on the receiver side, the counter shall be 
        initialized with 0xFF.(SRS_E2E_08539)
        In E2E Profile 5, on the receiver side, by evaluating the counter of received data 
        against the counter of previously received data, the following is detected: 
        1. Repetition:
           a. no new data has arrived since last invocation of E2E library check 
              function, 
           b. the data is repeated 
        2. OK:
           a. counter is incremented by one (i.e. no data lost), 
           b. counter is incremented more than by one, but still within allowed limits 
             (i.e. some data lost), 
        3. Error:
           a. counter is incremented more than allowed (i.e. too many data lost). 
      </description>
      <needscoverage>
       <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_02007_P05CheckInit_Ok</srcid><srcstatus/><internalId>454</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
   <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

  <!--  GENERIC AUTOSAR REQUIREMENTS  -->

    <specobject>
      <id>ASR_E2EP05020012</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00012
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00012'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        applies,
        but the library-internal mechanisms shall detect and report errors
        implemented according to the pre-defined E2E Profiles specified
        in this design document.
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01002_P05ProtectInit_InvalidInput</srcid><srcstatus/><internalId>444</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01003_P05Protect_InvalidInput</srcid><srcstatus/><internalId>445</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02008_P05CheckInit_InvalidInput</srcid><srcstatus/><internalId>455</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02009_P05Check_InvalidInput</srcid><srcstatus/><internalId>456</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01101_P05Forward_InvalidInput</srcid><srcstatus/><internalId>497</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020673</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00673
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00673'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01101_P05Forward_InvalidInput</srcid><srcstatus/><internalId>497</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>ASR_E2E020673</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>

    <!--  E2EP05 AUTOSAR PRS REQUIREMENTS  -->

    <specobject>
      <id>ASR_E2EP05020394</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00394.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00394'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020397</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00397.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00397'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <comment>
        First aspect of this requirement referring to first counter value after initialization is strictly dependent
        on previous call to E2E_P05ProtectInit().
      </comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01000_P05Protect</srcid><srcstatus/><internalId>442</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01100_P05Forward</srcid><srcstatus/><internalId>496</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020399</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00399.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00399'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01000_P05Protect</srcid><srcstatus/><internalId>442</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02000_P05CheckStatus_Ok</srcid><srcstatus/><internalId>447</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02001_P05CheckStatus_OkSomeLost</srcid><srcstatus/><internalId>448</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02002_P05CheckStatus_WrongSequence</srcid><srcstatus/><internalId>449</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02003_P05CheckStatus_Repeated</srcid><srcstatus/><internalId>450</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02004_P05CheckStatus_WrongCrc</srcid><srcstatus/><internalId>451</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01100_P05Forward</srcid><srcstatus/><internalId>496</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020400</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00400
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00400'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        applies,
        but the SCrc_CalculateCRC16() function of the SCrc Library shall be used
        instead of Crc_CalculateCRC16().
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01000_P05Protect</srcid><srcstatus/><internalId>442</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02000_P05CheckStatus_Ok</srcid><srcstatus/><internalId>447</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02001_P05CheckStatus_OkSomeLost</srcid><srcstatus/><internalId>448</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02002_P05CheckStatus_WrongSequence</srcid><srcstatus/><internalId>449</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02003_P05CheckStatus_Repeated</srcid><srcstatus/><internalId>450</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02004_P05CheckStatus_WrongCrc</srcid><srcstatus/><internalId>451</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06108_CheckCRCandSM</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01100_P05Forward</srcid><srcstatus/><internalId>496</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EP05.SCrc</srcid><srcstatus/><internalId>437</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020401</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00401.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00401'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01000_P05Protect</srcid><srcstatus/><internalId>442</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02000_P05CheckStatus_Ok</srcid><srcstatus/><internalId>447</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02001_P05CheckStatus_OkSomeLost</srcid><srcstatus/><internalId>448</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02002_P05CheckStatus_WrongSequence</srcid><srcstatus/><internalId>449</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02003_P05CheckStatus_Repeated</srcid><srcstatus/><internalId>450</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02004_P05CheckStatus_WrongCrc</srcid><srcstatus/><internalId>451</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_E2EXf_CON_06108_CheckCRCandSM</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01100_P05Forward</srcid><srcstatus/><internalId>496</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020403</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00403.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00403'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_P05Protect"/>.
        </para>
        <figure id="fig_E2E_P05Protect">
          <title>E2E_P05Protect()</title>
          <inlinegraphic fileref="images/E2E_P05Protect.png" width="90%"/>
        </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01000_P05Protect</srcid><srcstatus/><internalId>442</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>E2E.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020404</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00404.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00404'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_Verifyinputs"/>.
        </para>
        <figure id="fig_E2E_PXXProtect_Verifyinputs">
          <title>E2E_PXXProtect_Verifyinputs</title>
          <inlinegraphic fileref="images/E2E_PXXProtect_Verifyinputs.png" width="90%"/>
        </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01003_P05Protect_InvalidInput</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020469</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>2</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00469.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00469'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        <para>
          The diagram is visualized in
          <xref linkend="fig_E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_Computeoffset"/>.
        </para>
        <figure id="fig_E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_Computeoffset">
          <title>E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_Computeoffset</title>
          <inlinegraphic fileref="images/E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_Computeoffset.png" width="70%"/>
        </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01000_P05Protect</srcid><srcstatus/><internalId>442</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01100_P05Forward</srcid><srcstatus/><internalId>496</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020405</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00405.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00405'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_WriteCounter"/>.
        </para>
        <figure id="fig_E2E_PXXProtect_WriteCounter">
          <title>E2E_PXXProtect_WriteCounter</title>
          <inlinegraphic fileref="images/E2E_PXXProtect_WriteCounter.png" width="70%"/>
        </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01000_P05Protect</srcid><srcstatus/><internalId>442</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020406</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00406.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00406'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_P05Protect_E2EP05Check_ComputeCRC"/>.
        </para>
        <figure id="fig_E2E_P05Protect_E2EP05Check_ComputeCRC">
          <title>E2E_P05Protect_E2EP05Check_ComputeCRC</title>
          <inlinegraphic fileref="images/E2E_P05Protect_E2EP05Check_ComputeCRC.png" width="80%"/>
        </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01000_P05Protect</srcid><srcstatus/><internalId>442</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02000_P05CheckStatus_Ok</srcid><srcstatus/><internalId>447</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020407</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>2</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00407.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00407'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_E2E_PXXForward_WriteCRC"/>.
        </para>
        <figure id="fig_E2E_PXXProtect_E2E_PXXForward_WriteCRC">
          <title>E2E_PXXProtect_E2E_PXXForward_WriteCRC</title>
          <inlinegraphic fileref="images/E2E_PXXProtect_E2E_PXXForward_WriteCRC.png" width="80%"/>
        </figure>
          applies,
          but copying calculated CRC into data is in little endian instead of big endian
          See also <ulink url="https://jira.autosar.org/browse/AR-120183">https://jira.autosar.org/browse/AR-120183</ulink>.
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01000_P05Protect</srcid><srcstatus/><internalId>442</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01100_P05Forward</srcid><srcstatus/><internalId>496</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EP05.ReadandWriteCRC</srcid><srcstatus/><internalId>439</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020409</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>2</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00409.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00409'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        <para>
            The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_E2E_PXXForward_IncrementCounter"/>.
        </para>
        <figure id="fig_E2E_PXXProtect_E2E_PXXForward_IncrementCounter">
          <title>E2E_PXXProtect_E2E_PXXForward_IncrementCounter</title>
          <inlinegraphic fileref="images/E2E_PXXProtect_E2E_PXXForward_IncrementCounter.png" width="80%"/>
        </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01000_P05Protect</srcid><srcstatus/><internalId>442</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01100_P05Forward</srcid><srcstatus/><internalId>496</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020639</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>   See AUTOSAR PRS, Design Item PRS_E2E_00639.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00639'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_P05Forward"/>.
        </para>
        <figure id="fig_E2E_P05Forward">
          <title>E2E_P05Forward()</title>
          <inlinegraphic fileref="images/E2E_P05Forward.png" width="90%"/>
        </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01100_P05Forward</srcid><srcstatus/><internalId>496</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01102_P05Forward_WriteCounter_FS_Repeated</srcid><srcstatus/><internalId>498</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01103_P05Forward_WriteCounter_FS_WrongSeq</srcid><srcstatus/><internalId>499</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01104_P05Forward_WriteDataID</srcid><srcstatus/><internalId>500</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01105_P05Forward_WriteCounter_FS_Nonewdata</srcid><srcstatus/><internalId>501</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>E2E.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020619</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00619
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00619'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_P05Forward_VerifyInputs"/>.
        </para>
        <figure id="fig_E2E_P05Forward_VerifyInputs">
          <title>E2E_P05Forward Input Verification</title>
          <inlinegraphic fileref="images/E2E_P05Forward_VerifyInputs.png" width="100%"/>
        </figure>
      </description>
      <comment>
        verify inputs of E2E_PXXForward: The parameter "ForwardStatus" shall not be checked for
        being != NULL in step "Verify inputs of the forward function.
        Incorporated Autosar RfC AR-112340 'Incorrect usage and inconsistencies related to
        ForwardStatus', see https://jira.autosar.org/browse/AR-112340
      </comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01101_P05Forward_InvalidInput</srcid><srcstatus/><internalId>497</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01105_P05Forward_WriteCounter_FS_Nonewdata</srcid><srcstatus/><internalId>501</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020620</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00620
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00620'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_P05Forward_WriteCounter"/>.
        </para>
        <figure id="fig_E2E_P05Forward_WriteCounter">
          <title>E2E_P05Forward Write Counter</title>
          <inlinegraphic fileref="images/E2E_P05Forward_WriteCounter.png" width="90%"/>
        </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01100_P05Forward</srcid><srcstatus/><internalId>496</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01102_P05Forward_WriteCounter_FS_Repeated</srcid><srcstatus/><internalId>498</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01103_P05Forward_WriteCounter_FS_WrongSeq</srcid><srcstatus/><internalId>499</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020621</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00621
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00621'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_P05Forward_ComputeCRC"/>.
        </para>
        <figure id="fig_E2E_P05Forward_ComputeCRC">
          <title>E2E_P05Forward CRC Computation</title>
          <inlinegraphic fileref="images/E2E_P05Forward_ComputeCRC.png" width="90%"/>
        </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01100_P05Forward</srcid><srcstatus/><internalId>496</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01104_P05Forward_WriteDataID</srcid><srcstatus/><internalId>500</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020411</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00411.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00411'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_P05Check"/>.
        </para>
        <figure id="fig_E2E_P05Check">
          <title>E2E_P05Check()</title>
          <inlinegraphic fileref="images/E2E_P05Check.png"/>
        </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_02000_P05CheckStatus_Ok</srcid><srcstatus/><internalId>447</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02001_P05CheckStatus_OkSomeLost</srcid><srcstatus/><internalId>448</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02002_P05CheckStatus_WrongSequence</srcid><srcstatus/><internalId>449</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02003_P05CheckStatus_Repeated</srcid><srcstatus/><internalId>450</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02004_P05CheckStatus_WrongCrc</srcid><srcstatus/><internalId>451</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02005_P05CheckStatus_NoNewData</srcid><srcstatus/><internalId>452</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>E2E.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020412</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00412.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00412'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_P05Check_VerifyInputs"/>.
        </para>
        <figure id="fig_E2E_P05Check_VerifyInputs">
          <title>E2E_P05Check Input Verification</title>
          <inlinegraphic fileref="images/E2E_P05Check_VerifyInputs.png"/>
        </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_02009_P05Check_InvalidInput</srcid><srcstatus/><internalId>456</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020413</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00413.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00413'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_P05Check_ReadCounter"/>.
        </para>
        <figure id="fig_E2E_P05Check_ReadCounter">
          <title>E2E_P05Check Read Counter</title>
          <inlinegraphic fileref="images/E2E_P05Check_ReadCounter.png" width="90%"/>
        </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_02000_P05CheckStatus_Ok</srcid><srcstatus/><internalId>447</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02001_P05CheckStatus_OkSomeLost</srcid><srcstatus/><internalId>448</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02002_P05CheckStatus_WrongSequence</srcid><srcstatus/><internalId>449</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02003_P05CheckStatus_Repeated</srcid><srcstatus/><internalId>450</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020414</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00414.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00414'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_P05Check_ReadCRC"/>.
        </para>
        <figure id="fig_E2E_P05Check_ReadCRC">
          <title>E2E_P05Check Read CRC</title>
          <inlinegraphic fileref="images/E2E_P05Check_ReadCRC.png" width="90%"/>
        </figure>
          applies,
          but reading CRC from data is in little endian instead of big endian
          See also <ulink url="https://jira.autosar.org/browse/AR-120183">https://jira.autosar.org/browse/AR-120183</ulink>.
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_02000_P05CheckStatus_Ok</srcid><srcstatus/><internalId>447</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02004_P05CheckStatus_WrongCrc</srcid><srcstatus/><internalId>451</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EP05.ReadandWriteCRC</srcid><srcstatus/><internalId>439</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020416</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00416.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00416'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_P05Check_DoChecks"/>.
        </para>
        <figure id="fig_E2E_P05Check_DoChecks">
          <title>E2E_P05Check Checks</title>
          <inlinegraphic fileref="images/E2E_P05Check_DoChecks.png"/>
        </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_02000_P05CheckStatus_Ok</srcid><srcstatus/><internalId>447</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02001_P05CheckStatus_OkSomeLost</srcid><srcstatus/><internalId>448</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02002_P05CheckStatus_WrongSequence</srcid><srcstatus/><internalId>449</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02003_P05CheckStatus_Repeated</srcid><srcstatus/><internalId>450</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02004_P05CheckStatus_WrongCrc</srcid><srcstatus/><internalId>451</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_02005_P05CheckStatus_NoNewData</srcid><srcstatus/><internalId>452</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020652</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>2</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00652.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00652'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP05020438</srcid><srcstatus/><internalId>13</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01102_P05Forward_WriteCounter_FS_Repeated</srcid><srcstatus/><internalId>498</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01103_P05Forward_WriteCounter_FS_WrongSeq</srcid><srcstatus/><internalId>499</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01104_P05Forward_WriteDataID</srcid><srcstatus/><internalId>500</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
      <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020653</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00653.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00653'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP05020439</srcid><srcstatus/><internalId>14</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020591</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00591.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00591'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP05020440</srcid><srcstatus/><internalId>15</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>

    <specobject>
      <id>ASR_E2EP05020654</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>2</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00654.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00654'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
      <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP05020437</srcid><srcstatus/><internalId>12</internalId></linkedfrom></coveredby></needscov>
      <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_01102_P05Forward_WriteCounter_FS_Repeated</srcid><srcstatus/><internalId>498</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01103_P05Forward_WriteCounter_FS_WrongSeq</srcid><srcstatus/><internalId>499</internalId></linkedfrom><linkedfrom><srcid>TS_E2EP05_ConTest_01104_P05Forward_WriteDataID</srcid><srcstatus/><internalId>500</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>

     <specobject>
      <id>ASR_E2EP05020601</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       See AUTOSAR PRS, Design Item PRS_E2E_00601.
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00601'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP05020453</srcid><srcstatus/><internalId>24</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>ASR_E2E020597</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>

    <!-- E2EP05 - Generalized Part Requirements -->

    <specobject>
      <id>ASR_E2EP050201205</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01205
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01205'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201206</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01206
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01206'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201207</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01207
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01207'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201209</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01209
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01209'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201209</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201210</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01210
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01210'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201211</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01211
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01211'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201211</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201212</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01212
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01212'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201212</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201213</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01213
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01213'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201213</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201214</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01214
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01214'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201214</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201215</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01215
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01215'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201216</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01216
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01216'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201216</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201217</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01217
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01217'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201218</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01218
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01218'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201218</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201228</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01228
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01228'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201219</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01219
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01219'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>


    <specobject>
      <id>ASR_E2EP050201220</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01220
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01220'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201220</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201221</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01221
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01221'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201222</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01222
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01222'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201222</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201223</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01223
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01223'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201224</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01224
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01224'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201225</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01225
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01225'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201226</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01226
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01226'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201227</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01227
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01227'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201227</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201250</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01250
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01250'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201250</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201251</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01251
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01251'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201251</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201252</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01252
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01252'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201252</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>

    <!-- E2E Profiles for Methods - Generalized Part Requirements -->

    <specobject>
      <id>ASR_E2EP050201156</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01156
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01156'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201157</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01157
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01157'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201159</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01159
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01159'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201160</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01160
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01160'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201161</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01161
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01161'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201162</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01162
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01162'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201163</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01163
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01163'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201203</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01203
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01203'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201164</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01164
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01164'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201165</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01165
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01165'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201166</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01166
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01166'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201167</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01167
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01167'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201169</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01169
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01169'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201169</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201170</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01170
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01170'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201171</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01171
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01171'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201172</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01172
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01172'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201173</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01173
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01173'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201174</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01174
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01174'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201175</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01175
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01175'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201176</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01176
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01176'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201177</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01177
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01177'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201178</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01178
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01178'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201179</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01179
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01179'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201179</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201180</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01180
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01180'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201180</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201181</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01181
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01181'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201182</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01182
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01182'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201183</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01183
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01183'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201184</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01184
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01184'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201185</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01185
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01185'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201186</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01186
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01186'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201187</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01187
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01187'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201187</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201188</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01188
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01188'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201189</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01189
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01189'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201189</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201190</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01190
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01190'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201191</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01191
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01191'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201192</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01192
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01192'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201192</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201193</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01193
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01193'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201193</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201194</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01194
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01194'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201194</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201195</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01195
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01195'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201196</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01196
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01196'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201197</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01197
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01197'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201198</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01198
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01198'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201199</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01199
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01199'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201200</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01200
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01200'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050201201</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01201
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_01201'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0201201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050200739</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00739
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00739'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0200739</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050200743</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00743
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00743'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0200743</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>

    <specobject>
      <id>ASR_E2EP050200677</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00677
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00677'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_ConTest_02000_P05CheckStatus_Ok</srcid><srcstatus/><internalId>447</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>
    
    <specobject>
      <id>ASR_E2EP050206300</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_CONSTR_06300
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_CONSTR_06300'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0206300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>
    
    <specobject>
      <id>ASR_E2EP050206303</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_CONSTR_06303
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_CONSTR_06303'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is not applicable</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E0206303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>

    <!-- PRS UC Requirements -->

    <specobject>
      <id>ASR_E2EP0502UC01204</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_01204
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_01204'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC01204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC01158</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_01158
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_01158'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC01158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC01168</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_01168
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_01168'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC01168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00463</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00463
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00463'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00239</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00239
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00239'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00239</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00238</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00238
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00238'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00238</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00606</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00606
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00606'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00606</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00325</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00325
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00325'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00325</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00235</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00235
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00235'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00235</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00236</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00236
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00236'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00236</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00170</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00170
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00170'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00171</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00171
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00171'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00062</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00062
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00062'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00063</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00063
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00063'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00320</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00320
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00320'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00320</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00173</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00173
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00173'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00055</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00055
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00055'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00071</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00071
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00071'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>

    <specobject>
      <id>ASR_E2EP0502UC00741</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_USE_00741
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_USE_00741'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2E02UC00741</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <!--
        Top Level requirements motivated by the Product Description
    -->

    <specobject>
      <id>E2EP05.top.001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EP05 module shall implement a 8 bit sequence counter,
        explicitly sent in the message header.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP05020438</srcid><srcstatus/><internalId>13</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020439</srcid><srcstatus/><internalId>14</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020446</srcid><srcstatus/><internalId>16</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020447</srcid><srcstatus/><internalId>17</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020448</srcid><srcstatus/><internalId>18</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020585</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020449</srcid><srcstatus/><internalId>20</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020450</srcid><srcstatus/><internalId>21</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020451</srcid><srcstatus/><internalId>22</internalId></linkedfrom><linkedfrom><srcid>EB_E2EP05020472</srcid><srcstatus/><internalId>114</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020397</srcid><srcstatus/><internalId>118</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020403</srcid><srcstatus/><internalId>122</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020469</srcid><srcstatus/><internalId>124</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020405</srcid><srcstatus/><internalId>125</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020409</srcid><srcstatus/><internalId>128</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020639</srcid><srcstatus/><internalId>129</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020620</srcid><srcstatus/><internalId>131</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020411</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020413</srcid><srcstatus/><internalId>135</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020416</srcid><srcstatus/><internalId>137</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020652</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020653</srcid><srcstatus/><internalId>139</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>

    <specobject>
      <id>E2EP05.top.002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EP05 module shall implement a 16 bit data ID used for CRC calculation.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP05020437</srcid><srcstatus/><internalId>12</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020446</srcid><srcstatus/><internalId>16</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020585</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020449</srcid><srcstatus/><internalId>20</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020399</srcid><srcstatus/><internalId>119</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020403</srcid><srcstatus/><internalId>122</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020469</srcid><srcstatus/><internalId>124</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020639</srcid><srcstatus/><internalId>129</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020411</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020416</srcid><srcstatus/><internalId>137</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020654</srcid><srcstatus/><internalId>141</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>

    <specobject>
      <id>E2EP05.top.003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EP05 module shall implement a 16 bit CRC calculation.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP05020446</srcid><srcstatus/><internalId>16</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020585</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020449</srcid><srcstatus/><internalId>20</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020400</srcid><srcstatus/><internalId>120</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020401</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020403</srcid><srcstatus/><internalId>122</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020469</srcid><srcstatus/><internalId>124</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020406</srcid><srcstatus/><internalId>126</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020407</srcid><srcstatus/><internalId>127</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020639</srcid><srcstatus/><internalId>129</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020621</srcid><srcstatus/><internalId>132</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020411</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020414</srcid><srcstatus/><internalId>136</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020416</srcid><srcstatus/><internalId>137</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>

    <!--
        Top Level requirements motivated by module specific behavior
    -->

    <specobject>
      <id>E2EP05.top.004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EP05 module shall implement error indication and error states
        to indicate malfunction to the SWC.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP05020011</srcid><srcstatus/><internalId>6</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020047</srcid><srcstatus/><internalId>8</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020440</srcid><srcstatus/><internalId>15</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020446</srcid><srcstatus/><internalId>16</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020447</srcid><srcstatus/><internalId>17</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020448</srcid><srcstatus/><internalId>18</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020585</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020449</srcid><srcstatus/><internalId>20</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020450</srcid><srcstatus/><internalId>21</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020451</srcid><srcstatus/><internalId>22</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020452</srcid><srcstatus/><internalId>23</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020453</srcid><srcstatus/><internalId>24</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020454</srcid><srcstatus/><internalId>25</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020012</srcid><srcstatus/><internalId>115</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020673</srcid><srcstatus/><internalId>116</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020403</srcid><srcstatus/><internalId>122</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020639</srcid><srcstatus/><internalId>129</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020411</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020416</srcid><srcstatus/><internalId>137</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020591</srcid><srcstatus/><internalId>140</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020601</srcid><srcstatus/><internalId>142</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>

    <specobject>
      <id>E2EP05.top.005</id>
      <status>rejected</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EP05 module shall support client-server communication via methods.
      </description>
      <comment>This requirement is not applicable.
        AUTOSAR does not specify a profile E2EP05m and methods for client-server communication are not supported.
      </comment>
      <providescoverage>
        <provcov>
          <linksto>E2E.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

      <specobject>
         <id>E2E.SWS_E2EXf_00102</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            In-place E2EXf_&lt;transformerId&gt; shall perform the following
            two precondition checks, without continuing further processing:
             1.  (buffer == NULL)
                 ||
                 (buffer != NULL &amp;&amp; inputBufferLength &lt;
                  EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  bufferLength == NULL.
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(buffer == NULL &amp;&amp; inputBufferLength != 0)' to '(buffer == NULL)'
            in point 1, see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00102.P05</srcid><srcstatus/><internalId>39</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00106</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            Out-of-place E2EXf_&lt;transformerId&gt; shall perform the
            following three precondition checks, without continuing further processing:
             1.  (inputBuffer == NULL)
                 ||
                 (inputBuffer != NULL &amp;&amp; inputBufferLength &lt;
                 EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  bufferLength == NULL
             3.  buffer == NULL
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer == NULL &amp;&amp; inputBufferLength != 0)' to '(inputBuffer == NULL)'
            in point 1, see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00106.P05</srcid><srcstatus/><internalId>40</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00108</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0),
            in-place E2EXf_&lt;transformerId&gt; shall copy the amount upper HeaderBitsToShiftbits,
            in parameter buffer, with starting offset of BufferProperties.headerLength,
            in direction left by "distance" of BufferProperties.headerLength.(RS_E2E_08538)
         </description>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
            Incorporated Bugzilla RfC 75163:
            Rewrite '(buffer != NULL &amp;&amp; EndToEndTransformationDescription.upperHeaderBitsToShift
            &gt; 0)' to '(EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00108.P05</srcid><srcstatus/><internalId>41</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00109</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0), out-of-place
            E2EXf_&lt;transformerId&gt; shall copy the first upperHeaderBitsToShift bits from
            inputBuffer to buffer, and then copy the remaining part of inputBuffer (i.e. starting with
            offset upperHeaderBitsToShift) to parameter buffer starting with the destination offset
            of (upperHeaderBitsToShift+ BufferProperties.headerLength). (RS_E2E_08538)
         </description>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)' to
            '(EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00109.P05</srcid><srcstatus/><internalId>42</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00115</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), out-of-place
            E2EXf_&lt;transformerId&gt; shall copy inputBuffer to buffer starting with the
            destination offset of BufferProperties.headerLength. (RS_E2E_08538)
         </description>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift == 0)' to
            '(EndToEndTransformationDescription.upperHeaderBitsToShift == 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00115.P05</srcid><srcstatus/><internalId>43</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00111</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            E2EXf_&lt;transformerId&gt; shall set
            *bufferLength = inputBufferLength + BufferProperties.headerLength/8.
            (RS_E2E_08538)
         </description>
         <comment>
            Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
            BufferProperties.headerLength'.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00111.P05</srcid><srcstatus/><internalId>44</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00139</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02, the function E2EXf_&lt;transformerId&gt; shall perform a check of
            the *bufferLength (after the computation of *bufferLength):
            If (*bufferLength != config-&gt;DataLength/8), then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR, i.e. without calling an E2E Library function.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00139.P05</srcid><srcstatus/><internalId>45</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00107</id>
         <status>approved</status> <!-- draft in R22-11 -->
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            If DataTransformationStatusForwarding is set to no TransformerStatusForwarding and PXX
            is P01, P02, P04, P05, P06, P07, P08, P11, P22 or P44,
            The function E2EXf_&lt;transformerId&gt;() shall invoke
            E2E_PXXProtect(), passing to that function the appropriate Config and State
            structures (see [SWS_E2EXf_00125] and [SWS_E2EXf_00126]) that are associated
            with &lt;transformerId&gt;, as well as buffer and bufferLength
            (only for P04, P05, P06, P07, P08 ,P11 ,P22 and P44) that were updated in above
            requirements SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.
            (RS_E2E_08538)
         </description>
         <comment>
            ForwardStatus feature added in R22-11.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00107.P05</srcid><srcstatus/><internalId>46</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00018</id>
         <status>approved</status> <!-- draft in R22-11 -->
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            In case E2E_PXXProtect() and E2E_PXXForward() returns E2E_E_OK, then E2EXf_&lt;transformerId&gt; shall
            return E_OK, otherwise E2EXf_&lt;transformerId&gt; shall return
            E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <comment>
            ForwardStatus feature added in R22-11.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00018.P05</srcid><srcstatus/><internalId>47</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00105</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            In-place E2EXf_Inv_&lt;transformerId&gt; shall perform the
            following two precondition checks, without continuing further processing:
             1.  (buffer == NULL &amp;&amp; inputBufferLength != 0)
                 ||
                 (buffer != NULL &amp;&amp; inputBufferLength &lt; BufferProperties.headerLength/8u +
                 EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  bufferLength == NULL.
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00105.P05</srcid><srcstatus/><internalId>48</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00103</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            Out-of-place E2EXf_Inv_&lt;transformerId&gt; shall perform the
            following three precondition checks, without continuing further processing:
             1.  (inputBuffer == NULL &amp;&amp; inputBufferLength != 0)
                 ||
                 (inputBuffer != NULL &amp;&amp; inputBufferLength &lt;
                 BufferProperties.headerLength/8u +
                 EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  If (bufferLength == NULL)
             3.  If (buffer == NULL).
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00103.P05</srcid><srcstatus/><internalId>49</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00140</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            For PXX = 01 or 02 (i.e. for profile 1 and 2), the out-of-place
            function E2EXf_Inv_&lt;transformerId&gt; shall
             1.  if(inputBuffer == NULL and inputBufferLength == 0), then
                 -  variable NewDataAvailable of state object of type
                    E2E_PXXCheckStateType (see [SWS_E2EXf_00125]) associated with
                    &lt;transformerId&gt; shall be set to FALSE
             2.  else if (inputBufferLength == config-&gt;DataLength/8), then
                 -  variable NewDataAvailable of state object of type
                    E2E_PXXCheckState Type (see [SWS_E2EXf_00125]) associated with
                    &lt;transformerId&gt; shall be set to TRUE.
             3.  else return E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00140.P05</srcid><srcstatus/><internalId>50</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00123</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02 (i.e. for profiles 1 and 2), the out-of-place function
            E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that
            function:
              -  config,
              -  state,
              -  data
            Concerning pointer to data: if(inputBuffer == NULL and inputBufferLength == 0), then
            it shall pass a pointer to a 1-byte variable of E2E transformer, otherwise it shall pass
            inputBuffer.(RS_E2E_08538)
          </description>
          <comment>
            Incorporated RfC 70069
            'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=70069.
            For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient to
            have a valid pointer to data. From the dummy variable where it points to is never read. The
            size of the variable where it points to is considered as an implementation detail and thus
            not important for the fulfillment of this requirement.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00123.P05</srcid><srcstatus/><internalId>51</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00141</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02 (i.e. for profiles 1 and 2), the in-place
            function E2EXf_Inv_&lt;transformerId&gt; shall
            1.  If(buffer == NULL and inputBufferLength == 0), then
                - variable NewDataAvailable of state object of type
                   E2E_PXXCheckStateType (see [SWS_E2EXf_00125]) associated with
                   &lt;transformerId&gt; shall be set to FALSE.
            2.  Else if (inputBufferLength == config-&gt;DataLength/8), then
                - variable NewDataAvailable of state object of type E2E_PXXCheckState
                  Type (see [SWS_E2EXf_00125]) associated with &lt;transformerId&gt; shall
                  be set to TRUE.
            3.  Else return E_SAFETY_HARD_RUNTIMEERROR.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00141.P05</srcid><srcstatus/><internalId>52</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00124</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02 (i.e. for profiles 1 and 2), the in-place function
            E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that
            function:
              -  Config,
              -  State,
              -  Data
            Concerning pointer to Data: if(buffer == NULL and inputBufferLength == 0), then it shall
            pass a pointer to a 1-byte variable of E2E transformer, otherwise it shall pass buffer.
            (RS_E2E_08538)
         </description>
         <comment>
            Incorporated RfC 70069
            'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=70069.
            For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient to
            have a valid pointer to data. From the dummy variable where it points to is never read. The
            size of the variable where it points to is considered as an implementation detail and thus
            not important for the fulfillment of this requirement.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00124.P05</srcid><srcstatus/><internalId>53</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00142</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If configuration parameter profileBehavior is PRE_R4_2, then
            for PXX = 01 or 02, E2EXf_Inv_&lt;transformerId&gt;() shall set the variable
            MaxDeltaCounter of the state object to the value of variable MaxDeltaCounterInit of
            the corresponding configuration object. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00142.P05</srcid><srcstatus/><internalId>54</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00104</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 04, 05, 06, 07, 11, 22: the function
            E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that function:
              -  config,
              -  state,
              -  data length: inputBufferLength
            pointer to data: inputBuffer (out-of-place version) or buffer (in-place
            version). (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00104.P05</srcid><srcstatus/><internalId>55</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00029</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            The function E2EXf_Inv_&lt;transformerId&gt; shall invoke
            E2E_PXXMapStatusToSM(), passing to that function the return value of E2E_PXXCheck
            and the profiles check Status (variable Status of state object of type
            E2E_PXXCheckStateType, see [SWS_E2EXf_00125]), to obtain the profile-
            independent check status. For P1/P2 mapping functions, there is an additional call
            parameter profileBehavior:
            -  if configuration parameter profileBehavior is R4_2, then E2E_PXXMapStatusToSM()
               shall be invoked with the call parameter profileBehavior = 1
            -  if configuration parameter profileBehavior is PRE_R4_2, then
               E2E_PXXMapStatusToSM() shall be invoked with call parameter profileBehavior = 0
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00029.P05</srcid><srcstatus/><internalId>56</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00028</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            The function E2EXf_Inv_&lt;transformerId&gt; shall invoke the
            E2E_SMCheck() function, passing to that function the configuration object of type
            E2E_SMConfigType (see [SWS_E2EXf_00126] and [SWS_E2EXf_00088])and state
            object of type E2E_SMCheckStateType (see [SWS_E2EXf_00125]) that are associated
            with &lt;transformerId&gt;, plus the profile-independent check status that was computed
            by E2E_PXXMapStatusToSM() in SWS_E2EXf_00029.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00028.P05</srcid><srcstatus/><internalId>57</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00027</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            If E2E_SMCheck() returns E2E_E_OK and disableEndToEndStateMachine is FALSE, then:
            - the high nibble of the return
              of the function E2EXf_Inv_&lt;transformerId&gt; shall be set to the low nibble
              of the state of the state machine (member SMState of object of type
              E2E_SMStateType that is associated with &lt;transformerId&gt;, see
              [SWS_E2EXf_00125]).
            - The low nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt;
              shall  be set to the low nibble of the profile-independent check status
              of type E2E_PCheckStatusType.
              If E2E_SMCheck() does not return E2E_E_OK, the return value shall be
              E_SAFETY_SOFT_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00027.P05</srcid><srcstatus/><internalId>58</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00112</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (buffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0), in-place
            E2EXf_Inv_&lt;transformerId&gt; shall copy the first upperHeaderBitsToShift
            bits, in parameter buffer, in direction right by 'distance' of
            BufferProperties.headerLength.(RS_E2E_08538)
         </description>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00112.P05</srcid><srcstatus/><internalId>59</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00113</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0),
            out-of-place E2EXf_Inv_&lt;transformerId&gt; shall copy the first
            upperHeaderBitsToShift bits from inputBuffer to buffer, and then copy the
            remaining part of inputBuffer skipping E2E header (i.e. starting with
            offset upperHeaderBitsToShift+BufferProperties.headerLength) to parameter
            buffer starting with the destination offset of
            (upperHeaderBitsToShift).(RS_E2E_08538)
         </description>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00113.P05</srcid><srcstatus/><internalId>60</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00116</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift == 0),
            out-of-place E2EXf_Inv_&lt;transformerId&gt; shall copy inputBuffer starting
            with the offset of BufferProperties.headerLength, to
            buffer.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00116.P05</srcid><srcstatus/><internalId>61</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00169</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If disableEndToEndStateMachine is to TRUE,
            - The high nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt; shall
              be set to 0x6.
            - The low nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt; shall
              be set to the low nibble of the profile-independent check status of type
              E2E_PCheckStatusType. (RS_E2E_08538)
         </description>
         <comment>
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00169.P05</srcid><srcstatus/><internalId>76</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00114</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If inputBufferLength == 0, then E2EXf_Inv_&lt;transformerId&gt; shall set
            *bufferLength = 0, otherwise it shall set
            *bufferLength = inputBufferLength - BufferProperties.headerLength/8.
            (RS_E2E_08538)
         </description>
         <comment>
            Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
            BufferProperties.headerLength' and
            RfC 69321 'Correction of calculation of bufferLength'.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00114.P05</srcid><srcstatus/><internalId>62</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00167</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server-Communication on the server side, if the return value ret equals
            to E_SAFETY_*_ERR, the value shall be overwritten to E_E2E_HARD_SAFETY_ERR.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00167.P05</srcid><srcstatus/><internalId>63</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00037</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            Mandatory Interfaces
            API function         Description
            E2E_P01Check           Checks the Data received using the E2E profile 1. This includes CRC
                                   calculation, handling of Counter and Data ID.
            E2E_P01CheckInit       Initializes the check state
            E2E_P01Forward (draft) Protects data which is forwarded by using the E2E profile 01.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P01MapStatusToSM   The function maps the check status of Profile 1 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 1 delivers a more fine-granular status, but this is not
                                   relevant for the E2E state machine.
            E2E_P01Protect         Protects the array/buffer to be transmitted using the E2E profile 1.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P01ProtectInit     Initializes the protection state.
            E2E_P02Check           Check the array/buffer using the E2E profile 2. This includes checksum
                                   calculation, handling of sequence counter and Data ID.
            E2E_P02CheckInit       Initializes the check state
            E2E_P02Forward (draft) Protects data which is forwarded by using the E2E profile 02.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P02MapStatusToSM   The function maps the check status of Profile 2 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 2 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P02Protect         Protects the array/buffer to be transmitted using the E2E profile 2.
                                   This includes checksum calculation, handling of sequence counter and
                                   Data ID.
            E2E_P02ProtectInit     Initializes the protection state.
            E2E_P04Check           Checks the Data received using the E2E profile 4. This includes CRC
                                   calculation, handling of Counter and Data ID.
            E2E_P04CheckInit       Initializes the check state
            E2E_P04Forward (draft) Protects data which is forwarded by using the E2E profile 04.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P04MapStatusToSM   The function maps the check status of Profile 4 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 4 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P04Protect         Protects the array/buffer to  be transmitted using the E2E profile 4.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P04ProtectInit     Initializes the protection state.
            E2E_P04mCheckInit      Initializes the check state
            E2E_P04mForward (draft)Protects data which is forwarded by using the E2E profile 04m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P04mMapStatusToSM  The function maps the check status of Profile 4m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 4m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P04mProtect        Protects the array/buffer to  be transmitted using the E2E profile 4.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P04mProtectInit    Initializes the protection state.
            E2E_P04mSinkCheck      Checks the Data received using the E2E profile 4m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
            E2E_P04mSourceCheck    Checks the Data received using the E2E profile 4m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
            E2E_P05Check           Checks the Data received using the E2E profile 5. This includes CRC
                                   calculation, handling of Counter. The function checks only one single
                                   data in one cycle, it does not determine/compute the accumulated state
                                   of the communication link.
            E2E_P05CheckInit       Initializes the check state
            E2E_P05Forward (draft) Protects data which is forwarded by using the E2E profile 05.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P05MapStatusToSM   The function maps the check status of Profile 5 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 5 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P05Protect         Protects the array/buffer to be transmitted using the E2E profile 5. This
                                   includes checksum calculation, handling of counter.
            E2E_P05ProtectInit     Initializes the protection state.
            E2E_P06Check           Checks the Data received using the E2E profile 6. This includes CRC
                                   calculation, handling of Counter. The function checks only one single
                                   data in one cycle, it does not determine/compute the accumulated state
                                   of the communication link.
            E2E_P06CheckInit       Initializes the check state
            E2E_P06Forward (draft) Protects data which is forwarded by using the E2E profile 06.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P06MapStatusToSM   The function maps the check status of Profile 6 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 6 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P06Protect         Protects the array/buffer to be transmitted using the E2E profile 6.
                                   This includes checksum calculation, handling of counter.
            E2E_P06ProtectInit     Initializes the protection state.
            E2E_P07Check           Checks the Data received using the E2E profile 7. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P07CheckInit       Initializes the check state
            E2E_P07Forward (draft) Protects data which is forwarded by using the E2E profile 07.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P07MapStatusToSM   The function maps the check status of Profile 7 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 7 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P07Protect         Protects the array/buffer to be transmitted using the E2E profile 7.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P07ProtectInit     Initializes the protection state.
            E2E_P07mCheckInit      Initializes the check state
            E2E_P07mForward (draft)Protects data which is forwarded by using the E2E profile 07m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P07mMapStatusToSM  The function maps the check status of Profile 7m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 7m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P07mProtect        Protects the array/buffer to  be transmitted using the E2E profile 7m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P07mProtectInit    Initializes the protection state.
            E2E_P07mSinkCheck      Checks the Data received using the E2E profile 7m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P07mSourceCheck    Checks the Data received using the E2E profile 7m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P07Check           Checks the Data received using the E2E profile 7. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P07CheckInit       Initializes the check state
            E2E_P07Forward (draft) Protects data which is forwarded by using the E2E profile 07.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P07MapStatusToSM   The function maps the check status of Profile 7 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 7 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P07Protect         Protects the array/buffer to be transmitted using the E2E profile 7.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P07ProtectInit     Initializes the protection state.
            E2E_P07mCheckInit      Initializes the check state
            E2E_P07mForward (draft)Protects data which is forwarded by using the E2E profile 07m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P07mMapStatusToSM  The function maps the check status of Profile 7m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 7m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P07mProtect        Protects the array/buffer to  be transmitted using the E2E profile 7m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P07mProtectInit    Initializes the protection state.
            E2E_P07mSinkCheck      Checks the Data received using the E2E profile 7m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P07mSourceCheck    Checks the Data received using the E2E profile 7m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P08Check           Checks the Data received using the E2E profile 8. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P08CheckInit       Initializes the check state
            E2E_P08Forward (draft) Protects data which is forwarded by using the E2E profile 08.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P08MapStatusToSM   The function maps the check status of Profile 8 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 8 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P08mCheckInit      Initializes the check state
            E2E_P08mForward (draft)Protects data which is forwarded by using the E2E profile 08m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P08mMapStatusToSM  The function maps the check status of Profile 8m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 8m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P08mProtect        Protects the array/buffer to  be transmitted using the E2E profile 8m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P08mProtectInit    Initializes the protection state.
            E2E_P08mSinkCheck      Checks the Data received using the E2E profile 8m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P08mSourceCheck    Checks the Data received using the E2E profile 8m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P08Check           Checks the Data received using the E2E profile 8. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P08CheckInit       Initializes the check state
            E2E_P08Forward (draft) Protects data which is forwarded by using the E2E profile 08.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P08MapStatusToSM   The function maps the check status of Profile 8 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 8 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P08Protect         Protects the array/buffer to be transmitted using the E2E profile 8.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P08ProtectInit     Initializes the protection state.
            E2E_P08mCheckInit      Initializes the check state
            E2E_P08mForward (draft)Protects data which is forwarded by using the E2E profile 08m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P08mMapStatusToSM  The function maps the check status of Profile 8m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 8m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P08mProtect        Protects the array/buffer to  be transmitted using the E2E profile 8m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P08mProtectInit    Initializes the protection state.
            E2E_P08mSinkCheck      Checks the Data received using the E2E profile 8m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P08mSourceCheck    Checks the Data received using the E2E profile 8m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P08Protect         Protects the array/buffer to be transmitted using the E2E profile 8.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P08ProtectInit     Initializes the protection state.
            E2E_P11Check           Checks the Data received using the E2E profile 11. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P11CheckInit       Initializes the check state
            E2E_P11Forward (draft) Protects data which is forwarded by using the E2E profile 11.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P11MapStatusToSM   The function maps the check status of Profile 11 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 11 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P11Protect         Protects the array/buffer to be transmitted using the E2E profile 11.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P11ProtectInit     Initializes the protection state.
            E2E_P22Check           Checks the Data received using the E2E profile 22. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P22CheckInit       Initializes the check state
            E2E_P22Forward (draft) Protects data which is forwarded by using the E2E profile 22.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P22MapStatusToSM   The function maps the check status of Profile 22 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 22 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P22Protect         Protects the array/buffer to be transmitted using the E2E profile 22.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P22ProtectInit     Initializes the protection state.
            E2E_P44Check           Checks the Data received using the E2E profile 44. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P44CheckInit       Initializes the check state
            E2E_P44Forward (draft) Protects data which is forwarded by using the E2E profile 44.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P44MapStatusToSM   The function maps the check status of Profile 44 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 44 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P44mCheckInit      Initializes the check state
            E2E_P44mForward (draft)Protects data which is forwarded by using the E2E profile 44m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P44mMapStatusToSM  The function maps the check status of Profile 44m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 44m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P44mProtect        Protects the array/buffer to  be transmitted using the E2E profile 44m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P44mProtectInit    Initializes the protection state.
            E2E_P44mSinkCheck      Checks the Data received using the E2E profile 44m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P44mSourceCheck    Checks the Data received using the E2E profile 44m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P44Check           Checks the Data received using the E2E profile 44. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P44CheckInit       Initializes the check state
            E2E_P44Forward (draft) Protects data which is forwarded by using the E2E profile 44.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P44MapStatusToSM   The function maps the check status of Profile 44 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 44 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P44Protect         Protects the array/buffer to be transmitted using the E2E profile 44.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P44ProtectInit     Initializes the protection state.
            E2E_P44mCheckInit      Initializes the check state
            E2E_P44mForward (draft)Protects data which is forwarded by using the E2E profile 44m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P44mMapStatusToSM  The function maps the check status of Profile 44m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 44m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P44mProtect        Protects the array/buffer to  be transmitted using the E2E profile 44m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P44mProtectInit    Initializes the protection state.
            E2E_P44mSinkCheck      Checks the Data received using the E2E profile 44m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P44mSourceCheck    Checks the Data received using the E2E profile 44m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P44Protect         Protects the array/buffer to be transmitted using the E2E profile 44.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P44ProtectInit     Initializes the protection state.
            E2E_SMCheck            Checks the communication channel. It determines if the data can
                                   be used for safety-related application, based on history of
                                   checks performed by a corresponding E2E_P0XCheck() function.
            E2E_SMCheckInit        Initializes the state machine.
            (RS_E2E_08538)
         </description>
         <comment>
            ForwardStatus feature added in R22-11.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00037.P05</srcid><srcstatus/><internalId>64</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>

      <specobject>
         <id>E2E.SWS_Xfrm_00108</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsTo
            Shift &gt; 0), in-place E2EXf_&lt;transformerId&gt; shall copy the amount upper HeaderBits
            ToShiftbits, in parameter buffer, with starting offset of BufferProperties.headerLength,
            in direction left by "distance" of BufferProperties.headerLength.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_Xfrm_00108.P05</srcid><srcstatus/><internalId>65</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>
      
      <specobject>
         <id>E2E.SWS_Xfrm_00032</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            A safety transformer shall return one of the errors shown in Table below
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_OK                       | 0x00       | -          | The communication is safe.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_REP         | 0x01       | Soft       | The data are valid according to
                                                               safety, although data with a re-
                                                               peated counter were received.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_SEQ         | 0x02       | Soft       | The data are valid according to
                                                               safety, although a counter jump
                                                               occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_ERR         | 0x03       | Soft       | The data are valid according to
                                                               safety, although the check itself
                                                               failed.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_NND         | 0x05       | Soft       | Communication is valid according to
                                                               safety, but no new data received.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_OK         | 0x20       | Soft       | No data are available since ini-
                                                               tialization of transformer.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_REP        | 0x21       | Soft       | No data are available since
                                                               initialization of transformer be-
                                                               cause a repeated counter was
                                                               received.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_SEQ        | 0x22       | Soft       | No data are available since ini-
                                                               tialization of transformer and a
                                                               counter jump occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_ERR        | 0x23       | Soft       | No data are available since ini-
                                                               tialization of transformer. There-
                                                               fore the check failed.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_NND        | 0x25       | Soft       | No data are available since
                                                               initialization of transformer.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_OK           | 0x30       | Soft       | Not enough data were received
                                                               to use them.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_REP          | 0x31       | Soft       | Not enough data were received
                                                               to use them but some with a re-
                                                               peated counter were received.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_SEQ          | 0x32       | Soft       | Not enough data were received
                                                               to use them, additionally a
                                                               counter jump occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_ERR          | 0x33       | Soft       | Not enough data were received
                                                               to use them, additionally a check
                                                               failed.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_NND          | 0x35       | Soft       | Not enough data were received to use
                                                               them, additionally no new data
                                                               received.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_OK        | 0x40       | Soft       | The data are invalid and cannot
                                                               be used.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_REP       | 0x41       | Soft       | The data are invalid and can-
                                                               not be used because a repeated
                                                               counter was received.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_SEQ       | 0x42       | Soft       | The data are invalid and cannot
                                                               be used due to a counter jump.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_ERR       | 0x43       | Soft       | The data are invalid and cannot
                                                               be used because a check failed.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_NND       | 0x45       | Soft       | Communication is invalid according to
                                                               safety and no new data received
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_OK           | 0x60       | Soft       | Communication is safe, Statemachine
                                                               is not active.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_REP          | 0x61       | Soft       | Data with a repeated counter were
                                                               received. E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_SEQ          | 0x62       | Soft       | A counter jump occurred.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_ERR          | 0x63       | Soft       | The data are invalid and cannot
                                                               be used because a check failed.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_NND          | 0x65       | Soft       | No new data available.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_DEC          | 0x66       | Soft       | Disabled E2E State machine and
                                                               disabled E2E check.
        -----------------------------------------------------------------------------
        E_SAFETY_SOFT_RUNTIMEERROR | 0x77       | Soft       | A runtime error occurred, safety
                                                               properties could not be checked
                                                               (state or status cannot be deter-
                                                               mined) but non-protected output
                                                               data could be produced nonethe-
                                                               less.
        -----------------------------------------------------------------------------
        E_E2E_HARD_SAFETY_ERR      | 0x8d       | Hard       | Not further specified E2E error
        -----------------------------------------------------------------------------
        E_SAFETY_HARD_RUNTIMEERROR | 0xFF       | Hard       | A runtime error occurred, safety
                                                               properties could not be checked
                                                               and NO output data could be pro-
                                                               duced.
        -----------------------------------------------------------------------------
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_Xfrm_00032.P05</srcid><srcstatus/><internalId>66</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>

      <specobject>
         <id>E2E.SWS_Xfrm_00051</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If a transformer returns a hard error, it shall leave the output buffer unchanged
            (SRS_Xfrm_00004)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_Xfrm_00051.P05</srcid><srcstatus/><internalId>67</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00047</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>2</version>
         <description>
            Imported Types
            Module:Imported Type
            E2E:
            E2E_P01CheckStateType
            E2E_P01CheckStatusType
            E2E_P01ConfigType
            E2E_P01DataIDMode
            E2E_P01ProtectStateType
            E2E_P02CheckStateType
            E2E_P02CheckStatusType
            E2E_P02ConfigType
            E2E_P02ProtectStateType
            E2E_P04CheckStateType
            E2E_P04CheckStatusType
            E2E_P04ConfigType
            E2E_P04ProtectStateType
            E2E_P04mCheckStateType
            E2E_P04mCheckStatusType
            E2E_P04mConfigType
            E2E_P04mProtectStateType
            E2E_P05CheckStateType
            E2E_P05CheckStatusType
            E2E_P05ConfigType
            E2E_P05ProtectStateType
            E2E_P06CheckStateType
            E2E_P06CheckStatusType
            E2E_P06ConfigType
            E2E_P06ProtectStateType
            E2E_P07CheckStatusType
            E2E_P07CheckStateType
            E2E_P07ConfigType
            E2E_P07ProtectStateType
            E2E_P07mCheckStateType
            E2E_P07mCheckStatusType
            E2E_P07mConfigType
            E2E_P07mProtectStateType
            E2E_P08CheckStateType
            E2E_P08CheckStatusType
            E2E_P08ConfigType
            E2E_P08ProtectStateType
            E2E_P08mCheckStateType
            E2E_P08mCheckStatusType
            E2E_P08mConfigType
            E2E_P08mProtectStateType
            E2E_P11CheckStatusType
            E2E_P11CheckStateType
            E2E_P11ConfigType
            E2E_P11DataIDMode
            E2E_P11ProtectStateType
            E2E_P22CheckStateType
            E2E_P22CheckStatusType
            E2E_P22ConfigType
            E2E_P22ProtectStateType
            E2E_P44CheckStateType
            E2E_P44CheckStatusType
            E2E_P44ConfigType
            E2E_P44ProtectStateType
            E2E_P44mCheckStateType
            E2E_P44mCheckStatusType
            E2E_P44mConfigType
            E2E_P44mProtectStateType
            E2E_PCheckStatusType
            E2E_SMCheckStateType
            E2E_SMConfigType
            E2E_SMStateType
            Std_Types:
            Std_ExtractProtocolHeaderFieldsType
            Std_MessageResultType
            Std_MessageTypeType
            Std_ReturnType
            Std_TransformerForwardCode (draft)
            Std_VersionInfoType
         </description>
         <comment>
            This requirement was adapted for profile E2EP07 and E2EP11 with SWS Release 4.3.0.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00047.P05</srcid><srcstatus/><internalId>74</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00175</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side, if the
            E2E_PXXCheck function returns a value different from E2E_P_OK, the status shall be
            set to E2E_P_ERR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00175.P05</srcid><srcstatus/><internalId>75</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00173</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and
            Profile is P04, P05, P06, P07, P08, P11, P22 or P44, P04m, P07m, P08m, P44m
            state-&gt;Counter of E2EXf_Inv_&lt;transformerId&gt; shall be set to the requestCounter - 1.
            (RS_E2E_08538)
         </description>
         <comment/>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00173.P05</srcid><srcstatus/><internalId>77</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00172</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and Profile is P01 or P02,
            state-&gt;LastValidCounter of E2EXf_Inv_&lt;transformerId&gt; shall be set to the
            requestCounter-1.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00172.P05</srcid><srcstatus/><internalId>78</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00203</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profile P04m, P07m, P08m and P44m both the in-place and the out-of-place
            E2EXf_Inv_&lt;transformerId&gt; on the server-side shall set the e2eCounter element
            of the csTransactionHandle to the value of the local variable receivedRequestCounter.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00203.P05</srcid><srcstatus/><internalId>79</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00202</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profile P04m, P07m, P08m and P44m both the in-place and the out-of-place
            E2EXf_Inv_&lt;transformerId&gt; on the server-side shall set the e2eSourceId element
            of the csTransactionHandle to the value of the local variable sourceID.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00202.P05</srcid><srcstatus/><internalId>80</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00201</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For PXX = P04m, P07m, P08m and P44m: the function E2EXf_Inv_&lt;transformerId&gt; on the
            server-side shall invoke E2E_PXXSinkCheck(), passing to that function:
            - config,
            - state,
            - the local variables messageType, messageResult, and the address of the local variable
            sourceID
            - data length:
              inputBufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
            - pointer to data:
              . inputBuffer + EndToEndTransformationDescription.upperHeaderBitsToShift
              (out-of-place version) or
              . buffer + EndToEndTransformationDescription.upperHeaderBitsToShift (in-place version).
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00201.P05</srcid><srcstatus/><internalId>81</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00200</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For PXX = P04m, P07m, P08m and P44m: the function E2EXf_Inv_&lt;transformerId&gt; on
            the client-side shall invoke E2E_PXXSourceCheck(), passing to that function:
            - config,
            - state,
            - the local variables messageType, messageResult, and the local variable sourceID
            - data length:
              inputBufferLength – EndToEndTransformationDescription.upperHeaderBitsToShift
            - pointer to data:
                . inputBuffer + EndToEndTransformationDescription.upperHeaderBitsToShift
                  (out-of-place version) or
                . buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
                  (in-place version).
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00200.P05</srcid><srcstatus/><internalId>82</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00199</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If extractProtocolHeaderFields() returns something different from E_OK,
            E2EXf_Inv_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00199.P05</srcid><srcstatus/><internalId>83</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00198</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_Inv_&lt;transformerId&gt;
            on the server-side shall call the extractProtocolHeaderFields()
            function passing the inputBuffer, the inputBufferLength,
            the address of local messageType variable,
            and the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00198.P05</srcid><srcstatus/><internalId>84</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00197</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the in-place E2EXf_Inv_&lt;transformerId&gt;
            on the server-side shall call the extractProtocolHeaderFields() function
            passing the buffer, the bufferLength, the address of local messageType variable,
            and the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00197.P05</srcid><srcstatus/><internalId>85</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00196</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place
            and the out-of-place E2EXf_Inv_&lt;transformerId&gt; on the client-side shall
            set a local variable sourceID to the sourceID stored in the configuration
            (see SWS_E2EXf_00126).(RS_E2E_08538).
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00196.P05</srcid><srcstatus/><internalId>86</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00194</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_Inv_&lt;transformerId&gt;
            on the client-side shall call the extractProtocolHeaderFields() function passing the
            inputBuffer, the inputBufferLength, the address of a local variable named messageType,
            and the address of a local variable named messageResult as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00194.P05</srcid><srcstatus/><internalId>87</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00193</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the in-place E2EXf_Inv_&lt;transformerId&gt; on
            the client-side shall call the extractProtocolHeaderFields() function passing
            the buffer, the bufferLength, the address of local messageType variable, and
            the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00193.P05</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00192</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_Inv_&lt;transformerId&gt; shall perform the following additional
            precondition checks, without continuing further processing:
            1. extractProtocolHeaderFields == NULL
            2. csTransactionHandle == NULL.
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00192.P05</srcid><srcstatus/><internalId>89</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00191</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If DataTransformationStatusForwarding is set to transformerStatusForwarding and
            PXX = P04m, P07m, P08m or P44m: The function E2EXf_&lt;transformerId&gt;()
            shall invoke E2E_PXXForward(), passing to that function:
             - the appropriate Config structure (see [SWS_E2EXf_00125]),
             - the appropriate State structure (see [SWS_E2EXf_00126]),
             - the local variables sourceID, messageType, and messageResult
             - buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
             - bufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
            Hereby buffer and bufferLength were updated according to the above requirements
            SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00191.P05</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>

      <specobject>
        <id>E2E.SWS_E2EXf_00168</id>
        <status>approved</status> <!-- draft in R22-11 -->
        <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
        <version>1</version>
        <description>
          If DataTransformationStatusForwarding is set to transformerStatusForwarding and
          PXX is P01, P02, P04, P05, P06, P07, P08, P11, P22 or P44 the function
          E2EXf_&lt;transformerId&gt;() shall invoke E2E_PXXForward(), passing to that function
          the appropriate Config and State structures (see [SWS_E2EXf_00125] and [SWS_E2EXf_00126])
          that are associated with &lt;transformerId&gt;, as well as buffer and bufferLength
          (only for P04, P05, P06, P07, P08, P11, P22 and P44) that were updated in requirements
          SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.
          In addition the parameter ForwardStatus shall be passed to the E2E_PXXForward() function,
          which is provided by the RTE. This parameter is associated with the optional IN parameter
          ForwardStatus from Rte_Write (SWS_Rte_01071), Rte_Send (SWS_Rte_01072),
          Rte_IWrite (SWS_Rte_03744) and Rte_IWriteRef (SWS_Rte_05509)(RS_E2E_08538)
        </description>
        <releases>
          <release>AUTOSAR CP R22-11</release>
        </releases>
        <needscoverage>
          <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00168.P05</srcid><srcstatus/><internalId>91</internalId></linkedfrom></coveredby></needscov>
        <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00190</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If DataTransformationStatusForwarding is set to noTransformerStatusForwarding
            and PXX = P04m, P07m, P08m or P44m the function E2EXf_&lt;transformerId&gt;()
            shall invoke E2E_PXXProtect(), passing to that function:
             - the appropriate Config structure (see [SWS_E2EXf_00125]),
             - the appropriate State structure (see [SWS_E2EXf_00126]),
             - the local variables sourceID, messageType, and messageResult
             - buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
             - bufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
            Hereby buffer and bufferLength were updated according to the requirements
            SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00190.P05</srcid><srcstatus/><internalId>92</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00166</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2E-Transformer is used in a Client-Server Communication and
            Profile is P01, P04, P04m, P05, P06, P07, P07m, P08, P08m, P11, P44 or P44m
            the sequence counter for protecting the response shall be set to requestCounter.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00166.P05</srcid><srcstatus/><internalId>93</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00208</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            The function E2EXf_MapCodeToStatus shall return the values depending on the value of
            forwardedCode.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00208.P05</srcid><srcstatus/><internalId>94</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00165</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2E-Transformer is used for a response in a Client-Server Communication and
            Profile is P02 or P22 the sequence counter used for protecting the response shall
            be set to requestCounter -1. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00165.P05</srcid><srcstatus/><internalId>95</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00189</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_&lt;transformerId&gt; on the server-side shall
            set a local variable named requestCounter to the value of the e2eCounter element
            of the csTransactionHandle. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00189.P05</srcid><srcstatus/><internalId>96</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00188</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_&lt;transformerId&gt;
            on the server-side shall set a local variable sourceID to the value of the e2eSourceId
            element of the csTransactionHandle. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00188.P05</srcid><srcstatus/><internalId>97</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00187</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If extractProtocolHeaderFields() returns something different from E_OK,
            E2EXf_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00187.P05</srcid><srcstatus/><internalId>98</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00186</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_&lt;transformerId&gt;
            on the server-side shall call the extractProtocolHeaderFields() function passing the
            inputBuffer, the inputBufferLength, the address of local messageType variable,
            and the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00186.P05</srcid><srcstatus/><internalId>99</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>

      <specobject>
        <id>E2E.SWS_E2EXf_00185</id>
        <status>approved</status>
        <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
        <version>1</version>
        <description>
           For profiles P04m, P07m, P08m and P44m the in-place E2EXf_&lt;transformerId&gt; on
           the server-side shall call the extractProtocolHeaderFields() function passing the buffer,
           the bufferLength, the address of local messageType variable, and the address of a local
           messageResult variable as parameters.
        </description>
        <releases>
           <release>AUTOSAR CP R22-11</release>
        </releases>
        <needscoverage>
           <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00185.P05</srcid><srcstatus/><internalId>100</internalId></linkedfrom></coveredby></needscov>
        <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00184</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and the out-of-place
            E2EXf_&lt;transformerId&gt; on the client-side shall set a local variable sourceID
            to the sourceID stored in the configuration (see SWS_E2EXf_00126).
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00184.P05</srcid><srcstatus/><internalId>101</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00183</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If extractProtocolHeaderFields() returns something different from E_OK,
            E2EXf_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00183.P05</srcid><srcstatus/><internalId>102</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00181</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the in-place E2EXf_&lt;transformerId&gt;
            on the client-side shall call the extractProtocolHeaderFields() function passing
            the buffer, the bufferLength, the address of local messageType variable, and
            the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00181.P05</srcid><srcstatus/><internalId>103</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00182</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_&lt;transformerId&gt; on
            the client-side shall call the extractProtocolHeaderFields() function passing
            the inputBuffer, the inputBufferLength, the address of a local variable
            named messageType, and the address of a local variable named messageResult as
            parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00182.P05</srcid><srcstatus/><internalId>104</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00171</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2EXf_&lt;transformerId&gt; is used in a Client-Server Communication on the client-side
            and Profile is P01, P04, P05, P06, P07, P08, P11 or P44, P04m, P07m, P08m, P44m
            state-&gt;Counter - 1 shall be stored as requestCounter to be accessed by the
            E2EXf_Inv_&lt;transformerId&gt; for checking the response. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00171.P05</srcid><srcstatus/><internalId>105</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00170</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2EXf_&lt;transformerId&gt; is used in a Client-Server Communication on the client-side
            and Profile is P02 or P22, state-&gt;Counter shall be stored to as requestCounter to be
            accessed by the E2EXf_Inv_&lt;transformerId&gt; for checking the response.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00170.P05</srcid><srcstatus/><internalId>106</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00180</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_&lt;transformerId&gt; shall perform the following
            additional precondition checks, without continuing further processing:
             1. extractProtocolHeaderFields == NULL
             2. csTransactionHandle == NULL.
            If any of above conditions is TRUE, then the function shall
            return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00180.P05</srcid><srcstatus/><internalId>107</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00206</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and Profile is P01 or P02,
            the receivedRequestCounter shall be set to state-&gt;LastValidCounter of
            E2EXf_Inv_&lt;transformerId&gt;.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00206.P05</srcid><srcstatus/><internalId>110</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00207</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and Profile is P04, P05, P06,
            P07, P08, P11, P22, P44, P04m, P07m, P08m or P44m the receivedRequestCounter shall be
            set to state-&gt;Counter of E2EXf_Inv_&lt;transformerId&gt;.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.SWS_E2EXf_00207.P05</srcid><srcstatus/><internalId>111</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>

     <!--
         EB requirements valid for E2E profiles
     -->

      <specobject>
         <id>E2E.EB.SWS_E2EXf_00133</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If the E2E Transformer has not been correctly initialized (which means that
            E2EXf_[_&lt;PartitionId&gt;]_PartitionInit() was not successfully
            called before), then all generated E2E
            Transformer APIs shall immediately return E_SAFETY_HARD_RUNTIMEERROR.
         </description>
         <comment>
            This requirement replaces E2EXf.ASR421.SWS_E2EXf_00133.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.EB.SWS_E2EXf_00133.P05</srcid><srcstatus/><internalId>68</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.InPlace.NoCopying</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If (buffer != NULL) &amp;&amp;
            (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), in-place
            E2EXf_&lt;transformerId&gt; shall keep buffer unchanged.
         </description>
         <comment>
            This requirement is based on requirement E2EXf.ASR421.SWS_E2EXf_00115
            but applied to in-place buffering for sake of completeness.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.EB.Transformer.InPlace.NoCopying.P05</srcid><srcstatus/><internalId>69</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>

      <specobject>
         <id>E2E.EB.SWS_E2EXf_00021</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2EXf_[_&lt;PartitionId&gt;]_PartitionInit() function shall initialize
            all state structures managed by E2E transformer, calling the corresponding
            E2E_Init() method on each state variable.
         </description>
         <comment>
            This requirement replaces E2EXf.ASR421.SWS_E2EXf_00021
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.EB.SWS_E2EXf_00021.P05</srcid><srcstatus/><internalId>71</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>

      <specobject>
         <id>E2E.EB.InvTransformer.InPlace.NoCopying</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If (buffer != NULL) &amp;&amp;
            (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), in-place
            E2EXf_Inv_&lt;transformerId&gt; shall keep buffer unchanged.
         </description>
         <comment>
            This requirement is based on requirement E2EXf.SWS_E2EXf_00116
            but applied to in-place buffering for sake of completeness.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.EB.InvTransformer.InPlace.NoCopying.P05</srcid><srcstatus/><internalId>70</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Server.ProtectStatePtrInputCheck</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In C/S communication, the E2EXf_&lt;transformerId&gt; on server-side shall perform the
            following additional precondition check, without continuing further processing:
            - ProtectStatePtr == NULL_PTR
            If the above condition is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR.
         </description>
         <comment>
            Checking ProtectStatePtr for NULL_PTR is necessary as it is dereferenced
            and set by the RequestCounter of csTransactionHandlePtr-&gt;e2eCounter.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.EB.Transformer.Server.ProtectStatePtrInputCheck.P05</srcid><srcstatus/><internalId>72</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>

      <specobject>
         <id>E2E.EB.InvTransformer.Client.ProtectStatePtrInputCheck</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In C/S communication, the E2EXf_Inv_&lt;transformerId&gt; on client-side shall perform the
            following additional precondition check, without continuing further processing:
            - ProtectStatePtr == NULL_PTR
            If the above condition is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR.
         </description>
         <comment>
            Checking ProtectStatePtr for NULL_PTR is necessary as it is dereferenced
            to set the Counter member of CheckStatesPtr-&gt;PXXmCheckState.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.EB.InvTransformer.Client.ProtectStatePtrInputCheck.P05</srcid><srcstatus/><internalId>73</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Init</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In S/R communication each transformer can be initialized individually.
            While in C/S communication, at client end both non-inverse transformer and
            inverse transformer shall be initialized at the time same.
         </description>
         <comment>
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.Transformer.Init.SR</srcid><srcstatus/><internalId>315</internalId></linkedfrom><linkedfrom><srcid>E2E.EB.Transformer.Init.Client</srcid><srcstatus/><internalId>316</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Init.SR</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In S/R communication each transformer can be initialized individually.
            API used is &lt;transformerId&gt;_Init().
         </description>
         <comment>
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.EB.Transformer.Init.SR.P05</srcid><srcstatus/><internalId>108</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
          <provcov>
            <linksto>E2E.EB.Transformer.Init</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Init.Client</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In C/S communication at client end both non-inverse transformer and
            inverse transformer shall be initialized at the time same.
            API used is &lt;non-inversetransformerId&gt;_&lt;inversetransformerId&gt;_Init().
         </description>
         <comment>
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.EB.Transformer.Init.Client.P05</srcid><srcstatus/><internalId>109</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
        <providescoverage>
          <provcov>
            <linksto>E2E.EB.Transformer.Init</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>ASR_E2E020012</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00012
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00012'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>

    <specobject>
      <id>ASR_E2E020673</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00673
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00673'])"/>
               </para>
            </listitem>
          </itemizedlist>
      </para>
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP05020673</srcid><srcstatus/><internalId>116</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>

    <specobject>
      <id>ASR_E2E020597</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description> See AUTOSAR PRS, Design Item PRS_E2E_00597.
        <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_00597'])"/>
              </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This Requirement is added in R22-11</comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP05020601</srcid><srcstatus/><internalId>142</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>

    <!-- E2E Profiles - Generalized Part Requirements -->

    <specobject>
      <id>ASR_E2E0201205</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01205
         In E2E Profiles, on the sender side, for the first transmission request
         of a data element the counter shall be initialized with 0 and shall be incremented
         by 1 for every subsequent send request. When the counter reaches the maximum
         value, then it shall restart with 0 for the next send request. The maximum value of the
         counter depends on the size of the counter It is 0xFF (8bit counter), 0xFF’FF (16bit
         counter) or 0xFF’FF’FF’FF (32 bit).(RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201205</srcid><srcstatus/><internalId>143</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201206</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01206
         E2E Profiles shall use the CRC functions listed in chapters
         section 6.7, section 6.10, section 6.11, section 6.14, for calculating the CRC.(RS_-
         E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201206</srcid><srcstatus/><internalId>144</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201207</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01207
         The CRC shall be calculated over the entire E2E header (excluding
         the CRC bytes) and over the user data.(RS_E2E_08531)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201207</srcid><srcstatus/><internalId>145</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201209</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01209
         The function E2E_PXXProtect() shall have the overall behavior as
         shown in Figure 3.1.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect"/>.
      </para>
      <figure id="fig_E2E_PXXProtect">
        <title>E2E_PXXProtect</title>
        <inlinegraphic fileref="images/E2E_PXXProtect.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201209</srcid><srcstatus/><internalId>146</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201210</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01210
         The step ”Verify inputs of the protect function” in
         E2E_PXXProtect() shall behave as shown in Figure 3.2.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_Verifyinputs"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_Verifyinputs">
        <title>E2E_PXXProtect Verify inputs</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_Verifyinputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201210</srcid><srcstatus/><internalId>147</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201211</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01211
         The step ”Compute offset” in E2E_PXXProtect(), E2E_PXXForward() and E2E_PXXCheck()
         shall behave as shown in Figure 3.3.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_Computeoffset"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_Computeoffset">
        <title>E2E_PXXProtect,E2E_PXXForward and E2E_PXXCheck Compute OffSet</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_Computeoffset.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201211</srcid><srcstatus/><internalId>148</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201212</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01212
         The step ”Write Length” in E2E_PXXProtect() and E2E_PXXForward()
         shall behave as shown in Figure 3.4.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_E2E_PXXForward_WriteLength"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_E2E_PXXForward_WriteLength">
        <title>E2E_PXXProtect, E2E_PXXForward Write Length</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_E2E_PXXForward_WriteLength.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201212</srcid><srcstatus/><internalId>149</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.007</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201213</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01213
         The step ”Write Counter” in E2E_PXXProtect()
         shall behave as shown in Figure 3.5.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_WriteCounter"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_WriteCounter">
        <title>E2E_PXXProtect Write Counter</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_WriteCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201213</srcid><srcstatus/><internalId>150</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201214</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01214
         The step ”Write DataID” in E2E_PXXProtect()
         shall behave as shown in Figure 3.6.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_WriteDataID"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_WriteDataID">
        <title>E2E_PXXProtect Write DataID</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_WriteDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201214</srcid><srcstatus/><internalId>151</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201215</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01215
         The step ”Compute CRC” in
         E2E_PXXProtect(), E2E_PXXForward() and in E2E_PXXCheck()
         Shall behave as shown in Figure 3.7.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_ComputeCRC"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_ComputeCRC">
        <title>E2E_PXXProtect, E2E_PXXForward and E2E_PXXCheck Compute CRC</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_E2E_PXXForward_E2E_PXXCheck_ComputeCRC.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201215</srcid><srcstatus/><internalId>152</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201216</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01216
         The step ”Write CRC” in E2E_PXXProtect() and
         E2E_PXXForward() shall behave as shown in Figure 3.8.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_Forward_WriteCRC"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_Forward_WriteCRC">
        <title>E2E_PXXProtect, E2E_PXXForward Write CRC</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_Forward_WriteCRC.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201216</srcid><srcstatus/><internalId>153</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201217</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01217
         The step ”Increment Counter” in E2E_PXXProtect() and E2E_PXXForward()
         shall behave as shown in Figure 3.9.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXProtect_Forward_IncrementCounter"/>.
      </para>
      <figure id="fig_E2E_PXXProtect_Forward_IncrementCounter">
        <title>E2E_PXXProtect, E2E_PXXForward Increment Counter</title>
        <inlinegraphic fileref="images/E2E_PXXProtect_Forward_IncrementCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201217</srcid><srcstatus/><internalId>154</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201218</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01218
         The function E2E_PXXForward() shall have the overall behavior
         as shown in Figure 3.10.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXForward"/>.
      </para>
      <figure id="fig_E2E_PXXForward">
        <title>E2E_PXXForward</title>
        <inlinegraphic fileref="images/E2E_PXXForward.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201218</srcid><srcstatus/><internalId>155</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201228</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01228
         The step ”Verify inputs of the forward function” in
         E2E_PXXForward() shall behave as shown in Figure 3.11.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXForward_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXForward_VerifyInputs">
        <title>E2E_PXXForward Verify Inputs</title>
        <inlinegraphic fileref="images/E2E_PXXForward_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201228</srcid><srcstatus/><internalId>156</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201219</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01219
         The step ”Write Counter” in E2E_PXXForward() shall behave as
         shown in Figure 3.12.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXForward_WriteCounter"/>.
      </para>
      <figure id="fig_E2E_PXXForward_WriteCounter">
        <title>E2E_PXXForward Write Counter</title>
        <inlinegraphic fileref="images/E2E_PXXForward_WriteCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201219</srcid><srcstatus/><internalId>157</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201220</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01220
         The step ”Write DataID” in E2E_PXXForward() shall behave as
         shown in Figure 3.13.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXForward_WriteDataID"/>.
      </para>
      <figure id="fig_E2E_PXXForward_WriteDataID">
        <title>E2E_PXXForward Write DataID</title>
        <inlinegraphic fileref="images/E2E_PXXForward_WriteDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201220</srcid><srcstatus/><internalId>158</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201221</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01221
         The function E2E_PXXCheck() shall have
         the overall behavior as shown in Figure 3.14.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck"/>.
      </para>
      <figure id="fig_E2E_PXXCheck">
        <title>E2E_PXXCheck</title>
        <inlinegraphic fileref="images/E2E_PXXCheck.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201221</srcid><srcstatus/><internalId>159</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201222</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01222
         The step ”Verify inputs of the check function” in
         E2E_PXXCheck() shall behave as shown in Figure 3.15.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_VerifyInputs">
        <title>E2E_PXXCheck Verify Inputs</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201222</srcid><srcstatus/><internalId>160</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201223</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01223
         The step ”Read Length” in E2E_PXXCheck()
         shall behave as shown in Figure 3.16.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_ReadLength"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_ReadLength">
        <title>E2E_PXXCheck Read Length</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_ReadLength.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201223</srcid><srcstatus/><internalId>161</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.007</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201224</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01224
         The step ”Read Counter” in E2E_PXXCheck()
         shall behave as shown in Figure 3.17.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_ReadCounter"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_ReadCounter">
        <title>E2E_PXXCheck Read Counter</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_ReadCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201224</srcid><srcstatus/><internalId>162</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201225</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01225
         The step ”Read DataID” in E2E_PXXCheck()
         shall behave as shown in Figure 3.18.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_ReadDataID"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_ReadDataID">
        <title>E2E_PXXCheck Read DataID</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_ReadDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201225</srcid><srcstatus/><internalId>163</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201226</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01226
         The step ”Read CRC” in E2E_PXXCheck()
         shall behave as shown in Figure 3.19.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_ReadCRC"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_ReadCRC">
        <title>E2E_PXXCheck Read CRC</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_ReadCRC.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201226</srcid><srcstatus/><internalId>164</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201227</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01227
         The step ”Do Checks” in E2E_PXXCheck()
         shall behave as shown in Figure 3.20.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXCheck_DoChecks"/>.
      </para>
      <figure id="fig_E2E_PXXCheck_DoChecks">
        <title>E2E_PXXCheck Do Checks</title>
        <inlinegraphic fileref="images/E2E_PXXCheck_DoChecks.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201227</srcid><srcstatus/><internalId>165</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201250</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01250
         The E2E_PXXProtect and E2E_PXXForward functions ’state’
         shall have the members defined in (see Table 6.5).(RS_E2E_08528)
         Name | Type | Description |
         Counter | Unsigned Integer | Counter to be used for protecting the next
         Data. The initial value is 0, which means that in the first cycle, Counter is 0. Each
         time E2E_PXXProtect() is called, it increments the counter up to the maximum
         value (0xFF for 8 bit counter, 0xFF’FF for a 16 bit counter and 0xFF’FF’FF’FF for a 32
         bit counter). After the maximum value is reached, the next value is 0x0. The overflow
         is not reported to the caller.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201250</srcid><srcstatus/><internalId>166</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201251</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01251
         The E2E_PXXCheck functions ’State’ shall have the members
         defined in (see Table 6.6).(RS_E2E_08528)
         Name | Type | Description |
         Counter | Unsigned Integer | Counter of the data in previous cycle.|
         Status | Enumeration | Result of the verification of the Data in this
         cycle, determined by the Check function.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201251</srcid><srcstatus/><internalId>167</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201252</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01252
         The E2E_PXXCheck functions ’State-&gt;Status’ enumeration type
         shall consist the following enumeration values (see Table 6.7).(RS_E2E_08528)
         Name | State Type | Description |
         E2E_PXXSTATUS_OK | OK | The checks of the Data in this cycle
         were successful (including counter check, which was incremented by 1).|
         E2E_PXXSTATUS_NONEWDATA | Error | The Check function has been invoked but
         no new Data is available since the last call, according to communication medium
         (e.g. RTE, COM). As a result, no E2E checks of Data have been consequently
         executed. This may be considered similar to E2E_PXXSTATUS_REPEATED.|
         E2E_PXXSTATUS_ERROR | Error | Error not related to counters occurred (e.g.
         wrong crc, wrong length, wrong options, wrong Data ID).|
         E2E_PXXSTATUS_REPEATED | Error | The checks of the Data in this cycle were
         successful, with the exception of the repetition.|
         E2E_PXXSTATUS_OKSOMELOST | OK | The checks of the Data in this cycle
         were successful (including counter check, which was incremented within the allowed
         configured delta).|
         E2E_PXXSTATUS_WRONGSEQUENCE | Error | The checks of the Data in this cycle were
         successful, with the exception of counter jump, which changed more than the
         allowed delta|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201252</srcid><srcstatus/><internalId>168</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>

    <!-- E2E Profiles for Methods - Generalized Part Requirements -->

    <specobject>
      <id>ASR_E2E0201156</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01156
         In E2E profiles for methods, the counter on the sender side shall
         be initialized with 0 for the first transmission request of a data element the counter
         and shall be incremented by 1 for every subsequent send request. When the counter
         reaches the maximum value (0xFF’FF for a 16bit counter, 0xFF’FF’FF’FF for a 32bit
         counter, 0xFF’FF’FF’FF’ FF’FF’FF’FF for a 64bit counter), then it shall restart with
         0 for the next send request.(RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201156</srcid><srcstatus/><internalId>169</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201157</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01157
         In the E2E profiles for methods, the Data ID shall be explicitly
         transmitted, i.e. it shall be the part of the transmitted E2E header.(RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201157</srcid><srcstatus/><internalId>170</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201159</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01159
         E2E profiles for methods shall use the function defined in PXXMCALCULATE_CRC
         of the SWS CRC supervision for calculating the CRC.(RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201159</srcid><srcstatus/><internalId>171</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201160</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01160
         In E2E profiles for methods, the CRC shall be calculated over
         the entire E2E header (excluding the CRC bytes) and over the user data.(RS_E2E_08528)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201160</srcid><srcstatus/><internalId>172</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201161</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01161
         In the E2E profiles for methods the Message Type field shall be explicitly transmitted,
         i.e. it shall be the part of the transmitted E2E header.(RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201161</srcid><srcstatus/><internalId>173</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201162</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01162
         A Message Type field with a value of 0 indicates a request message.
         (RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201162</srcid><srcstatus/><internalId>174</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201163</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01163
         A Message Type field with a value of 1 indicates a response message.
         (RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201163</srcid><srcstatus/><internalId>175</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201203</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01203
         In the E2E profiles for methods the Message Result field shall be explicitly transmitted,
         i.e. it shall be the part of the transmitted E2E header.c(RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201203</srcid><srcstatus/><internalId>176</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201164</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01164
         A Message Result field with a value of 0 indicates a normal response message.
         (RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201164</srcid><srcstatus/><internalId>177</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201165</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01165
         A Message Result field with a value of 1 indicates an error response message.
         (RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201165</srcid><srcstatus/><internalId>178</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201166</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01166
         The Message Result field shall be set to 0 for request messages
         (i.e., in case the Message Type field is set to 0).(RS_E2E_08528, RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201166</srcid><srcstatus/><internalId>179</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201167</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01167
         In the E2E profiles for methods, the Source ID shall be explicitly
         transmitted, i.e. it shall be the part of the transmitted E2E header.(RS_E2E_08539)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201167</srcid><srcstatus/><internalId>180</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201169</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01169
         The function E2E_PXXmProtect() shall have the overall behavior as shown in Figure 3.21.
         (RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect">
        <title>E2E_PXXmProtect()</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201169</srcid><srcstatus/><internalId>181</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201170</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01170
         The step ”Verify inputs of the protect function” in
         E2E_PXXmProtect() shall behave as shown in Figure 3.22.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_VerifyInputs">
        <title>E2E_PXXmProtect Input Verification</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201170</srcid><srcstatus/><internalId>182</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201171</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01171
         The step ”Compute offset” in E2E_PXXmProtect(),
         E2E_PXXmForward(), E2E_PXXmSourceCheck() and E2E_PXXmSinkCheck()
         shall behave as shown in Figure 3.23.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheck_E2E_PXXmSinkCheck_ComputeOffset"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheck_E2E_PXXmSinkCheck_ComputeOffset">
        <title>E2E_PXXmProtect/Forward/SourceCheck/SinkCheck offset Computation</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheck_E2E_PXXmSinkCheck_ComputeOffset.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201171</srcid><srcstatus/><internalId>183</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201172</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01172
         The step ”Write Length” in E2E_PXXmProtect() and
         E2E_PXXmForward() shall behave as shown in Figure 3.24.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_Forward_WriteLength"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_Forward_WriteLength">
        <title>E2E_PXXmProtect and E2E_PXXmForward Write Length</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201172</srcid><srcstatus/><internalId>184</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.007</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201173</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01173
         The step ”Write Counter” in E2E_PXXmProtect()
         shall behave as shown in Figure 3.25.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_WriteCounter"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_WriteCounter">
        <title>E2E_PXXmProtect Write Counter</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_WriteCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201173</srcid><srcstatus/><internalId>185</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201174</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01174
         The step ”Write DataID” in E2E_PXXmProtect()
         shall behave as shown in Figure 3.26.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_WriteDataID"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_WriteDataID">
        <title>E2E_PXXmProtect Write DataID</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_WriteDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201174</srcid><srcstatus/><internalId>186</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201175</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01175
         The step ”Write SourceID” in E2E_PXXmProtect()
         shall behave as shown in Figure 3.27.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_WriteSourceID"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_WriteSourceID">
        <title>E2E_PXXmProtect Write SourceID</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_WriteSourceID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201175</srcid><srcstatus/><internalId>187</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201176</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01176
         The step ”Write Message Type” in E2E_PXXmProtect()
         shall behave as shown in Figure 3.28.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_WriteMessageType"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_WriteMessageType">
        <title>E2E_PXXmProtect Write Message Type</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_WriteMessageType.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201176</srcid><srcstatus/><internalId>188</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201177</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01177
         The step ”Write Message Result” in E2E_PXXmProtect()
         shall behave as shown in Figure 3.29.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_WriteMessageResult"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_WriteMessageResult">
        <title>E2E_PXXmProtect Write Message Result</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_WriteMessageResult.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201177</srcid><srcstatus/><internalId>189</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201178</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01178
         The step ”Compute CRC” in E2E_PXXmProtect(),
         E2E_PXXmForward(), E2E_PXXmSourceCheck() and E2E_PXXmSinkCheck()
         shall behave as shown in Figure 3.30.(RS_E2E_08539)
        <para>
          The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheckE2E_PXXmSinkCheck_ComputeCRC"/>.
        </para>
        <figure id="fig_E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheckE2E_PXXmSinkCheck_ComputeCRC">
        <title>E2E_PXXmProtect, E2E_PXXmForward, E2E_PXXmSourceCheck and E2E_PXXmSinkCheck Compute CRC</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_E2E_PXXmForward_E2E_PXXmSourceCheckE2E_PXXmSinkCheck_ComputeCRC.png" width="70%"/>
        </figure>
      </description>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201178</srcid><srcstatus/><internalId>190</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201179</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01179
         The step ”Write CRC”in E2E_PXXmProtect() and
         E2E_PXXmForward() shall behave as shown in Figure 3.31.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_Forward_WriteCRC"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_Forward_WriteCRC">
        <title>E2E_PXXmProtect and E2E_PXXmForward Write CRC</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_Forward_WriteCRC.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201179</srcid><srcstatus/><internalId>191</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201180</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01180
         The step ”Increment Counter” in E2E_PXXmProtect() and
         E2E_PXXmForward() shall behave as shown in Figure 3.32.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmProtect_Forward_IncrementCounter"/>.
      </para>
      <figure id="fig_E2E_PXXmProtect_Forward_IncrementCounter">
        <title>E2E_PXXmProtect and E2E_PXXmForward Increment Counter</title>
        <inlinegraphic fileref="images/E2E_PXXmProtect_Forward_IncrementCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201180</srcid><srcstatus/><internalId>192</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201181</id>
      <status>approved</status> <!-- draft in ASR R22-11 -->
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01181
         The function E2E_PXXmForward() shall have the overall
         behavior as shown in Figure 3.33.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmForward"/>.
      </para>
      <figure id="fig_E2E_PXXmForward">
        <title>E2E_PXXmForward</title>
        <inlinegraphic fileref="images/E2E_PXXmForward.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201181</srcid><srcstatus/><internalId>193</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201182</id>
      <status>approved</status> <!-- draft in ASR R22-11 -->
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01182
         The step ”Verify inputs of the forward function” in
         E2E_PXXmForward() shall behave as shown in Figure 3.34.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmForward_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXmForward_VerifyInputs">
        <title>E2E_PXXmForward Verify inputs of the forward function</title>
        <inlinegraphic fileref="images/E2E_PXXmForward_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201182</srcid><srcstatus/><internalId>194</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201183</id>
      <status>approved</status> <!-- draft in ASR R22-11 -->
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01183
         The step ”Write Counter” in E2E_PXXmForward()
         shall behave as shown in Figure 3.35.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmForward_WriteCounter"/>.
      </para>
      <figure id="fig_E2E_PXXmForward_WriteCounter">
        <title>E2E_PXXmForward Write Counter</title>
        <inlinegraphic fileref="images/E2E_PXXmForward_WriteCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201183</srcid><srcstatus/><internalId>195</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201184</id>
      <status>approved</status> <!-- draft in ASR R22-11 -->
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01184
         The step ”Write DataID” in E2E_PXXmForward()
         shall behave as shown in Figure 3.36.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmForward_WriteDataID"/>.
      </para>
      <figure id="fig_E2E_PXXmForward_WriteDataID">
        <title>E2E_PXXmForward Write DataID</title>
        <inlinegraphic fileref="images/E2E_PXXmForward_WriteDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201184</srcid><srcstatus/><internalId>196</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201185</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01185
         The function E2E_PXXmSourceCheck() for the client side
         shall have the overall behavior as shown in Figure 3.37.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck">
        <title>E2E_PXXmSourceCheck</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201185</srcid><srcstatus/><internalId>197</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201186</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01186
         The step ”Verify inputs of the function” in
         E2E_PXXmSourceCheck() shall behave as shown in Figure 3.38.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_VerifyInputs">
        <title>E2E_PXXmSourceCheck Verify inputs</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201186</srcid><srcstatus/><internalId>198</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201187</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01187
         The step ”Read Length” in E2E_PXXmSourceCheck() and
         E2E_PXXmSinkCheck() shall behave as shown in Figure 3.39.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_SinkCheck_ReadLength"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_SinkCheck_ReadLength">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read Length</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_SinkCheck_ReadLength.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201187</srcid><srcstatus/><internalId>199</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
       <provcov>
         <linksto>E2E.top.007</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201188</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01188
         The step ”Read Counter” in E2E_PXXmSourceCheck() and
         E2E_PXXmSinkCheck() shall behave as shown in Figure 3.40.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_SinkCheck_ReadCounter"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_SinkCheck_ReadCounter">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read Counter</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_SinkCheck_ReadCounter.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201188</srcid><srcstatus/><internalId>200</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201189</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01189
         The step ”Read DataID” in E2E_PXXmSourceCheck() and
         E2E_PXXmSinkCheck() shall behave as shown in Figure 3.41.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_SinkCheck_ReadDataID"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_SinkCheck_ReadDataID">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read DataID</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_SinkCheck_ReadDataID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201189</srcid><srcstatus/><internalId>201</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201190</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01190
         The step ”Read SourceID” in E2E_PXXmSourceCheck()
         shall behave as shown in Figure 3.42.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_ReadSourceID"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_ReadSourceID">
        <title>E2E_PXXmSourceCheck SourceID</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_ReadSourceID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201190</srcid><srcstatus/><internalId>202</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201191</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01191
         The step ”Read Message Type” in E2E_PXXmSourceCheck()
         and E2E_PXXmSinkCheck() shall behave as shown in Figure 3.43.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_SinkCheck_ReadMessageType"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_SinkCheck_ReadMessageType">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read Message Type</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_SinkCheck_ReadMessageType.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201191</srcid><srcstatus/><internalId>203</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201192</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01192
         The step ”Read Message Result” in E2E_PXXmSourceCheck()
         and E2E_PXXmSinkCheck() shall behave as shown in Figure 3.44.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_PXXmSinkCheck_ReadMessageResult"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_PXXmSinkCheck_ReadMessageResult">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read Message Result</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_PXXmSinkCheck_ReadMessageResult.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201192</srcid><srcstatus/><internalId>204</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201193</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01193
         The step ”Read CRC” in E2E_PXXmSourceCheck() and
         E2E_PXXmSinkCheck() shall behave as shown in Figure 3.45.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_SinkCheck_ReadCRC"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_SinkCheck_ReadCRC">
        <title>E2E_PXXmSourceCheck/E2E_PXXmSinkCheck Read CRC</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_SinkCheck_ReadCRC.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201193</srcid><srcstatus/><internalId>205</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201194</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01194
         The step ”Do Checks” in E2E_PXXmSourceCheck()
         shall behave as shown in Figure 3.46.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSourceCheck_DoChecks"/>.
      </para>
      <figure id="fig_E2E_PXXmSourceCheck_DoChecks">
        <title>E2E_PXXmSourceCheck Do Checks</title>
        <inlinegraphic fileref="images/E2E_PXXmSourceCheck_DoChecks.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201194</srcid><srcstatus/><internalId>206</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201195</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01195
         The function E2E_PXXmSinkCheck() for the server side
         shall have the overall behavior as shown in Figure 3.47.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSinkCheck"/>.
      </para>
      <figure id="fig_E2E_PXXmSinkCheck">
        <title>E2E_PXXmSinkCheck</title>
        <inlinegraphic fileref="images/E2E_PXXmSinkCheck.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201195</srcid><srcstatus/><internalId>207</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201196</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01196
         The step ”Verify inputs of the check function” in
         E2E_PXXmSinkCheck() shall behave as shown in Figure 3.48.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSinkCheck_VerifyInputs"/>.
      </para>
      <figure id="fig_E2E_PXXmSinkCheck_VerifyInputs">
        <title>E2E_PXXmSinkCheck Verify Inputs</title>
        <inlinegraphic fileref="images/E2E_PXXmSinkCheck_VerifyInputs.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201196</srcid><srcstatus/><internalId>208</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.005</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201197</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01197
         The step ”Read SourceID” in E2E_PXXmSinkCheck()
         shall behave as shown in Figure 3.49.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSinkCheck_ReadSourceID"/>.
      </para>
      <figure id="fig_E2E_PXXmSinkCheck_ReadSourceID">
        <title>E2E_PXXmSinkCheck Read SourceID</title>
        <inlinegraphic fileref="images/E2E_PXXmSinkCheck_ReadSourceID.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201197</srcid><srcstatus/><internalId>209</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201198</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01198
         The step ”Do Checks” in E2E_PXXmSinkCheck()
         shall behave as shown in Figure 3.50.(RS_E2E_08539)
      <para>
       The diagram is visualized in <xref linkend="fig_E2E_PXXmSinkCheck_DoChecks"/>.
      </para>
      <figure id="fig_E2E_PXXmSinkCheck_DoChecks">
        <title>E2E_PXXmSinkCheck Do Checks</title>
        <inlinegraphic fileref="images/E2E_PXXmSinkCheck_DoChecks.png" width="70%"/>
      </figure>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201198</srcid><srcstatus/><internalId>210</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.002</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
       <provcov>
         <linksto>E2E.top.003</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201199</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01199
         The E2E_PXXmProtect() and E2E_PXXmForward() functions’
         ”state” shall have the members defined in Table 6.9.(RS_E2E_08528)
         Name | Type | Description |
         Counter | Unsigned Integer | Counter to be used for protecting the
         next Data. The initial value is 0, which means that in the first cycle, counter
         is 0. Each time E2E_PXXmProtect() is called, it increments the counter up to
         its maximum value (0xFF’FF for a 16 bit counter, 0xFF’FF’FF’FF for a 32 bit
         counter, 0xFF’FF’FF’FF’ FF’FF’FF’FF for a 64 bit counter). After the maximum value
         is reached, the next value is 0x0. The overflow is not reported to the caller.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201199</srcid><srcstatus/><internalId>211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.004</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201200</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01200
         The E2E_PXXmSourceCheck() and E2E_PXXmSinkCheck()
         functions’ ”state” shall have the members defined in Table 6.10.(RS_E2E_08528)
         Name | Type | Description |
         Counter | Unsigned Integer | Counter of the data in previous cycle.|
         Status | Enumeration | Result of the verification of the Data in this
         cycle, determined by the Check function.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201200</srcid><srcstatus/><internalId>212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.001</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
       <provcov>
         <linksto>E2E.top.004</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>

    <specobject>
      <id>ASR_E2E0201201</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_01201
         The step ”Do Checks” in E2E_PXXmSourceCheck() and
         E2E_PXXmSinkCheck() shall set State-&gt;Status to one of the following enumeration
         values (see Table 6.11).(RS_E2E_08528)
         Name | State Type | Description |
         E2E_PXXMSTATUS_OK | OK | The checks of the Data in this cycle
         were successful (including counter check, which was incremented by 1).|
         E2E_PXXMSTATUS_NONEWDATA | Error | The Check function has been invoked but
         no new Data is available since the last call, according to communication medium
         (e.g. RTE, COM). As a result, no E2E checks of Data have been consequently
         executed. This may be considered similar to E2E_PXXMSTATUS_REPEATED.|
         E2E_PXXMSTATUS_ERROR | Error | Error not related to counters occurred (e.g.
         wrong CRC, wrong Length, wrong Options, wrong Data ID).
         E2E_PXXMSTATUS_REPEATED | Error | The checks of the Data in this cycle were
         successful, except for the repetition.
         E2E_PXXMSTATUS_OKSOMELOST | OK | The checks of the Data in this cycle
         were successful (including counter check, which was incremented within the allowed
         configured delta).
         E2E_PXXMSTATUS_WRONGSEQUENCE | Error | The checks of the Data in this cycle were
         successful, except for a counter jump, which changed more than the allowed delta.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050201201</srcid><srcstatus/><internalId>213</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.004</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>

    <specobject>
      <id>ASR_E2E0200739</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00739
         The MessageType argument of the E2E_PXXmProtect,
         E2E_PXXmForward, and E2E_PXXmCheck functions shall be set to one of the following
         enumeration values (see Table 6.2).(RS_E2E_08528)
         Name | Value | Description |
         STD_MESSAGETYPE_REQUEST | 0 | The type of the message is a request message
         which is sent from the client to the server.
         STD_MESSAGETYPE_RESPONSE | 1 | The type of the message is a response
         message which is sent from the server to the client.|
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050200739</srcid><srcstatus/><internalId>214</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>

    <specobject>
      <id>ASR_E2E0200743</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00743
         The MessageResult argument of the E2E_PXXmProtect,
         E2E_PXXmForward, and E2E_PXXmCheck functions shall be set to one of the following
         enumeration values (see Table 6.3).(RS_E2E_08528)
         Name | Value | Description |
         STD_MESSAGERESULT_OK | 0 | The type of the result in the response message
         is a normal (i.e., a non erroneus) result. This value is also used for the request
         messages, where the value of this field is fixed to this value.
         STD_MESSAGERESULT_ERROR | 1 | The type of the result int the response
         message is an error (i.e., an erroneus) result.|
      </description>
      <furtherinfo>
       Justifying rule: WRN.swurs.needscoverage.count violation.
       This swurs is covered by more than 10 EB swurs.
      </furtherinfo>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050200743</srcid><srcstatus/><internalId>215</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>

    <specobject>
      <id>ASR_E2E0200677</id>
      <status>rejected</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_00677
         The mapping between profile independent and profile specific
         states shall be as described in the table(Table 7.1): (yy is one of the profiles
         01,02,04,05,06,07,08,11,22,44,04m,07m)(RS_E2E_08534, RS_E2E_08528)
         Name | Value | Description |
         Profile independent result | Profile specific result with yy one of profiles
         (01,02,04,05,06,07,08,11,22,44,04m,07m)|
         OK | E2E_PyySTATUS_OK |
         OK | E2E_PyySTATUS_OKSOMELOST |
         WRONGCRC | E2E_PyySTATUS_ERROR |
         REPEATED | E2E_PyySTATUS_REPEATED |
         NONEWDATA | E2E_PyySTATUS_NONEWDATA |
         WRONGSEQUENCE | E2E_PyySTATUS_WRONGSEQUENCE |
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>

    <specobject>
      <id>ASR_E2E0206300</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_CONSTR_06300
        MaxDeltaCounter for Client-Server Communication(server) For Client-Server Communication the
        MaxDeltaCounter on server-side shall be set to the maximum of the value range of the
        sequence counter.(RS_E2E_08528)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050206300</srcid><srcstatus/><internalId>217</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>

    <specobject>
      <id>ASR_E2E0206303</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_CONSTR_06303
        MaxDeltaCounter for Client-Server Communication (client)
        For Client-Server Communication the MaxDeltaCounter on client-side shall be set
        to 1.(RS_E2E_08528)
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP050206303</srcid><srcstatus/><internalId>218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
       <provcov>
         <linksto>E2E.top.011</linksto>
         <dstversion>1</dstversion>
       <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <!-- SWS UC Requirements -->

    <specobject>
      <id>ASR_E2E02UC00313</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00313
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00313'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00313</srcid><srcstatus/><internalId>26</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00202</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00202
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00202'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00202</srcid><srcstatus/><internalId>27</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00203</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00203
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00203'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00203</srcid><srcstatus/><internalId>28</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00204</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00204
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00204'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00204</srcid><srcstatus/><internalId>29</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00205</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00205
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00205'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00205</srcid><srcstatus/><internalId>30</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00232</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00232
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00232'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00232</srcid><srcstatus/><internalId>31</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00206</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00206
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00206'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00206</srcid><srcstatus/><internalId>32</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00207</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00207
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00207'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00207</srcid><srcstatus/><internalId>33</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00209</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00209
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00209'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00209</srcid><srcstatus/><internalId>34</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00233</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00233
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00233'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00233</srcid><srcstatus/><internalId>35</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00277</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00277
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00277'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00277</srcid><srcstatus/><internalId>36</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00278</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00278
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00278'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00278</srcid><srcstatus/><internalId>37</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00258</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item UC_E2E_00258
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_UC_E2E_00258'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00258</srcid><srcstatus/><internalId>38</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>

    <specobject>
      <id>ASR_E2E0200115</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ELibrary.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item SWS_E2E_00115
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_SWS_E2ELibrary_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_SWS_E2E_00115'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <comment>This requirement is informational only.</comment>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>

    <!-- PRS UC Requirements -->

    <specobject>
      <id>ASR_E2E02UC00235</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00235
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00235'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00235</srcid><srcstatus/><internalId>227</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC01204</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_01204
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_01204'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC01204</srcid><srcstatus/><internalId>219</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC01158</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_01158
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_01158'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC01158</srcid><srcstatus/><internalId>220</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC01168</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_01168
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_01168'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC01168</srcid><srcstatus/><internalId>221</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00239</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00239
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00239'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00239</srcid><srcstatus/><internalId>223</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00238</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00238
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00238'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00238</srcid><srcstatus/><internalId>224</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00325</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00325
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00325'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00325</srcid><srcstatus/><internalId>226</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00236</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00236
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00236'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00236</srcid><srcstatus/><internalId>228</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00170</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00170
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00170'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00170</srcid><srcstatus/><internalId>229</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00171</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00171
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00171'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00171</srcid><srcstatus/><internalId>230</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00062</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00062
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00062'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00062</srcid><srcstatus/><internalId>231</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00063</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00063
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00063'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00063</srcid><srcstatus/><internalId>232</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00320</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00320
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00320'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00320</srcid><srcstatus/><internalId>233</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00173</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00173
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00173'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00173</srcid><srcstatus/><internalId>234</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00055</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00055
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00055'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00055</srcid><srcstatus/><internalId>235</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00071</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00071
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00071'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00071</srcid><srcstatus/><internalId>236</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00606</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00606
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_UC_00606'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00606</srcid><srcstatus/><internalId>225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>

    <specobject>
      <id>ASR_E2E02UC00741</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, ASR R22-11</source>
      <version>1</version>
      <description>       Design Item PRS_E2E_UC_00741
      <para>
          <itemizedlist>
            <listitem>
              <para>
                <xi:include xmlns:xi="http://www.w3.org/2001/XInclude" href="../../../../../asc_E2ESEXfmgmt/doc/SwRS/customer_requirements/AUTOSAR_PRS_E2EProtocol_ASR_R22-11.xml" xpointer="xpointer(//specobject[id='CREQ_ASR22-11_PRS_E2E_USE_00741'])"/>
               </para>
            </listitem>
          </itemizedlist>
        </para>
      </description>
      <releases>
         <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP0502UC00741</srcid><srcstatus/><internalId>237</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <!--
        Top Level requirements motivated by the Product Description
    -->

      <specobject>
         <id>E2E.top.007</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If used to transmit data with dynamic length, the E2E module shall
            add data length information to the E2E header.
         </description>
         <comment>
            The modules E2EPxx (if designed to transmit and receive dynamic data) contain
            the implementation of the data length information.
            The E2E module provides this generic requirement to have inter-module
            tracing unmodified with the removal or creation of new profiles.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2E0201212</srcid><srcstatus/><internalId>326</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201223</srcid><srcstatus/><internalId>338</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201172</srcid><srcstatus/><internalId>361</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201187</srcid><srcstatus/><internalId>376</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

    <!--
        Top Level requirements motivated by the Product Description
    -->

      <specobject>
         <id>E2E.top.001</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall implement a sequence counter mechanism
            to allow the protection and validation of communication data.
         </description>
         <comment>
            The modules E2EPxx contain the implementation of the sequence counter mechanism.
            The E2E module provides this generic requirement to have inter-module
            tracing unmodified with the removal or creation of new profiles.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.top.001</srcid><srcstatus/><internalId>238</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201205</srcid><srcstatus/><internalId>320</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201209</srcid><srcstatus/><internalId>323</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201211</srcid><srcstatus/><internalId>325</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201213</srcid><srcstatus/><internalId>327</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201217</srcid><srcstatus/><internalId>331</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201218</srcid><srcstatus/><internalId>332</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201219</srcid><srcstatus/><internalId>334</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201221</srcid><srcstatus/><internalId>336</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201224</srcid><srcstatus/><internalId>339</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201227</srcid><srcstatus/><internalId>342</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201250</srcid><srcstatus/><internalId>343</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201251</srcid><srcstatus/><internalId>344</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201156</srcid><srcstatus/><internalId>346</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201169</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201171</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201173</srcid><srcstatus/><internalId>362</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201180</srcid><srcstatus/><internalId>369</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201181</srcid><srcstatus/><internalId>370</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201183</srcid><srcstatus/><internalId>372</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201185</srcid><srcstatus/><internalId>374</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201188</srcid><srcstatus/><internalId>377</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201194</srcid><srcstatus/><internalId>383</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201195</srcid><srcstatus/><internalId>384</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201198</srcid><srcstatus/><internalId>387</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201199</srcid><srcstatus/><internalId>388</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201200</srcid><srcstatus/><internalId>389</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>

      <specobject>
         <id>E2E.top.002</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall implement a data ID mechanism
            to allow the protection and validation of communication data.
         </description>
         <comment>
            The modules E2EPxx contain the implementation of the data ID mechanism.
            The E2E module provides this generic requirement to have inter-module
            tracing unmodified with the removal or creation of new profiles.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.top.002</srcid><srcstatus/><internalId>239</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201209</srcid><srcstatus/><internalId>323</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201211</srcid><srcstatus/><internalId>325</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201214</srcid><srcstatus/><internalId>328</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201218</srcid><srcstatus/><internalId>332</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201220</srcid><srcstatus/><internalId>335</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201221</srcid><srcstatus/><internalId>336</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201225</srcid><srcstatus/><internalId>340</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201227</srcid><srcstatus/><internalId>342</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201157</srcid><srcstatus/><internalId>347</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201169</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201171</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201174</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201181</srcid><srcstatus/><internalId>370</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201184</srcid><srcstatus/><internalId>373</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201185</srcid><srcstatus/><internalId>374</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201189</srcid><srcstatus/><internalId>378</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201194</srcid><srcstatus/><internalId>383</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201195</srcid><srcstatus/><internalId>384</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201198</srcid><srcstatus/><internalId>387</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>

      <specobject>
         <id>E2E.top.003</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall implement a Cyclic Redundancy Check mechanism
            to allow the protection and validation of communication data.
         </description>
         <comment>
            The modules E2EPxx contain the implementation of the Cyclic Redundancy
            Check mechanism.
            The E2E module provides this generic requirement to have inter-module
            tracing unmodified with the removal or creation of new profiles.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.top.003</srcid><srcstatus/><internalId>240</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201206</srcid><srcstatus/><internalId>321</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201207</srcid><srcstatus/><internalId>322</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201209</srcid><srcstatus/><internalId>323</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201211</srcid><srcstatus/><internalId>325</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201215</srcid><srcstatus/><internalId>329</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201216</srcid><srcstatus/><internalId>330</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201218</srcid><srcstatus/><internalId>332</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201221</srcid><srcstatus/><internalId>336</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201226</srcid><srcstatus/><internalId>341</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201227</srcid><srcstatus/><internalId>342</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201252</srcid><srcstatus/><internalId>345</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201159</srcid><srcstatus/><internalId>348</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201160</srcid><srcstatus/><internalId>349</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201169</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201171</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201178</srcid><srcstatus/><internalId>367</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201179</srcid><srcstatus/><internalId>368</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201181</srcid><srcstatus/><internalId>370</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201185</srcid><srcstatus/><internalId>374</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201193</srcid><srcstatus/><internalId>382</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201194</srcid><srcstatus/><internalId>383</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201195</srcid><srcstatus/><internalId>384</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201198</srcid><srcstatus/><internalId>387</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>

      <!--
        Top Level requirements motivated by module specific behavior
    -->

      <specobject>
         <id>E2E.top.004</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall modularly structure static implementation files and data types.
         </description>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP05020048</srcid><srcstatus/><internalId>2</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020115</srcid><srcstatus/><internalId>4</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020037</srcid><srcstatus/><internalId>10</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020437</srcid><srcstatus/><internalId>12</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020438</srcid><srcstatus/><internalId>13</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020439</srcid><srcstatus/><internalId>14</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020440</srcid><srcstatus/><internalId>15</internalId></linkedfrom><linkedfrom><srcid>EB_E2EP05020113</srcid><srcstatus/><internalId>112</internalId></linkedfrom><linkedfrom><srcid>EB_E2EP05020114</srcid><srcstatus/><internalId>113</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020652</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020653</srcid><srcstatus/><internalId>139</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020591</srcid><srcstatus/><internalId>140</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020654</srcid><srcstatus/><internalId>141</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP050200677</srcid><srcstatus/><internalId>216</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201199</srcid><srcstatus/><internalId>388</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201200</srcid><srcstatus/><internalId>389</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201201</srcid><srcstatus/><internalId>390</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>

      <specobject>
         <id>E2E.top.005</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall check input parameter for validity.
         </description>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP05020448</srcid><srcstatus/><internalId>18</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020451</srcid><srcstatus/><internalId>22</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020403</srcid><srcstatus/><internalId>122</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020404</srcid><srcstatus/><internalId>123</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020639</srcid><srcstatus/><internalId>129</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020619</srcid><srcstatus/><internalId>130</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020411</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>ASR_E2EP05020412</srcid><srcstatus/><internalId>134</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020673</srcid><srcstatus/><internalId>318</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E020597</srcid><srcstatus/><internalId>319</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201210</srcid><srcstatus/><internalId>324</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201218</srcid><srcstatus/><internalId>332</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201228</srcid><srcstatus/><internalId>333</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201221</srcid><srcstatus/><internalId>336</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201222</srcid><srcstatus/><internalId>337</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201169</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201170</srcid><srcstatus/><internalId>359</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201181</srcid><srcstatus/><internalId>370</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201182</srcid><srcstatus/><internalId>371</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201185</srcid><srcstatus/><internalId>374</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201186</srcid><srcstatus/><internalId>375</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201194</srcid><srcstatus/><internalId>383</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201195</srcid><srcstatus/><internalId>384</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201196</srcid><srcstatus/><internalId>385</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>

      <specobject>
         <id>E2E.top.006</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall provide a mechanism to read the version number.
      </description>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ASR_E2EP05020038</srcid><srcstatus/><internalId>11</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>

      <specobject>
         <id>E2E.top.011</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2E module shall support client-server communication via methods for PXXm profiles.
         </description>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EP05.top.005</srcid><srcstatus/><internalId>242</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201161</srcid><srcstatus/><internalId>350</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201162</srcid><srcstatus/><internalId>351</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201163</srcid><srcstatus/><internalId>352</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201203</srcid><srcstatus/><internalId>353</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201164</srcid><srcstatus/><internalId>354</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201165</srcid><srcstatus/><internalId>355</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201166</srcid><srcstatus/><internalId>356</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201167</srcid><srcstatus/><internalId>357</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201169</srcid><srcstatus/><internalId>358</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201171</srcid><srcstatus/><internalId>360</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201172</srcid><srcstatus/><internalId>361</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201173</srcid><srcstatus/><internalId>362</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201174</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201175</srcid><srcstatus/><internalId>364</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201176</srcid><srcstatus/><internalId>365</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201177</srcid><srcstatus/><internalId>366</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201178</srcid><srcstatus/><internalId>367</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201179</srcid><srcstatus/><internalId>368</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201180</srcid><srcstatus/><internalId>369</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201181</srcid><srcstatus/><internalId>370</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201182</srcid><srcstatus/><internalId>371</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201183</srcid><srcstatus/><internalId>372</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201184</srcid><srcstatus/><internalId>373</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201185</srcid><srcstatus/><internalId>374</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201186</srcid><srcstatus/><internalId>375</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201187</srcid><srcstatus/><internalId>376</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201188</srcid><srcstatus/><internalId>377</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201189</srcid><srcstatus/><internalId>378</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201190</srcid><srcstatus/><internalId>379</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201191</srcid><srcstatus/><internalId>380</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201192</srcid><srcstatus/><internalId>381</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201193</srcid><srcstatus/><internalId>382</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201194</srcid><srcstatus/><internalId>383</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201195</srcid><srcstatus/><internalId>384</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201196</srcid><srcstatus/><internalId>385</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201197</srcid><srcstatus/><internalId>386</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201198</srcid><srcstatus/><internalId>387</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201199</srcid><srcstatus/><internalId>388</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201200</srcid><srcstatus/><internalId>389</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0201201</srcid><srcstatus/><internalId>390</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0200739</srcid><srcstatus/><internalId>391</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0200743</srcid><srcstatus/><internalId>392</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0206300</srcid><srcstatus/><internalId>394</internalId></linkedfrom><linkedfrom><srcid>ASR_E2E0206303</srcid><srcstatus/><internalId>395</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>E2EP05.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EP05_VerifyCodeStub</srcid><srcstatus/><internalId>440</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.E2EP05.SCrc</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>
    <specobject>
      <id>dev.E2EP05.CSCommunication</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>79</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00173.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00166.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00171.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00207.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00167.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>
    <specobject>
      <id>dev.E2EP05.ReadandWriteCRC</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020407</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020414</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/build/reqm/common_req/E2EP05_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(E2EP05.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_ComTest_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Compile/IN/E2EP05_ComTest_01/source/application/E2EP05_ComTest_01.c</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  The End-to-End Communication Protection Library Module shall be translated.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 

    01: Call E2E_P05Protect().
    02: VP(ASR_E2EP05020446):
        E2E_P05Protect() shall be translated.
    03: Call E2E_P05Check().
    04: VP(ASR_E2EP05020449):
        E2E_P05Check() shall be translated.
    05: Call E2E_P05ProtectInit().
    06: VP(ASR_E2EP05020447):
        E2E_P05ProtectInit() shall be translated.
    07: Call E2E_P05CheckInit().
    08: VP(ASR_E2EP05020450):
        E2E_P05CheckInit() shall be translated.
    09: Call E2E_P05MapStatusToSM().
    10: VP(ASR_E2EP05020452):
        E2E_P05MapStatusToSM() shall be translated.
    11: Call E2E_P05Forward().
    12: VP(ASR_E2EP05020585):
        E2E_P05Forward() shall be translated.



Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020446</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020449</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020447</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020450</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020452</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020585</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_ConTest_01000_P05Protect</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_01_P05Protect/source/application/E2EP05_ConTest_01_P05Protect.c</sourcefile>
      <sourceline>595</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

      1. Test computation of offset (tested by iterating among different Offsets).
      2. Test that correct Counter is written in the E2E Header in Little Endian format.
         (tested by iterating among all counter values, wrap around of the counter is considered).
      3. Test that correct DataID is used in CRC calculation.
      4. Test correct CRC callouts for different P05 header offsets
         (beginning, end, in the mid of the received data) and data lengths.
      5. Test that correct CRC is written in the E2E Header in Little Endian format.
      6. Test that state Counter is incremented for each E2E_P05Protect() call.

  &lt;/para&gt;
  
Test Object: E2E_P05Protect()
Test Precondition: 
  
Test Execution: 

    Iterate the following steps several times:

    00: Loop through:
        - different positions of P05 header (Offset)
        - different Length values
        - all possible values of state Counter

    01: Call E2E_P05Protect().
    02: VP(ASR_E2EP05020405,ASR_E2EP05020469,ASR_E2EP05020403):
        The State-&gt;Counter is written in byte 4 of the E2E header
        which starts at Offset = E2E_P05Config-&gt;Offset / 8.
    03: VP(ASR_E2EP05020406,ASR_E2EP05020400,ASR_E2EP05020401,ASR_E2EP05020403,ASR_E2EP05020399):
        SCrc_CalculateCRC16() shall be called 4 times for each E2E_P05Protect() iteration
        if configured Offset is greater than 0:
        first call:
          length in bytes shall be Offset
          data bytes used in the calculation the ones located before the CRC bytes
          the start value shall be 0xFFFF
          SCrc_IsFirstCall is TRUE
        second call:
          length in bytes shall be Length - Offset - 2
          data bytes used in the calculation the ones located after the CRC bytes
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        third call:
          length in bytes shall be 1
          low byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        fourth call:
          length in bytes shall be 1
          high byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
    04: VP(ASR_E2EP05020406,ASR_E2EP05020400,ASR_E2EP05020401,ASR_E2EP05020403,ASR_E2EP05020399):
        SCrc_CalculateCRC16() shall be called 3 times for each E2E_P05Protect() iteration
        if configured Offset is 0:
        first call:
          length in bytes shall be Length - 2
          data bytes used in the calculation the ones located after the CRC bytes
          the start value shall be 0xFFFF
          SCrc_IsFirstCall is TRUE
        second call:
          length in bytes shall be 1
          low byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        third call:
          length in bytes shall be 1
          high byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
    05: VP(ASR_E2EP05020407,ASR_E2EP05020469,ASR_E2EP05020403):
        The CRC is encoded as Little Endian in bytes 0 and 1 of the E2E header
        which starts at Offset = E2E_P05Config-&gt;Offset / 8.
    06: VP(ASR_E2EP05020397,ASR_E2EP05020409,ASR_E2EP05020403):
        The State-&gt;Counter shall be incremented by one.
    07: VP(ASR_E2EP05020403):
        E2E_P05Protect() returns E2E_E_OK.

    Used Test Strategies:
    - Pair wise tests
    (Different values among different E2E_P05Protect() parameters)
    - Boundary Value Analysis
    (Either usage of all possible values or min / intermediate /max value for individual parameters)
    - Equivalence Class Partitioning
    (Testing only transitions to E2E_E_OK status for E2E_P05Protect() function)

  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020403</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020469</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020405</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020406</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020399</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020407</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020409</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020397</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_01001_P05ProtectInit_Ok</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_01_P05Protect/source/application/E2EP05_ConTest_01_P05Protect.c</sourcefile>
      <sourceline>843</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

     Test that E2E_P05ProtectInit() initializes the state structure, setting Counter to 0.

  &lt;/para&gt;
  
Test Object: E2E_P05ProtectInit()
Test Precondition: None.
Test Execution: 

    01: Call E2E_P05ProtectInit() with valid parameter.
    02: VP(ASR_E2EP05020447,ASR_E2EP05020448):
        E2E_P05ProtectInit() returns E2E_E_OK.
        P05CheckState.Counter is initialized with 0.

    Used Test Strategies:
    - Equivalence Class Partitioning
    (Testing only transitions to E2E_E_OK status for E2E_P05ProtectInit() function)

  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020447</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020448</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_01002_P05ProtectInit_InvalidInput</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_01_P05Protect/source/application/E2EP05_ConTest_01_P05Protect.c</sourcefile>
      <sourceline>900</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

      Test that if E2E_P05ProtectInit() is called with StatePtr equal to NULL
      then E2E_P05ProtectInit() returns immediately with E2E_E_INPUTERR_NULL.

  &lt;/para&gt;
  
Test Object: E2E_P05ProtectInit()
Test Precondition: None.
Test Execution: 

    01: Call E2E_P05ProtectInit() with NULL parameter.
    02: VP(ASR_E2EP05020447,ASR_E2EP05020448,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047):
        E2E_P05ProtectInit() returns E2E_E_INPUTERR_NULL.

    Used Test Strategies:
    - Equivalence Class Partitioning
    (Testing only transitions to E2E_E_INPUTERR_NULL status for E2E_P05ProtectInit() function)

  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020447</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020448</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_01003_P05Protect_InvalidInput</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_01_P05Protect/source/application/E2EP05_ConTest_01_P05Protect.c</sourcefile>
      <sourceline>962</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

    1) Test that the E2E-library function E2E_P05Protect()
       returns the error code E2E_E_INPUTERR_NULL if:
       - NULL_PTR is passed for configuration data / state data / data to be protected
    2) Test that the E2E-library function E2E_P05Protect()
       returns the error codes E2E_E_INPUTERR_WRONG if:
       - Offset in the E2E_P05Config is not a multiple of 8
       - Offset in the E2E_P05Config is greater than (DataLength - 24)
       - DataLength in the E2E_P05Config is not a multiple of 8
       - DataLength in the E2E_P05Config is smaller than 24
       - DataLength in the E2E_P06Config is greater than 32768.
       - Length does not equal DataLength

  &lt;/para&gt;
  
Test Object: E2E_P05Protect()
Test Precondition: None.
Test Execution: 

    01: Set E2E_P05Config to NULL and call E2E_P05Protect().
    02: (ASR_E2EP05020446,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020404):
        E2E_P05Protect() returns E2E_E_INPUTERR_NULL.
    03: Set E2E_P05ProtectState to NULL and call E2E_P05Protect().
    04: (ASR_E2EP05020446,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020404):
        E2E_P05Protect() returns E2E_E_INPUTERR_NULL.
    05: Set Data to NULL and call E2E_P05Protect().
    06: (ASR_E2EP05020446,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020404):
        E2E_P05Protect() returns E2E_E_INPUTERR_NULL.
    07: Set first three input parameters (E2E_P05Config, E2E_P05ProtectState and Data) to NULL
        and call E2E_P05Protect().
    08: (ASR_E2EP05020446,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020404):
        E2E_P05Protect() returns E2E_E_INPUTERR_NULL.
    09: Set second and third input parameter (E2E_P05ProtectState and Data) to NULL
        and call E2E_P05Protect().
    10: (ASR_E2EP05020446,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020404):
        E2E_P05Protect() returns E2E_E_INPUTERR_NULL.
    11: Set first two input parameters (E2E_P05Config and E2E_P05ProtectState) to NULL
        and call E2E_P05Protect().
    12: (ASR_E2EP05020446,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020404):
        E2E_P05Protect() returns E2E_E_INPUTERR_NULL.
    13: Set first and second input parameter (E2E_P05Config and Data) to NULL
        and call E2E_P05Protect().
    14: (ASR_E2EP05020446,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020404):
        E2E_P05Protect() returns E2E_E_INPUTERR_NULL.
    15: Offset in the E2E_P05Config is not a multiple of 8. Call E2E_P05Protect().
    16: (ASR_E2EP05020446,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020404):
        E2E_P05Protect() returns E2E_E_INPUTERR_WRONG.
    17: Offset in the E2E_P05Config is greater than (DataLength - 24).
        Call E2E_P05Protect().
    18: (ASR_E2EP05020446,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020404):
        E2E_P05Protect() returns E2E_E_INPUTERR_WRONG.
    19: DataLength in the E2E_P05Config is not a multiple of 8. Call E2E_P05Protect().
    20: (ASR_E2EP05020446,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020404):
        E2E_P05Protect() returns E2E_E_INPUTERR_WRONG.
    21: DataLength in the E2E_P05Config is smaller than 24. Call E2E_P05Protect().
    22: (ASR_E2EP05020446,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020404):
        E2E_P05Protect() returns E2E_E_INPUTERR_WRONG.
    23: Length is smaller than (DataLength / 8). Call E2E_P05Protect().
    24: (ASR_E2EP05020446,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020404):
        E2E_P05Protect() returns E2E_E_INPUTERR_WRONG.
    25: Length is greater than (DataLength / 8). Call E2E_P05Protect().
    26: (ASR_E2EP05020446,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020404):
        E2E_P05Protect() returns E2E_E_INPUTERR_WRONG.

    Used Test Strategies:
    - Pair wise tests
    (Different values among different E2E_P05Protect parameters)
    - Boundary Value Analysis
    (Either usage of all possible values or min / intermediate /max value for individual parameters)
    - Equivalence Class Partitioning
    (Testing only transitions to statuses different than E2E_E_OK for E2E_P05Protect() function)

  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020446</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_01004_P05Protect_Structures</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_01_P05Protect/source/application/E2EP05_ConTest_01_P05Protect.c</sourcefile>
      <sourceline>1216</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

    This test shall check the correctness of the structures of the E2E-library
    for the function E2E_P05Protect().

  &lt;/para&gt;
  
Test Object: E2E_P05ConfigType,E2E_P05ProtectStateType
Test Precondition: None.
Test Execution: 

    01: Define E2E_P05ConfigCompareType as specified in ASR_E2EP05020437.
    02: Define E2E_P05ProtectStateCompareType as specified in ASR_E2EP05020438.
    03: VP(ASR_E2EP05020437):
        Size of structure and position of members between E2E_P05ConfigCompareType
        and E2E_P05ConfigType are equal.
        Each structure member is of unsigned type.
    04: VP(ASR_E2EP05020438):
        Size of structure between E2E_P05ProtectStateCompareType
        and E2E_P05SenderStateType is equal (since there is only one uint16 member,
        position is not required to check).
        Structure member is of unsigned type.

  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020437</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020438</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_ConTest_02000_P05CheckStatus_Ok</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_02_P05Check/source/application/E2EP05_ConTest_02_P05Check.c</sourcefile>
      <sourceline>735</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

      1. Test that E2E_P05STATUS_OK is set if the difference between
         received counter and state counter is 1 and the CRC value from header
         is equal to calculated CRC value.
      2. Test correct CRC callouts for different P05 header offsets
         (beginning, end, in the mid of the received data).
      3. Test that the library correctly considers a wrap around of
         the counter value in case the ReceivedCounter &lt; State-&gt;Counter.

      Note: Here, only good case is tested where

      - "received" CRC equals the expected value
      - Calculated DeltaCounter equals 1

  &lt;/para&gt;
  
Test Object: E2E_P05CheckStatus()
Test Precondition: 
  
Test Execution: 

    Execute the following steps several times with InputDataXX from input:

    01: Call E2E_P05Check() with
        - the E2E_P05Config stated in InputDataXX
        - the E2E_P05CheckState stated in InputDataXX
        - the data VDxx stated in InputDataXX

    VPs checked in EBTEST_GenericTest():

    02: VP(ASR_E2EP05020047,ASR_E2EP05020449):
        The return value of E2E_P05Check()
        shall be equal to the value specified in OutputDataXX.
    03: VP(ASR_E2EP05020411,ASR_E2EP05020413,ASR_E2EP05020414,ASR_E2EP05020416):
        State-&gt;Status shall be equal to the value specified in OutputDataXX.
    04: VP(ASR_E2EP05020411,ASR_E2EP05020413,ASR_E2EP05020414,ASR_E2EP05020416):
        State-&gt;Counter shall be equal to the value specified in OutputDataXX.

    VPs checked in SCrc_CalculateCRC16() stub:

    05: VP(ASR_E2EP05020406,ASR_E2EP05020400,ASR_E2EP05020401,ASR_E2EP05020399):
        SCrc_CalculateCRC16() shall be called 4 times for each E2E_P05Check() iteration
        if configured Offset is greater than 0:
        first call:
          length in bytes shall be Offset
          data bytes used in the calculation the ones located before the CRC bytes
          the start value shall be 0xFFFF
          SCrc_IsFirstCall is TRUE
        second call:
          length in bytes shall be Length - Offset - 2
          data bytes used in the calculation the ones located after the CRC bytes
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        third call:
          length in bytes shall be 1
          low byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        fourth call:
          length in bytes shall be 1
          high byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
    06: VP(ASR_E2EP05020406,ASR_E2EP05020400,ASR_E2EP05020401,ASR_E2EP05020399):
        SCrc_CalculateCRC16() shall be called 3 times for each E2E_P05Check() iteration
        if configured Offset is 0:
        first call:
          length in bytes shall be Length - Offset - 2
          data bytes used in the calculation the ones located after the CRC bytes
          the start value shall be 0xFFFF
          SCrc_IsFirstCall is TRUE
        second call:
          length in bytes shall be 1
          low byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        third call:
          length in bytes shall be 1
          high byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE

    Test aspects of individual InputDataXX/OutputDataXX:

    Data00..Data02: VP(ASR_E2EP05020413,ASR_E2EP05020416):
                    Difference between received counter and state counter is 1.
    Data00..Data02: VP(ASR_E2EP05020414,ASR_E2EP05020406,ASR_E2EP05020416):
                    CRC value from header is equal to calculated CRC value.
    Data00: VP(ASR_E2EP05020400):
            SCrc_CalculateCRC16() is called three times.
    Data01..Data02: VP(ASR_E2EP05020400):
                    SCrc_CalculateCRC16() is called four times.

    Used Test Strategies:
    - Pair wise tests
    (Different values among different E2E_P05CheckState parameters)
    - Boundary Value Analysis
    (Either usage of all possible values or min / intermediate /max value for individual parameters)
    Note: A wrap around of the counter is possible w.r.t. to lastReceivedCounter value.
    - Equivalence Class Partitioning
    (Testing only transitions to Rx status E2E_P05STATUS_OK)

  
Test Input: 

    InputDataXX:

    00: - P05 header at beginning of test data
        - minimum data length
        - minimum counter value in header data
        - maximum counter value in P05CheckState (wrap around of the counter considered)

       {                    +-P05Config-+
                +-Offset(in bits)
                |   +-DataLength(in bits)
                |   |          +-Configured DataID
                |   |          |         +-MaxDeltaCounter
              { 0U, 24U, EBTEST_DATA_ID, 2U },
                           +-P05CheckState-+
                         +-P05CheckStatus
                         |                   +-Counter
             {E2E_P05STATUS_WRONGSEQUENCE, 0xFFU},
             +-Offset value in E2E header
             |       +-NoNewDataReceived
             |       |        +-Counter value in E2E header
             |       |        |                 +-Crc
             0U,   FALSE,     0U,   EBTEST_RETVAL_CALCULATECRC16
       },

    01: - P05 header in middle of test data
        - mid data length
        - mid counter value in header data
        - mid counter value in P05CheckState (DeltaCounter == 1)

       {                    +-P05Config-+
                +-Offset(in bits)
                |     +-DataLength(in bits)
                |     |          +-Configured DataID
                |     |          |         +-MaxDeltaCounter
              { 80U, 320U, EBTEST_DATA_ID, 2U },
                           +-P05CheckState-+
                         +-P05CheckStatus
                         |                   +-Counter
             {E2E_P05STATUS_WRONGSEQUENCE, 0x7FU},
             +-Offset value in E2E header
             |       +-NoNewDataReceived
             |       |        +-Counter value in E2E header
             |       |        |                 +-Crc
             0U,   FALSE,   0x80U,   EBTEST_RETVAL_CALCULATECRC16
       },

    02: - P05 header at end of test data
        - maximum data length
        - maximum counter value in header data
        - counter value in P05CheckState smaller than counter in header data (DeltaCounter == 1)

       {                    +-P05Config-+
                 +-Offset(in bits)
                 |     +-DataLength(in bits)
                 |     |          +-Configured DataID
                 |     |          |         +-MaxDeltaCounter
              { 616U, 640U, EBTEST_DATA_ID, 2U },
                           +-P05CheckState-+
                         +-P05CheckStatus
                         |                   +-Counter
             {E2E_P05STATUS_WRONGSEQUENCE, 0xFEU},
             +-Offset value in E2E header
             |       +-NoNewDataReceived
             |       |         +-Counter value in E2E header
             |       |         |                 +-Crc
             77U,   FALSE,   0xFFU,   EBTEST_RETVAL_CALCULATECRC16
       }

  
Test Output: 

    OutputDataXX:

                 +-P05CheckState-+
              +-P05CheckStatus  +-Counter +-retVal +-invokedCrcCount
    00:  {{E2E_P05STATUS_OK, 0x00U},  E2E_E_OK,    3U},
                 +-P05CheckState-+
              +-P05CheckStatus  +-Counter +-retVal +-invokedCrcCount
    01:  {{E2E_P05STATUS_OK, 0x80U},  E2E_E_OK,    4U},
                 +-P05CheckState-+
              +-P05CheckStatus  +-Counter +-retVal +-invokedCrcCount
    02:  {{E2E_P05STATUS_OK, 0xFFU},  E2E_E_OK,    4U}

  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020411</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020413</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020414</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020406</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020399</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP050200677</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020416</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020449</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_02001_P05CheckStatus_OkSomeLost</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_02_P05Check/source/application/E2EP05_ConTest_02_P05Check.c</sourcefile>
      <sourceline>1012</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

      1. Test that E2E_P05STATUS_OKSOMELOST is set if the difference
         between received counter and state counter is greater than 1
         and smaller than configured MaxDeltaCounter.
      2. Test correct CRC callouts for different P05 header offsets
         (beginning, end, in the mid of the received data).
      3. Test that the library correctly considers a wrap around of
         the counter value in case the ReceivedCounter &lt; State-&gt;Counter.

  &lt;/para&gt;
  
Test Object: E2E_P05CheckStatus()
Test Precondition: 
  
Test Execution: 

    Execute the following steps several times with InputDataXX from input:

    01: Call E2E_P05Check() with
        - the E2E_P05Config stated in InputDataXX
        - the E2E_P05CheckState stated in InputDataXX
        - the data VDxx stated in InputDataXX

    VPs checked in EBTEST_GenericTest():

    02: VP(ASR_E2EP05020047,ASR_E2EP05020449):
        The return value of E2E_P05Check()
        shall be equal to the value specified in OutputDataXX.
    03: VP(ASR_E2EP05020411,ASR_E2EP05020432,ASR_E2EP05020413,ASR_E2EP05020414,ASR_E2EP05020416):
        State-&gt;Status shall be equal to the value specified in OutputDataXX.
    04: VP(ASR_E2EP05020411,ASR_E2EP05020432,ASR_E2EP05020413,ASR_E2EP05020414,ASR_E2EP05020416):
        State-&gt;Counter shall be equal to the value specified in OutputDataXX.

    VPs checked in SCrc_CalculateCRC16() stub:

    05: VP(ASR_E2EP05020406,ASR_E2EP05020400,ASR_E2EP05020401,ASR_E2EP05020399):
        SCrc_CalculateCRC16() shall be called 4 times for each E2E_P05Check() iteration
        if configured Offset is greater than 0:
        first call:
          length in bytes shall be Offset
          data bytes used in the calculation the ones located before the CRC bytes
          the start value shall be 0xFFFF
          SCrc_IsFirstCall is TRUE
        second call:
          length in bytes shall be Length - Offset - 2
          data bytes used in the calculation the ones located after the CRC bytes
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        third call:
          length in bytes shall be 1
          low byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        fourth call:
          length in bytes shall be 1
          high byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
    06: VP(ASR_E2EP05020406,ASR_E2EP05020400,ASR_E2EP05020401,ASR_E2EP05020399):
        SCrc_CalculateCRC16() shall be called 3 times for each E2E_P05Check() iteration
        if configured Offset is 0:
        first call:
          length in bytes shall be Length - Offset - 2
          data bytes used in the calculation the ones located after the CRC bytes
          the start value shall be 0xFFFF
          SCrc_IsFirstCall is TRUE
        second call:
          length in bytes shall be 1
          low byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        third call:
          length in bytes shall be 1
          high byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE

    Test aspects of individual InputDataXX/OutputDataXX:

    Data00..Data02: VP(ASR_E2EP05020413,ASR_E2EP05020416):
                    Difference between received counter and state counter is greater than 1 and
                    smaller than or equal to configured MaxDeltaCounter.
    Data00: VP(ASR_E2EP05020400):
            SCrc_CalculateCRC16() is called three times.
    Data01..Data02: VP(ASR_E2EP05020400):
                    SCrc_CalculateCRC16() is called four times.

    Used Test Strategies:
    - Pair wise tests
    (Different values among different E2E_P05CheckState parameters)
    - Boundary Value Analysis
    (Either usage of all possible values or min / intermediate /max value for individual parameters)
    Note: A wrap around of the counter is possible w.r.t. to lastReceivedCounter value.
    - Equivalence Class Partitioning
    (Testing only transitions to Rx status E2E_P05STATUS_OKSOMELOST)

  
Test Input: 

    InputDataXX:

    00: - P05 header at beginning of test data
        - minimum data length
        - counter value in header data is 1
        - maximum counter value in P05CheckState (wrap around of the counter considered)
        - MaxDeltaCounter is 2

       {                    +-P05Config-+
                +-Offset(in bits)
                |   +-DataLength(in bits)
                |   |          +-Configured DataID
                |   |          |         +-MaxDeltaCounter
              { 0U, 24U, EBTEST_DATA_ID, 2U },
                           +-P05CheckState-+
                         +-P05CheckStatus
                         |                   +-Counter
             {E2E_P05STATUS_WRONGSEQUENCE, 0xFFU},
             +-Offset value in E2E header
             |       +-NoNewDataReceived
             |       |        +-Counter value in E2E header
             |       |        |                 +-Crc
             0U,   FALSE,     1U,   EBTEST_RETVAL_CALCULATECRC16
       },

    01: - P05 header in middle of test data
        - mid data length
        - mid counter value in header data
        - mid counter value in P05CheckState (DeltaCounter == 100)
        - MaxDeltaCounter is 100

       {                    +-P05Config-+
                +-Offset(in bits)
                |     +-DataLength(in bits)
                |     |          +-Configured DataID
                |     |          |          +-MaxDeltaCounter
              { 80U, 320U, EBTEST_DATA_ID, 100U },
                           +-P05CheckState-+
                         +-P05CheckStatus
                         |                 +-Counter
             {E2E_P05STATUS_WRONGSEQUENCE, 50U},
             +-Offset value in E2E header
             |       +-NoNewDataReceived
             |       |        +-Counter value in E2E header
             |       |        |                 +-Crc
             0U,   FALSE,    150U,   EBTEST_RETVAL_CALCULATECRC16
       },

    02: - P05 header at end of test data
        - maximum data length
        - maximum counter value in header data
        - minimum counter value in P05CheckState (DeltaCounter == 0xFF)
        - MaxDeltaCounter is 0xFF

       {                    +-P05Config-+
                 +-Offset(in bits)
                 |     +-DataLength(in bits)
                 |     |          +-Configured DataID
                 |     |          |           +-MaxDeltaCounter
              { 616U, 640U, EBTEST_DATA_ID, 0xFFU },
                           +-P05CheckState-+
                         +-P05CheckStatus
                         |                   +-Counter
             {E2E_P05STATUS_WRONGSEQUENCE, 0x00U},
             +-Offset value in E2E header
             |       +-NoNewDataReceived
             |       |         +-Counter value in E2E header
             |       |         |                 +-Crc
             77U,   FALSE,   0xFFU,   EBTEST_RETVAL_CALCULATECRC16
       }

  
Test Output: 

    OutputDataXX:

                 +-P05CheckState-+
              +-P05CheckStatus         +-Counter +-retVal +-invokedCrcCount
    00:  {{E2E_P05STATUS_OKSOMELOST, 0x01U},   E2E_E_OK,  3U},
                 +-P05CheckState-+
              +-P05CheckStatus         +-Counter +-retVal +-invokedCrcCount
    01:  {{E2E_P05STATUS_OKSOMELOST, 150U},    E2E_E_OK,  4U},
                 +-P05CheckState-+
              +-P05CheckStatus         +-Counter +-retVal +-invokedCrcCount
    02:  {{E2E_P05STATUS_OKSOMELOST, 0xFFU},   E2E_E_OK,  4U}

  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020411</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020413</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020399</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020416</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020449</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_02002_P05CheckStatus_WrongSequence</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_02_P05Check/source/application/E2EP05_ConTest_02_P05Check.c</sourcefile>
      <sourceline>1281</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

      1. Test that E2E_P05STATUS_WRONGSEQUENCE is set if the difference
         between the read Counter value from the passed data and the Counter
         in the state structure is greater than MaxDeltaCounter.
      2. Test correct CRC callouts for different P05 header offsets
         (beginning, end, in the mid of the received data).
      3. Test that the library correctly considers a wrap around of
         the counter value in case the ReceivedCounter &lt; State-&gt;Counter.

  &lt;/para&gt;
  
Test Object: E2E_P05CheckStatus()
Test Precondition: 
  
Test Execution: 

    Execute the following steps several times with InputDataXX from input:

    01: Call E2E_P05Check() with
        - the E2E_P05Config stated in InputDataXX
        - the E2E_P05CheckState stated in InputDataXX
        - the data VDxx stated in InputDataXX

    VPs checked in EBTEST_GenericTest():

    02: VP(ASR_E2EP05020047,ASR_E2EP05020449):
        The return value of E2E_P05Check()
        shall be equal to the value specified in OutputDataXX.
    03: VP(ASR_E2EP05020411,ASR_E2EP05020432,ASR_E2EP05020413,ASR_E2EP05020414,ASR_E2EP05020416):
        State-&gt;Status shall be equal to the value specified in OutputDataXX.
    04: VP(ASR_E2EP05020411,ASR_E2EP05020432,ASR_E2EP05020413,ASR_E2EP05020414,ASR_E2EP05020416):
        State-&gt;Counter shall be equal to the value specified in OutputDataXX.

    VPs checked in SCrc_CalculateCRC16() stub:

    05: VP(ASR_E2EP05020406,ASR_E2EP05020400,ASR_E2EP05020401,ASR_E2EP05020399):
        SCrc_CalculateCRC16() shall be called 4 times for each E2E_P05Check() iteration
        if configured Offset is greater than 0:
        first call:
          length in bytes shall be Offset
          data bytes used in the calculation the ones located before the CRC bytes
          the start value shall be 0xFFFF
          SCrc_IsFirstCall is TRUE
        second call:
          length in bytes shall be Length - Offset - 2
          data bytes used in the calculation the ones located after the CRC bytes
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        third call:
          length in bytes shall be 1
          low byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        fourth call:
          length in bytes shall be 1
          high byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
    06: VP(ASR_E2EP05020406,ASR_E2EP05020400,ASR_E2EP05020401,ASR_E2EP05020399):
        SCrc_CalculateCRC16() shall be called 3 times for each E2E_P05Check() iteration
        if configured Offset is 0:
        first call:
          length in bytes shall be Length - Offset - 2
          data bytes used in the calculation the ones located after the CRC bytes
          the start value shall be 0xFFFF
          SCrc_IsFirstCall is TRUE
        second call:
          length in bytes shall be 1
          low byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        third call:
          length in bytes shall be 1
          high byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE

    Test aspects of individual InputDataXX/OutputDataXX:

    Data00..Data03: VP(ASR_E2EP05020413,ASR_E2EP05020416):
                    Difference between received counter and state counter is greater than
                    configured MaxDeltaCounter.
    Data00: VP(ASR_E2EP05020400):
            SCrc_CalculateCRC16() is called three times.
    Data01..Data02: VP(ASR_E2EP05020400):
                    SCrc_CalculateCRC16() is called four times.

    Used Test Strategies:
    - Pair wise tests
    (Different values among different E2E_P05CheckState parameters)
    - Boundary Value Analysis
    (Either usage of all possible values or min / intermediate /max value for individual parameters)
    Note: A wrap around of the counter is possible w.r.t. to lastReceivedCounter value.
    - Equivalence Class Partitioning
    (Testing only transitions to Rx status E2E_P05STATUS_WRONGSEQUENCE)

  
Test Input: 

    InputDataXX:

    00: - P05 header at beginning of test data
        - minimum data length
        - minimum counter value in header data
        - maximum counter value in P05CheckState (wrap around of the counter considered)
        - MaxDeltaCounter is 0

       {                    +-P05Config-+
                +-Offset(in bits)
                |   +-DataLength(in bits)
                |   |          +-Configured DataID
                |   |          |         +-MaxDeltaCounter
              { 0U, 24U, EBTEST_DATA_ID, 0U },
                           +-P05CheckState-+
                         +-P05CheckStatus
                         |                +-Counter
             {E2E_P05STATUS_OKSOMELOST, 0xFFU},
             +-Offset value in E2E header
             |       +-NoNewDataReceived
             |       |        +-Counter value in E2E header
             |       |        |                 +-Crc
             0U,   FALSE,     0U,   EBTEST_RETVAL_CALCULATECRC16
       },

    01: - P05 header in middle of test data
        - mid data length
        - mid counter value in header data
        - mid counter value in P05CheckState (DeltaCounter == 51)
        - MaxDeltaCounter is 50

       {                    +-P05Config-+
                +-Offset(in bits)
                |     +-DataLength(in bits)
                |     |          +-Configured DataID
                |     |          |         +-MaxDeltaCounter
              { 80U, 320U, EBTEST_DATA_ID, 50U },
                           +-P05CheckState-+
                         +-P05CheckStatus
                         |              +-Counter
             {E2E_P05STATUS_OKSOMELOST, 50U},
             +-Offset value in E2E header
             |       +-NoNewDataReceived
             |       |        +-Counter value in E2E header
             |       |        |                 +-Crc
             0U,   FALSE,    101U,   EBTEST_RETVAL_CALCULATECRC16
       },

    02: - P05 header at end of test data
        - maximum data length
        - maximum counter value in header data
        - minimum counter value in P05CheckState (DeltaCounter == 0xFF)
        - MaxDeltaCounter is 0xFE

       {                    +-P05Config-+
                 +-Offset(in bits)
                 |     +-DataLength(in bits)
                 |     |          +-Configured DataID
                 |     |          |           +-MaxDeltaCounter
              { 616U, 640U, EBTEST_DATA_ID, 0xFEU },
                           +-P05CheckState-+
                         +-P05CheckStatus
                         |                +-Counter
             {E2E_P05STATUS_OKSOMELOST, 0x00U},
             +-Offset value in E2E header
             |       +-NoNewDataReceived
             |       |         +-Counter value in E2E header
             |       |         |                 +-Crc
             77U,   FALSE,   0xFFU,   EBTEST_RETVAL_CALCULATECRC16
       }

  
Test Output: 

    OutputDataXX:

                 +-P05CheckState-+
              +-P05CheckStatus            +-Counter +-retVal +-invokedCrcCount
    00:  {{E2E_P05STATUS_WRONGSEQUENCE, 0x00U},   E2E_E_OK,  3U},
                 +-P05CheckState-+
              +-P05CheckStatus            +-Counter +-retVal +-invokedCrcCount
    01:  {{E2E_P05STATUS_WRONGSEQUENCE, 101U},    E2E_E_OK,  4U},
                 +-P05CheckState-+
              +-P05CheckStatus            +-Counter +-retVal +-invokedCrcCount
    02:  {{E2E_P05STATUS_WRONGSEQUENCE, 0xFFU},   E2E_E_OK,  4U}

  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020411</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020413</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020399</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020416</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020449</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_02003_P05CheckStatus_Repeated</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_02_P05Check/source/application/E2EP05_ConTest_02_P05Check.c</sourcefile>
      <sourceline>1550</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

      1. Test that E2E_P05STATUS_REPEATED is set if the read Counter value
         from the passed data is equal to the Counter in the state structure.
      2. Test correct CRC callouts for different P05 header offsets
         (beginning, end, in the mid of the received data).
      3. Test that the library correctly considers a wrap around of
         the counter value in case the ReceivedCounter &lt; State-&gt;Counter.

  &lt;/para&gt;
  
Test Object: E2E_P05CheckStatus()
Test Precondition: 
  
Test Execution: 

    Execute the following steps several times with InputDataXX from input:

    01: Call E2E_P05Check() with
        - the E2E_P05Config stated in InputDataXX
        - the E2E_P05CheckState stated in InputDataXX
        - the data VDxx stated in InputDataXX

    VPs checked in EBTEST_GenericTest():

    02: VP(ASR_E2EP05020047,ASR_E2EP05020449):
        The return value of E2E_P05Check()
        shall be equal to the value specified in OutputDataXX.
    03: VP(ASR_E2EP05020411,ASR_E2EP05020432,ASR_E2EP05020413,ASR_E2EP05020414,ASR_E2EP05020416):
        State-&gt;Status shall be equal to the value specified in OutputDataXX.
    04: VP(ASR_E2EP05020411,ASR_E2EP05020432,ASR_E2EP05020413,ASR_E2EP05020414,ASR_E2EP05020416):
        State-&gt;Counter shall be equal to the value specified in OutputDataXX.

    VPs checked in SCrc_CalculateCRC16() stub:

    05: VP(ASR_E2EP05020406,ASR_E2EP05020400,ASR_E2EP05020401,ASR_E2EP05020399):
        SCrc_CalculateCRC16() shall be called 4 times for each E2E_P05Check() iteration
        if configured Offset is greater than 0:
        first call:
          length in bytes shall be Offset
          data bytes used in the calculation the ones located before the CRC bytes
          the start value shall be 0xFFFF
          SCrc_IsFirstCall is TRUE
        second call:
          length in bytes shall be Length - Offset - 2
          data bytes used in the calculation the ones located after the CRC bytes
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        third call:
          length in bytes shall be 1
          low byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        fourth call:
          length in bytes shall be 1
          high byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
    06: VP(ASR_E2EP05020406,ASR_E2EP05020400,ASR_E2EP05020401,ASR_E2EP05020399):
        SCrc_CalculateCRC16() shall be called 3 times for each E2E_P05Check() iteration
        if configured Offset is 0:
        first call:
          length in bytes shall be Length - Offset - 2
          data bytes used in the calculation the ones located after the CRC bytes
          the start value shall be 0xFFFF
          SCrc_IsFirstCall is TRUE
        second call:
          length in bytes shall be 1
          low byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        third call:
          length in bytes shall be 1
          high byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE

    Test aspects of individual InputDataXX/OutputDataXX:

    Data00..Data03: VP(ASR_E2EP05020413,ASR_E2EP05020416):
                    Difference between received counter and state counter is 0.
    Data00: VP(ASR_E2EP05020400):
            SCrc_CalculateCRC16() is called three times.
    Data01..Data02: VP(ASR_E2EP05020400):
                    SCrc_CalculateCRC16() is called four times.

    Used Test Strategies:
    - Pair wise tests
    (Different values among different E2E_P05CheckState parameters)
    - Boundary Value Analysis
    (Either usage of all possible values or min / intermediate /max value for individual parameters)
    Note: A wrap around of the counter is possible w.r.t. to lastReceivedCounter value.
    - Equivalence Class Partitioning
    (Testing only transitions to Rx status E2E_P05STATUS_REPEATED)

  
Test Input: 

    InputDataXX:

    00: - P05 header at beginning of test data
        - minimum data length
        - minimum counter value in header data
        - minimum counter value in P05CheckState
        - MaxDeltaCounter is 1

       {                    +-P05Config-+
                +-Offset(in bits)
                |   +-DataLength(in bits)
                |   |          +-Configured DataID
                |   |          |         +-MaxDeltaCounter
              { 0U, 24U, EBTEST_DATA_ID, 1U },
                           +-P05CheckState-+
                         +-P05CheckStatus
                         |                +-Counter
             {E2E_P05STATUS_OKSOMELOST, 0x00U},
             +-Offset value in E2E header
             |       +-NoNewDataReceived
             |       |        +-Counter value in E2E header
             |       |        |                 +-Crc
             0U,   FALSE,     0U,   EBTEST_RETVAL_CALCULATECRC16
       },

    01: - P05 header in middle of test data
        - mid data length
        - mid counter value in header data
        - mid counter value in P05CheckState (DeltaCounter == 0)
        - MaxDeltaCounter is 50

       {                    +-P05Config-+
                +-Offset(in bits)
                |     +-DataLength(in bits)
                |     |          +-Configured DataID
                |     |          |         +-MaxDeltaCounter
              { 80U, 320U, EBTEST_DATA_ID, 50U },
                           +-P05CheckState-+
                         +-P05CheckStatus
                         |              +-Counter
             {E2E_P05STATUS_OKSOMELOST, 50U},
             +-Offset value in E2E header
             |       +-NoNewDataReceived
             |       |        +-Counter value in E2E header
             |       |        |                 +-Crc
             0U,   FALSE,     50U,   EBTEST_RETVAL_CALCULATECRC16
       },

    02: - P05 header at end of test data
        - maximum data length
        - maximum counter value in header data
        - maximum counter value in P05CheckState
        - MaxDeltaCounter is 0xFF

       {                    +-P05Config-+
                 +-Offset(in bits)
                 |     +-DataLength(in bits)
                 |     |          +-Configured DataID
                 |     |          |           +-MaxDeltaCounter
              { 616U, 640U, EBTEST_DATA_ID, 0xFFU },
                           +-P05CheckState-+
                         +-P05CheckStatus
                         |                +-Counter
             {E2E_P05STATUS_OKSOMELOST, 0xFFU},
             +-Offset value in E2E header
             |       +-NoNewDataReceived
             |       |         +-Counter value in E2E header
             |       |         |                 +-Crc
             77U,   FALSE,   0xFFU,   EBTEST_RETVAL_CALCULATECRC16
       }

  
Test Output: 

    OutputDataXX:

                 +-P05CheckState-+
              +-P05CheckStatus      +-Counter +-retVal +-invokedCrcCount
    00:  {{E2E_P05STATUS_REPEATED, 0x00U}, E2E_E_OK,   3U},
                 +-P05CheckState-+
              +-P05CheckStatus      +-Counter +-retVal +-invokedCrcCount
    01:  {{E2E_P05STATUS_REPEATED, 50U},   E2E_E_OK,   4U},
                 +-P05CheckState-+
              +-P05CheckStatus      +-Counter +-retVal +-invokedCrcCount
    02:  {{E2E_P05STATUS_REPEATED, 0xFFU}, E2E_E_OK,   4U}

  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020411</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020413</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020399</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020416</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020449</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_02004_P05CheckStatus_WrongCrc</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_02_P05Check/source/application/E2EP05_ConTest_02_P05Check.c</sourcefile>
      <sourceline>1818</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

      1. Test that E2E_P05STATUS_ERROR is set if the read CRC value
         from the passed data differs from the calculated CRC value.
      2. Test correct CRC callouts for different P05 header offsets
         (beginning, end, in the mid of the received data).

  &lt;/para&gt;
  
Test Object: E2E_P05CheckStatus()
Test Precondition: 
  
Test Execution: 

    Execute the following steps several times with InputDataXX from input:

    01: Call E2E_P05Check() with
        - the E2E_P05Config stated in InputDataXX
        - the E2E_P05CheckState stated in InputDataXX
        - the data VDxx stated in InputDataXX

    VPs checked in EBTEST_GenericTest():

    02: VP(ASR_E2EP05020047,ASR_E2EP05020449):
        The return value of E2E_P05Check()
        shall be equal to the value specified in OutputDataXX.
    03: VP(ASR_E2EP05020411,ASR_E2EP05020432,ASR_E2EP05020413,ASR_E2EP05020414,ASR_E2EP05020416):
        State-&gt;Status shall be equal to the value specified in OutputDataXX.
    04: VP(ASR_E2EP05020411,ASR_E2EP05020432,ASR_E2EP05020413,ASR_E2EP05020414,ASR_E2EP05020416):
        State-&gt;Counter shall be equal to the value specified in OutputDataXX.

    VPs checked in SCrc_CalculateCRC16() stub:

    05: VP(ASR_E2EP05020406,ASR_E2EP05020400,ASR_E2EP05020401,ASR_E2EP05020399):
        SCrc_CalculateCRC16() shall be called 4 times for each E2E_P05Check() iteration
        if configured Offset is greater than 0:
        first call:
          length in bytes shall be Offset
          data bytes used in the calculation the ones located before the CRC bytes
          the start value shall be 0xFFFF
          SCrc_IsFirstCall is TRUE
        second call:
          length in bytes shall be Length - Offset - 2
          data bytes used in the calculation the ones located after the CRC bytes
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        third call:
          length in bytes shall be 1
          low byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        fourth call:
          length in bytes shall be 1
          high byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
    06: VP(ASR_E2EP05020406,ASR_E2EP05020400,ASR_E2EP05020401,ASR_E2EP05020399):
        SCrc_CalculateCRC16() shall be called 3 times for each E2E_P05Check() iteration
        if configured Offset is 0:
        first call:
          length in bytes shall be Length - Offset - 2
          data bytes used in the calculation the ones located after the CRC bytes
          the start value shall be 0xFFFF
          SCrc_IsFirstCall is TRUE
        second call:
          length in bytes shall be 1
          low byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        third call:
          length in bytes shall be 1
          high byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE

    Test aspects of individual InputDataXX/OutputDataXX:

    Data00..Data04: VP(ASR_E2EP05020414,ASR_E2EP05020406,ASR_E2EP05020416):
                    CRC value from header is different than calculated CRC value.
    Data00..Data01: VP(ASR_E2EP05020400):
                    SCrc_CalculateCRC16() is called three times.
    Data02..Data04: VP(ASR_E2EP05020400):
                    SCrc_CalculateCRC16() is called four times.

    Used Test Strategies:
    - Pair wise tests
    (Different values among different E2E_P05CheckState parameters)
    - Boundary Value Analysis
    (Either usage of all possible values or min / intermediate /max value for individual parameters)
    Note: A wrap around of the counter is possible w.r.t. to lastReceivedCounter value.
    - Equivalence Class Partitioning
    (Testing only transitions to Rx status E2E_P05STATUS_ERROR due to wrong CRC)

  
Test Input: 

    InputDataXX:

    00: - P05 header at beginning of test data
        - minimum data length
        - minimum counter value in header data
        - maximum counter value in P05CheckState (wrap around of the counter considered)
        - wrong CRC in E2E header (EBTEST_RETVAL_CALCULATECRC16_1OF3)

       {                    +-P05Config-+
                +-Offset(in bits)
                |   +-DataLength(in bits)
                |   |          +-Configured DataID
                |   |          |         +-MaxDeltaCounter
              { 0U, 24U, EBTEST_DATA_ID, 2U },
                           +-P05CheckState-+
                         +-P05CheckStatus
                         |                +-Counter
             {E2E_P05STATUS_OKSOMELOST, 0xFFU},
             +-Offset value in E2E header
             |       +-NoNewDataReceived
             |       |        +-Counter value in E2E header
             |       |        |                 +-Crc
             0U,   FALSE,     0U,   EBTEST_RETVAL_CALCULATECRC16_1OF3
       },

    01: - P05 header at beginning of test data
        - minimum data length
        - minimum counter value in header data
        - maximum counter value in P05CheckState (wrap around of the counter considered)
        - wrong CRC in E2E header (EBTEST_RETVAL_CALCULATECRC16_2OF3)

       {                    +-P05Config-+
                +-Offset(in bits)
                |   +-DataLength(in bits)
                |   |          +-Configured DataID
                |   |          |         +-MaxDeltaCounter
              { 0U, 24U, EBTEST_DATA_ID, 2U },
                           +-P05CheckState-+
                         +-P05CheckStatus
                         |                +-Counter
             {E2E_P05STATUS_OKSOMELOST, 0xFFU},
             +-Offset value in E2E header
             |       +-NoNewDataReceived
             |       |        +-Counter value in E2E header
             |       |        |                 +-Crc
             0U,   FALSE,     0U,   EBTEST_RETVAL_CALCULATECRC16_2OF3
       },

    02: - P05 header in middle of test data
        - mid data length
        - mid counter value in header data
        - mid counter value in P05CheckState (DeltaCounter == 1)
        - wrong CRC in E2E header (EBTEST_RETVAL_CALCULATECRC16_1OF4)

       {                    +-P05Config-+
                +-Offset(in bits)
                |     +-DataLength(in bits)
                |     |          +-Configured DataID
                |     |          |         +-MaxDeltaCounter
              { 80U, 320U, EBTEST_DATA_ID, 2U },
                           +-P05CheckState-+
                         +-P05CheckStatus
                         |              +-Counter
             {E2E_P05STATUS_OKSOMELOST, 50U},
             +-Offset value in E2E header
             |       +-NoNewDataReceived
             |       |         +-Counter value in E2E header
             |       |         |                 +-Crc
             10U,   FALSE,     51U,   EBTEST_RETVAL_CALCULATECRC16_1OF4
       },

    03: - P05 header in middle of test data
        - mid data length
        - mid counter value in header data
        - mid counter value in P05CheckState (DeltaCounter == 1)
        - wrong CRC in E2E header (EBTEST_RETVAL_CALCULATECRC16_2OF4)

       {                    +-P05Config-+
                 +-Offset(in bits)
                 |     +-DataLength(in bits)
                 |     |          +-Configured DataID
                 |     |          |         +-MaxDeltaCounter
              { 160U, 480U, EBTEST_DATA_ID, 2U },
                           +-P05CheckState-+
                         +-P05CheckStatus
                         |               +-Counter
             {E2E_P05STATUS_OKSOMELOST, 200U},
             +-Offset value in E2E header
             |       +-NoNewDataReceived
             |       |         +-Counter value in E2E header
             |       |         |                 +-Crc
             20U,   FALSE,    201U,   EBTEST_RETVAL_CALCULATECRC16_2OF4
       },

    04: - P05 header at end of test data
        - maximum data length
        - maximum counter value in header data
        - counter value in P05CheckState is 0xFE (DeltaCounter == 1)
        - wrong CRC in E2E header (EBTEST_RETVAL_CALCULATECRC16_3OF4)

       {                    +-P05Config-+
                 +-Offset(in bits)
                 |     +-DataLength(in bits)
                 |     |          +-Configured DataID
                 |     |          |         +-MaxDeltaCounter
              { 616U, 640U, EBTEST_DATA_ID, 2U },
                           +-P05CheckState-+
                         +-P05CheckStatus
                         |                +-Counter
             {E2E_P05STATUS_OKSOMELOST, 0xFEU},
             +-Offset value in E2E header
             |       +-NoNewDataReceived
             |       |         +-Counter value in E2E header
             |       |         |                 +-Crc
             77U,   FALSE,   0xFFU,   EBTEST_RETVAL_CALCULATECRC16_3OF4
       }

  
Test Output: 

    OutputDataXX:

                 +-P05CheckState-+
              +-P05CheckStatus     +-Counter +-retVal +-invokedCrcCount
    00:  {{E2E_P05STATUS_ERROR, 0xFFU},  E2E_E_OK,   3U},
                 +-P05CheckState-+
              +-P05CheckStatus     +-Counter +-retVal +-invokedCrcCount
    01:  {{E2E_P05STATUS_ERROR, 0xFFU},  E2E_E_OK,   3U},
                 +-P05CheckState-+
              +-P05CheckStatus     +-Counter +-retVal +-invokedCrcCount
    02:  {{E2E_P05STATUS_ERROR,   50U},  E2E_E_OK,   4U},
                 +-P05CheckState-+
              +-P05CheckStatus     +-Counter +-retVal +-invokedCrcCount
    03:  {{E2E_P05STATUS_ERROR,   200U}, E2E_E_OK,   4U},
                 +-P05CheckState-+
              +-P05CheckStatus     +-Counter +-retVal +-invokedCrcCount
    04:  {{E2E_P05STATUS_ERROR, 0xFEU},  E2E_E_OK,   4U}

  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020411</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020414</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020399</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020416</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020449</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_02005_P05CheckStatus_NoNewData</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_02_P05Check/source/application/E2EP05_ConTest_02_P05Check.c</sourcefile>
      <sourceline>2155</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

      Test that E2E_P05STATUS_NONEWDATA is set if the passed
      DataPtr is NULL and Length is 0.

  &lt;/para&gt;
  
Test Object: E2E_P05CheckStatus()
Test Precondition: 
  
Test Execution: 

    Execute the following steps several times with InputDataXX from input:

    01: Call E2E_P05Check() with
        - the E2E_P05Config stated in InputDataXX
        - the E2E_P05CheckState stated in InputDataXX
        - the data VDxx stated in InputDataXX
        - Length equal to 0

    VPs checked in EBTEST_GenericTest():

    02: VP(ASR_E2EP05020047,ASR_E2EP05020449):
        The return value of E2E_P05Check()
        shall be equal to the value specified in OutputDataXX.
    03: VP(ASR_E2EP05020411,ASR_E2EP05020432,ASR_E2EP05020413,ASR_E2EP05020414,ASR_E2EP05020416):
        State-&gt;Status shall be equal to the value specified in OutputDataXX.
    04: VP(ASR_E2EP05020411,ASR_E2EP05020432,ASR_E2EP05020413,ASR_E2EP05020414,ASR_E2EP05020416):
        State-&gt;Counter shall be equal to the value specified in OutputDataXX.

    VPs checked in SCrc_CalculateCRC16() stub:

    05: VP(ASR_E2EP05020406,ASR_E2EP05020400,ASR_E2EP05020401,ASR_E2EP05020399):
        SCrc_CalculateCRC16() shall be called 4 times for each E2E_P05Check() iteration
        if configured Offset is greater than 0:
        first call:
          length in bytes shall be Offset
          data bytes used in the calculation the ones located before the CRC bytes
          the start value shall be 0xFFFF
          SCrc_IsFirstCall is TRUE
        second call:
          length in bytes shall be Length - Offset - 2
          data bytes used in the calculation the ones located after the CRC bytes
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        third call:
          length in bytes shall be 1
          low byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        fourth call:
          length in bytes shall be 1
          high byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
    06: VP(ASR_E2EP05020406,ASR_E2EP05020400,ASR_E2EP05020401,ASR_E2EP05020399):
        SCrc_CalculateCRC16() shall be called 3 times for each E2E_P05Check() iteration
        if configured Offset is 0:
        first call:
          length in bytes shall be Length - Offset - 2
          data bytes used in the calculation the ones located after the CRC bytes
          the start value shall be 0xFFFF
          SCrc_IsFirstCall is TRUE
        second call:
          length in bytes shall be 1
          low byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        third call:
          length in bytes shall be 1
          high byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE

    Test aspects of individual InputDataXX/OutputDataXX:

    Data00: VP(ASR_E2EP05020416):
            DataPtr is NULL.

    Used Test Strategies:
    - Pair wise tests
    (Different values among different E2E_P05CheckState parameters)
    - Boundary Value Analysis
    (Either usage of all possible values or min / intermediate /max value for individual parameters)
    Note: A wrap around of the counter is possible w.r.t. to lastReceivedCounter value.
    - Equivalence Class Partitioning
    (Testing only transitions to Rx status E2E_P05STATUS_NONEWDATA)

  
Test Input: 

    InputDataXX:

    00: - pointer to data array is set to NULL in EBTEST_GenericTest()

       {                    +-P05Config-+
                +-Offset(in bits)
                |   +-DataLength(in bits)
                |   |          +-Configured DataID
                |   |          |         +-MaxDeltaCounter
              { 0U, 24U, EBTEST_DATA_ID, 2U },

                             +-P05CheckState-+
                           +-P05CheckStatus
                           |                +-Counter
               {E2E_P05STATUS_OKSOMELOST, 0xFFU},
               +-Offset value in E2E header
               |       +-NoNewDataReceived
               |       |        +-Counter value in E2E header
               |       |        |                 +-Crc
               0U,   TRUE,     0U,   EBTEST_RETVAL_CALCULATECRC16
       }

  
Test Output: 

    OutputDataXX:

                 +-P05CheckState-+
              +-P05CheckStatus         +-Counter +-retVal +-invokedCrcCount
    00:  {{E2E_P05STATUS_NONEWDATA, 0xFFU},   E2E_E_OK,   0U},

  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020411</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020416</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020449</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_02006_P05MapStatusToSM</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_02_P05Check/source/application/E2EP05_ConTest_02_P05Check.c</sourcefile>
      <sourceline>2332</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

     1) Test that if CheckReturn=E2E_E_OK then E2E_P05MapStatusToSM provides the following
        return value depending on the passed Status value:
        Status==E2E_P05STATUS_OK =&gt; E2E_P_OK
        Status==E2E_P05STATUS_OKSOMELOST =&gt; E2E_P_OK
        Status==E2E_P05STATUS_ERROR =&gt; E2E_P_ERROR
        Status==E2E_P05STATUS_REPEATED =&gt; E2E_P_REPEATED
        Status==E2E_P05STATUS_NONEWDATA =&gt; E2E_P_NONEWDATA
        Status==E2E_P05STATUS_WRONGSEQUENCE=&gt; E2E_P_WRONGSEQUENCE

     2) Test that if CheckReturn != E2E_E_OK then the function E2E_P05MapStatusToSM()
        returns E2E_P_ERROR.

     3) Test that if Status is undefined then the function E2E_P05MapStatusToSM()
        returns E2E_P_ERROR.

  &lt;/para&gt;
  
Test Object: E2E_P05MapStatusToSM()
Test Precondition: 
  
Test Execution: 

    01: Set first parameter to E2E_E_OK and second parameter to E2E_P05STATUS_OK
        and call E2E_P05MapStatusToSM().
    02: VP(ASR_E2EP05020453):
        E2E_P05MapStatusToSM() shall return E2E_P_OK.
    03: Set first parameter to E2E_E_OK and second parameter to E2E_P05STATUS_OKSOMELOST
        and call E2E_P05MapStatusToSM().
    04: VP(ASR_E2EP05020453):
        E2E_P05MapStatusToSM() shall return E2E_P_OK.
    05: Set first parameter to E2E_E_OK and second parameter to E2E_P05STATUS_ERROR
        and call E2E_P05MapStatusToSM().
    06: VP(ASR_E2EP05020453):
        E2E_P05MapStatusToSM() shall return E2E_P_ERROR.
    07: Set first parameter to E2E_E_OK and second parameter to E2E_P05STATUS_REPEATED
        and call E2E_P05MapStatusToSM().
    08: VP(ASR_E2EP05020453):
        E2E_P05MapStatusToSM() shall return E2E_P_REPEATED.
    09: Set first parameter to E2E_E_OK and second parameter to E2E_P05STATUS_NONEWDATA
        and call E2E_P05MapStatusToSM().
    10: VP(ASR_E2EP05020453):
        E2E_P05MapStatusToSM() shall return E2E_P_NONEWDATA.
    11: Set first parameter to E2E_E_OK and second parameter to E2E_P05STATUS_WRONGSEQUENCE
        and call E2E_P05MapStatusToSM().
    12: VP(ASR_E2EP05020453):
        E2E_P05MapStatusToSM() shall return E2E_P_WRONGSEQUENCE.
    13: Set first parameter to E2E_E_OK and second parameter to E2E_P05STATUS_UNDEFINED (0xFF)
        and call E2E_P05MapStatusToSM().
    14: VP(ASR_E2EP05020453):
        E2E_P05MapStatusToSM() shall return E2E_P_ERROR.
    15: Set first parameter to E2E_E_INPUTERR_NULL and second parameter to E2E_P05STATUS_OK
        and call E2E_P05MapStatusToSM().
    16: VP(ASR_E2EP05020454):
        E2E_P05MapStatusToSM() shall return E2E_P_ERROR.
    17: Set first parameter to E2E_E_INPUTERR_WRONG and second parameter to E2E_P05STATUS_OK
        and call E2E_P05MapStatusToSM().
    18: VP(ASR_E2EP05020454):
        E2E_P05MapStatusToSM() shall return E2E_P_ERROR.
    19: Set first parameter to E2E_E_INTERR and second parameter to E2E_P05STATUS_OK
        and call E2E_P05MapStatusToSM().
    20: VP(ASR_E2EP05020454):
        E2E_P05MapStatusToSM() shall return E2E_P_ERROR.
    21: Set first parameter to E2E_E_INVALID and second parameter to E2E_P05STATUS_OK
        and call E2E_P05MapStatusToSM().
    22: VP(ASR_E2EP05020454):
        E2E_P05MapStatusToSM() shall return E2E_P_ERROR.
    23: Set first parameter to E2E_E_WRONGSTATE and second parameter to E2E_P05STATUS_OK
        and call E2E_P05MapStatusToSM().
    24: VP(ASR_E2EP05020454):
        E2E_P05MapStatusToSM() shall return E2E_P_ERROR.

    Used Test Strategies:
    - Pair wise tests
    (Different values among different E2E_P05MapStatusToSM() parameters)

  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020453</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020454</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_02007_P05CheckInit_Ok</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_02_P05Check/source/application/E2EP05_ConTest_02_P05Check.c</sourcefile>
      <sourceline>2532</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

     Test that in case State is valid, E2E_P05CheckInit() initializes the state structure,
     setting with Counter to 0xFF and Status to E2E_P05STATUS_ERROR.

  &lt;/para&gt;
  
Test Object: E2E_P05CheckInit()
Test Precondition: None.
Test Execution: 

    01: Call E2E_P05CheckInit() with valid parameter.
    02: VP(ASR_E2EP05020450,ASR_E2EP05020451,EB_E2EP05020472):
        E2E_P05CheckInit() returns E2E_E_OK.
        P05CheckState.Counter is initialized with 0xFF.
        P05CheckState.Status is initialized with E2E_P05STATUS_ERROR.

    Used Test Strategies:
    - Equivalence Class Partitioning
    (Testing only transitions to status E2E_E_OK for E2EP05CheckInit() function)

  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020450</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020451</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP05020472</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_02008_P05CheckInit_InvalidInput</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_02_P05Check/source/application/E2EP05_ConTest_02_P05Check.c</sourcefile>
      <sourceline>2593</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;

    Test that In case State is NULL, E2E_P05CheckInit() returns immediately
    with E2E_E_INPUTERR_NULL (no state data is modified).

&lt;/para&gt;

Test Object: E2E_P05CheckInit
Test Precondition: None.
Test Execution: 

  01: Call E2E_P05CheckInit() with NULL parameter.
  02: VP(ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020450,ASR_E2EP05020451):
      E2E_P05CheckInit() returns E2E_E_INPUTERR_NULL.

    Used Test Strategies:
    - Equivalence Class Partitioning
    (Testing only transitions to status E2E_E_INPUTERR_NULL for E2EP05CheckInit() function)


Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020450</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020451</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_02009_P05Check_InvalidInput</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_02_P05Check/source/application/E2EP05_ConTest_02_P05Check.c</sourcefile>
      <sourceline>2654</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

    1) Test that the E2E-library function E2E_P05Check()
       returns the error code E2E_E_INPUTERR_NULL if:
       - NULL_PTR is passed for configuration data
       - NULL_PTR is passed for state data
       - Length is != 0 and data pointer is NULL
    2) Test that the E2E-library function E2E_P05Check()
       returns the error code E2E_E_INPUTERR_WRONG if:
    - Offset in the E2E_P05Config is not a multiple of 8
    - Offset in the E2E_P05Config is greater than (DataLength - 24)
    - DataLength in the E2E_P05Config is not a multiple of 8
    - DataLength in the E2E_P05Config is smaller than 24
    - Length is 0 and data pointer is different than NULL
    - Length is smaller than (DataLength / 8)
    - Length is greater than (DataLength / 8)

  &lt;/para&gt;
  
Test Object: None.
Test Precondition: None.
Test Execution: 

    01: Set first parameter to NULL (E2E_P05Config) and call E2E_P05Check().
    02: VP(ASR_E2EP05020449,ASR_E2EP05020412,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047):
        E2E_P05Check() returns E2E_E_INPUTERR_NULL.
    03: Set second parameter to NULL (E2E_P05CheckState) and call E2E_P05Check().
    04: VP(ASR_E2EP05020449,ASR_E2EP05020412,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047):
        E2E_P05Check() returns E2E_E_INPUTERR_NULL.
    05: Set first and second parameter to NULL (E2E_P05Config and E2E_P05CheckState)
        and call E2E_P05Check().
    06: VP(ASR_E2EP05020449,ASR_E2EP05020412,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047):
        E2E_P05Check() returns E2E_E_INPUTERR_NULL.
    07: Offset in the E2E_P05Config is not a multiple of 8. Call E2E_P05Check().
    08: VP(ASR_E2EP05020449,ASR_E2EP05020412,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047):
        E2E_P05Check() returns E2E_E_INPUTERR_WRONG.
    09: Offset in the E2E_P05Config is greater than (DataLength - 24). Call E2E_P05Check().
    10: VP(ASR_E2EP05020449,ASR_E2EP05020412,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047):
        E2E_P05Check() returns E2E_E_INPUTERR_WRONG.
    11: DataLength in the E2E_P05Config is not a multiple of 8. Call E2E_P05Check().
    12: VP(ASR_E2EP05020449,ASR_E2EP05020412,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047):
        E2E_P05Check() returns E2E_E_INPUTERR_WRONG.
    13: DataLength in the E2E_P05Config is smaller than 24. Call E2E_P05Check().
    14: VP(ASR_E2EP05020449,ASR_E2EP05020412,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047):
        E2E_P05Check() returns E2E_E_INPUTERR_WRONG.
    15: Length is smaller than (E2E_P05Config.DataLength / 8U).
        Call E2E_P05Check().
    16: VP(ASR_E2EP05020449,ASR_E2EP05020412,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047):
        E2E_P05Check() returns E2E_E_INPUTERR_WRONG.
    17: Length is greater than (E2E_P05Config.DataLength / 8U).
        Call E2E_P05Check().
    18: VP(ASR_E2EP05020449,ASR_E2EP05020412,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047):
        E2E_P05Check() returns E2E_E_INPUTERR_WRONG.
    19: Set fourth parameter to 0 (Length), set third parameter (Data) to a value different
        than NULL and call E2E_P05Check().
    20: VP(ASR_E2EP05020449,ASR_E2EP05020412,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047):
        E2E_P05Check() returns E2E_E_INPUTERR_WRONG.
    21: Set third parameter to NULL (Data) and fourth parameter (Length) to a non-zero
        valid value and call E2E_P05Check().
    22: VP(ASR_E2EP05020449,ASR_E2EP05020412,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047):
        E2E_P05Check() returns E2E_E_INPUTERR_NULL.

    Used Test Strategies:
    - Pair wise tests
    (Different values among different E2E_P05CheckState parameters)
    - Boundary Value Analysis
    (Either usage of all possible values or min / intermediate /max value for individual parameters)
    - Equivalence Class Partitioning
    (Testing only transitions to statuses different than E2E_E_OK for E2E_P05Check() function)

  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020449</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020412</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_02010_P05Check_CheckEnum</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_02_P05Check/source/application/E2EP05_ConTest_02_P05Check.c</sourcefile>
      <sourceline>2886</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;&lt;programlisting&gt;
   This test shall check enumerations related to E2E_P05Check():
   - E2E_P05STATUS_NONEWDATA
   - E2E_P05STATUS_OK
   - E2E_P05STATUS_REPEATED
   - E2E_P05STATUS_ERROR
   - E2E_P05STATUS_OKSOMELOST
   - E2E_P05STATUS_WRONGSEQUENCE
&lt;/programlisting&gt;&lt;/para&gt;

Test Object: E2E_P05CheckStatusType
Test Precondition: None.
Test Execution: 

  00: VP(ASR_E2EP05020440):
      Enumeration constants are not defined as macros.
  01: VP(ASR_E2EP05020440):
      Enumeration constant E2E_P05STATUS_NONEWDATA holds the specified value.
  02: VP(ASR_E2EP05020440):
      Enumeration constant E2E_P05STATUS_ERROR holds the specified value.
  03: VP(ASR_E2EP05020440):
      Enumeration constant E2E_P05STATUS_REPEATED holds the specified value.
  04: VP(ASR_E2EP05020440):
      Enumeration constant E2E_P05STATUS_OK holds the specified value.
  05: VP(ASR_E2EP05020440):
      Enumeration constant E2E_P05STATUS_OKSOMELOST holds the specified value.
  06: VP(ASR_E2EP05020440):
      Enumeration constant E2E_P05STATUS_WRONGSEQUENCE holds the specified value.


Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020440</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_02011_P05Check_Structures</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_02_P05Check/source/application/E2EP05_ConTest_02_P05Check.c</sourcefile>
      <sourceline>2980</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
     This test shall check the correct member order in structures
     E2E_P05CheckStateType and E2E_P05ConfigType.
  &lt;/para&gt;
  
Test Object: E2E_P05ConfigType,E2E_P05CheckStateType
Test Precondition: None.
Test Execution: 

    01: Create a typedef E2E_P05CheckStateCompareType
        that has the expected order of the members
        w.r.t E2E_P05CheckStateType.
    02: Create a typedef E2E_P05ConfigCompareType
        that has the expected order of the members
        w.r.t E2E_P05ConfigType.
    03: Define two local variables of type
        E2E_P05CheckStateType and E2E_P05CheckStateCompareType,
        respectively, each having the same values in the ordered
        initializer list.
    04: Define two local variables of type
        E2E_P05ConfigType and E2E_P05ConfigCompareType,
        respectively, each having the same values in the ordered
        initializer list.
    05: VP(ASR_E2EP05020437)
        Each member of the the two local variables of Step 03
        are equal.
    06: VP(ASR_E2EP05020439)
        Each member of the the two local variables of Step 04
        are equal.

  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020437</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020439</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_ConTest_03_PublishedInformation</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_03_General/source/application/E2EP05_ConTest_03_General.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall check the correct definition of the common published information
    provided in the module header file.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 

 01: VP(ASR_E2EP05020038):
     E2EP05_VENDOR_ID is defined with the value provided by the tooling environment
 02: VP(ASR_E2EP05020038):
     E2EP05_AR_RELEASE_MAJOR_VERSION is defined with the value specified in config.mk
 03: VP(ASR_E2EP05020038):
     E2EP05_AR_RELEASE_MINOR_VERSION is defined with the value specified in config.mk
 04: VP(ASR_E2EP05020038):
     E2EP05_AR_RELEASE_REVISION_VERSION is defined with the value specified in config.mk
 05: VP(ASR_E2EP05020038):
     E2EP05_SW_MAJOR_VERSION is defined with the value specified in config.mk
 06: VP(ASR_E2EP05020038):
     E2EP05_SW_MINOR_VERSION is defined with the value specified in config.mk
 07: VP(ASR_E2EP05020038):
     E2EP05_SW_PATCH_VERSION is defined with the value specified in config.mk


Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_03_NoConfigParams</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_03_General/source/application/E2EP05_ConTest_03_General.c</sourcefile>
      <sourceline>126</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall check that the profile does not
    have any configuration options.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 

 TS5 build process steps:
 01: Provide a reference file E2EP05_Config.txt
     that contains the first line of the configuration
     container of the module configuration
 02: grep all variables of the installed
     profile configuration and for the name of
     the configuration container
 02a: remove all allowed variables from the result of step 02,
     i.e parameters of CommonPublishedInformation and PublishedInformation
 03: Compare the result of Step 2a with
     E2EP05_Config.txt
     and store the difference into
     E2EP05_Config.txt.diff.
 04: VP(ASR_E2EP05020037):
     Step 03 reveals no difference
     (i.e. E2EP05_Config.txt.diff is empty)
 05: Include comparison differences of Step 04
     (i.e. E2EP05_Config.txt.diff)
     within this file.
 06: Compile this file
 07: VP(ASR_E2EP05020037):
     This file compiles without errors.
 08: Execute this test case
 09: VP(ASR_E2EP05020037):
     TS5ATL_RESULT_SUCCESS is returned Step 08

   Note:
    If one of the Verification points is violated, then the
    build process is aborted and an error is reported.


Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_ConTest_04_IncludeFiles</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_04_Includes/source/application/E2EP05_ConTest_04_Includes.c</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   1) Test that E2E_P05.h exclusively includes E2E.h and no other files
   (EB_E2EP05020113, ASR_E2EP05020115).
   2) Test that E2E_P05.c exclusively includes E2E_P05.h, MemMap.h,
   and SCrc_CRC16.h and no other files (EB_E2EP05020114, ASR_E2EP05020115).
 
Test Object: None.
Test Precondition: 
 
Test Execution: 

 TS5 build process steps:
  1) Provide a reference file includesOf_E2E_P05.h.txt
     that contains the includes:
     E2E.h, MemMap.h
  2) Provide a reference file includesOf_E2E_P05.c.txt
     that contains the includes:
     E2E_P05.h, SCrc_CRC16.h, MemMap.h.
  3) Extract all includes of E2E_P05.h
  4) Extract all includes of E2E_P05.c
  5) Compare all includes of Step 3 with the
     reference file includesOf_E2E_P05.h.txt
     and store difference
     in file includesOf_E2E_P05.h.txt.diff.
  6) Compare all includes of Step 4 with the
     reference file includesOf_E2E_P05.c.txt
     and store difference
     in file includesOf_E2E_P05.h.txt.diff.
  7) Include comparison differences of Step 5 and Step 6
     (i.e. includesOf_E2E_P05.h.txt.diff and
     includesOf_E2E_P05.c.txt.diff) within this file.
  8) Compile this file
  9) VP(EB_E2EP05020113, EB_E2EP05020114, ASR_E2EP05020115):
     Execute this test case which always returns TS5ATL_RESULT_SUCCESS.
     Note:
        If the extracted includes of Step 5 / Step 6 and
        the reference file are not identical, then
        the compile signals an error due to the
        inclusion of the diff results which contains
        not compilable text (backup in case the build process
        incorrectly does not abort).

 
Test Input: 
 
Test Output: 
 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB_E2EP05020113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>EB_E2EP05020114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_ConTest_05_Files</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_05_Files/source/application/E2EP05_ConTest_05_Files.c</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test shall check that the profile 05 specific part
   of the E2E library is built of the following files: E2E_P05.h and E2E_P05.c
 
Test Object: None.
Test Precondition: 
 
Test Execution: 

 TS5 build process steps:
  1) Provide a reference file E2EP05_HeaderFiles.txt
     that contains: E2E_P05.h
  2) Provide a reference file E2EP05_SourceFiles.txt
     that contains: E2E_P05.c
  3) Search for all header files existing in the
     installed Tresos plugin of E2EP05
  4) Search for all source files existing in the
     installed Tresos plugin of E2EP05
  5) Compare the found files of Step 3 with the
     files listed in E2EP05_HeaderFiles.txt
     and store the difference into
     E2EP05_HeaderFiles.txt.diff.
  6) VP(ASR_E2EP05020048):
     Step 5 reveals no difference
     (i.e. E2EP05_HeaderFiles.txt.diff is empty)
  7) Compare the found files of Step 4 with the
     files listed in E2EP05_SourceFiles.txt
     and store the difference into
     E2EP05_SourceFiles.txt.diff.
  8) VP(ASR_E2EP05020048):
     Step 7 reveals no difference
     (i.e. E2EP05_SourceFiles.txt.diff is empty)
  9) Include comparison differences of Step 5 and Step 7
     (i.e. E2EP05_HeaderFiles.txt.diff and
     E2EP05_SourceFiles.txt.diff) within this file.
  10) Compile this file
  11) VP(ASR_E2EP05020048):
      This file compiles without errors.
  12) Execute this test case
  13) VP(ASR_E2EP05020048):
     TS5ATL_RESULT_SUCCESS is returned in 12

   Note:
    If one of the Verification points is violated, then the
    build process is aborted and an error is reported.

 
Test Input: 
 
Test Output: 
 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_06000_NotInitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf/source/application/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf.c</sourcefile>
      <sourceline>87</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  The test verifies that the transformer function returns E_SAFETY_HARD_RUNTIMEERROR when the
  module is not initialized.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  00: Call E2EXf_PartitionDeInit to ensure a non initialized state of the module.
  01: Call the transformer function with valid parameters.
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.EB.SWS_E2EXf_00133.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_06001_IOValidParamCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf/source/application/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf.c</sourcefile>
      <sourceline>142</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if the input and output parameters are not valid then the in-place
  function 'E2EXf_transformerId' returns E_SAFETY_HARD_RUNTIMEERROR for profile 05.
  This test verifies that the output buffer does not change when the transformer is called with
  a NULL_PTR as input data.
  This test verifies that the output buffer does not change when the transformer returns a
  hard error.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  00: Initialize module

  Case 1 part 1
  01: Set buffer to NULL and inputBufferLength different from 0 and call
      transformer function.
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

  Case 1 part 2a
  03: Set buffer different from NULL and inputBufferLength equal to 0 (smaller than
      upperHeaderBitsToShift/8, here the lowest erroneous value), and call
      transformer function.
  04: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 1 part 2b
  05: Set buffer different from NULL and inputBufferLength equal to upperHeaderBitsToShift/8-1U
      (smaller than upperHeaderBitsToShift/8, here the highest erroneous value), and call
      transformer function.
  06: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 2
  07: Set bufferLength to NULL and call transformer function.
  08: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00102.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_Xfrm_00108.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_Xfrm_00051.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_06002_CopyUpperHeader</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf/source/application/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf.c</sourcefile>
      <sourceline>272</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that the upper header is copied to the front of
  existing parameter buffer by the in-place function 'E2EXf_transformerId' of profile 05
  when headerLength is smaller upperHeaderBitsToShift (greater 0).
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Call transformer 'E2EXf_transformerId' with Buffer different from NULL and
      upperHeaderBitsToShift greater 0.
  02: VP: 'E2EXf_transformerId' copied the amount upperHeaderBitsToShift bits,
      in parameter buffer, with starting offset of headerLength, in direction
      left by 'distance' of headerLength.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00108.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_06003_BufLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf/source/application/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf.c</sourcefile>
      <sourceline>356</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place transformer 'E2EXf_transformerId' of profile 05 sets the
  BufferLength equal to InputBufferLength plus HeaderLength in bytes.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Call transformer function with valid parameters.
  02: VP: BufferLength holds the sum of InputBufferLength and HeaderLength in bytes.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00111.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_06004_InvokeProtect</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf/source/application/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf.c</sourcefile>
      <sourceline>412</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place transformer 'E2EXf_transformerId' of profile 05
  invokes 'E2E_P05Protect()' with proper parameters.

  This test also verfies that state structures are initialized correctly by E2E_P05ProtectInit.

  This test verifies that the mandatory interfaces for a protect transformer are called:
      API function         Description
      E2E_P05Protect       Protects the array/buffer to  be transmitted using the E2E profile 5.
                           This includes checksum calculation, handling of counter and Data ID.
      E2E_P05ProtectInit   Initializes the protection state.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Initialize Buffer with values different to 0U.
  02: Reinitialize module and
      - structure of StatePtr is initialized by E2E_P05ProtectInit (Counter set to 0U).
  03: Call transformer function with valid parameters.
  04: VP: E2E_P05ProtectInit() was called, because counter was set correctly to 0U in E2E header.
          This verifies indirectly that state structures are initialized correctly.
  05: Set Crc to a defined value.
  06: Call transformer function with valid parameters.
  07: VP: E2E_P05Protect() was called, because counter was increased to 1U and set correctly in E2E
          header.
          This verifies indirectly that E2E_P05Protect() passes the correct pointer to state by
          StatePtr.
  08: VP: E2EXf_P05_InP_SomeIpXf_Tx1_Init() was called, so that state structures are initialized
          correctly.
  09: VP: E2E_P05Protect() was called, because counter was set correctly to 0U in E2E header.
          This verifies indirectly that state structures are initialized correctly.
  10: Call transformer function with valid parameters, which increments the counter.
  11: VP: E2E_P05Protect() was called, because counter was incremented to 1U in E2E header.
          This verifies that counter is incremented correctly.
  12: VP: Crc in E2E header is set to value previously set in test.
          This verifies indirectly that E2E_P05Protect() passes the correct pointer to data by
          DataPtr.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00107.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>E2EP05.EB.SWS_E2EXf_00021.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00037.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>E2EP05.EB.Transformer.Init.SR.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_06005_RetValProtect</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf/source/application/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf.c</sourcefile>
      <sourceline>563</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if E2E_P05Protect() returns E2E_E_OK then the
  in-place transformer 'E2EXf_transformerId' for profile 05 returns E_OK,
  otherwise it returns E_SAFETY_HARD_RUNTIMEERROR.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 96 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Reinitialize module.
  02: Call transformer function with valid parameters.
  03: VP: The call was successful and 'E2EXf_transformerId' returns E_OK

  04: Make E2E_P05Protect() return E2E_E_INPUTERR_NULL by calling internal API that is wrapped
      by transformer API with StatePtr set to NULL_PTR. Note: StatePtr is only checked in
      E2E_P05Protect function.
  05: VP: The call was successful and 'E2EXf_transformerId' returns E_SAFETY_HARD_RUNTIMEERROR

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00018.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_06100_NotInitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf/source/application/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>187</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  The test verifies that the transformer function returns E_SAFETY_HARD_RUNTIMEERROR when the
  module is not initialized.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  00: Call E2EXf_PartitionDeInit to ensure a non initialized state of the module.
  01: Call the transformer function with valid parameters.
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.EB.SWS_E2EXf_00133.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_06101_IOValidParamCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf/source/application/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>242</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if the input and output parameters are not valid then the in-place
  function 'E2EXf_Inv_transformerId' returns E_SAFETY_HARD_RUNTIMEERROR for profile 05.
  This test verifies that the output buffer does not change when the transformer is called with
  a NULL_PTR as input data.
  This test verifies that the output buffer does not change when the transformer returns a
  hard error.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  00: Initialize module

  Case 1 part 1
  01: Set buffer to NULL and inputBufferLength different from 0 and call
      inverted transformer function.
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

  Case 1 part 2a
  03: Set buffer different from NULL and inputBufferLength equal to 0U (smaller than
      headerLength/8U + upperHeaderBitsToShift/8U, here the lowest
      erroneous value), and call inverted transformer function.
  04: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 1 part 2b
  05: Set buffer different from NULL and inputBufferLength equal to
      ((headerLength/8U + upperHeaderBitsToShift/8U) - 1U)
      (smaller than headerLength/8U + upperHeaderBitsToShift/8U,
      here the highest erroneous value), and call inverted transformer function.
  06: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 2
  07: Set bufferLength to NULL and call inverted transformer function.
  08: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00105.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_Xfrm_00108.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_Xfrm_00051.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_06102_InvokeCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf/source/application/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>371</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 05 invokes 'E2E_P05Check()' with proper parameters.

  This test verifies that state structures are initialized correctly by E2E_P05CheckInit.

  This test verifies that E2E_P05Check uses correct configuration provided by the initialization.

  This test verifies that the mandatory interfaces for a check transformer are called:
      API function         Description
      E2E_P05Check         Checks the Data received using the E2E profile 5. This includes CRC
                           calculation, handling of Counter and Data ID.
      E2E_P05CheckInit     Initializes the check state
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Set Buffer to defined values.
  02: Deinitialize module.
  03: VP: Transformer is deinitialized.
  04: Initialize module.
  05: - Set E2E header to correct values (Counter = 0U).
      - Call inverted transformer function with valid parameters.
  06: VP: E2E_P05Check() returns E2E_P_OK (indirectly checked, RetVal is provided to E2ESM stub).
          Verifies that state structures are initialized correctly.

  07: - Set E2E header to correct values (Counter = 1U).
      - Call inverted transformer function with valid parameters.
  08: VP: E2E_P05Check() returns E2E_P_OK.
          Verifies that E2E_P05Check() is called because Counter was checked.

  09: - Set E2E header to values simulating repeated message (Counter = 1U).
      - Call inverted transformer function with valid parameters.
  10: VP: E2E_P05Check() returns E2E_P_REPEATED.
          Verifies that E2E_P05Check() is called because Counter was checked.

  11: - Set E2E header to correct values (Counter = 2U).
      - Call inverted transformer function with valid parameters.
  12: VP: E2E_P05Check() returns E2E_P_OK.
          Verifies that E2E_P05Check() is called because Counter was checked.
          Verifies that correct state structure is used.

  13: - Set E2E header to correct values (Counter = 3U) except Crc is set to an incorrect value.
      - Call inverted transformer function with valid parameters.
  14: VP: E2E_P05Check() returns E2E_P_ERROR.
          Verifies that E2E_P05Check() uses correct configuration because incorrect Crc was
          detected.

  15: - Set E2E header to correct values (Counter = 3U).
      - Call inverted transformer function with valid parameters.
  16: VP: E2E_P05Check() returns E2E_P_OK.
          Verifies that E2E_P05Check() is called because Counter was checked.
          Verifies that correct state structure is used.

  17: Initialize the inverse transform.
  18: - Set E2E header to correct values.
      - Call inverted transformer function with valid parameters.
  19: VP: E2E_P05Check() returns E2E_P_OK (indirectly checked, RetVal is provided to E2ESM stub).
          Verifies that state structures are initialized correctly.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00104.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>E2EP05.EB.SWS_E2EXf_00021.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00037.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>E2EP05.EB.Transformer.Init.SR.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_06103_InvokeMapStatusToSM</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf/source/application/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>582</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 05 with configuration parameter profileBehavior set to R4_2 invokes
  'E2E_P05MapStatusToSM()' with proper parameters.

  This test verifies that the mandatory interfaces for a check transformer are called:
      E2E_P05MapStatusToSM The function maps the check status of Profile 5 to a generic check
                           status, which can be used by E2E state machine check function. The E2E
                           Profile 5 delivers a more fine-granular status, but this is not relevant
                           for the E2E state machine.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Reinitialize module
  02: - Set E2E header to correct values (Counter = 0U).
      - Call inverted transformer function with valid parameters.
  03: VP: Inverted transformer function returns E_OK.
          Ensures that states are correct.
  04: - Set E2E header to values simulating repeated message (Counter = 0U).
      - Call inverted transformer function with valid parameters.
  05: VP: E2E_P05MapStatusToSM() is called. Verified by checking the return value of
          E2E_P05MapStatusToSM() which is passed to E2ESM stub. It is expected to be E2E_P_REPEATED.
          Verifies that E2E_P05MapStatusToSM() passes the Status provided by initialization.
  06: - Set E2E header to values provoking E2E_P05STATUS_WRONGSEQUENCE, i.e. set Counter to a value
        larger than ConfigPtr-&gt;MaxDeltaCounter.
      - Call inverted transformer function with valid parameters.
  07: VP: E2E_P05Check() returns E2E_P05STATUS_WRONGSEQUENCE.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00029.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00037.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_06104_InvokeSMCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf/source/application/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>685</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 05 invokes 'E2E_SMCheck()' with proper parameters.

  This test also verfies that state structures are initialized correctly by E2E_SMCheckInit.

  This test verifies that the mandatory interfaces for a check transformer are called:
      E2E_SMCheck          Checks the communication channel. It determines if the data can be used
                           for safety-related application, based on history of checks performed by
                           a corresponding E2E_P0XCheck() function.
      E2E_SMCheckInit      Initializes the state machine.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Reinitialize module
  02: VP: Init functions are called.
  03: Set E2E header to correct values
  04: Call inverted transformer function with valid parameters.
  05: VP: E2E_SMCheck() is called.
  06: VP: E2E_SMCheck() passes the correct ProfileStatus
      (the returned value of E2E_P05MapStatusToSM).
  07: VP: E2E_SMCheck() points through ConfigPtr to the static SM configuration
      (provided by initialization module via E2E_SMCheckInit).
  08: VP: E2E_SMCheck() passes the correct pointer to state by StatePtr and state structures
      are initialized correctly (verified within callout).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00028.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>E2EP05.EB.SWS_E2EXf_00021.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00037.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_06105_SMCheckRetVal</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf/source/application/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>794</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if an in-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 05 returns E2E_E_OK after a 'E2E_SMCheck()' call, then:
  - the high nibble of the return will be set to the low nibble of the state
    of the state machine (member SMState of object of type E2E_SMStateType that
    is associated with 'transformerId');
  - the low nibble of the return will be set to the low nibble of the profile-independent
    check status of type E2E_PCheckStatusType;
  otherwise the return of the 'E2E_SMCheck()' call is E_SAFETY_SOFT_RUNTIMEERROR.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Initialize SMState of StatePtr and return a value equal to E2E_E_OK by E2E_SMCheck.
  02: Call inverted transformer function with valid parameters.
  03: VP: The high nibble of the returned value of E2EXf_Inv_'transformerId' function is
      set to the low nibble of the state of the state machine.
  04: VP: The low nibble of the returned value of E2EXf_Inv_'transformerId' function is
      set to the low nibble of the profile-independent check status of type E2E_PCheckStatusType.

  05: Return a value different to E2E_E_OK by E2E_SMCheck.
  06: VP: E2E_SMCheck() returns E_SAFETY_SOFT_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00027.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_06106_CopyUpperHeader</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf/source/application/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>883</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that the upper header is copied to the front of existing parameter
  buffer by the in-place function 'E2EXf_Inv_transformerId' of profile 05 when
  when headerLength is smaller upperHeaderBitsToShift (greater 0).
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Reinitialize module.
  02: Set E2E header to correct values.
  03: Call inverted transformer function with inputBuffer different from NULL and
      upperHeaderBitsToShift greater 0.
  04: VP: 'E2EXf_Inv_transformerId' copied the amount upperHeaderBitsToShift bits,
      in parameter buffer, with starting offset of headerLength, in direction right by
      'distance' of headerLength.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00112.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_06107_BufLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf/source/application/E2EP05_ConTest_06_E2EXf_InP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>966</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 05 sets the BufferLength equal to InputBufferLength minus HeaderLength in bytes.
  Additionally it is verified that BufferLength is set to zero in the case that no new data
  is available (InputBufferLength == 0 and Buffer == NULL).
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
    - headerLength: 24 bits
    - upperHeaderBitsToShift: 64 bits
  E2EXf_Inv_P05_InP_SomeIpXf_Rx1:
    - dataLength: 184 bits
  E2EXf_Inv_P05_InP_SomeIpXf_Rx2:
    - dataLength: 88 bits

Test Execution: 
  01: Reinitialize module

  Case 1 (InputBufferLength equals minimum buffer size given by the sum of upperHeader size and
  the upperHeaderBitsToShift size)
  02: Set InputBufferLength value to the sum of headerLength and upperHeaderBitsToShift.
      Set E2E header to correct values.
  03: Call inverted transformer function with valid parameters.
      (E2EXf_Inv_P05_InP_SomeIpXf_Rx2 because length is compared with InputBufferLength in
       E2E_P05Check function, see precondition)
  04: VP: BufferLength holds the correct value given by the subtraction of
      E2E transformer HeaderLength in bytes from InputBufferLength.

  Case 2 (InputBufferLength equals maximum buffer size given by the size of Buffer)
  05: Set InputBufferLength to the size of Buffer.
      Set E2E header to correct values.
  06: Call inverted transformer function with valid parameters.
  07: VP: BufferLength holds the correct value given by the subtraction of HeaderLength in bytes
      from InputBufferLength.

  Case 3 (No new data available: InputBufferLength equals zero and Buffer equals NULL)
  08: Set InputBufferLength to 0.
      Set E2E header to correct values.
  09: Call inverted transformer function with Buffer set to NULL.
  10: VP: BufferLength is 0.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00114.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_07000_NotInitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf/source/application/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf.c</sourcefile>
      <sourceline>86</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  The test verifies that the transformer function returns E_SAFETY_HARD_RUNTIMEERROR when the
  module is not initialized.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  00: Call E2EXf_PartitionDeInit to ensure a non initialized state of the module.
  01: Call the transformer function with valid parameters.
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.EB.SWS_E2EXf_00133.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_07001_IOValidParamCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf/source/application/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf.c</sourcefile>
      <sourceline>145</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if the input and output parameters are not valid then the out-of-place
  function 'E2EXf_transformerId' returns E_SAFETY_HARD_RUNTIMEERROR for profile 05.
  This test verifies that the output buffer does not change when the transformer is called with
  a NULL_PTR as input data.
  This test verifies that the output buffer does not change when the transformer returns a
  hard error.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  00: Initialize module

  Case 1 part 1
  01: Set inputBuffer to NULL and inputBufferLength different from 0 and call
      transformer function.
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 1 part 2a
  03: Set inputBuffer different from NULL and inputBufferLength equal to 0 (smaller than
      upperHeaderBitsToShift/8, here the lowest erroneous value), and call
      transformer function.
  04: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 1 part 2b
  05: Set inputBuffer different from NULL and inputBufferLength equal to upperHeaderBitsToShift/8-1U
      (smaller than upperHeaderBitsToShift/8, here the highest erroneous value), and call
      transformer function.
  06: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 2
  07: Set bufferLength to NULL and call transformer function.
  08: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 3
  09: Set buffer equal to NULL and call transformer function.
  10: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00106.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>E2EP05.EB.SWS_E2EXf_00133.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_Xfrm_00108.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_Xfrm_00051.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_07002_CopyUpperHeader</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf/source/application/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf.c</sourcefile>
      <sourceline>300</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that for valid parameters (inputBuffer is not NULL and headerLength is smaller
  upperHeaderBitsToShift (greater 0), out-of-place transformer 'E2EXf_transformerId' for profile 05
  does the following:
  - the upper header is copied to the beginning of the output buffer
  - the payload is copied to the output buffer starting with the destination offset of
    upperHeaderBitsToShift plus headerLength.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Call transformer 'E2EXf_transformerId' with inputBuffer different from NULL and
      upperHeaderBitsToShift greater 0.
  02: VP: The function copies the first upperHeaderBitsToShift bits from
      inputBuffer to buffer, and then copies the remaining part of inputBuffer
      (i.e. starting with offset upperHeaderBitsToShift) to parameter buffer starting with
      the destination offset of upperHeaderBitsToShift plus headerLength.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00109.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_07003_BufLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf/source/application/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf.c</sourcefile>
      <sourceline>386</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place transformer 'E2EXf_transformerId' of profile 05 sets the
  BufferLength equal to InputBufferLength plus HeaderLength in bytes.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Call transformer function with valid parameters.
  02: VP: BufferLength holds the sum of InputBufferLength and HeaderLength in bytes.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00111.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_07004_InvokeProtect</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf/source/application/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf.c</sourcefile>
      <sourceline>446</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place transformer 'E2EXf_transformerId' of profile 05
  invokes 'E2E_P05Protect()' with proper parameters.

  This test also verfies that state structures are initialized correctly by E2E_P05ProtectInit.

  This test verifies implicitly that the mandatory interfaces for a protect transformer are called:
      API function         Description
      E2E_P05Protect       Protects the array/buffer to  be transmitted using the E2E profile 5.
                           This includes checksum calculation, handling of counter and Data ID.
      E2E_P05ProtectInit   Initializes the protection state.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Initialize Buffer with values different to 0U.
  02: Reinitialize module and
      - structure of StatePtr is initialized by E2E_P05ProtectInit (Counter set to 0U).
  03: Call transformer function with valid parameters.
  04: VP: E2E_P05ProtectInit() was called, because counter was set correctly to 0U in E2E header.
          This verifies indirectly that state structures are initialized correctly.
  05: Set Crc to a defined value.
  06: Call transformer function with valid parameters.
  07: VP: E2E_P05Protect() was called, because counter was increased to 1U and set correctly in E2E
          header.
          This verifies indirectly that E2E_P05Protect() passes the correct pointer to state by
          StatePtr.
  08: VP: E2EXf_P05_OoP_SomeIpXf_Tx1_Init() was called, so that state structures are initialized
          correctly.
  09: VP: E2E_P05Protect() was called, because counter was set correctly to 0U in E2E header.
          This verifies indirectly that state structures are initialized correctly.
  10: Call transformer function with valid parameters, which increments the counter.
  11: VP: E2E_P05Protect() was called, because counter was incremented to 1U in E2E header.
          This verifies that counter is incremented correctly.
  12: VP: Crc in E2E header is set to value previously set in test.
          This verifies indirectly that E2E_P05Protect() passes the correct pointer to data by
          DataPtr.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00107.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>E2EP05.EB.SWS_E2EXf_00021.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00037.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>E2EP05.EB.Transformer.Init.SR.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_07005_RetValProtect</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf/source/application/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf.c</sourcefile>
      <sourceline>603</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if E2E_P05Protect() returns E2E_E_OK then
  out-of-place transformer 'E2EXf_transformerId' for profile 05 returns E_OK,
  otherwise it returns E_SAFETY_HARD_RUNTIMEERROR.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Reinitialize module.
  02: Call transformer function with valid parameters.
  03: VP: The call was successful and 'E2EXf_transformerId' returns E_OK

  04: Make E2E_P05Protect() return E2E_E_INPUTERR_NULL by calling internal API that is wrapped
      by transformer API with StatePtr set to NULL_PTR. Note: StatePtr is only checked in
      E2E_P05Protect function.
  05: VP: The call was successful and 'E2EXf_transformerId' returns E_SAFETY_HARD_RUNTIMEERROR

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00018.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_07100_NotInitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf/source/application/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>187</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  The test verifies that the transformer function returns E_SAFETY_HARD_RUNTIMEERROR when the
  module is not initialized.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  00: Call E2EXf_PartitionDeInit to ensure a non initialized state of the module.
  01: Call the transformer function with valid parameters.
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.EB.SWS_E2EXf_00133.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_07101_IOValidParamCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf/source/application/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>247</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if the input and output parameters are not valid then the out-of-place
  function 'E2EXf_Inv_transformerId' returns E_SAFETY_HARD_RUNTIMEERROR for profile 05.
  This test verifies that the output buffer does not change when the transformer is called with
  a NULL_PTR as input data.
  This test verifies that the output buffer does not change when the transformer returns a
  hard error.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  00: Initialize module

  Case 1 part 1
  01: Set inputBuffer to NULL and inputBufferLength different from 0 and call
      inverted transformer function.
  02: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 1 part 2a
  03: Set inputBuffer different from NULL and inputBufferLength equal to 0U (smaller than
      headerLength/8U + upperHeaderBitsToShift/8U, here the lowest
      erroneous value), and call inverted transformer function.
  04: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 1 part 2b
  05: Set inputBuffer different from NULL and inputBufferLength equal to
      ((headerLength/8U + upperHeaderBitsToShift/8U) - 1U)
      (smaller than headerLength/8U + upperHeaderBitsToShift/8U,
      here the highest erroneous value), and call inverted transformer function.
  06: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 2
  07: Set bufferLength to NULL and call inverted transformer function.
  08: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          The output buffer does not change.

  Case 3
  09: Set buffer equal to NULL and call inverted transformer function.
  10: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00103.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_Xfrm_00108.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_Xfrm_00051.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_07102_InvokeCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf/source/application/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>399</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 05 invokes 'E2E_P05Check()' with proper parameters.

  This test verifies that state structures are initialized correctly by E2E_P05CheckInit.

  This test verifies that E2E_P05Check uses correct configuration provided by the initialization.

  This test verifies that the mandatory interfaces for a check transformer are called:
      API function         Description
      E2E_P05Check         Checks the Data received using the E2E profile 5. This includes CRC
                           calculation, handling of Counter and Data ID.
      E2E_P05CheckInit     Initializes the check state
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Deinitialize module.
  02: VP: Transformer is deinitialized.
  03: Initialize module.
  04: - Set E2E header to correct values (Counter = 0U).
      - Call inverted transformer function with valid parameters.
  05: VP: E2E_P05Check() returns E2E_P_OK (indirectly checked, RetVal is provided to E2ESM stub).
          Verifies that state structures are initialized correctly.

  06: - Set E2E header to correct values (Counter = 1U).
      - Call inverted transformer function with valid parameters.
  07: VP: E2E_P05Check() returns E2E_P_OK.
          Verifies that E2E_P05Check() is called because Counter was checked.

  08: - Set E2E header to values simulating repeated message (Counter = 1U).
      - Call inverted transformer function with valid parameters.
  09: VP: E2E_P05Check() returns E2E_P_REPEATED.
          Verifies that E2E_P05Check() is called because Counter was checked.

  10: - Set E2E header to correct values (Counter = 2U).
      - Call inverted transformer function with valid parameters.
  11: VP: E2E_P05Check() returns E2E_P_OK.
          Verifies that E2E_P05Check() is called because Counter was checked.
          Verifies that correct state structure is used.

  12: - Set E2E header to correct values (Counter = 3U) except Crc is set to an incorrect value.
      - Call inverted transformer function with valid parameters.
  13: VP: E2E_P05Check() returns E2E_P_ERROR.
          Verifies that E2E_P05Check() uses correct configuration because incorrect Crc was
          detected.

  14: - Set E2E header to correct values (Counter = 3U).
      - Call inverted transformer function with valid parameters.
  15: VP: E2E_P05Check() returns E2E_P_OK.
          Verifies that E2E_P05Check() is called because Counter was checked.
          Verifies that correct state structure is used.

  16: Initialize the inverse transform.
  17: - Set E2E header to correct values (Counter = 1U).
      - Call inverted transformer function with valid parameters.
  18: VP: E2E_P05Check() returns E2E_P_OK (indirectly checked, RetVal is provided to E2ESM stub).
          Verifies that state structures are initialized correctly.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00104.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>E2EP05.EB.SWS_E2EXf_00021.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00037.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>E2EP05.EB.Transformer.Init.SR.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_07103_InvokeMapStatusToSM</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf/source/application/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>613</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 05 with configuration parameter profileBehavior set to R4_2 invokes
  'E2E_P05MapStatusToSM()' with proper parameters.

  This test verifies that the mandatory interfaces for a check transformer are called:
      E2E_P05MapStatusToSM The function maps the check status of Profile 5 to a generic check
                           status, which can be used by E2E state machine check function. The E2E
                           Profile 5 delivers a more fine-granular status, but this is not relevant
                           for the E2E state machine.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Reinitialize module
  02: - Set E2E header to correct values (Counter = 0U).
      - Call inverted transformer function with valid parameters.
  03: VP: Inverted transformer function returns E_OK.
          Ensures that states are correct.
  04: - Set E2E header to values simulating repeated message (Counter = 0U).
      - Call inverted transformer function with valid parameters.
  05: VP: E2E_P05MapStatusToSM() is called. Verified by checking the return value of
          E2E_P05MapStatusToSM() which is passed to E2ESM stub. It is expected to be E2E_P_REPEATED.
          Verifies that E2E_P05MapStatusToSM() passes the Status provided by initialization.
  06: - Set E2E header to values provoking E2E_P05STATUS_WRONGSEQUENCE, i.e. set Counter to a value
        larger than ConfigPtr-&gt;MaxDeltaCounter.
      - Call inverted transformer function with valid parameters.
  07: VP: E2E_P05Check() returns E2E_P05STATUS_WRONGSEQUENCE.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00029.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00037.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_07104_InvokeSMCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf/source/application/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>723</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 05 invokes 'E2E_SMCheck()' with proper parameters.

  This test also verfies that state structures are initialized correctly by E2E_SMCheckInit.

  This test verifies that the mandatory interfaces for a check transformer are called:
      E2E_SMCheck          Checks the communication channel. It determines if the data can be used
                           for safety-related application, based on history of checks performed by
                           a corresponding E2E_P0XCheck() function.
      E2E_SMCheckInit      Initializes the state machine.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Reinitialize module
  02: VP: Init functions are called.
  03: Set E2E header to correct values
  04: Call inverted transformer function with valid parameters.
  05: VP: E2E_SMCheck() is called.
  06: VP: E2E_SMCheck() passes the correct ProfileStatus
      (the returned value of E2E_P05MapStatusToSM).
  07: VP: E2E_SMCheck() points through ConfigPtr to the static SM configuration
      (provided by initialization module via E2E_SMCheckInit).
  08: VP: E2E_SMCheck() passes the correct pointer to state by StatePtr and state structures
      are initialized correctly (verified within callout).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00028.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>E2EP05.EB.SWS_E2EXf_00021.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00037.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_07105_SMCheckRetVal</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf/source/application/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>837</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if an out-of-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 05 returns E2E_E_OK after a 'E2E_SMCheck()' call, then:
  - the high nibble of the return will be set to the low nibble of the state
    of the state machine (member SMState of object of type E2E_SMStateType that
    is associated with 'transformerId');
  - the low nibble of the return will be set to the low nibble of the profile-independent
    check status of type E2E_PCheckStatusType;
  otherwise the return of the 'E2E_SMCheck()' call is E_SAFETY_SOFT_RUNTIMEERROR.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Initialize SMState of StatePtr and return a value equal to E2E_E_OK by E2E_SMCheck.
  02: Call inverted transformer function with valid parameters.
  03: VP: The high nibble of the returned value of E2EXf_Inv_'transformerId' function is
      set to the low nibble of the state of the state machine.
  04: VP: The low nibble of the returned value of E2EXf_Inv_'transformerId' function is
      set to the low nibble of the profile-independent check status of type E2E_PCheckStatusType.

  05: Return a value different to E2E_E_OK by E2E_SMCheck.
  06: VP: E2E_SMCheck() returns E_SAFETY_SOFT_RUNTIMEERROR.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00027.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_07106_CopyUpperHeader</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf/source/application/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>929</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that for valid parameters (inputBuffer is not NULL and headerLength is smaller
  upperHeaderBitsToShift (greater 0), out-of-place inverted transformer 'E2EXf_Inv_transformerId'
  for profile 05 does the following:
  - the upper header is copied to the beginning of the output buffer
  - the payload is copied to the output buffer starting with the destination offset of
  (upperHeaderBitsToShift + headerLength).
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Reinitialize module.
  02: Set E2E header to correct values.
  03: Call inverted transformer function with inputBuffer different from NULL and
      upperHeaderBitsToShift greater 0.
  04: VP: 'E2EXf_Inv_transformerId' copied the amount upperHeaderBitsToShift bits,
      in parameter buffer, with starting offset of headerLength, in direction right by
      'distance' of headerLength.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00113.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_07107_BufLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf/source/application/E2EP05_ConTest_07_E2EXf_OoP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>1019</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 05 sets the BufferLength equal to InputBufferLength minus HeaderLength in bytes.
  Additionally it is verified that BufferLength is set to zero in the case that no new data
  is available (InputBufferLength == 0 and InputBuffer == NULL).
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
    - headerLength: 24 bits
    - upperHeaderBitsToShift: 64 bits
  E2EXf_Inv_P05_InP_SomeIpXf_Rx1:
    - dataLength: 184 bits
  E2EXf_Inv_P05_InP_SomeIpXf_Rx2:
    - dataLength: 88 bits

Test Execution: 
  01: Reinitialize module

  Case 1 (InputBufferLength equals minimum buffer size given by the sum of upperHeader size and
  the upperHeaderBitsToShift size)
  02: Set InputBufferLength value to the sum of headerLength and upperHeaderBitsToShift.
      Set E2E header to correct values.
  03: Call inverted transformer function with valid parameters.
      (E2EXf_Inv_P05_InP_SomeIpXf_Rx2 because length is compared with InputBufferLength in
       E2E_P05Check function, see precondition)
  04: VP: BufferLength holds the correct value given by the subtraction of
      E2E transformer HeaderLength in bytes from InputBufferLength.

  Case 2 (InputBufferLength equals maximum buffer size given by the size of Buffer)
  05: Set InputBufferLength to the size of Buffer.
      Set E2E header to correct values.
  06: Call inverted transformer function with valid parameters.
  07: VP: BufferLength holds the correct value given by the subtraction of HeaderLength in bytes
      from InputBufferLength.

  Case 3 (No new data available: InputBufferLength equals zero and Buffer equals NULL)
  08: Set InputBufferLength to 0.
      Set E2E header to correct values.
  09: Call inverted transformer function with Buffer set to NULL.
  10: VP: BufferLength is 0.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00114.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_08000_CopyUpperHeader</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_08_E2EXf_OoP_ComXf/source/application/E2EP05_ConTest_08_E2EXf_OoP_ComXf.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if (inputBuffer is not NULL and upperHeaderBitsToShift is equal to 0),
  out-of-place transformer 'E2EXf_transformerId' of profile 05 copies inputBuffer to buffer
  starting with the destination offset of headerLength.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  00: Initialize E2EXf module
  01: Set inputBuffer different from NULL and upperHeaderBitsToShift equal to 0 and call
      out-of-place transformer function.
  02: VP: The function copies the inputBuffer to buffer starting with the destination offset of
      headerLength.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00115.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_08100_CopyUpperHeader</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_08_E2EXf_OoP_ComXf/source/application/E2EP05_ConTest_08_E2EXf_OoP_ComXf_Inv.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if (inputBuffer is not NULL and upperHeaderBitsToShift is equal to 0),
  out-of-place inverted transformer 'E2EXf_Inv_transformerId' of profile 05 copies inputBuffer to
  buffer starting with the destination offset of headerLength.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  01: Reinitialize module.
  02: Set E2E header to correct values.
  03: Call inverted transformer function with inputBuffer different from NULL.
  04: VP: The function copies the inputBuffer to buffer starting with the destination offset of
      headerLength.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00116.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_09000_CopyUpperHeader</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_09_E2EXf_InP_ComXf/source/application/E2EP05_ConTest_09_E2EXf_InP_ComXf.c</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if (inputBuffer is not NULL and upperHeaderBitsToShift is equal to 0),
  in-place transformer 'E2EXf_transformerId' of profile 05 keeps buffer unchanged.

  This test also verifies the imported types of P05
    - E2E_P05CheckStateType
    - E2E_P05CheckStatusType
    - E2E_P05ConfigType
    - E2E_P05ProtectStateType
    - E2E_PCheckStatusType
    - E2E_SMCheckStateType
    - E2E_SMConfigType
    Std_Types:
    - Std_ReturnType
    - Std_VersionInfoType
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  00: Initialize E2EXf module
  01: Set Buffer different from NULL and upperHeaderBitsToShift equal to 0 and call
      transformer function.
  02: VP: After E2E header the function keeps buffer unchanged.
  03: VP:(E2EP05.SWS_E2EXf_00047.P05) Instances of the imported types are defined for:
             E2E_P05CheckStateType      E2E_P05CheckState
             E2E_P05CheckStatusType     E2E_P05CheckStatus
             E2E_P05ConfigType          E2E_P05Config
             E2E_P05ProtectStateType    E2E_P05ProtectState
             E2E_PCheckStatusType       E2E_PCheckStatus
             E2E_SMCheckStateType       E2E_SMCheckState
             E2E_SMConfigType           E2E_SMConfig
             Std_ReturnType             Std_Return
             Std_VersionInfoType        Std_VersionInfo
  04: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.EB.Transformer.InPlace.NoCopying.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00047.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_09100_CopyUpperHeader</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_09_E2EXf_InP_ComXf/source/application/E2EP05_ConTest_09_E2EXf_InP_ComXf_Inv.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that if (inputBuffer is not NULL and upperHeaderBitsToShift is equal to 0),
  in-place inverted transformer 'E2EXf_Inv_transformerId' of profile 05 keeps buffer unchanged.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  ----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  ----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 0 bits
  - upperHeaderBitsToShift: 0 bits

Test Execution: 
  01: Reinitialize module.
  02: Set E2E header to correct values.
  03: Call inverted transformer function with inputBuffer different from NULL.
  04: VP: The function keeps the buffer unchanged.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.EB.InvTransformer.InPlace.NoCopying.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_06108_CheckCRCandSM</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_10_E2EXf_InP_SomeIpXfCheckCRCandSM/source/application/E2EP05_ConTest_10_E2EXf_InP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 05 checks CRC and call state manager.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Set Buffer to defined values.
  02: Initialize module.
  03: - Set E2E header to correct values (Counter = 0U and CRC = 0x529U).
      - Call inverted transformer function.
  04: VP: E2E_P05Check() returns E_SAFETY_INIT_OK.

  05: - Set E2E header to correct values (Counter = 1U and CRC = 0xABD5U).
  - Call inverted transformer function.
  06: VP: E2E_P05Check() returns E_OK.
          Verifies that E2E_P05Check() is called because Counter was checked.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00104.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>E2EP05.EB.SWS_E2EXf_00021.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00037.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_ConTest_01100_P05Forward</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_11_P05Forward/source/application/E2EP05_ConTest_11_P05Forward.c</sourcefile>
      <sourceline>855</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

      1. Test computation of offset (tested by iterating among different Offsets).
      2. Test that correct Counter is written in the E2E Header in Little Endian format.
         (tested by iterating among all counter values, wrap around of the counter is considered).
      3. Test that correct DataID is used in CRC calculation.
      4. Test correct CRC callouts for different P05 header offsets
         (beginning, end, in the mid of the received data) and data lengths.
      5. Test that correct CRC is written in the E2E Header in Little Endian format.
      6. Test that state Counter is incremented for each E2E_P05Forward() call.

  &lt;/para&gt;
  
Test Object: E2E_P05Forward()
Test Precondition: 
  
Test Execution: 

    Iterate the following steps several times:

    00: Loop through:
        - different positions of P05 header (Offset)
        - different Length values
        - all possible values of state Counter

    01: Call E2E_P05Forward().
    02: VP(ASR_E2EP05020620,ASR_E2EP05020469,ASR_E2EP05020639):
        The State-&gt;Counter is written in byte 4 of the E2E header
        which starts at Offset = E2E_P05Config-&gt;Offset / 8.
    03: VP(ASR_E2EP05020621,ASR_E2EP05020400,ASR_E2EP05020401,ASR_E2EP05020639,ASR_E2EP05020399):
        SCrc_CalculateCRC16() shall be called 4 times for each E2E_P05Forward() iteration
        if configured Offset is greater than 0:
        first call:
          length in bytes shall be Offset
          data bytes used in the calculation the ones located before the CRC bytes
          the start value shall be 0xFFFF
          SCrc_IsFirstCall is TRUE
        second call:
          length in bytes shall be Length - Offset - 2
          data bytes used in the calculation the ones located after the CRC bytes
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        third call:
          length in bytes shall be 1
          low byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        fourth call:
          length in bytes shall be 1
          high byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
    04: VP(ASR_E2EP05020621,ASR_E2EP05020400,ASR_E2EP05020401,ASR_E2EP05020639,ASR_E2EP05020399):
        SCrc_CalculateCRC16() shall be called 3 times for each E2E_P05Forward() iteration
        if configured Offset is 0:
        first call:
          length in bytes shall be Length - 2
          data bytes used in the calculation the ones located after the CRC bytes
          the start value shall be 0xFFFF
          SCrc_IsFirstCall is TRUE
        second call:
          length in bytes shall be 1
          low byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
        third call:
          length in bytes shall be 1
          high byte of configured Data ID is used in the calculation
          the start value shall be the value returned by the previous call of SCrc_CalculateCRC16()
          SCrc_IsFirstCall is FALSE
    05: VP(ASR_E2EP05020407,ASR_E2EP05020469,ASR_E2EP05020639):
        The CRC is encoded as Little Endian in bytes 0 and 1 of the E2E header
        which starts at Offset = E2E_P05Config-&gt;Offset / 8.
    06: VP(ASR_E2EP05020397,ASR_E2EP05020409,ASR_E2EP05020639):
        The State-&gt;Counter shall be incremented by one.
    07: VP(ASR_E2EP05020639):
        E2E_P05Forward() returns E2E_E_OK.

    Used Test Strategies:
    - Pair wise tests
    (Different values among different E2E_P05Forward() parameters)
    - Boundary Value Analysis
    (Either usage of all possible values or min / intermediate /max value for individual parameters)
    - Equivalence Class Partitioning
    (Testing only transitions to E2E_E_OK status for E2E_P05Forward() function)

  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020639</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020469</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020620</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020621</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020399</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020407</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020409</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020397</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_01101_P05Forward_InvalidInput</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_11_P05Forward/source/application/E2EP05_ConTest_11_P05Forward.c</sourcefile>
      <sourceline>1104</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;

    1) Test that the E2E-library function E2E_P05Forward()
       returns the error code E2E_E_INPUTERR_NULL if:
       - NULL_PTR is passed for configuration data / state data / data to be protected
    2) Test that the E2E-library function E2E_P05Forward()
       returns the error codes E2E_E_INPUTERR_WRONG if:
       - Offset in the E2E_P05Config is not a multiple of 8
       - Offset in the E2E_P05Config is greater than (DataLength - 24)
       - DataLength in the E2E_P05Config is not a multiple of 8
       - DataLength in the E2E_P05Config is smaller than 24
       - DataLength in the E2E_P06Config is greater than 32768.
       - Length does not equal DataLength

  &lt;/para&gt;
  
Test Object: E2E_P05Forward()
Test Precondition: None.
Test Execution: 

    01: Set E2E_P05Config to NULL and call E2E_P05Forward().
    02: (ASR_E2EP05020585,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020619):
        E2E_P05Forward() returns E2E_E_INPUTERR_NULL.
    03: Set E2E_P05ForwardState to NULL and call E2E_P05Forward().
    04: (ASR_E2EP05020585,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020619):
        E2E_P05Forward() returns E2E_E_INPUTERR_NULL.
    05: Set Data to NULL and call E2E_P05Forward().
    06: (ASR_E2EP05020585,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020619):
        E2E_P05Forward() returns E2E_E_INPUTERR_NULL.
    07: Set first three input parameters (E2E_P05Config, E2E_P05ForwardState and Data) to NULL
        and call E2E_P05Forward().
    08: (ASR_E2EP05020585,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020619):
        E2E_P05Forward() returns E2E_E_INPUTERR_NULL.
    09: Set second and third input parameter (E2E_P05ForwardState and Data) to NULL
        and call E2E_P05Forward().
    10: (ASR_E2EP05020585,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020619):
        E2E_P05Forward() returns E2E_E_INPUTERR_NULL.
    11: Set first two input parameters (E2E_P05Config and E2E_P05ForwardState) to NULL
        and call E2E_P05Forward().
    12: (ASR_E2EP05020585,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020619):
        E2E_P05Forward() returns E2E_E_INPUTERR_NULL.
    13: Set first and second input parameter (E2E_P05Config and Data) to NULL
        and call E2E_P05Forward().
    14: (ASR_E2EP05020585,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020619):
        E2E_P05Forward() returns E2E_E_INPUTERR_NULL.
    15: Offset in the E2E_P05Config is not a multiple of 8. Call E2E_P05Forward().
    16: (ASR_E2EP05020585,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020619):
        E2E_P05Forward() returns E2E_E_INPUTERR_WRONG.
    17: Offset in the E2E_P05Config is greater than (DataLength - 24).
        Call E2E_P05Forward().
    18: (ASR_E2EP05020585,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020619):
        E2E_P05Forward() returns E2E_E_INPUTERR_WRONG.
    19: DataLength in the E2E_P05Config is not a multiple of 8. Call E2E_P05Forward().
    20: (ASR_E2EP05020585,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020619):
        E2E_P05Forward() returns E2E_E_INPUTERR_WRONG.
    21: DataLength in the E2E_P05Config is smaller than 24. Call E2E_P05Forward().
    22: (ASR_E2EP05020585,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020619):
        E2E_P05Forward() returns E2E_E_INPUTERR_WRONG.
    23: Length is smaller than (DataLength / 8). Call E2E_P05Forward().
    24: (ASR_E2EP05020585,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020619):
        E2E_P05Forward() returns E2E_E_INPUTERR_WRONG.
    25: Length is greater than (DataLength / 8). Call E2E_P05Forward().
    26: (ASR_E2EP05020585,ASR_E2EP05020012,ASR_E2EP05020011,ASR_E2EP05020047,ASR_E2EP05020619):
        E2E_P05Forward() returns E2E_E_INPUTERR_WRONG.

    Used Test Strategies:
    - Pair wise tests
    (Different values among different E2E_P05Forward parameters)
    - Boundary Value Analysis
    (Either usage of all possible values or min / intermediate /max value for individual parameters)
    - Equivalence Class Partitioning
    (Testing only transitions to statuses different than E2E_E_OK for E2E_P05Forward() function)

  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020585</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020619</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020673</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_01102_P05Forward_WriteCounter_FS_Repeated</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_11_P05Forward/source/application/E2EP05_ConTest_11_P05Forward.c</sourcefile>
      <sourceline>1373</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    This test verifies that correct Counter is written in the E2E Header in Big Endian format
    tested by iterating among all counter values, wrap around of the counter is considered.

    counter = StatePtr-&gt;Counter - 1U
  &lt;/para&gt;
  
Test Object: E2E_P05Forward()
Test Precondition: 
  
Test Execution: 

    Iterate the following steps several times:

    00: Loop through:
        - different positions of P05 header (Offset)
        - different Length values (encoded in header)
        - all possible values of state Counter

    01: Call E2E_P05Forward().
    02: VP:The State-&gt;Counter is encoded as Big Endian in bytes 2 and 3 of the E2E header
        which starts at Offset = E2E_P05Config-&gt;Offset / 8.
    03: VP:E2E_P05Forward() returns E2E_E_OK.

    Used Test Strategies:
    - Pair wise tests:
        Different values among the configuration parameters "Offset", "DataLength" and state
        parameter "Counter".
    - Boundary Value Analysis
        Usage of minimum, intermediate and maximum values of state parameter "Counter".
    - Equivalence Class Partitioning
        Testing only transitions to E2E_E_OK status for E2E_P05Forward() function.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020639</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020620</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020654</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020652</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_01103_P05Forward_WriteCounter_FS_WrongSeq</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_11_P05Forward/source/application/E2EP05_ConTest_11_P05Forward.c</sourcefile>
      <sourceline>1558</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    This test verifies that correct Counter is written in the E2E Header in Big Endian format
    tested by iterating among all counter values, wrap around of the counter is considered.

    counter = StatePtr-&gt;Counter + ConfigPtr-&gt;MaxDeltaCounter
  &lt;/para&gt;
  
Test Object: E2E_P05Forward()
Test Precondition: 
  
Test Execution: 

    Iterate the following steps several times:

    00: Loop through:
        - different positions of P05 header (Offset)
        - different Length values (encoded in header)
        - all possible values of state Counter

    01: Call E2E_P05Forward().
    02: VP:The State-&gt;Counter is encoded as Big Endian in bytes 2 and 3 of the E2E header
        which starts at Offset = E2E_P05Config-&gt;Offset / 8.
    03: VP:E2E_P05Forward() returns E2E_E_OK.

    Used Test Strategies:
    - Pair wise tests:
        Different values among the configuration parameters "Offset", "DataLength" and state
        parameter "Counter".
    - Boundary Value Analysis
        Usage of minimum, intermediate and maximum values of state parameter "Counter".
    - Equivalence Class Partitioning
        Testing only transitions to E2E_E_OK status for E2E_P05Forward() function.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020639</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020620</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020654</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020652</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_01104_P05Forward_WriteDataID</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_11_P05Forward/source/application/E2EP05_ConTest_11_P05Forward.c</sourcefile>
      <sourceline>1743</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    This test verifies that correct DataID is written in the E2E Header in Big Endian format.
    If ForwardStatus is E2E_P_ERROR then Copy 2-byte Config-&gt;DataID+1U to bytes
    Data[Offset+4...Offset+5] in Big Endian order.
  &lt;/para&gt;
  
Test Object: E2E_P05Forward()
Test Precondition: 
  
Test Execution: 

    Iterate the following steps several times:

    00: Loop through:
        - different positions of P05 header (Offset)
        - different Length values (encoded in header)
        - all possible values of state Counter

    01: Call E2E_P05Forward().
    02: VP(ASR_E2EP05020621):
        The Data ID is encoded as Big Endian in bytes 4 and 5 of the E2E header
        which starts at Offset = E2E_P05Config-&gt;Offset / 8.
    03: VP(ASR_E2EP05020639):
        E2E_P05Forward() returns E2E_E_OK.


    Used Test Strategies:
    - Pair wise tests:
        Different values among the configuration parameters "Offset", "DataLength" and state
        parameter "Counter".
    - Equivalence Class Partitioning
        Testing only transitions to E2E_E_OK status for E2E_P05Forward() function.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020639</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020621</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020654</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020652</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>
    <specobject>
      <id>TS_E2EP05_ConTest_01105_P05Forward_WriteCounter_FS_Nonewdata</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_11_P05Forward/source/application/E2EP05_ConTest_11_P05Forward.c</sourcefile>
      <sourceline>1927</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    This test verifies that if forward status is E2E_P_NONEWDATA then
    forward status shall return E2E_E_INPUTERR_WRONG.
  &lt;/para&gt;
  
Test Object: E2E_P05Forward()
Test Precondition: 
  
Test Execution: 

    01: Call E2E_P05Forward().
    02: VP:E2E_P05Forward() returns E2E_E_INPUTERR_WRONG.

  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ASR_E2EP05020639</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>ASR_E2EP05020619</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_12000_FWCodeStatusCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_12_E2EXf_InP_SomeIpXf_FWCode/source/application/E2EP05_ConTest_12_E2EXf_InP_SomeIpXf_FWCode.c</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place transformer 'E2EXf_transformerId' of profile 05
  invokes 'E2E_P05Forward()' with proper parameters.

  This test also verfies that state structures are initialized correctly by E2E_P05ProtectInit.

  This test verifies that the mandatory interfaces for a Forward transformer are called:
      API function         Description
      E2E_P05Forward       Forwards the array/buffer to  be transmitted using the E2E profile 05.
                           This includes checksum calculation, handling of counter and Data ID.
      E2E_P05ProtectInit   Initializes the protection state.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 16 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Initialize Buffer with values different to 0xEB.
  02: Reinitialize module and
      - structure of StatePtr is initialized by E2E_P05ProtectInit (Counter set to 0U).
  03: Call transformer function with valid parameters.
  04: VP: E2E_P05Forward() was called, because transformer function is called with forwardedCode as
          E_OK (E2EXf_MapCodeToStatus returns Checkstatus = E2E_P_OK), counter was set correctly to
          0U in E2E header. The Counter will be incremented which will be used in the next
          invocation of E2E_P05Forward.
  05: Set Crc to a defined value.
  06: Call transformer function with valid parameters.
  07: VP: E2E_P05Forward() was called, because transformer function is called with forwardedCode as
          E_SAFETY_INVALID_REP (E2EXf_MapCodeToStatus returns Checkstatus = E2E_P_REPEATED), counter
          was decremented and set correctly to 0U in E2E header. The Counter will be incremented
          which will be used in the next invocation of E2E_P05Forward.
  08: Call transformer function with valid parameters.
  09: VP: E2E_P05Forward() was called, because transformer function is called with forwardedCode as
          E_SAFETY_INVALID_SEQ (E2EXf_MapCodeToStatus returns Checkstatus = E2E_P_WRONGSEQUENCE),
          counter was set to (Counter + MaxDeltaCounterInit)U in E2E header. The Counter will be
          incremented which will be used in the next invocation of E2E_P05Forward.
  10: Call transformer function with valid parameters.
  11: VP: E2E_P05Forward() was called, because transformer function is called with forwardedCode as
          E_SAFETY_INVALID_CRC (E2EXf_MapCodeToStatus returns Checkstatus = E2E_P_ERROR),
          counter was incremented and set in E2E header. DataId will be incremented by 1U and set
          in E2E header.
  12: VP: Crc in E2E header is set to value previously set in test.
          This verifies indirectly that E2E_P05Forward() passes the correct pointer to data by
          DataPtr.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00107.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00168.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00208.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00037.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00047.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>E2EP05.EB.Transformer.Init.SR.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_13000_FWCodeStatusCheck</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_13_E2EXf_OoP_SomeIpXf_FWCode/source/application/E2EP05_ConTest_13_E2EXf_OoP_SomeIpXf_FWCode.c</sourcefile>
      <sourceline>50</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place transformer 'E2EXf_transformerId' of profile 05
  invokes 'E2E_P05Forward()' with proper parameters.

  This test also verfies that state structures are initialized correctly by E2E_P05ProtectInit.

  This test verifies implicitly that the mandatory interfaces for a forward transformer are called:
      API function         Description
      E2E_P05Forward       Forwards the array/buffer to  be transmitted using the E2E profile 5.
                           This includes checksum calculation, handling of counter and Data ID.
      E2E_P05ProtectInit   Initializes the protection state.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Initialize Buffer with values different to 0U.
  02: Reinitialize module and
      - structure of StatePtr is initialized by E2E_P05ProtectInit (Counter set to 0U).
  03: Call transformer function with valid parameters.
  04: VP: E2E_P05Forward() was called, because transformer function is called with forwardedCode as
          E_OK (E2EXf_MapCodeToStatus returns Checkstatus = E2E_P_OK), counter was set correctly to
          0U in E2E header. The Counter will be incremented which will be used in the next
          invocation of E2E_P05Forward.
  05: Set Crc to a defined value.
  06: Call transformer function with valid parameters.
  07: VP: E2E_P05Forward() was called, because transformer function is called with forwardedCode as
          E_SAFETY_INVALID_REP (E2EXf_MapCodeToStatus returns Checkstatus = E2E_P_REPEATED), counter
          was decremented and set correctly to 0U in E2E header. The Counter will be incremented
          which will be used in the next invocation of E2E_P05Forward.
  08: Call transformer function with valid parameters.
  09: VP: E2E_P05Forward() was called, because transformer function is called with forwardedCode as
          E_SAFETY_INVALID_SEQ (E2EXf_MapCodeToStatus returns Checkstatus = E2E_P_WRONGSEQUENCE),
          counter was set to (Counter + MaxDeltaCounterInit)U in E2E header. The Counter will be
          incremented which will be used in the next invocation of E2E_P05Forward.
  10: Call transformer function with valid parameters.
  11: VP: E2E_P05Forward() was called, because transformer function is called with forwardedCode as
          E_SAFETY_INVALID_CRC (E2EXf_MapCodeToStatus returns Checkstatus = E2E_P_ERROR),
          counter was incremented and set in E2E header. DataId will be incremented by 1U and set
          in E2E header.
  12: VP: Length in E2E header is set correctly (InputbufferLength + E2E header length).
          This verifies indirectly that E2E_P05Forward() passes the correct pointer to data by
          DataPtr.
          This verifies indirectly that E2E_P05Forward() passes the correct length of the data bytes
          by Length.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00107.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00168.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00208.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>E2EP05.EB.SWS_E2EXf_00021.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00037.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00047.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>E2EP05.EB.Transformer.Init.SR.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_14000_InvokeCheck_DisableE2ESM_TRUE</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_14_E2EXf_InP_SomeIpXf_DisableE2ESM/source/application/E2EP05_ConTest_14_E2EXf_InP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place inverted transformer 'E2EXf_Inv_transformerId' of profile 05
  invokes 'E2E_P05Check()' with disableEndToEndStateMachine TRUE.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  00: Set Buffer to defined values.

  01: Deinitialize and Initialize module.

  02: - Set E2E header to correct values (Counter = 0U).
      - Call inverted transformer function with valid parameters.
  03: VP: E2E_P05Check() returns E_SAFETY_NOSM_OK.
          Verifies that state structures are initialized correctly.

  04: - Set E2E header to values simulating repeated message (Counter = 0U).
      - Call inverted transformer function with valid parameters.
  05: VP: E2E_P05Check() returns E_SAFETY_NOSM_REP.
          Verifies that E2E_P05Check() is called because Counter was checked.

  06: - Set E2E header to correct values (Counter = 1U).
      - Call inverted transformer function with valid parameters.
  07: VP: E2E_P05Check() returns E_SAFETY_NOSM_OK.
          Verifies that E2E_P05Check() is called because Counter was checked.
          Verifies that correct state structure is used.

  08: - Set E2E header to correct values (Counter = 2U) except Crc is set to an incorrect value.
      - Call inverted transformer function with valid parameters.
  09: VP: E2E_P05Check() returns E_SAFETY_NOSM_ERR.
          Verifies that E2E_P05Check() uses correct configuration because incorrect Crc was
          detected.

  10: - Set E2E header to correct values (Counter = 2U).
      - Call inverted transformer function with valid parameters.
  11: VP: E2E_P05Check() returns E_SAFETY_NOSM_OK.
          Verifies that E2E_P05Check() is called because Counter was checked.
          Verifies that correct state structure is used.

  12: - Set E2E header to values and set counter to a value larger than the current
        ConfigPtr-&gt;MaxDeltaCounter value.
      - Call inverted transformer function.
  13: VP: E2E_P05Check() returns E_SAFETY_NOSM_SEQ.

  14: - Set E2E header to correct values (Counter = 3U).
      - Call inverted transformer function with Buffer == NULL and
        InputBufferLength == 0.
  15: VP: E2E_P05Check() returns E_SAFETY_NOSM_NND.
          Verifies that E2E_P05Check() passes the correct pointer to data by DataPtr.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00169.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00037.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_Xfrm_00032.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EP05_E2EXf_CON_15000_InvokeCheck_DisableE2ESM_TRUE</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EP05)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EP05/test/ts5/Conformance/IN/E2EP05_ConTest_15_E2EXf_OoP_SomeIpXf_DisableE2ESM/source/application/E2EP05_ConTest_15_E2EXf_OoP_SomeIpXf_Inv.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place inverted transformer 'E2EXf_Inv_transformerId'
  of profile 05 invokes 'E2E_P05Check()' with disableEndToEndStateMachine TRUE.
&lt;/para&gt;
&lt;programlisting&gt;
  The following configuration parameter is permuted:

  Parameter / Permutation     |   p0   |   p1   |
  -----------------------------------------------
  E2EXF_XFRMBUFFERLENGTH_TYPE | uint16 | uint32 |
  -----------------------------------------------
&lt;/programlisting&gt;

Test Object: None.
Test Precondition: 
  - headerLength: 24 bits
  - upperHeaderBitsToShift: 64 bits

Test Execution: 
  01: Deinitialize and Initialize module.

  02: - Set E2E header to correct values (Counter = 0U).
      - Call inverted transformer function with valid parameters.
  03: VP: E2E_P05Check() returns E_SAFETY_NOSM_OK.
          Verifies that state structures are initialized correctly.

  04: - Set E2E header to values simulating repeated message (Counter = 0U).
      - Call inverted transformer function with valid parameters.
  05: VP: E2E_P05Check() returns E_SAFETY_NOSM_REP.
          Verifies that E2E_P05Check() is called because Counter was checked.

  06: - Set E2E header to correct values (Counter = 1U).
      - Call inverted transformer function with valid parameters.
  07: VP: E2E_P05Check() returns E_SAFETY_NOSM_OK.
          Verifies that E2E_P05Check() is called because Counter was checked.
          Verifies that correct state structure is used.

  08: - Set E2E header to correct values (Counter = 2U) except Crc is set to an incorrect value.
      - Call inverted transformer function with valid parameters.
  09: VP: E2E_P05Check() returns E_SAFETY_NOSM_ERR.
          Verifies that E2E_P05Check() uses correct configuration because incorrect Crc was
          detected.

  10: - Set E2E header to correct values (Counter = 2U).
      - Call inverted transformer function with valid parameters.
  11: VP: E2E_P05Check() returns E_SAFETY_NOSM_OK.
          Verifies that E2E_P05Check() is called because Counter was checked.
          Verifies that correct state structure is used.

  12: - Set E2E header to correct values, set Counter to a value larger than
        ConfigPtr-&gt;MaxDeltaCounter.
  13: VP: E2E_P01Check() returns E_SAFETY_NOSM_SEQ.

  14: - Set E2E header to correct values (Counter = 3U).
      - Call inverted transformer function with InputBuffer == NULL and
        InputBufferLength = 0U.
  15: VP: E2E_P05Check() returns E_SAFETY_NOSM_NND.
          Verifies that E2E_P05Check() passes the correct pointer to data by DataPtr.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00169.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_E2EXf_00037.P05</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>E2EP05.SWS_Xfrm_00032.P05</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
