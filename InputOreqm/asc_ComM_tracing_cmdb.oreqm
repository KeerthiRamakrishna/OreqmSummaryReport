<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_ComM_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_Native/asc_ComM_requirements_AUTOSAR_SWS_COMManager_4.0.3.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_Native/asc_ComM_requirements_AUTOSAR_SWS_COMManager_4.3.0.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_Native/asc_ComM_requirements_AUTOSAR_SWS_COMManager_R20-11.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_Native/asc_ComM_requirements_AUTOSAR_SWS_COMManager_R21-11.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_Native/asc_ComM_requirements_EB_Refinements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_Native/asc_ComM_requirements_EB_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_Native/asc_ComM_requirements_HIS_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_Native/asc_ComM_test_Manual_TestSpec.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/common_req/ComM_DbgInst_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/common_req/ComM_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_GenericImporter/reqm_LIM.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 21:42:00 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_ComM_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_Native/asc_ComM_requirements_AUTOSAR_SWS_COMManager_4.0.3.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_Native/asc_ComM_requirements_AUTOSAR_SWS_COMManager_4.3.0.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_Native/asc_ComM_requirements_AUTOSAR_SWS_COMManager_R20-11.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_Native/asc_ComM_requirements_AUTOSAR_SWS_COMManager_R21-11.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_Native/asc_ComM_requirements_EB_Refinements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_Native/asc_ComM_requirements_EB_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_Native/asc_ComM_requirements_HIS_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_Native/asc_ComM_test_Manual_TestSpec.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/common_req/ComM_DbgInst_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/common_req/ComM_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_GenericImporter/reqm_LIM.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="swurs">
    <specobject>
      <id>ComM.ASR403.ECUC_ComM_00556</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Name               | ComMMainFunctionPeriod {COMM_MAIN_FUNCTION_PERIOD}
        Description        | Specifies the period in seconds that the MainFunction has to be triggered with. Comment: 
                           | ComM scheduling shall be at least as fast as the communication stack and a schedule longer than 
                           | 100ms makes no sense for communication.
        Multiplicity       | 1
        Type               | EcucFloatParamDef
        Range              | 0.001 .. 0.1
        Default value      | 0.02
        ConfigurationClass | Pre-compile time X All Variants
                           | Link time        - 
                           | Post-build time  - 
        Scope / Dependency | scope: ECU 
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30018</srcid><srcstatus/><internalId>1897</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_444</srcid><srcstatus/><internalId>1486</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00556</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.ECUC_ComM_00565</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Container Name: ComMChannel{Channel}
        Description:    This container contains the configuration (parameters) of the bus channel(s). 
                        The channel parameters shall be harmonized within the whole communication stack.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_145</srcid><srcstatus/><internalId>1471</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>1</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.ECUC_ComM_00567</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Name               | ComMBusType {COMM_BUS_TYPE}
        Description        | Identifies the bus type of the channel. 
        Multiplicity       | 1
        Type               | EcucEnumerationParamDef
        Range              | COMM_BUS_TYPE_CAN
                           | COMM_BUS_TYPE_ETH
                           | COMM_BUS_TYPE_FR
                           | COMM_BUS_TYPE_INTERNAL
                           | COMM_BUS_TYPE_LIN
        ConfigurationClass | Pre-compile time X All Variants
                           | Link time        - 
                           | Post-build time  - 
        Scope / Dependency | scope: ECU  
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_OnlyInternalNetworkChannels</srcid><srcstatus/><internalId>1852</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_167</srcid><srcstatus/><internalId>1473</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00567</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>2</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.ECUC_ComM_00653</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Container Name: ComMUser{CommunicationManagerUser}
        Description:    This container contains a list of identifiers that are needed to refer to a 
                        user in the system which is designated to request Communication modes.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1368</srcid><srcstatus/><internalId>1546</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>3</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.ECUC_ComM_00654</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Name               | ComMUserIdentifier {COMM_USER}
        Description        | An identifier that is needed to refer to a user in the system which is 
                           | designated to request Communication Modes. 
                           | ImplementationType: ComM_UserHandleType
        Multiplicity       | 1
        Type               | EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Default Value:     | --
        ConfigurationClass | Pre-compile time X All Variants
                           | Link time        - 
                           | Post-build time  - 
        Scope / Dependency | dependency: EcuMUser: The concept of users is very similar to the concept of 
                           | requestors in the ECU State Manager specification. 
                           | These two parameters shall be harmonized during the configuration process. 
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.ComMConf_ComMUser_UserName</srcid><srcstatus/><internalId>1792</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1401</srcid><srcstatus/><internalId>1547</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>4</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.ECUC_ComM_00657</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Container Name| ComMUserPerChannel{UserPerChannel}
        Description   | This container contains a list of identifiers that are needed to 
                      | refer to a user in the system which is linked to a channel.
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_845</srcid><srcstatus/><internalId>1512</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00657</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.ECUC_ComM_00876</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Name: ComMUserPerPnc
        Parameter Type: Reference
        Parent Containers: ComMPnc,
        Description: Reference to the ComMUsers that correspond to this PNC.
        Introduction: ImplementationType: COMM_UserHandleType
        Lower Multiplicity: 0
        infinite
        Origin: AUTOSAR_ECUC
        Destination: /AUTOSAR/EcucDefs/ComM/ComMConfigSet/ComMUser
        Destination type: ECUC-PARAM-CONF-CONTAINER-DEF
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1104</srcid><srcstatus/><internalId>1530</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PB_UserPerPnc</srcid><srcstatus/><internalId>2097</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00876</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.ECUC_ComM_00880</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Name               | ComMChannelPerPnc
        Description        | Reference to the ComMChannel that is required for this PNC. ImplementationType: COMM_ChannelType
        Multiplicity       | 1..*
        Type               | Reference to [ ComMChannel ]
        Default Value:     | --
        ConfigurationClass | Pre-compile time X All Variants
                           | Link time        - 
                           | Post-build time  - 
        Scope / Dependency | 
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1057</srcid><srcstatus/><internalId>1525</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PB_ChannelPerPnc</srcid><srcstatus/><internalId>2096</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00880</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.ECUC_ComM_00883</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Name               | ComMPncComSignalKind
        Description        | Indicates whether this PncComSignal represents EIRA or ERA PNC information.
        Multiplicity       | 1
        Type               | EcucEnumerationParamDef
        Range              | EIRA
                           | ERA
        ConfigurationClass | Pre-compile time X All Variants
                           | Link time        - 
                           | Post-build time  - 
        Scope / Dependency | 
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1209</srcid><srcstatus/><internalId>1539</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00883</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>
    
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00069</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, V4.0.0</source>
      <version>1</version>
      <description>
        On entering state COMM_FULL_COMMUNICATION the ComM channel
        state machine shall switch on the transmission and reception capability.
        This shall be performed by the ComM channel state machine requesting
        the corresponding Communication Mode from the Bus State Manager
        module (XXSM_RequestComMode(network:=&amp;lt;channel state
        machine's network&amp;gt;, mode:= COMM_FULL_COMMUNICATION)
        SWS_ComM_00829).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.SWS_ComM_00069</srcid><srcstatus/><internalId>143</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>    
    
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00079</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Service name        | ComM_GetRequestedComMode 
        Syntax:             | Std_ReturnType ComM_GetRequestedComMode(ComM_UserHandleType User,ComM_ModeType* ComMode) 
        Service ID[hex]:    | 0x07 
        Sync/Async:         | Synchronous 
        Reentrancy:         | Reentrant 
        Parameters (in):    | User | Handle of the user who requests a mode 
        Parameters (inout): | None 
        Parameters (out):   | ComMode | Name of the requested mode 
        Return value:       | Std_ReturnType | E_OK: Successfully returned requested Communication Mode
                            |                | E_NOT_OK: Return of requested Communication Mode failed 
                            |                | COMM_E_UNINIT: ComM not initialized Description: Function to 
                            |                |                query the currently requested Communication Mode of the corresponding user.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30003</srcid><srcstatus/><internalId>1889</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30004</srcid><srcstatus/><internalId>1890</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30006</srcid><srcstatus/><internalId>1892</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30029</srcid><srcstatus/><internalId>1904</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30009</srcid><srcstatus/><internalId>1998</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30073</srcid><srcstatus/><internalId>2003</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_NoUsersDetOn</srcid><srcstatus/><internalId>2288</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1492</srcid><srcstatus/><internalId>1027</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>
    
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00797</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Configuration of ComM_GetRequestedComMode: Relationship between users and
        channels. A user is statically mapped to one or more channels.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30008</srcid><srcstatus/><internalId>1997</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/ComM.xgen_228</srcid><srcstatus/><internalId>1675</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>    
    
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00083</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Service name       | ComM_GetCurrentComMode 
        Syntax             | Std_ReturnType ComM_GetCurrentComMode(ComM_UserHandleType User,ComM_ModeType* ComMode) 
        Service ID[hex]    | 0x08 
        Sync/Async:        | Synchronous 
        Reentrancy:        | Reentrant 
        Parameters (in)    | User | Handle of the user who requests a mode 
        Parameters (inout) | None 
        Parameters (out)   | ComMode | See ComM_ModeType 
        Return value       | Std_ReturnType | E_OK: Successfully returned Communication Mode from Bus State Manager
                           |                | E_NOT_OK: Return of Communication Mode from Bus State Manager failed
                           |                | COMM_E_UNINIT: ComM not initialized 
        Description        | Function to query the current Communication Mode. ComM shall use the corresponding 
                           | interfaces of the Bus State Managers to get the current Communication Mode of the network. (
                           | Call to Bus State Manager API: XXXSM _GetCurrentComMode(
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Query_BusSMModeFr</srcid><srcstatus/><internalId>1946</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Query_BusSMModeLIN</srcid><srcstatus/><internalId>2066</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_NoUsersDetOn</srcid><srcstatus/><internalId>2288</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1555</srcid><srcstatus/><internalId>1028</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_GetCurrentComModeMulticore</srcid><srcstatus/><internalId>799</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00085</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Service name       | ComM_GetMaxComMode 
        Syntax:            | Std_ReturnType ComM_GetMaxComMode(ComM_UserHandleType User,ComM_ModeType* ComMode) 
        Service ID[hex]    | 0x06 
        Sync/Async:        | Synchronous 
        Reentrancy:        | Reentrant 
        Parameters (in)    | User | Handle of the user who requests a mode 
        Parameters (inout) | None 
        Parameters (out):  | ComMode | See ComM_ModeType 
        Return value:      | Std_ReturnType | E_OK: Successfully returned maximum allowed Communication Mode
                           |                | E_NOT_OK: Return of maximum allowed Communication Mode failed
                           |                | COMM_E_UNINIT: ComM not initialized Description: Function to query the maximum allowed 
                           |                |                Communication Mode of the corresponding user.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30007_1</srcid><srcstatus/><internalId>1893</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30007_2</srcid><srcstatus/><internalId>1894</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30104</srcid><srcstatus/><internalId>1934</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30008</srcid><srcstatus/><internalId>1997</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30009</srcid><srcstatus/><internalId>1998</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30073</srcid><srcstatus/><internalId>2003</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GETMAXCOMMODE_1</srcid><srcstatus/><internalId>2008</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GETMAXCOMMODE_2</srcid><srcstatus/><internalId>2009</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GETMAXCOMMODE_3</srcid><srcstatus/><internalId>2010</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GETMAXCOMMODE_4</srcid><srcstatus/><internalId>2011</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_NoUsersDetOn</srcid><srcstatus/><internalId>2288</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1372</srcid><srcstatus/><internalId>1023</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>13</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00103</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The ComM module shall use the corresponding standardized services of the NVRAM Manager module  
        for storing and reading non-volatile configuration data ComMNoWakeup , 
        ComMEcuGroupClassification, inhibition status  and the Inhibit counter 
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00103.NvM_SetRamBlockStatus</srcid><srcstatus/><internalId>508</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>
    
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00108</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Service name       | ComM_ResetInhibitCounter 
        Syntax             | Std_ReturnType ComM_ResetInhibitCounter(void)
        Service ID[hex]    | 0x0e 
        Sync/Async         | Synchronous 
        Reentrancy         | Non Reentrant 
        Parameters (in)    | None 
        Parameters (inout) | None 
        Parameters (out)   | None 
        Return value       | Std_ReturnType | E_OK: Successfully reset of Inhibit COMM_FULL_COMMUNICATION Counter
                           |                | E_NOT_OK: Reset of Inhibit COMM_FULL_COMMUNICATION Counter failed
                           |                | COMM_E_UNINIT: ComM not initialized 
        Description        | This  function resets the Inhibited COMM_FULL_COMMUNICATION request Counter.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30039</srcid><srcstatus/><internalId>1911</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30040</srcid><srcstatus/><internalId>1912</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30101</srcid><srcstatus/><internalId>1932</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30008</srcid><srcstatus/><internalId>1997</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2078</srcid><srcstatus/><internalId>1056</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00110</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, V4.0.0</source>
      <version>1</version>
      <description>
        Service name       | ComM_RequestComMode  
        Syntax|            | Std_ReturnType ComM_RequestComMode(  ComM_UserHandleType User,  ComM_ModeType ComMode  )
        Service ID[hex]    | 0x05  
        Sync/Async         | Synchronous  
        Parameters (in):   | User    | Handle of the user who requests a mode
                           | ComMode | COMM_FULL_COMMUNICATION, COMM_NO_COMMUNICATION  
        Parameters (inout) | None 
        Parameters (out)   | None
        Return value       | Std_ReturnType | E_OK: Successfully changed to the new mode 
                           |                | E_NOT_OK: Changing to the new mode failed  
                           |                | COMM_E_MODE_LIMITATION: Mode can not be granted  because of mode inhibition.  
                           |                | COMM_E_UNINIT: ComM not initialized 
        Description        | Requesting of a Communication Mode by a user.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.SWS_ComM_00110</srcid><srcstatus/><internalId>756</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>


    <specobject>
      <id>ComM.ASR403.SWS_ComM_00124</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Service name       | ComM_LimitECUToNoComMode 
        Syntax             | Std_ReturnType ComM_LimitECUToNoComMode(boolean Status) 
        Service ID[hex]    | 0x0c 
        Sync/Async         | Synchronous 
        Reentrancy         | Non Reentrant 
        Parameters (in)    | Status | FALSE: Limit ECU to COMM_NO_COMMUNICATION disabled 
                           |        | TRUE: Limit ECU to COMM_NO_COMMUNICATION enabled 
        Parameters (inout) | None 
        Parameters (out)   | None 
        Return value       | Std_ReturnType | E_OK: Successfully changed inhibition status for the ECU
                           |                | E_NOT_OK: Changed of inhibition status for the ECU failed
                           |                | COMM_E_UNINIT: ComM not initialized 
        Description        | Changes the inhibition status for the ECU (=all channels) for changing from COMM_NO_COMMUNICATION to a 
                           | higher Communication Mode.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30040</srcid><srcstatus/><internalId>1912</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30008</srcid><srcstatus/><internalId>1997</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30073</srcid><srcstatus/><internalId>2003</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1962</srcid><srcstatus/><internalId>1051</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00156</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Service name       | ComM_PreventWakeUp 
        Syntax             | Std_ReturnType ComM_PreventWakeUp(NetworkHandleType Channel,boolean Status) 
        Service ID[hex]    | 0x09 
        Sync/Async         | Synchronous 
        Reentrancy:        | Non Reentrant 
        Parameters (in):   | Channel | See NetworkHandleType 
                           | Status  | FALSE: Wake up inhibition is switched off 
                           |         | TRUE: Wake up inhibition is switched on 
        Parameters (inout) | None 
        Parameters (out)   | None 
        Return value       | Std_ReturnType | E_OK: Successfully changed wake up status for the channel
                           |                | E_NOT_OK: Changed of wake up status for the channel failed
                           |                | COMM_E_UNINIT: ComM not initialized 
        Description        | Changes the inhibition status COMM_NO_WAKEUP for the corresponding channel.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30038</srcid><srcstatus/><internalId>1910</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30079</srcid><srcstatus/><internalId>1931</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30104</srcid><srcstatus/><internalId>1934</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupInhibition13</srcid><srcstatus/><internalId>1989</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30008</srcid><srcstatus/><internalId>1997</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30073</srcid><srcstatus/><internalId>2003</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_PreventWakeUp_True</srcid><srcstatus/><internalId>2204</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_PreventWakeUp_False</srcid><srcstatus/><internalId>2205</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1759</srcid><srcstatus/><internalId>1039</internalId></linkedfrom></coveredby></needscov>      
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00163</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Service name       | ComM_LimitChannelToNoComMode 
        Syntax             | Std_ReturnType ComM_LimitChannelToNoComMode(NetworkHandleType Channel,boolean Status) 
        Service ID[hex]    | 0x0b 
        Sync/Async         | Synchronous 
        Reentrancy         | Non Reentrant 
        Parameters (in)    | Channel | See NetworkHandleType 
                           | Status  | FALSE: Limit channel to COMM_NO_COMMUNICATION disabled 
                           |         | TRUE: Limit channel to COMM_NO_COMMUNICATION enabled 
        Parameters (inout) | None 
        Parameters (out)   | None 
        Return value       | Std_ReturnType | E_OK: Successfully changed inhibition status for the channel
                           |                | E_NOT_OK: Changed of inhibition status for the channel failed
                           |                | COMM_E_UNINIT: ComM not initialized 
        Description        | Changes the inhibition status for the channel for changing from COMM_NO_COMMUNICATION to a higher Communication Mode.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30039</srcid><srcstatus/><internalId>1911</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30041</srcid><srcstatus/><internalId>1913</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30101</srcid><srcstatus/><internalId>1932</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30008</srcid><srcstatus/><internalId>1997</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30073</srcid><srcstatus/><internalId>2003</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncChnlInhibition</srcid><srcstatus/><internalId>2074</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_LimitToNoCom20</srcid><srcstatus/><internalId>2093</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_LimitChannelToNoComMode</srcid><srcstatus/><internalId>2196</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1862</srcid><srcstatus/><internalId>1045</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00224</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Service name       | ComM_ReadInhibitCounter 
        Syntax             | Std_ReturnType ComM_ReadInhibitCounter(uint16* CounterValue) 
        Service ID[hex]    | 0x0d 
        Sync/Async         | Synchronous 
        Reentrancy         | Non Reentrant 
        Parameters (in)    | None 
        Parameters (inout) | None
        Parameters (out)   | CounterValue | Amount of rejected COMM_FULL_COMMUNICATION user requests. 
        Return value       | Std_ReturnType | E_OK: Successfully returned Inhibition Counter
                           |                | E_NOT_OK: Return of Inhibition Counter failed
                           |                | COMM_E_UNINIT: ComM not initialized 
        Description        | This function returns the amount of rejected COMM_FULL_COMMUNICATION user requests.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30039</srcid><srcstatus/><internalId>1911</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30040</srcid><srcstatus/><internalId>1912</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30041</srcid><srcstatus/><internalId>1913</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30008</srcid><srcstatus/><internalId>1997</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30009</srcid><srcstatus/><internalId>1998</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2033</srcid><srcstatus/><internalId>1054</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00234</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The ComM module shall use the error codes of table 4 to report errors. Type or error Relevance 
        Related error code Value [hex] API service used without module initialization Development 
        COMM_E_NOT_INITED 0x1 API service used with wrong parameters (e.g. a NULL pointer) Development 
        COMM_E_WRONG_PARAMETERS 0x2 Table 4: Error classification
      </description>
      <comment>
        Note: according to document change history and AUTOSAR bugzilla #42516,
        production error reporting has been removed from ComM. Therefore no DEM
        interaction is needed and the COMM_E_NET_START_IND_CHANNEL_ entry should
        be ignored.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00858</srcid><srcstatus/><internalId>63</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00234.COMM_E_NOT_INITED</srcid><srcstatus/><internalId>501</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00234.WRONG_PARAMETERS</srcid><srcstatus/><internalId>502</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00242</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Service name       | ComM_GetStatus 
        Syntax             | Std_ReturnType ComM_GetStatus(ComM_InitStatusType* Status) 
        Service ID[hex]    | 0x03 
        Sync/Async         | Synchronous 
        Reentrancy         | Non Reentrant 
        Parameters (in)    | None 
        Parameters (inout) | None 
        Parameters (out)   | Status | COMM_UNINIT: The ComM is not initialized or not usable. 
                           |        |              Default value after startup or after ComM_DeInit() is called.
                           |        | COMM_INIT: The ComM s initialized and usable. 
        Return value       | Std_ReturnType | E_OK: Successfully return of initialization status
                           |                | E_NOT_OK: Return of initialization status failed 
        Description        | Returns the initialization status of the AUTOSAR Communication Manager.
                           | After a call to ComM_DeInit() ComM should have status COMM_UNINIT, 
                           | and a new call to ComM_Init needed to make sure ComM restart 
                           | internal state machines to defailt values.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30001</srcid><srcstatus/><internalId>1887</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30002</srcid><srcstatus/><internalId>1888</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30009</srcid><srcstatus/><internalId>1998</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30073</srcid><srcstatus/><internalId>2003</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_998</srcid><srcstatus/><internalId>1008</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00270</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        If the pre-processor switch ComMDevErrorDetect is set , the Communication Manager Module shall 
        report detected development errors to the Det_ReportError service of the Development Error 
        Tracer.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30009</srcid><srcstatus/><internalId>1998</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30010</srcid><srcstatus/><internalId>1999</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30035</srcid><srcstatus/><internalId>2001</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_163</srcid><srcstatus/><internalId>857</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00280</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The standardized common published parameters as required by BSW00402 in the General 
        Requirements on Basic Software Modules [3] shall be published within the header file of this 
        module and need to be provided in the BSW Module Description. The according module abbreviation 
        can be found in the List of Basic Software Modules [1]
      </description>
      <comment>
        Ensure that the information provided in config.mk is correct and that the
        centralized version file template provided by the plugin build environment
        is used (in ComM_Version.h.m4)
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM.h_9</srcid><srcstatus/><internalId>956</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/ComM_BSW.h_8</srcid><srcstatus/><internalId>957</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4_3413</srcid><srcstatus/><internalId>1602</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4_3505</srcid><srcstatus/><internalId>1603</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4_3601</srcid><srcstatus/><internalId>1604</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4_3698</srcid><srcstatus/><internalId>1605</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4_3792</srcid><srcstatus/><internalId>1606</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4_3889</srcid><srcstatus/><internalId>1607</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4_4981</srcid><srcstatus/><internalId>1608</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4_5073</srcid><srcstatus/><internalId>1609</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00299</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_READY_SLEEP and configuration parameter ComMNmVariant=[FULL|PASSIVE]
        ComM568_Conf) and the Network Manager module indicates ComM_Nm_PrepareBusSleepMode() (ComM391)
        the ComM channel state machine shall switch to state COMM_SILENT_COMMUNICATION.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30017</srcid><srcstatus/><internalId>1896</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SC_FulSilFul_thruDiag</srcid><srcstatus/><internalId>1908</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30106</srcid><srcstatus/><internalId>1936</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1641</srcid><srcstatus/><internalId>1353</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_FULL_COM_READY_SLEEP</srcid><srcstatus/><internalId>1748</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00826</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>        
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00429</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Service name    | ComM_MainFunction_&lt;Channel_Id&gt; 
        Syntax          | void ComM_MainFunction_&lt;Channel_Id&gt;(void) 
        Service ID[hex] | 0x60 
        Timing          | FIXED_CYCLIC 
        Description     | This function shall perform the 
                        | processing of the AUTOSAR ComM activities that are not directly initiated by the calls e.g. 
                        | from the RTE. There shall be one dedicated Main Function for each instance of ComM.Precondition:
                        | ComM shall be initialized 
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30019</srcid><srcstatus/><internalId>1898</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30024</srcid><srcstatus/><internalId>1902</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30060_1</srcid><srcstatus/><internalId>1928</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30102</srcid><srcstatus/><internalId>1933</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30027</srcid><srcstatus/><internalId>2056</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_839</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00429</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00456</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The ComM module pre-compile time and published configuration data, shall group and export the 
        configuration data to a static configuration interface. The name of the interface shall be 
        ComM_Cfg.h.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_3</srcid><srcstatus/><internalId>854</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00457</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The ComM module configuration shall support a tool based configuration.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00460</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Files holding configuration data for the ComM module shall have a XML-format that is readable 
        and understandable by human beings.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00462</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The ComM module shall be implemented according the AUTOSAR Software Module Design Requirements 
        for details refer to AUTOSAR General Requirements on Basic Software Modules [3]
      </description>
      <comment>
        This requirement is informational only since note that this requirement
        comes under the section "7.12 Non functional requirements" in SWS.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00463</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The ComM module shall provide in addition to ComM_Lcfg.c and ComM_PBcfg.c at least the 
        following files: ComM header file: ComM.h ComM callback declarations: ComM_Nm.h, ComM_EcuMBswM.
        h, ComM_Dcm.h, ComM_BusSm.h ComM configuration file: ComM_Cfg.h ComM source file: ComM.c
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComMh</srcid><srcstatus/><internalId>474</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_Nm</srcid><srcstatus/><internalId>475</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_EcuMBswM</srcid><srcstatus/><internalId>476</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_Cfg</srcid><srcstatus/><internalId>477</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_Dcm</srcid><srcstatus/><internalId>479</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_BusSm</srcid><srcstatus/><internalId>480</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00466</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The ComM module shall use the Standard header files. (For details refer to AUTOSAR General 
        Requirements on Basic Software Modules [3]). It is not allowed to redefine AUTOSAR integer data 
        types.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00469</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Enumeration of module version numbers shall be according the BSW General Requirements (for 
        details refer to AUTOSAR General Requirements on Basic Software Modules [3]
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00473</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The ComM module shall perform Inter Module Checks to avoid integration of incompatible files. 
        The imported included files shall be checked by preprocessing directives. The following version 
        numbers shall be verified: - &lt;MODULENAME&gt;_AR_RELEASE_MAJOR_VERSION - &lt;MODULENAME&gt;
        _AR_RELEASE_MINOR_VERSION Where &lt;MODULENAME&gt; is the Module Abbreviation of the other (external)
        modules which provide header files included by the ComM module. If the values are not identical 
        to the expected values, an error shall be reported.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00503</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The code file structure shall include a file ComM_Lcfg.c for all link time configurable 
        parameters and a file ComM_PBcfg.c for all post build time configurable parameters.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_Lcfg.c_3</srcid><srcstatus/><internalId>882</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_PBcfg.c_3</srcid><srcstatus/><internalId>926</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00503.Include</srcid><srcstatus/><internalId>521</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00506</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The ComM module shall, depending on the ComM configuration, include the header files of the 
        modules providing interfaces to the ComM module : ComM Schedule Manager: SchM_ComM.h RTE 
        generated header file: Rte_ComM.h Development Error Tracer: Det.h Diagnostic Communication 
        Manager: Dcm.h NVRAM Manager: NvM.h ECU State Manager: EcuM.h Network Management Interface: Nm.
        h LIN State Manager: LinSM.h CAN State Manager: CanSM.h FlexRay State Manager: FrSm.h Ethernet 
        State Manager: EthSm.h Basis Software Manager: BswM.h Communication: Com.h
      </description>
      <comment>
        See the refined requirements "ComM.EB_Ref.ComM506_Dcm" and "ComM.EB_Ref.ASR403.SWS_ComM_00506.CanSM"
        and the deviation "dev.ComM.HeaderInclusion" for details.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.HeaderInclusion</srcid><srcstatus/><internalId>801</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00506.SchM</srcid><srcstatus/><internalId>485</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00506.Rte</srcid><srcstatus/><internalId>486</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00506.Det</srcid><srcstatus/><internalId>487</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00506.Dcm</srcid><srcstatus/><internalId>488</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00506.NvM</srcid><srcstatus/><internalId>489</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00506.LinSM</srcid><srcstatus/><internalId>490</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00506.CanSM</srcid><srcstatus/><internalId>491</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00506.FrSM</srcid><srcstatus/><internalId>492</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00506.EthSM</srcid><srcstatus/><internalId>493</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00506.BswM</srcid><srcstatus/><internalId>494</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00506.Com</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00506.Nm</srcid><srcstatus/><internalId>496</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swurs.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>36</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00509</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Development error values are of type uint8.
      </description>
      <comment>
        This requirement is informational only.
        This is a requriement on the SWS but not on the implementation.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00511</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The switch ComMDevErrorDetect  shall activate or deactivate the detection of all development 
        errors 
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30009</srcid><srcstatus/><internalId>1998</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30010</srcid><srcstatus/><internalId>1999</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30035</srcid><srcstatus/><internalId>2001</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_163</srcid><srcstatus/><internalId>857</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00512</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        If the ComMDevErrorDetect switch  is enabled API parameter checking is enabled.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30009</srcid><srcstatus/><internalId>1998</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30010</srcid><srcstatus/><internalId>1999</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30035</srcid><srcstatus/><internalId>2001</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_163</srcid><srcstatus/><internalId>857</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00549</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The ComM module shall support a variant called VARIANT-PRE-COMPILE.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.VariantPreCompile</srcid><srcstatus/><internalId>805</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00552</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Service name       | ComM_SetECUGroupClassification 
        Syntax             | Std_ReturnType ComM_SetECUGroupClassification(ComM_InhibitionStatusType Status) 
        Service ID[hex]    | 0x0f 
        Sync/Async:        | Synchronous 
        Reentrancy         | Non Reentrant 
        Parameters (in)    | Status | See ComM_InhibitionStatusType 
        Parameters (inout) | None 
        Parameters (out)   | None 
        Return value:      | Std_ReturnType | E_OK: Successfully change the ECU Group Classification Status
                           |                | E_NOT_OK: Change of the ECU Group Classification Status failed
                           |                | COMM_E_UNINIT: ComM not initialized 
        Description        | Changes the ECU Group Classification status 
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.SetECUGroupClassificationMadeOptional</srcid><srcstatus/><internalId>802</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00552.ComM_SetECUGroupClassification</srcid><srcstatus/><internalId>484</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00619</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Service name       | ComM_GetInhibitionStatus 
        Syntax             | Std_ReturnType ComM_GetInhibitionStatus(NetworkHandleType Channel,ComM_InhibitionStatusType* Status) 
        Service ID[hex]    | 0x04 
        Sync/Async         | Synchronous 
        Reentrancy         | Non Reentrant 
        Parameters (in)    | Channel | See NetworkHandleType 
        Parameters (inout) | None 
        Parameters (out)   | Status | See ComM_InhibitionStatusType 
        Return value:      | Std_ReturnType | E_OK: Successfully returned Inhibition Status
                           |                | E_NOT_OK: Return of Inhibition Status failed
                           |                | COMM_E_UNINIT: ComM not initialized Description: Returns the inhibition status of a ComM channel.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30041</srcid><srcstatus/><internalId>1913</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30079</srcid><srcstatus/><internalId>1931</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30008</srcid><srcstatus/><internalId>1997</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30009</srcid><srcstatus/><internalId>1998</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1036</srcid><srcstatus/><internalId>1009</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00619</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
      </providescoverage>            
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00649</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The Std_ReturnType shall be extended with the following #define values: #define Value 
        Description COMM_E_MODE_LIMITATION 0x02 Function call has been successfully but mode can not be 
        granted because of mode inhibition. COMM_E_UNINIT 0x03 ComM not initialized
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.SWS_ComM_00649</srcid><srcstatus/><internalId>220</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00649.COMM_E_MODE_LIMITATION</srcid><srcstatus/><internalId>504</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00649.COMM_E_UNINIT</srcid><srcstatus/><internalId>505</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00693</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        If more than one channel is linked to one user request and the modes of the channels are 
        different, the ComM module shall indicate the lowest Communication Mode to the DCM module.
      </description>
      <comment>
        This requirement is not applicable because this requirement is something
        leftover from the 3.1 specification which is no longer valid using the
        new DCM API, the ComM now signals the channel state perchannel to the DCM.

        This requirement is no more present in AR-4.1.1 specification.
        Reference: http://www.autosar.org/bugzilla/show_bug.cgi?id=50467
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00805</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Caveats of ComM_Nm_NetworkStartIndication: The ComM module is initialized correctly.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00806</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Caveats of ComM_Nm_NetworkMode: The Communication Manager Module is initialized correctly.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00808</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Caveats of ComM_Nm_PrepareBusSleepMode: The Communication Manager Module is initialized 
        correctly.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00810</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Caveats of ComM_Nm_BusSleepMode: The Communication Manager Module is initialized correctly.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00812</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Caveats of ComM_Nm_RestartIndication: The ComM module is initialized correctly.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00814</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Caveats of ComM_EcuM_WakeUpIndication: The Communication Manager Module is initialized 
        correctly.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00816</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Caveats of ComM_BusSM_ModeIndication(.): The Communication Manager Module is initialized 
        correctly.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00820</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Header file Imported Type Std_Types.h Std_VersionInfoType Std_ReturnType ComStack_Types.h 
        NetworkHandleType PNCHandleType NvM_Types.h NvM_BlockIdType Nm_Types.h Nm_ReturnType
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00822</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The function ComM_GetVersionInfo shall return the version information of this module. The 
        version information includes: Module Id Vendor Id Vendor specific version numbers (BSW00407)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GetVersionInfoTest_DetOff</srcid><srcstatus/><internalId>1886</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GetVersionInfoTest_DetOn_1</srcid><srcstatus/><internalId>1986</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GetVersionInfoTest_DetOn_2</srcid><srcstatus/><internalId>1988</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GetVersionInfoTest_DetOn_3</srcid><srcstatus/><internalId>2052</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00823</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The function ComM_GetVersionInfo shall be pre compile time configurable On/Off by the 
        configuration parameter: ComMVersionInfoApi 
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GetVersionInfoTest_DetOff</srcid><srcstatus/><internalId>1886</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GetVersionInfoTest_DetOn_1</srcid><srcstatus/><internalId>1986</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GetVersionInfoTest_DetOn_2</srcid><srcstatus/><internalId>1988</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GetVersionInfoTest_DetOn_3</srcid><srcstatus/><internalId>2052</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00824</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        If source code for caller and callee of ComM_GetVersionInfo is available, then the 
        Communication Manager Module should realize ComM_GetVersionInfo as a macro, defined in the 
        module's header file.
      </description>
      <comment>
        This requirement is not applicable. EB utilize this interface as a C function since source
        code of the caller is not available at this context.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00829</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        API function Module Description Det_ReportError Det Service to report development errors 
        CanSM_RequestComMode CanSM CanSM_GetCurrentComMode CanSM LinSM_RequestComMode LinSM 
        LinSM_GetCurrentComMode LinSM FrSM_RequestComMode FrSM FrSM_GetCurrentComMode FrSM EthSM 
        _RequestComMode EthSM EthSM _GetCurrentComMode EthSM BswM_ComM_CurrentPNCMode BswM Function 
        called by ComM to indicate the current mode of the PNC
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00852</srcid><srcstatus/><internalId>57</internalId></linkedfrom><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00853</srcid><srcstatus/><internalId>58</internalId></linkedfrom><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00854</srcid><srcstatus/><internalId>59</internalId></linkedfrom><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00855</srcid><srcstatus/><internalId>60</internalId></linkedfrom><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00856</srcid><srcstatus/><internalId>61</internalId></linkedfrom><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00857</srcid><srcstatus/><internalId>62</internalId></linkedfrom><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00859</srcid><srcstatus/><internalId>64</internalId></linkedfrom><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00860</srcid><srcstatus/><internalId>65</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00829.Det_ReportError</srcid><srcstatus/><internalId>509</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_CurrentPNCMode</srcid><srcstatus/><internalId>510</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00852</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The Communication Manager module shall use FrSM_RequestComMode() from the FlexRay State Manager 
        to request a dedicated communication mode.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30081</srcid><srcstatus/><internalId>1938</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_466</srcid><srcstatus/><internalId>1216</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00829</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00958</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>        
        <provcov>
          <linksto>ComM.SWS_ComM_00962</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>        
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00853</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The Communication Manager module shall use FrSM_GetCurrentComMode() from the FlexRay State 
        Manager to query the current communication mode if necessary.
      </description>
      <comment>
        When it is necessary to request a dedicated communication mode depends on
        the current status of each instance of the channel state machine
        (see above). For details of the functionality of the FlexRay State
        Manager module refer to its Specification [25].
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Query_BusSMModeFr</srcid><srcstatus/><internalId>1946</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_367</srcid><srcstatus/><internalId>996</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00829</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00963</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>        
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00854</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        If CAN is used, the ComM module shall use CanSM_RequestComMode() from the CAN State Manager to 
        request a dedicated communication mode.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30017</srcid><srcstatus/><internalId>1896</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ComMCanSMInteraction</srcid><srcstatus/><internalId>2002</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_454</srcid><srcstatus/><internalId>1214</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00829</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00958</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>        
        <provcov>
          <linksto>ComM.SWS_ComM_00962</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>        
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00855</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The Communication Manager module shall use CanSM_GetCurrentComMode() from the CAN State Manager 
        to query the current communication mode if necessary.
      </description>
      <comment>
        When it is necessary to request a dedicated communication mode
        depends on the current status of each instance of the channel state
        machine (see above). For details of the functionality of the CAN State
        Manager module refer to its Specification [24]. Comment: Those APIs can
        be called re-entrant, as long as different channel &amp; controller numbers
        are used.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Query_BusSMModeFr</srcid><srcstatus/><internalId>1946</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Query_BusSMModeLIN</srcid><srcstatus/><internalId>2066</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_355</srcid><srcstatus/><internalId>994</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00829</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00963</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>        
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00856</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The Communication Manager module shall use LinSM_RequestComMode() from the LIN State Manager to 
        request a dedicated communication mode.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30075</srcid><srcstatus/><internalId>2062</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_473</srcid><srcstatus/><internalId>1217</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00829</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00958</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>        
        <provcov>
          <linksto>ComM.SWS_ComM_00962</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>        
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00857</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The Communication Manager module shall use LinSM_GetCurrentComMode() from the LIN State Manager 
        to query the current communication mode if necessary.
      </description>
      <comment>
        When it is necessary to request a dedicated communication mode
        depends on the current status of each instance of the channel state
        machine (see above). For details of the functionality of the LIN State
        Manager module refer to its Specification [23].
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Query_BusSMModeLIN</srcid><srcstatus/><internalId>2066</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_374</srcid><srcstatus/><internalId>997</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00829</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00963</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>                
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00858</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        If not initialized, the ComM module shall report a development error COMM_E_NOT_INITED (see by 
        using the Det_ReportError service of the Development Error Tracer module, if development error 
        detection has been switched on by ComMDevErrorDetect.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30008</srcid><srcstatus/><internalId>1997</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1400</srcid><srcstatus/><internalId>1024</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1413</srcid><srcstatus/><internalId>1025</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00858</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>        
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00859</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The Communication Manager module shall use EthSM_RequestComMode() from the Ethernet State 
        Manager to request a dedicated communication mode.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MaxUserReqWhenNoComInhibit</srcid><srcstatus/><internalId>2059</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_460</srcid><srcstatus/><internalId>1215</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00829</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00958</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>        
        <provcov>
          <linksto>ComM.SWS_ComM_00962</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>        
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00860</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The Communication Manager module shall use EthSM_GetCurrentComMode() from the Ethernet State 
        Manager to query the current communication mode if necessary.
      </description>
      <comment>
        When it is necessary to request a dedicated communication mode depends on
        the current  status of each instance of the channel state machine (see
        above). For details of the functionality of the Ethernet State Manager
        module refer to its Specification [28]
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Query_BusSMModeFr</srcid><srcstatus/><internalId>1946</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Query_BusSMModeLIN</srcid><srcstatus/><internalId>2066</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_361</srcid><srcstatus/><internalId>995</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00829</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00963</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>                
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00872</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Syntax             | Std_ReturnType ComM_GetState(NetworkHandleType Channel,ComM_StateType* State) 
        Service ID[hex]    | 0x34 
        Sync/Async         | Synchronous 
        Reentrancy         | Non Reentrant 
        Parameters (in)    | Channel | The Network Channel for the requested state of ComM state machine. 
        Parameters (inout) | None 
        Parameters (out)   | State | State of the ComM channel state machine:
                           |       | COMM_NO_COM_NO_PENDING_REQUEST 
                           |       | COMM_NO_COM_REQUEST_PENDING 
                           |       | COMM_FULL_COM_NETWORK_REQUESTED 
                           |       | COMM_FULL_COM_READY_SLEEP 
                           |       | COMM_SILENT_COM
        Return value       | Std_ReturnType | E_OK: Successfully return current state of ComM state machine
                           |                | E_NOT_OK: Return of current state of ComM state machine failed
                           |                | COMM_E_UNINIT: ComM not initialized 
        Description        | Return current state, including sub-state, of the ComM channel state machine.
                           | Usage of function only valid if EcuM/Fixed is used:To leave RUN: state/sub-state need 
                           | to be COMM_NO_COM_NO_PENDING_REQUEST (No communication and no pending request to start 
                           | communication)In POST RUN to return to RUN: state/sub-state need to be in 
                           | COMM_NO_COM_REQUEST_PENDING (No communication, but a pending request to start communication)If 
                           | EcuM/Flex and BswM is used, BswM instead use received mode indications from ComM (
                           | BswM_ComM_RequestedMode()
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30001</srcid><srcstatus/><internalId>1887</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30003</srcid><srcstatus/><internalId>1889</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30004</srcid><srcstatus/><internalId>1890</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30006</srcid><srcstatus/><internalId>1892</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30008</srcid><srcstatus/><internalId>1997</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30009</srcid><srcstatus/><internalId>1998</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PB_ChannelPerPnc</srcid><srcstatus/><internalId>2096</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PB_UserPerPnc</srcid><srcstatus/><internalId>2097</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_952</srcid><srcstatus/><internalId>1006</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00887</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_NETWORK_REQUESTED and configuration parameter ComMNmVariant=LIGHT|
        NONE (ComM568_Conf) and a user request ComM_RequestComMode(&lt;user&gt;,COMM_FULL_COMMUNICATION) or 
        the DCM indicate ComM_DCM_ActiveDiagnostic(&lt;channel&gt;)(ComM873), the timer for 
        ComMTMinFullComModeDuration(ComM.ECUC_ComM_00557) shall be cancelled.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00887.LIGHTUser</srcid><srcstatus/><internalId>497</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00887.LIGHTDcm</srcid><srcstatus/><internalId>498</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00887.NONEUser</srcid><srcstatus/><internalId>499</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00887.NONEDcm</srcid><srcstatus/><internalId>500</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00900</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_NETWORK_REQUESTED and configuration parameter ComMNmVariant=PASSIVE 
        ComM568_Conf) and the Network Manager module indicates ComM_Nm_PrepareBusSleepMode() (ComM391)
        the ComM channel state machine shall switch to state COMM_SILENT_COMMUNICATION.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30110</srcid><srcstatus/><internalId>2005</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_FULL_COM_NETWORK_REQUESTED</srcid><srcstatus/><internalId>1736</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00826</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>        
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00906</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        ImplementationDataType ComM_UserHandleArrayType 
        { 
          // This element contains the number of valid user handle entries in 
          // the "handleArray" member. If no user keeps the channel requested, 
          // this is zero 
          ImplementationDataType numberOfRequesters {LOWER-LIMIT=0, UPPER-LIMIT=MAX_CHANNEL_REQUESTER };
          // This element contains the user handles of the users which keep the 
          // channel requested (if any), starting in its first entries. The 
          // size of the array MAX_CHANNEL_REQUESTERS is the maximum of the 
          // number of users requesting a channel. 
          ComM_UserHandleType handleArray[]
        }
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GenerateSWCD_UserOnlytoPNC_RteON</srcid><srcstatus/><internalId>1854</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GenerateSWCD_NoUsers_PncON_RteOn</srcid><srcstatus/><internalId>1855</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Rte_fullComRequestors</srcid><srcstatus/><internalId>2317</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_73</srcid><srcstatus/><internalId>1610</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1101</srcid><srcstatus/><internalId>1634</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00906</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
      </providescoverage>            
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00908</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Every state change (main or substate), excluding entering of the main state 
        PNC_NO_COMMUNICATION coming from PowerOff, shall be notified by the API call 
        BswM_ComM_CurrentPncMode() with the entered PNC state.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncNoComInitTest</srcid><srcstatus/><internalId>2326</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_250</srcid><srcstatus/><internalId>1381</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_320</srcid><srcstatus/><internalId>1389</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_439</srcid><srcstatus/><internalId>1407</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_614</srcid><srcstatus/><internalId>1419</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_642</srcid><srcstatus/><internalId>1423</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_665</srcid><srcstatus/><internalId>1426</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_690</srcid><srcstatus/><internalId>1429</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00908</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>        
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00913</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        It shall be possible to map a configurable amount of PNC(s) to a configurable amount of ComM 
        channels using the parameter ComMChannelPerPnc 
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1052</srcid><srcstatus/><internalId>1524</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00913</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00925</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The main state PNC_NO_COMMUNICATION shall be the target state as long as the PNC is neither 
        requested ECU internally nor requested externally.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncNoComInitTest</srcid><srcstatus/><internalId>2326</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_684</srcid><srcstatus/><internalId>1428</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00936</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        As long as at least one ComMUser assigned to this PNC requests "Full Communication", 
        PNC_REQUESTED shall be the current PNC state.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncNoComToRdySlpTest</srcid><srcstatus/><internalId>2073</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_4</srcid><srcstatus/><internalId>2292</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00937</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        As long as a PNC is requested remotely (i.e. at least one bit within the ERA signal assigned to 
        this PNC equals '1') and the configuration switch ComMPncGatewayEnabled is set to TRUE , 
        PNC_REQUESTED shall be the current PNC state.
      </description>
      <comment>
        This requirement is not applicable.
        Requirement is not present in AUTOSAR 4.3.1
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00942</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        As long as the PNC is requested (i.e. at least one PNC bit within EIRA equals '1') and no 
        ComMUser assigned to this PNC requests "Full Communication", PNC_READY_SLEEP shall be the 
        current state.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Test_EIRA_MultipleSignalValues</srcid><srcstatus/><internalId>2077</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_267</srcid><srcstatus/><internalId>1386</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00943</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        As long as the timer ComMPncPrepareSleepTimer  is running and no changes in ComMUser, EIRA or 
        ERAn occur, PNC_PREPARE_SLEEP shall be the current state.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00946</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        In case the configuration switch ComMPncGatewayEnabled is set to TRUE and the parameter 
        ComMPncGatewayType is set to COMM_GATEWAY_TYPE_PASSIVE, the signal value representing a PNC in 
        ERA shall be new calculated according to ComM959 before calling ComSendSignal(
      </description>
      <comment>
        This requirement is not applicable.
        Requirement is not present in AUTOSAR 4.3.1
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00955</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        If the configuration parameter ComMPncGatewayEnabled  is enabled and the parameter 
        ComMPncGatewayType is set to COMM_GATEWAY_TYPE_PASSIVE for a ComMChannel , the passive PNC 
        Gateway behavior for this ComMChannel shall be implemented by using the filter mechanism for 
        the COM Tx signals as described in [ComM959.
      </description>
      <comment>
        This requirement is not applicable.
        Requirement is not present in AUTOSAR 4.3.1
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00956</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The module header file ComM.h shall include Rte_ComM_Type.h to include the types which are 
        common used by BSW Modules and Software Components. This file shall only contain types, which 
        are not already defined in Rte_ComM_Type.h.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00981</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        If the configuration parameter ComMPncGatewayEnabled  is TRUE, the default gateway type shall 
        be active (COMM_GATEWAY_TYPE_ACTIVE)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_587</srcid><srcstatus/><internalId>1495</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00988</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Figure 2: PNC State Machine
      </description>
      <comment>
        This requirement is informational only.
        The State Chart is shown in graphics/ComM.SWS_ComM_00988_R4.0.3.PNG.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.SWS_ComM_00907</srcid><srcstatus/><internalId>306</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00924</srcid><srcstatus/><internalId>316</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00927</srcid><srcstatus/><internalId>318</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00947</srcid><srcstatus/><internalId>329</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00948</srcid><srcstatus/><internalId>330</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.PREPARE_SLEEP_TIMEOUT</srcid><srcstatus/><internalId>1716</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_RequestComMode_NO_COM_REQ_BY_ALL_COMM_USER</srcid><srcstatus/><internalId>1717</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ModeLimitation_NO_COM_REQ_BY_ALL_COMM_USER</srcid><srcstatus/><internalId>1718</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.COMCBK</srcid><srcstatus/><internalId>1719</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ECUM_WAKEUP_IND</srcid><srcstatus/><internalId>1720</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER</srcid><srcstatus/><internalId>1721</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00991</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        When all ComMUsers assigned to this PNC request "No Communication" and the PNC bit in all ERAn 
        is equal to 0, the sub state PNC_REQUESTED shall be left and the sub state PNC_READY_SLEEP 
        shall be entered, if the configuration switch ComMPncGatewayEnabled is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.SWS_ComM_00991</srcid><srcstatus/><internalId>351</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00998</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        ComM shall support a variant called VARIANT POST-BUILD-SELECTABLE. The supported parameter 
        shall be: 1. ComMPncEnabled
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_91</srcid><srcstatus/><internalId>1468</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00999</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The parameter ComMPncEnable shall be stored non volatile and evaluated after the ECU reset 
        during the startup.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_91</srcid><srcstatus/><internalId>1468</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00147</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_DeInit
        Syntax             | void ComM_DeInit (void)
        Service ID [hex]   | 0x02
        Sync/Async         | Synchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | None
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | This API de-initializes the AUTOSAR Communication Manager.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30002</srcid><srcstatus/><internalId>1888</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_913</srcid><srcstatus/><internalId>1005</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>    
    
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00275</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_EcuM_WakeUpIndication
        Syntax             | void ComM_EcuM_WakeUpIndication (NetworkHandleType Channel)
        Service ID [hex]   | 0x2a
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant
        Parameters (in)    | Channel | Channel
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | Notification of a wake up on the corresponding channel.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30045</srcid><srcstatus/><internalId>1917</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_EcuMWkupInd_FullVariant</srcid><srcstatus/><internalId>1924</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30012</srcid><srcstatus/><internalId>2309</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30015</srcid><srcstatus/><internalId>2312</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_INDICATION_NO_COM_REQUEST_PENDING_2</srcid><srcstatus/><internalId>1760</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2763</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00370</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_GetVersionInfo
        Syntax             | void ComM_GetVersionInfo (Std_VersionInfoType* Versioninfo)
        Service ID [hex]   | 0x10
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant
        Parameters (in)    | None
        Parameters (inout) | None
        Parameters (out)   | Versioninfo | See Std_VersionInfoType
        Return value       | None
        Description        | This function returns the published information (for details refer to table 10.3)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GetVersionInfoTest_DetOff</srcid><srcstatus/><internalId>1886</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GetVersionInfoTest_DetOn_1</srcid><srcstatus/><internalId>1986</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GetVersionInfoTest_DetOn_2</srcid><srcstatus/><internalId>1988</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GetVersionInfoTest_DetOn_3</srcid><srcstatus/><internalId>2052</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2161</srcid><srcstatus/><internalId>1058</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00370</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>            
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00675</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_BusSM_ModeIndication
        Syntax             | void ComM_BusSM_ModeIndication (NetworkHandleType Channel, ComM_ModeType ComMode)
        Service ID [hex]   | 0x33
        Sync/Async         | Asynchronous
        Reentrancy         | Reentrant
        Parameters (in)    | Channel | See NetworkHandleType
                           | ComMode | See ComM_ModeType
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | Indication of the actual bus mode by the corresponding Bus State Manager. ComM
                           | shall propagate the indicated state to the users with means of the RTE and BswM.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
       <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30005</srcid><srcstatus/><internalId>1891</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30009</srcid><srcstatus/><internalId>1998</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Algorithm.BusSMModeIndication</srcid><srcstatus/><internalId>1686</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.Algorithm.ModePropagation</srcid><srcstatus/><internalId>1687</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.BUSSM_MODE_IND</srcid><srcstatus/><internalId>1704</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.TOPNotifyTransition_0</srcid><srcstatus/><internalId>1781</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.TOPNotifyTransition_1</srcid><srcstatus/><internalId>1782</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.TOPNotifyTransition_2</srcid><srcstatus/><internalId>1783</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2911</srcid><srcstatus/><internalId>1098</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00675</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject> 
    <specobject>
      <id>ComM.ASR403.ECUC_ComM_00841</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Name: ComMPncPrepareSleepTimer
        Name:             ComMPncPrepareSleepTimer {COMM_T_PNC_PREPARE_SLEEP}
        Description:      Time in seconds the PNC state machine shall wait in COMM_PNC_PREPARE_SLEEP.
        Multiplicity:     0..1
        Type:             EcucFloatParamDef
        Range:            0..63
        Default value:    -- 
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: Module
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_T_PNC_PREPARE_SLEEP</srcid><srcstatus/><internalId>1816</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2001</srcid><srcstatus/><internalId>1577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00841</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.ECUC_ComM_00842</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Name:             ComMPncGatewayType{COMM_PNC_GW_TYPE}
        Description:      Identifies the Partial Network Gateway behaviour of a ComMChannel
        Multiplicity:     0..1
        Type:             EcucEnumerationParamDef
        Range:            COMM_GATEWAY_TYPE_ACTIVE
                          COMM_GATEWAY_TYPE_PASSIVE
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: ECU
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Test_ComM0PncVectorAvoidance_4</srcid><srcstatus/><internalId>2305</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_BSW_Cfg.c_252</srcid><srcstatus/><internalId>871</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_582</srcid><srcstatus/><internalId>1494</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00842</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00667</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        The ComM module shall omit to call Nm_NetworkRequest() from 
        NM if configuration parameter ComMNmVariant=PASSIVE (see ComM568_Conf).
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest</srcid><srcstatus/><internalId>570</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest.NotCalled</srcid><srcstatus/><internalId>571</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00802</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Configuration of ComM_ReadInhibitCounter: Configurable with ComMModeLimitationEnabled (see ComM560_Conf).
        Function will only be available if ComMModeLimitationEnabled (see ComM560_Conf) is enabled.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>        
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2033</srcid><srcstatus/><internalId>1054</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
        <providescoverage>
          <provcov>
            <linksto>ComM.SWS_ComM_00802</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
      </providescoverage>               
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>92</internalId></specobject>

    <specobject>
      <id>ComM.ASR403.SWS_ComM_00803</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        Configuration of ComM_ResetInhibitCounter: Configurable with ComMModeLimitationEnabled (see ComM560_Conf). 
        Function will only be available if ComMModeLimitationEnabled (see ComM560_Conf) is enabled
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>         
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2078</srcid><srcstatus/><internalId>1056</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
          <provcov>
            <linksto>ComM.SWS_ComM_00803</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>               
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>93</internalId></specobject> 
    
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00866</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        An DCM_ActiveDiagnostic indication shall be treated as a COMM_FULL_COMMUNICATION request for 
        the specified communication channel (see ComM_DCM_ActiveDiagnostic(channel)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>         
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00866.NmVariant.FULL</srcid><srcstatus/><internalId>531</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00866.NmVariant.LIGHT</srcid><srcstatus/><internalId>532</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00866.NmVariant.NONE</srcid><srcstatus/><internalId>533</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
          <provcov>
            <linksto>ComM.SWS_ComM_00866</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>               
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>     
    
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00876</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        In sub-state COMM_NO_COM_NO_PENDING_REQUEST and DCM indicate ComM_DCM_ActiveDiagnostic(ComM873), 
        the ComM channel state machine shall immediately switch to sub-state COMM_NO_COM_REQUEST_PENDING
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>         
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00876.NmVariant.FULL</srcid><srcstatus/><internalId>534</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00876.NmVariant.LIGHT</srcid><srcstatus/><internalId>535</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00876.NmVariant.NONE</srcid><srcstatus/><internalId>536</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
          <provcov>
            <linksto>ComM.SWS_ComM_00876</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>               
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>    
    
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00878</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        In state COMM_SILENT_COMMUNICATION and DCM indicate ComM_DCM_ActiveDiagnostic(ComM873), 
        the ComM channel state machine shall switch to state COMM_FULL_COMMUNICATION.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>         
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00878.NmVariant.FULL</srcid><srcstatus/><internalId>537</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00878.NmVariant.LIGHT</srcid><srcstatus/><internalId>538</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00878.NmVariant.NONE</srcid><srcstatus/><internalId>539</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
          <provcov>
            <linksto>ComM.SWS_ComM_00878</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>               
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>        
    
    <specobject>
      <id>ComM.ASR403.SWS_ComM_00883</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ ComM_4_0_3.xml</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_READY_SLEEP and DCM indicate ComM_DCM_ActiveDiagnostic(ComM873), 
        the ComM channel state machine shall switch to sub-state COMM_FULL_COM_NETWORK_REQUESTED.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>         
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00883.NmVariant.FULL</srcid><srcstatus/><internalId>540</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00883.NmVariant.LIGHT</srcid><srcstatus/><internalId>541</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00883.NmVariant.NONE</srcid><srcstatus/><internalId>542</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
          <provcov>
            <linksto>ComM.SWS_ComM_00883</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>               
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>ComM.ASR430.SWS_ComM_00965</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, V4.3.0</source>
      <version>1</version>
      <description>
        Caveats of ComM_EcuM_PNCWakeUpIndication:
        The Communication Manager Module is initialized correctly.
      </description>
      <releases>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2835</srcid><srcstatus/><internalId>1093</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PNC_Wakeup_Det_Checks</srcid><srcstatus/><internalId>2173</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>ComM.ECUC_ComM_00554</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:     ComMGeneral
        Parent Container:   ComM
        Description:        General configuration parameters of the Communication Manager.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1494</srcid><srcstatus/><internalId>1552</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00555</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMDevErrorDetect
        Parent Container: ComMGeneral
        Description:      Switches the development error detection and notification on or off.
                          - true: detection and notification is enabled.
                          - false: detection and notification is disabled.
        Multiplicity:     1
        Type:             EcucBooleanParamDef
        Default value:    false 
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_DEV_ERROR_DETECT</srcid><srcstatus/><internalId>1793</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1793</srcid><srcstatus/><internalId>1566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>100</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00556</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMMainFunctionPeriod
        Parent Container: ComMChannel
        Description:      Specifies the period in seconds that the 
                          MainFunction has to be triggered with.
                          Comment: ComM scheduling shall be at least as 
                          fast as the communication stack and a schedule 
                          longer than 100ms makes no sense for communication.
        Multiplicity:     1
        Type:             EcucFloatParamDef
        Range:            0..INF
        Default value:    0.02
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: ECU
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComMMainFunctionPeriod</srcid><srcstatus/><internalId>808</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.ECUC_ComM_00556</srcid><srcstatus/><internalId>0</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00557</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMTMinFullComModeDuration
        Parent Container: ComMGeneral
        Description:      Minimum time duration in seconds, 
                          spent in the COMM_FULL_COMMUNICATION sub-state 
                          COMM_FULL_COM_NETWORK_REQUESTED.
        Multiplicity:     1
        Type:             EcucFloatParamDef
        Range:            0.001 .. 65
        Default value:    52
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30019</srcid><srcstatus/><internalId>1898</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_CANCEL_TM_WITH_USERREQ</srcid><srcstatus/><internalId>1941</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_CANCEL_TM_WITH_DCM</srcid><srcstatus/><internalId>1942</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_TM_IN_FULL_COMMODE_DURATION</srcid><srcstatus/><internalId>2063</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_T_MIN_FULL_COM_MODE_DURATION</srcid><srcstatus/><internalId>1795</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2249</srcid><srcstatus/><internalId>1589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00559</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMWakeupInhibitionEnabled
        Parent Container: ComMGeneral
        Description:      true if wake up inhibition functionality enabled.
                          true: Enabled 
                          false: Disabled
        Multiplicity:     1
        Type:             EcucBooleanParamDef
        Default value:    false
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_WAKEUP_INHIBITION_ENABLED</srcid><srcstatus/><internalId>1801</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2310</srcid><srcstatus/><internalId>1593</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>103</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00560</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMModeLimitationEnabled
        Parent Container: ComMGeneral
        Description:      true if mode limitation functionality shall be enabled.
                          true: Enabled 
                          false: Disabled
        Multiplicity:     1
        Type:             EcucBooleanParamDef
        Default value:    false
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_MODE_LIMITATION_ENABLED</srcid><srcstatus/><internalId>1799</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1938</srcid><srcstatus/><internalId>1573</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>104</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00563</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMEcuGroupClassification
        Parent Container: ComMGeneral
        Description:      Defines whether a mode inhibition affects the ECU or not.
                          Examples: 
                          000: No mode inhibition can be activated 
                          001: Wake up inhibition can be enabled
        Multiplicity:     1
        Type:             EcucIntegerParamDef
        Range:            0 .. 255
        Default value:    3
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
                          dependency: Shall be stored non volatile (value must be kept during a reset) 
                          at least if Wake up inhibition is enabled/allowed. 
                          Can be changed during runtime with ComM_SetECUGroupClassification() 
                          thus the default values shall be set only once (first ECU initialization).
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_ECU_GROUP_CLASSIFICATION</srcid><srcstatus/><internalId>1800</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1891</srcid><srcstatus/><internalId>1571</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00470</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>105</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00565</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:     ComMChannel
        Parent Containers:  ComMConfigSet
        Description:        This container contains the configuration (parameters) of the bus channel(s). The
                            channel parameters shall be harmonized within the whole communication stack.
        Lower Multiplicity: 1
        Upper Multiplicity: 256
        Included Containers:
        Container Name         | Multiplicity |Scope / Dependency
        ComMNetworkManagement  |            1 |This container contains the configuration parameters of the    
                               |              |networkmanagement.
        ComMUserPerChannel     |       0..255 |This container contains a list of identifiers that are needed to 
                                              |refer to a user in the system which is linked to a channel.                               
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComMChannel</srcid><srcstatus/><internalId>809</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.ECUC_ComM_00565</srcid><srcstatus/><internalId>1</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00567</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMBusType
        Parent Container: ComMChannel
        Description:      Identifies the bus type of the channel.
        Multiplicity:     1
        Type:             EcucEnumerationParamDef
        Range:            COMM_BUS_TYPE_CAN
                          COMM_BUS_TYPE_CDD
                          COMM_BUS_TYPE_ETH
                          COMM_BUS_TYPE_FR
                          COMM_BUS_TYPE_INTERNAL
                          COMM_BUS_TYPE_LIN
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: ECU
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComMBusType</srcid><srcstatus/><internalId>810</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.ECUC_ComM_00567</srcid><srcstatus/><internalId>2</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00568</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMNmVariant
        Parent Container: ComMNetworkManagement
        Description:      Defines the functionality of the networkmanagement.
                          Shall be harmonized with NM configuration.
        Multiplicity:     1
        Type:             EcucEnumerationParamDef
        Range:            FULL             AUTOSAR NM is available (default).
                          LIGHT            No AUTOSAR NM is available, 
                                           but functionality to shut down a channel.
                          NONE             No NM available
                          PASSIVE          AUTOSAR NM running in passive mode available.
                          SLAVE_ACTIVE     No NM is available. This is used for e.g. LIN slaves.
                          SLAVE_PASSIVE    No NM is available. This used for e.g. 
                                           Ethernet communication channels with OA TC10 compliant hardware.
        Default value:    FULL                
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
                          dependency: ComMNmVariant shall be NONE if ComMBusType = COMM_BUS_TYPE_INTERNAL. 
                                      ComMNmVariant shall be LIGHT for managed channels. 
                                      ComMNmVariant shall be FULL for managing channels.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_727</srcid><srcstatus/><internalId>1502</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>108</internalId></specobject>

    <specobject>
      <id>ComM.ECUC_ComM_00569</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMNoWakeup
        Parent Container: ComMChannel
        Description:      Defines if an ECU is not allowed to wake-up the channel.
                          true: Enabled (not allowed to wake-up)) 
                          false: Disabled This is the default/init value of a 
                                 runtime variable that can be changed during runtime 
                                 using ComM_PreventWakeUp().
        Multiplicity:     1
        Type:             EcucBooleanParamDef
        Default value:    false                
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
                          dependency: Shall be stored none volatile (value must be kept during a reset).
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30007_2</srcid><srcstatus/><internalId>1894</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_UserReqWhenWkUpInhibit</srcid><srcstatus/><internalId>2058</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_UserReqWhenWkUpAndNoComInhibit</srcid><srcstatus/><internalId>2060</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_525</srcid><srcstatus/><internalId>1491</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00571</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMNoCom
        Parent Container: ComMChannel
        Description:      Not allowed to change state of ComM channel to  COMM_SILENT_COMMUNICATION or COMM_FULL_COMMUNICATION.
                          true:  Enabled - Not allowed to switch to Communication Modes above. 
                          false: Disabled - Allowed to switch Communication Modes above. Shall be possible to 
                                            change parameter during runtime with ComM API's. ECU/All channels: 
                                            ComM_LimitECUToNoComMode(). Separate channels: ComM_LimitChannelToNoComMode().
        Multiplicity:     1
        Type:             EcucBooleanParamDef
        Default value:    false                
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
                          dependency: ComMModeLimitationEnabled
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MaxUserReqWhenNoComInhibit</srcid><srcstatus/><internalId>2059</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_UserReqWhenWkUpAndNoComInhibit</srcid><srcstatus/><internalId>2060</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_479</srcid><srcstatus/><internalId>1488</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>110</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00606</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMNmLightTimeout
        Parent Container: ComMNetworkManagement
        Description:      Defines the timeout (in seconds) after COMM_FULL_COMMUNICATION sub-state COMM_FULL_COM_READY_SLEEP is left.
                          The range shall be greater than 0.0 and less or equal to 255.0
        Multiplicity:     0..1
        Type:             EcucFloatParamDef
        Range             0..255
        Default value:    10                
        Post-Build 
        Variant Value:    false
        Multiplicity      Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
                          dependency: Only used if ComMNmVariant is configured as ComMLight
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30019</srcid><srcstatus/><internalId>1898</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_TM_IN_FULL_COMMODE_DURATION</srcid><srcstatus/><internalId>2063</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_CANCEL_LIGHT_TIMEOUT_TIMER</srcid><srcstatus/><internalId>2064</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_646</srcid><srcstatus/><internalId>1498</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00607</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:     ComMNetworkManagement
        Parent Containers:  ComMChannel
        Description:        This container contains the configuration parameters of the networkmanagement.
        Lower Multiplicity: 1
        Upper Multiplicity: 256        
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_629</srcid><srcstatus/><internalId>1497</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00622</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMVersionInfoApi
        Parent Container: ComMGeneral
        Description:      Switches the possibility to read the published information with the service ComM_GetPublishedInformation().
                          true:  Enabled 
                          false: Disabled
        Multiplicity:     1
        Type:             EcucBooleanParamDef
        Default value:    false                
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GetVersionInfoTest_DetOff</srcid><srcstatus/><internalId>1886</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GetVersionInfoTest_DetOn_1</srcid><srcstatus/><internalId>1986</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GetVersionInfoTest_DetOn_2</srcid><srcstatus/><internalId>1988</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GetVersionInfoTest_DetOn_3</srcid><srcstatus/><internalId>2052</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_VERSION_INFO_API</srcid><srcstatus/><internalId>1794</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2281</srcid><srcstatus/><internalId>1591</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00635</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMChannelId
        Parent Container: ComMChannel
        Description:      Channel identification number of the corresponding channel.
        Multiplicity:     1
        Type:             EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range:            0..255
        Default value:    --                
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: ECU
                          dependency: Shall be harmonized with channel IDs of networkmanagement and the bus interfaces.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.ComMConf_ComMChannel_ChannelName</srcid><srcstatus/><internalId>1791</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_268</srcid><srcstatus/><internalId>1478</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>114</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00653</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:     ComMUser
        Parent Containers:  ComMConfigSet
        Description:        This container contains a list of identifiers that are needed to refer 
                            to a user in the system which is designated to request Communication modes.
        Lower Multiplicity: 0
        Upper Multiplicity: 65635                           
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComMUser</srcid><srcstatus/><internalId>811</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.ECUC_ComM_00653</srcid><srcstatus/><internalId>3</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00654</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMUserIdentifier
        Parent Container: ComMUser
        Description:      An identifier that is needed to refer to a user in the system which is designated to request Communication Modes.
                          ImplementationType: ComM_UserHandleType
        Multiplicity:     1
        Type:             EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range:            0..254
        Default value:    --                
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: ECU
                          dependency: EcuMUser: The concept of users is very similar to the
                                      concept of requestors in the ECU State Manager specification. These two
                                      parameters shall be harmonized during the configuration process.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComMUserIdentifier</srcid><srcstatus/><internalId>812</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.ECUC_ComM_00654</srcid><srcstatus/><internalId>4</internalId></linkedfrom></coveredby></needscov>        
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00657</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:     ComMUserPerChannel
        Parent Containers:  ComMChannel
        Description:        This container contains a list of identifiers that are needed to refer to a user
                            in the system which is linked to a channel. 
        Lower Multiplicity: 0
        Upper Multiplicity: 255                           
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComMUserPerChannel</srcid><srcstatus/><internalId>813</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.ECUC_ComM_00657</srcid><srcstatus/><internalId>5</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00658</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMUserChannel
        Parent Container: ComMUserPerChannel
        Description:      Reference to the ComMUser that corresponds to this channel user.
                          ImplementationType: COMM_UserHandleType
        Multiplicity:     1
        Type:             Reference to [ ComMUser ]
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_874</srcid><srcstatus/><internalId>1515</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>118</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00695</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMSynchronousWakeUp
        Parent Container: ComMGeneral
        Description:      Wake up of one channel shall lead to a wake up of all channels if true.
                          true: Enabled 
                          false: Disabled
        Multiplicity:     1
        Type:             EcucBooleanParamDef
        Default value:    true
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SYNC_WAKEUP</srcid><srcstatus/><internalId>2006</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_SYNCHRONOUS_WAKE_UP</srcid><srcstatus/><internalId>1798</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2221</srcid><srcstatus/><internalId>1587</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>119</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00783</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMGlobalNvMBlockDescriptor
        Parent Container: ComMGeneral
        Description:      Reference to NVRAM block containing the none volatile data. 
                          If this parameter is not configured it means that no NVRam is used at all.
        Multiplicity:     0..1
        Type:             Symbolic name reference to [ NvMBlockDescriptor ]
        Post-Build 
        Variant 
        Multiplicity:     false
        Post-Build 
        Variant Value:    false
        Multiplicity      Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2338</srcid><srcstatus/><internalId>1595</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_NVM_BLOCK_DESCRIPTOR</srcid><srcstatus/><internalId>1805</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00786</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMUserEcucPartitionRef
        Parent Container: ComMUser
        Description:      Denotes in which "EcucPartition" the requester is executed.
                          When the partition is stopped, the communication request 
                          shall be cancelled in the ComM to avoid a 
                          stay-awake situation of the bus due to a stopped partition.
        Multiplicity:     0..1
        Type:             Reference to [ EcucPartition ]
        Post-Build 
        Variant 
        Multiplicity:     false
        Post-Build 
        Variant Value:    false
        Multiplicity      Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: ECU
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1448</srcid><srcstatus/><internalId>1549</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00787</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMFullCommRequestNotificationEnabled
        Parent Container: ComMChannel
        Description:      Defines if the optional SenderReceiver Port of Interface 
                          ComM_CurrentChannelRequest will be provided for this channel.
                          True means enabled. False means disabled
        Multiplicity:     1
        Type:             EcucBooleanParamDef
        Default Value:    false
        Post-Build 
        Variant 
        Multiplicity:     false
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: ECU
                          dependency: Shall be stored none volatile 
                                      (value must be kept during a reset).
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Rte_fullComRequestors</srcid><srcstatus/><internalId>2317</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_CURRENTCHANNELREQUEST_ENABLED</srcid><srcstatus/><internalId>1802</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_375</srcid><srcstatus/><internalId>1482</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00789</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMNoWakeUpInhibitionNvmStorage
        Parent Container: ComMChannel
        Description:      If this parameter is set to "true", the NoWakeUp inhibition state of the 
                          channel shall be stored (in some implementation specific way) 
                          in the block pointed to by ComMGlobalNvmBlockDescriptor.
        Multiplicity:     1
        Type:             EcucBooleanParamDef
        Default value:    -- 
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: ECU
                          dependency: If the parameter is set to true, a valid Nvm block reference must be 
                                      given in the (existing, i.e. multiplicity 1) 
                                      ComMGlobalNvmBlockDescriptor pointing to a sufficiently big Nvm block.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_404</srcid><srcstatus/><internalId>1484</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30038</srcid><srcstatus/><internalId>1910</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00839</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMPncSupport
        Parent Container: ComMGeneral
        Description:      Enables or disables support of partial networking.
                          False: Partial Networking is disabled
                          True:  Partial Networking is enabled
        Multiplicity:     1
        Type:             EcucBooleanParamDef
        Default value:    false 
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_NoPn_RteUsage_Enabled</srcid><srcstatus/><internalId>1851</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncNoComToRdySlpTest</srcid><srcstatus/><internalId>2073</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2036</srcid><srcstatus/><internalId>1579</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_PNC_SUPPORT</srcid><srcstatus/><internalId>1814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00840</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMDirectUserMapping
        Parent Container: ComMGeneral
        Description:      If this parameter is set to true the configuration tool shall 
                          automatically create a ComMUser per ComMPnc and a ComMUser per ComMChannel.
                          The shortName of the generated ComMUsers shall follow the 
                          following naming convention: PNCUser_ComMPncId, 
                          e.g. PNCUser_13 ChannelUser_ComMChannelId, 
                          e.g. ChannelUser_25 Restriction: ComMUser, which are created 
                          due to this configuration parameter, shall not be used by SWCs (only available for BswM).
        Multiplicity:     0..1
        Type:             EcucBooleanParamDef
        Default value:    false 
        Post-Build 
        Variant 
        Multiplicity:     false
        Post-Build 
        Variant Value:    false
        Multiplicity      Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   - 
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1822</srcid><srcstatus/><internalId>1568</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00841</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name: ComMPncPrepareSleepTimer
        Name:             ComMPncPrepareSleepTimer
        Parent Container: ComMGeneral
        Description:      Time in seconds the PNC state machine shall wait in COMM_PNC_PREPARE_SLEEP.
        Multiplicity:     0..1
        Type:             EcucFloatParamDef
        Range:            0..63
        Default value:    -- 
        Post-Build 
        Variant 
        Multiplicity:     false
        Post-Build 
        Variant Value:    false
        Multiplicity      Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   - 
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
                          dependency: CanNm: (CanNmPnResetTime + ComMPncPrepareSleepTimer) &lt; CanNmTimeoutTime 
                                      FrNm: (FrNmPnResetTime + ComMPncPrepareSleepTimer) &lt; ( (FrNmReadySleepCnt +1) * FrNmRepetitionCycle * "Duration of one FlexRay Cycle" ) 
                                      UdpNm: (UdpNmPnResetTime + ComMPncPrepareSleepTimer) &lt; UdpNmTimeoutTime
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComMPncPrepareSleepTimer.Checks</srcid><srcstatus/><internalId>850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.ECUC_ComM_00841</srcid><srcstatus/><internalId>89</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00842</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMPncGatewayType
        Parent Container: ComMChannel
        Description:      Identifies the Partial Network Gateway behaviour of a ComMChannel
        Multiplicity:     0..1
        Type:             EcucEnumerationParamDef
        Range:            COMM_GATEWAY_TYPE_ACTIVE
                          COMM_GATEWAY_TYPE_PASSIVE
        Default value:    COMM_GATEWAY_TYPE_ACTIVE 
        Post-Build 
        Variant 
        Multiplicity:     false
        Post-Build 
        Variant Value:    false
        Multiplicity      Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   - 
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: ECU
                          dependency: Parameter shall not be used for managed channel 
                                      (shall neither be set to COMM_GATEWAY_TYPE_ACTIVE nor 
                                      COMM_GATEWAY_TYPE_PASSIVE).
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComMPncGatewayType.ManagedChannel</srcid><srcstatus/><internalId>851</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.ECUC_ComM_00842</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00843</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:     ComMPnc
        Parent Containers:  ComMConfigSet,
        Description:        This container contains the configuration of the partial network cluster(PNC).
        Lower Multiplicity: 0
        Upper Multiplicity: 504        
        Included Containers:
        Container Name   | Multiplicity | Scope / Dependency
        ComMPncComSignal |         0..* | Represents the PncComSignals which are used to communicate the EIRA and ERA status of this PNC.
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_959</srcid><srcstatus/><internalId>1518</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00874</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMPncId
        Parent Container: ComMPnc
        Description:      Partial network cluster identification number.
        Multiplicity:     1
        Type:             EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range:            8..63
        Default value:    --
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: ECU
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_986</srcid><srcstatus/><internalId>1521</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.ComMConf_ComMPnc_PncName</srcid><srcstatus/><internalId>1817</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PnInfo_504PNCs</srcid><srcstatus/><internalId>2092</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComMPncId</srcid><srcstatus/><internalId>814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00876</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMUserPerPnc
        Parent Container: ComMPnc
        Description:      Reference to the ComMUsers that correspond to this PNC.
                          ImplementationType: COMM_UserHandleType
        Multiplicity:     0..255
        Type:             Reference to [ ComMUser ]
        Post-Build 
        Variant 
        Multiplicity:     true
        Post-Build 
        Variant Value:    true
        Multiplicity      Pre-compile time  X VARIANT-PRE-COMPILE
        Configuration     Link time         -
        Class:            Post-build time   X VARIANT-POST-BUILD
        Value             Pre-compile time  X VARIANT-PRE-COMPILE
        Configuration     Link time         -
        Class:            Post-build time   X VARIANT-POST-BUILD
        Scope/Dependency: scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComMUserPerPnc</srcid><srcstatus/><internalId>815</internalId></linkedfrom><linkedfrom><srcid>doc/public/releasenotes/Limitations.xml_32</srcid><srcstatus/><internalId>1676</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.ECUC_ComM_00876</srcid><srcstatus/><internalId>6</internalId></linkedfrom></coveredby></needscov>                        
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00878</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMPncEnabled
        Parent Container: ComMConfigSet
        Description:      Defines whether in this configuration set the partial networking is enabled.
                          true: Enabled 
                          false: Disabled
        Multiplicity:     0..1
        Type:             EcucBooleanParamDef
        Default value:    false
        Post-Build 
        Variant 
        Multiplicity:     true
        Post-Build 
        Variant Value:    true
        Multiplicity      Pre-compile time  X VARIANT-PRE-COMPILE
        Configuration     Link time         -
        Class:            Post-build time   X VARIANT-POST-BUILD
        Value             Pre-compile time  X VARIANT-PRE-COMPILE
        Configuration     Link time         -
        Class:            Post-build time   X VARIANT-POST-BUILD
        Scope/Dependency: scope: local
                          dependency: ComMPncSupport
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_91</srcid><srcstatus/><internalId>1468</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00879</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:     ComMConfigSet
        Parent Container:   ComM
        Description:        This container contains the configuration parameters and sub containers of
                            the AUTOSAR ComM module.
        Lower Multiplicity: 1
        Upper Multiplicity: 1                                  
        Included Containers: 
        Container Name | Multiplicity | Scope / Dependency
        ComMChannel    | 1..256       | This container contains the configuration (parameters) of the bus channel(s). 
                       |              | The channel parameters shall be harmonized within the whole communication stack.
        ComMPnc        | 0..504       | This container contains the configuration of the partial network cluster (PNC).
        ComMUser       | 0..65635     | This container contains a list of identifiers that are needed to refer to a 
                       |              | user in the system which is designated to request Communication modes.     
                          
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_76</srcid><srcstatus/><internalId>1467</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00880</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMChannelPerPnc
        Parent Container: ComMPnc
        Description:      Reference to the ComMChannel that is required for this PNC.
                          ImplementationType: NetworkHandleType
        Multiplicity:     1..256
        Type:             Reference to [ ComMChannel ]
        Post-Build 
        Variant 
        Multiplicity:     true
        Post-Build 
        Variant Value:    true
        Multiplicity      Pre-compile time  X VARIANT-PRE-COMPILE
        Configuration     Link time         -
        Class:            Post-build time   X VARIANT-POST-BUILD
        Value             Pre-compile time  X VARIANT-PRE-COMPILE
        Configuration     Link time         -
        Class:            Post-build time   X VARIANT-POST-BUILD
        Scope/Dependency: scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComMChannelPerPnc</srcid><srcstatus/><internalId>816</internalId></linkedfrom><linkedfrom><srcid>doc/public/releasenotes/Limitations.xml_32</srcid><srcstatus/><internalId>1676</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.ECUC_ComM_00880</srcid><srcstatus/><internalId>7</internalId></linkedfrom></coveredby></needscov>        
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00881</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Container Name:     ComMPncComSignal
        Parent Container:   ComMPnc
        Description:        Represents the PncComSignals which are used to communicate the EIRA
                            and ERA status of this PNC.
        Lower Multiplicity: 0
        Upper Multiplicity: INF                          
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1151</srcid><srcstatus/><internalId>1534</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00882</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMPncComSignalRef
        Parent Container: ComMPncComSignal
        Description:      Reference to the ComSignal which is used to transport the partial network channel request information.
        Multiplicity:     1
        Type:             Symbolic name reference to [ ComSignal ]
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1294</srcid><srcstatus/><internalId>1543</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00883</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMPncComSignalKind
        Parent Container: ComMPncComSignal
        Description:      Indicates whether this PncComSignal represents EIRA or ERA PNC information.
                          This parameter ComMPncComSignalKind is optional and shall be ignored when
                          ComMPncComSignalDirection equals TX.
        Multiplicity:     0..1
        Type:             EcucEnumerationParamDef
        Range:            EIRA
                          ERA
        Post-Build 
        Variant 
        Multiplicity:     false
        Post-Build 
        Variant Value:    false
        Multiplicity      Pre-compile time  X VARIANT-PRE-COMPILE
        Configuration     Link time         -
        Class:            Post-build time   X VARIANT-POST-BUILD
        Value             Pre-compile time  X VARIANT-PRE-COMPILE
        Configuration     Link time         -
        Class:            Post-build time   X VARIANT-POST-BUILD
        Scope/Dependency: scope: local
                          dependency: This parameter ComMPncComSignalKind shall be 
                                      ignored when ComMPncComSignalDirection equals TX.
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComMPncComSignalKind</srcid><srcstatus/><internalId>817</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.ECUC_ComM_00883</srcid><srcstatus/><internalId>8</internalId></linkedfrom></coveredby></needscov>                
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00884</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMPncComSignalChannelRef
        Parent Container: ComMPncComSignal
        Description:      Reference to the ComMChannel which is used to determine whether this 
                          PncComSignal shall participate in the active or passive role 
                          (via the parameter ComMPncGatewayType of the ComMChannel).
        Multiplicity:     0..1
        Type:             Reference to [ ComMChannel ]
        Post-Build 
        Variant 
        Multiplicity:     false
        Post-Build 
        Variant Value:    false
        Multiplicity      Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
                          dependency: ComMPncGatewayEnabled
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1246</srcid><srcstatus/><internalId>1541</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00885</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMPncComSignalDirection
        Parent Container: ComMPncComSignal
        Description:      Indicates the communication direction of this PncComSignal.
        Multiplicity:     1
        Type:             EcucEnumerationParamDef
        Range:            RX
                          TX
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   - 
        Scope/Dependency: scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1176</srcid><srcstatus/><internalId>1537</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00886</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMPncNmRequest
        Parent Container: ComMNetworkManagement
        Description:      If this parameter equals true then every time a 
                          FULL Communication is requested due to a change in the PNC 
                          state machine to COMM_PNC_REQUESTED Nm shall be called 
                          using the API Nm_NetworkRequest.
        Multiplicity:     1
        Type:             EcucBooleanParamDef
        Default value:    false
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   - 
        Scope/Dependency: scope: local
                          dependency: It shall only be possible to set ComMPncNmRequest to TRUE, if ComMNmVariant is FULL.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_RepeatChReqInPncReqState</srcid><srcstatus/><internalId>2175</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_NETWORK_REQUESTED_NmVariantFULL</srcid><srcstatus/><internalId>1784</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_797</srcid><srcstatus/><internalId>1508</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00887</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMPncGatewayEnabled
        Parent Container: ComMGeneral
        Description:      Enables or disables support of Partial Network Gateway.
                          False: Partial Networking Gateway is disabled 
                          True: Partial Networking Gateway is enabled
        Multiplicity:     0..1
        Type:             EcucBooleanParamDef
        Default value:    false
        Post-Build 
        Variant 
        Multiplicity:     false
        Post-Build 
        Variant Value:    false
        Multiplicity      Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1967</srcid><srcstatus/><internalId>1575</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComMPncGatewayEnabledOptional</srcid><srcstatus/><internalId>853</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00051</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        ComM shall implement one channel state machine as shown in Figure [REF] with requirements as
        listed in Table [REF] for every communication channel independently.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00299</srcid><srcstatus/><internalId>25</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00069</srcid><srcstatus/><internalId>143</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00071</srcid><srcstatus/><internalId>144</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00073</srcid><srcstatus/><internalId>145</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00133</srcid><srcstatus/><internalId>156</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00288</srcid><srcstatus/><internalId>182</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00295</srcid><srcstatus/><internalId>183</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00296</srcid><srcstatus/><internalId>184</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00313</srcid><srcstatus/><internalId>188</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00610</srcid><srcstatus/><internalId>214</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00637</srcid><srcstatus/><internalId>219</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00665</srcid><srcstatus/><internalId>224</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00671</srcid><srcstatus/><internalId>226</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00694</srcid><srcstatus/><internalId>230</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00869</srcid><srcstatus/><internalId>274</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00870</srcid><srcstatus/><internalId>275</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00875</srcid><srcstatus/><internalId>279</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00877</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00882</srcid><srcstatus/><internalId>286</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00888</srcid><srcstatus/><internalId>291</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00893</srcid><srcstatus/><internalId>296</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00894</srcid><srcstatus/><internalId>297</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00898</srcid><srcstatus/><internalId>301</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00890.COMM_FULL_COM_READY_SLEEP</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00890.CANCEL_COMMTMINFULLCOMMODEDURATION</srcid><srcstatus/><internalId>592</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_RequestComMode_REQ_STATUS_CHANGED</srcid><srcstatus/><internalId>1690</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_DCM_ActiveDiagnostic_REQ_STATUS_CHANGED</srcid><srcstatus/><internalId>1691</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_DCM_InactiveDiagnostic_REQ_STATUS_CHANGED</srcid><srcstatus/><internalId>1692</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_LimitChannelToNoCom_REQ_STATUS_CHANGED</srcid><srcstatus/><internalId>1693</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_ComM_PreventWakeUp_REQ_STATUS_CHANGED</srcid><srcstatus/><internalId>1694</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_LimitECUToNoCom_REQ_STATUS_CHANGED</srcid><srcstatus/><internalId>1695</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_NETWORK_REQUESTED_ENTRY_REQ_STATUS_CHANGED</srcid><srcstatus/><internalId>1696</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_Nm_NetworkMode_NM_MODE_SWITCHED</srcid><srcstatus/><internalId>1697</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_Nm_PrepareBusSleepMode_NM_MODE_SWITCHED</srcid><srcstatus/><internalId>1698</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_Nm_BusSleepMode_NM_MODE_SWITCHED</srcid><srcstatus/><internalId>1699</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_Nm_NetworkStartIndication_PASSIVE_WAKEUP_IND</srcid><srcstatus/><internalId>1700</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_Nm_RestartIndication_PASSIVE_WAKEUP_IND</srcid><srcstatus/><internalId>1701</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_EcuM_WakeUpIndication_PASSIVE_WAKEUP_IND</srcid><srcstatus/><internalId>1702</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_EcuM_WakeUpIndication_syncWU_PASSIVE_WAKEUP_IND</srcid><srcstatus/><internalId>1703</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_LimitECUToNoComMode_LIMIT_TO_NO_COM</srcid><srcstatus/><internalId>1706</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_LimitChannelToNoComMode_LIMIT_TO_NO_COM</srcid><srcstatus/><internalId>1707</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_CommunicationAllowed_COMALLOWED_CHANGED</srcid><srcstatus/><internalId>1708</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.NO_COM_REQUEST_PENDING_COMALLOWED_CHANGED</srcid><srcstatus/><internalId>1709</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComMTMinFullComModeDuration_TIMEOUT</srcid><srcstatus/><internalId>1711</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComMNmLightTimeout_TIMEOUT</srcid><srcstatus/><internalId>1712</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_TIMEOUT</srcid><srcstatus/><internalId>1713</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swdd.needscoverage.count</ruleid><ruleid>WRN.swurs.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>141</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00066</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall never inhibit the "passive wake-up" capability.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30045</srcid><srcstatus/><internalId>1917</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2763</srcid><srcstatus/><internalId>1091</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>

    <specobject>
      <id>ComM.SWS_ComM_00069</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, R21-11</source>
      <version>1</version>
      <description>
        On entering state COMM_FULL_COMMUNICATION the ComM channel state machine shall switch
        on the transmission and reception capability. This shall be performed by the
        ComM channel state machine requesting the corresponding Communication Mode from the Bus State Manager module:
         - If Communication Mode COMM_FULL_COMMUNICATION was requested , then BusSM_RequestComMode(network:=channel state machine’s network,
           mode:= COMM_FULL_COMMUNICATION) shall be called
         - If Communication Mode COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST was requested and ComMWakeupSleepRequestEnabled of
           the ComM channel is set to TRUE, then BusSM_RequestComMode(network:=channel state machine’s network,
           mode:= COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST) shall be called.
         - If Communication Mode COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST was requested and ComMWakeupSleepRequestEnabled of
           the ComM channel is set to FALSE or not available, then BusSM_RequestComMode(network:=channel state machine’s network,
           mode:= COMM_FULL_COMMUNICATION) shall be called
      </description>
      <comment>
        The COMM_FULL_COMMUNICATION or COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST mode permits sending and receiving of
        bus communication PDUs for the corresponding channels.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION.WithRequest.COMM_FULL_COMMUNICATION</srcid><srcstatus/><internalId>588</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST</srcid><srcstatus/><internalId>589</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST</srcid><srcstatus/><internalId>590</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
        <provcov>
            <linksto>ComM.SWS_ComM_00845</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
        <provcov>
            <linksto>ComM.SWS_ComM_00051</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>

    <specobject>
      <id>ComM.SWS_ComM_00071</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        On entering state COMM_SILENT_COMMUNICATION the ComM channel state machine shall switch off the
        transmission capability (and keep reception capability on). This shall be performed by the ComM
        channel state machine requesting the corresponding Communication Mode from the Bus State
        Manager module (XXSM_RequestComMode(network:=&lt;channel state machine's network&gt;, mode:=
        COMM_SILENT_COMMUNICATION) SWS_ComM_00829)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30006</srcid><srcstatus/><internalId>1892</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30021</srcid><srcstatus/><internalId>1900</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1636</srcid><srcstatus/><internalId>1352</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeSILENTCOM</srcid><srcstatus/><internalId>1685</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00073</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        On entering state COMM_NO_COMMUNICATION the ComM channel state machine shall switch off the
        transmission and reception capability. This shall be performed by the ComM channel state
        machine requesting the corresponding Communication Mode from the Bus State Manager module (
        XXSM_RequestComMode(network:=&lt;channel state machine's network&gt;, mode:= COMM_NO_COMMUNICATION,
        see SWS_ComM_00829)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30004</srcid><srcstatus/><internalId>1890</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ConTest_WakeupOnDataLine_SchM_01</srcid><srcstatus/><internalId>2358</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_IgnoreBusSMNotOK</srcid><srcstatus/><internalId>2364</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1433</srcid><srcstatus/><internalId>1326</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeNOCOM</srcid><srcstatus/><internalId>1681</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00846</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00079</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_GetRequestedComMode
        Syntax             | Std_ReturnType ComM_GetRequestedComMode (ComM_UserHandleType User, ComM_ModeType* ComMode)
        Service ID [hex]   | 0x07
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant
        Parameters (in)    | User | Handle of the user who requests a mode
        Parameters (inout) | None
        Parameters (out)   | ComMode        | Name of the requested mode
        Return value       | Std_ReturnType | E_OK: Successfully returned requested Communication Mode
                           |                | E_NOT_OK: Return of requested Communication Mode failed
        Description        | Function to query the currently requested Communication Mode of the corresponding user.
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.COMM_E_UNINIT</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00079</srcid><srcstatus/><internalId>10</internalId></linkedfrom></coveredby></needscov>        
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00083</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_GetCurrentComMode
        Syntax             | Std_ReturnType ComM_GetCurrentComMode (ComM_UserHandleType User, ComM_ModeType* ComMode)
        Service ID [hex]   | 0x08
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant
        Parameters (in)    | User | Handle of the user who requests a mode
        Parameters (inout) | None
        Parameters (out)   | ComMode        | See ComM_ModeType
        Return value       | Std_ReturnType | E_OK: Successfully returned Communication Mode from Bus State Manager
                           |                | E_NOT_OK: Return of Communication Mode from Bus State Manager failed
        Description        | Function to query the current Communication Mode. ComM shall use the
                           | corresponding interfaces of the Bus State Managers to get the current Communication Mode of the
                           | network. (Call to Bus State Manager API: XXXSM _GetCurrentComMode(
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.COMM_E_UNINIT</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00083</srcid><srcstatus/><internalId>12</internalId></linkedfrom></coveredby></needscov>                
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00084</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall propagate a call of ComM_GetCurrentComMode() (see SWS_ComM_00083) to the
        Bus State Manager module(s) for the channel(s) the user are configured to (see also
        SWS_ComM_00176 and SWS_ComM_00798)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_GetCurrentComModeMulticore</srcid><srcstatus/><internalId>799</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Query_BusSMModeFr</srcid><srcstatus/><internalId>1946</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Query_BusSMModeLIN</srcid><srcstatus/><internalId>2066</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1555</srcid><srcstatus/><internalId>1028</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00085</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_GetMaxComMode
        Syntax             | Std_ReturnType ComM_GetMaxComMode (ComM_UserHandleType User, ComM_ModeType* ComMode)
        Service ID [hex]   | 0x06
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant
        Parameters (in)    | User | Handle of the user who requests a mode
        Parameters (inout) | None
        Parameters (out)   | ComMode | See ComM_ModeType
        Return value       | Std_ReturnType | E_OK: Successfully returned maximum allowed Communication Mode
                           |                | E_NOT_OK: Return of maximum allowed Communication Mode failed
        Description        | Function to query the maximum allowed Communication Mode of the corresponding
                           | user.
        Available via | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.COMM_E_UNINIT</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00085</srcid><srcstatus/><internalId>13</internalId></linkedfrom></coveredby></needscov>                
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00091</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall use the corresponding function provided by RTE to indicate modes to the
        users. There shall be one indication per user. Fan-out in case of a mode indication related to
        more than one user shall be done by the Communication Manager Module.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30012</srcid><srcstatus/><internalId>2309</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30013</srcid><srcstatus/><internalId>2310</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30014</srcid><srcstatus/><internalId>2311</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30015</srcid><srcstatus/><internalId>2312</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30053</srcid><srcstatus/><internalId>2313</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_294</srcid><srcstatus/><internalId>1454</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00092</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        There shall be one Communication Mode target state (evaluated according to SWS_ComM_00686) per
        communication channel. This target mode can differ temporarily from the actual mode controlled
        by the corresponding Bus State Manager module.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_191</srcid><srcstatus/><internalId>1450</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_266</srcid><srcstatus/><internalId>1452</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30028</srcid><srcstatus/><internalId>1903</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00103</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall use the corresponding standardized services of the NVRAM Manager module (
        see SWS_ComM_00828) for storing and reading non-volatile configuration data ComMNoWakeup (see
        ECUC_ComM_00569), ComMEcuGroupClassification (see ECUC_ComM_00563), inhibition status (see
        SWS_ComM_00157), the Inhibit counter (see SWS_ComM_00140), the PNC-to-channel Mapping (see [
        SWS_ComM_01040]) and the PNC membership (see [SWS_ComM_01049]
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.DynamicPNCMapping</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00103.NvM_SetRamBlockStatus</srcid><srcstatus/><internalId>508</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00108</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_ResetInhibitCounter
        Syntax             | Std_ReturnType ComM_ResetInhibitCounter (void)
        Service ID [hex]   | 0x0e
        Sync/Async         | Synchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | None
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | Std_ReturnType | E_OK: Successfully reset of Inhibit COMM_FULL_COMMUNICATION Counter
                           |                | E_NOT_OK: Reset of Inhibit COMM_FULL_COMMUNICATION Counter failed
        Description        | This function resets the Inhibited COMM_FULL_COMMUNICATION request Counter.
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.COMM_E_UNINIT</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00108</srcid><srcstatus/><internalId>15</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>

    <specobject>
      <id>ComM.SWS_ComM_00110</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       |ComM_RequestComMode
        Syntax:            |Std_ReturnType ComM_RequestComMode (
                           |   ComM_UserHandleType User,
                           |   ComM_ModeType ComMode
                           |   )
        Service ID [hex]   |0x05
        Sync/Async         |Synchronous
        Reentrancy         |Reentrant
        Parameters (in)    |User    | Handle of the user who requests a mode
                           |ComMode |COMM_FULL_COMMUNICATION COMM_NO_COMMUNICATION
        Parameters (inout) |None
        Parameters (out)   |None
        Return value       |Std_Return-Type | E_OK: Successfully changed to the new mode
                           |                | E_NOT_OK: Changing to the new mode failed
                           |                | COMM_E_MODE_LIMITATION: Mode can not be granted because of mode inhibition.
        Description        |Requesting of a Communication Mode by a user.
                           |Note:
                           |The following modes are no valid user requests, since they are used as internal modes:
                           |- COMM_SILENT_COMMUNICATION (this mode is used for synchronization at shutdown)
                           |- COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST (this mode is used internally within the
                           |  ComM channel statemachine to trigger the lower layers to request a wakeup on the network
                           |  if the used hardware support such a feature. (e.g. Ethernet hardware which is compatible with OA TC10).
                           |The following modes are valid user requests:
                           |- COMM_NO_COMMUNICATION
                           |- COMM_FULL_COMMUNICATION. The communication request could also be released due to a ComM communication inhibition
        Available via      |ComM.h

      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.COMM_E_UNINIT</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.SWS_ComM_00110</srcid><srcstatus/><internalId>756</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>

    <specobject>
      <id>ComM.SWS_ComM_00124</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_LimitECUToNoComMode
        Syntax             | Std_ReturnType ComM_LimitECUToNoComMode (boolean Status)
        Service ID [hex]   | 0x0c
        Sync/Async         | Synchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | Status | FALSE: Limit ECU to COMM_NO_COMMUNICATION disabled 
                           |        | TRUE: Limit ECU to COMM_NO_COMMUNICATION enabled
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | Std_ReturnType | E_OK: Successfully changed inhibition status for the ECU
                           |                | E_NOT_OK: Change of inhibition status for the ECU failed, e.g. ComMEcuGroupClassification
                           |                | disables the functionality (see ECUC_ComM_00563)
        Description        | Changes the inhibition status for the ECU (=all channels) for changing from
                           | COMM_NO_COMMUNICATION to a higher Communication Mode. (See also ComM_LimitChannelToNoComMode,
                           | same functionality but for a specific channels)
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.COMM_E_UNINIT</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00124</srcid><srcstatus/><internalId>17</internalId></linkedfrom></coveredby></needscov>        
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00133</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        On entering sub-state COMM_FULL_COM_READY_SLEEP and configuration parameter ComMNmVariant=FULL
        see ECUC_ComM_00568), the ComM module shall request Nm_NetworkRelease() from the Network
        Management for the corresponding NM channels.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30021</srcid><srcstatus/><internalId>1900</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30029</srcid><srcstatus/><internalId>1904</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30040</srcid><srcstatus/><internalId>1912</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_NetworkReqAndRel_FullVariant</srcid><srcstatus/><internalId>1925</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30107</srcid><srcstatus/><internalId>1937</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ReleasingChannelsOfPNC</srcid><srcstatus/><internalId>2177</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_UserReq_ReleasingChannel</srcid><srcstatus/><internalId>2178</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ChReqAfterPNCInReadySleepByEIRA</srcid><srcstatus/><internalId>2179</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SingleChMultiPNCIntExtReq</srcid><srcstatus/><internalId>2329</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_NoNmRequestOnUserRelease</srcid><srcstatus/><internalId>2370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1226</srcid><srcstatus/><internalId>1298</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00138</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall provide one Inhibit counter for all rejected COMM_FULL_COMMUNICATION mode
        requests. It shall count user requests, which cannot be fulfilled because the system has
        inhibited communication modes.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30038</srcid><srcstatus/><internalId>1910</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MaxUserReqWhenNoComInhibit</srcid><srcstatus/><internalId>2059</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2033</srcid><srcstatus/><internalId>1054</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00140</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Inhibit counter (SWS_ComM_00138) for all rejected COMM_FULL_COMMUNICATION mode requests
        shall be stored in non-volatile memory.
      </description>
      <comment>
        Review that the inhibition counter is stored in a data structure
        managed by the NvM to guarantee non-lolatile storage
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00140.NvM_SetRamBlockStatus</srcid><srcstatus/><internalId>483</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00141</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The range of the Inhibit counter (SWS_ComM_00138) for all rejected COMM_FULL_COMMUNICATION mode
        requests shall be 0 to 65535.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MaxUserReqWhenNoComInhibit</srcid><srcstatus/><internalId>2059</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2033</srcid><srcstatus/><internalId>1054</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00142</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Inhibit counter (SWS_ComM_00138) for all rejected COMM_FULL_COMMUNICATION mode requests
        shall stop to increment if the maximum counter value is reached.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MaxUserReqWhenNoComInhibit</srcid><srcstatus/><internalId>2059</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2033</srcid><srcstatus/><internalId>1054</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00143</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        It shall be possible to read out and reset the Inhibit counter (SWS_ComM_00138) for all
        rejected COMM_FULL_COMMUNICATION mode requests value by a ComM module API call.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30039</srcid><srcstatus/><internalId>1911</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30101</srcid><srcstatus/><internalId>1932</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2034</srcid><srcstatus/><internalId>1055</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00146</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_Init
        Syntax             | void ComM_Init (const ComM_ConfigType* ConfigPtr)
        Service ID [hex]   | 0x01
        Sync/Async         | Synchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | ConfigPtr | Pointer to post-build configuration data
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | Initializes the AUTOSAR Communication Manager and restarts the internal state
                           | machines.
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30001</srcid><srcstatus/><internalId>1887</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_648</srcid><srcstatus/><internalId>999</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_Init.HeaderFile</srcid><srcstatus/><internalId>821</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00147</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_DeInit
        Syntax             | void ComM_DeInit (void)
        Service ID [hex]   | 0x02
        Sync/Async         | Synchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | None
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | This API de-initializes the AUTOSAR Communication Manager.
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_DeInit.HeaderFile</srcid><srcstatus/><internalId>822</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00147</srcid><srcstatus/><internalId>85</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>

    <specobject>
      <id>ComM.SWS_ComM_00151</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, R21-11</source>
      <version>1</version>
      <description>
        For a user it shall only be possible to request the Communication Modes COMM_NO_COMMUNICATION and COMM_FULL_COMMUNICATION
        (see ComM_RequestComMode(), SWS_ComM_00110).(SRS_ModeMgm_09246)
      </description>
      <comment>
        - The Communication Mode COMM_SILENT_COMMUNICATION and sub-modes/sub-states are only
          necessary for synchronization with AUTOSAR NM.
        - The Communication Mode COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST is only necessary to
          request the lower layer to trigger a wake-up on the network (e.g. Ethernet hardware compliant to OA TC10 [see 33]).
          This mode could not be requested by a user.
      </comment>
      <releases>
        <release>AUTOSAR R21-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1304</srcid><srcstatus/><internalId>1020</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_01</srcid><srcstatus/><internalId>2334</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_03</srcid><srcstatus/><internalId>2336</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_04</srcid><srcstatus/><internalId>2337</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_05</srcid><srcstatus/><internalId>2338</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_06</srcid><srcstatus/><internalId>2339</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00151.DetReport.WrongComModeReq</srcid><srcstatus/><internalId>473</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>

    <specobject>
      <id>ComM.SWS_ComM_00156</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_PreventWakeUp
        Syntax             | Std_ReturnType ComM_PreventWakeUp (NetworkHandleType Channel, boolean Status)
        Service ID [hex]   | 0x09
        Sync/Async         | Synchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | Channel | See NetworkHandleType
                           | Status  | FALSE: Wake up inhibition is switched off 
                           |         | TRUE: Wake up inhibition is switched on
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | Std_ReturnType | E_OK: Successfully changed wake up status for the channel
                           |                | E_NOT_OK: Change of wake up status for the channel failed, e.g.
                           |                | ComMEcuGroupClassification disables the functionality (see ECUC_ComM_00563)
        Description        | Changes the inhibition status COMM_NO_WAKEUP for the corresponding channel.
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.COMM_E_UNINIT</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00156</srcid><srcstatus/><internalId>18</internalId></linkedfrom></coveredby></needscov>                
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00157</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        ComMNoWakeup status must be stored non volatile.
      </description>
      <comment>
        Test that the inhibition status is stored in a data structure
        managed by the NvM to guarantee non-volatile storage
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30038</srcid><srcstatus/><internalId>1910</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_Int.h_51</srcid><srcstatus/><internalId>979</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00159</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module configuration shall support to configure several communication channels to a
        user.
      </description>
      <comment>
        This can be achieved using the configuration parameter
        "ComMUserPerChannel" (See ComM657_Conf).
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_834</srcid><srcstatus/><internalId>1511</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00160</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        ComMUsers shall be assignable to ComMChannels in combination with all ComMNmVariants except
        ComMNmVariant=PASSIVE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_784</srcid><srcstatus/><internalId>1505</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ECUModeLimitation_UserReq</srcid><srcstatus/><internalId>1923</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00163</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_LimitChannelToNoComMode
        Syntax             | Std_ReturnType ComM_LimitChannelToNoComMode (NetworkHandleType Channel, boolean Status)
        Service ID [hex]   | 0x0b
        Sync/Async         | Synchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | Channel | See NetworkHandleType
                           | Status  | FALSE: Limit channel to COMM_NO_COMMUNICATION disabled 
                           |         | TRUE: Limit channel to COMM_NO_COMMUNICATION enabled
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | Std_ReturnType | E_OK: Successfully changed inhibition status for the channel
                           |                | E_NOT_OK: Change of inhibition status for the channel failed, e.g.
                           |                | ComMEcuGroupClassification disables the functionality (see ECUC_ComM_00563)
        Description        | Changes the inhibition status for the channel for changing from
                           | COMM_NO_COMMUNICATION to a higher Communication Mode. (See also ComM_LimitECUToNoComMode, same
                           | functionality but for all channels)
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.COMM_E_UNINIT</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00163</srcid><srcstatus/><internalId>19</internalId></linkedfrom></coveredby></needscov>        
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00176</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If more than one channel is linked to one user request and the modes of the channels are
        different, the function ComM_GetCurrentComMode shall return the lowest mode (see SWS_ComM_00867
        and SWS_ComM_00868)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Query_BusSMModeFr</srcid><srcstatus/><internalId>1946</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Query_BusSMModeLIN</srcid><srcstatus/><internalId>2066</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30015</srcid><srcstatus/><internalId>2312</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1555</srcid><srcstatus/><internalId>1028</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00182</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The communication inhibition shall get temporarily inactive during an active diagnostic session.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30049</srcid><srcstatus/><internalId>1922</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30074</srcid><srcstatus/><internalId>1930</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ChanInhibition_ActiveDiag</srcid><srcstatus/><internalId>2065</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1036</srcid><srcstatus/><internalId>1009</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00191</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The internal functionality of the ComM channel state machine(s) shall be invisible for the
        users. The user neither needs nor shall get any information about the internal mechanisms and
        rules (e.g. "highest wins" strategy) of the ComM channel state machine.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00215</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        All active user requests for communication channel X shall be ignored if the ComM Inhibition
        ComMNoCom=TRUE (see ECUC_ComM_00571) for the corresponding channel to guarantee entering the
        COMM_NO_COMMUNICATION state for channel X.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30039</srcid><srcstatus/><internalId>1911</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ECUModeLimitation_UserReq</srcid><srcstatus/><internalId>1923</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30105</srcid><srcstatus/><internalId>1935</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ModeInhibitionWithDcm</srcid><srcstatus/><internalId>1987</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncChnlInhibition</srcid><srcstatus/><internalId>2074</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1863</srcid><srcstatus/><internalId>1046</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00218</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        A communication request (COMM_FULL_COMMUNICATION) by a user shall be inhibited if the ComM
        Inhibition status is equal to ComMNoWakeup=TRUE (ECUC_ComM_00569) for the corresponding channel
        and the current state of the channel is COMM_NO_COMMUNICATION or COMM_SILENT_COMMUNICATION
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00218.NOCOM</srcid><srcstatus/><internalId>523</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00218.SILENTCOM</srcid><srcstatus/><internalId>524</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00219</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The inhibition shall not get active if the current communication state is
        COMM_FULL_COMMUNICATION.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NeverInhibitWkUpIfFullCom_1</srcid><srcstatus/><internalId>1918</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_NeverInhibitWkUpIfFullCom_2</srcid><srcstatus/><internalId>1919</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1443</srcid><srcstatus/><internalId>1026</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00224</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_ReadInhibitCounter
        Syntax             | Std_ReturnType ComM_ReadInhibitCounter (uint16* CounterValue)
        Service ID [hex]   | 0x0d
        Sync/Async         | Synchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | None
        Parameters (inout) | None
        Parameters (out)   | CounterValue | Amount of rejected COMM_FULL_COMMUNICATION user requests.
        Return value       | Std_ReturnType | E_OK: Successfully returned Inhibition Counter
                           |                | E_NOT_OK: Return of Inhibition Counter failed
        Description        | This function returns the amount of rejected COMM_FULL_COMMUNICATION user
                           | requests.
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.COMM_E_UNINIT</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00224</srcid><srcstatus/><internalId>20</internalId></linkedfrom></coveredby></needscov>        
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00234</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Type of error                                  | Related error code      | Error value
        API service used without module initialization | COMM_E_UNINIT           | 0x1
        API service used with wrong parameters         | COMM_E_WRONG_PARAMETERS | 0x2
        API Service used with a null pointer           | COMM_E_PARAM_POINTER    | 0x3
        Initialization failed                          | COMM_E_INIT_FAILED      | 0x4
      </description>
      <comment>
        Note: according to document change history and AUTOSAR bugzilla #42516,
        production error reporting has been removed from ComM. Therefore no DEM
        interaction is needed and the COMM_E_NET_START_IND_CHANNEL_ entry should
        be ignored.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.DevelopmentErrors</srcid><srcstatus/><internalId>819</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00234.COMM_E_NOT_INITED</srcid><srcstatus/><internalId>501</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00234.WRONG_PARAMETERS</srcid><srcstatus/><internalId>502</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00242</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_GetStatus
        Syntax             | Std_ReturnType ComM_GetStatus (ComM_InitStatusType* Status)
        Service ID [hex]   | 0x03
        Sync/Async         | Synchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | None
        Parameters (inout) | None
        Parameters (out)   | Status | COMM_UNINIT: The ComM is not initialized or not usable. Default
                           |        | value after startup or after ComM_DeInit() is called. COMM_INIT: The ComM is initialized and
                           |        | usable.
        Return value       | Std_ReturnType | E_OK: Successfully return of initialization status
                           |                | E_NOT_OK: Return of initialization status failed
        Description        | Returns the initialization status of the AUTOSAR Communication Manager. After a
                           | call to ComM_DeInit() ComM should have status COMM_UNINIT, and a new call to ComM_Init needed
                           | to make sure ComM restart internal state machines to defailt values.
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.COMM_E_UNINIT</srcid><srcstatus/><internalId>818</internalId></linkedfrom><linkedfrom><srcid>dev.ComM.ComM_GetStatus.HeaderFile</srcid><srcstatus/><internalId>823</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00242</srcid><srcstatus/><internalId>22</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00261</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall use the corresponding functions to synchronize the bus start-up and
        shutdown of the Network Management (see SWS_ComM_00828). For details refer to the AUTOSAR NM
        Interface Specification [9]
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30033</srcid><srcstatus/><internalId>1906</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30081</srcid><srcstatus/><internalId>1938</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30110</srcid><srcstatus/><internalId>2005</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30032</srcid><srcstatus/><internalId>2057</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_Nm.h_2</srcid><srcstatus/><internalId>981</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00266</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall use the corresponding functions provided by DCM (see SWS_ComM_00828) to
        control the communication capabilities of the DCM module.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30025</srcid><srcstatus/><internalId>2054</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_Dcm.h_2</srcid><srcstatus/><internalId>976</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>

    <specobject>
      <id>ComM.SWS_ComM_00275</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_EcuM_WakeUpIndication
        Syntax             | void ComM_EcuM_WakeUpIndication (NetworkHandleType Channel)
        Service ID [hex]   | 0x2a
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant
        Parameters (in)    | Channel | Channel
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | Notification of a wake up on the corresponding channel.
        Available via      | ComM_EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_EcuM_WakeUpIndication.HeaderFile</srcid><srcstatus/><internalId>820</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00275</srcid><srcstatus/><internalId>86</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00288</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        On entering state COMM_NO_COMMUNICATION and configuration parameter ComMNmVariant=FULL (see
        ECUC_ComM_00568) the ComM module shall request release of the network from the Network
        Management module, Nm_NetworkRelease
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_EcuMWkupInd_forPassiveCh</srcid><srcstatus/><internalId>1907</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_NetworkReqAndRel_FullVariant</srcid><srcstatus/><internalId>1925</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1385</srcid><srcstatus/><internalId>1319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00295</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In state COMM_SILENT_COMMUNICATION and the Network Manager module indicates
        ComM_Nm_BusSleepMode()(SWS_ComM_00392), the ComM channel state machine shall switch to state
        COMM_NO_COMMUNICATION.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30014</srcid><srcstatus/><internalId>2311</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1727</srcid><srcstatus/><internalId>1359</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_SILENT_COMMUNICATION_1</srcid><srcstatus/><internalId>1755</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00296</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In state COMM_SILENT_COMMUNICATION and the Network Manager module indicates ComM_Nm_NetworkMode(
        SWS_ComM_00390), the ComM channel state machine shall switch to state COMM_FULL_COMMUNICATION
        and sub-state COMM_FULL_COM_READY_SLEEP.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30021</srcid><srcstatus/><internalId>1900</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1694</srcid><srcstatus/><internalId>1357</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_Nm_NetworkMode_NM_MODE_SWITCHED</srcid><srcstatus/><internalId>1697</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_SILENT_COMMUNICATION_0</srcid><srcstatus/><internalId>1754</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00301</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall offer interfaces to request and release the corresponding mode
        inhibitions.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30038</srcid><srcstatus/><internalId>1910</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30039</srcid><srcstatus/><internalId>1911</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30101</srcid><srcstatus/><internalId>1932</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncChnlInhibition</srcid><srcstatus/><internalId>2074</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2078</srcid><srcstatus/><internalId>1056</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00302</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Bus wake up Inhibition shall be performed by ignoring user requests.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30038</srcid><srcstatus/><internalId>1910</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2033</srcid><srcstatus/><internalId>1054</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00303</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall perform the limit to COMM_NO_COMMUNICATION mode by switching to
        COMM_FULL_COM_READY_SLEEP state to initiate a shutdown despite user requests for
        COMM_FULL_COMMUNICATION mode and ignoring new COMM_FULL_COMMUNICATION mode requests.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30042</srcid><srcstatus/><internalId>1914</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30043</srcid><srcstatus/><internalId>1915</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30044</srcid><srcstatus/><internalId>1916</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30047</srcid><srcstatus/><internalId>1920</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30048</srcid><srcstatus/><internalId>1921</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30107</srcid><srcstatus/><internalId>1937</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_REJECT_REQ_IN_LIMIT_NO_COMMODE</srcid><srcstatus/><internalId>1940</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1863</srcid><srcstatus/><internalId>1046</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00313</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        On entering state COMM_NO_COMMUNICATION by default after initialization, ComM module shall not
        indicate the mode change to users via RTE or BswM.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30012</srcid><srcstatus/><internalId>2309</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30015</srcid><srcstatus/><internalId>2312</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_719</srcid><srcstatus/><internalId>1003</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1385</srcid><srcstatus/><internalId>1319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00322</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module configuration shall support configuration of bus type for each channel.
      </description>
      <comment>
        This requirement concerns about the configuration parameter "ComMBusType"
        (see ComM567_Conf) which is located inside the "ComMChannel" container.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_167</srcid><srcstatus/><internalId>1473</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_201</srcid><srcstatus/><internalId>1475</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00327</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module configuration shall support the possibility to assign communication-channels to
        users by static configuration.
      </description>
      <comment>
        This can be achieved using the static configuration parameter
        "ComMUserPerChannel" (See ComM657_Conf).
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_834</srcid><srcstatus/><internalId>1511</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00370</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_GetVersionInfo
        Syntax             | void ComM_GetVersionInfo (Std_VersionInfoType* Versioninfo)
        Service ID [hex]   | 0x10
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant
        Parameters (in)    | None
        Parameters (inout) | None
        Parameters (out)   | Versioninfo | See Std_VersionInfoType
        Return value       | None
        Description        | This function returns the published information (for details refer to table 10.3)
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_GetVersionInfo.HeaderFile</srcid><srcstatus/><internalId>824</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00370</srcid><srcstatus/><internalId>87</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00374</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If more than one channel is linked to one user request and the maximum allowed modes of the
        channels are different, then the function ComM_GetMaxComMode shall return the lowest mode (see
        SWS_ComM_00867 and SWS_ComM_00868)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30047</srcid><srcstatus/><internalId>1920</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30104</srcid><srcstatus/><internalId>1934</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1372</srcid><srcstatus/><internalId>1023</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00383</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_Nm_NetworkStartIndication
        Syntax             | void ComM_Nm_NetworkStartIndication (NetworkHandleType Channel)
        Service ID [hex]   | 0x15
        Sync/Async         | Asynchronous
        Reentrancy         | Reentrant
        Parameters (in)    | Channel | See NetworkHandleType
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | Indication that a NM-message has been received in the Bus Sleep Mode, what
                           | indicates that some nodes in the network have already entered the Network Mode.
        Available via      | ComM_Nm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30057</srcid><srcstatus/><internalId>1927</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30059</srcid><srcstatus/><internalId>2061</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2222</srcid><srcstatus/><internalId>1059</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_INDICATION_NO_COM_REQUEST_PENDING_0</srcid><srcstatus/><internalId>1758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00390</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_Nm_NetworkMode
        Syntax             | void ComM_Nm_NetworkMode (NetworkHandleType Channel)
        Service ID [hex]   | 0x18
        Sync/Async         | Asynchronous
        Reentrancy         | Reentrant
        Parameters (in)    | Channel | Channel
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | Notification that the network management has entered Network Mode.
        Available via      | ComM_Nm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComMNmCbkInd_forPassiveCh</srcid><srcstatus/><internalId>1899</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30060_2</srcid><srcstatus/><internalId>1929</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30110</srcid><srcstatus/><internalId>2005</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2277</srcid><srcstatus/><internalId>1062</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00391</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_Nm_PrepareBusSleepMode
        Syntax             | void ComM_Nm_PrepareBusSleepMode (NetworkHandleType Channel)
        Service ID [hex]   | 0x19
        Sync/Async         | Asynchronous
        Reentrancy         | Reentrant
        Parameters (in)    | Channel | Channel
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | Notification that the network management has entered Prepare Bus-Sleep Mode.
                           | Reentrancy: Reentrant (but not for the same NM-Channel)
        Available via      | ComM_Nm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30060_2</srcid><srcstatus/><internalId>1929</internalId></linkedfrom><linkedfrom><srcid>TS_FullToSilentTransition</srcid><srcstatus/><internalId>1949</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30014</srcid><srcstatus/><internalId>2311</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2321</srcid><srcstatus/><internalId>1065</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00392</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_Nm_BusSleepMode
        Syntax             | void ComM_Nm_BusSleepMode (NetworkHandleType Channel)
        Service ID [hex]   | 0x1a
        Sync/Async         | Asynchronous
        Reentrancy         | Reentrant
        Parameters (in)    | Channel | Channel
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | Notification that the network management has entered Bus-Sleep Mode. This
                           | callback function should perform a transition of the hardware and transceiver to bus-sleep mode.
        Available via      | ComM_Nm.h
      </description>
      <comment>
        In our state machine approach the function performs its functionality (put
        transceiver to bus-sleep mode) asynchronously. Therefore a deviation entry
        along these lines is needed.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2364</srcid><srcstatus/><internalId>1068</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30018</srcid><srcstatus/><internalId>1897</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30060_2</srcid><srcstatus/><internalId>1929</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00402</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall use the corresponding interfaces of the Bus State Manager modules to
        control the communication capabilities.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30024</srcid><srcstatus/><internalId>1902</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30102</srcid><srcstatus/><internalId>1933</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_454</srcid><srcstatus/><internalId>1214</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00418</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The version information in the module header and source files shall be validated and consistent
        e.g. by comparing the version information in the module header and source files with a pre-
        processor macro)
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00419</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module pre-compile time and link time configuration parameters shall be checked
        statically (at the latest during link time) for correctness.
      </description>
      <comment>
        This requirement is not applicable. The correctness is checked by configuration checks and the
        compiler.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00429</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name     | ComM_MainFunction_&lt;ComMChannel.ShortName&gt;
        Syntax           | void ComM_MainFunction_&lt;ComMChannel.ShortName&gt; (void)
        Service ID [hex] | 0x60
        Description      | This function shall perform the processing of the AUTOSAR ComM activities that
                         | are not directly initiated by the calls e.g. from the RTE. There shall be one dedicated Main
                         | Function for each channel of ComM. Precondition: ComM shall be initialized
        Available via    | SchM_ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_MainFunction</srcid><srcstatus/><internalId>825</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00429</srcid><srcstatus/><internalId>26</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00459</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        It shall be possible to integrate the ComM module delivered as source or object code into the
        AUTOSAR stack. Rationale:
        Allow IP protection and guaranteed test coverage: object code
        Allow high efficiency and configurability at system generation time (by integrator): source
        code.
      </description>
      <comment>
        This requirement is not applicable since ComM module doesn't provide any
        Link Time configuration parameters for this release.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00464</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall strictly separate configuration from implementation.
      </description>
      <comment>
        This requirement is informational only.
        Ensured by file structure - configuration is in a separate directory.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00470</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The extended functionality described in this chapter shall be individually configurable during
        runtime per feature (e.g. enable wake up inhibition but disable limitation to no communication)
      </description>
      <comment>
        Inhibition status can be changed (enabled / disabled) during run
        time using the APIs ComM_LimitChannelToNoComMode() /
        ComM_LimitECUToNoComMode() / ComM_PreventWakeUp().
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_UserReqWhenWkUpInhibit</srcid><srcstatus/><internalId>2058</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MaxUserReqWhenNoComInhibit</srcid><srcstatus/><internalId>2059</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_UserReqWhenWkUpAndNoComInhibit</srcid><srcstatus/><internalId>2060</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_LimitChannelToNoComMode</srcid><srcstatus/><internalId>2196</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_PreventWakeUp_True</srcid><srcstatus/><internalId>2204</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_PreventWakeUp_False</srcid><srcstatus/><internalId>2205</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ECUC_ComM_00563</srcid><srcstatus/><internalId>105</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1760</srcid><srcstatus/><internalId>1040</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1862</srcid><srcstatus/><internalId>1045</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1962</srcid><srcstatus/><internalId>1051</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00472</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Main state changes (see SWS_ComM_00879) shall be indicated to the users with the corresponding
        notifications (see section [REF] and [REF]). Exception: Default state after initialization, see
        SWS_ComM_00313.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30012</srcid><srcstatus/><internalId>2309</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30014</srcid><srcstatus/><internalId>2311</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_839</srcid><srcstatus/><internalId>901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00485</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The default state for each ComM channel state machine shall be COMM_NO_COMMUNICATION.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30001</srcid><srcstatus/><internalId>1887</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_700</srcid><srcstatus/><internalId>1002</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00488</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        It shall be possible to enable and disable the mode inhibition for each channel (channel state
        machine) independently. This functionality shall not be used by the ComM module itself.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30049</srcid><srcstatus/><internalId>1922</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ChanInhibition_ActiveDiag</srcid><srcstatus/><internalId>2065</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1036</srcid><srcstatus/><internalId>1009</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00499</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        These requirements are not applicable to this specification.
      </description>
      <comment>
        This requirement is informational only, based on BSW requirements.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00500</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall not queue user requests. The latest user request of the same user shall
        overwrite an old user request even if the request is not finished.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_UserRequestNotQueued</srcid><srcstatus/><internalId>1926</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1492</srcid><srcstatus/><internalId>1027</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00552</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_SetECUGroupClassification
        Syntax             | Std_ReturnType ComM_SetECUGroupClassification (ComM_InhibitionStatusType Status)
        Service ID [hex]   | 0x0f
        Sync/Async         | Synchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | Status | See ComM_InhibitionStatusType
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | Std_ReturnType | E_OK: Successfully change the ECU Group Classification Status
                           |                | E_NOT_OK: Change of the ECU Group Classification Status failed
        Description        | Changes the ECU Group Classification status (see chapter 10.2.2)
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.SetECUGroupClassificationMadeOptional</srcid><srcstatus/><internalId>802</internalId></linkedfrom><linkedfrom><srcid>dev.ComM.COMM_E_UNINIT</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.ASR403.SWS_ComM_00552.ComM_SetECUGroupClassification</srcid><srcstatus/><internalId>484</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00582</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall clear the user requests after all the channels that belong to the
        corresponding user enter COMM_NO_COMMUNICATION mode.
      </description>
      <comment>
        ComM582 describes the desired behaviour after an executed mode limitation
        See http://www.autosar.org/bugzilla/show_bug.cgi?id=40899#c22
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30044</srcid><srcstatus/><internalId>1916</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ECUModeLimitation_UserReq</srcid><srcstatus/><internalId>1923</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ModeLimitation_UserReq</srcid><srcstatus/><internalId>1944</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_LimitToNoCom20</srcid><srcstatus/><internalId>2093</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_BelatedUserRequest</srcid><srcstatus/><internalId>2367</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1369</srcid><srcstatus/><internalId>1318</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ModeLimitation_NO_COM_REQ_BY_ALL_COMM_USER</srcid><srcstatus/><internalId>1718</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00583</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall switch channel X to COMM_FULL_COMMUNICATION if NM indicates
        ComM_Nm_NetworkStartIndication(&lt;channel X&gt;) and CommunicationAllowed flag is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30057</srcid><srcstatus/><internalId>1927</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30059</srcid><srcstatus/><internalId>2061</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2222</srcid><srcstatus/><internalId>1059</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00599</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall support the shutdown synchronization variants (configured with
        ComMNmVariant, see ECUC_ComM_00568) LIGHT, SLAVE_ACTIVE, SLAVE_PASSIVE, PASSIVE and FULL
        described in Table [REF]
      </description>
      <comment>
        Comment: Only variant FULL and PASSIVE guarantees a synchronized shutdown between all nodes of a network.
        Note that since the NmIf cannot start the synchronized shutdown of coordinated networks before all networks
        are ready to go to sleep, requests from ComM to NmIf to release network communication on such a coordinated
        bus will be considered, but not always acted on directly. The NmIf will still answer with E_OK, but network
        will not be released until all coordinated networks are ready to go to sleep.

        Comment: A synchronized shutdown is not possible with the LIGHT variant thus the ECU may
        continuously restart ("toggle") because of a message from a node shutting down later.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_770</srcid><srcstatus/><internalId>1504</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00602</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall omit calls of NM services if configuration parameter ComMNmVariant =
        LIGHT | SLAVE_ACTIVE | SLAVE_PASSIVE | NONE (see ECUC_ComM_00568)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_ACTIVE</srcid><srcstatus/><internalId>572</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_PASSIVE</srcid><srcstatus/><internalId>573</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00602.NmVariant.LIGHT</srcid><srcstatus/><internalId>574</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00602.NmVariant.NONE</srcid><srcstatus/><internalId>575</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_NM_ACCESS_NEEDED</srcid><srcstatus/><internalId>1809</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00610</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_READY_SLEEP and configuration parameter ComMNmVariant=LIGHT (see
        ECUC_ComM_00568) and the timer for ComMNmLightTimeout (see ECUC_ComM_00606) has expired, the
        ComM channel state machine shall switch to state COMM_NO_COMMUNICATION.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30019</srcid><srcstatus/><internalId>1898</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30024</srcid><srcstatus/><internalId>1902</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30102</srcid><srcstatus/><internalId>1933</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_TM_IN_FULL_COMMODE_DURATION</srcid><srcstatus/><internalId>2063</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1274</srcid><srcstatus/><internalId>1309</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComMNmLightTimeout_TIMEOUT</srcid><srcstatus/><internalId>1712</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.TIMEOUT_FULL_COM_READY_SLEEP_0</srcid><srcstatus/><internalId>1749</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00612</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComM is not initialized, all ComM module and all API service other than ComM_Init() (see
        SWS_ComM_00146), ComM_GetVersionInfo() (see SWS_COMM_00370) and ComM_GetStatus() (see
        SWS_COMM_00242); shall:
        not execute their normal operation,
        and return E_NOT_OK, if it has a standard return type.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.FunctionReturnValueModuleNotInitilized</srcid><srcstatus/><internalId>807</internalId></linkedfrom><linkedfrom><srcid>dev.ComM.COMM_E_UNINIT</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00619</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_GetInhibitionStatus
        Syntax             | Std_ReturnType ComM_GetInhibitionStatus (NetworkHandleType Channel, ComM_InhibitionStatusType* Status)
        Service ID [hex]   | 0x04
        Sync/Async         | Synchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | Channel | See NetworkHandleType
        Parameters (inout) | None
        Parameters (out)   | Status | See ComM_InhibitionStatusType
        Return value       | Std_ReturnType | E_OK: Successfully returned Inhibition Status
                           |                | E_NOT_OK: Return of Inhibition Status failed
        Description        | Returns the inhibition status of a ComM channel.
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.COMM_E_UNINIT</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00619</srcid><srcstatus/><internalId>42</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00620</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        All the provided indication functions shall be implemented pre-compile time.
      </description>
      <comment>
        This requirement is informational only. Note: The concerned call back
        functions ComM_Nm_NetworkStartIndication(), ComM_Nm_NetworkMode(),
        ComM_Nm_PrepareBusSleepMode(), ComM_Nm_BusSleepMode(),
        ComM_Nm_RestartIndication(), ComM_DCM_ActiveDiagnostic(),
        ComM_DCM_InactiveDiagnostic(), ComM_EcuM_WakeUpIndication()
        ComM_CommunicationAllowed(), ComM_BusSM_ModeIndication() and
        ComM_COMCbk_SN() are implemented based on pre-compile time. Further note
        that ComM only supports pre-compile time configuration.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00625</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The status of the user requests shall also be updated if a user releases a request.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_UserRequestNotQueued</srcid><srcstatus/><internalId>1926</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1492</srcid><srcstatus/><internalId>1027</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00637</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In state COMM_FULL_COMMUNICATION and the Network Manager module indicates ComM_Nm_BusSleepMode(
        SWS_ComM_00392), the ComM channel state machine shall switch to state COMM_NO_COMMUNICATION.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30018</srcid><srcstatus/><internalId>1897</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_715</srcid><srcstatus/><internalId>1229</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.NO_COMMUNICATION_ENTRY_REQ_STATUS_CHANGED</srcid><srcstatus/><internalId>1724</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_FULL_COMMUNICATION</srcid><srcstatus/><internalId>1751</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00649</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM API uses the following extension to Std_ReturnType:
        Range         | COMM_E_MODE_LIMITATION       | 2 | Function call has been successful but mode can not be granted because of mode inhibition.
                      | COMM_E_MULTIPLE_PNC_ASSIGNED | 3 | Function could not provide the current mode of the PNC,
                      |                              |   | since multiple PNCs are assigned to the affected user
                      | COMM_E_NO_PNC_ASSIGNED       | 4 | Function could not provide the current mode of the PNC, since no
                      |                              |   | PNC is assigned to the affected user
        Description   | -- Tags:atp.Status=obsolete
        Available via | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00649.COMM_E_MODE_LIMITATION</srcid><srcstatus/><internalId>504</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00649.COMM_E_MULTIPLE_PNC_ASSIGNED</srcid><srcstatus/><internalId>506</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00649.COMM_E_NO_PNC_ASSIGNED</srcid><srcstatus/><internalId>507</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00649</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00662</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The sequence of users shall start with user 0 up to user N and the name of the mode ports shall
        be UM000, UM001,... UM&lt;N&gt;
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.SymbolicPortName</srcid><srcstatus/><internalId>803</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00663</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If more than one channel is linked to one user request and the modes of the channels are
        different, the ComM module shall indicate the lowest mode to the user.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30015</srcid><srcstatus/><internalId>2312</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1838</srcid><srcstatus/><internalId>1367</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00664</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall omit calls to control the communication capabilities if configuration
        parameter ComMBusType=COMM_BUS_TYPE_INTERNAL (ECUC_ComM_00567)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30022</srcid><srcstatus/><internalId>1901</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_454</srcid><srcstatus/><internalId>1214</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00665</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        On entering sub-state COMM_FULL_COM_NETWORK_REQUESTED from COMM_NO_COM_REQUEST_PENDING and EcuM
        module has indicated a wake-up by ComM_EcuM_WakeUpIndication(&lt;channel&gt;) (see SWS_ComM_00275) or
        by ComM_EcuM_PNCWakeUpIndication(&lt;PNC&gt;) (see SWS_ComM_91001), the ComM module shall request
        Nm_PassiveStartup(&lt;channel&gt;) from the Network Management. If the indicated ComM channel is a
        managed channel, the ComM module shall request Nm_PassiveStartup(&lt;referencing managing channel&gt;
        see ECUC_ComM_00893) from the Network Management.
      </description>
      <comment>
        This requirment is changed in bugzila RfC 80343 - VLAN functionality.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_WakeUpIndication</srcid><srcstatus/><internalId>564</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_PNCWakeUpIndication</srcid><srcstatus/><internalId>565</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_WakeUpIndication.ManagedChannel</srcid><srcstatus/><internalId>566</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_PNCWakeUpIndication.ManagedChannel</srcid><srcstatus/><internalId>567</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00667</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall omit to call Nm_NetworkRequest() from NM if configuration parameter
        ComMNmVariant= LIGHT|SLAVE_ACTIVE|SLAVE_PASSIVE|NONE (see ECUC_ComM_00568)
      </description>
      <comment>
        Rationale: Service Nm_NetworkRequest() is not available.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest</srcid><srcstatus/><internalId>570</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest.NotCalled</srcid><srcstatus/><internalId>571</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.Nm_NetworkRequestWithNmVariantPassive</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00671</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_READY_SLEEP and configuration parameter ComMBusType=
        COMM_BUS_TYPE_INTERNAL (ECUC_ComM_00567), the ComM channel state machine shall immediately
        switch to state COMM_NO_COMMUNICATION.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30022</srcid><srcstatus/><internalId>1901</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1369</srcid><srcstatus/><internalId>1318</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_TIMEOUT</srcid><srcstatus/><internalId>1713</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.TIMEOUT_FULL_COM_READY_SLEEP_1</srcid><srcstatus/><internalId>1750</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00675</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_BusSM_ModeIndication
        Syntax             | void ComM_BusSM_ModeIndication (NetworkHandleType Channel, ComM_ModeType ComMode)
        Service ID [hex]   | 0x33
        Sync/Async         | Asynchronous
        Reentrancy         | Reentrant
        Parameters (in)    | Channel | See NetworkHandleType
                           | ComMode | See ComM_ModeType
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | Indication of the actual bus mode by the corresponding Bus State Manager. ComM
                           | shall propagate the indicated state to the users with means of the RTE and BswM.
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_BusSM_ModeIndication.HeaderFile</srcid><srcstatus/><internalId>827</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00675</srcid><srcstatus/><internalId>88</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00686</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If at least one of multiple independent user requests demands a higher Communication Mode (see
        SWS_ComM_00867 and SWS_ComM_00868), the ComM module shall set this higher Communication Mode as
        the target Communication Mode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>        
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30028</srcid><srcstatus/><internalId>1903</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ReleasingChannelsOfPNC</srcid><srcstatus/><internalId>2177</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_UserReq_ReleasingChannel</srcid><srcstatus/><internalId>2178</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SetChannelToNoComIfNoFullComRequested_1</srcid><srcstatus/><internalId>2327</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SetChannelToNoComIfNoFullComRequested_2</srcid><srcstatus/><internalId>2328</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SingleChMultiPNCIntExtReq</srcid><srcstatus/><internalId>2329</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1372</srcid><srcstatus/><internalId>1023</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00690</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration parameter ComMNoCom (see ECUC_ComM_00571) need not to be evaluated in case
        ComMModeLimitationEnabled = FALSE = Disabled (see ECUC_ComM_00560) thus it can be removed in
        that case to reduce/optimize the configuration.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3087</srcid><srcstatus/><internalId>1106</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_519</srcid><srcstatus/><internalId>1490</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00694</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComM_EcuM_WakeUpIndication is called in sub-state COMM_NO_COM_NO_PENDING_REQUEST and
        configuration parameter ComMSynchronousWakeUp=TRUE (ECUC_ComM_00695), the ComM module shall
        switch all ComM channel state machines (resp. channels) to sub-state
        COMM_NO_COM_REQUEST_PENDING.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SYNC_WAKEUP</srcid><srcstatus/><internalId>2006</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PassiveActiveStartup</srcid><srcstatus/><internalId>2067</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4366</srcid><srcstatus/><internalId>1180</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_EcuM_WakeUpIndication_syncWU_PASSIVE_WAKEUP_IND</srcid><srcstatus/><internalId>1703</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00733</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Communication Manager Module shall have a separate port providing the ModeSwitchInterface
        interface 'ComM_CurrentMode' for each configured user, to which a SW-C is connected.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30013</srcid><srcstatus/><internalId>2310</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30015</srcid><srcstatus/><internalId>2312</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_265</srcid><srcstatus/><internalId>1614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00734</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Communication Manager Module shall have an optional (see ECUC_ComM_00787) separate port
        providing the sender-receiver interface 'ComM_CurrentChannelRequest' for each configured ComM
        channel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Rte_fullComRequestors</srcid><srcstatus/><internalId>2317</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_885</srcid><srcstatus/><internalId>1631</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00736</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Whenever the set of ComM users currently requesting COMM_FULL_COMMUNICATION for a channel
        changes, the Communication Manager Module shall update the data element fullComRequestors. A
        change shall update the data element only, when the Communication Manager Module accepts the
        communication request of the ComM user.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Rte_fullComRequestors</srcid><srcstatus/><internalId>2317</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_893</srcid><srcstatus/><internalId>1633</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00740</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Communication Manager Module can be configured to have an AUTOSAR port providing the client-
        server interface ComM_ECUModeLimitation.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30076</srcid><srcstatus/><internalId>2314</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30078</srcid><srcstatus/><internalId>2316</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_401</srcid><srcstatus/><internalId>1621</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1430</srcid><srcstatus/><internalId>1644</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00741</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name            | ComM_ECUModeLimitation
        Comment         | A SW-C which plays the role of a "Mode Manager" can use this interface to change the
                        | behavior of the entire ECU.
        IsService       | true
        Variation       | {ecuc(ComM/ComMGeneral.ComMModeLimitationEnabled)} == true
        Possible Errors | 0 | E_OK     | Operation successful
                        | 1 | E_NOT_OK | Operation failed
        --------------------------------------------------------------------------------------------------------------
        Operation       | LimitECUToNoComMode
        Comment         | Changes the inhibition status for the ECU (=all channels) for changing from
                        | COMM_NO_COMMUNICATION to a higher Communication Mode. (See also ComM_LimitChannelToNoComMode,
                        | same functionality but for a specific channels)
        Variation       | --
        Parameters      | Status
                        | Type      | boolean
                        | Direction | IN
                        | Comment | FALSE: Limit ECU to COMM_NO_COMMUNICATION disabled 
                        |         | TRUE: Limit ECU to COMM_NO_COMMUNICATION enabled
        Variation       | --
        Possible Errors | E_OK
                        | E_NOT_OK
        --------------------------------------------------------------------------------------------------------------                
        Operation       | ReadInhibitCounter
        Comment         | returns the value of the 'inhibited full communication request counter'
        Variation       | {ecuc(ComM/ComMGeneral.ComMGlobalNvMBlockDescriptor)} != NULL
        Parameters      | CounterValue
                        | Type      | uint16
                        | Direction | OUT
                        | Comment   | --
                        | Variation | --
        Possible Errors | E_OK
                        | E_NOT_OK
        --------------------------------------------------------------------------------------------------------------
        Operation       | ResetInhibitCounter
        Comment         | reset the "inhibited full communication request counter"
        Variation       | {ecuc(ComM/ComMGeneral.ComMGlobalNvMBlockDescriptor)} != NULL
        Possible Errors | E_OK
                        | E_NOT_OK
        --------------------------------------------------------------------------------------------------------------                
        Operation       | SetECUGroupClassification
        Comment         | changes the ECU group classification status
        Variation       | --
        Parameters      | Status
                        | Type      | ComM_InhibitionStatusType
                        | Direction | IN
                        | Comment   | --
                        | Variation | --
        Possible Errors | E_OK
                        | E_NOT_OK
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30076</srcid><srcstatus/><internalId>2314</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30078</srcid><srcstatus/><internalId>2316</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_401</srcid><srcstatus/><internalId>1621</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1430</srcid><srcstatus/><internalId>1644</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00742</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name            | ComM_ChannelWakeupComM_ChannelWakeup
        Comment         | A SW-C playing the role of a "Mode Manager" can use this interface to configure the
                        | Communication Manager Module to take precautions against awakening other ECU's by starting the
                        | communication.
        IsService       | true
        Variation       | {ecuc(ComM/ComMGeneral.ComMWakeupInhibitionEnabled)} == true
        Possible Errors | 0 | E_OK     | Operation successful
                        | 1 | E_NOT_OK | Operation failed
        -----------------------------------------------------------------------------------------------------------------                         
        Operation       | GetInhibitionStatusComM_ChannelWakeup.GetInhibitionStatus
        Comment         | returns the inhibition status of a channel
        Variation       | --
        Parameters      | Status
                        | Type      | ComM_InhibitionStatusType
                        | Direction | OUT
                        | Comment   | --
                        | Variation | --
        Possible Errors | E_OK
                        | E_NOT_OK
        -----------------------------------------------------------------------------------------------------------------
        Operation       | PreventWakeUp
        Comment         | Changes the inhibition status COMM_NO_WAKEUP for the corresponding channel.
        Variation       | --
        Parameters      | Status
                        | Type      | boolean
                        | Direction | IN
                        | Comment   | --
                        | Variation | --
        Possible Errors | E_OK
                        | E_NOT_OK
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30076</srcid><srcstatus/><internalId>2314</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_510</srcid><srcstatus/><internalId>1623</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1539</srcid><srcstatus/><internalId>1646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00743</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name            | ComM_ChannelLimitation
        Comment         | A SW-C playing the role of a "Mode Manager" can use this interface to configure the
                        | Communication Manager Module to inhibit communication mode for a given channel.
        IsService       | true
        Variation       | {ecuc(ComM/ComMGeneral.ComMModeLimitationEnabled)} == true
        Possible Errors | 0 | E_OK     | Operation successful
                        | 1 | E_NOT_OK | Operation failed
        ----------------------------------------------------------------------------------------------------
        Operation       | GetInhibitionStatus
        Comment         | returns the inhibition status of a channel
        Variation       | -- 
        Parameters      | Status
                        | Type      | ComM_InhibitionStatusType
                        | Direction | OUT
                        | Comment   | --
                        | Variation | --
        Possible Errors | E_OK
                        | E_NOT_OK
        ----------------------------------------------------------------------------------------------------
        Operation       | LimitChannelToNoComMode
        Comment         | Changes the inhibition status for the channel for changing from COMM_NO_COMMUNICATION
                        | to a higher Communication Mode. (See also ComM_LimitECUToNoComMode, same functionality but for
                        | all channels)
        Variation       | --
        Parameters      | Status
                        | Type      | boolean
                        | Direction | IN
                        | Comment   | FALSE: Limit channel to COMM_NO_COMMUNICATION disabled 
                        |           | TRUE: Limit channel to COMM_NO_COMMUNICATION enabled
                        | Variation | --
        Possible Errors | E_OK
                        | E_NOT_OK
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30077</srcid><srcstatus/><internalId>2315</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_467</srcid><srcstatus/><internalId>1622</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1496</srcid><srcstatus/><internalId>1645</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00744</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        This is the definition of the Communication Manager Module as a service. This is the 'outside-
        view' of the Communication Manager Module */ Service ComM 
        { 
          // port present if ComMModeLimitationEnabled (see ECUC_ComM_00560) 
          ProvidePort ComM_ECUModeLimitation modeLimitation; 
          
          // port present for each channel 
          // if ComMModeLimitationEnabled (see ECUC_ComM_00560); 
          // there are NC channels; 
          ProvidePort ComM_ChannelLimitation CL000; 
          …
          ProvidePort ComM_ChannelLimitation CL&lt;NC-1&gt;; 
          // port present for each channel 
          // if  COMM_WAKEUP_INHIBITION_ENABLED (see ECUC_ComM_00559) 
          ProvidePort ComM_ChannelWakeup CW000; 
          …
          ProvidePort ComM_ChannelWakeup CW&lt;NC-1&gt;; 
          // For each user the Communication Manager Module provides 2 ports. 
          // To facilitate configuration, the index of this user shall 
          // correspond to the index in the array COMM_USER_LIST used for the 
          // configuration of the Communication Manager Module. 
          // The number of users must correspond to the size of this array. 
          ProvidePort ComM_UserRequest UR000; // (see [REF]) 
          ProvidePort ComM_CurrentMode UM000; 
          ProvidePort ComM_UserRequest UR001; //(see [REF]) 
          ProvidePort ComM_CurrentMode UM001; 
          … 
          ProvidePort ComM_UserRequest UR&lt;COMM_USER_LIST.size-1&gt;; 
          ProvidePort ComM_CurrentMode UM&lt;COMM_USER_LIST.size-1&gt;; 
          // port present for each channel if configured 
          // (see ECUC_ComM_00787) 
          // there are NC channels; 
          ProvidePort ComM_CurrentChannelRequest CR000; 
          … 
          ProvidePort ComM_CurrentChannelRequest CR&lt;NC-1&gt;
        };
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30012</srcid><srcstatus/><internalId>2309</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30013</srcid><srcstatus/><internalId>2310</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30014</srcid><srcstatus/><internalId>2311</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30015</srcid><srcstatus/><internalId>2312</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30053</srcid><srcstatus/><internalId>2313</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30076</srcid><srcstatus/><internalId>2314</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30077</srcid><srcstatus/><internalId>2315</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Rte_fullComRequestors</srcid><srcstatus/><internalId>2317</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_401</srcid><srcstatus/><internalId>1621</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_467</srcid><srcstatus/><internalId>1622</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_510</srcid><srcstatus/><internalId>1623</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1430</srcid><srcstatus/><internalId>1644</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1496</srcid><srcstatus/><internalId>1645</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1539</srcid><srcstatus/><internalId>1646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00745</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        InternalBehavior of the Communication Manager Module 
        { 
          // Runnable entities of the Communication Manager Module 
          RunnableEntity LimitECUToNoComMode 
              symbol " ComM_LimitECUToNoComMode" /* see SWS_ComM_00124*/ 
              canbeInvokedConcurrently = FALSE
          RunnableEntity ReadInhibitCounter 
              symbol "ComM_ReadInhibitCounter" /* see SWS_ComM_00224 */
              canbeInvokedConcurrently = FALSE 
          RunnableEntity ResetInhibitCounter 
              symbol "ComM_ResetInhibitCounter" /* see SWS_ComM_00108 */ 
              canbeInvokedConcurrently = FALSE
          RunnableEntity SetECUGroupClassification 
              symbol "ComM_SetECUGroupClassification" /* see SWS_ComM_00552 */ 
              canbeInvokedConcurrently = FALSE 
          RunnableEntity LimitChannelToNoComMode
              symbol "ComM_LimitChannelToNoComMode" /* see SWS_ComM_00163 */ 
              canbeInvokedConcurrently = FALSE
          RunnableEntity GetInhibitionStatus 
              symbol "ComM_GetInhibitionStatus" /*see SWS_ComM_00619 */
              canbeInvokedConcurrently = FALSE 
          RunnableEntity PreventWakeup 
              symbol "ComM_PreventWakeup"
              canbeInvokedConcurrently = FALSE 
          RunnableEntity RequestComMode 
              symbol "ComM_RequestComMode" /*see SWS_ComM_00110 */ 
              canbeInvokedConcurrently = TRUE 
          RunnableEntity GetMaxComMode 
              symbol "ComM_GetMaxComMode" /* see SWS_ComM_00085 */ 
              canbeInvokedConcurrently = TRUE 
          RunnableEntity GetRequestedComMode 
              symbol "ComM_GetRequestedComMode" 
              canbeInvokedConcurrently = TRUE
          RunnableEntity GetCurrentComMode 
              symbol "ComM_GetCurrentComMode" /*see SWS_ComM_00083 */
              canbeInvokedConcurrently = TRUE 
          // the following applies if ComMModeLimitationEnabled 
          // (see ECUC_ComM_00560) 
          modeLimitation.LimitECUToNoComMode -&gt; LimitECUToNoComMode 
          modeLimitation.ReadInhibitCounter -&gt; ReadInhibitCounter 
          modeLimitation.ResetInhibitCounter -&gt; ResetInhibitCounter 
          modeLimitation.SetECUGroupClassification -&gt; SetECUGroupClassification 
          // per-channel behaviour only present 
          // if ComMModeLimitationEnabled (see ECUC_ComM_00560) 
          // there are NC channels 
          // To facilitate configuration, the names of the channels correspond 
          // to the index of the channel in the "Channel" container used to 
          // configure the Communication Manager Module 
          CL000.LimitChannelToNoComMode -&gt; LimitChannelToNoComMode
          CL000.GetInhibitionStatus -&gt; GetInhibitionStatus 
          PortArgument {port=CL000, 
                        value.type=NetworkHandleType, 
                        value.value=Channel[0].COMM_CHANNEL_ID} 
          … 
          CLnnn.LimitChannelToNoComMode -&gt;LimitChannelToNoComMode 
          CLnnn.GetInhibitionStatus -&gt; GetInhibitionStatus 
          PortArgument {port=CLnnn, value.type=NetworkHandleType, 
                       value.value=Channel[nnn].COMM_CHANNEL_ID} 
          
          // per-channel behaviour only present 
          // if COMM_WAKEUP_INHIBITION_ENABLED (see ECUC_ComM_00559) 
          CW000.preventWakeUp -&gt; PreventWakeUp
          PortArgument {port=CW000, 
                        value.type=NetworkHandleType,
                        value.value=Channel[0].COMM_CHANNEL_ID}
          … 
          CWnnn.preventWakeUp -&gt; PreventWakeUp 
          PortArgument {port=CWnnn, value.type=NetworkHandleType, 
                        value.value=Channel[nnn].COMM_CHANNEL_ID}
          // per-user behaviour 
          // Note that the port-argument value must be consistent with the 
          // value in the configuration COMM_USER_LIST 
          // Note that the exact data-type of the UserHandleType must ofcourse 
          // be defined BEFORE RTE_configuration, but does NOT affect the 
          // API seen by the SW-Cs that use the service 
          UR000.RequestComMode -&gt; RequestComMode 
          UR000.GetMaxComMode -&gt; GetMaxComMode 
          UR000.GetRequestedComMode -&gt; GetRequestedComMode 
          UR000.GetCurrentComMode -&gt; GetCurrentComMode 
          PortArgument {port=UR000, 
                        value.type= ComM_UserhandleType, 
                        value.value= COMM_USER_LIST[0]} 
          … 
          URnnn.RequestComMode -&gt; RequestComMode 
          URnnn.GetMaxComMode -&gt; GetMaxComMode 
          URnnn.GetRequestedComMode -&gt; GetRequestedComMode 
          URnnn.GetCurrentComMode -&gt; GetCurrentComMode 
          PortArgument {port=URnnn, 
                        value.type= ComM_UserhandleType,
                        value.value=COMM_USER_LIST[n]|
        };
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30012</srcid><srcstatus/><internalId>2309</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30013</srcid><srcstatus/><internalId>2310</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30014</srcid><srcstatus/><internalId>2311</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30015</srcid><srcstatus/><internalId>2312</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30053</srcid><srcstatus/><internalId>2313</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30076</srcid><srcstatus/><internalId>2314</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30077</srcid><srcstatus/><internalId>2315</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_84</srcid><srcstatus/><internalId>1649</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_359</srcid><srcstatus/><internalId>1653</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_579</srcid><srcstatus/><internalId>1655</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_1006</srcid><srcstatus/><internalId>1668</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00747</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Communication Manager Module can be configured to have an AUTOSAR port providing the Client-
        Server Interface ComM_ChannelWakeup.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30076</srcid><srcstatus/><internalId>2314</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_510</srcid><srcstatus/><internalId>1623</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1539</srcid><srcstatus/><internalId>1646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00752</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Communication Manager Module can be configured to have an AUTOSAR port providing the Client-
        Server Interface ComM_ChannelLimitation.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30077</srcid><srcstatus/><internalId>2315</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_467</srcid><srcstatus/><internalId>1622</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1496</srcid><srcstatus/><internalId>1645</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00778</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall explicitly indicate changes in modes to each individual user, to which a
        SW-C is connected. The ComM module shall do this by calling the right API on the RTE through
        the ports "UMnnn"
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30014</srcid><srcstatus/><internalId>2311</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30053</srcid><srcstatus/><internalId>2313</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_NotifyModeSwitchtoSWC</srcid><srcstatus/><internalId>2319</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_NotifyModeSwitchDirectPncUser</srcid><srcstatus/><internalId>2320</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Test_ComM_RteModeNotification</srcid><srcstatus/><internalId>2321</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1877</srcid><srcstatus/><internalId>1371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00792</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_Nm_RestartIndication
        Syntax             | void ComM_Nm_RestartIndication (NetworkHandleType Channel)
        Service ID [hex]   | 0x1b
        Sync/Async         | Asynchronous
        Reentrancy         | Reentrant
        Parameters (in)    | Channel | Channel
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | If NmIf has started to shut down the coordinated busses, AND not all coordinated
                           | busses have indicated bus sleep state, AND on at least on one of the coordinated busses NM is
                           | restarted, THEN the NM Interface shall call the callback function ComM_Nm_RestartIndication
                           | with the nmNetworkHandle of the channels which have already indicated bus sleep state.
        Available via      | ComM_Nm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComMNmCbkInd_forPassiveCh</srcid><srcstatus/><internalId>1899</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30033</srcid><srcstatus/><internalId>1906</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30110</srcid><srcstatus/><internalId>2005</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_INDICATION_NO_COM_REQUEST_PENDING_1</srcid><srcstatus/><internalId>1759</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2408</srcid><srcstatus/><internalId>1071</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00793</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Caveats of ComM_Init(): The NVRAM Manager module has to be initialized to have the possibility
        to "direct" access the ComM module's parameters.
      </description>
      <comment>
        This requirement is not applicable for the implementer but appliable
        for the System designer/Integrator.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00794</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        De-initialization in ComM_DeInit() shall only be performed if all channels controlled by the
        ComM module are in COMM_NO_COMMUNICATION mode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30003</srcid><srcstatus/><internalId>1889</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_913</srcid><srcstatus/><internalId>1005</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00795</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of ComM_RequestComMode: Relationship between users and channels. A user is
        statically mapped to one or more channels.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_LimitToNoCom20</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/ComM.xgen_228</srcid><srcstatus/><internalId>1675</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00796</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of ComM_GetMaxComMode: Relationship between users and channels. A user is
        statically mapped to one or more channels.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/ComM.xgen_228</srcid><srcstatus/><internalId>1675</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30007_1</srcid><srcstatus/><internalId>1893</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00798</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of ComM_GetCurrentComMode: Relationship between users and channels. A user is
        statically mapped to one or more channels.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/ComM.xgen_228</srcid><srcstatus/><internalId>1675</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30042</srcid><srcstatus/><internalId>1914</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00799</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of ComM_PreventWakeUp: Configurable with ComMWakeupInhibitionEnabled (see
        ECUC_ComM_00559)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1760</srcid><srcstatus/><internalId>1040</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>249</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00800</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of ComM_LimitChannelToNoComMode: Configurable with ComMModeLimitationEnabled (see
        ECUC_ComM_00560) and ComMResetAfterForcingNoComm (see ECUC_ComM_00558)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00800.ComM_LimitChannelToNoComMode</srcid><srcstatus/><internalId>481</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_LimitChannelToNoComMode</srcid><srcstatus/><internalId>828</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00801</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of ComM_LimitECUToNoComMode: Configurable with ComMModeLimitationEnabled (see
        ECUC_ComM_00560) and ComMResetAfterForcingNoComm (see ECUC_ComM_00558)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_LimitECUToNoComMode</srcid><srcstatus/><internalId>829</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00801.ComM_LimitECUToNoComMode</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00802</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of ComM_ReadInhibitCounter: Configurable with ComMModeLimitationEnabled (see
        ECUC_ComM_00560). Function will only be available if ComMModeLimitationEnabled (see
        ECUC_ComM_00560) is enabled and ComMGlobalNvMBlockDescriptor is configured.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_ReadInhibitCounter</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00802</srcid><srcstatus/><internalId>92</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00803</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of ComM_ResetInhibitCounter: Configurable with ComMModeLimitationEnabled (see
        ECUC_ComM_00560). Function will only be available if ComMModeLimitationEnabled (see
        ECUC_ComM_00560) is enabled and ComMGlobalNvMBlockDescriptor is configured.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_ResetInhibitCounter</srcid><srcstatus/><internalId>831</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00803</srcid><srcstatus/><internalId>93</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00818</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Channel.ShortName shall be used to configure ComM_MainFunction_&lt;ComMChannel.ShortName&gt; (see
        section 10.2.2)
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00820</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        ---------------------------------------------------------
        Module         | Header File      | Imported Type
        ---------------------------------------------------------
        Com            | Com.h            | Com_SignalIdType
        ---------------------------------------------------------
        ComStack_Types | ComStack_Types.h | NetworkHandleType
                       | ComStack_Types.h | PNCHandleType
        ---------------------------------------------------------                       
        NvM            | Rte_NvM_Type.h   | NvM_BlockIdType
                       | Rte_NvM_Type.h   | NvM_RequestResultType
        ---------------------------------------------------------
        Std            | Std_Types.h      | Std_ReturnType
                       | Std_Types.h      | Std_VersionInfoType
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00828</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        -------------------------------------------------------------------------------------------------------------------------------------------------------
        API function                                  | Header File   | Description
        -------------------------------------------------------------------------------------------------------------------------------------------------------
        Nm_PassiveStartUp                             | Nm            | This function calls the &lt;BusNm&gt;_PassiveStartUp function (e.g.
                                                      |               | CanNm_PassiveStartUp function is called if channel is configured as CAN)
        -------------------------------------------------------------------------------------------------------------------------------------------------------
        Nm_NetworkRequest                             | Nm            | This function calls the &lt;BusNm&gt;_NetworkRequest (e.g.
                                                      |               | CanNm_NetworkRequest function is called if channel is configured as CAN)
        -------------------------------------------------------------------------------------------------------------------------------------------------------
        Nm_NetworkRelease                             | Nm            | This function calls the &lt;BusNm&gt;_NetworkRelease bus specific function (
                                                      |               | e.g. CanNm_NetworkRelease function is called if channel is configured as CAN)
        -------------------------------------------------------------------------------------------------------------------------------------------------------
        Dcm_ComM_NoComModeEntered                     | Dcm           | This call informs the Dcm module about a ComM mode change to COMM_NO_COMMUNICATION.
        -------------------------------------------------------------------------------------------------------------------------------------------------------
        Dcm_ComM_SilentComModeEntered                 | Dcm           | This call informs the Dcm module about a ComM mode change to COMM_SILENT_COMMUNICATION.
        -------------------------------------------------------------------------------------------------------------------------------------------------------
        Dcm_ComM_FullComModeEntered                   | Dcm           | This call informs the Dcm module about a ComM mode change to COMM_FULL_COMMUNICATION.
        -------------------------------------------------------------------------------------------------------------------------------------------------------
        Rte_Ports_UserMode_P()[n].                    | Rte           | Indicate COMM_NO_COMMUNICATION mode to RTE
        Switch_currentMode                            |               |
        (RTE_MODE_ComMMode_COMM_NO_COMMUNICATION)     |               |
        -------------------------------------------------------------------------------------------------------------------------------------------------------
        Rte_Ports_UserMode_P()[n].                    | Rte           | Indicate COMM_SILENT_COMMUNICATION mode to RTE
        Switch_currentMode                            |               |
        (RTE_MODE_ComMMode_COMM_SILENT_COMMUNICATION) |               |        
        -------------------------------------------------------------------------------------------------------------------------------------------------------
        Rte_Ports_UserMode_P()[n].                    | Rte           | Indicate COMM_FULL_COMMUNICATION mode to RTE
        Switch_currentMode                            |               |
        (RTE_MODE_ComMMode_COMM_FULL_COMMUNICATION  ) |               |                
        -------------------------------------------------------------------------------------------------------------------------------------------------------
        BswM_ComM_CurrentMode                         | BswM          | Indicate Communication Mode to BswM
        -------------------------------------------------------------------------------------------------------------------------------------------------------
        NvM_ReadBlock                                 | NvM           | NVRAM manager API for Read block
        -------------------------------------------------------------------------------------------------------------------------------------------------------        
        NvM_WriteBlock                                | NvM           | NVRAM manager API for Write block
        -------------------------------------------------------------------------------------------------------------------------------------------------------
        NvM_GetErrorStatus                            | NvM           | NVRAM manager API for Get status
        -------------------------------------------------------------------------------------------------------------------------------------------------------
        &lt;BusSM&gt;_GetCurrentComMode               | &lt;BusSM&gt; | Function to query the actual communication mode from the &lt;Bus&gt; State Manager.
        -------------------------------------------------------------------------------------------------------------------------------------------------------
        &lt;BusSM&gt;_RequestComMode                  | &lt;BusSM&gt; | Function to request a communication mode from the &lt;Bus&gt; State Manager.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00828.Nm_PassiveStartup</srcid><srcstatus/><internalId>543</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00828.Nm_NetworkRequest</srcid><srcstatus/><internalId>544</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00828.Nm_NetworkRelease</srcid><srcstatus/><internalId>545</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00828.Dcm_ComM_NoComModeEntered</srcid><srcstatus/><internalId>546</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00828.Dcm_ComM_SilentComModeEntered</srcid><srcstatus/><internalId>547</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00828.Dcm_ComM_FullComModeEntered</srcid><srcstatus/><internalId>548</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00828.Rte_Ports_UserMode_P.NO_COMMUNICATION</srcid><srcstatus/><internalId>549</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00828.Rte_Ports_UserMode_P.SILENT_COMMUNICATION</srcid><srcstatus/><internalId>550</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00828.Rte_Ports_UserMode_P.FULL_COMMUNICATION</srcid><srcstatus/><internalId>551</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00828.BswM_ComM_CurrentMode</srcid><srcstatus/><internalId>552</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00828.NvM_ReadBlock</srcid><srcstatus/><internalId>553</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00828.NvM_WriteBlock</srcid><srcstatus/><internalId>554</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00828.NvM_GetErrorStatus</srcid><srcstatus/><internalId>555</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00828.BusSM_GetCurrentComMode</srcid><srcstatus/><internalId>556</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00828.BusSM_RequestComMode</srcid><srcstatus/><internalId>557</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swurs.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>256</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00829</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        ------------------------------------------------------------------------------------------------------------------------------------------------------
        API Function                      | Header File | Description
        ------------------------------------------------------------------------------------------------------------------------------------------------------                 
        BswM_ComM_CurrentPNCMode          | BswM_ComM.h | Function is called by ComM to indicate the current mode of the PNC.
        ------------------------------------------------------------------------------------------------------------------------------------------------------        
        BswM_ComM_InitiateReset           | BswM_ComM.h | Function is called by ComM to signal a shutdown.
        ------------------------------------------------------------------------------------------------------------------------------------------------------        
        Com_ReceiveSignal                 | Com.h       | Com_ReceiveSignal copies the data of the signal identified by
                                          |             | SignalId to the location specified by SignalDataPtr.
        ------------------------------------------------------------------------------------------------------------------------------------------------------                                          
        Com_SendSignal                    | Com.h       | The service Com_SendSignal updates the signal object identified by
                                          |             | SignalId with the signal referenced by the SignalDataPtr parameter.
        ------------------------------------------------------------------------------------------------------------------------------------------------------                                          
        Nm_PnLearningRequest              | Nm.h        | Set Repeat Message Request Bit and Partial Network Learning Bit
                                          |             | for NM messages transmitted next on the bus. For that purpose &lt;BusNm&gt;_PnLearningRequest shall
                                          |             | be called (e.g. CanNm_PnLearningRequest function if channel is configured as CAN). This will
                                          |             | force all nodes to enter the PNC Learning Phase and re-enter Repeat Message Stat. This is
                                          |             | needed for the optional Dynamic PNC-to-channel-mapping feature. Tags:atp.Status=draft
        ------------------------------------------------------------------------------------------------------------------------------------------------------                                          
        Nm_RequestSynchronizedPncShutdown | Nm.h        | This function forward the request for a synchronized
                                          |             | PNC shutdown of a particular PNC given by PncId to the affected &lt;Bus&gt;Nm by calling &lt;Bus&gt;
                                          |             | Nm_RequestSynchronizedPncShutdown The function call is only valid if NmStandardBusType is not
                                          |             | set to NM_BUSNM_LOCALNM (e.g. CanNm_RequestSynchronizedPncShutdown function is called for
                                          |             | NM_BUSNM_CANNM). Tags:atp.Status=draft
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.DynamicPNCMapping</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_CurrentPNCMode</srcid><srcstatus/><internalId>510</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_InitiateReset</srcid><srcstatus/><internalId>511</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00829.Com_ReceiveSignal</srcid><srcstatus/><internalId>512</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00829.Com_SendSignal</srcid><srcstatus/><internalId>513</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00829.Nm_RequestSynchronizedPncShutdown</srcid><srcstatus/><internalId>514</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00839</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall store the status of the user requests.
      </description>
      <comment>
        Describes the desired behaviour during an active mode limitation.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30044</srcid><srcstatus/><internalId>1916</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ECUModeLimitation_UserReq</srcid><srcstatus/><internalId>1923</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ModeLimitation_UserReq</srcid><srcstatus/><internalId>1944</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_UserReqWhenWkUpInhibit</srcid><srcstatus/><internalId>2058</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MaxUserReqWhenNoComInhibit</srcid><srcstatus/><internalId>2059</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_UserReqWhenWkUpAndNoComInhibit</srcid><srcstatus/><internalId>2060</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30076</srcid><srcstatus/><internalId>2314</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3146</srcid><srcstatus/><internalId>1110</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3264</srcid><srcstatus/><internalId>1119</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00840</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall store the updated status of the user requests if a user releases a
        request during an active mode inhibition.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_UserReqWhenWkUpInhibit</srcid><srcstatus/><internalId>2058</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MaxUserReqWhenNoComInhibit</srcid><srcstatus/><internalId>2059</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_UserReqWhenWkUpAndNoComInhibit</srcid><srcstatus/><internalId>2060</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30076</srcid><srcstatus/><internalId>2314</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3146</srcid><srcstatus/><internalId>1110</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3264</srcid><srcstatus/><internalId>1119</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00841</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall only perform the limit to COMM_NO_COMMUNICATION mode if the current state
        is COMM_FULL_COM_NETWORK_REQUESTED.
      </description>
      <comment>
        This requirement describe the behaviour if a local ComM user requests
        COMM_FULL_COM_NETWORK_REQUESTED (active request) for a dedicated ComM channel.
        The limit to COMM_NO_COMMUNICATION shall only be performed if a channel was
        request actively.
        This requirement shall be applied only for active request. Not applicable for
        a passive wake up.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30047</srcid><srcstatus/><internalId>1920</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30048</srcid><srcstatus/><internalId>1921</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_REJECT_REQ_IN_LIMIT_NO_COMMODE</srcid><srcstatus/><internalId>1940</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1863</srcid><srcstatus/><internalId>1046</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00842</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall ignore requests for limit to COMM_NO_COMMUNICATION in other states than
        COMM_FULL_COM_NETWORK_REQUESTED.
      </description>
      <comment>
        This requirement describe the behaviour if a local ComM user requests
        COMM_FULL_COM_NETWORK_REQUESTED (active request) for a dedicated ComM channel.
        This requirement refers to active request(not a passive wake up).
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_REJECT_REQ_IN_LIMIT_NO_COMMODE</srcid><srcstatus/><internalId>1940</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1191</srcid><srcstatus/><internalId>1013</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00845</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In COMM_FULL_COMMUNICATION mode, the ComM module shall allow transmission and reception on the
        affected physical channel.
      </description>
      <comment>
        This requirement is informational only. This can be achieved by calling
        BusSM_RequestComMode(Channel, COMM_FULL_COMMUNICATION). Please refer to
        requirement ComM069.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.SWS_ComM_00069</srcid><srcstatus/><internalId>143</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00846</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In COMM_NO_COMMUNICATION mode, the ComM module shall prevent transmission and reception on the
        affected physical channel.
      </description>
      <comment>
        This requirement is informational only. This can be achieved by calling
        BusSM_RequestComMode(Channel, COMM_NO_COMMUNICATION). Please refer to
        requirement ComM073.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.SWS_ComM_00073</srcid><srcstatus/><internalId>145</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00847</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Communication Manager Module shall have an AUTOSAR port providing the ModeSwitchInterface
        interface 'ComM_CurrentMode'
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30013</srcid><srcstatus/><internalId>2310</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_265</srcid><srcstatus/><internalId>1614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00848</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Communication Manager Module shall provide an AUTOSAR port to allow the request of an
        communication mode by calling 'ComM_RequestComMode' (see SWS_ComM_00110)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30013</srcid><srcstatus/><internalId>2310</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30014</srcid><srcstatus/><internalId>2311</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30053</srcid><srcstatus/><internalId>2313</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30076</srcid><srcstatus/><internalId>2314</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30078</srcid><srcstatus/><internalId>2316</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Rte_fullComRequestors</srcid><srcstatus/><internalId>2317</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1305</srcid><srcstatus/><internalId>1021</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00858</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If development error detection is enabled by ComMDevErrorDetect (see ECUC_ComM_00555): the
        function shall check that the service ComM_Init was previously called. If the check fails, the
        function shall raise the development error COMM_E_UNINIT otherwise (if DET is disabled) return
        E_NOT_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.FunctionReturnValueModuleNotInitilized</srcid><srcstatus/><internalId>807</internalId></linkedfrom><linkedfrom><srcid>dev.ComM.DevelopmentErrors</srcid><srcstatus/><internalId>819</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00858</srcid><srcstatus/><internalId>63</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00861</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall use the corresponding function provided by BswM to report the states of
        Communication Manager Module channels (see SWS_ComM_00828)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1883</srcid><srcstatus/><internalId>1372</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30017</srcid><srcstatus/><internalId>1896</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30025</srcid><srcstatus/><internalId>2054</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ComMNotifytoBswM</srcid><srcstatus/><internalId>2176</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ComMNotifytoBswM_PncEnable</srcid><srcstatus/><internalId>2181</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00863</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The following Data Types shall be used for the functions defined in this Specification.
      </description>
      <comment>
        Implicit requirements for each individual
        type added below. (ComM.Types_ImplicitX)
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.SWS_ComM_00669</srcid><srcstatus/><internalId>363</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00670</srcid><srcstatus/><internalId>364</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00672</srcid><srcstatus/><internalId>366</internalId></linkedfrom><linkedfrom><srcid>ComM.SWS_ComM_00674</srcid><srcstatus/><internalId>367</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00673.ComM_PncModeType</srcid><srcstatus/><internalId>526</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00864</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In ComM_Init() ComM shall read non-volatile parameters specified in SWS_ComM_00103 from NVRAM.
        If no parameters are available, ComM shall use the default values in the ComM configuration.
      </description>
      <comment>
        Reading non-volatile parameters (i.e. calling NvM_ReadAll) is done by the caller
        of the Init() functions (e.g. EcuM).
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_752</srcid><srcstatus/><internalId>1004</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30103</srcid><srcstatus/><internalId>2004</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00865</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In ComM_DeInit ComM shall store non-volatile parameters specified in SWS_ComM_00103 to NVRAM.
      </description>
      <comment>
        This requirement is not applicable for ComM because this functionality
        (i.e. calling NvM_WriteAll) is done by the caller of the DeInit()
        functions (e.g. EcuM); for the ComM it is sufficient to signal changed
        data to the NvM.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00866</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If configuration parameter ComMNmVariant=FULL|LIGHT|NONE (ECUC_ComM_00568), an
        DCM_ActiveDiagnostic indication shall be treated as a COMM_FULL_COMMUNICATION request for the
        specified communication channel (see ComM_DCM_ActiveDiagnostic(channel), SWS_ComM_00873)
      </description>
      <comment>
        If more channels needed for diagnostic purpose, DCM needs to indicate
        DCM_ActiveDiagnostic for each channel.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ActiveDiagnostic</srcid><srcstatus/><internalId>833</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00866</srcid><srcstatus/><internalId>94</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00866.NmVariant.FULL</srcid><srcstatus/><internalId>531</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00866.NmVariant.LIGHT</srcid><srcstatus/><internalId>532</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00866.NmVariant.NONE</srcid><srcstatus/><internalId>533</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00867</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM shall provide three different Communication Modes. The highest Communication Mode
        shall be COMM_FULL_COMMUNICATION. The lowest Communication Mode shall be COMM_NO_COMMUNICATION.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30028</srcid><srcstatus/><internalId>1903</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00868</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Communication Mode COMM_SILENT_COMMUNICATION shall only be used for network synchronization.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30027</srcid><srcstatus/><internalId>2056</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00869</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        On entering sub-state COMM_FULL_COM_NETWORK_REQUESTED from another state or substate, if
        configuration parameter ComMNmVariant=FULL (ECUC_ComM_00568) and if a user has requested
        ComM_RequestComMode(&lt;user&gt;,COMM_FULL_COMMUNICATION) (SWS_ComM_00110) the ComM module shall
        request Nm_NetworkRequest(&lt;channel&gt;) from the Network Management for the corresponding NM
        channel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NetworkReqAndRel_FullVariant</srcid><srcstatus/><internalId>1925</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PassiveStartup_Interrupted_By_UserRequest</srcid><srcstatus/><internalId>2046</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PassiveActiveStartup</srcid><srcstatus/><internalId>2067</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PassiveFollowedByActiveRequest_01</srcid><srcstatus/><internalId>2166</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PassiveFollowedByActiveRequest_02</srcid><srcstatus/><internalId>2167</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ChReqAfterPNCInReadySleepByEIRA</srcid><srcstatus/><internalId>2179</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_IgnoreBusSMNotOK</srcid><srcstatus/><internalId>2364</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_BusSleepIndAndUserRequest</srcid><srcstatus/><internalId>2366</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_739</srcid><srcstatus/><internalId>1231</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_886</srcid><srcstatus/><internalId>1258</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_NETWORK_REQUESTED_NmVariantFULL</srcid><srcstatus/><internalId>1784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00870</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        On entering sub-state COMM_FULL_COM_NETWORK_REQUESTED, if configuration parameter ComMNmVariant=
        FULL (ECUC_ComM_00568) and the DCM has indicated ComM_DCM_ActiveDiagnostic(&lt;channel&gt;) (
        SWS_ComM_00873), the ComM module shall request Nm_NetworkRequest(&lt;channel&gt;) from the Network
        Management for the corresponding NM channel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NoComToFullCom_ActiveDiag</srcid><srcstatus/><internalId>1895</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_775</srcid><srcstatus/><internalId>1232</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00051</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00871</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_CommunicationAllowed
        Syntax             | void ComM_CommunicationAllowed (NetworkHandleType Channel, boolean Allowed)
        Service ID [hex]   | 0x35
        Sync/Async         | Asynchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | Channel | Channel
                           | Allowed | TRUE: Communication is allowed 
                           |         | FALSE: Communication is not allowed
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | EcuM or BswM shall indicate to ComM when communication is allowed. If EcuM/Flex
                           | is used: BswM
        Available via      | ComM_BswM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30007_1</srcid><srcstatus/><internalId>1893</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30017</srcid><srcstatus/><internalId>1896</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ComMNmCbkInd_forPassiveCh</srcid><srcstatus/><internalId>1899</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30021</srcid><srcstatus/><internalId>1900</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2862</srcid><srcstatus/><internalId>1096</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00873</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_DCM_ActiveDiagnostic
        Syntax             | void ComM_DCM_ActiveDiagnostic (NetworkHandleType Channel)
        Service ID [hex]   | 0x1f
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant
        Parameters (in)    | Channel | Channel needed for Diagnostic communication
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | Indication of active diagnostic by the DCM.
        Available via      | ComM_Dcm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NoComToFullCom_ActiveDiag</srcid><srcstatus/><internalId>1895</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30025</srcid><srcstatus/><internalId>2054</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30027</srcid><srcstatus/><internalId>2056</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2630</srcid><srcstatus/><internalId>1080</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00874</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_DCM_InactiveDiagnostic
        Syntax             | void ComM_DCM_InactiveDiagnostic (NetworkHandleType Channel)
        Service ID [hex]   | 0x20
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant
        Parameters (in)    | Channel | Channel no longer needed for Diagnostic communication
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | Indication of inactive diagnostic by the DCM.
        Available via      | ComM_Dcm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30017</srcid><srcstatus/><internalId>1896</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SC_FulSilFul_thruDiag</srcid><srcstatus/><internalId>1908</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30106</srcid><srcstatus/><internalId>1936</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30026</srcid><srcstatus/><internalId>2055</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_DCM_NO_COM_PENDING_REQUEST_1</srcid><srcstatus/><internalId>1732</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2699</srcid><srcstatus/><internalId>1089</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00875</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In sub-state COMM_NO_COM_NO_PENDING_REQUEST and user requests COMM_FULL_COMMUNICATION and
        communication limitation is disabled (see Section [REF]), the ComM channel state machine shall
        immediately switch to sub-state COMM_NO_COM_REQUEST_PENDING.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1527</srcid><srcstatus/><internalId>1339</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30102</srcid><srcstatus/><internalId>1933</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ComAllowed</srcid><srcstatus/><internalId>1945</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_NO_PENDING_REQUEST_0</srcid><srcstatus/><internalId>1725</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00876</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In sub-state COMM_NO_COM_NO_PENDING_REQUEST,configuration parameter ComMNmVariant=FULL|LIGHT|
        NONE (see ECUC_ComM_00568) and DCM indicate ComM_DCM_ActiveDiagnostic (see SWS_ComM_00873), the
        ComM channel state machine shall immediately switch to sub-state COMM_NO_COM_REQUEST_PENDING.
      </description>
      <comment>
        A potential communication limitation (see Section 7.3.1) shall temporarily
        be inactive during an active diagnostic session, see SWS_ComM_00182
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00876</srcid><srcstatus/><internalId>95</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00876.NmVariant.FULL</srcid><srcstatus/><internalId>534</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00876.NmVariant.LIGHT</srcid><srcstatus/><internalId>535</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00876.NmVariant.NONE</srcid><srcstatus/><internalId>536</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ActiveDiagnostic</srcid><srcstatus/><internalId>833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00877</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In state COMM_SILENT_COMMUNICATION and user requests COMM_FULL_COMMUNICATION and communication
        limitation is disabled (see Section [REF]), the ComM channel state machine shall switch to
        state COMM_FULL_COMMUNICATION.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30017</srcid><srcstatus/><internalId>1896</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GoFromSilComToFulComWithoutAbort</srcid><srcstatus/><internalId>2363</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1747</srcid><srcstatus/><internalId>1362</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_ENTRY_REQ_STATUS_CHANGED</srcid><srcstatus/><internalId>1723</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_SILENT_COMMUNICATION_1</srcid><srcstatus/><internalId>1753</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00878</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In state COMM_SILENT_COMMUNICATION,configuration parameter ComMNmVariant=FULL|LIGHT|NONE (
        ECUC_ComM_00568) and DCM indicate ComM_DCM_ActiveDiagnostic(SWS_ComM_00873), the ComM channel
        state machine shall switch to state COMM_FULL_COMMUNICATION.
      </description>
      <comment>
        A potential communication limitation (see Section 7.3.1) shall temporarily
        be inactive during an active diagnostic session, see SWS_ComM_00182
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00878</srcid><srcstatus/><internalId>96</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00878.NmVariant.FULL</srcid><srcstatus/><internalId>537</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00878.NmVariant.LIGHT</srcid><srcstatus/><internalId>538</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00878.NmVariant.NONE</srcid><srcstatus/><internalId>539</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ActiveDiagnostic</srcid><srcstatus/><internalId>833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00879</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM channel state machine shall consist of the three main states corresponding to the
        Communication Modes: COMM_NO_COMMUNICATION, COMM_SILENT_COMMUNICATION and
        COMM_FULL_COMMUNICATION.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30027</srcid><srcstatus/><internalId>2056</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00880</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The COMM_FULL_COMMUNICATION state shall have two sub-states COMM_FULL_COM_NETWORK_REQUESTED and
        COMM_FULL_COM_READY_SLEEP.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NetworkReqAndRel_FullVariant</srcid><srcstatus/><internalId>1925</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_BSW_Types.h_85</srcid><srcstatus/><internalId>967</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/ComM_BSW_Types.h_92</srcid><srcstatus/><internalId>968</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00881</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The COMM_NO_COMMUNICATION state shall have two sub-states COMM_NO_COM_REQUEST_PENDING and
        COMM_NO_COM_NO_PENDING_REQUEST
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SwitchingBacktoDefaultState</srcid><srcstatus/><internalId>1939</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_BSW_Types.h_71</srcid><srcstatus/><internalId>965</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/ComM_BSW_Types.h_78</srcid><srcstatus/><internalId>966</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00882</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_READY_SLEEP and a user request COMM_FULL_COMMUNICATION and
        communication limitation is disabled (see Section [REF]), the ComM channel state machine shall
        immediately switch to sub-state COMM_FULL_COM_NETWORK_REQUESTED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1349</srcid><srcstatus/><internalId>1315</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ModeLimitation_UserReq</srcid><srcstatus/><internalId>1944</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COM_READY_SLEEP_1</srcid><srcstatus/><internalId>1757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00883</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_READY_SLEEP, configuration parameter ComMNmVariant=FULL|LIGHT|NONE (
        ECUC_ComM_00568) and DCM indicate ComM_DCM_ActiveDiagnostic(SWS_ComM_00873), the ComM channel
        state machine shall switch to sub-state COMM_FULL_COM_NETWORK_REQUESTED.
      </description>
      <comment>
        A potential communication limitation (see Section 7.3.1) shall temporarily
        be inactive during an active diagnostic session, see SWS_ComM_00182
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00883</srcid><srcstatus/><internalId>97</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00883.NmVariant.FULL</srcid><srcstatus/><internalId>540</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00883.NmVariant.LIGHT</srcid><srcstatus/><internalId>541</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00883.NmVariant.NONE</srcid><srcstatus/><internalId>542</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ActiveDiagnostic</srcid><srcstatus/><internalId>833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00884</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall store status if communication for a channel is allowed or not allowed in
        separate CommunicationAllowed boolean flags for all supported channels. The default value after
        ComM initialization shall be communication is not allowed, i.e. CommunicationAllowed=FALSE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30115</srcid><srcstatus/><internalId>2361</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2862</srcid><srcstatus/><internalId>1096</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00885</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Status changes for communication allowed or not allowed in SWS_ComM_00884 shall be provided to
        ComM in ComM_CommunicationAllowed(&lt;channel&gt;, TRUE|FALSE)(SWS_ComM_00871) indications.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30007_1</srcid><srcstatus/><internalId>1893</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ComMNmCbkInd_forPassiveCh</srcid><srcstatus/><internalId>1899</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PB_ChannelPerPnc</srcid><srcstatus/><internalId>2096</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PB_UserPerPnc</srcid><srcstatus/><internalId>2097</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2862</srcid><srcstatus/><internalId>1096</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00886</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        On entering sub-state COMM_FULL_COM_NETWORK_REQUESTED and configuration parameter ComMNmVariant=
        LIGHT|NONE (ECUC_ComM_00568), the timer for ComMTMinFullComModeDuration (ECUC_ComM_00557) shall
        be started.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00886.NmVariant.LIGHT</srcid><srcstatus/><internalId>527</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00886.NmVariant.NONE</srcid><srcstatus/><internalId>528</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00888</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_NETWORK_REQUESTED and configuration parameter ComMNmVariant=FULL (
        see ECUC_ComM_00568) and no user request ComM_RequestComMode(&lt;user&gt;,COMM_FULL_COMMUNICATION)
        and the DCM does not indicate ComM_DCM_ActiveDiagnostic(&lt;channel&gt;)(see SWS_ComM_00873), the
        ComM channel state machine shall switch to sub-state COMM_FULL_COM_READY_SLEEP.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1211</srcid><srcstatus/><internalId>1294</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30004</srcid><srcstatus/><internalId>1890</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_FullCommunicationTransition</srcid><srcstatus/><internalId>1952</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ReleasingChannelsOfPNC</srcid><srcstatus/><internalId>2177</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_UserReq_ReleasingChannel</srcid><srcstatus/><internalId>2178</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ChReqAfterPNCInReadySleepByEIRA</srcid><srcstatus/><internalId>2179</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SetChannelToNoComIfNoFullComRequested_1</srcid><srcstatus/><internalId>2327</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SetChannelToNoComIfNoFullComRequested_2</srcid><srcstatus/><internalId>2328</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SingleChMultiPNCIntExtReq</srcid><srcstatus/><internalId>2329</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_NoNmRequestOnUserRelease</srcid><srcstatus/><internalId>2370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_NETWORK_REQUESTED_ENTRY_REQ_STATUS_CHANGED</srcid><srcstatus/><internalId>1696</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_0</srcid><srcstatus/><internalId>1743</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_1</srcid><srcstatus/><internalId>1744</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_FULL_COM_NETWORK_REQUESTED_PENDING_0</srcid><srcstatus/><internalId>1747</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00889</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_NETWORK_REQUESTED and configuration parameter ComMNmVariant=LIGHT|
        NONE (ECUC_ComM_00568) and timer for ComMTMinFullComModeDuration(ECUC_ComM_00557) has expired
        and no user request ComM_RequestComMode(&lt;user&gt;,COMM_FULL_COMMUNICATION) and the DCM does not
        indicate ComM_DCM_ActiveDiagnostic(&lt;channel&gt;)(SWS_ComM_00873), the ComM channel state machine
        shall switch to sub-state COMM_FULL_COM_READY_SLEEP.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00889.NmVariant.LIGHT</srcid><srcstatus/><internalId>529</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00889.NmVariant.NONE</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00890</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_NETWORK_REQUESTED and the DCM does not indicate
        ComM_DCM_ActiveDiagnostic(&lt;channel&gt;)(see SWS_ComM_00873) and communication limitation is
        requested (see section [REF]), ComM channel state machine shall immediately switch to sub-state
        COMM_FULL_COM_READY_SLEEP and cancel the timer for ComMTMinFullComModeDuration.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00890.COMM_FULL_COM_READY_SLEEP</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00890.CANCEL_COMMTMINFULLCOMMODEDURATION</srcid><srcstatus/><internalId>592</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00891</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        On entering sub-state COMM_FULL_COM_READY_SLEEP and configuration parameter ComMNmVariant=LIGHT
        see ECUC_ComM_00568), the timer for ComMNmLightTimeout (see ECUC_ComM_00606) shall be started.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_TM_IN_FULL_COMMODE_DURATION</srcid><srcstatus/><internalId>2063</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1215</srcid><srcstatus/><internalId>1295</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00892</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_READY_SLEEP and configuration parameter ComMNmVariant=LIGHT (
        ECUC_ComM_00568) and a switch to sub-state COMM_FULL_COM_NETWORK_REQUESTED, due to request for
        COMM_FULL_COMMUNICATION according to requirements in SWS_ComM_00882 or SWS_ComM_00883, the
        timer for ComMNmLightTimeout (ECUC_ComM_00606) shall be canceled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_CANCEL_LIGHT_TIMEOUT_TIMER</srcid><srcstatus/><internalId>2064</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1291</srcid><srcstatus/><internalId>1311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00893</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComM_EcuM_WakeUpIndication is called in sub-state COMM_NO_COM_NO_PENDING_REQUEST and
        configuration parameter ComMSynchronousWakeUp=FALSE (see ECUC_ComM_00695), the ComM module
        shall switch the requested ComM channel state machine (resp. channels) to sub-state
        COMM_NO_COM_REQUEST_PENDING. If the indicated ComM channel is a managed channel, then the ComM
        channel state machine of the referencing managing channel (see ECUC_ComM_00893) shall also be
        switched to sub-state COMM_NO_COM_REQUEST_PENDING.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00893.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False</srcid><srcstatus/><internalId>562</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00893.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.ManagingChannel</srcid><srcstatus/><internalId>563</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00894</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In sub-state COMM_NO_COM_NO_PENDING_REQUEST and the NM module indicates a restart,
        ComM_Nm_RestartIndication() SWS_ComM_00792, the ComM channel state machine shall immediately
        switch to sub-state COMM_NO_COM_REQUEST_PENDING.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComMNmCbkInd_forPassiveCh</srcid><srcstatus/><internalId>1899</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SwitchingBacktoDefaultState</srcid><srcstatus/><internalId>1939</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2450</srcid><srcstatus/><internalId>1073</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_1</srcid><srcstatus/><internalId>1728</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00895</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In sub-state COMM_NO_COM_REQUEST_PENDING the ComM channel state machine shall evaluate its
        corresponding CommunicationAllowed flag, stored and set according to SWS_ComM_00884 and
        SWS_ComM_00885. If evaluated to CommunicationAllowed=TRUE, the ComM channel state machine shall
        immediately switch to state COMM_FULL_COMMUNICATION.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30017</srcid><srcstatus/><internalId>1896</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ComMNmCbkInd_forPassiveCh</srcid><srcstatus/><internalId>1899</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SC_FulSilFul_thruDiag</srcid><srcstatus/><internalId>1908</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30102</srcid><srcstatus/><internalId>1933</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SwitchingBacktoDefaultState</srcid><srcstatus/><internalId>1939</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1538</srcid><srcstatus/><internalId>1340</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.NO_COM_REQUEST_PENDING_COMALLOWED_CHANGED</srcid><srcstatus/><internalId>1709</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.COMALLOWED_CHANGE_NO_COM_PENDING_REQUEST</srcid><srcstatus/><internalId>1733</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00896</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Each ComM channel state machine shall only evaluate its corresponding communication status flag
        CommunicationAllowed according to SWS_ComM_00884 in sub-state COMM_NO_COM_REQUEST_PENDING.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30021</srcid><srcstatus/><internalId>1900</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1538</srcid><srcstatus/><internalId>1340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00897</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In sub-state COMM_NO_COM_REQUEST_PENDING and no longer any valid pending request for
        COMM_FULL_COMMUNICATION, the ComM channel state machine shall switch back to default sub-state
        COMM_NO_COM_NO_PENDING_REQUEST.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1603</srcid><srcstatus/><internalId>1349</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SwitchingBacktoDefaultState</srcid><srcstatus/><internalId>1939</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0</srcid><srcstatus/><internalId>1731</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_DCM_NO_COM_PENDING_REQUEST_1</srcid><srcstatus/><internalId>1732</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00898</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        On entering state COMM_NO_COMMUNICATION the ComM channel state machine shall go to sub-state
        COMM_NO_COM_NO_PENDING_REQUEST.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30001</srcid><srcstatus/><internalId>1887</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1385</srcid><srcstatus/><internalId>1319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00899</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        On entering state COMM_FULL_COMMUNICATION the ComM channel state machine shall go to sub-state
        COMM_FULL_COM_NETWORK_REQUESTED, if not a specific sub-state is specified in the transition.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30004</srcid><srcstatus/><internalId>1890</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_EmitSelf</srcid><srcstatus/><internalId>2371</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_739</srcid><srcstatus/><internalId>1231</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00902</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        On entering sub-state COMM_FULL_COM_NETWORK_REQUESTED and Nm module has indicated a restart,
        ComM_Nm_RestartIndication(&lt;channel&gt;) (SWS_ComM_00792), the ComM module shall request
        Nm_PassiveStartup(&lt;channel&gt;) from the Network Management
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComMNmCbkInd_forPassiveCh</srcid><srcstatus/><internalId>1899</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30110</srcid><srcstatus/><internalId>2005</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2449</srcid><srcstatus/><internalId>1072</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00903</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        On entering sub-state COMM_FULL_COM_NETWORK_REQUESTED and Nm module has indicated a Network
        start, ComM_Nm_NetworkStartIndication(&lt;channel&gt;) (SWS_ComM_00383), the ComM module shall
        request Nm_PassiveStartup(&lt;channel&gt;) from the Network Management
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30057</srcid><srcstatus/><internalId>1927</internalId></linkedfrom><linkedfrom><srcid>TS_NetworkStartIndicationTransition</srcid><srcstatus/><internalId>1948</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2265</srcid><srcstatus/><internalId>1061</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00906</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name          | ComM_UserHandleArrayType_{channel_name}
        Kind          | Structure
        Elements      | numberOfRequesters
                      | Type        | uint8
                      | Comment     | --
                      | handleArray |
                      | Type        | ComM_UserHandleSubArrayType_{channel_name}
                      | Comment     | --
                      | Variation   | channel_name = {ecuc(ComM/ComMConfigSet/ComMChannel.SHORT-NAME)
        Description   | numberOfRequesters contains the number of valid user handle entries in the "
                      | handleArray" member. If no user keeps the channel requested, this is zero 
                      | {LOWER-LIMIT=0, UPPER-LIMIT= MAX_CHANNEL_REQUESTER}
        Variation     | channel_name = {ecuc(ComM/ComMConfigSet/ComMChannel.SHORT-NAME)
        Available via | Rte_ComM_Type.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_UserHandleArrayType</srcid><srcstatus/><internalId>842</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00906</srcid><srcstatus/><internalId>69</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00907</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The PNC main state COMM_PNC_FULL_COMMUNICATION shall consist of the sub states
        COMM_PNC_PREPARE_SLEEP, COMM_PNC_READY_SLEEP and COMM_PNC_REQUESTED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_250</srcid><srcstatus/><internalId>1381</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_320</srcid><srcstatus/><internalId>1389</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_439</srcid><srcstatus/><internalId>1407</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00988</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00908</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Every state change (listed within the ComM_PncModeType), excluding entering of the main state
        COMM_PNC_NO_COMMUNICATION coming from PowerOff, shall be notified by the API call
        BswM_ComM_CurrentPncMode() with the entered PNC state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00908</srcid><srcstatus/><internalId>70</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00909</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        For every Partial Network, only one PNC state machine shall be implemented (i.e. One PNC state
        machine per PNC, independent of the amount of ComMChannels)
      </description>
      <comment>
        This requirement is informational only.
        This is a generic requirement for HSM design.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00910</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        PNC functionality shall only exist if the parameter ComMPncSupport is set to TRUE. (see
        ECUC_ComM_00839)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2036</srcid><srcstatus/><internalId>1579</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00911</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Enabling or disabling of the PNC functionality shall be post-build configurable using the
        parameter ComMPncEnabled (see ECUC_ComM_00878)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_91</srcid><srcstatus/><internalId>1468</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00912</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        It shall be possible to map a configurable amount of ComMUsers to one or more PNCs using the
        parameter ComMUserPerPnc (see ECUC_ComM_00876)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1099</srcid><srcstatus/><internalId>1529</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00913</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        It shall be possible to map a configurable amount of PNC(s) to a configurable amount of ComM
        channels using the parameter ComMChannelPerPnc (see ECUC_ComM_00880). The mapping shall be
        possible for all ComMChannels in combination with the following ComMNmVariants:
        ComMVariant=FULL
        ComMVariant=LIGHT, if the ComMChannel is in the role of a managed ComMChannel and the
        corresponding managing ComMChannel is also mapped to this PNC (see also [REF]
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComMChannelPerPnc</srcid><srcstatus/><internalId>816</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00913</srcid><srcstatus/><internalId>71</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00916</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall be able to distribute the status of a PNC (result of the PNC state
        machine) via one or more communications busses using one or more COM signals,as a bit vector,
        containing a bit which represents the status of the PNC with ComMPncComSignalDirection "TX"
        assigned to this PNC. (For more details, refer to Figure 2: PNC State Machine)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_NUM_TX_SIGNALS</srcid><srcstatus/><internalId>1821</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_182</srcid><srcstatus/><internalId>1380</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00919</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        It shall be possible to assign more than one COM signal containing bits representing the PNC to
        one PNC using the configuration container ComMPncComSignal (see ECUC_ComM_00881)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1144</srcid><srcstatus/><internalId>1533</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00920</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall support up to 504 PNC state machines.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00924</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The PNC state machine shall consist of the two main states COMM_PNC_FULL_COMMUNICATION and
        COMM_PNC_NO_COMMUNICATION.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_614</srcid><srcstatus/><internalId>1419</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_642</srcid><srcstatus/><internalId>1423</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_665</srcid><srcstatus/><internalId>1426</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_690</srcid><srcstatus/><internalId>1429</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00988</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00926</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The PNC main state COMM_PNC_NO_COMMUNICATION shall be the default PNC state from power off.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncNoComInitTest</srcid><srcstatus/><internalId>2326</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_690</srcid><srcstatus/><internalId>1429</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00927</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        After switching on the power supply, main state COMM_PNC_NO_COMMUNICATION shall be entered from
        PowerOff.
      </description>
      <comment>
        In ComM module, this requirement refers to ComM_Init.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncNoComInitTest</srcid><srcstatus/><internalId>2326</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_648</srcid><srcstatus/><internalId>999</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00988</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00929</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        As long as a PNC is in state COMM_PNC_FULL_COMMUNICATION all its assigned channels (see
        ECUC_ComM_00880) shall be in COMM_FULL_COMMUNICATION.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_429</srcid><srcstatus/><internalId>1406</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00930</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        When entering the PNC sub state COMM_PNC_REQUESTED and if ComMPncGatewayEnabled = FALSE or on
        all ComMChannels the PNC belongs to the ComMPncGatewayType is not set, the API Com_SendSignal()
        shall be called with the value '1' for the bit representing this PNC for the Com signal
        assigned to this PNC with ComMPncComSignalDirection "TX"
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00930.ComMPncGatewayEnabled.FALSE.Tx.WithValue.One</srcid><srcstatus/><internalId>593</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00930.ComMPncGatewayType.NotSet.Tx.WithValue.One</srcid><srcstatus/><internalId>594</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00931</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the API ComM_EcuM_WakeUpIndication() is called in PNC state COMM_PNC_NO_COMMUNICATION, and
        the configuration switch ComMSynchronousWakeUp is set to TRUE (see ECUC_ComM_00695), the PNC
        main state COMM_PNC_NO_COMMUNICATION shall be left and the PNC sub state COMM_PNC_PREPARE_SLEEP
        shall be entered.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PrepSlpToRdySlpMultiComSig</srcid><srcstatus/><internalId>2071</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PrepSlpToRdySlp_32bit</srcid><srcstatus/><internalId>2169</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Test_ComM_PncMultipleSignals</srcid><srcstatus/><internalId>2376</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ECUM_WAKEUP_IND</srcid><srcstatus/><internalId>1720</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ECUM_WAKEUP_IND_PNC_NO_COMMUNICATION</srcid><srcstatus/><internalId>1768</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_618</srcid><srcstatus/><internalId>1421</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00932</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        When at least one ComMUser assigned to this PNC requests "Full Communication" in PNC main state
        COMM_PNC_NO_COMMUNICATION, this state shall be left and the sub state COMM_PNC_REQUESTED of the
        main state COMM_PNC_FULL_COMMUNICATION shall be entered.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_665</srcid><srcstatus/><internalId>1426</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER</srcid><srcstatus/><internalId>1721</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_NO_COMMUNICATION_0</srcid><srcstatus/><internalId>1765</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00933</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        When in main state COMM_PNC_NO_COMMUNICATION at least one bit representing this PNC in EIRA
        changes to '1', the main state COMM_PNC_NO_COMMUNICATION shall be left and the
        COMM_PNC_READY_SLEEP shall be entered.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>        
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncNoComToRdySlpTest</srcid><srcstatus/><internalId>2073</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ComRecvSigReturnVal</srcid><srcstatus/><internalId>2076</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.COMCBK</srcid><srcstatus/><internalId>1719</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.COMCBK_PNC_NO_COMMUNICATION</srcid><srcstatus/><internalId>1767</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_603</srcid><srcstatus/><internalId>1418</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>
    
    <specobject>
      <id>ComM.SWS_ComM_00934</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        When in main state COMM_PNC_NO_COMMUNICATION at least one bit representing this PNC in an ERAn
        changes to '1', the main state COMM_PNC_NO_COMMUNICATION shall be left and the sub state
        COMM_PNC_REQUESTED shall be entered if the parameter ComMPncGatewayEnabled (ECUC_ComM_00840)
        equals TRUE and ComMPncGatewayType is set for the according ComMChannels of these ERAs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_3</srcid><srcstatus/><internalId>2290</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3581</srcid><srcstatus/><internalId>1128</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_NO_COMMUNICATION_1</srcid><srcstatus/><internalId>1766</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>
    
    <specobject>
      <id>ComM.SWS_ComM_00938</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        When all ComMUsers assigned to this PNC request "No Communication", the sub state
        COMM_PNC_REQUESTED shall be left and the sub state COMM_PNC_READY_SLEEP shall be entered, if
        the configuration switch ComMPncGatewayEnabled is set to FALSE or on all channels the PNC
        belongs to the ComMPncGatewayType is not set.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayType.NotSet</srcid><srcstatus/><internalId>596</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00940</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the PNC is released (i.e. all PNC bits within EIRA equals '0'), the sub state
        COMM_PNC_READY_SLEEP shall be left and the sub state COMM_PNC_PREPARE_SLEEP shall be entered.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PrepSlpToRdySlpMultiComSig</srcid><srcstatus/><internalId>2071</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncNoComToRdySlpTest</srcid><srcstatus/><internalId>2073</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Test_EIRA_MultipleSignalValues</srcid><srcstatus/><internalId>2077</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PrepSlpToRdySlp_32bit</srcid><srcstatus/><internalId>2169</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ReleasingChannelsOfPNC</srcid><srcstatus/><internalId>2177</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SetChannelToNoComIfNoFullComRequested_1</srcid><srcstatus/><internalId>2327</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.COMCBK</srcid><srcstatus/><internalId>1719</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.COMCBK_PNC_READY_SLEEP</srcid><srcstatus/><internalId>1775</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_333</srcid><srcstatus/><internalId>1392</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00944</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If at least one bit corresponding to the PNC within the Rx bitvectors with signal type "EIRA"
        equals '1', then the bit corresponding to this PNC whithin EIRA in ComM shall be set to '1'
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3493</srcid><srcstatus/><internalId>1126</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00945</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the configuration parameter ComMPncGatewayEnabled (see ECUC_ComM_00840) is true and the
        parameter ComMPncGatewayType is set for a ComMChannel and at least one bit corresponding to the
        PNC within the Rx bitvectors with signal type "ERA" equals '1', then the bit corresponding to
        this PNC within ERA in ComM shall be set to '1'
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3493</srcid><srcstatus/><internalId>1126</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_1</srcid><srcstatus/><internalId>2289</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00947</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        When the timer ComMPncPrepareSleepTimer (see ECUC_ComM_00841) expires, the PNC sub state
        COMM_PNC_PREPARE_SLEEP shall be left and the PNC main state COMM_PNC_NO_COMMUNICATION shall be
        entered.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncNoComToRdySlpTest</srcid><srcstatus/><internalId>2073</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ReleasingChannelsOfPNC</srcid><srcstatus/><internalId>2177</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SetChannelToNoComIfNoFullComRequested_1</srcid><srcstatus/><internalId>2327</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_255</srcid><srcstatus/><internalId>1384</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.PREPARE_SLEEP_TIMEOUT</srcid><srcstatus/><internalId>1716</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.PREPARE_SLEEP_TIMEOUT_PNC_PREPARE_SLEEP</srcid><srcstatus/><internalId>1776</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00988</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00948</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        When in COMM_PNC_PREPARE_SLEEP at least one ComMUser assigned to this PNC requests "Full
        Communication", the COMM_PNC_PREPARE_SLEEP state shall be left. The timer
        ComMPncPrepareSleepTimer shall be stopped and the sub state COMM_PNC_REQUESTED state shall be
        entered.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_299</srcid><srcstatus/><internalId>1388</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER</srcid><srcstatus/><internalId>1721</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_PREPARE_SLEEP_0</srcid><srcstatus/><internalId>1777</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00988</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>  
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00950</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        When in COMM_PNC_PREPARE_SLEEP at least one PNC bit within EIRA changes to '1', the sub state
        COMM_PNC_PREPARE_SLEEP shall be left. The timer ComMPncPrepareSleepTimer shall be stopped and
        the sub state COMM_PNC_READY_SLEEP shall be entered.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PrepSlpToRdySlpMultiComSig</srcid><srcstatus/><internalId>2071</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PrepSlpToRdySlp_32bit</srcid><srcstatus/><internalId>2169</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3569</srcid><srcstatus/><internalId>1127</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.COMCBK_PNC_PREPARE_SLEEP</srcid><srcstatus/><internalId>1774</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00951</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        When in sub state COMM_PNC_PREPARE_SLEEP at least one PNC bit within ERAn changes to '1', the
        parameter ComMPncGatewayEnabled equals TRUE and ComMPncGatewayType is set for the according
        ComMChannels of these ERAs, the sub state COMM_PNC_PREPARE_SLEEP shall be left. The timer
        ComMPncPrepareSleepTimer shall be stopped and the sub state COMM_PNC_REQUESTED shall be entered.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_1</srcid><srcstatus/><internalId>2289</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3581</srcid><srcstatus/><internalId>1128</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_PREPARE_SLEEP_1</srcid><srcstatus/><internalId>1778</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_PREPARE_SLEEP_2</srcid><srcstatus/><internalId>1779</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00952</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the sub state COMM_PNC_PREPARE_SLEEP is entered, the timer ComMPncPrepareSleepTimer (see
        ECUC_ComM_00841) shall be started with the configured initial value.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_255</srcid><srcstatus/><internalId>1384</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00953</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the PNC functionality is enabled using the configuration parameter ComMPncEnabled set to
        TRUE (see ECUC_ComM_00878), all actions related to PNC changes shall be executed before the
        channel related actions (channel related actions, see Chapter 7.3)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_91</srcid><srcstatus/><internalId>1468</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00959</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMPncGatewayEnabled == TRUE and within COMM_PNC_REQUESTED, the API Com_SendSignal() shall
        be called with the value "0" for the bit representing this PNC for the Com signal assigned to
        this PNC with ComMPncComSignalDirection == "TX" on all ComM channels related to this PNC where
        ComMPncGatewayType == COMM_GATEWAY_TYPE_PASSIVE if all ComM users assigned to this PNC request
        No Com" and all ComMPncComSignals received by Com_ReceiveSignal() from a channel where the
        signal attributes ComMPncComSignalDirection == "RX" and ComMPncComSignalKind == "ERA" and the
        channel attribute ComMPncGatewayType == "COMM_GATEWAY_TYPE_ACTIVE" are set to "0"
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_1</srcid><srcstatus/><internalId>2289</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_893</srcid><srcstatus/><internalId>1437</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_896</srcid><srcstatus/><internalId>1438</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00960</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        When entering the PNC sub state COMM_PNC_READY_SLEEP from COMM_PNC_REQUESTED, the API
        Com_SendSignal() shall be called with the value '0' for the bit representing this PNC for all
        Com signals assigned to this PNC with ComMPncComSignalDirection "TX"
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_896</srcid><srcstatus/><internalId>1438</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00964</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the API ComM_EcuM_PNCWakeUpIndication(&lt;PNC&gt;) (see SWS_ComM_91001) is called in PNC state
        PNC_NO_COMMUNICATION, the PNC main state PNC_NO_COMMUNICATION shall be left and the PNC sub
        state PNC_PREPARE_SLEEP shall be entered.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PNC_Wakeup</srcid><srcstatus/><internalId>2174</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_EcuM_PncWakeUp</srcid><srcstatus/><internalId>2307</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3850</srcid><srcstatus/><internalId>1146</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ECUM_PNCWAKEUP_IND_PNC_NO_COMMUNICATION</srcid><srcstatus/><internalId>1780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00966</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComM0PncVectorAvoidance is set to TRUE and if all signals are set to '0' (because of
        SWS_ComM_00959) for the referenced ComMChannel(s), the ComM module shall release this
        ComMChannel. As soon as at least one signal is set back to '1' again, the ComM module shall
        request this ComMChannel again.
      </description>
      <comment>
        As long as a PNC is requested remotely (i.e. at least one bit within the
        ERA signal assigned to this PNC equals �?1’) and the configuration switch
        ComMPncGatewayEnabled is set to TRUE (see ECUC_ComM_00840),
        COMM_PNC_REQUESTED will be the current PNC state.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_369</srcid><srcstatus/><internalId>1395</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_421</srcid><srcstatus/><internalId>1404</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_471</srcid><srcstatus/><internalId>1411</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_529</srcid><srcstatus/><internalId>1413</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_542</srcid><srcstatus/><internalId>1414</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_712</srcid><srcstatus/><internalId>1434</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM0PncVectorAvoidance_0</srcid><srcstatus/><internalId>2303</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Test_ComM0PncVectorAvoidance_1</srcid><srcstatus/><internalId>2304</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Test_ComM0PncVectorAvoidance_4</srcid><srcstatus/><internalId>2305</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00971</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The trigger ComM_COMCbk represents a notification by the AUTOSAR Communication module about a
        received signal containing PNC status information called ERA of EIRA.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_547</srcid><srcstatus/><internalId>886</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_570</srcid><srcstatus/><internalId>887</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_602</srcid><srcstatus/><internalId>893</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_646</srcid><srcstatus/><internalId>894</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_678</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_909</srcid><srcstatus/><internalId>904</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_940</srcid><srcstatus/><internalId>909</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1002</srcid><srcstatus/><internalId>911</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1032</srcid><srcstatus/><internalId>915</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1093</srcid><srcstatus/><internalId>917</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1123</srcid><srcstatus/><internalId>921</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>339</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00972</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The trigger "ComMUser" represents a notification about a communication request of a ComMUser by
        calling the API ComM_RequestComMode(
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1304</srcid><srcstatus/><internalId>1020</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00975</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The AUTOSAR Communication module (COM) shall be used to distribute the status information about
        PNCs using COM signals.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_547</srcid><srcstatus/><internalId>886</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_570</srcid><srcstatus/><internalId>887</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_602</srcid><srcstatus/><internalId>893</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_646</srcid><srcstatus/><internalId>894</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_678</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_909</srcid><srcstatus/><internalId>904</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_940</srcid><srcstatus/><internalId>909</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1002</srcid><srcstatus/><internalId>911</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1032</srcid><srcstatus/><internalId>915</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1093</srcid><srcstatus/><internalId>917</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1123</srcid><srcstatus/><internalId>921</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>341</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00976</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        ComM indicates all channel main state changes and all PNC state changes to the BswM.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30017</srcid><srcstatus/><internalId>1896</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_Int.h_986</srcid><srcstatus/><internalId>980</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Algorithm.FullComModeInternalBus</srcid><srcstatus/><internalId>1688</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.Algorithm.NoComModeInternalBus</srcid><srcstatus/><internalId>1689</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00978</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        State transitions of the PNC state machines in ComM, triggered by a call to ComM_RequestComMode(
        shall be executed in the ComM_MainFunction_&lt;Channel.ShortName&gt; only.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1304</srcid><srcstatus/><internalId>1020</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00979</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the optional PNC functionality is enabled (see ECUC_ComM_00883), all PNC actions shall be
        performed before the channel related actions are executed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_850</srcid><srcstatus/><internalId>902</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncBeforeChRequest</srcid><srcstatus/><internalId>2170</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_UserRequestToChAndToPnc_PncEnable</srcid><srcstatus/><internalId>2180</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00980</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the parameter ComMPncNmRequest equals TRUE (see ECUC_ComM_00886), if the "FULL Communication"
        is requested due to a change in the PNC state machine to COMM_PNC_REQUESTED (see SWS_COMM_00993)
        API Nm_NetworkRequest() shall be called, even if the current state is already "Full
        communication"
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_18062014_1</srcid><srcstatus/><internalId>2090</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_18062014_2</srcid><srcstatus/><internalId>2091</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Test_ComM_Pasive_Active_Wakeup</srcid><srcstatus/><internalId>2291</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Test_InternTransition2</srcid><srcstatus/><internalId>2293</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_429</srcid><srcstatus/><internalId>1406</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.PNC_NM_REQUEST</srcid><srcstatus/><internalId>1710</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_NETWORK_REQUESTED_NmVariantFULL</srcid><srcstatus/><internalId>1784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00982</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        For exchanging PNC status information, bit vectors shall be used. (i.e. only one signal
        containing a maximum of 504 PNC status information bits)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_435</srcid><srcstatus/><internalId>998</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00984</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        ComM receives the bit vectors (signals) which can be ComMPncComSignalKind EIRA or ERA using
        Com_ReceiveSignal(
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PrepSlpToRdySlpMultiComSig</srcid><srcstatus/><internalId>2071</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ComRecvSigReturnVal</srcid><srcstatus/><internalId>2076</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PrepSlpToRdySlp_32bit</srcid><srcstatus/><internalId>2169</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3436</srcid><srcstatus/><internalId>1124</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00986</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM shall provide the API ComM_COMCbk_&lt;sn&gt;() to indicate a change of signal(s) within the
        module communication.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_547</srcid><srcstatus/><internalId>886</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_570</srcid><srcstatus/><internalId>887</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_602</srcid><srcstatus/><internalId>893</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_646</srcid><srcstatus/><internalId>894</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_678</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_909</srcid><srcstatus/><internalId>904</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_940</srcid><srcstatus/><internalId>909</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1002</srcid><srcstatus/><internalId>911</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1032</srcid><srcstatus/><internalId>915</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1093</srcid><srcstatus/><internalId>917</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1123</srcid><srcstatus/><internalId>921</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>348</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00987</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Within the ComM_MainFunction_&lt;Channel.ShortName&gt; of a channel that is mapped to one or more
        PNCs, the requested state shall be handled in the following order:
        ComM user requests of ComM users mapped to one or more PNCs of that channel
        ComM user requests of ComM users mapped to that channel
        ERA (if the configuration switch ComMPncGatewayEnabled is set to TRUE)
        EIRA
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00987.HandleOrder</srcid><srcstatus/><internalId>522</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00990</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the API ComM_EcuM_WakeUpIndication() is called in PNC state COMM_PNC_NO_COMMUNICATION, and
        the configuration switch ComMSynchronousWakeUp is set to FALSE, the PNC main state
        COMM_PNC_NO_COMMUNICATION shall be the current state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncNoComInitTest</srcid><srcstatus/><internalId>2326</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_626</srcid><srcstatus/><internalId>1422</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00991</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        When all ComMUsers assigned to this PNC request "No Communication" and the PNC bit in all ERAn
        is equal to 0, the sub state COMM_PNC_REQUESTED shall be left and the sub state
        COMM_PNC_READY_SLEEP shall be entered, if the configuration switch ComMPncGatewayEnabled is set
        to TRUE and ComMPncGatewayType is set for the according ComMChannels of these ERAs.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_1</srcid><srcstatus/><internalId>2289</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_996</srcid><srcstatus/><internalId>1446</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.NO_COM_REQ_BY_ALL_COMM_USER_PNC_REQUESTED_0</srcid><srcstatus/><internalId>1769</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.NO_COM_REQ_BY_ALL_COMM_USER_PNC_REQUESTED_1</srcid><srcstatus/><internalId>1770</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00991</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00992</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        When entering the PNC sub state COMM_PNC_REQUESTED and if ComMPncGatewayEnabled = TRUE, the API
        Com_SendSignal() shall be called with the value '1' for the bits representing this PNC for the
        Com signals assigned to this PNC with ComMPncComSignalDirection "TX" for all ComM channels
        related to this PNC and having ComMPncGatewayType == COMM_GATEWAY_TYPE_ACTIVE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_7</srcid><srcstatus/><internalId>2296</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_896</srcid><srcstatus/><internalId>1438</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00993</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Every time the sub state COMM_PNC_REQUESTED is entered from other states, ComM shall request
        COMM_FULL_COMMUNICATION for all configured ComM channels for this PNC, where
        ComMWakeupSleepRequestEnabled is set to FALSE or not available, even if the channel is already
        requested.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_RepeatChReqInPncReqState</srcid><srcstatus/><internalId>2175</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Algorithm.ComM_PNC_RequestComMode</srcid><srcstatus/><internalId>1677</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.Algorithm.ComM_PNC_RequestComMode_Mode</srcid><srcstatus/><internalId>1678</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.Algorithm.ComM_PNC_RequestComMode_Event</srcid><srcstatus/><internalId>1679</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.Algorithm.PncRequestChannel</srcid><srcstatus/><internalId>1680</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_371</srcid><srcstatus/><internalId>1397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00994</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        No restrictions from the configuration of the BusNm Filter for partial networking shall apply
        to ComM user assignment to PNCs.
      </description>
      <comment>
        This requirement is informational only.
        The BusNM Filter configuration is independant from the ComM PNC
        configuration.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00995</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        It shall be possible to map a configurable amount of ComMUsers to one or more ComM channels
        using the parameter ComMUserPerChannel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_834</srcid><srcstatus/><internalId>1511</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00996</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        It shall not be possible to map a ComMUsers to a PNC and in addition to a ComM channel which is
        already referenced by the PNC (see figure [REF] Use Case 2)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1084</srcid><srcstatus/><internalId>1527</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncMultipleSignals</srcid><srcstatus/><internalId>2376</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00558</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMResetAfterForcingNoComm
        Parent Container: ComMGeneral
        Description:      ComM shall perform a reset after entering "No Communication" mode because 
                          of an active mode limitation to "No Communication" mode.
                          true: Enabled 
                          false: Disabled
        Multiplicity:     1
        Type:             EcucBooleanParamDef
        Default value:    false
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   - 
        Scope/Dependency: scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_761</srcid><srcstatus/><internalId>864</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1397</srcid><srcstatus/><internalId>1320</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2379</srcid><srcstatus/><internalId>1597</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComMResetAfterForcingNoComm_1</srcid><srcstatus/><internalId>1993</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ComMResetAfterForcingNoComm_2</srcid><srcstatus/><internalId>1994</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ComMResetAfterForcingNoComm_3</srcid><srcstatus/><internalId>1995</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00888</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMCDDBusPrefix
        Parent Container: ComMChannel
        Description:      Prefix to be used for API calls to CDD.
        Multiplicity:     0..1
        Type:             EcucStringParamDef
        Default value:    --
        maxLength:        --
        minLength         --
        regularExpression --
        Post-Build 
        Variant 
        Multiplicity:     false
        Post-Build 
        Variant Value:    false
        Multiplicity      Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
                          dependency: Only applicable if ComMBusType equals COMM_BUS_TYPE_CDD.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_224</srcid><srcstatus/><internalId>1476</internalId></linkedfrom></coveredby></needscov>      
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComMBusType</srcid><srcstatus/><internalId>810</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00161</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        ComMUsers shall be assignable to PNCs, which refer to ComMChannels in combination with all
        ComMNmVariants except ComMNmVariant=PASSIVE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1137</srcid><srcstatus/><internalId>1532</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NoComToFullCom_ActiveDiag</srcid><srcstatus/><internalId>1895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00162</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name          | ComM_ConfigType
        Kind          | Structure
        Elements      | implementation specific
                      | Type    | --
                      | Comment | The contents of the initialization data structure are implementation specific
        Description   | This type contains the implementation-specific post build configuration structure.
        Available via | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/ComM.xgen_137</srcid><srcstatus/><internalId>1672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00355</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        ComM shall force an ECU reset by invoking BswM_ComM_InitiateReset() after entering "No
        Communication" mode if configured (ComMResetAfterForcingNoComm=TRUE)
      </description>
      <comment>
        Use Case: It is assumed that a faulty ECU keeps the bus awake. As a consequence a
        "network master" decides to force all ECUs to go to sleep.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1397</srcid><srcstatus/><internalId>1320</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComMResetAfterForcingNoComm_1</srcid><srcstatus/><internalId>1993</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ComMResetAfterForcingNoComm_2</srcid><srcstatus/><internalId>1994</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ComMResetAfterForcingNoComm_3</srcid><srcstatus/><internalId>1995</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00668</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name          | ComM_InitStatusType
        Kind          | Enumeration
        Range         | COMM_UNINIT | 0x00 | The COM Manager is not initialized or not usable. This shall be
                      |             |      | the default value after reset. This status shall have the value 0.
                      | COMM_INIT   | 0x01 | The COM Manager is initialized and usable.
        Description   | Initialization status of ComM.
        Available via | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.BswDataTypes</srcid><srcstatus/><internalId>800</internalId></linkedfrom><linkedfrom><srcid>dev.ComM.ComM_InitStatusType</srcid><srcstatus/><internalId>834</internalId></linkedfrom></coveredby></needscov>      
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00668.ComM_InitStatusType</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00669</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name | ComM_InhibitionStatusType
        Kind | Bitfield
        Derived from | uint8
        Elements      | Kind | Name                   | Mask | Description
                      | bit  | WakeupInhibitionActive | 0x01 | Bit 0 (LSB): Wake Up inhibition active
                      | bit   | LimitedToNoCom        | 0x02 | Bit 1: Limit to COMM_NO_COMMUNICATION mode
        Description   | Defines whether a mode inhibition is active or not. Inhibition status of ComM. 
                      | e.g. status=00000011 -&gt; Wake up inhibition and limitation to COMM_NO_COMMUNICATION mode active
        Variation     | --
        Available via | Rte_ComM_Type.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Rte_Types</srcid><srcstatus/><internalId>2318</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_Types.h_39</srcid><srcstatus/><internalId>866</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/ComM_BSW_Types.h_206</srcid><srcstatus/><internalId>970</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_511</srcid><srcstatus/><internalId>1465</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_InhibitionStatusType</srcid><srcstatus/><internalId>835</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00863</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00670</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name          | ComM_UserHandleType
        Kind          | Type
        Derived from  | uint8
        Description   | Handle to identify a user. For each user, a unique value must be defined at
                      | system generation time. Maximum number of users is 255. Legal user IDs are in the range 0.. 254;
                      | user ID 255 is reserved and shall have the symbolic representation COMM_NOT_USED_USER_ID.
        Variation     | --
        Available via | Rte_ComM_Type.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_Types.h_52</srcid><srcstatus/><internalId>867</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/ComM_BSW_Types.h_219</srcid><srcstatus/><internalId>971</internalId></linkedfrom></coveredby></needscov>      
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_UserHandleType</srcid><srcstatus/><internalId>836</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00863</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>

    <specobject>
      <id>ComM.SWS_ComM_00673</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name           | ComM_PncModeType 
        Kind           | Enumeration 
        Range          | COMM_PNC_REQUESTED                      | 0x00 | PNC is requested by a local ComM user
                       | COMM_PNC_READY_SLEEP                    | 0x01 | PNC is requested by a remote ComM user
                       | COMM_PNC_PREPARE_SLEEP                  | 0x02 | PNC is active with no deadline monitoring
                       | COMM_PNC_NO_COMMUNICATION               | 0x03 | PNC does not communicate
                       | COMM_PNC_REQUESTED_WITH_WAKEUP_REQUEST  | 0x04 | PNC is requested by a local ComM user. 
                                                                        | The mode is used to indicate the BswM, 
                                                                        | that an active PNC request should trigger also a wake-up of the used communication hardware, 
                                                                        | if this is supported and configured (e.g. used for Ethernet switch port
                                                                        | switching in combination with OA TC10 compliant Ethernet hardware).                                                           
        Description    | Current mode of a PNC 
        Available via  | ComM.h                                                           
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00673.ComM_PncModeType</srcid><srcstatus/><internalId>526</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_PncModeType</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>dev.ComM.BswDataTypes</srcid><srcstatus/><internalId>800</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject> 
    

    <specobject>
      <id>ComM.SWS_ComM_00672</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:          | ComM_ModeType
        Type:          | uint8
        Range:         | COMM_NO_COMMUNICATION                        | 0 ComM state machine is in "No Communication" mode.
                       |                                              |   Configured channel shall have no transmission or
                       |                                              |   reception capability.
                       | COMM_SILENT_COMMUNICATION                    | 1 ComM state machine is in "Silent Communication" mode.
                       |                                              |   Configured channel shall have only reception
                       |                                              |   capability, no transmission capability.
                       | COMM_FULL_COMMUNICATION                      | 2 ComM state machine is in "Full Communication" mode.
                       |                                              |   Configured channel shall have both transmission and
                       |                                              |   reception capability.
                       | COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST  | 3 ComM state machine is in "Full Communication" mode. 
                       |                                              |   Configured channel shall have both transmission and reception towards 
                       |                                              |   the lower layer (e.g. Ethernet hardware compliant to OA TC10). 
                       |                                              |   This is only for internal use within the ComM channel statemachine.
        Description:   | Current mode of the Communication Manager (main state of the state machine).
        Variation:     | -- 
        Available via: | Rte_ComM_Type.h        
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Rte_Types</srcid><srcstatus/><internalId>2318</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_Types.h_64</srcid><srcstatus/><internalId>868</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/ComM_BSW_Types.h_32</srcid><srcstatus/><internalId>962</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/ComM_BSW_Types.h_231</srcid><srcstatus/><internalId>972</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_208</srcid><srcstatus/><internalId>1613</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_ModeType</srcid><srcstatus/><internalId>837</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00863</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>366</internalId></specobject>      
    
    <specobject>
      <id>ComM.SWS_ComM_00674</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name          | ComM_StateType
        Kind          | Type
        Derived from  | uint8
        Range         | COMM_NO_COM_NO_PENDING_REQUEST  | 0
                      | COMM_NO_COM_REQUEST_PENDING     | 1
                      | COMM_FULL_COM_NETWORK_REQUESTED | 2
                      | COMM_FULL_COM_READY_SLEEP       | 3
                      | COMM_SILENT_COM                 | 4
        Description   | State and sub-state of ComM state machine ComM states vs. Communication Modes:
                      | COMM_NO_COM* : Communication Mode='No Communication' COMM_FULL_COM*: Communication Mode='Full
                      | Communication' COMM_SILENT_COM: Communicatio Mode='Silent Communication'
        Available via | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_BSW_Types.h_244</srcid><srcstatus/><internalId>973</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_StateType</srcid><srcstatus/><internalId>838</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00863</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>        
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>367</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00819</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_COMCbk_&lt;sn&gt;
        Syntax             | void ComM_COMCbk_&lt;sn&gt; (void)
        Service ID [hex]   | 0x36
        Sync/Async         | Synchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | None
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | This callback is called when the EIRA or ERA was updated in COM. The call only
                           | informs the ComM about ERA and EIRA changes. The actual handling is done in the next call to
                           | ComM_MainFunction_&lt;ComMChannel.ShortName&gt; with changing the corresponding PN State machine.
        Available via      | ComM_Com.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_547</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_COMCbk</srcid><srcstatus/><internalId>839</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00825</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The byteIndex and bitIndex, in which a bit corresponding to one ComMPncId resides, shall be
        determined as follows: byteIndex=(ComMPncId div 8) - &lt;PNC Vector Offset&gt; bitIndex=(ComMPncId
        mod 8)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3009</srcid><srcstatus/><internalId>1101</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_363</srcid><srcstatus/><internalId>1394</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00826</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In COMM_FULL_COMMUNICATION and configuration parameter ComMNmVariant=FULL|PASSIVE (
        ECUC_ComM_00568) and the Network Manager module indicates ComM_Nm_PrepareBusSleepMode() (
        SWS_ComM_00391), the ComM state machine shall switch to state COMM_SILENT_COMMUNICATION.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00299</srcid><srcstatus/><internalId>25</internalId></linkedfrom><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00900</srcid><srcstatus/><internalId>68</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>
    
    <specobject>
      <id>ComM.SWS_ComM_00827</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Regarding "Communication allowed" and mode inhibitions, requests originating from a pnc state
        machine shall be treated like user requests for the according channels.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_1</srcid><srcstatus/><internalId>2289</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_710</srcid><srcstatus/><internalId>1433</internalId></linkedfrom></coveredby></needscov>      
      <containerCovstatus>covered</containerCovstatus></needscoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>
    
    <specobject>
      <id>ComM.SWS_ComM_00904</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name          | ComM_CurrentChannelRequest_{channel_name}ComM_CurrentChannelRequest
        Comment       | Array of ComMUserIdentifier, that currently hold FULL_COM requests for this channel.
                      | The size of the attribute fullComRequestors.handleArray is NUM_COMM_USER_PER_CHANNEL
        IsService     | true
        Variation     | {ecuc(ComM/ComMConfigSet/ComMChannel/ComMFullCommRequestNotificationEnabled)} ==
                      | truechannel_name = {ecuc(ComM/ComMConfigSet/ComMChannel.SHORT-NAME)
        Data Elements | fullComRequestorsComM_CurrentChannelRequest.fullComRequestors
        Type          | ComM_UserHandleArrayType
        Variation     | channel_name = {ecuc(ComM/ComMConfigSet/ComMChannel.SHORT-NAME)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.SWS_ComM_00904</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_CurrentChannelRequest</srcid><srcstatus/><internalId>840</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00915</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_NETWORK_REQUESTED and configuration parameter ComMNmVariant=PASSIVE
        SLAVE_PASSIVE (ECUC_ComM_00568), the ComM channel state machine shall switch to sub-state
        COMM_FULL_COM_READY_SLEEP.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00915.NmVariant.SLAVE_PASSIVE</srcid><srcstatus/><internalId>568</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00915.NmVariant.PASSIVE</srcid><srcstatus/><internalId>569</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00957</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMBusType = "COMM_BUS_TYPE_CDD" the API prefix ("&lt;BusSm&gt;") shall be configured in the
        Parameter "ComMCDDBusPrefix"
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComMBusType</srcid><srcstatus/><internalId>810</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00958</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Communication Manager module shall use &lt;BusSm&gt;_RequestComMode() from the State Manager to
        request a dedicated communication mode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00852</srcid><srcstatus/><internalId>57</internalId></linkedfrom><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00854</srcid><srcstatus/><internalId>59</internalId></linkedfrom><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00856</srcid><srcstatus/><internalId>61</internalId></linkedfrom><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00859</srcid><srcstatus/><internalId>64</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00962</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The prefix for the StateManager APIs ("&lt;BusSm&gt;") shall be CanSM, LinSM, FrSM, EthSM if the
        Parameter ComMBusType is COMM_BUS_TYPE_CAN, COMM_BUS_TYPE_LIN, COMM_BUS_TYPE_FR or
        COMM_BUS_TYPE_ETH accordingly.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00852</srcid><srcstatus/><internalId>57</internalId></linkedfrom><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00854</srcid><srcstatus/><internalId>59</internalId></linkedfrom><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00856</srcid><srcstatus/><internalId>61</internalId></linkedfrom><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00859</srcid><srcstatus/><internalId>64</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00962.CanSM</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00962.LinSM</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00962.FrSM</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00962.EthSM</srcid><srcstatus/><internalId>600</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00963</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The Communication Manager module shall use &lt;BusSm&gt;_GetCurrentComMode() from the State Manager
        to query the current communication mode if necessary.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00853</srcid><srcstatus/><internalId>58</internalId></linkedfrom><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00855</srcid><srcstatus/><internalId>60</internalId></linkedfrom><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00857</srcid><srcstatus/><internalId>62</internalId></linkedfrom><linkedfrom><srcid>ComM.ASR403.SWS_ComM_00860</srcid><srcstatus/><internalId>65</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01000</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        --------------------------------------------------------------------------------------------------------------
        Name            | ComM_UserRequest
        Comment         | A SW-C that wants to explicitly direct the local Communication Manager Module of the
                        | ECU towards a certain state requires the client-server interface ComM_UserRequest. Through this
                        | interface, the SW-C could either set the desired state of all communication channels (if the
                        | user is mapped to one or more channels) or of all PNCs (if the user is mapped to one or more
                        | PNCs) that are relevant for that component to "No Communication" or "Full Communication"
        IsService       | true
        Variation       | --
        Possible Errors | 0 | E_OK                    | Operation successful
                        | 1 | E_NOT_OK                | Operation failed
                        | 2 | E_MODE_LIMITATION       | ComMMode cannot be granted because of ComMMode inhibition
                        | 3 | E_MULTIPLE_PNC_ASSIGNED | Operation is not possible
                        |   |                         | since multiple PNCs are assigned to the affected ComMUser
                        | 4 | E_NO_PNC_ASSIGNED       | Operation is not possible since no
                        |   |                         | PNC is assigned to the affected ComMUser
        --------------------------------------------------------------------------------------------------------------
        Operation       | GetCurrentComModeComM_UserRequest.GetCurrentComMode
        Comment         | Returns the current Communication Manager Module mode for the SW-C-Return the current
                        | Communication Manager Modul channel mode to the SW-C. Please note: the channel mode is returned.
                        | Even though the affected user is assigned to a PNC. (see ComM_GetCurrentComMode)
        Variation       | --
        Parameters      | ComMode
                        | Type      | ComM_ModeType
                        | Direction | OUT
                        | Comment   |
        Variation       |
        Possible Errors | E_OK
                        | E_NOT_OK
        --------------------------------------------------------------------------------------------------------------
        Operation       | GetCurrentPNCComMode
        Comment         | Return the current Communication Manager Modul PNC mode to the SW-C. Please note: the
                        | PNC mode is returned as ComM_ModeType (COMM_NO_COMMUNICATION == COMM_PNC_NO_COMMUNICATIO,
                        | COMM_FULL_COMMUNICATION == COMM_PNC_FULL_COMMUNICATION). If the affected ComM user is mapped to
                        | multiple PNCs than the operation shall return E_MULTIPLE_PNC_ASSIGNED. If the affected ComM
                        | user is mapped to no PNC than the operation shall return E_NO_PNC_ASSIGNED.
        Variation       | --
        Parameters      | ComMode
                        | Type      | ComM_ModeType
                        | Direction | OUT
                        | Comment   | --
                        | Variation | --
        Possible Errors | E_OK
                        | E_NOT_OK
                        | E_MULTIPLE_PNC_ASSIGNED
                        | E_NO_PNC_ASSIGNED
        --------------------------------------------------------------------------------------------------------------
        Operation | GetMaxComModeComM_UserRequest.GetMaxComMode
        Comment | Returns the current Communication Manager Module mode for the SW-C
        Variation
        Parameters | ComModeComM_UserRequest.GetMaxComMode.ComMode
        Type | ComM_ModeType
        Direction | OUT
        Comment
        Variation
        Possible Errors | ComM_UserRequest.E_OKComM_UserRequest.E_NOT_OK
        --------------------------------------------------------------------------------------------------------------
        Operation       | GetRequestedComModeComM_UserRequest.GetRequestedComMode
        Comment         | Returns that last Communication Manager Module Mode requested by the SW-C
        Variation       | --
        Parameters      | ComMode
                        | Type      | ComM_ModeType
                        | Direction | OUT
                        | Comment   | --
                        | Variation | --
        Possible Errors | E_OK
                        | E_NOT_OK
        --------------------------------------------------------------------------------------------------------------
        Operation       | RequestComModeComM_UserRequest.RequestComMode
        Comment         | The SW-C requests that all communication channels it needs are in the provided
                        | Communication Manager Module mode
        Variation       | --
        Parameters      | ComModeComM
                        | Type      | ComM_ModeType
                        | Direction | IN
                        | Comment   | --
                        | Variation | --
        Possible Errors | E_OK
                        | E_NOT_OK
                        | E_MODE_LIMITATION
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_01000.Operation.GetCurrentComMode</srcid><srcstatus/><internalId>601</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_01000.Operation.GetCurrentPNCComMode</srcid><srcstatus/><internalId>602</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_01000.Operation.GetMaxComMode</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_01000.Operation.GetRequestedComMode</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_01000.Operation.RequestComMode</srcid><srcstatus/><internalId>605</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name      | ComM_CurrentMode
        Comment   | A SW-C that wants to get informed about its current Communication Manager Module Mode
                  | requires the ModeSwitchInterface ComM_CurrentMode.
        IsService | true
        Variation | --
        ModeGroup | currentMode | ComMMode
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_01_ASRSvcCompDescr</srcid><srcstatus/><internalId>2377</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_265</srcid><srcstatus/><internalId>1614</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_785</srcid><srcstatus/><internalId>1626</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1291</srcid><srcstatus/><internalId>1637</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name          | ComM_UserHandleSubArrayType_{channel_name}
        Kind          | Array | Element type | ComM_UserHandleType
        Size          | COUNT{ecuc(ComM/ComMConfigSet/ComMChannel/ComMUserPerChannel)} Elements
        Description   | This element contains the user handles of the users which keep the channel
                      | requested (if any), starting in its first entries. The size of the array MAX_CHANNEL_REQUESTERS
                      | is the maximum of the number of users requesting a channel.
        Variation     | channel_name = {ecuc(ComM/ComMConfigSet/ComMChannel.SHORT-NAME)
        Available via | Rte_ComM_Type.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_UserHandleSubArrayType</srcid><srcstatus/><internalId>841</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.SWS_ComM_01005</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name                           | CL_{channel_name}
        Kind                           | ProvidedPort | Interface | ComM_ChannelLimitation
        Description                    | --
        Port Defined Argument Value(s) | Type  | NetworkHandleType
                                       | Value | {ecuc(ComM/ComMConfigSet/ComMChannel/ComMChannelId.value)
        Variation                      | {ecuc(ComM/ComMGeneral.ComMModeLimitationEnabled)} == truechannel_name = {ecuc(ComM/ComMConfigSet/ComMChannel)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_01_ASRSvcCompDescr</srcid><srcstatus/><internalId>2377</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_316</srcid><srcstatus/><internalId>1651</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_851</srcid><srcstatus/><internalId>1660</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_966</srcid><srcstatus/><internalId>1666</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name        | CR_{channel_name}
        Kind        | ProvidedPort | Interface | ComM_CurrentChannelRequest
        Description |
        Variation   | {ecuc(ComM/ComMConfigSet/ComMChannel/ComMFullCommRequestNotificationEnabled)} == true
                    |  channel_name = {ecuc(ComM/ComMConfigSet/ComMChannel.SHORT-NAME)}
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_01_ASRSvcCompDescr</srcid><srcstatus/><internalId>2377</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_291</srcid><srcstatus/><internalId>1650</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_821</srcid><srcstatus/><internalId>1658</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_936</srcid><srcstatus/><internalId>1664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01008</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name                            | CW_{channel_name}ComM.CW
        Kind                            | ProvidedPort | Interface | ComM_ChannelWakeup
        Description                     | --
        Port Defined Argument Value(s)  | Type | NetworkHandleType
                                        | Value | {ecuc(ComM/ComMConfigSet/ComMChannel/ComMChannelId.value)}
        Variation                       | {ecuc(ComM/ComMGeneral.ComMWakeupInhibitionEnabled)} == true
                                        |  hannel_name = {ecuc(ComM/ComMConfigSet/ComMChannel)|
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_01_ASRSvcCompDescr</srcid><srcstatus/><internalId>2377</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_339</srcid><srcstatus/><internalId>1652</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_871</srcid><srcstatus/><internalId>1661</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_986</srcid><srcstatus/><internalId>1667</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name        | modeLimitation
        Kind        | ProvidedPort | Interface | ComM_ECUModeLimitation
        Description | --
        Variation   | {ecuc(ComM/ComMGeneral.ComMModeLimitationEnabled)} == true
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_01_ASRSvcCompDescr</srcid><srcstatus/><internalId>2377</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_569</srcid><srcstatus/><internalId>1654</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_841</srcid><srcstatus/><internalId>1659</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_956</srcid><srcstatus/><internalId>1665</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_ECUModeLimitation</srcid><srcstatus/><internalId>843</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name        | UM_{user_name}
        Kind        | ProvidedPort | Interface | ComM_CurrentMode
        Description |
        Variation   | user_name = {ecuc(ComM/ComMConfigSet/ComMUser.SHORT-NAME)}
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_01_ASRSvcCompDescr</srcid><srcstatus/><internalId>2377</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_41</srcid><srcstatus/><internalId>1647</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_783</srcid><srcstatus/><internalId>1656</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_892</srcid><srcstatus/><internalId>1662</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name                           | UR_{user_name}
        Kind                           | ProvidedPort | Interface | ComM_UserRequest
        Description                    | --
        Port Defined Argument Value(s) | Type  | ComM_UserHandleType
                                       | Value | ecuc(ComM/ComMConfigSet/ComMUser/ComMUserIdentifier.value)
        Variation                      | user_name = {ecuc(ComM/ComMConfigSet/ComMUser.SHORT-NAME)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_01_ASRSvcCompDescr</srcid><srcstatus/><internalId>2377</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_53</srcid><srcstatus/><internalId>1648</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_795</srcid><srcstatus/><internalId>1657</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_904</srcid><srcstatus/><internalId>1663</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name                | ComMModeComMMode
        Kind                | ModeDeclarationGroup
        Category            | ALPHABETIC_ORDER
        Initial mode        | COMM_NO_COMMUNICATION
        On transition value | --
        Modes               | COMM_FULL_COMMUNICATION
                            | COMM_NO_COMMUNICATION
                            | COMM_SILENT_COMMUNICATION
        Description
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Rte_Types</srcid><srcstatus/><internalId>2318</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_68</srcid><srcstatus/><internalId>1449</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00164</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMPncGatewayEnabled == TRUE and either on entering COMM_PNC_REQUESTED or within
        COMM_PNC_REQUESTED, the API Com_SendSignal() shall be called with the value "1" for the bit
        representing this PNC for the Com signal assigned to this PNC with ComMPncComSignalDirection
        TX" on all ComM channels related to this PNC where ComMPncGatewayType ==
        COMM_GATEWAY_TYPE_PASSIVE if at least one ComM user assigned to this PNC request "Full Com" or
        at least one ComMPncComSignal received by Com_ReceiveSignal() from a channel where the signal
        attributes ComMPncComSignalDirection == "RX" and ComMPncComSignalKind == "ERA" and the channel
        attribute ComMPncGatewayType == "COMM_GATEWAY_TYPE_ACTIVE" is set to "1"
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00164.Entering.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.Rx.Era</srcid><srcstatus/><internalId>558</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00164.Entering.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.Rx.UserRequest</srcid><srcstatus/><internalId>559</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00164.In.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.Rx.ERA</srcid><srcstatus/><internalId>560</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00164.In.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.UserRequest</srcid><srcstatus/><internalId>561</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00165</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In PNC sub state COMM_PNC_READY_SLEEP when at least one ComMUser assigned to this PNC requests
        Full Communication" or ComMPncGatewayEnabled (ECUC_ComM_00887) equals TRUE, one bit
        representing this PNC in an ERAn changes to '1' and ComMPncGatewayType is set for the according
        ComMChannels of these ERAs, this state shall be left and the sub state COMM_PNC_REQUESTED shall
        be entered.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.SWS_ComM_00165_UserRequest</srcid><srcstatus/><internalId>706</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.SWS_ComM_00165_ERARequest</srcid><srcstatus/><internalId>707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_00961</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        When entering the PNC sub state COMM_PNC_READY_SLEEP from COMM_PNC_REQUESTED, ComM shall
        release the COMM_FULL_COMMUNICATION request for all configured ComM channels for this PNC.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_528</srcid><srcstatus/><internalId>1412</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00891</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMPncEthIfSwitchPortGroupRef
        Parent Container: ComMPnc
        Description:      Reference to the PortGroups that correspond to this PNC. Note: This is only for documentation.
        Multiplicity:     0..255
        Type:             Symbolic name reference to [ EthIfSwitchPortGroup ]
        Post-Build 
        Variant 
        Multiplicity:     true
        Post-Build 
        Variant Value:    true
        Multiplicity      Pre-compile time  X VARIANT-PRE-COMPILE
        Configuration     Link time         X VARIANT-POST-BUILD
        Class:            Post-build time   -
        Value             Pre-compile time  X VARIANT-PRE-COMPILE
        Configuration     Link time         X VARIANT-POST-BUILD
        Class:            Post-build time   -
        Scope/Dependency: scope: ECU
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1331</srcid><srcstatus/><internalId>1545</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00892</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComM0PncVectorAvoidance
        Parent Container: ComMGeneral
        Description:      This parameter avoids sending of 0-PNC-Vectors in case ComMPncGatewayEnabled is enabled.
        Multiplicity:     0..1
        Type:             EcucBooleanParamDef
        Default value:    false
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   - 
        Scope/Dependency: scope: local
                          dependency ComMPncGatewayEnabled is enabled
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_BSW_Cfg.c_245</srcid><srcstatus/><internalId>870</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1765</srcid><srcstatus/><internalId>1565</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM0PncVectorAvoidance_0</srcid><srcstatus/><internalId>2303</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Test_ComM0PncVectorAvoidance_1</srcid><srcstatus/><internalId>2304</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Test_ComM0PncVectorAvoidance_4</srcid><srcstatus/><internalId>2305</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_91001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_EcuM_PNCWakeUpIndication
        Syntax             | void ComM_EcuM_PNCWakeUpIndication (PNCHandleType PNCid)
        Service ID [hex]   | 0x37
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant
        Parameters (in)    | PNCid | Identifier of the partial network cluster
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | Notification of a wake up on the corresponding partial network cluster.
        Available via      | ComM_EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PNC_Wakeup</srcid><srcstatus/><internalId>2174</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2796</srcid><srcstatus/><internalId>1092</internalId></linkedfrom></coveredby></needscov>      
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_EcuM_PNCWakeUpIndication.HeaderFile</srcid><srcstatus/><internalId>844</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_CONSTR_00001</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        ComM channel's that are referenced by a PNC are not allowed to be referenced by any ComMUsers,
        if the PNC references at least one EthIfSwitchPortGroup (see figure [REF] "use Case 6"). A
        configuration tool shall reject such a configuration as invalid (error). This constraint is
        only valid for a host ecu that control an Ethernet switch. In all other UseCases ComMChannels
        can be referenced by a PNC's and ComMUsers.
      </description>
      <comment>
        This requirement is informational only.
        Rationale: If using PNC and SwitchPortGroups were derived
        (EcuInstance.ethSwitchPortGroupDerivation==TRUE),
        then the SwitchPortGroups are switched by the
        EthIf_SwitchPortGroupRequestMode API and not
        by a channel request.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComM_EcuM_PNCWakeUpIndication(&lt;PNC&gt;) (see SWS_ComM_91001) is called in sub-state
        COMM_NO_COM_NO_PENDING_REQUEST and configuration parameters ComMSynchronousWakeUp=FALSE (
        ECUC_ComM_00695) and ComMPncSupport=TRUE (ECUC_ComM_00839), the ComM module shall switch these
        ComM channel state machines (resp. channels) which are referenced by the PNC to sub-state
        COMM_NO_COM_REQUEST_PENDING.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1520</srcid><srcstatus/><internalId>1333</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_VLAN_1</srcid><srcstatus/><internalId>2330</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_3</srcid><srcstatus/><internalId>1730</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComM_EcuM_PNCWakeUpIndication(&lt;PNC&gt;) (see SWS_ComM_91001) is called in sub-state
        COMM_NO_COM_NO_PENDING_REQUEST and configuration parameters ComMSynchronousWakeUp=TRUE (
        ECUC_ComM_00695) and ComMPncSupport=TRUE (see ECUC_ComM_00839), the ComM module shall switch
        all ComM channel state machines (resp. channels) to sub-state COMM_NO_COM_REQUEST_PENDING.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3917</srcid><srcstatus/><internalId>1151</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00893</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMManageReference
        Parent Container: ComMChannel
        Description:      Represents the reference between a ComMChannel with role managing channel and a ComMChannel with role managed channel.
        Multiplicity:     0..1
        Type:             Reference to [ ComMChannel ]
        Post-Build 
        Variant 
        Multiplicity:     false
        Post-Build 
        Variant Value:    false
        Multiplicity      Pre-compile time  X  All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Value             Pre-compile time  X All Variants
        Configuration     Link time         - 
        Class:            Post-build time   -
        Scope/Dependency: scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_908</srcid><srcstatus/><internalId>1517</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComMManageReferenceList</srcid><srcstatus/><internalId>852</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01016</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the indicated ComM channel is a managed channel, the ComM module shall request
        Nm_PassiveStartup(&lt;referencing managing channel&gt;) (see ECUC_ComM_00893) from the Network
        Management.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_WakeUpIndication</srcid><srcstatus/><internalId>564</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_PNCWakeUpIndication</srcid><srcstatus/><internalId>565</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_WakeUpIndication.ManagedChannel</srcid><srcstatus/><internalId>566</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_PNCWakeUpIndication.ManagedChannel</srcid><srcstatus/><internalId>567</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_NETWORK_REQUESTED and configuration parameter ComMNmVariant=
        SLAVE_ACTIVE (ECUC_ComM_00568) and no user request ComM_RequestComMode(&lt;user&gt;,
        COMM_FULL_COMMUNICATION), the ComM channel state machine shall switch to sub-state
        COMM_FULL_COM_READY_SLEEP.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SLAVE_ACTIVE_TRANSITIONS_1</srcid><srcstatus/><internalId>2183</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1030</srcid><srcstatus/><internalId>1273</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1102</srcid><srcstatus/><internalId>1287</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_2</srcid><srcstatus/><internalId>1745</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In state COMM_FULL_COMMUNICATION and configuration parameter ComMNmVariant=SLAVE_ACTIVE |
        SLAVE_PASSIVE and the Bus State Manager module indicates ComM_BusSm_BusSleepMode() (see
        SWS_ComM_91000), the ComM channel state machine shall switch to state COMM_NO_COMMUNICATION.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_01018.NmVariant.SLAVE_ACTIVE</srcid><srcstatus/><internalId>576</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_01018.NmVariant.SLAVE_PASSIVE</srcid><srcstatus/><internalId>577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_91000</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_BusSM_BusSleepMode
        Syntax             | void ComM_BusSM_BusSleepMode (NetworkHandleType Channel)
        Service ID [hex]   | 0x34
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant
        Parameters (in)    | Channel | Identification of the channel
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | Notification of the corresponding Bus State Manager that the actual bus mode is
                           | Bus-Sleep. Only applicable for ComM channels with ComMNmVariant set to SLAVE_ACTIVE or
                           | SLAVE_PASSIVE. E.g. LIN slaves (ComMNMVariant = SLAVE_ACTIVE) or Ethernet channels with OA TC10
                           | compliant Ethernet hardware which act as passive communication slave (ComMNMVariant =
                           | SLAVE_PASSIVE and EthTrcvActAsSlavePassiveEnabled set to TRUE)
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30008</srcid><srcstatus/><internalId>1997</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SlaveActive_SlavePassive_DET</srcid><srcstatus/><internalId>2069</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SLAVE_ACTIVE_TRANSITIONS_0</srcid><srcstatus/><internalId>2182</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SLAVE_PASSIVE_TRANSITIONS_1</srcid><srcstatus/><internalId>2185</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_COMM_BUSSM_BUSSLEEPMODE_WRONG_PARAM</srcid><srcstatus/><internalId>2188</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SLAVE_ACTIVE_TRANSITIONS_2</srcid><srcstatus/><internalId>2192</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2541</srcid><srcstatus/><internalId>1075</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.BUS_SM_SLEEP_INDICATION</srcid><srcstatus/><internalId>1705</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.SWS_ComM_91000</srcid><srcstatus/><internalId>806</internalId></linkedfrom><linkedfrom><srcid>dev.ComM.ComM_BusSM_BusSleepMode.HeaderFile</srcid><srcstatus/><internalId>845</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00890</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Module Name:                ComM
        Module Description:         Configuration of the ComM (Communications Manager) module.
        Post-Build Variant Support: true
        Supported Config Variants:  VARIANT-POST-BUILD, VARIANT-PRE-COMPILE
        Included Containers
        Container Name              |Multiplicity Scope | Dependency
        ComMConfigSet               |                  1| This container contains the configuration parameters and sub
                                    |                   | containers of the AUTOSAR ComM module.
        ComMGeneral                 |                  1| General configuration parameters of the Communication Manager.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_129</srcid><srcstatus/><internalId>1470</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00894</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMChannelPartitionRef
        Parent Container: ComMChannel
        Description:      Reference to EcucPartition, where the according ComMChannel is assigned to.
        Multiplicity:     0..1
        Type:             Reference to [ EcucPartition ]
        Post-Build 
        Variant 
        Multiplicity:     false
        Post-Build 
        Variant Value:    false
        Multiplicity      Pre-compile time  X  All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Value             Pre-compile time  X All Variants
        Configuration     Link time         - 
        Class:            Post-build time   -
        Scope/Dependency: scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_337</srcid><srcstatus/><internalId>1481</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM module shall apply appropriate mechanisms to allow calls of its APIs from other
        partitions than its main function, e.g. by providing a ComM satellite.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.BSWDistribution</srcid><srcstatus/><internalId>846</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        ComM shall interact with &lt;Bus&gt;SM (i.e. call &lt;Bus&gt;SM APIs) only in the partition, where the
        respective &lt;Bus&gt;SM module is assigned to.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_589</srcid><srcstatus/><internalId>1223</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_644</srcid><srcstatus/><internalId>1228</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1432</srcid><srcstatus/><internalId>1325</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1654</srcid><srcstatus/><internalId>1355</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        The ComM shall call signal related Com APIs (Com_SendSignal / Com_ReceiveSignal) only in the
        partition, where the respective ComSignal is handled by the Com module.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_TX_SAME_PARTITION</srcid><srcstatus/><internalId>2223</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_TX_ERA_DIFFERENT_PARTITION_SET_DATA_E_NOT_OK</srcid><srcstatus/><internalId>2225</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_534</srcid><srcstatus/><internalId>885</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_580</srcid><srcstatus/><internalId>889</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_656</srcid><srcstatus/><internalId>896</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_918</srcid><srcstatus/><internalId>906</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1011</srcid><srcstatus/><internalId>913</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1102</srcid><srcstatus/><internalId>919</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1196</srcid><srcstatus/><internalId>924</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00895</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMDynamicPncToChannelMappingSupport
        Parent Container: ComMGeneral
        Description:      Precompile time switch to enable the dynamic PNC-to-channel-mapping handling.
                          False: Dynamic PNC-to-channel-mapping is disabled 
                          True: Dynamic PNC-to-channel-mapping is enabled
        Multiplicity:     1
        Type:             EcucBooleanParamDef
        Default value:    false
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   - 
        Scope/Dependency: scope: ECU
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.DynamicPNCMapping</srcid><srcstatus/><internalId>832</internalId></linkedfrom><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1861</srcid><srcstatus/><internalId>1570</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00896</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name:             ComMDynamicPncToChannelMappingEnabled
        Parent Container: ComMChannel
        Description:      Channel-specific parameter to enable the dynamic PNC-to-channel-mapping feature.
                          False: Dynamic PNC-to-channel-mapping is disabled 
                          True: Dynamic PNC-to-channel-mapping is enabled
        Multiplicity:     0..1
        Type:             EcucBooleanParamDef
        Default Value:    fals3
        Post-Build 
        Variant 
        Multiplicity:     false
        Post-Build 
        Variant Value:    false
        Multiplicity      Pre-compile time  X VARIANT-PRE-COMPILE
        Configuration     Link time         X VARIANT-POST-BUILD
        Class:            Post-build time   -
        Value             Pre-compile time  X VARIANT-PRE-COMPILE
        Configuration     Link time         X VARIANT-POST-BUILD
        Class:            Post-build time   -
        Scope/Dependency: scope: local
                          dependency: Shall only be TRUE if ComMDynamicPncToChannelMappingSupport is TRUE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_307</srcid><srcstatus/><internalId>1480</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.DynamicPNCMapping</srcid><srcstatus/><internalId>832</internalId></linkedfrom><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>
    <specobject>
      <id>ComM.ECUC_ComM_00897</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name:              ComMSynchronizedPncShutdownEnabled
        Parent Container:  ComMGeneral
        Description:       Enables or disables support of synchronized PNC shutdown.        
                           FALSE: synchronized PNC shutdown is disabled 
                           TRUE: synchronized PNC shutdown is enabled 
                           NOTE: This is only possible for ECU that has the role of an 
                           top-level PNC coordinator or intermediate PNC within the PNC network
        Multiplicity:      0..1
        Type:              EcucBooleanParamDef 
        Default value:     false 
        Post-Build Variant 
        Multiplicity:      false
        Post-Build Variant 
        Value:             false
        Multiplicity       
        Configuration      
        Class:             Pre-compile time: X  All Variants 
                           Link time:        --
                           Post-build time   --
        Value 
        Configuration 
        Class:             Pre-compile time: X  All Variants 
                           Link time:        --
                           Post-build time:  --
        Scope/Dependency:  scope: local 
                           dependency: Parameter can only be set to TRUE if ComMPncGatewayEnabled is set to TRUE.                   
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2074</srcid><srcstatus/><internalId>1582</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>

    <specobject>
      <id>ComM.ECUC_ComM_00898</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name:               ComMWakeupSleepRequestEnabled
        Parent Container:   ComMChannel
        Description:        Used for communication channels where the corresponding hardware support wake-up and/or 
                            sleep request capability on the network, e.g. OA TC10 compatible PHYs for Ethernet.        
                             
        Multiplicity:       0..1 
        Type:               EcucBooleanParamDef 
        Default value:      false 
        Post-Build Variant 
        Multiplicity:       false 
        Post-Build Variant 
        Value:              false                             
        Multiplicity 
        Configuration 
        Class:              Pre-compile time X  All Variants 
                            Link time        -- 
                            Post-build time  --
        Value               
        Configuration       
        Class:              Pre-compile time X  All Variants 
                            Link time        --
                            Post-build time  --
        Scope / Dependency: scope: local 
                            dependency: 
                            Only applicable if ComMBusType equals COMM_BUS_TYPE_ETH and the 
                            used Ethernet hardware (e.g. PHY, Ethernet switch) is compatible with the OA TC10 specification.        
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_593</srcid><srcstatus/><internalId>1496</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_08</srcid><srcstatus/><internalId>2341</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>              
    
    <specobject>
      <id>ComM.ECUC_ComM_00899</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, R21-11</source>
      <version>1</version>
      <description>
        Name:               ComMPncWakeupSleepRequestEnabled
        Parent Container:   ComMPnc
        Description:        Used for PNCs where a requested PNC shall report an active communication request towards the BswM. 
                            The BswM forward the active communication request to the lower layer 
                            communication channels where the used hardware support wake-up and/or sleep request capability on the network, 
                            e.g. OA TC10 compatible PHYs for Ethernet. This is used e.g. for Ethernet Switch port group switching.
        Multiplicity:       0..1 
        Type:               EcucBooleanParamDef 
        Default value:      false 
        Post-Build Variant 
        Multiplicity:       false 
        Post-Build Variant 
        Value:              false                             
        Multiplicity 
        Configuration 
        Class:              Pre-compile time X  All Variants 
                            Link time        -- 
                            Post-build time  --
        Value               
        Configuration       
        Class:              Pre-compile time X  All Variants 
                            Link time        --
                            Post-build time  --
        Scope / Dependency: scope: local 
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1016</srcid><srcstatus/><internalId>1523</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_01</srcid><srcstatus/><internalId>2334</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_04</srcid><srcstatus/><internalId>2337</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_05</srcid><srcstatus/><internalId>2338</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_06</srcid><srcstatus/><internalId>2339</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>                  
    
    <specobject>
      <id>ComM.SWS_ComM_01022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If more than one PNC is assigned to the affected user, the function ComM_GetCurrentPNCComMode
        shall return COMM_E_MULTIPLE_PNC_ASSIGNED as ComMode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1724</srcid><srcstatus/><internalId>1036</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GETCURRENT_PNC_COMM_MODE_Conformance</srcid><srcstatus/><internalId>1996</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>

    <specobject>
      <id>ComM.SWS_ComM_01023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If no PNC is assigned to the affected user, the function ComM_GetCurrentPNCComMode shall return
        COMM_E_NO_PNC_ASSIGNED as ComMode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1719</srcid><srcstatus/><internalId>1035</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GETCURRENT_PNC_COM_MODE_PNC_DISABLED</srcid><srcstatus/><internalId>1954</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GETCURRENT_PNC_COMM_MODE_Conformance</srcid><srcstatus/><internalId>1996</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01024</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If [SWS_ComM_01022] and [SWS_ComM_01023] do not apply, the function shall query for the current
        communication mode of the corresponding PNC statemachine the user is assigned to. If the
        corresponding PNC statemachine is in main state COMM_PNC_FULL_COMMUNICATION, then the function
        shall return COMM_FULL_COMMUNICATION as ComMode. If the corresponding PNC statemachine is main
        state COMM_PNC_NO_COMMUNCATION, then the function shall return COMM_NO_COMMUNICATION as ComMode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.ComM_GetCurrentPNCComMode.ReturnedComMode.COMM_FULL_COMMUNICATION</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.ComM_GetCurrentPNCComMode.ReturnedComMode.COMM_NO_COMMUNICATION</srcid><srcstatus/><internalId>704</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01025</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Configuration of ComM_GetCurrentPNCComMode: Relationship between users and PNCs. A user is
        statically mapped to one or more PNCs.
      </description>
      <comment>
        This requirement is informational only.
      </comment>      
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If the function ComM_Nm_PncLearningBitIndication has been called on a channel where
        ComMDynamicPncToChannelMappingEnabled is set to TRUE or when ComM calls Nm_PnLearningRequest on
        a channel ComM shall set the PNC Learning Phase to active for the according channel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMPncGatewayEnabled is set to TRUE and the function ComM_Nm_PncLearningBitIndication has
        been called on a channel where ComMDynamicPncToChannelMappingEnabled is set to TRUE ComM shall
        forward the Learning Request by calling Nm_PnLearningRequest on all further ComM channels where
        ComMPncGatewayType is set to COMM_GATEWAY_TYPE_ACTIVE and ComMDynamicPncToChannelMappingEnabled
        is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMDynamicPncToChannelMappingEnabled is set to TRUE and function
        ComM_Nm_RepeatMessageLeftIndication has been called ComM shall set the PNC Learning Phase to
        inactive for the according channel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMPncGatewayEnabled and ComMPncDynamicMappingSupport are set to TRUE and when the PNC
        Learning Phase is active, then ComM shall forward received ERA Rx information on channels where
        ComMPncDynamicMappingEnabled is set to TRUE. Therefore, ComM shall set the affected PN bit(s)
        to the assigned Com signals with ComMPncComSignalDirection "TX" on all other channels where
        ComMPncDynamicMappingEnabled is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01031</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMPncGatewayEnabled is set to TRUE and when the PNC Learning Phase is active and an ERA Rx
        Signal is received on a channel where ComMDynamicPncToChannelMappingEnabled is set to TRUE ComM
        shall set PNC-to-channel Mapping to 1 for every ComMPnc on the according channel where this ERA
        Rx Signal has been received with 1 for the according PNC.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMPncGatewayEnabled is set to FALSE and when the PNC Learning Phase is active, the ComM
        shall send for all ComM channels where ComMDynamicPncToChannelMappingEnabled is set to TRUE the
        assigned Com signals with ComMPncComSignalDirection "TX" with the value of the current PNC
        membership.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMPncGatewayEnabled is set to TRUE and when the PNC Learning Phase is active, the ComM
        shall send for all ComM channels where ComMDynamicPncToChannelMappingEnabled is set to TRUE the
        assigned Com signals with ComMPncComSignalDirection "TX" with the value of the current PNC
        membership merged with the PNC information that needs to be forwarded according to [
        SWS_ComM_01030]
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01034</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Function ComM_GetPncMappingTable shall be only available if ComMPncGatewayEnabled and
        ComMDynamicPncToChannelMappingSupport are set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMDynamicPncToChannelMappingEnabled is set to TRUE on at least one channel and when PNC
        learning phase is active, then the function ComM_GetPncMappingTable shall return with
        COMM_E_LEARNING_ACTIVE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMDynamicPncToChannelMappingEnabled is set to TRUE on at least one channel and when PNC
        learning phase is not active, then the function ComM_GetPncMappingTable shall provide within
        MappingTable the current PNC-to-channel mapping as a two-dimensional array where on first
        dimension all ComM channels where ComMPncGatewayType is set are handled according to their
        derived order in ComM and on second dimension all configured ComMPnc according to their order
        given by their ComMPncId. ComM shall also set the parameter ChannelCnt and PncCnt accordingly
        and return with E_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Function ComM_UpdatePncMappingTable shall be only available if ComMPncGatewayEnabled and
        ComMDynamicPncToChannelMappingSupport are set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        EB_Note: Requirement info can refer in PDF document as not available in arxml file
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMDynamicPncToChannelMappingEnabled is set to TRUE on at least one channel, when passed
        parameters match (see [SWS_ComM_01038]) and when PNC learning phase is active, then the
        function ComM_UpdatePncMappingTable shall return with COMM_E_LEARNING_ACTIVE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMDynamicPncToChannelMappingEnabled is set to TRUE on at least one channel, when passed
        parameters match (see [SWS_ComM_01038]) and PNC learning phase is not active, then the function
        ComM_UpdatePncMappingTable shall merge for all PNCs the provided information with their current
        PNC-to-channel mappings whereby MappingTable shall be interpreted as a two-dimensional array
        with on first dimension all ComM channels where ComMPncGatewayType is set are handled according
        to their derived order in ComM and on second dimension all configured ComMPnc according to
        their order given by their ComMPncId. Additionally it shall return with E_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Function ComM_ResetPncToChannelMapping shall be only available if ComMPncGatewayEnabled and
        ComMDynamicPncToChannelMappingSupport are set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMDynamicPncToChannelMappingEnabled is set to TRUE on at least one channel and when PNC
        learning phase is active, then the function ComM_ResetPncToChannelMapping shall return with
        COMM_E_LEARNING_ACTIVE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01043</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMDynamicPncToChannelMappingEnabled is set to TRUE on at least one channel and when PNC
        learning phase is not active, then the function ComM_ResetPncToChannelMapping shall set the PNC-
        to-channel mappings to the default values from the original configuration (i.e. static entries)
        and return with E_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Function ComM_PnLearningRequest shall be only available if
        ComMDynamicPncToChannelMappingSupport is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01045</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMDynamicPncToChannelMappingSupport is set to TRUE on at least one channel and when PNC
        learning phase is active, then the function ComM_ResetPncToChannelMapping shall return with
        COMM_E_LEARNING_ACTIVE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01046</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMDynamicPncToChannelMappingSupport is set to TRUE on at least one channel and when the
        PNC learning phase is not active, then the function ComM_PnLearningRequest shall call the API
        Nm_PnLearningRequest on all channels where ComMDynamicPncToChannelMappingEnabled is set to TRUE
        and return with E_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Function ComM_UpdatePncMembership shall be only available if
        ComMDynamicPncToChannelMappingSupport is set to TRUE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMDynamicPncToChannelMappingSupport is set to TRUE on at least on channel and when PNC
        learning phase is active, then the function ComM_UpdatePncMembership shall return with
        COMM_E_LEARNING_ACTIVE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01049</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMDynamicPncToChannelMappingEnabled is set to TRUE on at least on channel and PNC Learning
        phase is not active, then the function ComM_UpdatePncMembership shall perform the following
        actions:
        When Control = 0, then the current PNC membership shall be applied with logical AND (
        conjunction) operation on the parameter ComM_PncMembership (This would only unset the bits out
        of the PncBitMask)
        When Control = 1, then the current PNC membership shall be applied with logical OR (disjunction)
        operation on the parameter ComM_PncMembership (This would only set the bits out of the
        PncBitMask)
        Return with E_OK.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01050</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If a request to forward a synchronized PNC shutdown has been indicated via a call of
        ComM_Nm_ForwardSynchronizedPncShutdown(&lt;channel&gt;), the indicated channel is assigned to this
        PNC, this PNC is qualified to be released for the indicated channel (ComMPncComSignal received
        by Com_ReceiveSignal()with signal attributes ComMPncComSignalDirection == "RX" and
        ComMPncComSignalKind == "ERA" changed to "0"), the indicated channel has ComMPncGatewayType set
        to COMM_GATEWAY_TYPE_PASSIVE, ComMSynchronizedPncShutdownEnabled is set to TRUE and all ComM
        channels which are assigned to this PNC reside in COMM_FULL_COMMUNICATION, then the ComM module
        shall perform the following actions:
        If all ComM users assigned to this PNC request "No Com", all ComMPncComSignals received by
        Com_ReceiveSignal() from all channels which are assigned to this PNC where the signal
        attributes ComMPncComSignalDirection == "RX" and ComMPncComSignalKind == "ERA" and the channel
        attribute ComMPncGatewayType == "COMM_GATEWAY_TYPE_ACTIVE" are set to "0", ComM shall call
        Nm_RequestSynchronizedPncShutdown (&lt;channel&gt;, &lt;PncId&gt;) for each of those &lt;channel&gt; with &lt;PncId&gt;
        of the current handled PNC
        The sub state COMM_PNC_REQUESTED shall be left and the sub state COMM_PNC_READY_SLEEP shall be
        entered
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.SynchronizedPncShutDown.ComM_Nm_ForwardSynchronizedPncShutdown</srcid><srcstatus/><internalId>848</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR21-11.SWS_ComM_01082</srcid><srcstatus/><internalId>466</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01051</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If a request to forward a synchronized PNC shutdown has been indicated via a call of
        ComM_Nm_ForwardSynchronizedPncShutdown(&lt;channel&gt;) for this PNC, the PNC is qualified to be
        released and the precondition to forward the synchronized PNC request are not fullfield (at
        least one ComM user request Full Com for this PNC or at least one ComM channel assigned to this
        PNC has ComMPncComSignal set to "1" where the signal attributes ComMPncComSignalDirection == "
        RX" and ComMPncComSignalKind == "ERA" and the channel attribute ComMPncGatewayType == "
        COMM_GATEWAY_TYPE_ACTIVE", see [SWS_ComM_01050]), then the ComM modul shall reject to perform
        the forwarding of a synchronized PNC shutdown and stay in sub state COMM_PNC_REQUESTED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.SynchronizedPncShutDown.ComM_Nm_ForwardSynchronizedPncShutdown</srcid><srcstatus/><internalId>848</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR21-11.SWS_ComM_01082</srcid><srcstatus/><internalId>466</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01052</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If ComMSynchronizedPncShutdownEnabled is set to TRUE, all ComM channels which are assigned to
        this PNC have ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE, all ComM channels which are
        assigned to this PNC reside in COMM_FULL_COMMUNICATION, the according PNC bit in all ERAn is
        equal to 0 and all ComMUsers assigned to this PNC request "No Communication", the API
        Nm_RequestSynchronizedPncShutdown (&lt;channel&gt;, &lt;PncId&gt;) shall be called, whereat &lt;channel&gt;
        represent the current handled ComMChannel and &lt;PncId&gt; the ComMPncId of this PNC.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR21-11.SWS_ComM_01083</srcid><srcstatus/><internalId>467</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01053</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        When entering the PNC sub state COMM_PNC_REQUESTED from COMM_PNC_NO_COM or
        COMM_PNC_PREPARE_SLEEP, and ComMPncWakeupSleepRequestEnabled of this PNC is set to TRUE,
        BswM_ComM_CurrentPNCMode shall be called with COMM_PNC_REQUESTED_WITH_WAKEUP_REQUEST, instead
        of calling BswM_ComM_CurrentPNCMode with COMM_PNC_REQUESTED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR21-11.SWS_ComM_01067</srcid><srcstatus/><internalId>469</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01054</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Every time the sub state COMM_PNC_REQUESTED is entered from COMM_PNC_NO_COM or
        COMM_PNC_PREPARE_SLEEP, ComM shall request COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST for all
        configured ComM channels for this PNC, where ComMWakeupSleepRequestEnabled is set to TRUE, even
        if the channel is already requested.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR21-11.SWS_ComM_01070</srcid><srcstatus/><internalId>471</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01055</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Every time the sub state COMM_PNC_REQUESTED is entered from COMM_PNC_READY_SLEEP, ComM shall
        request COMM_FULL_COMMUNICATION for all configured ComM channels for this PNC, where
        ComMWakeupSleepRequestEnabled is set to TRUE, even if the channel is already requested.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR21-11.SWS_ComM_01071</srcid><srcstatus/><internalId>472</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_01056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, R21-11</source>
      <version>1</version>
      <description>
        Requests for communication mode COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST shall be handled as 
        request for COMM_FULL_COMMUNICATION within the ComM channel state machine. 
        Deviations of ComM channel machine state transitions and behavior within the 
        states are specified explicitly.(SRS_ModeMgm_09268)    
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_226</srcid><srcstatus/><internalId>1451</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_12</srcid><srcstatus/><internalId>2345</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>
    <specobject>
      <id>SWS_ComM_01057</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, R21-11</source>
      <version>1</version>
      <description>
        Every time a ComM channel is requested with COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST and 
        ComMWakeupSleepRequestEnabled of the ComM channel is set to TRUE, 
        ComM shall request the corresponding network of the ComM channel by calling
        BusSM_RequestComMode(COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST), 
        even if the ComM channel is already in state COMM_FULL_COMMUNICATION. 
        If ComMWakeupSleepRequestEnabled of the ComM channel is set to FALSE or not available, the ComM shall ignore the request.
        (SRS_ModeMgm_09268)
      </description>
      <comment>
        The re-trigger of the BusSM state machine is used to trigger a wake-up on the network, 
        if the used hardware is supporting such a functionality (e.g. Ethernet hardware compliant to OA TC10)
      </comment>        
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_641</srcid><srcstatus/><internalId>1225</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_16</srcid><srcstatus/><internalId>2349</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_17</srcid><srcstatus/><internalId>2350</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_18</srcid><srcstatus/><internalId>2351</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_19</srcid><srcstatus/><internalId>2352</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_20</srcid><srcstatus/><internalId>2353</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_21</srcid><srcstatus/><internalId>2354</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ConTest_WakeupOnDataLine_SchM_02</srcid><srcstatus/><internalId>2359</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FullCommunicationAction1</srcid><srcstatus/><internalId>1785</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>    
    <specobject>
      <id>ComM.SWS_ComM_91002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_GetCurrentPNCComMode
        Syntax             | Std_ReturnType ComM_GetCurrentPNCComMode (ComM_UserHandleType User, ComM_ModeType* ComMode)
        Service ID [hex]   | 0x6a
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant
        Parameters (in)    | User | Handle of the user who requests a mode
        Parameters (inout) | None
        Parameters (out)   | ComMode | See ComM_ModeType
        Return value       | Std_ReturnType | E_OK: Successfully returned Communication Mode from Bus State Manager
                           |                | E_NOT_OK: Return of Communication Mode from Bus State Manager failed
                           |                | COMM_E_MULTIPLE_PNC_ASSIGNED: Function could not provide the current mode of the PNC,
                           |                |                               since multiple PNCs are assigned to the affected user
                           |                | COMM_E_NO_PNC_ASSIGNED: Function could not
                           |                |                         provide the current mode of the PNC, since no PNC is assigned to the affected user
        Description        | The function returns the current Communication Mode of the corresponding PNC the
                           | affected user is assigned to.
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.ComM_GetCurrentPNCComMode.SID</srcid><srcstatus/><internalId>849</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.ComM_GetCurrentPNCComMode</srcid><srcstatus/><internalId>702</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_91003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_Nm_ForwardSynchronizedPncShutdown (draft)
        Syntax             | void ComM_Nm_ForwardSynchronizedPncShutdown (NetworkHandleType Channel)
        Service ID [hex]   | 0x6b
        Sync/Async         | Synchronous
        Reentrancy         | Reentrant
        Parameters (in)    | Channel | Channel
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | If an ECU in role of an intermediate PNC coordinator receives a PN shutdown
                           | message via a &lt;Bus&gt;Nm, then ComM is immediately indicated via
                           | ComM_Nm_ForwardSynchronizedPncShutdown to forward the request for a synchronized PNC shutdown
                           | of the affected PNCs. Therefore, ComM will immediately release the affected PNC state machines
                           | and forward the PN information to the affected ComM Channels and the corresponding NM channels,
                           | respectively. Note: This supports a nearly synchronized PNC shutdown across the PN topology
                           | from the top-level PNC coordinator down to the subordinated PNC node. Tags:atp.Status=draft
        Available via      | ComM_Nm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.SynchronizedPncShutDown.ComM_Nm_ForwardSynchronizedPncShutdown</srcid><srcstatus/><internalId>848</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.ASR21-11.SWS_ComM_91030</srcid><srcstatus/><internalId>468</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_91013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_GetPncToChannelMapping (draft)
        Syntax             | Std_ReturnType ComM_GetPncToChannelMapping (boolean* MappingTable, uint8* ChannelCnt, uint8* PncCnt)
        Service ID [hex]   | 0x68
        Sync/Async         | Synchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | None
        Parameters (inout) | None
        Parameters (out)   | MappingTable | Pointer to two-dimensional array with the current Pnc-to-
                           |              | channel-mapping of the PNC Gateway where the first dimension covers all relevant channels and
                           |              | the second all relevant PNCs.
                           | ChannelCnt   | Pointer to number of ComM channels that are passed in the MappingTable parameter.
                           | PncCnt       | Pointer to number of PNCs, that are passed in the MappingTable parameter.
        Return value       | Std_ReturnType | E_OK: Successfully get PNC-to-channel-mapping entry
                           |                | E_NOT_OK: Getting of PNC-to-channel-mapping entry failed
                           |                | COMM_E_LEARNING_ACTIVE: Functionality cannot be executed because PNC learning phase is active.
        Description        | This function returns the current configuration of the ECUs PNC-to-channel-mapping. Tags:atp.Status=draft
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_91015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name | ComM_UpdatePncToChannelMapping (draft)
        Syntax
        Std_ReturnType ComM_UpdatePncToChannelMapping (const boolean* MappingTable, uint8 channelCnt,
        uint8 PncCnt)
        Service ID [hex] | 0x62
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in)     | MappingTable | Pointer to two-dimensional array with the current Pnc-to-
                            |              | channel-mapping of the PNC Gateway where the first dimension covers all relevant channels and
                            |              | the second all relevant PNCs.
                            | channelCnt   | Number of physical channels passed in the MappingTable
                            | PncCnt       | Number of PNCs passed in the MappingTable
        Parameters (inout)  | None
        Parameters (out)    | None
        Return value        | Std_ReturnType | E_OK: Successfully set PNC-to-channel-mapping entry
                            |                | E_NOT_OK: Set of PNC-to-channel-mapping entry failed
                            |                | COMM_E_LEARNING_ACTIVE: Functionality cannot be
                            |                | executed because PNC learning phase is active.
        Description         | This function can be used to set entries within the the ECUs PNC-to-channel-mapping Tags:atp.Status=draft
        Available via       | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_91017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_ResetPncToChannelMapping (draft)
        Syntax             | Std_ReturnType ComM_ResetPncToChannelMapping (void)
        Service ID [hex]   | 0x63
        Sync/Async         | Synchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | None
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | Std_ReturnType | E_OK: Successfully reset PNC-to-channel-mapping to default
                           |                | E_NOT_OK: Reset of PNC-to-channel-mapping to default failed
                           |                | COMM_E_LEARNING_ACTIVE: Functionality cannot be executed because PNC learning phase is active.
        Description        | This function resets dynamic entries within the ECUs PNC-to-channel-mapping to default values Tags:atp.Status=draft
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_91019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_PnLearningRequest (draft)
        Syntax             | Std_ReturnType ComM_PnLearningRequest (void)
        Service ID [hex]   | 0x64
        Sync/Async         | Asynchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | None
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | Std_ReturnType | E_OK: Successfully started PNC Learning algorithm
                           |                | E_NOT_OK: PNC Learning algorithm could not be started
                           |                | COMM_E_LEARNING_ACTIVE: Functionality cannot be executed
                           |                |                         because PNC learning phase is active.
        Description        | Triggers the NM to return into NM Repeat Message State and send the Partial
                           | Network Learning Bit (in order for receiving nodes to respond) together with the Repeat Message
                           | Request Bit (in order for receiving nodes to return into NM Repeat Message State). This
                           | function is used for the optional Dynamic PNC-to-channel-mapping feature. Tags:atp.Status=draft
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_91021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_UpdatePncMembership (draft)
        Syntax             | Std_ReturnType ComM_UpdatePncMembership (boolean Control, const uint8* ComM_PncMembership)
        Service ID [hex]   | 0x65
        Sync/Async         | Synchronous
        Reentrancy         | Non Reentrant
        Parameters (in)    | Control            | Boolean Parameter: 0 = Unset the corresponding Bits in PncBitMask 1
                           |                    | Set the corresponding Bits in PncBitMask
                           | ComM_PncMembership | Array of uint8 with &lt;PNC Vector Length&gt; Elements that holds the current
                           |                    | PNC Membership of the node
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | Std_ReturnType | E_OK: ComM_PncMembership successfully updated
                           |                | E_NOT_OK: Error occurred while updating ComM_PncMembership.
                           |                | COMM_E_LEARNING_ACTIVE: Functionality cannot be executed because PNC learning phase is active.
        Description        | This function is used by SWCs to update the PNC membership which is transmitted
                           | during PNC Learning. This function is used for the optional Dynamic PNC-to-channel-mapping
                           | feature. This function is used for the optional Dynamic PNC-to-channel-mapping feature. Tags: atp.Status=draft
        Available via      | ComM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_91024</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_Nm_RepeatMessageLeftIndication (draft)
        Syntax             | void ComM_Nm_RepeatMessageLeftIndication (NetworkHandleType Channel)
        Service ID [hex]   | 0x66
        Sync/Async         | Asynchronous
        Reentrancy         | Reentrant
        Parameters (in)    | Channel | See NetworkHandleType
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | Notification that the state of all &lt;BusNm&gt; has left RepeatMessage. This interface
                           | is used to indicate by the optional Dynamic PNC-to-channel-mapping feature to indicate that
                           | learning phase ends. Tags:atp.Status=draft
        Available via      | ComM_Nm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_91026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Service Name       | ComM_Nm_PncLearningBitIndication (draft)
        Syntax             | void ComM_Nm_PncLearningBitIndication (NetworkHandleType Channel)
        Service ID [hex]   | 0x69
        Sync/Async         | Asynchronous
        Reentrancy         | Reentrant
        Parameters (in)    | Channel | See NetworkHandleType
        Parameters (inout) | None
        Parameters (out)   | None
        Return value       | None
        Description        | Service to indicate that an NM message with set PNC Learning Bit has been
                           | received. Tags:atp.Status=draft
        Available via      | ComM_Nm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>
    
    <specobject>
      <id>ComM.SWS_ComM_91027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Range: COMM_E_MODE_LIMITATION        2 Function call has been successful but mode 
                                               can not be granted because of mode inhibition.
               COMM_E_MULTIPLE_PNC_ASSIGNED  3 Function could not provide the current mode of the PNC, 
                                               since multiple PNCs are assigned to the affected user
               COMM_E_NO_PNC_ASSIGNED        4 Function could not provide the current mode of the PNC, 
                                               since no PNC is assigned to the affected user
               COMM_E_LEARNING_ACTIVE        5 Function call has been successfully, 
                                               but functionality cannot be executed because PNC learning phase is active.        
        Available via: ComM_Nm.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00649.COMM_E_MODE_LIMITATION</srcid><srcstatus/><internalId>504</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00649.COMM_E_MULTIPLE_PNC_ASSIGNED</srcid><srcstatus/><internalId>506</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_00649.COMM_E_NO_PNC_ASSIGNED</srcid><srcstatus/><internalId>507</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>    
    
    <specobject>
      <id>ComM.SWS_ComM_91100</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name | ComM_UpdatePncMembershipUpdatePncMembership
        Comment | Clear (Control = FALSE) or Add (Control = TRUE) values of the PNC Membership
        IsService | true
        Variation | {ecuc(ComM/ComMGeneral/ComMDynamicPncToChannelMappingSupport)} == true
        Data Elements | Control
                      | Type          | boolean
                      | Variation     | --
                      | PncMemberShip | 
                      | Type          | ComM_PncMembershipType
                      | Variation     | --
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_91101</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name          | ComM_PnLearningRequestPnLearningRequest
        Comment       | --
        IsService     | true
        Variation     | {ecuc(ComM/ComMGeneral/ComMDynamicPncToChannelMappingSupport)} == true
        Data Elements | NetworkHandle
                      | Type      | NetworkHandleType
                      | Variation |
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_91102</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        ---------------------------------------------------------------------------------------------------
        Name            | ComM_PncToChannelMapping
        Comment         | Client-server interface to get, update or clear the PNC-to-channel-mapping
        IsService       | true
        Variation       | {ecuc(ComM/ComMGeneral/ComMDynamicPncToChannelMappingSupport)} == true
        Possible Errors | 0 | E_OK              | Operation successful
                        | 1 | E_NOT_OK          | Operation failed
                        | 5 | E_LEARNING_ACTIVE | Operation not possible as PNC
                        |   |                   | Learning Phase is active
        ---------------------------------------------------------------------------------------------------                        
        Operation       | GetPncToChannelMappingPncToChannelMapping.GetPncToChannelMapping
        Comment         | Returns the current PNC-to-channel-mapping Tags:atp.Status=draft
        Variation       | --
        Parameters      | MappingTable
                        | Type      | boolean
                        | Direction | OUT
                        | Comment   | Pointer to two-dimensional array with the current Pnc-to-channel-mapping of the PNC
                        |           | Gateway where the first dimension covers all relevant channels and the second all relevant PNCs.
                        | Variation | --
                        | ChannelCnt 
                        | Type      | uint8
                        | Direction | OUT
                        | Comment   | --
                        | Variation | --
                        | PncCnt
                        | Type      | uint8
                        | Direction | OUT
                        | Comment   | --
                        | Variation |--
        Possible Errors | E_OK
                        | E_NOT_OK
                        | E_LEARNING_ACTIVE
        ---------------------------------------------------------------------------------------------------                        
        Operation       | ResetPncToChannelMapping
        Comment         | Resets the current PNC-to-channel mapping to its static configured default Tags:atp.
                        | Status=draft
        Variation       | -- 
        Possible Errors | E_OK
                        | E_NOT_OK
                        | E_LEARNING_ACTIVE
        ---------------------------------------------------------------------------------------------------                        
        Operation       | UpdatePncToChannelMappingPncToChannelMapping.UpdatePncToChannelMapping
        Comment         | Updates the current PNC-to-channel-mapping Tags:atp.Status=draft
        Variation       | --
        Parameters      | MappingTable
                        | Type      | boolean
                        | Direction | IN
                        | Comment   | Pointer to two-dimensional array with the current Pnc-to-channel-mapping of the PNC
                        |           | Gateway where the first dimension covers all relevant channels and the second all relevant PNCs.
                        | Variation | --
                        | channelCnt 
                        | Type      | uint8
                        | Direction | IN
                        | Comment   |  --
                        | Variation | --
                        | PncCnt
                        | Type      | uint8
                        | Direction | IN
                        | Comment   |
                        | Variation | --
        Possible Errors | E_OK
                        | E_NOT_OK
                        | E_LEARNING_ACTIVE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_91103</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name          | ComM_PncMembershipType
        Kind          | Const Pointer
        Type          | const uint8*
        Description   | Array of uint8 with &lt;PNC Vector Length&gt; Elements that holds the current PNC
                      | Membership of the node.
        Variation     | {ecuc(ComM/ComMGeneral/ComMDynamicPncToChannelMappingSupport)} == true
        Available via | Rte_ComM_Type.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_91105</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name        | UpdatePncMembership
        Kind        | ProvidedPort | Interface | UpdatePncMembership
        Description | --
        Variation   | {ecuc(ComM/ComMGeneral/ComMDynamicPncToChannelMappingSupport)} == true
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_91106</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name        | PnLearningRequestComM.PnLearningRequest
        Kind        | ProvidedPort | Interface | PnLearningRequest
        Description | --
        Variation   | {ecuc(ComM/ComMGeneral/ComMDynamicPncToChannelMappingSupport)} == true
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_91107</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        Name        | PncToChannelMapping
        Kind        | ProvidedPort | Interface | PncToChannelMapping
        Description | --
        Variation   | {ecuc(ComM/ComMGeneral/ComMDynamicPncToChannelMappingSupport)} == true
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.UnsupportedFunctionalities</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_CONSTR_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        If a ComM user reference a managed channel, then this ComM user shall also reference the
        corresponding managing channel. Otherwise the configuration is invalid. A configuration tool
        shall reject a confguration as invalid (error), if a user reference a managed channel without
        referencing the corresponding managing channel.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
         <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/ComM_Checks.m_41</srcid><srcstatus/><internalId>929</internalId></linkedfrom></coveredby></needscov>
         <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_Vlan_constaraint_0</srcid><srcstatus/><internalId>1856</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Vlan_constaraint_1</srcid><srcstatus/><internalId>1857</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Vlan_constaraint_2</srcid><srcstatus/><internalId>1858</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Vlan_constaraint_3</srcid><srcstatus/><internalId>1859</internalId></linkedfrom><linkedfrom><srcid>ComM_GenTest_14_XdmChecks</srcid><srcstatus/><internalId>1873</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>
    <specobject>
      <id>ComM.SWS_ComM_CONSTR_00003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        ComM channels with ComMNmVariant = SLAVE_PASSIVE are not allowed to be referenced by any
        ComMUser or PNC. A configuration tool shall reject such a configuration as invalid (error)
      </description>
      <comment>
        Rationale: ComM channels with ComMNmVariant = SLAVE_PASSIVE shall always follow the
        communication request of their communication master and are not allowed to request the
        corresponding master to wake-up the communication channel.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_CONSTR_00003.NmVariant.SLAVE_PASSIVE.User</srcid><srcstatus/><internalId>578</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.SWS_ComM_CONSTR_00003.NmVariant.SLAVE_PASSIVE.Pnc</srcid><srcstatus/><internalId>579</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
   <specobject>
      <id>ComM.ASR21-11.SWS_ComM_01082</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, R21-11</source>
      <version>1</version>
      <description>
        When a request to forward a synchronized PNC shutdown has been indicated via a call of ComM_Nm_ForwardSynchronizedPncShutdown(channel, PNC bit vector) 
        and all following conditions apply:
         - all ComM users assigned to this PNC request 'No Com',
         - all corresponding PNC bits are set to '0' in ERAn of all channels which are referenced by this PNC via ComMChannelPerPnc (see ECUC_ComM_00880) 
            where the channel attribute ComMPncGatewayType is set to COMM_GATEWAY_TYPE_ACTIVE,
         - the indicated channel of the ComM_Nm_ForwardSynchronizedPncShutdown call is assigned to this PNC and the PNC is indicated for a shutdown 
           (PNC bit set to '1' in the given PNC bit vector),
         - the indicated channel has ComMPncGatewayType set to COMM_GATEWAY_TYPE_PASSIVE and the channel is referenced via ComMChannelPerPnc (see ECUC_ComM_00880)
         - ComMSynchronizedPncShutdownEnabled is set to TRUE,
        then the ComM module shall perform the following actions:
         - ComM shall call Nm_RequestSynchronizedPncShutdown (channel, PncId) for each channel with PncId of the current handled PNC, 
           where ComMPncGatewayType is set to 'COMM_GATEWAY_TYPE_ACTIVE' and the channel is referenced via ComMChannelPerPnc (see ECUC_ComM_00880:)
         - The sub state COMM_PNC_REQUESTED shall be left and the sub state COMM_PNC_READY_SLEEP shall be entered
      </description>
      <comment>
         - Every time an intermediate PNC coordinator 
           (PNC coordinator which have at least one ComMChannel with ComMPncGatewayType set to COMM_GATEWAY_TYPE_PASSIVE) 
           receive an top-level PNC coordinator Nm frame, the ComM shall immediately release the PNC, 
           forward the PN information of the top-level PNC coordination Nm frame and request an 
           top-level PNC coordination Nm frame on ComMChannels with ComMPncGatewayType set to 
           COMM_GATEWAY_TYPE_ACTIVE which are assigned to the affected PNC
         - ComM has to ensure that the procedure upon the reception of a top-level PNC coordination Nm frame has 
           to be performed as fast as possible, to minimize the delay of the synchronized PNC shutdown
         - The forwarding of a synchronized PNC shutdown is not performed if a local user has 
           indicated to request the affected PNC, or a PNC request was received via a ComM channel with 
           ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE. 
           The request for a PNC either local requested or remotely requested always overrule a 
           request for a synchronized PNC shutdown.
      </comment>      
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.ASR21-11.SWS_ComM_01082.Nm_RequestSynchronizedPncShutdown</srcid><srcstatus/><internalId>580</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR21-11.SWS_ComM_01082.COMM_PNC_REQUESTED.To.COMM_PNC_READY_SLEEP</srcid><srcstatus/><internalId>581</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>        
      </providescoverage>      

    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>
    
    <specobject>
      <id>ComM.ASR21-11.SWS_ComM_01083</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, R21-11</source>
      <version>1</version>
      <description>
        If ComMSynchronizedPncShutdownEnabled is set to TRUE and ComMPncGatewayType set to 
        COMM_GATEWAY_TYPE_ACTIVE on all ComM channels assigned to this PNC, 
        the API Nm_RequestSynchronizedPncShutdown (channel, PncId) shall be called, 
        whereat channel represent the current handled ComMChannel and PncId the ComMPncId of 
        this PNC under the following conditions:
         - corresponding PNC bit in ERAn is equal to '0'
         - all ComMUsers assigned to this PNC request 'No Communication'
         - The channel is referenced via ComMChannelPerPnc (see ECUC_ComM_00880 :) by this PNC
      </description>
      <comment>
        Everytime a PNC is released, synchronized PNC shutdown is configured and the ECU 
        act as an top-level PNC coordinator 
        (all coordinated PNC are mapped to ComMChannels where ComMPncGatewayType is set to COMM_GATEWAY_TYPE_ACTIVE ) 
        a PN shutdown message has to be triggered. Therefore ComM forward the PN information regarding the detection of a
        released PNC to NmIf by calling Nm_RequestSynchronizedPncShutdown for each ComMChannel the PNC is assigned to. 
        NmIf is forwarding the call to the affected BusNm. 
        The PN shutdown message is transmitted within the BusNm_Mainfunction.
      </comment>      
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_548</srcid><srcstatus/><internalId>1415</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SynchronizedPncShutdown_Intermediate_To_Top_Level</srcid><srcstatus/><internalId>2049</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Top_Level_Coordinator_1</srcid><srcstatus/><internalId>2258</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Top_Level_Coordinator_3</srcid><srcstatus/><internalId>2260</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Intermediate_Coordinator_6</srcid><srcstatus/><internalId>2267</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Top_Level_Coordinator_5</srcid><srcstatus/><internalId>2268</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
      </providescoverage>       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>    


    <specobject>
      <id>ComM.ASR21-11.SWS_ComM_91030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, R21-11</source>
      <version>1</version>
      <description>
        Service Name:       ComM_Nm_ForwardSynchronizedPncShutdown
        Syntax:             void ComM_Nm_ForwardSynchronizedPncShutdown ( NetworkHandleType Channel, const uint8* PncBitVectorPtr )
        Service ID:         0x6b
        Sync/Async:         Synchronous
        Reentrancy:         Reentrant
        Parameters (in):    Channel         Channel
                            PncBitVectorPtr Pointer to PNC Bit vector with all PNC bits set to '1' 
                                            which are indicated for a synchronized PNC shutdown
        
        Parameters (inout): None
        Parameters (out):   None
        Return value:       None
        Description:        If an ECU in role of an intermediate PNC coordinator receives a PN shutdown message via a BusNm, 
                            then ComM is immediately indicated via ComM_Nm_ForwardSynchronizedPncShutdown to forward the request for a 
                            synchronized PNC shutdown of the affected PNCs given by PncBitVectorPtr. 
                            Therefore, ComM will immediately release the affected PNC state machines and 
                            forward the PN information to the affected ComM Channels and the corresponding NM channels, respectively. 
                            Note: This supports a nearly synchronized PNC shutdown across the PN topology from the 
                            top-level PNC coordinator down to the subordinated PNC node.
        Available via:      ComM_Nm.h
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2463</srcid><srcstatus/><internalId>1074</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SynchronusShutDown_DET_1</srcid><srcstatus/><internalId>2045</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Intermediate_Coordinator_4</srcid><srcstatus/><internalId>2265</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>
    
    <specobject>
      <id>ComM.ASR21-11.SWS_ComM_01067</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, R21-11</source>
      <version>1</version>
      <description>
        When entering the PNC sub state COMM_PNC_REQUESTED from COMM_PNC_NO_COM or COMM_PNC_PREPARE_SLEEP, 
        this PNC reference at least one ComMChannel via ComMChannelPerPnc (see ECUC_ComM_00880 : ) and 
        ComMPncWakeupSleepRequestEnabled of this PNC is set to TRUE, 
        BswM_ComM_CurrentPNCMode shall be called with COMM_PNC_REQUESTED_WITH_WAKEUP_REQUEST, 
        instead of calling BswM_ComM_CurrentPNCMode with COMM_PNC_REQUESTED.( SRS_ModeMgm_09268)
      </description>
      <comment>
        Notification towards the BswM with COMM_PNC_REQUESTED_WITH_WAKEUP_REQUEST is used for Ethernet switch port switching to 
        trigger a wake-up on the network where the used Ethernet hardware is compatible to the OA TC10      
      </comment>      
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.ASR21-11.SWS_ComM_01067.COMM_PNC_NO_COM.To.COMM_PNC_REQUESTED</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR21-11.SWS_ComM_01067.COMM_PNC_PREPARE_SLEEP.To.COMM_PNC_REQUESTED</srcid><srcstatus/><internalId>583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>            
    
    <specobject>
      <id>ComM.ASR21-11.SWS_ComM_01069</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, R21-11</source>
      <version>1</version>
      <description>
        Every time the sub state COMM_PNC_REQUESTED is entered from other states, 
        ComM shall request COMM_FULL_COMMUNICATION for all configured ComM channels which are 
        referenced by this PNC via parameter ComMChannelPerPnc (see ECUC_ComM_00880 : ) 
        and where ComMWakeupSleepRequestEnabled is set to FALSE or not available, 
        even if the channel is already requested(SRS_ModeMgm_00049)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.ASR21-11.SWS_ComM_01069.COMM_PNC_REQUESTED.Entry</srcid><srcstatus/><internalId>584</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>                
    
    <specobject>
      <id>ComM.ASR21-11.SWS_ComM_01070</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, R21-11</source>
      <version>1</version>
      <description>
        Every time the sub state COMM_PNC_REQUESTED is entered from COMM_PNC_NO_COM or COMM_PNC_PREPARE_SLEEP, 
        ComM shall request COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST for all configured ComM 
        channels which are referenced by this PNC via parameter ComMChannelPerPnc (see ECUC_ComM_00880 : ) and 
        where ComMWakeupSleepRequestEnabled is set to TRUE, even if the channel is already requested( SRS_ModeMgm_09268)
      </description>
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.ASR21-11.SWS_ComM_01070.COMM_PNC_NO_COM.To.COMM_PNC_REQUESTED</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.ASR21-11.SWS_ComM_01070.COMM_PNC_PREPARE_SLEEP.To.COMM_PNC_REQUESTED</srcid><srcstatus/><internalId>586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>                
    
    <specobject>
      <id>ComM.ASR21-11.SWS_ComM_01071</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_COMManager.pdf, R21-11</source>
      <version>1</version>
      <description>
        Every time the sub state COMM_PNC_REQUESTED is entered from COMM_PNC_READY_SLEEP, 
        ComM shall request COMM_FULL_COMMUNICATION for all configured ComM channels 
        which are referenced by this PNC via parameter ComMChannelPerPnc (see ECUC_ComM_00880 : ) 
        and where ComMWakeupSleepRequestEnabled is set to TRUE, even if the channel is already requested.
        (SRS_ModeMgm_09268, SRS_ModeMgm_00049)
      </description>
      <comment>
        Entering from COMM_PNC_READY_SLEEP should not result in a wake-up on the network, 
        since the PNC is already requested remotely by another ECU
      </comment>        
      <releases>
        <release>AUTOSAR R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.ASR21-11.SWS_ComM_01071.COMM_PNC_REQUESTED.Entry</srcid><srcstatus/><internalId>587</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject> 
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00151.DetReport.WrongComModeReq</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If development error detection is enabled and ComM_RequestComMode()
        requests states other than main states "No Communication" and
        "Full Communication". The ComM module shall set the error code
        COMM_E_WRONG_PARAMETERS.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30023</srcid><srcstatus/><internalId>2000</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1348</srcid><srcstatus/><internalId>1022</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00151</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComMh</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall provide the following
        file:
        ComM header file:            ComM.h.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM.h_2</srcid><srcstatus/><internalId>955</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00463</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_Nm</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall provide the following
        file:
        ComM callback declarations:  ComM_Nm.h.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_Nm.h_2</srcid><srcstatus/><internalId>981</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00463</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_EcuMBswM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall provide the following
        file:
        ComM callback declarations:  ComM_EcuMBswM.h.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_EcuMBswM.h_14</srcid><srcstatus/><internalId>977</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00463</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_Cfg</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall provide the following
        file:
        ComM configuration file:     ComM_Cfg.h.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_3</srcid><srcstatus/><internalId>854</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00463</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ComM463_Refine_ComMc</id>
      <status>rejected</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall provide the following
        file:
        ComM source file:            ComM.c.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_Dcm</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall provide the following
        file:
        ComM callback declarations:  ComM_Dcm.h.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_Dcm.h_2</srcid><srcstatus/><internalId>976</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00463</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_BusSm</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall provide the following
        file:
        ComM callback declarations:  ComM_BusSm.h.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_BusSm.h_2</srcid><srcstatus/><internalId>975</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00463</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00800.ComM_LimitChannelToNoComMode</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Configuration of ComM_LimitChannelToNoComMode: Configurable with
        ComMModeLimitationEnabled (see ComM.ECUC_ComM_00559).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30084</srcid><srcstatus/><internalId>1844</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1863</srcid><srcstatus/><internalId>1046</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00800</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>481</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00801.ComM_LimitECUToNoComMode</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Configuration of ComM_LimitECUToNoComMode: Configurable with
        ComMModeLimitationEnabled (see ComM.ECUC_ComM_00559).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30044</srcid><srcstatus/><internalId>1916</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1938</srcid><srcstatus/><internalId>1573</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00801</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00140.NvM_SetRamBlockStatus</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        After changing the inhibition counter, the ComM has to use the API function
        NvM_SetRamBlockStatus to signal changed data to be stored non-volatile to the NvM
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30038</srcid><srcstatus/><internalId>1910</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_Int.h_51</srcid><srcstatus/><internalId>979</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00140</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00552.ComM_SetECUGroupClassification</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Service name:ComM_SetECUGroupClassification
        Syntax: Std_ReturnType ComM_SetECUGroupClassification(
                               ComM_InhibitionStatusType Status )
        Service ID[hex]: 0x0f
        Sync/Async: Synchronous
        Reentrancy: Non Reentrant
        Parameters (in): Status See ComM_InhibitionStatusType
        Parameters (inout):None
        Parameters (out):None
        Return value: Std_ReturnType  E_OK: Successfully change the ECU Group
                                            Classification Status
                                      E_NOT_OK: Change of the ECU Group
                                                Classification Status failed
                                      COMM_E_UNINIT: ComM not initialized
        Description: Changes the ECU Group Classification status
                    (see chapter 10.2.2)
        Dependency: The API function ComM_SetECUGroupClassification() is only
                    available if either the configuration parameter
                    &lt;code&gt;ComMWakeupInhibitionEnabled&lt;/code&gt; or
                    &lt;code&gt;ComMModeLimitationEnabled&lt;/code&gt; is set to true.
      </description>
      <rationale>
        The API function ComM_SetECUGroupClassification() will never be needed
        for module configurations with ComMWakeupInhibitionEnabled=false and
        ComMModeLimitationEnabled=false.
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30037</srcid><srcstatus/><internalId>1909</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30079</srcid><srcstatus/><internalId>1931</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30008</srcid><srcstatus/><internalId>1997</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2120</srcid><srcstatus/><internalId>1057</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00552</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00552</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00506.SchM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall, depending on the ComM configuration, include the
        header file of the ComM Schedule Manager providing interfaces to the ComM module: SchM_ComM.h.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_Int.h_43</srcid><srcstatus/><internalId>978</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00506</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00506.Rte</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall, depending on the ComM configuration, include the
        RTE generated header file: Rte_ComM.h.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_42</srcid><srcstatus/><internalId>883</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00506</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00506.Det</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall, depending on the ComM configuration, include the
        header file of the Development Error Tracer providing interfaces to the ComM module: Det.h.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_104</srcid><srcstatus/><internalId>987</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00506</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00506.Dcm</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall, depending on the ComM configuration, include the
        header file of the Diagnostic Communication Manager providing interfaces
        to the ComM module: Dcm_Cbk.h.
      </description>
      <comment>
        According to ComM.ASR403.SWS_ComM_00506, ComM shall include the header file Dcm.h.

        In contrary to this, requirement [Dcm110] in the AUTOSAR specification of
        the Diagnostic Communication Manager specifies that Dcm.h contains only
        those types, functions and parameters that are visible to SW-Cs.
        In addition, the callback APIs Dcm_ComM_NoComModeEntered(),
        Dcm_ComM_SilentComModeEntered() and Dcm_ComM_FullComModeEntered() are
        specified in section "8.4 Callback Notifications" of the same document
        with the description that the function prototypes of these callback APIs
        are provided in the file Dcm_Cbk.h.

        This specificaiton issue has been resolved in R4.1.1 of the Specification
        of Communication Manager. In this document, requirement [SWS_ComM_00506]
        specifies that ComM shall include the header file Dcm_Cbk.h.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_67</srcid><srcstatus/><internalId>1204</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00506</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00506.NvM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall, depending on the ComM configuration, include the
        header file of the NVRAM Manager providing interfaces to the ComM module:
        NvM.h.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_80</srcid><srcstatus/><internalId>982</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00506</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00506.LinSM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall, depending on the ComM configuration, include the
        header file of the LIN State Manager providing interfaces to the ComM module:
        LinSM.h.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_94</srcid><srcstatus/><internalId>985</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_85</srcid><srcstatus/><internalId>1208</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_LINSM_ACCESS_NEEDED</srcid><srcstatus/><internalId>1812</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00506</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00506.CanSM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall, depending on the ComM configuration, include the
        header file of the CAN State Manager providing interfaces to the ComM
        module: CanSM_ComM.h.
      </description>
      <comment>
        According to ComM.ASR403.SWS_ComM_00506, ComM shall include the header file CanSM.h.

        In contrary to this, requirement [CANSM008] in the AUTOSAR specification
        of the CAN State Manager specifies that CanSM.h does not provide the
        declarations of APIs CanSM_GetCurrentComMode() and CanSM_RequestComMode().
        In addition, requirement [CANSM009] specifies that the header file
        CanSM_ComM.h exports the APIs dedicated to the ComM module.

        This specificaiton issue has been resolved in R4.1.1 of the Specification
        of Communication Manager. In this document, requirement [SWS_ComM_00506]
        specifies that ComM shall include the header file CanSM_ComM.h.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_84</srcid><srcstatus/><internalId>983</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_75</srcid><srcstatus/><internalId>1206</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_CANSM_ACCESS_NEEDED</srcid><srcstatus/><internalId>1810</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00506</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00506.FrSM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall, depending on the ComM configuration, include the
        header file of the Flex Ray State Manager providing interfaces to the ComM module:
        FrSM.h.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_89</srcid><srcstatus/><internalId>984</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_80</srcid><srcstatus/><internalId>1207</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_FRSM_ACCESS_NEEDED</srcid><srcstatus/><internalId>1811</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00506</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00506.EthSM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall, depending on the ComM configuration, include the
        header file of the Ethernet State Manager providing interfaces to the ComM module:
        EthSM.h.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_98</srcid><srcstatus/><internalId>986</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_89</srcid><srcstatus/><internalId>1209</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_ETHSM_ACCESS_NEEDED</srcid><srcstatus/><internalId>1813</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00506</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00506.BswM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall, depending on the ComM configuration, include the
        header file of the Basis Software Manager providing interfaces to the ComM module:
        BswM_ComM.h.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_72</srcid><srcstatus/><internalId>1205</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00506</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00506.Com</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall, depending on the ComM configuration, include the
        header file of the Communication module providing interfaces to the ComM module:
        Com.h.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_62</srcid><srcstatus/><internalId>1379</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00506</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00506.Nm</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall, depending on the ComM configuration, include the
        header file of the Network Management Interface providing interfaces to the ComM module:
        Nm.h.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_63</srcid><srcstatus/><internalId>1203</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00506</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00887.LIGHTUser</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_NETWORK_REQUESTED and  configuration parameter
        ComMNmVariant=LIGHT (ComM568_Conf)  and a user request
        ComM_RequestComMode(&amp;lt;user&amp;gt;,COMM_FULL_COMMUNICATION),  the timer for
        ComMTMinFullComModeDuration(ComM.ECUC_ComM_00557) shall  be cancelled.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_CANCEL_TM_WITH_USERREQ</srcid><srcstatus/><internalId>1941</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00887</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00887.LIGHTDcm</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_NETWORK_REQUESTED and  configuration parameter
        ComMNmVariant=LIGHT (ComM568_Conf)  and the  DCM indicate
        ComM_DCM_ActiveDiagnostic(&amp;lt;channel&amp;gt;)(ComM.SWS_ComM_00873),  the timer for
        ComMTMinFullComModeDuration(ComM.ECUC_ComM_00557) shall  be cancelled.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_CANCEL_TM_WITH_DCM</srcid><srcstatus/><internalId>1942</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00887</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00887.NONEUser</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_NETWORK_REQUESTED and  configuration parameter
        ComMNmVariant=NONE (ComM568_Conf)  and a user request
        ComM_RequestComMode(&amp;lt;user&amp;gt;,COMM_FULL_COMMUNICATION),  the timer for
        ComMTMinFullComModeDuration(ComM.ECUC_ComM_00557) shall  be cancelled.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_CANCEL_TM_WITH_USERREQ</srcid><srcstatus/><internalId>1941</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00887</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00887.NONEDcm</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_NETWORK_REQUESTED and  configuration parameter
        ComMNmVariant=NONE (ComM568_Conf)  and the  DCM indicate
        ComM_DCM_ActiveDiagnostic(&amp;lt;channel&amp;gt;)(ComM.SWS_ComM_00873),  the timer for
        ComMTMinFullComModeDuration(ComM.ECUC_ComM_00557) shall  be cancelled.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_CANCEL_TM_WITH_DCM</srcid><srcstatus/><internalId>1942</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00887</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00234.COMM_E_NOT_INITED</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall use the following error codes to report errors, if an API service is
        used with wrong parameters (e.g. a NULL pointer):
        Type or error               Relevance     Related error code                 Value [hex]
        API service used            Development   COMM_E_NOT_INITED                  0x1
        without module
        initialization
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30008</srcid><srcstatus/><internalId>1997</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_BSW.h_215</srcid><srcstatus/><internalId>958</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00234</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00234</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00234.WRONG_PARAMETERS</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall use the following error codes to report errors, if an API service is
        used with wrong parameters (e.g. a NULL pointer):
        Type or error               Relevance     Related error code                 Value [hex]
        API service used with       Development   COMM_E_WRONG_PARAMETERS            0x2
        wrong parameters
        (e.g. a NULL pointer)
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30009</srcid><srcstatus/><internalId>1998</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30010</srcid><srcstatus/><internalId>1999</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30023</srcid><srcstatus/><internalId>2000</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30035</srcid><srcstatus/><internalId>2001</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1580</srcid><srcstatus/><internalId>1029</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1586</srcid><srcstatus/><internalId>1030</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1595</srcid><srcstatus/><internalId>1031</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1601</srcid><srcstatus/><internalId>1032</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00234</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00234</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.Version.Check</id>
      <status>rejected</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The version check shall be implemented as specified in EB requirements
        [BSWM_CHK_400] and [BSWM_CHK_401].
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00649.COMM_E_MODE_LIMITATION</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The Std_ReturnType shall be extended with the following #define  value:
        #define                Value Description
        COMM_E_MODE_LIMITATION 0x02  Function call has been successfully but mode can not be granted
                                     because of mode inhibition.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncChnlInhibition</srcid><srcstatus/><internalId>2074</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30013</srcid><srcstatus/><internalId>2310</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1208</srcid><srcstatus/><internalId>1014</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00649</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00649</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
            <linksto>ComM.SWS_ComM_91027</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00649.COMM_E_UNINIT</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The Std_ReturnType shall be extended with the following #define  value:
        #define       Value Description
        COMM_E_UNINIT 0x03  ComM not initialized.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30008</srcid><srcstatus/><internalId>1997</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_974</srcid><srcstatus/><internalId>1007</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00649</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00649.COMM_E_MULTIPLE_PNC_ASSIGNED</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Return COMM_E_MULTIPLE_PNC_ASSIGNED shall have the value 3
        Return value shall be available via ComM.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_BSW.h_254</srcid><srcstatus/><internalId>959</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GETCURRENT_PNC_COMM_MODE_Conformance</srcid><srcstatus/><internalId>1996</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00649</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        <provcov>
            <linksto>ComM.SWS_ComM_91027</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00649.COMM_E_NO_PNC_ASSIGNED</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Return COMM_E_NO_PNC_ASSIGNED shall have the value 4
        Return value shall be available via ComM.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_BSW.h_262</srcid><srcstatus/><internalId>960</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GETCURRENT_PNC_COM_MODE_PNC_DISABLED</srcid><srcstatus/><internalId>1954</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GETCURRENT_PNC_COMM_MODE_Conformance</srcid><srcstatus/><internalId>1996</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00649</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        <provcov>
            <linksto>ComM.SWS_ComM_91027</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00103.NvM_SetRamBlockStatus</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall use the service NvM_SetRamBlockStatus() from NVRAM
        Manager module to signal the change in non-volatile configuration data
        such as
          - ComMNoWakeup (see ComM.ECUC_ComM_00569),
          - ComMEcuGroupClassification(see ComM.ECUC_ComM_00563),
          - inhibition status (see ComM.SWS_ComM_00157) and
          - the Inhibit counter (see ComM.SWS_ComM_00140).
      </description>
      <rationale>
        ComM doesn't call NvM_ReadBlock() or NvM_WriteBlock() APIs.

        Instead, NvM_ReadAll() is called by EcuM to get non-volatile data
        during ECU StartUp phase. This data is copied into ComM_EB_NvRAM during
        ComM_Init().

        Also instead of calling NvM_WriteBlock(), ComM just signals the changes
        in non-volatile configuration data during run time using
        NvM_SetRamBlockStatus().

        This apporach is chosen to improve the run time performance (e.g
        NvM_WriteBlock() API call will take some time to complete the write into
        non-volatile memory. If inhibition counter is updated frequently during
        run-time then more times write to NvM will take place).
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30038</srcid><srcstatus/><internalId>1910</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_Int.h_51</srcid><srcstatus/><internalId>979</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00103</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
        <provcov>
            <linksto>ComM.SWS_ComM_00103</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00829.Det_ReportError</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The following interface is required to fulfill an optional functionality of the module:
        API function    Module Description
        Det_ReportError Det    Service to report development errors
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30008</srcid><srcstatus/><internalId>1997</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_BSW_Cfg.h_133</srcid><srcstatus/><internalId>961</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00829</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_CurrentPNCMode</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The following interface is required to fulfill an optional functionality of the module:
        API function             HeaderFile  Description
        BswM_ComM_CurrentPNCMode BswM_ComM.h Function called by ComM to indicate the current
                                              mode of the PNC
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_BswM_ComM_CurrentPNCMode_With_PNCID_255</srcid><srcstatus/><internalId>1990</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_251</srcid><srcstatus/><internalId>1382</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_252</srcid><srcstatus/><internalId>1383</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_321</srcid><srcstatus/><internalId>1390</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_440</srcid><srcstatus/><internalId>1408</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_615</srcid><srcstatus/><internalId>1420</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_643</srcid><srcstatus/><internalId>1424</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_666</srcid><srcstatus/><internalId>1427</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_691</srcid><srcstatus/><internalId>1430</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00829</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00829</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>


    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_InitiateReset</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The following interface is required to fulfill an optional functionality of the module:
        API function             HeaderFile  Description
        BswM_ComM_InitiateReset  BswM_ComM.h Function is called by ComM to signal a shutdown.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComMResetAfterForcingNoComm_1</srcid><srcstatus/><internalId>1993</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1401</srcid><srcstatus/><internalId>1321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00829</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00829.Com_ReceiveSignal</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The following interface is required to fulfill an optional functionality of the module:
        API function             HeaderFile  Description
        Com_ReceiveSignal        Com.h       Com_ReceiveSignal copies the data of the signal
                                             identified by SignalId to the location
                                             specified by SignalDataPtr.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3437</srcid><srcstatus/><internalId>1125</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00829</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00829.Com_SendSignal</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The following interface is required to fulfill an optional functionality of the module:
        API function             HeaderFile  Description
        Com_SendSignal           Com.h       The service Com_SendSignal updates the signal object identified by
                                             SignalId with the signal referenced by the SignalDataPtr parameter.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_1</srcid><srcstatus/><internalId>2289</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_924</srcid><srcstatus/><internalId>1444</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00829</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00829.Nm_RequestSynchronizedPncShutdown</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The following interface is required to fulfill an optional functionality of the module:
        API function                      HeaderFile  Description
        Nm_RequestSynchronizedPncShutdown Nm.h        This function forward the request for a synchronized PNC shutdown of a
                                                      particular PNC given by PncId to
                                                      the affected BusNm by calling BusNm_RequestSynchronizedPncShutdown.
                                                      The function call is only valid if NmStandardBusType is not set to NM_BUSNM_LOCALNM
                                                      (e.g. CanNm_RequestSynchronizedPncShutdown function is called for NM_BUSNM_CANNM).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Top_Level_Coordinator_5</srcid><srcstatus/><internalId>2268</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4113</srcid><srcstatus/><internalId>1167</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_567</srcid><srcstatus/><internalId>1417</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00829</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.HisComM0001_Refine1</id>
      <status>approved</status>
      <source>HIS-Recommendation for a scalable AUTOSAR Stack</source>
      <version>1</version>
      <description>
        If the pre compile configuration of a ComM contains only one
        ComMChannel configuration container, the ComM module should make
        use of the ComMChannel configuration directly in the code.
      </description>
      <comment>
        Code related to loops over channels shall be disabled then.
        This just affects hand written code. The Code generated from
        the HsmGen shall not be modified.
        HisComM0001 is particularly applicable for the parameters ComMBusType,
        ComMNoWakeup, ComMNoFullCom, ComMNoCom, and ComMNmVariant.
        HisComM0001 is only implemented for the parameters ComMBusType and
        ComMNmVariant.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_678</srcid><srcstatus/><internalId>861</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_691</srcid><srcstatus/><internalId>862</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_721</srcid><srcstatus/><internalId>863</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>HisComM0001</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>786</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.HisComM0001_Refine2</id>
      <status>approved</status>
      <source>HIS-Recommendation for a scalable AUTOSAR Stack</source>
      <version>1</version>
      <description>
        If the pre compile configuration of a ComM contains only one
        ComMChannel configuration container, the ComM module should make
        use of the ComMChannel configuration directly in the code.
      </description>
      <comment>
        Code related to loops over channels shall be disabled then.
        This just affects hand written code. The Code generated from
        the HsmGen shall not be modified.
        HisComM0001 is particularly applicable for the parameters ComMBusType,
        ComMNoWakeup, ComMNoFullCom, ComMNoCom, and ComMNmVariant.
        HisComM0001 is not implemented for the parameters ComMNoWakeup,
        ComMNoFullCom and ComMNoCom.
      </comment>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.HISOptimization</srcid><srcstatus/><internalId>804</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>HisComM0001</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>786</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.HisComM0002_Refine1</id>
      <status>approved</status>
      <source>HIS-Recommendation for a scalable AUTOSAR Stack</source>
      <version>1</version>
      <description>
        If the pre compile configuration of a ComM contains only one
        ComMChannel configuration container, the ComM module should not
        make branches at run time depending on this configuration data.
      </description>
      <comment>
        Branches and checks e.g. related to NmVariant shall be disabled
        in that case.
        HisComM0002 is particularly applicable for the parameters ComMBusType,
        ComMNoWakeup, ComMNoFullCom, ComMNoCom, and ComMNmVariant.
        HisComM0002 is only implemented for the parameters ComMBusType and
        ComMNmVariant.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_678</srcid><srcstatus/><internalId>861</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_691</srcid><srcstatus/><internalId>862</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_721</srcid><srcstatus/><internalId>863</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>HisComM0002</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>787</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.HisComM0002_Refine2</id>
      <status>approved</status>
      <source>HIS-Recommendation for a scalable AUTOSAR Stack</source>
      <version>1</version>
      <description>
        If the pre compile configuration of a ComM contains only one
        ComMChannel configuration container, the ComM module should not
        make branches at run time depending on this configuration data.
      </description>
      <comment>
        Branches and checks e.g. related to NmVariant shall be disabled
        in that case.
        HisComM0002 is particularly applicable for the parameters ComMBusType,
        ComMNoWakeup, ComMNoFullCom, ComMNoCom, and ComMNmVariant.
        HisComM0002 is not implemented for the parameters ComMNoWakeup,
        ComMNoFullCom and ComMNoCom.
      </comment>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.HISOptimization</srcid><srcstatus/><internalId>804</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>HisComM0002</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>787</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.HisComM0003_Refine1</id>
      <status>approved</status>
      <source>HIS-Recommendation for a scalable AUTOSAR Stack</source>
      <version>1</version>
      <description>
        If the pre compile configuration of a ComM contains only one
        ComMChannel configuration container, the ComM module should
        avoid to separately store this configuration data.
      </description>
      <comment>
        Note from the HIS document "Requirements HisComM0001,
        HisComM0002, and HisComM0003 especially affect the configuration
        items ComMBusType, ComMNoWakeup, ComMNoFullCom, ComMNoCom, and
        ComMNmVariant."

        This means that the channel specific field storing the
        ComMBusType, ComMNoWakeup, ComMNoFullCom, ComMNoCom, and
        ComMNmVariant shall be disabled in the related C data
        structures.
        HisComM0003 is only implemented for the parameters ComMBusType and
        ComMNmVariant.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_678</srcid><srcstatus/><internalId>861</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_691</srcid><srcstatus/><internalId>862</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_721</srcid><srcstatus/><internalId>863</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>HisComM0003</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>788</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.HisComM0003_Refine2</id>
      <status>approved</status>
      <source>HIS-Recommendation for a scalable AUTOSAR Stack</source>
      <version>1</version>
      <description>
        If the pre compile configuration of a ComM contains only one
        ComMChannel configuration container, the ComM module should
        avoid to separately store this configuration data.
      </description>
      <comment>
        Note from the HIS document "Requirements HisComM0001,
        HisComM0002, and HisComM0003 especially affect the configuration
        items ComMBusType, ComMNoWakeup, ComMNoFullCom, ComMNoCom, and
        ComMNmVariant."

        This means that the channel specific field storing the
        ComMBusType, ComMNoWakeup, ComMNoFullCom, ComMNoCom, and
        ComMNmVariant shall be disabled in the related C data
        structures.
        HisComM0003 is not implemented for the parameters ComMNoWakeup,
        ComMNoFullCom and ComMNoCom.
      </comment>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.HISOptimization</srcid><srcstatus/><internalId>804</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>HisComM0003</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>788</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR403.SWS_ComM_00503.Include</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The code file structure shall include files ComM_BSW_Cfg.c and
        ComM_BSW_Rte.c for all pre-compile time configurable parameters.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_BSW_Cfg.c_4</srcid><srcstatus/><internalId>869</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_Rte_Cfg.c_4</srcid><srcstatus/><internalId>928</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00503</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00987.HandleOrder</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Within the ComM main task, the requested state shall be handled in the
        following order:
        1. ComM user requests of ComM users mapped to one or more PNCs.
        2. ERA (if the configuration switch ComMPncGatewayEnabled is set to TRUE)
        3. EIRA
        4. ComM user requests of ComM users mapped to one or more channels
      </description>
      <rationale>
        According to requirement ComM.SWS_ComM_00987, "4. ComM user requests of ComM users
        mapped to one or more channels" is placed in 2nd position in the above
        described order (i.e. before ERA / EIRA). However this contradicts to
        other requirements such as ComM.SWS_ComM_00979 and ComM953 which explicitly states
        that "If the optional PNC functionality is enabled (see ComM.ECUC_ComM_00787),
        all PNC actions shall be performed before the channel related actions
        are executed". Since ERA and EIRA are PNC actions which should be
        performed before channel related action "4. ComM user requests of ComM
        users mapped to one or more channels" as per ComM.SWS_ComM_00979 or ComM953.
      </rationale>
      <comment>
        Refer to http://www.autosar.org/bugzilla/show_bug.cgi?id=59945
        for further details.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncBeforeChRequest</srcid><srcstatus/><internalId>2170</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_EIRABeforeChRequest</srcid><srcstatus/><internalId>2171</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncRequestBeforeEIRA</srcid><srcstatus/><internalId>2172</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_UserRequestToChAndToPnc_PncEnable</srcid><srcstatus/><internalId>2180</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00987</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00218.NOCOM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A communication request (COMM_FULL_COMMUNICATION) by a user
        shall be inhibited if the ComM Inhibition status is equal to
        ComMNoWakeup=TRUE (ComM.ECUC_ComM_00569) for the corresponding channel and the current state of the
        channel is COMM_NO_COMMUNICATION
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30038</srcid><srcstatus/><internalId>1910</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1304</srcid><srcstatus/><internalId>1020</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00218</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00218.SILENTCOM</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A communication request (COMM_FULL_COMMUNICATION) by a user
        shall be inhibited if the ComM Inhibition status is equal to
        ComMNoWakeup=TRUE (ComM.ECUC_ComM_00569) for the corresponding channel and the current state of the
        channel is COMM_SILENT_COMMUNICATION
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30038</srcid><srcstatus/><internalId>1910</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1305</srcid><srcstatus/><internalId>1021</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00218</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00668.ComM_InitStatusType</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM_InitStatusType should not be defined as enum (according to coding guidelines) but as uint8.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MinFeatures</srcid><srcstatus/><internalId>1848</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MaxFeatures</srcid><srcstatus/><internalId>1849</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_BSW_Types.h_193</srcid><srcstatus/><internalId>969</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00668</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00673.ComM_PncModeType</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name:        ComM_PncModeType
        Kind:        Enumeration
        Range:       COMM_PNC_REQUESTED                      0x00 PNC is requested by a local ComM user
                     COMM_PNC_READY_SLEEP                    0x01 PNC is requested by a remote ComM user
                     COMM_PNC_PREPARE_SLEEP                  0x02 PNC is active with no deadline monitoring
                     COMM_PNC_NO_COMMUNICATION               0x03 PNC does not communicate
                     COMM_PNC_FULL_COMMUNICATION             0x04 PNC is able to communicate
                     COMM_PNC_REQUESTED_WITH_WAKEUP_REQUEST  0x05 PNC is requested by a local ComM user.
                                                                  The mode is used to indicate the BswM,
                                                                  that an active PNC request should trigger also a wake-up of the used communication hardware,
                                                                  if this is supported and configured (e.g. used for Ethernet switch port
                                                                  switching in combination with OA TC10 compliant Ethernet hardware).
        Description: Current mode of a PNC
        Available
        via:         ComM.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_BSW_Types.h_267</srcid><srcstatus/><internalId>974</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_18062014_1</srcid><srcstatus/><internalId>2090</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00863</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
        <provcov>
            <linksto>ComM.SWS_ComM_00673</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00886.NmVariant.LIGHT</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        On entering sub-state COMM_FULL_COM_NETWORK_REQUESTED and configuration
        parameter ComMNmVariant=LIGHT (ComM568_Conf), the timer for
        ComMTMinFullComModeDuration (ComM.ECUC_ComM_00557) shall be started.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1000</srcid><srcstatus/><internalId>1266</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1046</srcid><srcstatus/><internalId>1276</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30019</srcid><srcstatus/><internalId>1898</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_FULL_COM_NETWORK_REQUESTED_TimeoutLight</srcid><srcstatus/><internalId>1951</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_TM_IN_FULL_COMMODE_DURATION</srcid><srcstatus/><internalId>2063</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.TIMEOUT_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_1</srcid><srcstatus/><internalId>1740</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00886</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00886.NmVariant.NONE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        On entering sub-state COMM_FULL_COM_NETWORK_REQUESTED and configuration
        parameter ComMNmVariant=NONE (ComM568_Conf), the timer for
        ComMTMinFullComModeDuration (ComM.ECUC_ComM_00557) shall be started.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1002</srcid><srcstatus/><internalId>1267</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1048</srcid><srcstatus/><internalId>1277</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_FULL_COM_NETWORK_REQUESTED_TimeoutNone</srcid><srcstatus/><internalId>1950</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.TIMEOUT_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_0</srcid><srcstatus/><internalId>1739</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00886</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00889.NmVariant.LIGHT</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_NETWORK_REQUESTED and
        configuration parameter ComMNmVariant=LIGHT (ComM568_Conf)
        and timer for ComMTMinFullComModeDuration(ComM.ECUC_ComM_00557) has
        expired and no user request
        ComM_RequestComMode(&amp;lt;user&amp;gt;,COMM_FULL_COMMUNICATION) and
        the DCM does not indicate
        ComM_DCM_ActiveDiagnostic(&amp;lt;channel&amp;gt;)(ComM.SWS_ComM_00873), the ComM
        channel state machine shall switch to sub-state
        COMM_FULL_COM_READY_SLEEP.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2672</srcid><srcstatus/><internalId>1081</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30019</srcid><srcstatus/><internalId>1898</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30102</srcid><srcstatus/><internalId>1933</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_TM_IN_FULL_COMMODE_DURATION</srcid><srcstatus/><internalId>2063</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PassiveActiveStartup</srcid><srcstatus/><internalId>2067</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SwitchToNoComIfChanIsRel</srcid><srcstatus/><internalId>2362</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComMTMinFullComModeDuration_TIMEOUT</srcid><srcstatus/><internalId>1711</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.TIMEOUT_NO_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_1</srcid><srcstatus/><internalId>1742</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00889</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00889.NmVariant.NONE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_NETWORK_REQUESTED and
        configuration parameter ComMNmVariant=NONE (ComM568_Conf)
        and timer for ComMTMinFullComModeDuration(ComM.ECUC_ComM_00557) has
        expired and no user request
        ComM_RequestComMode(&amp;lt;user&amp;gt;,COMM_FULL_COMMUNICATION) and
        the DCM does not indicate
        ComM_DCM_ActiveDiagnostic(&amp;lt;channel&amp;gt;)(ComM.SWS_ComM_00873), the ComM
        channel state machine shall switch to sub-state
        COMM_FULL_COM_READY_SLEEP.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2673</srcid><srcstatus/><internalId>1082</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30022</srcid><srcstatus/><internalId>1901</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_NETWORK_REQUESTED_TO_READY_SLEEP_Timeout</srcid><srcstatus/><internalId>1953</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_NoComFullComRequestNoneChannel</srcid><srcstatus/><internalId>2044</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SwitchToNoComIfChanIsRel</srcid><srcstatus/><internalId>2362</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComMTMinFullComModeDuration_TIMEOUT</srcid><srcstatus/><internalId>1711</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.TIMEOUT_NO_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_0</srcid><srcstatus/><internalId>1741</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00889</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00866.NmVariant.FULL</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter ComMNmVariant=FULL (ECUC_ComM_00568),
        an DCM_ActiveDiagnostic indication shall be treated as a COMM_FULL_COMMUNICATION
        request for the specified communication channel (see ComM_DCM_ActiveDiagnostic(channel),
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2674</srcid><srcstatus/><internalId>1083</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NoComToFullCom_ActiveDiag</srcid><srcstatus/><internalId>1895</internalId></linkedfrom><linkedfrom><srcid>TS_ActiveDiagnosticReEntrantTransition</srcid><srcstatus/><internalId>1947</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30025</srcid><srcstatus/><internalId>2054</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30026</srcid><srcstatus/><internalId>2055</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_DCM_NO_COM_NO_PENDING_REQUEST_1</srcid><srcstatus/><internalId>1726</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00866</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00866</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00866.NmVariant.LIGHT</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter ComMNmVariant=LIGHT (ECUC_ComM_00568),
        an DCM_ActiveDiagnostic indication shall be treated as a COMM_FULL_COMMUNICATION
        request for the specified communication channel (see ComM_DCM_ActiveDiagnostic(channel),
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2675</srcid><srcstatus/><internalId>1084</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NoComToFullCom_ActiveDiag</srcid><srcstatus/><internalId>1895</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_DCM_NO_COM_NO_PENDING_REQUEST_1</srcid><srcstatus/><internalId>1726</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00866</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00866</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00866.NmVariant.NONE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If configuration parameter ComMNmVariant=NONE (ECUC_ComM_00568),
        an DCM_ActiveDiagnostic indication shall be treated as a COMM_FULL_COMMUNICATION
        request for the specified communication channel (see ComM_DCM_ActiveDiagnostic(channel),
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2675</srcid><srcstatus/><internalId>1084</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NoComToFullCom_ActiveDiag</srcid><srcstatus/><internalId>1895</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_DCM_NO_COM_NO_PENDING_REQUEST_1</srcid><srcstatus/><internalId>1726</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00866</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00866</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00876.NmVariant.FULL</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In sub-state COMM_NO_COM_NO_PENDING_REQUEST ,configuration parameter
        ComMNmVariant=FULL (ECUC_ComM_00568) and DCM indicate
        ComM_DCM_ActiveDiagnostic(SWS_ComM_00873), the ComM channel state machine shall
        immediately switch to sub-state COMM_NO_COM_REQUEST_PENDING.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2676</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1496</srcid><srcstatus/><internalId>1330</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NoComToFullCom_ActiveDiag</srcid><srcstatus/><internalId>1895</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SC_FulSilFul_thruDiag</srcid><srcstatus/><internalId>1908</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_DCM_NO_COM_NO_PENDING_REQUEST_1</srcid><srcstatus/><internalId>1726</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00876</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00876</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00876.NmVariant.LIGHT</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In sub-state COMM_NO_COM_NO_PENDING_REQUEST ,configuration parameter
        ComMNmVariant=LIGHT (ECUC_ComM_00568) and DCM indicate
        ComM_DCM_ActiveDiagnostic(SWS_ComM_00873), the ComM channel state machine shall
        immediately switch to sub-state COMM_NO_COM_REQUEST_PENDING.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2676</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1496</srcid><srcstatus/><internalId>1330</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NoComToFullCom_ActiveDiag</srcid><srcstatus/><internalId>1895</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_DCM_NO_COM_NO_PENDING_REQUEST_1</srcid><srcstatus/><internalId>1726</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00876</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00876</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00876.NmVariant.NONE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In sub-state COMM_NO_COM_NO_PENDING_REQUEST ,configuration parameter
        ComMNmVariant=NONE (ECUC_ComM_00568) and DCM indicate
        ComM_DCM_ActiveDiagnostic(SWS_ComM_00873), the ComM channel state machine shall
        immediately switch to sub-state COMM_NO_COM_REQUEST_PENDING.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2676</srcid><srcstatus/><internalId>1085</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1496</srcid><srcstatus/><internalId>1330</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NoComToFullCom_ActiveDiag</srcid><srcstatus/><internalId>1895</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_DCM_NO_COM_NO_PENDING_REQUEST_1</srcid><srcstatus/><internalId>1726</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00876</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00876</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00878.NmVariant.FULL</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In state COMM_SILENT_COMMUNICATION ,configuration parameter
        ComMNmVariant=FULL (ECUC_ComM_00568) and DCM indicate
        ComM_DCM_ActiveDiagnostic(SWS_ComM_00873), the ComM channel state
        machine shall switch to state COMM_FULL_COMMUNICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2677</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1748</srcid><srcstatus/><internalId>1363</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SC_FulSilFul_thruDiag</srcid><srcstatus/><internalId>1908</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30032</srcid><srcstatus/><internalId>2057</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_SILENT_COMMUNICATION_0</srcid><srcstatus/><internalId>1752</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00878</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00878</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00878.NmVariant.LIGHT</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In state COMM_SILENT_COMMUNICATION ,configuration parameter
        ComMNmVariant=LIGHT (ECUC_ComM_00568) and DCM indicate
        ComM_DCM_ActiveDiagnostic(SWS_ComM_00873), the ComM channel state
        machine shall switch to state COMM_FULL_COMMUNICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2677</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1748</srcid><srcstatus/><internalId>1363</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_SILENT_COMMUNICATION_0</srcid><srcstatus/><internalId>1752</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00878</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00878</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00878.NmVariant.NONE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In state COMM_SILENT_COMMUNICATION ,configuration parameter
        ComMNmVariant=NONE (ECUC_ComM_00568) and DCM indicate
        ComM_DCM_ActiveDiagnostic(SWS_ComM_00873), the ComM channel state
        machine shall switch to state COMM_FULL_COMMUNICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2677</srcid><srcstatus/><internalId>1086</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1748</srcid><srcstatus/><internalId>1363</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_SILENT_COMMUNICATION_0</srcid><srcstatus/><internalId>1752</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00878</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00878</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00883.NmVariant.FULL</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_READY_SLEEP ,configuration parameter
        ComMNmVariant=FULL (ECUC_ComM_00568) and DCM indicate
        ComM_DCM_ActiveDiagnostic(SWS_ComM_00873), the ComM channel state
        machine shall switch to sub-state COMM_FULL_COM_NETWORK_REQUESTED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2678</srcid><srcstatus/><internalId>1087</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30103</srcid><srcstatus/><internalId>2004</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COM_READY_SLEEP_0</srcid><srcstatus/><internalId>1756</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00883</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00883</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00883.NmVariant.LIGHT</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_READY_SLEEP ,configuration parameter
        ComMNmVariant=LIGHT (ECUC_ComM_00568) and DCM indicate
        ComM_DCM_ActiveDiagnostic(SWS_ComM_00873), the ComM channel state
        machine shall switch to sub-state COMM_FULL_COM_NETWORK_REQUESTED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2678</srcid><srcstatus/><internalId>1087</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COM_READY_SLEEP_0</srcid><srcstatus/><internalId>1756</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00883</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00883</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00883.NmVariant.NONE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_READY_SLEEP ,configuration parameter
        ComMNmVariant=NONE (ECUC_ComM_00568) and DCM indicate
        ComM_DCM_ActiveDiagnostic(SWS_ComM_00873), the ComM channel state
        machine shall switch to sub-state COMM_FULL_COM_NETWORK_REQUESTED.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2678</srcid><srcstatus/><internalId>1087</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COM_READY_SLEEP_0</srcid><srcstatus/><internalId>1756</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00883</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
            <linksto>ComM.ASR403.SWS_ComM_00883</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00828.Nm_PassiveStartup</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          API function                    Module         Description
        Nm_PassiveStartUp                   Nm       This function calls the
                                                     &amp;lt;BusNm&amp;gt;_PassiveStartUp function (e.g. CanNm_PassiveStartUp
                                                     function channel is configured as CAN).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_776</srcid><srcstatus/><internalId>1233</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_EcuMWkupInd_FullVariant</srcid><srcstatus/><internalId>1924</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00828</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00828.Nm_NetworkRequest</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          API function                    Module         Description
        Nm_NetworkRequest                   Nm       This function calls the &amp;lt;BusNm&amp;gt;_NetworkRequest (e.g.
                                                     CanNm_NetworkRequest function is called if
                                                     channel is configured as CAN).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_887</srcid><srcstatus/><internalId>1259</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_909</srcid><srcstatus/><internalId>1261</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NetworkReqAndRel_FullVariant</srcid><srcstatus/><internalId>1925</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00828</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00828.Nm_NetworkRelease</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          API function                    Module         Description
        Nm_NetworkRelease                   Nm       This function calls the &amp;lt;BusNm&amp;gt;_NetworkRelease bus specific
                                                     function (e.g. CanNm_NetworkRelease function
                                                     is called if channel is configured as CAN).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1230</srcid><srcstatus/><internalId>1299</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1410</srcid><srcstatus/><internalId>1322</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NetworkReqAndRel_FullVariant</srcid><srcstatus/><internalId>1925</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncChnlInhibition</srcid><srcstatus/><internalId>2074</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00828</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00828.Dcm_ComM_NoComModeEntered</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          API function                    Module         Description
        Dcm_ComM_NoComModeEntered           Dcm      This call informs the Dcm module about a
                                                     ComM mode change to COMM_NO_COMMUNICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1902</srcid><srcstatus/><internalId>1374</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1934</srcid><srcstatus/><internalId>1378</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30027</srcid><srcstatus/><internalId>2056</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00828</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00828.Dcm_ComM_SilentComModeEntered</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          API function                    Module         Description
        Dcm_ComM_SilentComModeEntered       Dcm      This call informs the Dcm module about a ComM mode change to
                                                     COMM_SILENT_COMMUNICATION
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1895</srcid><srcstatus/><internalId>1373</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1923</srcid><srcstatus/><internalId>1377</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30027</srcid><srcstatus/><internalId>2056</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00828</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00828.Dcm_ComM_FullComModeEntered</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          API function                    Module         Description
        Dcm_ComM_FullComModeEntered         Dcm      This call informs the Dcm module about a ComM mode change to
                                                     COMM_FULL_COMMUNICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1912</srcid><srcstatus/><internalId>1376</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30025</srcid><srcstatus/><internalId>2054</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00828</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00828.Rte_Ports_UserMode_P.NO_COMMUNICATION</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          API function                              Module         Description
        Rte_Ports_UserMode_P()[n].                   Rte           Indicate COMM_NO_COMMUNICATION mode to RTE.
        Switch_currentMode                                         Switch_currentMode(RTE_MODE_ComMode_NO_COMMUNICATION)
        (RTE_MODE_ComMMode_COMM_NO_COMMUNICATION)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_BSW_Types.h_32</srcid><srcstatus/><internalId>962</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NotifyModeSwitchtoSWC</srcid><srcstatus/><internalId>2319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00828</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00828.Rte_Ports_UserMode_P.SILENT_COMMUNICATION</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          API function                              Module         Description
        Rte_Ports_UserMode_P()[n].                   Rte           Indicate COMM_SILENT_COMMUNICATION mode to RTE.
        Switch_currentMode                                         Switch_currentMode(RTE_MODE_ComMode_SILENT_COMMUNICATION)
        (RTE_MODE_ComMMode_COMM_SILENT_COMMUNICATION)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_BSW_Types.h_39</srcid><srcstatus/><internalId>963</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NotifyModeSwitchtoSWC</srcid><srcstatus/><internalId>2319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00828</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00828.Rte_Ports_UserMode_P.FULL_COMMUNICATION</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          API function                              Module         Description
        Rte_Ports_UserMode_P()[n].                   Rte           Indicate COMM_FULL_COMMUNICATION mode to RTE.
        Switch_currentMode                                         Switch_currentMode(RTE_MODE_ComMode_FULL_COMMUNICATION)
        (RTE_MODE_ComMMode_COMM_FULL_COMMUNICATION)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/ComM_BSW_Types.h_46</srcid><srcstatus/><internalId>964</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NotifyModeSwitchtoSWC</srcid><srcstatus/><internalId>2319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00828</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00828.BswM_ComM_CurrentMode</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          API function                    Module         Description
        BswM_ComM_CurrentMode               BswM     Indicate Communication Mode to BswM.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1883</srcid><srcstatus/><internalId>1372</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30025</srcid><srcstatus/><internalId>2054</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00828</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00828.NvM_ReadBlock</id>
      <status>rejected</status>
      <source>EB</source>
      <version>1</version>
      <description>
          API function                    Module         Description
        NvM_ReadBlock                       NvM      NVRAM manager API for Read block.
      </description>
      <comment>
          This requirement is informational only.
      </comment>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00828</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00828.NvM_WriteBlock</id>
      <status>rejected</status>
      <source>EB</source>
      <version>1</version>
      <description>
          API function                    Module         Description
        NvM_WriteBlock                      NvM      NVRAM manager API for Write block.
      </description>
      <comment>
          This requirement is informational only.
      </comment>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00828</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00828.NvM_GetErrorStatus</id>
      <status>rejected</status>
      <source>EB</source>
      <version>1</version>
      <description>
          API function                    Module         Description
        NvM_GetErrorStatus                  NvM      NVRAM manager API for Get status.
      </description>
      <comment>
          This requirement is informational only.
      </comment>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00828</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00828.BusSM_GetCurrentComMode</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          API function                        Module         Description
          &lt;BusSM&gt;_GetCurrentComMode | &lt;BusSM&gt; | Function to query the actual communication mode from
                                                            the &lt;Bus&gt; State Manager.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1633</srcid><srcstatus/><internalId>1033</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30025</srcid><srcstatus/><internalId>2054</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00828</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00828.BusSM_RequestComMode</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        API function                    Module         Description
        &lt;BusSM&gt;_RequestComMode | &lt;BusSM&gt; | Function to request a communication mode from
                                                       the &lt;Bus&gt; State Manager.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_588</srcid><srcstatus/><internalId>1222</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_643</srcid><srcstatus/><internalId>1227</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1431</srcid><srcstatus/><internalId>1324</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1653</srcid><srcstatus/><internalId>1354</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30004</srcid><srcstatus/><internalId>1890</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00828</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00164.Entering.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.Rx.Era</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If ComMPncGatewayEnabled == TRUE and on entering COMM_PNC_REQUESTED ,
        the API Com_SendSignal() shall be called with the value "1" for the bit
        representing this PNC for the Com signal assigned to this PNC with
        ComMPncComSignalDirection == "TX" on all ComM channels related to this PNC
        where ComMPncGatewayType == COMM_GATEWAY_TYPE_PASSIVE and
        if at least one ComMPncComSignal received by Com_ReceiveSignal()
        from a channel where the signal attributes ComMPncComSignalDirection == "RX"
        and ComMPncComSignalKind == "ERA" and the
        channel attribute ComMPncGatewayType == "COMM_GATEWAY_TYPE_ACTIVE" is set to "1"
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_897</srcid><srcstatus/><internalId>1439</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_6</srcid><srcstatus/><internalId>2295</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00164</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00164.Entering.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.Rx.UserRequest</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If ComMPncGatewayEnabled == TRUE and on entering COMM_PNC_REQUESTED,
        the API Com_SendSignal() shall be called with the value "1" for the bit
        representing this PNC for the Com signal assigned to this PNC with
        ComMPncComSignalDirection == "TX" on all ComM channels related to this PNC
        where ComMPncGatewayType == COMM_GATEWAY_TYPE_PASSIVE
        if at least one ComM user assigned to this PNC request "Full Com".
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_898</srcid><srcstatus/><internalId>1440</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_5</srcid><srcstatus/><internalId>2294</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00164</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00164.In.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.Rx.ERA</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If ComMPncGatewayEnabled == TRUE and the current state is COMM_PNC_REQUESTED ,
        the API Com_SendSignal() shall be called with the value "1" for the bit
        representing this PNC for the Com signal assigned to this PNC with
        ComMPncComSignalDirection == "TX" on all ComM channels related to this PNC
        where ComMPncGatewayType == COMM_GATEWAY_TYPE_PASSIVE
        if at least one ComMPncComSignal received by Com_ReceiveSignal()
        from a channel where the signal attributes ComMPncComSignalDirection == "RX"
        and ComMPncComSignalKind == "ERA" and the
        channel attribute ComMPncGatewayType == "COMM_GATEWAY_TYPE_ACTIVE" is set to "1"
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_899</srcid><srcstatus/><internalId>1441</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_10</srcid><srcstatus/><internalId>2299</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.PncRequestedAction1_1</srcid><srcstatus/><internalId>1787</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00164</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00164.In.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.UserRequest</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If ComMPncGatewayEnabled == TRUE and the current state is COMM_PNC_REQUESTED,
        the API Com_SendSignal() shall be called with the value "1" for the bit
        representing this PNC for the Com signal assigned to this PNC with
        ComMPncComSignalDirection == "TX" on all ComM channels related to this PNC
        where ComMPncGatewayType == COMM_GATEWAY_TYPE_PASSIVE
        if at least one ComM user assigned to this PNC request "Full Com".
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_900</srcid><srcstatus/><internalId>1442</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_11</srcid><srcstatus/><internalId>2300</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.PncRequestedAction1_0</srcid><srcstatus/><internalId>1786</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00164</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>

    <!-- *************************************** VLAN **********************************************-->


    <!-- ***************************************************************************************** -->
    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00893.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If ComM_EcuM_WakeUpIndication is called in sub-state COMM_NO_COM_NO_PENDING_REQUEST
        and configuration parameter ComMSynchronousWakeUp=FALSE (ECUC_ComM_00695),
        the ComM module shall switch the requested ComM channel state machine (resp. channels)
        to sub-state COMM_NO_COM_REQUEST_PENDING.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1518</srcid><srcstatus/><internalId>1331</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_EcuM_WkUpInd</srcid><srcstatus/><internalId>1943</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_2</srcid><srcstatus/><internalId>1729</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00893</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00893.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.ManagingChannel</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If ComM_EcuM_WakeUpIndication is called in sub-state COMM_NO_COM_NO_PENDING_REQUEST
        and configuration parameter ComMSynchronousWakeUp=FALSE, if the indicated ComM channel
        is a managed channel,then the ComM channel state machine of the referencing managing channel
        (see ECUC_ComM_xxxxx2) shall also be switched to  sub-state COMM_NO_COM_REQUEST_PENDING.(SRS_ModeMgm_09087).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1519</srcid><srcstatus/><internalId>1332</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_VLAN_2</srcid><srcstatus/><internalId>2331</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_2</srcid><srcstatus/><internalId>1729</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00893</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>
    <!-- ***************************************************************************************** -->
    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_WakeUpIndication</id>
      <status>approved</status>
      <version>2</version>
      <description>
        On entering sub-state COMM_FULL_COM_NETWORK_REQUESTED from COMM_NO_COM_REQUEST_PENDING
        and EcuM module has indicated a wake-up by ComM_EcuM_WakeUpIndication(channel)
        (SWS_ComM_00275),
        the ComM module shall request Nm_PassiveStartup(channel) from the Network Management.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_777</srcid><srcstatus/><internalId>1234</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_EcuMWkupInd_forPassiveCh</srcid><srcstatus/><internalId>1907</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncNoComInitTest</srcid><srcstatus/><internalId>2326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00665</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
            <linksto>ComM.SWS_ComM_01016</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_PNCWakeUpIndication</id>
      <status>approved</status>
      <version>2</version>
      <description>
        On entering sub-state COMM_FULL_COM_NETWORK_REQUESTED from COMM_NO_COM_REQUEST_PENDING
        and EcuM module has indicated a wake-up by ComM_EcuM_PNCWakeUpIndication(PNC) (SWS_ComM_91001),
        the ComM module shall request Nm_PassiveStartup(channel) from the Network Management.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_778</srcid><srcstatus/><internalId>1235</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComM_EcuM_PNCWakeUpIndication_ChannelPassiveWakeup</srcid><srcstatus/><internalId>2308</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00665</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
            <linksto>ComM.SWS_ComM_01016</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_WakeUpIndication.ManagedChannel</id>
      <status>approved</status>
      <version>1</version>
      <description>
        On entering sub-state COMM_FULL_COM_NETWORK_REQUESTED from COMM_NO_COM_REQUEST_PENDING
        and EcuM module has indicated a wake-up by ComM_EcuM_WakeUpIndication(channel)
        (SWS_ComM_00275), If the indicated
        ComM channel is a managed channel, the ComM module shall request Nm_PassiveStartup(referencing managing channel)
        (see ECUC_ComM_xxxxx2) from the Network Management.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_779</srcid><srcstatus/><internalId>1236</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_VLAN_3</srcid><srcstatus/><internalId>2332</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00665</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
            <linksto>ComM.SWS_ComM_01016</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_PNCWakeUpIndication.ManagedChannel</id>
      <status>approved</status>
      <version>1</version>
      <description>
        On entering sub-state COMM_FULL_COM_NETWORK_REQUESTED from COMM_NO_COM_REQUEST_PENDING
        and EcuM module has indicated a wake-up ComM_EcuM_PNCWakeUpIndication(PNC)
        (SWS_ComM_91001), If the indicated
        ComM channel is a managed channel, the ComM module shall request Nm_PassiveStartup(referencing managing channel)
        (see ECUC_ComM_xxxxx2) from the Network Management.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_780</srcid><srcstatus/><internalId>1237</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_VLAN_4</srcid><srcstatus/><internalId>2333</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00665</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
            <linksto>ComM.SWS_ComM_01016</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00915.NmVariant.SLAVE_PASSIVE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_NETWORK_REQUESTED and configuration parameter
        ComMNmVariant = SLAVE_PASSIVE, the ComM channel state machine shall switch to
        sub-state COMM_FULL_COM_READY_SLEEP.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1031</srcid><srcstatus/><internalId>1274</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1103</srcid><srcstatus/><internalId>1288</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_3</srcid><srcstatus/><internalId>1746</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SLAVE_PASSIVE_TRANSITIONS_0</srcid><srcstatus/><internalId>2184</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SLAVE_PASSIVE_TRANSITIONS_2</srcid><srcstatus/><internalId>2193</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00915</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00915.NmVariant.PASSIVE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_NETWORK_REQUESTED and configuration parameter
        ComMNmVariant = PASSIVE, the ComM channel state machine shall switch to
        sub-state COMM_FULL_COM_READY_SLEEP.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1032</srcid><srcstatus/><internalId>1275</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_1</srcid><srcstatus/><internalId>1744</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComMNmCbkInd_forPassiveCh</srcid><srcstatus/><internalId>1899</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00915</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall call Nm_NetworkRequest() from NM if configuration parameter
        ComMNmVariant=FULL
      </description>
      <comment>
        Rationale: Service Nm_NetworkRequest() is not available.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_DiagnosticSessionOnPassiveCh</srcid><srcstatus/><internalId>1905</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SLAVE_ACTIVE_NO_NM_APIS_CALL</srcid><srcstatus/><internalId>2186</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SLAVE_PASSIVE_NO_NM_APIS_CALL</srcid><srcstatus/><internalId>2187</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SLAVE_ACTIVE_NO_NM_APIS_CALL_1</srcid><srcstatus/><internalId>2189</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SLAVE_ACTIVE_NO_NM_APIS_CALL_2</srcid><srcstatus/><internalId>2190</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SLAVE_PASSIVE_NO_NM_APIS_CALL_1</srcid><srcstatus/><internalId>2191</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_199</srcid><srcstatus/><internalId>988</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_205</srcid><srcstatus/><internalId>991</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_831</srcid><srcstatus/><internalId>1239</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00667</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00667</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest.NotCalled</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall not call Nm_NetworkRequest() from NM if
        configuration parameter ComMNmVariant = LIGHT|SLAVE_ACTIVE|SLAVE_PASSIVE|NONE
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_VariantLIGHT_NoCallsTo_Nm_NetworkRequest</srcid><srcstatus/><internalId>2051</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00667</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00667</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_ACTIVE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall omit calls of NM services if configuration parameter
        ComMNmVariant = SLAVE_ACTIVE
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SLAVE_ACTIVE_NO_NM_APIS_CALL</srcid><srcstatus/><internalId>2186</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SLAVE_ACTIVE_NO_NM_APIS_CALL_1</srcid><srcstatus/><internalId>2189</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SLAVE_ACTIVE_NO_NM_APIS_CALL_2</srcid><srcstatus/><internalId>2190</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_200</srcid><srcstatus/><internalId>989</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_206</srcid><srcstatus/><internalId>992</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00602</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_PASSIVE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall omit calls of NM services if configuration parameter
        ComMNmVariant = SLAVE_PASSIVE
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SLAVE_PASSIVE_NO_NM_APIS_CALL</srcid><srcstatus/><internalId>2187</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SLAVE_PASSIVE_NO_NM_APIS_CALL_1</srcid><srcstatus/><internalId>2191</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_201</srcid><srcstatus/><internalId>990</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_207</srcid><srcstatus/><internalId>993</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00602</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00602.NmVariant.LIGHT</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall omit calls of NM services if configuration
        parameter ComMNmVariant=LIGHT (see ComM568_Conf).
      </description>
      <rationale>
        NM services are not available if no NM is available.
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1000</srcid><srcstatus/><internalId>1266</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1046</srcid><srcstatus/><internalId>1276</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1216</srcid><srcstatus/><internalId>1296</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1287</srcid><srcstatus/><internalId>1310</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NoComToFullCom_ActiveDiag</srcid><srcstatus/><internalId>1895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00602</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00602.NmVariant.NONE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM module shall omit calls of NM services if configuration
        parameter ComMNmVariant=NONE (see ComM568_Conf).
      </description>
      <rationale>
        NM services are not available if no NM is available.
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1002</srcid><srcstatus/><internalId>1267</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1048</srcid><srcstatus/><internalId>1277</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1250</srcid><srcstatus/><internalId>1302</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NoComToFullCom_ActiveDiag</srcid><srcstatus/><internalId>1895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00602</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_01018.NmVariant.SLAVE_ACTIVE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In state COMM_FULL_COMMUNICATION and configuration parameter ComMNmVariant=SLAVE_ACTIVE
        and the Bus State Manager module indicates ComM_BusSm_BusSleepMode(), the
        ComM channel state machine shall switch to state COMM_NO_COMMUNICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SLAVE_ACTIVE_TRANSITIONS_0</srcid><srcstatus/><internalId>2182</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SLAVE_ACTIVE_TRANSITIONS_2</srcid><srcstatus/><internalId>2192</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2608</srcid><srcstatus/><internalId>1076</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.BUS_SM_SLEEP_INDICATION_NO_COMMUNICATION</srcid><srcstatus/><internalId>1764</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_01018</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_01018.NmVariant.SLAVE_PASSIVE</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In state COMM_FULL_COMMUNICATION and configuration parameter ComMNmVariant=SLAVE_PASSIVE
        and the Bus State Manager module indicates ComM_BusSm_BusSleepMode(), the
        ComM channel state machine shall switch to state COMM_NO_COMMUNICATION.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SLAVE_PASSIVE_TRANSITIONS_1</srcid><srcstatus/><internalId>2185</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2609</srcid><srcstatus/><internalId>1077</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.BUS_SM_SLEEP_INDICATION_NO_COMMUNICATION</srcid><srcstatus/><internalId>1764</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_01018</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_CONSTR_00003.NmVariant.SLAVE_PASSIVE.User</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A configuration tool shall reject a configuration as invalid(error) when a channel with
        ComMNmVariant = SLAVE_PASSIVE is referenced by a ComMUser.
      </description>
      <comment>
        Rationale: ComM channels with ComMNmVariant = SLAVE_PASSIVE shall always follow the
        communication request of their communication master and are not allowed to request the
        corresponding master to wake-up the communication channel.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_866</srcid><srcstatus/><internalId>1514</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_CONSTR_00003</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_CONSTR_00003.NmVariant.SLAVE_PASSIVE.Pnc</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A configuration tool shall reject a configuration as invalid(error) when a channel with
        ComMNmVariant = SLAVE_PASSIVE is referenced by a PNC.
      </description>
      <comment>
        Rationale: ComM channels with ComMNmVariant = SLAVE_PASSIVE shall always follow the
        communication request of their communication master and are not allowed to request the
        corresponding master to wake-up the communication channel.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1089</srcid><srcstatus/><internalId>1528</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_CONSTR_00003</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>


    <specobject>
      <id>ComM.EB_Ref.ASR21-11.SWS_ComM_01082.Nm_RequestSynchronizedPncShutdown</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When a request to forward a synchronized PNC shutdown has been indicated via a call of ComM_Nm_ForwardSynchronizedPncShutdown(channel, PNC bit vector)
        and all following conditions apply:
         - all ComM users assigned to this PNC request 'No Com',
         - all corresponding PNC bits are set to '0' in ERAn of all channels which are referenced by this PNC via ComMChannelPerPnc (see ECUC_ComM_00880)
            where the channel attribute ComMPncGatewayType is set to COMM_GATEWAY_TYPE_ACTIVE,
         - the indicated channel of the ComM_Nm_ForwardSynchronizedPncShutdown call is assigned to this PNC and the PNC is indicated for a shutdown
           (PNC bit set to '1' in the given PNC bit vector),
         - the indicated channel has ComMPncGatewayType set to COMM_GATEWAY_TYPE_PASSIVE and the channel is referenced via ComMChannelPerPnc (see ECUC_ComM_00880)
         - ComMSynchronizedPncShutdownEnabled is set to TRUE,
        then the ComM module shall perform the following actions:
         - ComM shall call Nm_RequestSynchronizedPncShutdown (channel, PncId) for each channel with PncId of the current handled PNC,
           where ComMPncGatewayType is set to 'COMM_GATEWAY_TYPE_ACTIVE' and the channel is referenced via ComMChannelPerPnc (see ECUC_ComM_00880:)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4111</srcid><srcstatus/><internalId>1165</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4665</srcid><srcstatus/><internalId>1190</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SynchronizedPncShutdown_Top_To_Intermediate_Level</srcid><srcstatus/><internalId>2050</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Intermediate_Coordinator_1</srcid><srcstatus/><internalId>2262</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Intermediate_Coordinator_2</srcid><srcstatus/><internalId>2263</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Intermediate_Coordinator_3</srcid><srcstatus/><internalId>2264</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR21-11.SWS_ComM_01082</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR21-11.SWS_ComM_01082.COMM_PNC_REQUESTED.To.COMM_PNC_READY_SLEEP</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When a request to forward a synchronized PNC shutdown has been indicated via a call of ComM_Nm_ForwardSynchronizedPncShutdown(channel, PNC bit vector)
        and all following conditions apply:
         - all ComM users assigned to this PNC request 'No Com',
         - all corresponding PNC bits are set to '0' in ERAn of all channels which are referenced by this PNC via ComMChannelPerPnc (see ECUC_ComM_00880)
            where the channel attribute ComMPncGatewayType is set to COMM_GATEWAY_TYPE_ACTIVE,
         - the indicated channel of the ComM_Nm_ForwardSynchronizedPncShutdown call is assigned to this PNC and the PNC is indicated for a shutdown
           (PNC bit set to '1' in the given PNC bit vector),
         - the indicated channel has ComMPncGatewayType set to COMM_GATEWAY_TYPE_PASSIVE and the channel is referenced via ComMChannelPerPnc (see ECUC_ComM_00880)
         - ComMSynchronizedPncShutdownEnabled is set to TRUE,
        then the ComM module shall perform the following actions:
         - The sub state COMM_PNC_REQUESTED shall be left and the sub state COMM_PNC_READY_SLEEP shall be entered
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4112</srcid><srcstatus/><internalId>1166</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4666</srcid><srcstatus/><internalId>1191</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Intermediate_Coordinator_1</srcid><srcstatus/><internalId>2262</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Intermediate_Coordinator_2</srcid><srcstatus/><internalId>2263</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Intermediate_Coordinator_3</srcid><srcstatus/><internalId>2264</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR21-11.SWS_ComM_01082</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR21-11.SWS_ComM_01067.COMM_PNC_NO_COM.To.COMM_PNC_REQUESTED</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When entering the PNC sub state COMM_PNC_REQUESTED from COMM_PNC_NO_COM
        this PNC reference at least one ComMChannel via ComMChannelPerPnc (see ECUC_ComM_00880 : ) and
        ComMPncWakeupSleepRequestEnabled of this PNC is set to TRUE,
        BswM_ComM_CurrentPNCMode shall be called with COMM_PNC_REQUESTED_WITH_WAKEUP_REQUEST,
        instead of calling BswM_ComM_CurrentPNCMode with COMM_PNC_REQUESTED.( SRS_ModeMgm_09268)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_372</srcid><srcstatus/><internalId>1398</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_04</srcid><srcstatus/><internalId>2337</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR21-11.SWS_ComM_01067</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR21-11.SWS_ComM_01067.COMM_PNC_PREPARE_SLEEP.To.COMM_PNC_REQUESTED</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        When entering the PNC sub state COMM_PNC_REQUESTED from COMM_PNC_PREPARE_SLEEP
        this PNC reference at least one ComMChannel via ComMChannelPerPnc (see ECUC_ComM_00880 : ) and
        ComMPncWakeupSleepRequestEnabled of this PNC is set to TRUE,
        BswM_ComM_CurrentPNCMode shall be called with COMM_PNC_REQUESTED_WITH_WAKEUP_REQUEST,
        instead of calling BswM_ComM_CurrentPNCMode with COMM_PNC_REQUESTED.( SRS_ModeMgm_09268)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_373</srcid><srcstatus/><internalId>1399</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_03</srcid><srcstatus/><internalId>2336</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_05</srcid><srcstatus/><internalId>2338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR21-11.SWS_ComM_01067</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR21-11.SWS_ComM_01069.COMM_PNC_REQUESTED.Entry</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Every time the sub state COMM_PNC_REQUESTED is entered from other states,
        ComM shall request COMM_FULL_COMMUNICATION for all configured ComM channels which are
        referenced by this PNC via parameter ComMChannelPerPnc (see ECUC_ComM_00880 : )
        and where ComMWakeupSleepRequestEnabled is set to FALSE or not available.
      </description>
      <comment>
        Request for COMM_FULL_COMMUNICATION has only effect in states different then
        COMM_FULL_COM_NETWORK_REQUESTED
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_374</srcid><srcstatus/><internalId>1400</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_01</srcid><srcstatus/><internalId>2334</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_02</srcid><srcstatus/><internalId>2335</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_07</srcid><srcstatus/><internalId>2340</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR21-11.SWS_ComM_01069</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR21-11.SWS_ComM_01070.COMM_PNC_NO_COM.To.COMM_PNC_REQUESTED</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Every time the sub state COMM_PNC_REQUESTED is entered from COMM_PNC_NO_COM
        ComM shall request COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST for all configured ComM
        channels which are referenced by this PNC via parameter ComMChannelPerPnc (see ECUC_ComM_00880 : ) and
        where ComMWakeupSleepRequestEnabled is set to TRUE.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_375</srcid><srcstatus/><internalId>1401</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_08</srcid><srcstatus/><internalId>2341</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ConTest_WakeupOnDataLine_SchM_03</srcid><srcstatus/><internalId>2360</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR21-11.SWS_ComM_01070</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR21-11.SWS_ComM_01070.COMM_PNC_PREPARE_SLEEP.To.COMM_PNC_REQUESTED</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Every time the sub state COMM_PNC_REQUESTED is entered from COMM_PNC_PREPARE_SLEEP
        ComM shall request COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST for all configured ComM
        channels which are referenced by this PNC via parameter ComMChannelPerPnc (see ECUC_ComM_00880 : ) and
        where ComMWakeupSleepRequestEnabled is set to TRUE.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_376</srcid><srcstatus/><internalId>1402</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_09</srcid><srcstatus/><internalId>2342</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR21-11.SWS_ComM_01070</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.ASR21-11.SWS_ComM_01071.COMM_PNC_REQUESTED.Entry</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Every time the sub state COMM_PNC_REQUESTED is entered from COMM_PNC_READY_SLEEP,
        ComM shall request COMM_FULL_COMMUNICATION for all configured ComM channels
        which are referenced by this PNC via parameter ComMChannelPerPnc (see ECUC_ComM_00880 : )
        and where ComMWakeupSleepRequestEnabled is set to TRUE.
      </description>
      <comment>
        Request for COMM_FULL_COMMUNICATION has only effect in states different then
        COMM_FULL_COM_NETWORK_REQUESTED
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_377</srcid><srcstatus/><internalId>1403</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_06</srcid><srcstatus/><internalId>2339</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_10</srcid><srcstatus/><internalId>2343</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.ASR21-11.SWS_ComM_01071</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION.WithRequest.COMM_FULL_COMMUNICATION</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        On entering state COMM_FULL_COMMUNICATION the ComM channel state machine shall switch
        on the transmission and reception capability. This shall be performed by the
        ComM channel state machine requesting the corresponding Communication Mode from the Bus State Manager module:
         - If Communication Mode COMM_FULL_COMMUNICATION was requested , then BusSM_RequestComMode(network:=channel state machine’s network,
           mode:= COMM_FULL_COMMUNICATION) shall be called
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_576</srcid><srcstatus/><internalId>1219</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_11</srcid><srcstatus/><internalId>2344</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_0</srcid><srcstatus/><internalId>1682</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00069</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        On entering state COMM_FULL_COMMUNICATION the ComM channel state machine shall switch
        on the transmission and reception capability. This shall be performed by the
        ComM channel state machine requesting the corresponding Communication Mode from the Bus State Manager module:
         - If Communication Mode COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST was requested and ComMWakeupSleepRequestEnabled of
           the ComM channel is set to TRUE, then BusSM_RequestComMode(network:=channel state machine’s network,
           mode:= COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST) shall be called.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_577</srcid><srcstatus/><internalId>1220</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_12</srcid><srcstatus/><internalId>2345</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_13</srcid><srcstatus/><internalId>2346</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ConTest_WakeupOnDataLine_MulticorePerChannel_01</srcid><srcstatus/><internalId>2355</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ConTest_WakeupOnDataLine_MulticorePerChannel_02</srcid><srcstatus/><internalId>2356</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ConTest_WakeupOnDataLine_SchM_01</srcid><srcstatus/><internalId>2358</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_1</srcid><srcstatus/><internalId>1683</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00069</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        On entering state COMM_FULL_COMMUNICATION the ComM channel state machine shall switch
        on the transmission and reception capability. This shall be performed by the
        ComM channel state machine requesting the corresponding Communication Mode from the Bus State Manager module:
         - If Communication Mode COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST was requested and ComMWakeupSleepRequestEnabled of
           the ComM channel is set to FALSE or not available, then BusSM_RequestComMode(network:=channel state machine’s network,
           mode:= COMM_FULL_COMMUNICATION) shall be called
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_578</srcid><srcstatus/><internalId>1221</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_14</srcid><srcstatus/><internalId>2347</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_15</srcid><srcstatus/><internalId>2348</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_2</srcid><srcstatus/><internalId>1684</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00069</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>

    <!-- ***************************************************************************************** -->

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00890.COMM_FULL_COM_READY_SLEEP</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_NETWORK_REQUESTED and the DCM does not indicate
        ComM_DCM_ActiveDiagnostic(&lt;channel&gt;)(see SWS_ComM_00873) and communication limitation is
        requested (see section [REF]), ComM channel state machine shall immediately switch to sub-state
        COMM_FULL_COM_READY_SLEEP
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComMNmCbkInd_forPassiveCh</srcid><srcstatus/><internalId>1899</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30040</srcid><srcstatus/><internalId>1912</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_FULL_COM_NETWORK_REQUESTED_0</srcid><srcstatus/><internalId>1734</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_FULL_COM_NETWORK_REQUESTED_1</srcid><srcstatus/><internalId>1735</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_935</srcid><srcstatus/><internalId>1262</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00051</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
            <linksto>ComM.SWS_ComM_00890</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00890.CANCEL_COMMTMINFULLCOMMODEDURATION</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComM_R20-11.arxml</source>
      <version>1</version>
      <description>
        In sub-state COMM_FULL_COM_NETWORK_REQUESTED and the DCM does not indicate
        ComM_DCM_ActiveDiagnostic(&lt;channel&gt;)(see SWS_ComM_00873) and communication limitation is
        requested module shall cancel the timer for ComMTMinFullComModeDuration.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1053</srcid><srcstatus/><internalId>1278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00051</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
            <linksto>ComM.SWS_ComM_00890</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00930.ComMPncGatewayEnabled.FALSE.Tx.WithValue.One</id>
      <status>approved</status>
      <version>1</version>
      <description>
        When entering the PNC sub state COMM_PNC_REQUESTED and if
        ComMPncGatewayEnabled = FALSE
        the API Com_SendSignal()shall be called with the value ‘1’ for the bit representing this PNC for
        the Com signal assigned to this PNC with ComMPncComSignalDirection "TX".
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_896</srcid><srcstatus/><internalId>1438</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00930</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00930.ComMPncGatewayType.NotSet.Tx.WithValue.One</id>
      <status>approved</status>
      <version>1</version>
      <description>
        When entering the PNC sub state COMM_PNC_REQUESTED and on
        all ComMChannels the PNC belongs to the ComMPncGatewayType is not set, the API Com_SendSignal()
        shall be called with the value '1' for the bit representing this PNC for the Com signal
        assigned to this PNC with ComMPncComSignalDirection "TX"
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_GATEWAY_TYPE_Not_Set</srcid><srcstatus/><internalId>2302</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_901</srcid><srcstatus/><internalId>1443</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00930</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE</id>
      <status>approved</status>
      <version>1</version>
      <description>
        When all ComMUsers assigned to this PNC request “No Communication”,
        the sub state COMM_PNC_REQUESTED shall be left and the sub state COMM_PNC_READY_SLEEP shall be
        entered, if the configuration switch ComMPncGatewayEnabled is set to FALSE.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncNoComToRdySlpTest</srcid><srcstatus/><internalId>2073</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ReleasingChannelsOfPNC</srcid><srcstatus/><internalId>2177</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SetChannelToNoComIfNoFullComRequested_1</srcid><srcstatus/><internalId>2327</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SingleChMultiPNCIntExtReq</srcid><srcstatus/><internalId>2329</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_1008</srcid><srcstatus/><internalId>1448</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_RequestComMode_NO_COM_REQ_BY_ALL_COMM_USER</srcid><srcstatus/><internalId>1717</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00938</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayType.NotSet</id>
      <status>approved</status>
      <version>1</version>
      <description>
        When all ComMUsers assigned to this PNC request “No Communication”,
        the sub state COMM_PNC_REQUESTED shall be left and the sub state COMM_PNC_READY_SLEEP shall be
        entered, if the configuration switch ComMPncGatewayEnabled is set to TRUE and on all channels the PNC
        belongs to the ComMPncGatewayType is not set.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_GATEWAY_TYPE_Not_Set</srcid><srcstatus/><internalId>2302</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_322</srcid><srcstatus/><internalId>1391</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.ComM_RequestComMode_NO_COM_REQ_BY_ALL_COMM_USER</srcid><srcstatus/><internalId>1717</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00938</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00962.CanSM</id>
      <status>approved</status>
      <version>1</version>
      <description>
        The prefix for the StateManager APIs ("&lt;BusSm&gt;") shall be CanSMif the
        Parameter ComMBusType is COMM_BUS_TYPE_CAN.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30004</srcid><srcstatus/><internalId>1890</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_355</srcid><srcstatus/><internalId>994</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_454</srcid><srcstatus/><internalId>1214</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00962</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00962.LinSM</id>
      <status>approved</status>
      <version>1</version>
      <description>
        The prefix for the StateManager APIs ("&lt;BusSm&gt;") shall be LinSM if the
        Parameter ComMBusType is COMM_BUS_TYPE_LIN.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30025</srcid><srcstatus/><internalId>2054</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_374</srcid><srcstatus/><internalId>997</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_473</srcid><srcstatus/><internalId>1217</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00962</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00962.FrSM</id>
      <status>approved</status>
      <version>1</version>
      <description>
        The prefix for the StateManager APIs ("&lt;BusSm&gt;") shall be FrSM if the
        Parameter ComMBusType is COMM_BUS_TYPE_FR.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30004</srcid><srcstatus/><internalId>1890</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_367</srcid><srcstatus/><internalId>996</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_466</srcid><srcstatus/><internalId>1216</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00962</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_00962.EthSM</id>
      <status>approved</status>
      <version>1</version>
      <description>
        The prefix for the StateManager APIs ("&lt;BusSm&gt;") shall be EthSM if the
        Parameter ComMBusType is COMM_BUS_TYPE_ETH.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30004</srcid><srcstatus/><internalId>1890</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_361</srcid><srcstatus/><internalId>995</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_460</srcid><srcstatus/><internalId>1215</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00962</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_01000.Operation.GetCurrentComMode</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Operation:  GetCurrentComMode
        Comment:    Returns the current Communication Manager Module mode for the SW-C-Return the
                    current Communication Manager Modul channel mode to the SW-C.
                    Please note: the channel mode is returned.
                    Even though the affected user is assigned to a PNC. (see ComM_GetCurrentComMode)
        Variation:  --
        Parameters: ComMode
                    Type:       ComM_ModeType
                    Direction:  OUT
                    Comment:    --
                    Variation:  --
        Possible    E_OK
        Errors:     E_NOT_OK
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_299</srcid><srcstatus/><internalId>1616</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_818</srcid><srcstatus/><internalId>1628</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1324</srcid><srcstatus/><internalId>1639</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_05_ASRRteIntegration</srcid><srcstatus/><internalId>2381</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_01000</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_01000.Operation.GetCurrentPNCComMode</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Operation:  GetCurrentPNCComMode
        Comment:    Return the current Communication Manager Modul PNC mode to the SW-C. Please note:
                    the PNC mode is returned as ComM_ModeType
                    (COMM_NO_COMMUNICATION == COMM_PNC_NO_COMMUNICATIO,
                    COMM_FULL_COMMUNICATION == COMM_PNC_FULL_COMMUNICATION).
                    If the affected ComM user is mapped to multiple PNCs
                    than the operation shall return E_MULTIPLE_PNC_ASSIGNED.
                    If the affected ComM user is mapped to no PNC
                    than the operation shall return E_NO_PNC_ASSIGNED.
        Variation:  --
        Parameters: ComMode
                    Type:       ComM_ModeType
                    Direction:  OUT
                    Comment:    --
                    Variation:  --
        Possible    E_OK
        Errors:     E_NOT_OK
                    E_MULTIPLE_PNC_ASSIGNED
                    E_NO_PNC_ASSIGNED
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_314</srcid><srcstatus/><internalId>1617</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1340</srcid><srcstatus/><internalId>1640</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GetCurrenPncComMode_RTE_1</srcid><srcstatus/><internalId>2325</internalId></linkedfrom><linkedfrom><srcid>TS_ComM_ImpTest_ASR_06_ASRGetCurrentPncComMode</srcid><srcstatus/><internalId>2382</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_01000</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_01000.Operation.GetMaxComMode</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Operation:  GetMaxComMode
        Comment:    Returns the current Communication Manager Module mode for the SW-C
        Variation:  --
        Parameters: ComMode
                    Type:       ComM_ModeType
                    Direction:  OUT
                    Comment:    --
                    Variation:  --
        Possible    E_OK
        Errors:     E_NOT_OK
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_331</srcid><srcstatus/><internalId>1618</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_833</srcid><srcstatus/><internalId>1629</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1358</srcid><srcstatus/><internalId>1641</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_04_ASRRteAPIs</srcid><srcstatus/><internalId>2380</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_01000</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>


    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_01000.Operation.GetRequestedComMode</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Operation:  GetRequestedComMode
        Comment:    Returns that last Communication Manager Module Mode requested by the SW-C
        Variation:  --
        Parameters: ComMode
                    Type:       ComM_ModeType
                    Direction:  OUT
                    Comment:    --
                    Variation:  --
        Possible    E_OK
        Errors:     E_NOT_OK
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_346</srcid><srcstatus/><internalId>1619</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_848</srcid><srcstatus/><internalId>1630</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1373</srcid><srcstatus/><internalId>1642</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_04_ASRRteAPIs</srcid><srcstatus/><internalId>2380</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_01000</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>

    <specobject>
      <id>ComM.EB_Ref.SWS_ComM_01000.Operation.RequestComMode</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Operation:  RequestComMode
        Comment:    The SW-C requests that all communication channels
                    it needs are in the provided Communication Manager Module mode
        Variation:  --
        Parameters: ComMode
                    Type:       ComM_ModeType
                    Direction:  IN
                    Comment:    --
                    Variation:  --
        Possible    E_OK
        Errors:     E_NOT_OK
                    E_MODE_LIMITATION
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_282</srcid><srcstatus/><internalId>1615</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_801</srcid><srcstatus/><internalId>1627</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1307</srcid><srcstatus/><internalId>1638</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_04_ASRRteAPIs</srcid><srcstatus/><internalId>2380</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_01000</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>ComM.EB.NoCommunication</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        ComM shall switch to "No communication" from "Network requested" state if Nm variant is
        configured as NONE and minimum time duration in the Full Communication mode expires.
      </description>
      <rationale>
        http://www.autosar.org/bugzilla/show_bug.cgi?id=46739
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30022</srcid><srcstatus/><internalId>1901</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>

    <specobject>
      <id>ComM.EB.EventQueue</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>2</version>
      <description>
        No duplicate events shall be added to the event queue, used to process the events. ComM shall
        not add an event to the event queue, if this event was already added to the queue before.
        Therefore, the size of the event queue is the amount of defined events.
      </description>
      <rationale>
        Not queuing duplicate events avoids an overflow of the queue.
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_EVENT_QUEUE</srcid><srcstatus/><internalId>2007</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_EVENT_QUEUE_IMP</srcid><srcstatus/><internalId>2369</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>

    <specobject>
      <id>ComM.EB.BSWMDGeneration_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The ComM module's generator shall generate a basic software module description (BSWMD) based
        on the ComM module's configuration containing information on the exclusive areas required by
        the ComM module's implementation.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>

    <specobject>
      <id>ComM.EB.BSWMDGeneration_2</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The ComM module's generator shall generate a basic software module description (BSWMD) based
        on the ComM module's configuration containing information on the scheduled MainFunctions
        together with the scheduling period.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>

    <specobject>
      <id>ComM.EB.BSWMDGeneration_3</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The ComM module's BSWMD shall be generated using a generator mode named "generate_swcd".
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>

    <specobject>
      <id>ComM.EB.DcmInterface</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        ComM-Dcm interface shall be configurable and the Dcm usage shall be Enabled/Disabled using an
        EB specific parameter ComMDcmUsage
      </description>
      <rationale>
        No Dcm interface is required for a ComM module if Dcm active and inactive
        diagnostics are not relevant / needed.
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>

    <specobject>
      <id>ComM.EB.DcmDependencyChecks</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The ComM module's configuration shall perform sanity checks to ensure that the setting of the
        configuration parameter ComMDcmUsage matches the existence of the Dcm module in the
        configuration project. An error shall be thrown if ComMDcmUsage is set to false and the Dcm
        module is included in the project. A warning shall be thrown if ComMDcmUsage is set to true
        and the Dcm module is not included in the project.
      </description>
      <rationale>
        Including Dcm module to a project where ComMDcmUsage is set to FALSE
        doesn't make sense or vice versa. This can be prevented / ensured by means
        of sanity checks.
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1749</srcid><srcstatus/><internalId>1562</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1752</srcid><srcstatus/><internalId>1563</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1756</srcid><srcstatus/><internalId>1564</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComMPncNmRequest.dependencyCheck</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The Ecu configuration parameter ComMPncNmRequest (ComM.ECUC_ComM_00886) for a ComMChannel can be set
        to TRUE only if ComMNmvariant of this channel is equal to FULL.
      </description>
      <rationale>
        According to the requirement ComM.SWS_ComM_00980, when a PNC enters the state
        PNC_REQUESTED, all channels of this PNC, which are configured with
        ComMPncNmRequest=TRUE shall request Nm_NetworkRequest() for the
        corresponding NM channels. However Nm_NetworkRequest() API is only
        available for channels with ComMNmVariant=FULL.
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_826</srcid><srcstatus/><internalId>1510</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_18062014_1</srcid><srcstatus/><internalId>2090</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>

    <specobject>
      <id>ComM.EB.DiagnosticIndicationOnPassiveCh</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        If ComMNmVariant of the channel is set to PASSIVE, call of ComM_DCM_ActiveDiagnostic() and
        ComM_Dcm_InActiveDiagnostic() shall have no effect.
      </description>
      <rationale>
        Active diagnostic is not possible on a Passive channel since it is not
        possible to keep the channel awake.
        See http://www.autosar.org/bugzilla/show_bug.cgi?id=56661
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_DiagnosticSessionOnPassiveCh</srcid><srcstatus/><internalId>1905</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM905</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
       ##   Wake up reason  Nm Variant   Nm actions Related    SWSID         Sub-state transition
       01   AdUr            FULL         Nm_NetworkRequest()   869           -&gt; Netw.Req
       02   AdUr            PASSIVE       -                     -            - (see ComM.EB.DiagnosticIndicationOnPassiveCh)
       03   EcuMWakeup      FULL         Nm_PassiveStartUp()   665, 133      -&gt; Netw.Req -&gt;Ready Sleep
                                         Nm_NetworkRelease()
       04   EcuMWakeup      PASSIVE      Nm_PassiveStartUp()   665           -&gt; Netw.Req -&gt; Ready Sleep
       05   NmRestartInd    FULL         Nm_PassiveStartUp()   902, 133      -&gt; Netw.Req -&gt; Ready Sleep
                                         Nm_NetworkRelease()
       06   NmRestartInd    PASSIVE      Nm_PassiveStartUp()   902           -&gt; Netw.Req -&gt; Ready Sleep
       07   EcuMWakeup+     FULL         Nm_PassiveStartUp()   665,          -&gt; Netw.Req
            AdUr                         Nm_NetworkRequest()   869, 870
       08   EcuMWakeup+     PASSIVE      Nm_PassiveStartUp()   665           -&gt; Ready Sleep (see ComM.EB.DiagnosticIndicationOnPassiveCh)
            AdUr
       09   NmRestartInd+   FULL         Nm_PassiveStartUp()   902,          -&gt; Netw.Req
            AdUr                         Nm_NetworkRequest()   869, 870
       10   NmRestartInd+   PASSIVE      Nm_PassiveStartUp()   902           -&gt; Ready Sleep (see ComM.EB.DiagnosticIndicationOnPassiveCh)
            AdUr
       11   NmNetwStart     FULL         Nm_PassiveStartUp()   903, 133      -&gt; Netw.Req -&gt; Ready Sleep
                                         Nm_NetworkRelease()
       12   NmNetwStart     PASSIVE      Nm_PassiveStartUp()   903           -&gt; Netw.Req -&gt; Ready Sleep
       13   NmNetwStart+    FULL         Nm_PassiveStartUp()   903,          -&gt; Netw.Req
            AdUr                         Nm_NetworkRequest()   869, 870
       14   NmNetwStart+    PASSIVE      Nm_PassiveStartUp()   903           -&gt; Ready Sleep (see ComM.EB.DiagnosticIndicationOnPassiveCh)
            AdUr
      </description>
      <comment>
        The sequence is shown in graphics/Table_5_Transition_possibilities.PNG (
        however note that active wake up of a PASSIVE channel is not possible).
        This requirement is removed from 4.0.3 but keeping this since the sequence
        charts reflects same requirement.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_DiagnosticSessionOnPassiveCh</srcid><srcstatus/><internalId>1905</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>

    <specobject>
      <id>ComM.EB.SWS_ComM_00827</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        Regarding "Communication allowed" and mode inhibitions, requests originating from a PNC state
        machine shall be treated like user requests for the according channels.
      </description>
      <rationale>
        If communication is not allowed or a mode inhibition is
        enabled by default, the behavior of ComM is not clear in the
        AUTOSAR specification (R4.0.3). This issue is reported at
        http://www.autosar.org/bugzilla/show_bug.cgi?id=53226 and a new
        requirement "SWS_ComM_00827" is added in R-4.1.1.
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncChnlInhibition</srcid><srcstatus/><internalId>2074</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_DefaultInhibitionChPNCs</srcid><srcstatus/><internalId>2075</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>

    <specobject>
      <id>ComM.EB.SWS_ComM_00501</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        If the optional global NmPassiveModeEnabled parameter is enabled and set to TRUE
        the parameter ComMNmVariant shall be limited to the values LIGHT, NONE, and PASSIVE.
      </description>
      <rationale>
        The global NmPassiveModeEnabled parameter was added by Rfc#54550 together with the
        ComMNmPassiveModeEnable. As these two need to have the same value, only the
        NmPassiveModeEnabled needs to be checked. A Rfc (#67962) was opened to remove the
        redundant ComMNmPassiveModeEnable parameter.
        In order to keep the implementation backwards compatible, the global NmPassiveModeEnabled
        is implemented as optional.
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_787</srcid><srcstatus/><internalId>1506</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>

    <specobject>
      <id>ComM.EB.SWS_ComM_00502</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        If the optional global NmPassiveModeEnable parameter is active and set to FALSE
        the ComMNmVariant shall be limited to the values LIGHT, NONE, and FULL.
      </description>
      <rationale>
        The global NmPassiveModeEnabled parameter was added by Rfc#54550 together with the
        ComMNmPassiveModeEnable. As these two need to have the same value, only the
        NmPassiveModeEnabled needs to be checked. A Rfc (#67962) was opened to remove the
        redundant ComMNmPassiveModeEnable parameter.
        In order to keep the implementation backwards compatible, the global NmPassiveModeEnabled
        is implemented as optional.
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_789</srcid><srcstatus/><internalId>1507</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>

    <specobject>
      <id>ComM.EB.PB.Format.VCC-62</id>
      <status>rejected</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The post-build configuration of the module SHALL be provided in Motorola S-Record format as
        defined in the "Motorola M68000 Family Programmer's Reference Manual", Appendix C.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>

    <specobject>
      <id>ComM.EB.PB.Format.C</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The post-build configuration of the module SHALL be provided as _PbCfg.c and _PbCfg.h files as well.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/ComM.xgen_213</srcid><srcstatus/><internalId>1674</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PB_ChannelPerPnc</srcid><srcstatus/><internalId>2096</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PB_UserPerPnc</srcid><srcstatus/><internalId>2097</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>

    <specobject>
      <id>ComM.EB.PB.Config.IMPLEMENTATION_CONFIG_VARIANT</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The IMPLEMENTATION_CONFIG_VARIANT of the module SHALL be set to VariantPostBuild.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_50</srcid><srcstatus/><internalId>1466</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_160</srcid><srcstatus/><internalId>1472</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_860</srcid><srcstatus/><internalId>1513</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1164</srcid><srcstatus/><internalId>1535</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>

    <specobject>
      <id>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The CONFIG-VARIANT (XDM: icc:v) element of the IMPLEMENTATIONCONFIGCLASS of each configuration element
        SHALL be set to VariantPostBuild. The CONFIG-CLASS (XDM: class attribute of the icc:v) element
        SHALL be set in a way that the implemented configuration class of the respective parameter is reflected
        (e.g., to PreCompile if it's a pre-compile time parameter and to PostBuild if it's a post-build time parameter).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_194</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_250</srcid><srcstatus/><internalId>1477</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_289</srcid><srcstatus/><internalId>1479</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_395</srcid><srcstatus/><internalId>1483</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_429</srcid><srcstatus/><internalId>1485</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_460</srcid><srcstatus/><internalId>1487</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_510</srcid><srcstatus/><internalId>1489</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_546</srcid><srcstatus/><internalId>1492</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_574</srcid><srcstatus/><internalId>1493</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_673</srcid><srcstatus/><internalId>1499</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_709</srcid><srcstatus/><internalId>1501</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_762</srcid><srcstatus/><internalId>1503</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_818</srcid><srcstatus/><internalId>1509</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_892</srcid><srcstatus/><internalId>1516</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1000</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1191</srcid><srcstatus/><internalId>1538</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1224</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1269</srcid><srcstatus/><internalId>1542</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1310</srcid><srcstatus/><internalId>1544</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1429</srcid><srcstatus/><internalId>1548</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1465</srcid><srcstatus/><internalId>1551</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1740</srcid><srcstatus/><internalId>1560</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1812</srcid><srcstatus/><internalId>1567</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1850</srcid><srcstatus/><internalId>1569</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1923</srcid><srcstatus/><internalId>1572</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1957</srcid><srcstatus/><internalId>1574</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1985</srcid><srcstatus/><internalId>1576</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2021</srcid><srcstatus/><internalId>1578</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2054</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2093</srcid><srcstatus/><internalId>1583</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2205</srcid><srcstatus/><internalId>1586</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2239</srcid><srcstatus/><internalId>1588</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2267</srcid><srcstatus/><internalId>1590</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2300</srcid><srcstatus/><internalId>1592</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2328</srcid><srcstatus/><internalId>1594</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2360</srcid><srcstatus/><internalId>1596</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2398</srcid><srcstatus/><internalId>1598</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>622</internalId></specobject>

    <specobject>
      <id>ComM.EB.PB.Config.AUTOSAR_4.0.3</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The configuration classes of each configuration parameter shall be selected in conformance to AUTOSAR 4.0.3
        if not specified different by other requirements (the AUTOSAR specification or following requirements define
        the minimal requirement on the configuration classes of the different configuration parameters (i.e., if
        according to the worksheet a specific parameter has a config class of link-time, it is permissible that this
        parameter has a config class of post-build in the real implementation. - A config class of pre-compile time
        however is not permissible)).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_194</srcid><srcstatus/><internalId>1474</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_250</srcid><srcstatus/><internalId>1477</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_289</srcid><srcstatus/><internalId>1479</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_395</srcid><srcstatus/><internalId>1483</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_429</srcid><srcstatus/><internalId>1485</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_460</srcid><srcstatus/><internalId>1487</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_510</srcid><srcstatus/><internalId>1489</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_546</srcid><srcstatus/><internalId>1492</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_574</srcid><srcstatus/><internalId>1493</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_673</srcid><srcstatus/><internalId>1499</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_709</srcid><srcstatus/><internalId>1501</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_762</srcid><srcstatus/><internalId>1503</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_818</srcid><srcstatus/><internalId>1509</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_892</srcid><srcstatus/><internalId>1516</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1000</srcid><srcstatus/><internalId>1522</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1191</srcid><srcstatus/><internalId>1538</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1224</srcid><srcstatus/><internalId>1540</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1269</srcid><srcstatus/><internalId>1542</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1310</srcid><srcstatus/><internalId>1544</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1429</srcid><srcstatus/><internalId>1548</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1465</srcid><srcstatus/><internalId>1551</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1740</srcid><srcstatus/><internalId>1560</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1812</srcid><srcstatus/><internalId>1567</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1850</srcid><srcstatus/><internalId>1569</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1923</srcid><srcstatus/><internalId>1572</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1957</srcid><srcstatus/><internalId>1574</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1985</srcid><srcstatus/><internalId>1576</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2021</srcid><srcstatus/><internalId>1578</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2054</srcid><srcstatus/><internalId>1580</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2093</srcid><srcstatus/><internalId>1583</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2205</srcid><srcstatus/><internalId>1586</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2239</srcid><srcstatus/><internalId>1588</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2267</srcid><srcstatus/><internalId>1590</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2300</srcid><srcstatus/><internalId>1592</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2328</srcid><srcstatus/><internalId>1594</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2360</srcid><srcstatus/><internalId>1596</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2398</srcid><srcstatus/><internalId>1598</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>623</internalId></specobject>

    <specobject>
      <id>ComM.EB.PB.Config.REQPROD_233633_1.AUTOSAR403PB.ComMPncEnabled</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The parameter ComMPncEnabled shall be provided with CONFIG-CLASS set to POST-BUILD in addition to CONFIG-CLASS PRE-COMPILE parameter ComMPncSupport.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_109</srcid><srcstatus/><internalId>1469</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>

    <specobject>
      <id>ComM.EB.PB.Config.REQPROD_233633_1.RFC_55562.ComMChannelPerPnc</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The CONFIG-CLASS of ComMChannelPerPnc SHALL be set to POST-BUILD.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1073</srcid><srcstatus/><internalId>1526</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PB_ChannelPerPnc</srcid><srcstatus/><internalId>2096</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>

    <specobject>
      <id>ComM.EB.PB.Config.REQPROD_233633_1.RFC_55562.ComMUserPerPnc</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The CONFIG-CLASS of ComMUserPerPnc SHALL be set to POST-BUILD.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1123</srcid><srcstatus/><internalId>1531</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PB_UserPerPnc</srcid><srcstatus/><internalId>2097</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>

    <specobject>
      <id>ComM.EB.PB.Config.ComMRelocatablePbcfgEnable</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The boolean configuration parameter ComMRelocatablePbcfgEnable}}with {{CONFIG-CLASS PRE-COMPILE with default value of true
        SHALL be placed into the container CanNmGeneral beneath the module definition. The parameter SHALL NOT be available (editable)
        if the PbCfgM module configuration references the CanNm module. In this case the PbCfgM determines if the post build configuration is relocateable.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2158</srcid><srcstatus/><internalId>1585</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>627</internalId></specobject>

    <specobject>
      <id>ComM.EB.PB.Impl.IsValid</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The module SHALL implement the function ComM_IsValidConfig().
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_Test_IsValidConfig</srcid><srcstatus/><internalId>2374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>

    <specobject>
      <id>ComM.EB.PB.Impl.Hash</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The module post-build configuration struct SHALL be extended by a hash value.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_45</srcid><srcstatus/><internalId>855</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_var/xgen/ComM.xgen_141</srcid><srcstatus/><internalId>1673</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>

    <specobject>
      <id>ComM.EB.PB.Impl.RFC_55562.Init</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        According to Autosar Bugzilla RFC #55562 the signature of ComM_Init() SHALL be void ComM_Init( const ComM_ConfigType* config ).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_Test_VerifyInitWithPcfgM</srcid><srcstatus/><internalId>2375</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>

    <specobject>
      <id>ComM.EB.PB.Impl.Init</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The Init() function SHALL be extended so that the configuration can be obtained from the PbcfgM
        if a NULL_PTR is passed to the function.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_Test_VerifyInitWithPcfgM</srcid><srcstatus/><internalId>2375</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>

    <specobject>
      <id>ComM.EB.PB.Impl.PbCfgM</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The PbcfgM support in the module SHALL be enabled only when the PbcfgM references the module.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_660</srcid><srcstatus/><internalId>1000</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>

    <specobject>
      <id>ComM.EB.PB.Impl.Relocatable</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The post-build configuration SHALL only be relocatable if ComMRelocatablePbcfgEnable is set to true
        and if PbcfgM enabled relocatable configurations.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_62</srcid><srcstatus/><internalId>856</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_var/xgen/ComM.xgen_132</srcid><srcstatus/><internalId>1671</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComMPncComSignal</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        Parameter ComMPncComSignal with ComMPncComSignalDirection set to TX shall be only forced for a PNC
        if the PNC contains a ComM channel with ComMNmVariant set to FULL.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_974</srcid><srcstatus/><internalId>1519</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PassiveActive_Channel</srcid><srcstatus/><internalId>1834</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Passive_Channel</srcid><srcstatus/><internalId>1835</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_Init_NULL_PTR</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        In case ComM_Init is called with NULL_PTR and ComMDevErrorDetect is set to false
        and PbcfgM_GetConfig(or ComM is not configurred in the PbcfgM module)
        cannot return a valid configuration,
        the ComM shall not be initialized.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_686</srcid><srcstatus/><internalId>1001</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30002</srcid><srcstatus/><internalId>1888</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_EcuM_PNCWakeUpIndication_No_PNCs</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        In case no PNCs are configured function ComM_EcuM_PNCWakeUpIndication shall be an empty function.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2856</srcid><srcstatus/><internalId>1095</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PNC_Wakeup_No_PNCs_Configured</srcid><srcstatus/><internalId>2053</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_PASSIVE_WAKEUP_IND_NoComNoPendingReq</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        When ComM State Machine is in state NO_COM_NO_PENDING_REQUEST and function
        ComM_Nm_NetworkStartIndication() is called the state machine shall switch to
        state NO_COM_REQUEST_PENDING.
      </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_0</srcid><srcstatus/><internalId>1727</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2265</srcid><srcstatus/><internalId>1061</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NetworkStartIndicationTransition</srcid><srcstatus/><internalId>1948</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_PncReadySleep_PncRequested</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        When ComM State Machine is in state PNC_READY_SLEEP and at least one bit
        representing this PNC in the ERAn changes to '1' and if ComMPncGatewayEnabled
        is TRUE, transition to PNC_REQUESTED shall be done.
      </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_READY_SLEEP_0</srcid><srcstatus/><internalId>1771</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_READY_SLEEP_1</srcid><srcstatus/><internalId>1772</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3589</srcid><srcstatus/><internalId>1136</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_1</srcid><srcstatus/><internalId>2289</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>638</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_PncReadySleep_PncRequested_User</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        When ComM State Machine is in state PNC_READY_SLEEP and user requests
        full communication, transition to PNC_REQUESTED is done.
      </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_READY_SLEEP_2</srcid><srcstatus/><internalId>1773</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_357</srcid><srcstatus/><internalId>1393</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_03</srcid><srcstatus/><internalId>2336</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_FULL_COM_NETWORK_REQUESTED_Transition_UserRequest</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        When ComM State Machine is in state FULL_COM_NETWORK_REQUESTED_ENTRY and if
        ComMNmVariant for the channel is set to FULL, transition to
        FULL_COM_NETWORK_REQUESTED_PENDING shall be done if user request the channel.
      </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_0</srcid><srcstatus/><internalId>1737</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1065</srcid><srcstatus/><internalId>1279</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30003</srcid><srcstatus/><internalId>1889</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_FULL_COM_NETWORK_REQUESTED_Transition_DcmRequest</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        When ComM State Machine is in state FULL_COM_NETWORK_REQUESTED_ENTRY and if
        ComMNmVariant for the channel is set to FULL, transition to
        FULL_COM_NETWORK_REQUESTED_PENDING shall be done if DCM request the channel.
      </description>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_1</srcid><srcstatus/><internalId>1738</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1066</srcid><srcstatus/><internalId>1280</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SC_FulSilFul_thruDiag</srcid><srcstatus/><internalId>1908</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>

    <specobject>
     <id>ComM.EB.SWS_ComM_Channel_ComMSynchronousWakeUp_true</id>
     <status>approved</status>
     <source>Elektrobit Automotive GmbH</source>
     <version>1</version>
     <description>
       In sub-state COMM_NO_COM_NO_PENDING_REQUEST and configuration parameter ComMSynchronousWakeUp=TRUE (ECUC_ComM_00695) and
       a PNC wake-up-indication is indicated by the EcuM, the ComM module shall immediately switch all ComM channel state machines
       (resp. channels) to sub-state COMM_NO_COM_REQUEST_PENDING.
     </description>
     <rationale>
     This requirment is complementary with the requirment ComM.EB.SWS_ComM_Channel_ComMSynchronousWakeUp_false.
     https://www.autosar.org/bugzilla/show_bug.cgi?id=77667
     </rationale>
     <needscoverage>
       <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3916</srcid><srcstatus/><internalId>1150</internalId></linkedfrom></coveredby></needscov>
       <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PNC_Wakeup</srcid><srcstatus/><internalId>2174</internalId></linkedfrom></coveredby></needscov>
     <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>

    <specobject>
     <id>ComM.EB.SWS_ComM_Channel_ComMSynchronousWakeUp_false</id>
     <status>approved</status>
     <source>Elektrobit Automotive GmbH</source>
     <version>1</version>
     <description>
       In sub-state COMM_NO_COM_NO_PENDING_REQUEST and configuration parameter ComMSynchronousWakeUp=FALSE (ECUC_ComM_00695) and
       a PNC wake-up-indication is indicated by the EcuM, the ComM module shall immediately switch all ComM channel state machines
       (resp. channels) which are referenced  by the PNC to sub-state COMM_NO_COM_REQUEST_PENDING.
     </description>
     <rationale>
     This requirment is complementary with the requirment SWS_ComM_00964.
     https://www.autosar.org/bugzilla/show_bug.cgi?id=77667
     </rationale>
     <needscoverage>
       <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3929</srcid><srcstatus/><internalId>1153</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3986</srcid><srcstatus/><internalId>1158</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4045</srcid><srcstatus/><internalId>1163</internalId></linkedfrom></coveredby></needscov>
       <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_EcuM_PncWakeUp</srcid><srcstatus/><internalId>2307</internalId></linkedfrom></coveredby></needscov>
     <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>

     <specobject>
      <id>ComM.EB.ComM_EcuM_PNCWakeUpIndication_ComMPncEnable_FALSE</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        When ComMPncEnabled is FALSE, EcuM PNC wakeup indications will be ignored.
      </description>
      <rationale>
        ComMPncEnabled is post build configurable.
     </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2847</srcid><srcstatus/><internalId>1094</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_EcuM_PncWakeUp_PncDisabled</srcid><srcstatus/><internalId>2306</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>

    <specobject>
      <id>ComM.EB.WakeupInhibition</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        In case of wakeup inhibition (function ComM_PreventWakeUp is called) and
        the current state is COMM_NO_COM_REQUEST_PENDING the state machine shall
        switch to state COMM_NO_COM_NO_PENDING_REQUEST in case
        passive wakeup indication was not detected and dcm does not request the channel.
      </description>
      <comment>
       See RFC https://www.autosar.org/bugzilla/show_bug.cgi?id=73693
      </comment>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.WAKEUP_INHIBITION_NO_COM_REQUEST_PENDING</srcid><srcstatus/><internalId>1763</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1619</srcid><srcstatus/><internalId>1350</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupInhibition0</srcid><srcstatus/><internalId>2024</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupInhibition1</srcid><srcstatus/><internalId>2025</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupInhibition2</srcid><srcstatus/><internalId>2026</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupInhibition3</srcid><srcstatus/><internalId>2027</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupInhibition4</srcid><srcstatus/><internalId>2028</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupInhibition5</srcid><srcstatus/><internalId>2029</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupInhibition6</srcid><srcstatus/><internalId>2030</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupInhibition9</srcid><srcstatus/><internalId>2082</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupInhibition10</srcid><srcstatus/><internalId>2083</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupInhibition11</srcid><srcstatus/><internalId>2084</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>

    <specobject>
      <id>ComM.EB.LimitToNoCom</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        In case of limit to no communication
        (function ComM_LimitChannelToNoComMode or ComM_LimitECUToNoComMode is called) and
        the current state is COMM_NO_COM_REQUEST_PENDING the state machine shall
        switch to state COMM_NO_COM_NO_PENDING_REQUEST in case
        passive wakeup indication was not detected and dcm does not request the channel.
      </description>
      <comment>
        See RFC https://www.autosar.org/bugzilla/show_bug.cgi?id=73693
      </comment>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_NO_COM_REQUEST_PENDING_0</srcid><srcstatus/><internalId>1761</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_NO_COM_REQUEST_PENDING_1</srcid><srcstatus/><internalId>1762</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1552</srcid><srcstatus/><internalId>1341</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_LimitToNoCom0</srcid><srcstatus/><internalId>2012</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_LimitToNoCom1</srcid><srcstatus/><internalId>2013</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_LimitToNoCom2</srcid><srcstatus/><internalId>2014</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_LimitToNoCom3</srcid><srcstatus/><internalId>2015</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_LimitToNoCom4</srcid><srcstatus/><internalId>2016</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_LimitToNoCom5</srcid><srcstatus/><internalId>2017</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_LimitToNoCom6</srcid><srcstatus/><internalId>2018</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_LimitToNoCom7_0</srcid><srcstatus/><internalId>2019</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_LimitToNoCom7_1</srcid><srcstatus/><internalId>2020</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_LimitToNoCom9</srcid><srcstatus/><internalId>2078</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_LimitToNoCom10</srcid><srcstatus/><internalId>2079</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_LimitToNoCom11</srcid><srcstatus/><internalId>2080</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>646</internalId></specobject>
    <specobject>
      <id>ComM.EB.LimitToNoComClearUserRequest</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        In case of limit to no communication
        (function ComM_LimitChannelToNoComMode or ComM_LimitECUToNoComMode is called) and
        the current state is COMM_NO_COM_REQUEST_PENDING the state machine shall
        switch to state COMM_NO_COM_NO_PENDING_REQUEST and clear the user request
        in case all channels linked to the user are in no communication.
      </description>
      <comment>
        See RFC https://www.autosar.org/bugzilla/show_bug.cgi?id=73693
      </comment>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_NO_COM_REQUEST_PENDING_0</srcid><srcstatus/><internalId>1761</internalId></linkedfrom><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_NO_COM_REQUEST_PENDING_1</srcid><srcstatus/><internalId>1762</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1568</srcid><srcstatus/><internalId>1344</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_LimitToNoComClearUserRequest</srcid><srcstatus/><internalId>2041</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PreventWakeupCancellation</srcid><srcstatus/><internalId>2042</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PassiveWakeupLimitToNoCom</srcid><srcstatus/><internalId>2043</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>

    <specobject>
      <id>ComM.EB.PBSelectable.FileName</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If postBuildVariant returns a non-empty string, the module's post-build-time
        configuration file names shall be changed in the following way:
        ComM_PBcfg.* to ComM_&lt;postBuildVariant&gt;_PBcfg.*
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/ComM.xgen_98</srcid><srcstatus/><internalId>1669</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PB_ChannelPerPnc</srcid><srcstatus/><internalId>2096</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PB_UserPerPnc</srcid><srcstatus/><internalId>2097</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>

    <specobject>
      <id>ComM.EB.PBSelectable.TypeName</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If postBuildVariant returns a non-empty string, the module's post-build-time
        configuration type/variable names shall be changed in the following way:
        - ComM_[Const]ConfigLayoutType to ComM_&lt;postBuildVariant&gt;_[Const]ConfigLayoutType
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/ComM.xgen_104</srcid><srcstatus/><internalId>1670</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PB_ChannelPerPnc</srcid><srcstatus/><internalId>2096</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PB_UserPerPnc</srcid><srcstatus/><internalId>2097</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>

    <specobject>
      <id>ComM.EB.PBSelectable.Master</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If postBuildVariant returns a non-empty string, the module shall generate a post-build-time
        configuration file ComM_PBcfg.h/c which includes all the variants specific post-build-time
        configurations (ComM_&lt;postBuildVariant&gt;[_*]_PBcfg.h/c).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_PBcfg.h_8</srcid><srcstatus/><internalId>865</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_PBcfg.c_6</srcid><srcstatus/><internalId>927</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PB_ChannelPerPnc</srcid><srcstatus/><internalId>2096</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PB_UserPerPnc</srcid><srcstatus/><internalId>2097</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>

    <specobject>
      <id>ComM.EB.ModeDeclarationGroup.ComMDefineOrder</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ComManager.pdf, V2.3.0, R3.2 Rev 2</source>
      <version>1</version>
      <description>
        The vendor specific parmaeter ComMDefineOrder shall be used to define the
        category of the ModeDeclarationGroup in the generated module description.
        Possible values:  - AlphabeticalOrder
                          - ExplicitOrder
        Default value for the parameter set according to ASR4.0.3: ExplicitOrder.
      </description>
      <releases>
        <release>AUTOSAR 3.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM_EBParameters.xdm.m4_59</srcid><srcstatus/><internalId>1600</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_162</srcid><srcstatus/><internalId>1612</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_695</srcid><srcstatus/><internalId>1625</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1192</srcid><srcstatus/><internalId>1636</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>651</internalId></specobject>

    <specobject>
      <id>ComM.EB.Config.ComMMultiCoreSupport</id>
      <status>approved</status>
      <version>1</version>
      <description>
        The boolean configuration parameter ComMMultiCoreSupport enables module multi core support.
        The parameter has CONFIG-CLASS PRE-COMPILE and default value FALSE.
        It SHALL be placed into ComMGeneralContainer.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_200</srcid><srcstatus/><internalId>858</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1592</srcid><srcstatus/><internalId>1557</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_Multicore_1</srcid><srcstatus/><internalId>1837</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Multicore_2</srcid><srcstatus/><internalId>1838</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Multicore_3</srcid><srcstatus/><internalId>1839</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Multicore_4</srcid><srcstatus/><internalId>1840</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Multicore_5</srcid><srcstatus/><internalId>1841</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>

    <specobject>
      <id>ComM.EB.SchM_Call_CanSM_RequestComMode</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If ComMMultiCoreSupport is TRUE, ComM shall call SchM_Call_ComM_RequiredCSEntry_CanSM_RequestComMode
        instead of CanSM_RequestComMode.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_BSW_Cfg.c_344</srcid><srcstatus/><internalId>872</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Schm_Call</srcid><srcstatus/><internalId>1955</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Schm_Call_ComM_RequiredCSEntry</srcid><srcstatus/><internalId>1956</internalId></linkedfrom><linkedfrom><srcid>Tst_CanSM_RequestComMode</srcid><srcstatus/><internalId>1981</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>

    <specobject>
      <id>ComM.EB.SchM_Call_EthSM_RequestComMode</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If ComMMultiCoreSupport is TRUE, ComM shall call SchM_Call_ComM_RequiredCSEntry_EthSM_RequestComMode
        instead of EthSM_RequestComMode.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_BSW_Cfg.c_346</srcid><srcstatus/><internalId>874</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Schm_Call</srcid><srcstatus/><internalId>1955</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Schm_Call_ComM_RequiredCSEntry</srcid><srcstatus/><internalId>1956</internalId></linkedfrom><linkedfrom><srcid>Tst_EthSM_RequestComMode</srcid><srcstatus/><internalId>1983</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>

    <specobject>
      <id>ComM.EB.SchM_Call_FrSM_RequestComMode</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If ComMMultiCoreSupport is TRUE, ComM shall call SchM_Call_ComM_RequiredCSEntry_FrSM_RequestComMode
        instead of FrSM_RequestComMode.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_BSW_Cfg.c_345</srcid><srcstatus/><internalId>873</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Schm_Call</srcid><srcstatus/><internalId>1955</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Schm_Call_ComM_RequiredCSEntry</srcid><srcstatus/><internalId>1956</internalId></linkedfrom><linkedfrom><srcid>Tst_FrSM_RequestComMode</srcid><srcstatus/><internalId>1982</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>

    <specobject>
      <id>ComM.EB.SchM_Call_LinSM_RequestComMode</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If ComMMultiCoreSupport is TRUE, ComM shall call SchM_Call_ComM_RequiredCSEntry_LinSM_RequestComMode
        instead of LinSM_RequestComMode.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_BSW_Cfg.c_347</srcid><srcstatus/><internalId>875</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Schm_Call</srcid><srcstatus/><internalId>1955</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Schm_Call_ComM_RequiredCSEntry</srcid><srcstatus/><internalId>1956</internalId></linkedfrom><linkedfrom><srcid>Tst_LinSM_RequestComMode</srcid><srcstatus/><internalId>1984</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>

    <specobject>
      <id>ComM.EB.SchM_Call_Dcm_ComM_FullComModeEntered</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If ComMMultiCoreSupport is TRUE, ComM shall call
        SchM_Call_ComM_RequiredCSEntry_Dcm_ComM_FullComModeEntered_ComMChannel_3
        instead of Dcm_ComM_FullComModeEntered.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_BSW_Cfg.c_363</srcid><srcstatus/><internalId>876</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_BSW_Cfg.c_824</srcid><srcstatus/><internalId>879</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Schm_Call</srcid><srcstatus/><internalId>1955</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Schm_Call_ComM_RequiredCSEntry</srcid><srcstatus/><internalId>1956</internalId></linkedfrom><linkedfrom><srcid>Tst_Dcm_ComM_FullComModeEntered</srcid><srcstatus/><internalId>1978</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>657</internalId></specobject>

    <specobject>
      <id>ComM.EB.SchM_Call_Dcm_ComM_SilentComModeEntered</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If ComMMultiCoreSupport is TRUE, ComM shall call
        SchM_Call_ComM_RequiredCSEntry_Dcm_ComM_SilentComModeEntered_ComMChannel_3
        instead of Dcm_ComM_SilentComModeEntered.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_BSW_Cfg.c_366</srcid><srcstatus/><internalId>877</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_BSW_Cfg.c_827</srcid><srcstatus/><internalId>880</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Schm_Call</srcid><srcstatus/><internalId>1955</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Schm_Call_ComM_Dcm_NoComModeEntered</srcid><srcstatus/><internalId>1957</internalId></linkedfrom><linkedfrom><srcid>Tst_Dcm_ComM_SilentComModeEntered</srcid><srcstatus/><internalId>1979</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>

    <specobject>
      <id>ComM.EB.SchM_Call_Dcm_ComM_NoComModeEntered</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If ComMMultiCoreSupport is TRUE, ComM shall call
        SchM_Call_ComM_RequiredCSEntry_Dcm_ComM_NoComModeEntered_ComMChannel_3
        instead of Dcm_ComM_NoComModeEntered.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_BSW_Cfg.c_371</srcid><srcstatus/><internalId>878</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_BSW_Cfg.c_832</srcid><srcstatus/><internalId>881</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Schm_Call</srcid><srcstatus/><internalId>1955</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Schm_Call_ComM_Dcm_NoComModeEntered</srcid><srcstatus/><internalId>1957</internalId></linkedfrom><linkedfrom><srcid>Tst_Dcm_ComM_NoComModeEntered</srcid><srcstatus/><internalId>1980</internalId></linkedfrom><linkedfrom><srcid>Tst_Dcm_ComM_BusSM_Notification</srcid><srcstatus/><internalId>1985</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>

    <specobject>
      <id>ComM.EB.SchM_Call_Client_Server_DET</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If ComMMultiCoreSupport is TRUE and DET is enabled and SchM client server interface
        returns a different value from SCHM_E_OK, DET shall be reported
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_877</srcid><srcstatus/><internalId>903</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_597</srcid><srcstatus/><internalId>1224</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1441</srcid><srcstatus/><internalId>1327</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1662</srcid><srcstatus/><internalId>1356</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1802</srcid><srcstatus/><internalId>1366</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>Tst_Dcm_ComM_FullComModeEntered</srcid><srcstatus/><internalId>1978</internalId></linkedfrom><linkedfrom><srcid>Tst_Dcm_ComM_SilentComModeEntered</srcid><srcstatus/><internalId>1979</internalId></linkedfrom><linkedfrom><srcid>Tst_Dcm_ComM_NoComModeEntered</srcid><srcstatus/><internalId>1980</internalId></linkedfrom><linkedfrom><srcid>Tst_CanSM_RequestComMode</srcid><srcstatus/><internalId>1981</internalId></linkedfrom><linkedfrom><srcid>Tst_FrSM_RequestComMode</srcid><srcstatus/><internalId>1982</internalId></linkedfrom><linkedfrom><srcid>Tst_EthSM_RequestComMode</srcid><srcstatus/><internalId>1983</internalId></linkedfrom><linkedfrom><srcid>Tst_LinSM_RequestComMode</srcid><srcstatus/><internalId>1984</internalId></linkedfrom><linkedfrom><srcid>Tst_Dcm_ComM_BusSM_Notification</srcid><srcstatus/><internalId>1985</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>

    <specobject>
      <id>ComM.EB.SchM_Call_Sender_Receiver_DET</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If ComMMultiCoreSupport is TRUE and DET is enabled and SchM Sender Receiver interface
        returns a different value from SCHM_E_OK, DET shall be reported
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_925</srcid><srcstatus/><internalId>908</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_977</srcid><srcstatus/><internalId>910</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1017</srcid><srcstatus/><internalId>914</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1071</srcid><srcstatus/><internalId>916</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1108</srcid><srcstatus/><internalId>920</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1160</srcid><srcstatus/><internalId>922</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1202</srcid><srcstatus/><internalId>925</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3661</srcid><srcstatus/><internalId>1142</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Multicore_SlaveDataSetEiraDet</srcid><srcstatus/><internalId>1970</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Multicore_SlaveDataSetEraDet</srcid><srcstatus/><internalId>1971</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Multicore_MasterDataGetEiraDet</srcid><srcstatus/><internalId>1972</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Multicore_MasterDataGetEraDet</srcid><srcstatus/><internalId>1973</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Multicore_MasterDataSetEiraDet</srcid><srcstatus/><internalId>1974</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Multicore_MasterDataSetEraDet</srcid><srcstatus/><internalId>1975</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Multicore_SlaveDataGetEiraDet</srcid><srcstatus/><internalId>1976</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Multicore_SlaveDataGetEraDet</srcid><srcstatus/><internalId>1977</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>

    <specobject>
      <id>ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore</id>
      <status>approved</status>
      <version>1</version>
      <description>
        When the ComM references a Com signal that is processed on a different core than the ComM master,
        the ComM module shall only call the Com interfaces for sending/receiving the signal (Com_SendSignal, Com_ReceiveSignal) on
        the core processing the signal.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_917</srcid><srcstatus/><internalId>905</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1010</srcid><srcstatus/><internalId>912</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1101</srcid><srcstatus/><internalId>918</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_1195</srcid><srcstatus/><internalId>923</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Multicore_EIRAOnSameCoreAsMastercore_1</srcid><srcstatus/><internalId>1961</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Multicore_ERAOnSameCoreAsMastercore_2</srcid><srcstatus/><internalId>1962</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Multicore_ERAPassiveOnSameCoreAsMastercore_3</srcid><srcstatus/><internalId>1963</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Multicore_EIRAOnSameCoreAsMastercore_4</srcid><srcstatus/><internalId>1964</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Multicore_ERAOnSameCoreAsMastercore_5</srcid><srcstatus/><internalId>1965</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Multicore_ERAPassiveOnSameCoreAsMastercore_5</srcid><srcstatus/><internalId>1966</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Multicore_EIRAOnDifferentCoreAsMastercore_1</srcid><srcstatus/><internalId>1967</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>

    <specobject>
      <id>ComM.EB.SchM_Call_Sender_Receiver_SendSlaveCore</id>
      <status>approved</status>
      <version>1</version>
      <description>
        When the ComM references a Com signal that is processed on a different core than the ComM master,
        ComM master shall use SchM sender receiver interfaces for providing the data to the
        ComM slave that is handling the transmission of the signal (calls Com_SendSignal).
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3653</srcid><srcstatus/><internalId>1141</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Multicore_ERAOnSameCoreAsMastercore_5</srcid><srcstatus/><internalId>1965</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Multicore_ERAPassiveOnSameCoreAsMastercore_5</srcid><srcstatus/><internalId>1966</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Multicore_ERAOnDifferentCoreAsMastercore_2</srcid><srcstatus/><internalId>1968</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Multicore_ERAPassiveOnDifferentCoreAsMastercore_3</srcid><srcstatus/><internalId>1969</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>

    <specobject>
      <id>ComM.EB.SchM_Call_Sender_Receiver_ReceiveSlaveCore</id>
      <status>approved</status>
      <version>1</version>
      <description>
        When the ComM references a Com signal that is processed on a different core than the ComM master,
        the ComM slave receiving a signal (call Com_ReceiveSignal)
        shall use SchM sender receiver interface for providing the data to the ComM master.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_921</srcid><srcstatus/><internalId>907</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Multicore_ERAOnDifferentCoreAsMastercore_2</srcid><srcstatus/><internalId>1968</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Multicore_ERAPassiveOnDifferentCoreAsMastercore_3</srcid><srcstatus/><internalId>1969</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>

    <specobject>
      <id>ComM.EB.MasterCoreOsApplicationCoreId</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore is enabled and the master core cannot be mapped to a CoreId,
        via OsApplicationCoreRef or OsApplicationCoreAssignment, a generation error shall be reported.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/ComM_Checks.m_111</srcid><srcstatus/><internalId>932</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_01_XdmChecks</srcid><srcstatus/><internalId>1860</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>

    <specobject>
      <id>ComM.EB.MasterCoreMultipleOsApplicationCoreIds</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore is enabled and master core is mapped to more than one distinct CoreIds
        via OsApplicationCoreRef or OsApplicationCoreAssignment, a generation error shall be reported.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/ComM_Checks.m_119</srcid><srcstatus/><internalId>933</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_02_XdmChecks</srcid><srcstatus/><internalId>1861</internalId></linkedfrom><linkedfrom><srcid>ComM_GenTest_24_XdmChecks</srcid><srcstatus/><internalId>1883</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>

    <specobject>
      <id>ComM.EB.SignalMappedToPDU</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore is enabled and signals used by ComM are not mapped to a PDU
        generation error shall be reported.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/ComM_Checks.m_127</srcid><srcstatus/><internalId>934</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/ComM_Checks.m_167</srcid><srcstatus/><internalId>939</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_03_XdmChecks</srcid><srcstatus/><internalId>1862</internalId></linkedfrom><linkedfrom><srcid>ComM_GenTest_07_XdmChecks</srcid><srcstatus/><internalId>1866</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>

    <specobject>
      <id>ComM.EB.PDUsMappedToMainfunctions</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore is enabled and signals used by ComM are mapped to PDUs,
        and in case each PDU is not mapped to a Com mainfunction
        generation error shall be reported.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/ComM_Checks.m_133</srcid><srcstatus/><internalId>935</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/ComM_Checks.m_174</srcid><srcstatus/><internalId>940</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_04_XdmChecks</srcid><srcstatus/><internalId>1863</internalId></linkedfrom><linkedfrom><srcid>ComM_GenTest_08_XdmChecks</srcid><srcstatus/><internalId>1867</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>

    <specobject>
      <id>ComM.EB.SignalMappedToOsApplicationCoreId</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore is enabled and signals used by ComM cannot be mapped to
        a CoreId via OsApplicationCoreRef or OsApplicationCoreAssignment, a generation error shall be reported.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/ComM_Checks.m_149</srcid><srcstatus/><internalId>937</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/ComM_Checks.m_190</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_05_XdmChecks</srcid><srcstatus/><internalId>1864</internalId></linkedfrom><linkedfrom><srcid>ComM_GenTest_09_XdmChecks</srcid><srcstatus/><internalId>1868</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>

    <specobject>
      <id>ComM.EB.SignalMappedToMultipleOsApplicationCoreIds</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore is enabled and a signal used by ComM is mapped to
        more than one distinct CoreId via OsApplicationCoreRef or OsApplicationCoreAssignment,
        a generation error shall be reported.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/ComM_Checks.m_158</srcid><srcstatus/><internalId>938</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/ComM_Checks.m_199</srcid><srcstatus/><internalId>943</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_06_XdmChecks</srcid><srcstatus/><internalId>1865</internalId></linkedfrom><linkedfrom><srcid>ComM_GenTest_10_XdmChecks</srcid><srcstatus/><internalId>1869</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>

    <specobject>
      <id>ComM.EB.BusNm_GetState</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore is enabled and a signal used by ComM is mapped to
        more than one distinct OsApplicationCoreAssignment
        generation error shall be reported.
        For configurations with multicore enabled, state of busNm is
        stored from ComM_Nm_NetworkMode, ComM_Nm_PrepareBusSleepMode or
        ComM_Nm_BusSleepMode.
      </description>
      <rationale>Nm_GetState is a syncrhonous interface.</rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2305</srcid><srcstatus/><internalId>1063</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2348</srcid><srcstatus/><internalId>1066</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2392</srcid><srcstatus/><internalId>1069</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_717</srcid><srcstatus/><internalId>1230</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_965</srcid><srcstatus/><internalId>1265</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1321</srcid><srcstatus/><internalId>1313</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1696</srcid><srcstatus/><internalId>1358</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1729</srcid><srcstatus/><internalId>1360</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Schm_Call_ComM_Nm_Mode</srcid><srcstatus/><internalId>1958</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Schm_Call_ComM_Nm_Mode_2</srcid><srcstatus/><internalId>1959</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Schm_Call_ComM_Nm_Mode_3</srcid><srcstatus/><internalId>1960</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>

    <specobject>
      <id>ComM.EB.PartialNetworkOffset_ParamLocation</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>3</version>
      <description>
        Parameter ComMPnInfoOffset shall be placed under ComMGeneral container.
        Parameter is editable only if ComMPncSupport is true and it's allowed range is 1 to 63.
      </description>
      <rationale>
        This parameter is used to allow configuration of Partial Network location inside the
        NM frame.
        Range constrain is derived from PNC ID range 8-511.
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2111</srcid><srcstatus/><internalId>1584</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>

    <specobject>
      <id>ComM.EB.PartialNetworkOffset_ComMPnInfoOffsetEnabled</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        If ComMPnInfoOffset is enabled, PNC offset value is read from this container.
      </description>
      <rationale>
        Allow usage of PNC with generic buses.
        In this case PNC offset can't be read from busNm.
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/ComM_Functions.m_38</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_5</srcid><srcstatus/><internalId>2294</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>

    <specobject>
      <id>ComM.EB.PartialNetworkOffset_busNmOffsetUsage</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        If ComMPnInfoOffset is disabled, one of the configured PNC busNm offset should be used.
      </description>
      <rationale>
        Don't force the setup of EB specific parameter.
        PN Offset shall be equeal accross diffrent (can,fr,eth) bus used.
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/ComM_Functions.m_42</srcid><srcstatus/><internalId>945</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30086</srcid><srcstatus/><internalId>1846</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PnInfo_504PNCs</srcid><srcstatus/><internalId>2092</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>

    <specobject>
      <id>ComM.EB.PartialNetworkOffset_MinComMPncId</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        Minimum value for ComMPncId shall be greater or equeal with ComMPnInfoOffset *8.
      </description>
      <rationale>
          A PN Offset value of :
           - 1 mean PN start in byte 1 of the NM frame and Min(ComMPncId) 8
           - 7 mean PN start in byte 7 of the NM frame and Min(ComMPncId) 56
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/ComM_Checks.m_59</srcid><srcstatus/><internalId>930</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PnInfo_504PNCs</srcid><srcstatus/><internalId>2092</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>

    <specobject>
      <id>ComM.EB.PartialNetworkOffset_MaxComMPncId</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        PncIds shall not be greater than ((PnInfoOffset + PnInfoLength) * 8) - 1
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_11_XdmChecks</srcid><srcstatus/><internalId>1870</internalId></linkedfrom><linkedfrom><srcid>ComM_GenTest_12_XdmChecks</srcid><srcstatus/><internalId>1871</internalId></linkedfrom><linkedfrom><srcid>ComM_GenTest_13_XdmChecks</srcid><srcstatus/><internalId>1872</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PnInfo_504PNCs</srcid><srcstatus/><internalId>2092</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/ComM_Checks.m_92</srcid><srcstatus/><internalId>931</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>

    <specobject>
      <id>ComM.EB.RteNrOfRequesters</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        When user request is changed
        (via ComM_RequestComMode or via ClearUserRequest)
        the Rte information regarding requesters shall be updated
        for the channels which have ComMFullCommRequestNotificationEnabled
        set to true.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_Rte_NrOfRequesters_ClearUser</srcid><srcstatus/><internalId>2322</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Test_ComM_Rte_NrOfRequesters_PreventWakeup</srcid><srcstatus/><internalId>2323</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Test_ComM_Rte_NrOfRequesters_LimitChannelToNoCom</srcid><srcstatus/><internalId>2324</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_272</srcid><srcstatus/><internalId>1453</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>

    <specobject>
        <id>ComM.EB.ComMReleaseNoneChannels_Conf</id>
        <status>approved</status>
        <version>1</version>
        <description>
        Name                                        : ComMReleaseNoneChannels
        Description                                 : Specifies if all channels with
                                                      attribute ComMBusType set to
                                                      COMM_BUS_TYPE_INTERNAL shall switch from
                                                      Ready Sleep state to No Communication.
        Multiplicity                                : 1
        Type                                        : EcucBooleanParamDef
        Post-Build Variant Multiplicity             : false
        Post-Build Variant Value                    : false
        Multiplicity Configuration Pre-compile time : VARIANT-PRE-COMPILE
        Class                      Link time        : --
                                   Post-build time  : --
        Value Configuration Class  Pre-compile time : VARIANT-PRE-COMPILE
                                   Link time        : --
                                   Post-build time  : --
        Scope / Dependency                          : scope: ECU
       </description>
       <needscoverage>
         <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM_EBParameters.xdm.m4_21</srcid><srcstatus/><internalId>1599</internalId></linkedfrom></coveredby></needscov>
         <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComMReleaseNoneChannels_True_1</srcid><srcstatus/><internalId>1991</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ComMReleaseNoneChannels_True_2</srcid><srcstatus/><internalId>1992</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComMReleaseNoneChannels</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If configuration parameter ComMReleaseNoneChannels is set to false and ComMNmVariant
        is set to NONE if Ready Sleep State is entered, the Ready Sleep State shall be left
        immediately and No Communication shall be entered.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_LIN_NONE_CH</srcid><srcstatus/><internalId>2068</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1255</srcid><srcstatus/><internalId>1304</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_TIMEOUT</srcid><srcstatus/><internalId>1713</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComMReleaseNoneChannels_BusTypeDifferentThan_COMM_BUS_TYPE_INTERNAL</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If configuration parameter ComMReleaseNoneChannels is set to true and ComMBusType is
        diffrent from COMM_BUS_TYPE_INTERNAL and ComMNmVariant is set to NONE and Ready Sleep
        State is entered, the state machine shall not switch to No Communication.
      </description>
      <comment>
        The state machine for a channel which has ComMBusType diffrent than
        COMM_BUS_TYPE_INTERNAL and ComMNmVariant is NONE, can only wakeup and go from Full
        Com Network Requested to Full Com Ready Sleep in case channel is released (by user
        or DCM) or go from Full Com Ready Sleep to Full Com Network Requested in case the
        channel is requested (by User or DCM).
        Once waken up this channel can never go back to No Communication
        (if parameter ComMReleaseNoneChannels is set to true)
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComMReleaseNoneChannels_True_1</srcid><srcstatus/><internalId>1991</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1260</srcid><srcstatus/><internalId>1305</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_TIMEOUT_1</srcid><srcstatus/><internalId>1714</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComMReleaseNoneChannels_BusTypeIs_COMM_BUS_TYPE_INTERNAL</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If configuration parameter ComMReleaseNoneChannels is set to true and ComMBusType
        is COMM_BUS_TYPE_INTERNAL and Ready Sleep State is entered, the Ready Sleep State
        shall be left immediately and No Communication shall be entered.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComMReleaseNoneChannels_True_2</srcid><srcstatus/><internalId>1992</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1267</srcid><srcstatus/><internalId>1307</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_TIMEOUT_2</srcid><srcstatus/><internalId>1715</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComMPncSupport_Automatically</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Default value of configuration parameter ComMPncSupport shall be set automatically
        to true when at least one Partial Network Cluster is configured.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_2061</srcid><srcstatus/><internalId>1581</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComMDcmUsage_Automatically</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Default value of configuration parameter ComMDcmUsage shall be set automatically
        to true when Dcm module is present.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1746</srcid><srcstatus/><internalId>1561</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComMPncGatewayEnabled.EB_NM_STACK.Disabled</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case parameter ComMPncGatewayEnabled is set to true and EB_NM_STACK is set to STD_OFF (or it is not defined),
        and the channel is requested via remote user only
        (gateway ERA functionality, no internal user and no DCM requests the channel)
        on entering state COMM_FULL_COM_NETWORK_REQUESTED
        ComM shall call the sequence Nm_PassiveStartUp, Nm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_850</srcid><srcstatus/><internalId>1240</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_ERA_2</srcid><srcstatus/><internalId>2156</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_ERA_3</srcid><srcstatus/><internalId>2165</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComMPncGatewayEnabled.EB_NM_STACK.Enabled</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case parameter ComMPncGatewayEnabled is set to true and macro EB_NM_STACK is defined and it is set to STD_ON,
        and the channel is requested via remote user only
        (gateway ERA functionality, no internal user and no DCM requests the channel)
        on entering state COMM_FULL_COM_NETWORK_REQUESTED
        ComM shall call Nm_NetworkGwEraRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_851</srcid><srcstatus/><internalId>1241</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_ERA_0</srcid><srcstatus/><internalId>2122</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_ERA_1</srcid><srcstatus/><internalId>2131</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>

    <specobject>
      <id>ComM.EB.LocalUserRequest.NetworkStartIndication</id>
      <status>approved</status>
      <version>1</version>
      <description>
        On entering COMM_FULL_COM_NETWORK_REQUESTED
        if local user request is present
        and ComM_Nm_NetworkStartIndication was called before local user request the
        ComM shall call Nm_PassiveStartUp before calling Nm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_868</srcid><srcstatus/><internalId>1242</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_NetworkStartIndication_0</srcid><srcstatus/><internalId>2098</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_NetworkStartIndication_2</srcid><srcstatus/><internalId>2100</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_NetworkStartIndication_3</srcid><srcstatus/><internalId>2101</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_NetworkStartIndication_5</srcid><srcstatus/><internalId>2103</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_NetworkStartIndication_6</srcid><srcstatus/><internalId>2123</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_NetworkStartIndication_7</srcid><srcstatus/><internalId>2124</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>

    <specobject>
      <id>ComM.EB.DcmRequest.NetworkStartIndication</id>
      <status>approved</status>
      <version>1</version>
      <description>
        On entering COMM_FULL_COM_NETWORK_REQUESTED
        if DCM request is present
        and ComM_Nm_NetworkStartIndication was called before DCM request the
        ComM shall call Nm_PassiveStartUp before calling Nm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_869</srcid><srcstatus/><internalId>1243</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_NetworkStartIndication_1</srcid><srcstatus/><internalId>2099</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_NetworkStartIndication_2</srcid><srcstatus/><internalId>2100</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_NetworkStartIndication_4</srcid><srcstatus/><internalId>2102</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_NetworkStartIndication_5</srcid><srcstatus/><internalId>2103</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>

    <specobject>
      <id>ComM.EB.LocalUserRequest.RestartIndication</id>
      <status>approved</status>
      <version>1</version>
      <description>
        On entering COMM_FULL_COM_NETWORK_REQUESTED
        if local user request is present
        and ComM_Nm_RestartIndication was called before local user request the
        ComM shall call Nm_PassiveStartUp before calling Nm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_870</srcid><srcstatus/><internalId>1244</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_RestartIndication_0</srcid><srcstatus/><internalId>2104</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_RestartIndication_2</srcid><srcstatus/><internalId>2106</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_RestartIndication_3</srcid><srcstatus/><internalId>2107</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_RestartIndication_5</srcid><srcstatus/><internalId>2109</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_RestartIndication_6</srcid><srcstatus/><internalId>2125</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_RestartIndication_7</srcid><srcstatus/><internalId>2126</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>

    <specobject>
      <id>ComM.EB.DcmRequest.RestartIndication</id>
      <status>approved</status>
      <version>1</version>
      <description>
        On entering COMM_FULL_COM_NETWORK_REQUESTED
        if DCM request is present
        and ComM_Nm_RestartIndication was called before DCM request the
        ComM shall call Nm_PassiveStartUp before calling Nm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_871</srcid><srcstatus/><internalId>1245</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_RestartIndication_1</srcid><srcstatus/><internalId>2105</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_RestartIndication_2</srcid><srcstatus/><internalId>2106</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_RestartIndication_4</srcid><srcstatus/><internalId>2108</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_RestartIndication_5</srcid><srcstatus/><internalId>2109</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case parameter ComMSynchronousWakeUp is set to true and
        on entering COMM_FULL_COM_NETWORK_REQUESTED
        if local user request is present
        and ComM_EcuM_WakeUpIndication was called before local user request the
        ComM shall call Nm_PassiveStartUp before calling Nm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_872</srcid><srcstatus/><internalId>1246</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_0</srcid><srcstatus/><internalId>2110</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_2</srcid><srcstatus/><internalId>2112</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_3</srcid><srcstatus/><internalId>2113</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_5</srcid><srcstatus/><internalId>2115</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_6</srcid><srcstatus/><internalId>2127</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_7</srcid><srcstatus/><internalId>2128</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case parameter ComMSynchronousWakeUp is set to true and
        on entering COMM_FULL_COM_NETWORK_REQUESTED
        if DCM request is present
        and ComM_EcuM_WakeUpIndication was called before DCM request the
        ComM shall call Nm_PassiveStartUp before calling Nm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_873</srcid><srcstatus/><internalId>1247</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_1</srcid><srcstatus/><internalId>2111</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_2</srcid><srcstatus/><internalId>2112</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_4</srcid><srcstatus/><internalId>2114</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_5</srcid><srcstatus/><internalId>2115</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case parameter ComMSynchronousWakeUp is set to false and
        on entering COMM_FULL_COM_NETWORK_REQUESTED
        if local user request is present
        and ComM_EcuM_WakeUpIndication was called before local user request the
        ComM shall call Nm_PassiveStartUp before calling Nm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_874</srcid><srcstatus/><internalId>1248</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_0</srcid><srcstatus/><internalId>2132</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_2</srcid><srcstatus/><internalId>2134</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_3</srcid><srcstatus/><internalId>2135</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_5</srcid><srcstatus/><internalId>2137</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_12</srcid><srcstatus/><internalId>2157</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_13</srcid><srcstatus/><internalId>2158</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case parameter ComMSynchronousWakeUp is set to false and
        on entering COMM_FULL_COM_NETWORK_REQUESTED
        if DCM request is present
        and ComM_EcuM_WakeUpIndication was called before DCM request the
        ComM shall call Nm_PassiveStartUp before calling Nm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_875</srcid><srcstatus/><internalId>1249</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_1</srcid><srcstatus/><internalId>2133</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_2</srcid><srcstatus/><internalId>2134</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_4</srcid><srcstatus/><internalId>2136</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_5</srcid><srcstatus/><internalId>2137</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case parameter ComMSynchronousWakeUp is set to false and current channel is a managing channel,
        on entering COMM_FULL_COM_NETWORK_REQUESTED
        and local user request is present for the current channel
        and ComM_EcuM_WakeUpIndication was called for a managed channel of current managing channel before
        local user request, ComM shall call Nm_PassiveStartUp before calling Nm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_876</srcid><srcstatus/><internalId>1250</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_6</srcid><srcstatus/><internalId>2138</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_8</srcid><srcstatus/><internalId>2140</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_9</srcid><srcstatus/><internalId>2141</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_11</srcid><srcstatus/><internalId>2143</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_14</srcid><srcstatus/><internalId>2159</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_15</srcid><srcstatus/><internalId>2160</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case parameter ComMSynchronousWakeUp is set to false and current channel is a managing channel,
        on entering COMM_FULL_COM_NETWORK_REQUESTED
        and DCM request is present for the current channel
        and ComM_EcuM_WakeUpIndication was called for a managed channel of current managing channel before
        DCM request, ComM shall call Nm_PassiveStartUp before calling Nm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_877</srcid><srcstatus/><internalId>1251</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_7</srcid><srcstatus/><internalId>2139</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_8</srcid><srcstatus/><internalId>2140</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_10</srcid><srcstatus/><internalId>2142</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_11</srcid><srcstatus/><internalId>2143</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case parameter ComMSynchronousWakeUp is set to true and
        on entering COMM_FULL_COM_NETWORK_REQUESTED
        if local user request is present
        and ComM_EcuM_PNCWakeUpIndication was called before local user request the
        ComM shall call Nm_PassiveStartUp before calling Nm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_878</srcid><srcstatus/><internalId>1252</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_0</srcid><srcstatus/><internalId>2116</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_2</srcid><srcstatus/><internalId>2118</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_3</srcid><srcstatus/><internalId>2119</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_5</srcid><srcstatus/><internalId>2121</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_6</srcid><srcstatus/><internalId>2129</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_7</srcid><srcstatus/><internalId>2130</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case parameter ComMSynchronousWakeUp is set to true and
        on entering COMM_FULL_COM_NETWORK_REQUESTED
        if DCM request
        and ComM_EcuM_PNCWakeUpIndication was called before DCM request the
        ComM shall call Nm_PassiveStartUp before calling Nm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_879</srcid><srcstatus/><internalId>1253</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_1</srcid><srcstatus/><internalId>2117</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_2</srcid><srcstatus/><internalId>2118</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_4</srcid><srcstatus/><internalId>2120</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_5</srcid><srcstatus/><internalId>2121</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case parameter ComMSynchronousWakeUp is set to false and
        on entering COMM_FULL_COM_NETWORK_REQUESTED
        if local user request is present
        and ComM_EcuM_PNCWakeUpIndication was called before local user request the
        ComM shall call Nm_PassiveStartUp before calling Nm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_880</srcid><srcstatus/><internalId>1254</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_0</srcid><srcstatus/><internalId>2144</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_2</srcid><srcstatus/><internalId>2146</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_3</srcid><srcstatus/><internalId>2147</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_5</srcid><srcstatus/><internalId>2149</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_12</srcid><srcstatus/><internalId>2161</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_13</srcid><srcstatus/><internalId>2162</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case parameter ComMSynchronousWakeUp is set to false and
        on entering COMM_FULL_COM_NETWORK_REQUESTED
        if DCM request
        and ComM_EcuM_PNCWakeUpIndication was called before DCM request the
        ComM shall call Nm_PassiveStartUp before calling Nm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_881</srcid><srcstatus/><internalId>1255</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_1</srcid><srcstatus/><internalId>2145</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_2</srcid><srcstatus/><internalId>2146</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_4</srcid><srcstatus/><internalId>2148</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_5</srcid><srcstatus/><internalId>2149</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case parameter ComMSynchronousWakeUp is set to false and current channel is a managing channel,
        on entering COMM_FULL_COM_NETWORK_REQUESTED
        and local user request is present for the current channel
        and ComM_EcuM_PNCWakeUpIndication was called for a managed channel of current managing channel before
        local user request, ComM shall call Nm_PassiveStartUp before calling Nm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_882</srcid><srcstatus/><internalId>1256</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_6</srcid><srcstatus/><internalId>2150</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_8</srcid><srcstatus/><internalId>2152</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_9</srcid><srcstatus/><internalId>2153</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_11</srcid><srcstatus/><internalId>2155</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_14</srcid><srcstatus/><internalId>2163</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_15</srcid><srcstatus/><internalId>2164</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case parameter ComMSynchronousWakeUp is set to false and current channel is a managing channel,
        on entering COMM_FULL_COM_NETWORK_REQUESTED
        and DCM request is present for the current channel
        and ComM_EcuM_PNCWakeUpIndication was called for a managed channel of current managing channel before
        DCM request, ComM shall call Nm_PassiveStartUp before calling Nm_NetworkRequest.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_883</srcid><srcstatus/><internalId>1257</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_7</srcid><srcstatus/><internalId>2151</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_8</srcid><srcstatus/><internalId>2152</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_10</srcid><srcstatus/><internalId>2154</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_11</srcid><srcstatus/><internalId>2155</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_GetCurrentPNCComMode</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Service name:       ComM_GetCurrentPNCComMode
        Syntax:             Std_ReturnType ComM_GetCurrentPNCComMode ( ComM_UserHandleType User, ComM_ModeType* ComMode )
        Service Id:         254
        Sync/Async:         Synchronous
        Reentrancy:         Reentrant
        Parameters (in):    User - Handle of the user who requests a mode|
        Parameters (inout): None
        Parameters (out):   ComMode - See ComM_ModeType
        Return value:       Std_ReturnType
                            E_OK: Successfully returned Communication Mode from Bus State Manager
                            E_NOT_OK: Return of Communication Mode from Bus State Manager failed
                            COMM_E_MULTIPLE_PNC_ASSIGNED: Function could not provide the current mode of the PNC, since multiple PNCs are assigned to the affected user
                            COMM_E_NO_PNC_ASSIGNED: Function could not provide the current mode of the PNC, since no PNC is assigned to the affected user
        Description:        Function to query the current Communication Mode of the PNC.
        Available via:      ComM.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1665</srcid><srcstatus/><internalId>1034</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GETCURRENT_PNC_COM_MODE_PNC_DISABLED</srcid><srcstatus/><internalId>1954</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30008</srcid><srcstatus/><internalId>1997</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30009</srcid><srcstatus/><internalId>1998</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30010</srcid><srcstatus/><internalId>1999</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_NoUsersDetOn</srcid><srcstatus/><internalId>2288</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_91002</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_GetCurrentPNCComMode.ReturnedComMode.COMM_FULL_COMMUNICATION</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If ComM.SWS_ComM_01023 and
        ComM.SWS_ComM_01022 do not apply,
        the function shall query for the current communication mode of the corresponding
        PNC statemachine the user is assigned to.
        If the corresponding PNC statemachine is in main state COMM_PNC_FULL_COMMUNICATION,
        then the function shall return COMM_FULL_COMMUNICATION as ComMode.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1729</srcid><srcstatus/><internalId>1037</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GETCURRENT_PNC_COMM_MODE_Conformance</srcid><srcstatus/><internalId>1996</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GetCurrenPncComMode_RTE_1</srcid><srcstatus/><internalId>2325</internalId></linkedfrom><linkedfrom><srcid>TS_ComM_ImpTest_ASR_06_ASRGetCurrentPncComMode</srcid><srcstatus/><internalId>2382</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_01024</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComM_GetCurrentPNCComMode.ReturnedComMode.COMM_NO_COMMUNICATION</id>
      <status>approved</status>
      <version>1</version>
      <description>
        If ComM.SWS_ComM_01023 and
        ComM.SWS_ComM_01022 do not apply,
        the function shall query for the current communication mode of the corresponding
        PNC statemachine the user is assigned to.
        If the corresponding PNC statemachine is main state COMM_PNC_NO_COMMUNICATION,
        then the function shall return COMM_NO_COMMUNICATION as ComMode.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1730</srcid><srcstatus/><internalId>1038</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GETCURRENT_PNC_COMM_MODE_Conformance</srcid><srcstatus/><internalId>1996</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_01024</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>

    <specobject>
      <id>ComM.EB.GwChannelCoordinationConstraint</id>
      <status>approved</status>
      <version>1</version>
      <description>
        When a Partial Network is connected to more than one ComMChannel than it is coordinated either on
        all channels or not at all.
      </description>
      <rationale>
        If PNCs are assigned to different ComMChannels and those channels are not coordinated by a
        PncGateway, then it has to be ensured, that the affected ComMChannels are requested and released
        to the same point in time. Because an application should not care about channel states, if PNCs are
        used. Or in other words, if a PNC is requested (passively) then also all referenced ComMChannels shall
        be requested, because an application expects that all ComMChannels assigned to this PNCs are requested
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_978</srcid><srcstatus/><internalId>1520</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>

    <specobject>
      <id>ComM.EB.SWS_ComM_00165_UserRequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In PNC sub state COMM_PNC_READY_SLEEP when at least one ComMUser assigned
        to this PNC requests “Full Communication” this state shall be left and the sub state COMM_PNC_REQUESTED
        shall be entered.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_8</srcid><srcstatus/><internalId>2297</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3051</srcid><srcstatus/><internalId>1103</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00165</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>

    <specobject>
      <id>ComM.EB.SWS_ComM_00165_ERARequest</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In PNC sub state COMM_PNC_READY_SLEEP when ComMPncGatewayEnabled (ECUC_ComM_00887) equals
        TRUE, one bit representing this PNC in an ERA changes to ‘1’ and ComMPncGatewayType is set for the
        according ComMChannels of these ERAs, this state shall be left and the sub state COMM_PNC_REQUESTED
        shall be entered.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_9</srcid><srcstatus/><internalId>2298</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3582</srcid><srcstatus/><internalId>1129</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
            <linksto>ComM.SWS_ComM_00165</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>

    <specobject>
      <id>ComM.EB.Constraint_ComMPncGatewayType_Enabled_SignalType_ERA</id>
      <status>approved</status>
      <version>1</version>
      <description>
        A Signal type ERA which has a channel linked to it got to have paramatere ComMPncGatewayType enabled
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1170</srcid><srcstatus/><internalId>1536</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComMChannelPartitionConfigError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case ComMChannelPartitionRef is configured and ComMMultiCoreSupport is set to true
        configuration error shall be trown.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1508</srcid><srcstatus/><internalId>1553</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComMMasterPNCEcuCPartitionRef</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Name:               ComMMasterPNCEcuCPartitionRef
        Description:        Denotes in which "EcucPartition" the
                            the PNC state machine is executed
                            The parameter shall be a global parameter.
        Multiplicity:       0..1
        Type:               Reference to [ EcucPartition ]
        ConfigurationClass: Pre-compile time X All Variants
                            Link time -
                            Post-build time -
        Scope / Dependency: scope: ECU
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1646</srcid><srcstatus/><internalId>1558</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>710</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComMMasterPNCEcuCPartitionRefError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case ComMMasterCoreEcuCPartitionRef is configured and ComMMultiCoreSupport is set to true
        configuration error shall be trown.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1520</srcid><srcstatus/><internalId>1556</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>711</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComMInhibitionEcuCPartitionRef</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Name:               ComMInhibitionEcuCPartitionRef
        Description:        Denotes in which "EcucPartition" the
                            the actions related to Inhibition are executed
                            (increment of inhibition counter)
                            The parameter shall be a global parameter.
        Multiplicity:       0..1
        Type:               Reference to [ EcucPartition ]
        ConfigurationClass: Pre-compile time X All Variants
                            Link time -
                            Post-build time -
        Scope / Dependency: scope: ECU
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1679</srcid><srcstatus/><internalId>1559</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>712</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComMInhibitionEcuCPartitionRefError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case ComMInhibitionEcuCPartitionRef is configured and ComMMultiCoreSupport is set to true
        configuration error shall be trown.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1516</srcid><srcstatus/><internalId>1555</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>713</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComMUserEcucPartitionRef</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Name:               ComMUserEcucPartitionRef
        Description:        Denotes in which "EcucPartition" the
                            the actions related to users are executed
                            The parameter shall be a per user parameter.
        Multiplicity:       0..1
        Type:               Reference to [ EcucPartition ]
        ConfigurationClass: Pre-compile time X All Variants
                            Link time -
                            Post-build time -
        Scope / Dependency: scope: ECU
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1449</srcid><srcstatus/><internalId>1550</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>714</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComMUserEcuCPartitionRefError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case ComMUserEcucPartitionRef is configured and ComMMultiCoreSupport is set to true
        configuration error shall be trown.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_1512</srcid><srcstatus/><internalId>1554</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>715</internalId></specobject>

    <specobject>
      <id>ComM.EB.MasterPncToSignalCrossPartition</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case ComMMasterCoreEcuCPartitionRef is configured and
        a Com signals (ERA or EIRA) are on different ECUC partitions
        cross partition communication shall be done.
        The cross partition communication shall be done via RTE sender receiver mechanism
      </description>
      <comment>
        If a signal is on the same partition as MasterPnc partition the handling of signals related operations
        shall be done directly (without cross partition mechanism)
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3621</srcid><srcstatus/><internalId>1138</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_TX_SAME_PARTITION</srcid><srcstatus/><internalId>2223</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_TX_DIFFERENT_PARTITION</srcid><srcstatus/><internalId>2224</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_101_MC_TX_SAME_PARTITION</srcid><srcstatus/><internalId>2229</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_102_MC_TX_SAME_PARTITION</srcid><srcstatus/><internalId>2231</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>716</internalId></specobject>

    <specobject>
      <id>ComM.EB.MasterPncToSignalDataSetSIDError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case MasterPnc to Signal data set fails DET, shall be reported
        COMM_SID_MASTER_DATA_SET (248) and
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3629</srcid><srcstatus/><internalId>1139</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_TX_ERA_DIFFERENT_PARTITION_SET_DATA_E_NOT_OK</srcid><srcstatus/><internalId>2225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>717</internalId></specobject>

    <specobject>
      <id>ComM.EB.MasterPncToChannelCrossPartition</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case ComMMasterCoreEcuCPartitionRef is configured and
        a ComM channels are on different ECUC partitions
        cross partition communication shall be done.
        The cross partition communication shall be done via RTE sender receiver mechanism
      </description>
      <comment>
        If a channel is on the same partition as MasterCore the handling of channel related operations
        shall be done directly (without cross partition mechanism)
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3900</srcid><srcstatus/><internalId>1147</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3959</srcid><srcstatus/><internalId>1154</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4018</srcid><srcstatus/><internalId>1159</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4103</srcid><srcstatus/><internalId>1164</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_559</srcid><srcstatus/><internalId>1416</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_106_MC_MASTERPNC_TO_CHANNEL_0</srcid><srcstatus/><internalId>2244</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_106_MC_MASTERPNC_TO_CHANNEL_1</srcid><srcstatus/><internalId>2245</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_107_MC_MASTERPNC_TO_CHANNEL_0</srcid><srcstatus/><internalId>2247</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_107_MC_MASTERPNC_TO_CHANNEL_1</srcid><srcstatus/><internalId>2248</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_108_MC_MASTERPNC_TO_CHANNEL_0</srcid><srcstatus/><internalId>2250</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_108_MC_MASTERPNC_TO_CHANNEL_1</srcid><srcstatus/><internalId>2251</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_108_MC_MASTERPNC_TO_CHANNEL_3</srcid><srcstatus/><internalId>2253</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_109_MC_MASTERPNC_TO_CHANNEL_0</srcid><srcstatus/><internalId>2255</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_109_MC_MASTERPNC_TO_CHANNEL_1</srcid><srcstatus/><internalId>2256</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_109_MC_MASTERPNC_TO_CHANNEL_2</srcid><srcstatus/><internalId>2257</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Top_Level_Coordinator_1</srcid><srcstatus/><internalId>2258</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Top_Level_Coordinator_3</srcid><srcstatus/><internalId>2260</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Top_Level_Coordinator_5</srcid><srcstatus/><internalId>2268</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>718</internalId></specobject>

    <specobject>
      <id>ComM.EB.ChannelToChannelCrossPartition</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case ComMChannelPartitionRef is configurred and a channel needs to communicate
        with other channels, cross partition communication shall be done.
        The cross partition communication shall be done via RTE sender receiver mechanism.
      </description>
      <comment>
        If a channel is on the same partition with the other channel which need to communicate,
        direct function calls shall be done
        (without cross partition mechanism)
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4390</srcid><srcstatus/><internalId>1181</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4507</srcid><srcstatus/><internalId>1188</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_ComM_EcuM_WakeUpIndication</srcid><srcstatus/><internalId>2271</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_ComM_EcuM_WakeUpIndication_ManagedChannel</srcid><srcstatus/><internalId>2273</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_6_ComM_EcuM_WakeUpIndication_ManagedChannel</srcid><srcstatus/><internalId>2285</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>719</internalId></specobject>

    <specobject>
      <id>ComM.EB.SignalToMasterPncERACrossPartition</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case ComMMasterCoreEcuCPartitionRef is configured and
        a Com ERA signals are on different ECUC partitions
        cross partition communication shall be done.
        The cross partition communication shall be done via RTE sender receiver mechanism
      </description>
      <comment>
        If a signal is on the same partition as MasterPnc partition the handling of signals related operations
        shall be done directly (without cross partition mechanism)
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_583</srcid><srcstatus/><internalId>890</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_SAME_PARTITION_CH_ACTIVE</srcid><srcstatus/><internalId>2212</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_SAME_PARTITION_CH_PASSIVE</srcid><srcstatus/><internalId>2213</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_DIFFERENT_PARTITION_CH_ACTIVE</srcid><srcstatus/><internalId>2214</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_DIFFERENT_PARTITION_CH_PASSIVE</srcid><srcstatus/><internalId>2215</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_101_MC_RX_ERA_SAME_PARTITION_CH_ACTIVE</srcid><srcstatus/><internalId>2227</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_101_MC_RX_ERA_SAME_PARTITION_CH_PASSIVE</srcid><srcstatus/><internalId>2228</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>720</internalId></specobject>

    <specobject>
      <id>ComM.EB.SignalToMasterPncEIRACrossPartition</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case ComMMasterCoreEcuCPartitionRef is configured and
        Rx EIRA signals are used no intercore communication shall be done.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_659</srcid><srcstatus/><internalId>897</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_RX_EIRA</srcid><srcstatus/><internalId>2211</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_101_MC_RX_EIRA</srcid><srcstatus/><internalId>2226</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_102_MC_RX_EIRA</srcid><srcstatus/><internalId>2230</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>721</internalId></specobject>

    <specobject>
      <id>ComM.EB.ReceiveSignalReturnsValueDiffrentThanEOK</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case ComMMasterCoreEcuCPartitionRef is configured and
        a Com signals cannot be retrieved (Com_Receive signal returns a value diffrent than
        E_OK) further processing of the signals shall be dropped
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_579</srcid><srcstatus/><internalId>888</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_655</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_RX_EIRA_REC_SIGNAL_E_NOT_OK</srcid><srcstatus/><internalId>2216</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_SAME_PARTITION_CH_ACTIVE_REC_SIGNAL_E_NOT_OK</srcid><srcstatus/><internalId>2217</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_SAME_PARTITION_CH_PASSIVE_REC_SIGNAL_E_NOT_OK</srcid><srcstatus/><internalId>2218</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_DIFFERENT_PARTITION_CH_ACTIVE_REC_SIGNAL_E_NOT_OK</srcid><srcstatus/><internalId>2219</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_DIFFERENT_PARTITION_CH_PASSIVE_REC_SIGNAL_E_NOT_OK</srcid><srcstatus/><internalId>2220</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>722</internalId></specobject>

    <specobject>
      <id>ComM.EB.UserToMasterPncCrossPartition</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case ComMMasterCoreEcuCPartitionRef is configured and
        ComMUserEcucPartitionRef are on different ECUC partitions
        cross partition communication shall be done.
        The cross partition communication shall be done via RTE sender receiver mechanism
      </description>
      <comment>
        If a user is on the same partition as MasterPnc partition the handling of user related operations
        shall be done directly (without cross partition mechanism)
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1110</srcid><srcstatus/><internalId>1010</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4280</srcid><srcstatus/><internalId>1174</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_103_MC_USER_PNC_DIRECT_CALL</srcid><srcstatus/><internalId>2232</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_103_MC_USER_PNC_SCHM_CALL</srcid><srcstatus/><internalId>2233</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_103_MC_USER_PNC_SCHM_CALL_DATA_SET_ERROR</srcid><srcstatus/><internalId>2234</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_104_MC_USER_TO_MASTERPNC_0</srcid><srcstatus/><internalId>2235</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_104_MC_USER_TO_MASTERPNC_1</srcid><srcstatus/><internalId>2236</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_104_MC_USER_TO_MASTERPNC_2</srcid><srcstatus/><internalId>2237</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_104_MC_USER_TO_MASTERPNC_3</srcid><srcstatus/><internalId>2238</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_104_MC_USER_TO_MASTERPNC_4</srcid><srcstatus/><internalId>2239</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_104_MC_USER_TO_MASTERPNC_5</srcid><srcstatus/><internalId>2240</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>723</internalId></specobject>

    <specobject>
      <id>ComM.EB.UserToChannelCrossPartition</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case ComMUserEcucPartitionRef is configured and
        chanels are on different ECUC partitions
        cross partition communication shall be done.
        The cross partition communication shall be done via RTE sender receiver mechanism
      </description>
      <comment>
        If a user is on the same partition as channel partition the handling of user related operations
        shall be done directly (without cross partition mechanism)
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1267</srcid><srcstatus/><internalId>1017</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4247</srcid><srcstatus/><internalId>1170</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_RequestComMode</srcid><srcstatus/><internalId>2194</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_ComM_ClearUserRequest</srcid><srcstatus/><internalId>2208</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_5_RequestComMode</srcid><srcstatus/><internalId>2275</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_5_ComM_ClearUserRequest_1</srcid><srcstatus/><internalId>2279</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_5_ComM_ClearUserRequest_2</srcid><srcstatus/><internalId>2280</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_5_ComM_ClearUserRequest_3</srcid><srcstatus/><internalId>2281</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_5_ComM_ClearUserRequest_4</srcid><srcstatus/><internalId>2282</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_7_ComM_EvaluateChannel</srcid><srcstatus/><internalId>2286</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_8_ComM_EvaluateChannel</srcid><srcstatus/><internalId>2287</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>724</internalId></specobject>

    <specobject>
      <id>ComM.EB.ChannelToUserCrossPartition</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case ComMChannelPartitionRef is configured and
        users are on different ECUC partitions
        cross partition communication shall be done.
        The cross partition communication shall be done via RTE sender receiver mechanism
      </description>
      <comment>
        If a channel is on the same partition as user partition the handling of user related operations
        shall be done directly (without cross partition mechanism)
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4217</srcid><srcstatus/><internalId>1168</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1853</srcid><srcstatus/><internalId>1368</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_ComM_ClearUserRequest</srcid><srcstatus/><internalId>2208</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_2_ComM_Notify</srcid><srcstatus/><internalId>2269</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_5_ComM_ClearUserRequest_1</srcid><srcstatus/><internalId>2279</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_5_ComM_ClearUserRequest_2</srcid><srcstatus/><internalId>2280</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_5_ComM_ClearUserRequest_3</srcid><srcstatus/><internalId>2281</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_5_ComM_ClearUserRequest_4</srcid><srcstatus/><internalId>2282</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_7_ComM_EvaluateChannel</srcid><srcstatus/><internalId>2286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>725</internalId></specobject>

    <specobject>
      <id>ComM.EB.ChannelToMasterPncCrossPartition</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case ComMChannelPartitionRef is configured and
        MasterPnc is on a different ECUC partition
        cross partition communication shall be done.
        The cross partition communication shall be done via RTE sender receiver mechanism
      </description>
      <comment>
        If a channel is on the same partition as MasterPnc the handling of user related operations
        shall be done directly (without cross partition mechanism)
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4433</srcid><srcstatus/><internalId>1183</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_105_MC_CHANNEL_TO_MASTERPNC_0</srcid><srcstatus/><internalId>2241</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_105_MC_CHANNEL_TO_MASTERPNC_1</srcid><srcstatus/><internalId>2242</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_105_MC_CHANNEL_TO_MASTERPNC_2</srcid><srcstatus/><internalId>2243</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>726</internalId></specobject>

    <specobject>
      <id>ComM.EB.ChannelToInhibitionCrossPartition</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case ComMChannelPartitionRef is configured and
        ComMInhibitionEcuCPartitionRef is on a different ECUC partition
        cross partition communication shall be done.
        The cross partition communication shall be done via RTE sender receiver mechanism
      </description>
      <comment>
        If a channel is on the same partition as inhibiton the handling of user related operations
        shall be done directly (without cross partition mechanism)
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1805</srcid><srcstatus/><internalId>1041</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1832</srcid><srcstatus/><internalId>1043</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1907</srcid><srcstatus/><internalId>1047</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1932</srcid><srcstatus/><internalId>1049</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_LimitChannelToNoComMode</srcid><srcstatus/><internalId>2196</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_PreventWakeUp_True</srcid><srcstatus/><internalId>2204</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_PreventWakeUp_False</srcid><srcstatus/><internalId>2205</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_5_LimitChannelToNoComMode</srcid><srcstatus/><internalId>2276</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_5_PreventWakeUp_True</srcid><srcstatus/><internalId>2277</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_5_PreventWakeUp_False</srcid><srcstatus/><internalId>2278</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_5_LimitEcuToNoComMode</srcid><srcstatus/><internalId>2284</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>727</internalId></specobject>

    <specobject>
      <id>ComM.EB.UserToInhibitionCrossPartition</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case ComMUserEcucPartitionRef is configured and
        Inhibition partition is on a diffrent ECUC partition
        cross partition communication shall be done.
        The cross partition communication shall be done via RTE sender receiver mechanism
      </description>
      <comment>
        If a user is on the same partition as inhibition partition the handling of user related operations
        shall be done directly (without cross partition mechanism)
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1215</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_LimitChannelToNoComMode</srcid><srcstatus/><internalId>2196</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_5_LimitChannelToNoComMode</srcid><srcstatus/><internalId>2276</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>728</internalId></specobject>

    <specobject>
      <id>ComM.EB.InhibitionToChannelCrossPartition</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case ComMInhibitionEcuCPartitionRef is configured and
        channel partitions are on diffrent ECUC partition
        cross partition communication shall be done.
        The cross partition communication shall be done via RTE sender receiver mechanism
      </description>
      <comment>
        If the inhibition partition is on the same partition as a channel partition the handling of channel related operations
        shall be done directly (without cross partition mechanism)
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3120</srcid><srcstatus/><internalId>1107</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3172</srcid><srcstatus/><internalId>1113</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3225</srcid><srcstatus/><internalId>1116</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3272</srcid><srcstatus/><internalId>1120</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_PreventWakeUp_True</srcid><srcstatus/><internalId>2204</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_PreventWakeUp_False</srcid><srcstatus/><internalId>2205</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_5_PreventWakeUp_True</srcid><srcstatus/><internalId>2277</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_5_PreventWakeUp_False</srcid><srcstatus/><internalId>2278</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>729</internalId></specobject>

    <specobject>
      <id>ComM.EB.ChannelToUserDataGetSIDError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and in case in context of function data set fails, DET shall be reported
        COMM_SID_CHANNEL_TO_USER_DATA_GET (241)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4258</srcid><srcstatus/><internalId>1172</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4291</srcid><srcstatus/><internalId>1176</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_ComM_ClearUserRequest_Det_UserToCh_Failure</srcid><srcstatus/><internalId>2210</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>730</internalId></specobject>

    <specobject>
      <id>ComM.EB.SetChannelComMInhibitionStatusDataSetSIDError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and in case in context of function ComM_SetChannelComMInhibitionStatus data set fails, DET shall be reported
        COMM_SID_CHANNEL_COMM_INHIBITION_SET (240)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3125</srcid><srcstatus/><internalId>1109</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3177</srcid><srcstatus/><internalId>1115</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3230</srcid><srcstatus/><internalId>1118</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3277</srcid><srcstatus/><internalId>1122</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_LimitChannelToNoComMode_Det_InhibitionToCh_Failure</srcid><srcstatus/><internalId>2199</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>731</internalId></specobject>

    <specobject>
      <id>ComM.EB.PncMainfunctionDataSetSIDError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and in case in context of Pnc Mainfunction data set fails, DET shall be reported
        COMM_SID_MAIN_FUNCTIONPNC (241)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3777</srcid><srcstatus/><internalId>1143</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3901</srcid><srcstatus/><internalId>1148</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3960</srcid><srcstatus/><internalId>1155</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4019</srcid><srcstatus/><internalId>1160</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_109_MC_MASTERPNC_TO_CHANNEL_2</srcid><srcstatus/><internalId>2257</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Top_Level_Coordinator_2</srcid><srcstatus/><internalId>2259</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Top_Level_Coordinator_4</srcid><srcstatus/><internalId>2261</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Intermediate_Coordinator_5</srcid><srcstatus/><internalId>2266</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ConTest_WakeupOnDataLine_MulticorePerChannel_03_DET</srcid><srcstatus/><internalId>2357</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>732</internalId></specobject>

    <specobject>
      <id>ComM.EB.SignalToMasterPncDataSetSIDError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and in case in context of signal to masterpnc data set fails, DET shall be reported
        COMM_SID_SLAVE_DATA_SET (250)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_587</srcid><srcstatus/><internalId>891</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_663</srcid><srcstatus/><internalId>898</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_DIFFERENT_PARTITION_CH_ACTIVE_SET_DATA_E_NOT_OK</srcid><srcstatus/><internalId>2221</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_DIFFERENT_PARTITION_CH_PASSIVE_SET_DATA_E_NOT_OK</srcid><srcstatus/><internalId>2222</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>733</internalId></specobject>

    <specobject>
      <id>ComM.EB.UserToChannelDataSetError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and in case in context of data set user to channel fails,
        DET shall be reported
        COMM_E_USER_TO_CH_DATASET_ERROR (243)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1271</srcid><srcstatus/><internalId>1018</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4253</srcid><srcstatus/><internalId>1171</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4259</srcid><srcstatus/><internalId>1173</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_RequestComMode_Det_UserToCh_Failure</srcid><srcstatus/><internalId>2195</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_5_ComM_ClearUserRequest_Det_UserToCh_Failure</srcid><srcstatus/><internalId>2283</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>734</internalId></specobject>

    <specobject>
      <id>ComM.EB.UserToMasterPncDataSetError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and in case in context of data set user to master Pnc fails,
        DET shall be reported
        COMM_E_USER_TO_MASTERPNC_DATASET_ERROR (241)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1114</srcid><srcstatus/><internalId>1011</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4286</srcid><srcstatus/><internalId>1175</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4292</srcid><srcstatus/><internalId>1177</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_104_MC_USER_TO_MASTERPNC_2</srcid><srcstatus/><internalId>2237</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_104_MC_USER_TO_MASTERPNC_5</srcid><srcstatus/><internalId>2240</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>735</internalId></specobject>

    <specobject>
      <id>ComM.EB.UserToInhibitionDataSetError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and in case in context of data set user to inhibition fails,
        DET shall be reported
        COMM_E_USER_TO_INHIBITION_DATASET_ERROR (240)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1219</srcid><srcstatus/><internalId>1016</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_LimitChannelToNoComMode_Det_UserToInhibition_Failure</srcid><srcstatus/><internalId>2198</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>736</internalId></specobject>

    <specobject>
      <id>ComM.EB.ChannelToInhibitionDataSetError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and in case in context of data set channel to inhibition fails,
        DET shall be reported
        COMM_E_CH_TO_INHIBITION_DATASET_ERROR (239)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1809</srcid><srcstatus/><internalId>1042</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_LimitChannelToNoComMode_Det_ChToInhibition_Failure</srcid><srcstatus/><internalId>2197</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_PreventWakeUp_True_Det_ChToInhibition_Failure</srcid><srcstatus/><internalId>2206</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_PreventWakeUp_False_Det_ChToInhibition_Failure</srcid><srcstatus/><internalId>2207</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>737</internalId></specobject>

    <specobject>
      <id>ComM.EB.ChannelToChannelDataSetError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and in case in context of data set channel to channel fails,
        DET shall be reported
        COMM_E_CH_TO_CH_DATASET_ERROR (238)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4394</srcid><srcstatus/><internalId>1182</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4511</srcid><srcstatus/><internalId>1189</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_ComM_EcuM_WakeUpIndication_Det_ChToCh_Failure</srcid><srcstatus/><internalId>2272</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_ComM_EcuM_WakeUpIndication_ManagedChannel_Det_ChToCh_Failure</srcid><srcstatus/><internalId>2274</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>738</internalId></specobject>

    <specobject>
      <id>ComM.EB.ChannelToMasterPncDataSetError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and in case in context of data set channel to master pnc fails,
        DET shall be reported
        COMM_E_CH_TO_MASTERPNC_DATASET_ERROR (237)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4437</srcid><srcstatus/><internalId>1184</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_105_MC_CHANNEL_TO_MASTERPNC_2</srcid><srcstatus/><internalId>2243</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Intermediate_Coordinator_4</srcid><srcstatus/><internalId>2265</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>739</internalId></specobject>

    <specobject>
      <id>ComM.EB.InhibitionToChannelSetError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and in case in context of data set inhibition to channel fails,
        DET shall be reported
        COMM_E_INHIBITION_TO_CH_DATASET_ERROR (236)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3124</srcid><srcstatus/><internalId>1108</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3176</srcid><srcstatus/><internalId>1114</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3229</srcid><srcstatus/><internalId>1117</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3276</srcid><srcstatus/><internalId>1121</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_ComM_SetChannelComMInhibitionStatus_Det_InhibitionToCh_Failure_0</srcid><srcstatus/><internalId>2200</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_ComM_SetChannelComMInhibitionStatus_Det_InhibitionToCh_Failure_1</srcid><srcstatus/><internalId>2201</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_ComM_SetChannelComMInhibitionStatus_Det_InhibitionToCh_Failure_2</srcid><srcstatus/><internalId>2202</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_ComM_SetChannelComMInhibitionStatus_Det_InhibitionToCh_Failure_3</srcid><srcstatus/><internalId>2203</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>740</internalId></specobject>

    <specobject>
      <id>ComM.EB.ChannelToUserSetError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and in case in context of data set channel to user fails,
        DET shall be reported
        COMM_E_CH_TO_USER_DATASET_ERROR (235)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4221</srcid><srcstatus/><internalId>1169</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1857</srcid><srcstatus/><internalId>1369</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_ComM_ClearUserRequest_Det_ChToUser_Failure</srcid><srcstatus/><internalId>2209</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_2_ComM_Notify_Det_ChToUser_Failure</srcid><srcstatus/><internalId>2270</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>741</internalId></specobject>

    <specobject>
      <id>ComM.EB.MasterPncToChannelSetError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and in case in context of data set master pnc to channel fails,
        DET shall be reported
        COMM_E_MASTERPNC_TO_CH_DATASET_ERROR (234)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3781</srcid><srcstatus/><internalId>1144</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3799</srcid><srcstatus/><internalId>1145</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3905</srcid><srcstatus/><internalId>1149</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3964</srcid><srcstatus/><internalId>1156</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4023</srcid><srcstatus/><internalId>1161</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_106_MC_MASTERPNC_TO_CHANNEL_2</srcid><srcstatus/><internalId>2246</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_107_MC_MASTERPNC_TO_CHANNEL_2</srcid><srcstatus/><internalId>2249</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_108_MC_MASTERPNC_TO_CHANNEL_2</srcid><srcstatus/><internalId>2252</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_108_MC_MASTERPNC_TO_CHANNEL_4</srcid><srcstatus/><internalId>2254</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_109_MC_MASTERPNC_TO_CHANNEL_2</srcid><srcstatus/><internalId>2257</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Top_Level_Coordinator_2</srcid><srcstatus/><internalId>2259</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Top_Level_Coordinator_4</srcid><srcstatus/><internalId>2261</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_110_Intermediate_Coordinator_5</srcid><srcstatus/><internalId>2266</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ConTest_WakeupOnDataLine_MulticorePerChannel_03_DET</srcid><srcstatus/><internalId>2357</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>742</internalId></specobject>

    <specobject>
      <id>ComM.EB.SignalToMasterPncSetError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and in case in context of signal to masterpnc data set fails, DET shall be reported
        COMM_E_SLAVE_DATA_SET (250)
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_588</srcid><srcstatus/><internalId>892</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_664</srcid><srcstatus/><internalId>899</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_DIFFERENT_PARTITION_CH_ACTIVE_SET_DATA_E_NOT_OK</srcid><srcstatus/><internalId>2221</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_DIFFERENT_PARTITION_CH_PASSIVE_SET_DATA_E_NOT_OK</srcid><srcstatus/><internalId>2222</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>743</internalId></specobject>

    <specobject>
      <id>ComM.EB.MasterPncToSignalSetError</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case MasterPnc to Signal data set fails DET, shall be reported
        COMM_E_MASTER_DATA_SET (248) and
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3630</srcid><srcstatus/><internalId>1140</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_MulticorePerChannel_100_MC_TX_ERA_DIFFERENT_PARTITION_SET_DATA_E_NOT_OK</srcid><srcstatus/><internalId>2225</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>744</internalId></specobject>

    <specobject>
      <id>ComM.EB.RxSignalIsNotLinkedToASinglePdu</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and pncs are enabled and
        if an RX signal is not mapped to a single pdu generation time error shall be trown
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_Checks.m_36</srcid><srcstatus/><internalId>946</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_15_XdmChecks</srcid><srcstatus/><internalId>1874</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>745</internalId></specobject>

    <specobject>
      <id>ComM.EB.RxPduComMainfunctionRefNotValid</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and pncs are enabled and
        if a pdu which contains an RX signal and linked mainfunction reference is not valid
        generation time error shall be trown
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_Checks.m_41</srcid><srcstatus/><internalId>947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_16_XdmChecks</srcid><srcstatus/><internalId>1875</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>746</internalId></specobject>

    <specobject>
      <id>ComM.EB.RxPduNotLinkedToASingleOsApplication</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and pncs are enabled and
        if a pdu which contains an RX signal which has a ComMainFunctionRef configured
        and which has a EcuC partition configured and EcuC partition is not mapped
        to a single Os application generation time error shall be trown.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_Checks.m_54</srcid><srcstatus/><internalId>948</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_17_XdmChecks</srcid><srcstatus/><internalId>1876</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>747</internalId></specobject>

    <specobject>
      <id>ComM.EB.RxERASignalSamePartitionAsLinkedChannel</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and pncs are enabled and
        if signal type is ERA and channel linked to RX signal is not on the same partitions
        as the ERA signal generation time error shall be trown.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_Checks.m_62</srcid><srcstatus/><internalId>949</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_18_XdmChecks</srcid><srcstatus/><internalId>1877</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>748</internalId></specobject>

    <specobject>
      <id>ComM.EB.RxEIRASignalSamePartitionAsMasterPnc</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and pncs are enabled and
        if signal type is EIRA and signal is not on the same partition as the master pnc
        generation time error shall be trown.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_Checks.m_69</srcid><srcstatus/><internalId>950</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_19_XdmChecks</srcid><srcstatus/><internalId>1878</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>749</internalId></specobject>

    <specobject>
      <id>ComM.EB.TxSignalIsNotLinkedToASinglePdu</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and pncs are enabled and
        if an Tx signal is not mapped to a single pdu generation time error shall be trown
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_Checks.m_79</srcid><srcstatus/><internalId>951</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_20_XdmChecks</srcid><srcstatus/><internalId>1879</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>750</internalId></specobject>

    <specobject>
      <id>ComM.EB.TxPduComMainfunctionRefNotValid</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and pncs are enabled and
        if a pdu which contains an Tx signal and linked mainfunction reference is not valid
        generation time error shall be trown
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_Checks.m_84</srcid><srcstatus/><internalId>952</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_21_XdmChecks</srcid><srcstatus/><internalId>1880</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>751</internalId></specobject>

    <specobject>
      <id>ComM.EB.TxPduNotLinkedToASingleOsApplication</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and pncs are enabled and
        if a pdu which contains an Tx signal which has a ComMainFunctionRef configured
        and which has a EcuC partition configured and EcuC partition is not mapped
        to a single Os application generation time error shall be trown.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_Checks.m_95</srcid><srcstatus/><internalId>953</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_22_XdmChecks</srcid><srcstatus/><internalId>1881</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>752</internalId></specobject>

    <specobject>
      <id>ComM.EB.TxERASignalSamePartitionAsLinkedChannel</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and pncs are enabled and
        if signal type is ERA and channel linked to Tx signal is not on the same partitions
        as the ERA signal generation time error shall be trown.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_Checks.m_103</srcid><srcstatus/><internalId>954</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_23_XdmChecks</srcid><srcstatus/><internalId>1882</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>753</internalId></specobject>

    <specobject>
      <id>ComM.EB.RxMainfunctionMulticorePerChannel</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and RX pdu is mapped to
        a Tx mainfunction then a configuration error shall be trown.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/ComM_Checks.m_140</srcid><srcstatus/><internalId>936</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_26_XdmChecks</srcid><srcstatus/><internalId>1885</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>754</internalId></specobject>

    <specobject>
      <id>ComM.EB.TxMainfunctionMulticorePerChannel</id>
      <status>approved</status>
      <version>1</version>
      <description>
        In case multicore per channel is enabled and TX pdu is mapped to
        a Rx mainfunction then a configuration error shall be trown.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/ComM_Checks.m_181</srcid><srcstatus/><internalId>941</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM_GenTest_25_XdmChecks</srcid><srcstatus/><internalId>1884</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>755</internalId></specobject>

    <specobject>
        <id>ComM.EB.SWS_ComM_00110</id>
        <status>approved</status>
        <version>1</version>
        <description>
        Service Name:       ComM_RequestComMode
        Syntax:             Std_ReturnType ComM_RequestComMode (
                              ComM_UserHandleType User,
                              ComM_ModeType ComMode
                              )
        Service ID [hex]:   0x05
        Sync/Async:         Synchronous
        Reentrancy:         Reentrant
        Parameters (in):    User    | Handle of the user who requests a mode
                            ComMode |COMM_FULL_COMMUNICATION COMM_NO_COMMUNICATION
        Parameters (inout): None
        Parameters (out):   None
        Return value:       Std_Return-Type | E_OK: Successfully changed to the new mode
                                            | E_NOT_OK: Changing to the new mode failed
                                            | COMM_E_MODE_LIMITATION: Mode can not be granted because of mode inhibition.
                                            | COMM_E_UNINIT: ComM not initialized
        Description:        Requesting of a Communication Mode by a user.
                            Note:
                            The following modes are no valid user requests, since they are used as internal modes:
                            - COMM_SILENT_COMMUNICATION (this mode is used for synchronization at shutdown)
                            - COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST (this mode is used internally within the
                              ComM channel statemachine to trigger the lower layers to request a wakeup on the network
                              if the used hardware support such a feature. (e.g. Ethernet hardware which is compatible with OA TC10).
                            The following modes are valid user requests:
                            - COMM_NO_COMMUNICATION
                            - COMM_FULL_COMMUNICATION. The communication request could also be released due to a ComM communication inhibition
        Available via       ComM.h
       </description>
       <needscoverage>
         <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1304</srcid><srcstatus/><internalId>1020</internalId></linkedfrom></coveredby></needscov>
         <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30003</srcid><srcstatus/><internalId>1889</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30004</srcid><srcstatus/><internalId>1890</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30006</srcid><srcstatus/><internalId>1892</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30029</srcid><srcstatus/><internalId>1904</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30105</srcid><srcstatus/><internalId>1935</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30107</srcid><srcstatus/><internalId>1937</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_MulticorePerChannel_1_RequestComMode</srcid><srcstatus/><internalId>2194</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_NoUsersDetOn</srcid><srcstatus/><internalId>2288</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>756</internalId></specobject>

    <specobject>
        <id>ComM.EB.SWS_ComM_00904</id>
        <status>approved</status>
        <version>1</version>
        <description>
         Name:     ComM_CurrentChannelRequest
         Comment:  Array of ComMUserIdentifier, that currently hold FULL_COM requests for this channel.
                   The size of the attribute fullComRequestors.handleArray is the maximum number of users linked to a channel (directly or via PNC)
        IsService: true
        Data       fullComRequestors type ComM_InternalHandleArrayType
        Elements:
        </description>
        <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Rte_fullComRequestors</srcid><srcstatus/><internalId>2317</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_387</srcid><srcstatus/><internalId>1620</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_891</srcid><srcstatus/><internalId>1632</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1416</srcid><srcstatus/><internalId>1643</internalId></linkedfrom></coveredby></needscov>
        <containerCovstatus>covered</containerCovstatus></needscoverage>
        <providescoverage>
          <provcov>
            <linksto>ComM.SWS_ComM_00904</linksto>
            <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>757</internalId></specobject>

    <specobject>
        <id>ComM.EB.SWS_ComM_01005</id>
        <status>approved</status>
        <version>1</version>
        <description>
         Name:          ComM_InternalHandleArrayType
         Kind:          Array
         Element type:  ComM_UserHandleType
         Size:          The maximum numer of users linked (directly or via PNC) to a channel
         Description:   This element contains the user handles of the users which keep the channel requested (if any), starting in its first entries.
         Available via: Rte_Type.h
        </description>
        <needscoverage>
          <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_102</srcid><srcstatus/><internalId>1611</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_633</srcid><srcstatus/><internalId>1624</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1130</srcid><srcstatus/><internalId>1635</internalId></linkedfrom></coveredby></needscov>
        <containerCovstatus>covered</containerCovstatus></needscoverage>
        <providescoverage>
          <provcov>
            <linksto>ComM.SWS_ComM_01005</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
        </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>758</internalId></specobject>

    <specobject>
      <id>ComM.EB.ComMOptimizePncIndexingForSpeed</id>
      <status>approved</status>
      <version>1</version>
      <description>
        Name:             ComMOptimizePncIndexingForSpeed
        Parent Container: ComMGeneral
        Description:      Uses dirrect indexing of PNCs instead of looping the pnc list
                          this increases speed but generates an addition array.
                          - true: Pnc indexing enabled.
                          - false: Pnc looping is enabled
        Multiplicity:     1
        Type:             EcucBooleanParamDef
        Default value:    false
        Post-Build
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM_EBParameters.xdm.m4_93</srcid><srcstatus/><internalId>1601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>759</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM configuration shall contain a configuration parameter
        ComMEnableASR40ServiceAPI in the container
        ComMGeneral with the following properties:
        Description: Configures whether the AUTOSAR 4.0 service API shall be provided.
        TRUE = Enables AUTOSAR 4.0 service API,
        FALSE = Disables AUTOSAR 4.0 service API.

        Multiplicity:       1
        Type:               EcucBooleanParamDef
        Default value:      false
        ConfigurationClass: Pre-compile time - all variants
        Scope / Dependency: Module
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_01_ASRSvcCompDescr</srcid><srcstatus/><internalId>2377</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_ENABLE_ASR40_SERVICE_API</srcid><srcstatus/><internalId>1789</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>760</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The ComM configuration shall contain a configuration parameter
        ComMDefaultASRServiceAPI in the container
        ComMGeneral with the following properties:

        Description: Defines the default AUTOSAR service API.
        AUTOSAR_R20_11 = AUTOSAR 20-11 service API is the default one,
        AUTOSAR_40 = AUTOSAR 4.0 service API is the default one,
        NONE = No default AUTOSAR service API is provided.

        Multiplicity: 1
        Type:               EcucEnumerationParamDef
        Range:              AUTOSAR_20-11, AUTOSAR_40, NONE
        Default value:      AUTOSAR_40
        ConfigurationClass: Pre-compile time - all variants
        Scope / Dependency: Module
      </description>
      <comment> </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_01_ASRSvcCompDescr</srcid><srcstatus/><internalId>2377</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB.Dsn.Information.COMM_DEFAULT_ASR_SERVICE_API</srcid><srcstatus/><internalId>1790</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>761</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          AUTOSAR 4.0 interface elements shall be placed in AUTOSAR package
          /AUTOSAR_ComM/ASR40 if the pre-compile time configuration switch
          ComMEnableASR40ServiceAPI = true.
      </description>
      <comment>
        see
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/AUTOSAR_3.2_in_4.0#Service_modules_.28e.g..2C_Dcm.29
        (date: 19:47, 26 July 2012)
      </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_01_ASRSvcCompDescr</srcid><srcstatus/><internalId>2377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>762</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM006</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        AUTOSAR 4.0 interface elements shall be placed in AUTOSAR package
        /AUTOSAR_ComM if the pre-compile time configuration switch
        DefaultASRServiceAPI = AUTOSAR_40.
      </description>
      <comment>
        see
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/AUTOSAR_3.2_in_4.0#Service_modules_.28e.g..2C_Dcm.29
        (date: 19:47, 26 July 2012)
      </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_01_ASRSvcCompDescr</srcid><srcstatus/><internalId>2377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>763</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM009</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The AUTOSAR 4.0 implementation and internal behavior elements of the ComM Service Component
        shall be infixed with _ASR40_ and placed in AUTOSAR package
        /AUTOSAR_ComM if the pre-compile time configuration switch
        ComMEnableASR40ServiceAPI = true.
      </description>
      <comment>
        see
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/AUTOSAR_3.2_in_4.0#Service_modules_.28e.g..2C_Dcm.29
        (date: 19:47, 26 July 2012)
      </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_01_ASRSvcCompDescr</srcid><srcstatus/><internalId>2377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>764</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM011</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The AUTOSAR 4.0 implementation and internal behavior elements of the ComM Service Component
        shall be placed in AUTOSAR package /AUTOSAR_ComM
        if the pre-compile time configuration switch
        DefaultASRServiceAPI = AUTOSAR_40.

        Note: These elements are not infixed and exist additionally to
        ComM.EB.ASR.ComM009 (i.e., this requirement is not conflicting).
      </description>
      <comment>
        see
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/AUTOSAR_3.2_in_4.0#Service_modules_.28e.g..2C_Dcm.29
        (date: 19:47, 26 July 2012)
      </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_01_ASRSvcCompDescr</srcid><srcstatus/><internalId>2377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>765</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM012</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        All Runnable Entity elements in the internal behavior of the ComM Service Component
        shall have the infix _Rte_ in the corresponding attribute SYMBOL.
      </description>
      <comment>
        Note:
        This additional indirection is required, since the Rte generator generates an external
        declaration for the function referenced in the SYMBOL attribute of the runnable entity
        triggered by the operation invoked event. Thus having a #define here for the mapping of
        &lt;module&gt;_Rte_GetStatus() to either
        &lt;module&gt;_ASR40_GetStatus()
        is not possible.

        Directly mapping to either
        &lt;module&gt;_ASR40_GetStatus() via
        the SYMBOL attribute of the runnable entity is not possible either,
        since the two different runnable entities are not allowed to share the same SYMBOL.
      </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_01_ASRSvcCompDescr</srcid><srcstatus/><internalId>2377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>766</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM016</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
          The ComM shall be composed of the following files in
          addition to the file structure specified by AUTOSAR:

            - ComM_BSW_Types.h: provides defines and typedefs used by
              the module's API for both AUTOSAR versions
              (with respective infixes in order to allow for a distinction).

            - ComM_Types.h: provides a mapping of the AUTOSAR 4.0 typedef
              and defines to the typedefs and defines infixed with _ASR40_ provided by
              ComM_BSW_Types.h.

            - ComM_BSW.h: exports the properly infixed declarations of
              the API functions to be used by the files implementing the Rte/SWC API
              (i.e. ComM_Rte.c, ComM_ASR40_Rte.c)

            - ComM.h: provides the BSW API of the module as specified
              by the AUTOSAR SWS by mapping the non-infixed API functions via a
              #define to the ones with AUTOSAR 4.0 infix

            - ComM_Rte.c: implements the default Rte/SWC API depending on the
              pre-compile time configuration switch DefaultASRServiceAPI by
              delegating the work to the corresponding AUTOSAR 3.2 or AUTOSAR 4.0 BSW API function
              specified in ComM_ASR40_Rte.c,
              respectively.

            - ComM_ASR40_Rte.c: implements the AUTOSAR 4.0 Rte/SWC API
              by delegating the work to the corresponding AUTOSAR 4.0 BSW API function
              specified in ComM.c.

            - ComM_Cfg.h: is a generated file and contains all
              pre-compile time configuration data.

            - ComM_Cfg.h: is a generated file which includes only the
              following files: ComM_Rte_Cfg.h, ComM_BSW_Cfg.h

            - ComM_Rte_Cfg.h: is a generated file which declares link-time
              configuration data only required for Rte support.

            - ComM_BSW_Cfg.h: is a generated file which declares link-time
              configuration data not already specified in ComM_Rte_Cfg.h.

            - ComM_Rte_Cfg.c: is a generated file which defines the link-time
              configuration data declared in ComM_Rte_Cfg.h.

            - ComM_BSW_Cfg.c: is a generated file which defines the link-time
              configuration data declared in ComM_BSW_Cfg.h.
      </description>
      <comment>
        see
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/AUTOSAR_3.2_in_4.0#Service_modules_.28e.g..2C_Dcm.29
        (date: 19:47, 26 July 2012)
      </comment>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_01_FileStructure</srcid><srcstatus/><internalId>2372</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>767</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM017</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The files ComM_Rte.c and
        ComM_ASR40_Rte.c shall include ComM_BSW.h and
        ComM_Rte_Cfg.h.
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_02_FileIncludes</srcid><srcstatus/><internalId>2373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>768</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM018</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The file ComM_BSW.h shall include ComM_BSW_Types.h.
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_02_FileIncludes</srcid><srcstatus/><internalId>2373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>769</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM019</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The file ComM_BSW_Types.h shall include ComM_Cfg.h.
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_02_FileIncludes</srcid><srcstatus/><internalId>2373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>770</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM020</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The file ComM.h shall include ComM_Types.h and
        ComM_BSW.h.
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_02_FileIncludes</srcid><srcstatus/><internalId>2373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>771</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM021</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The file ComM_Types.h shall include ComM_BSW_Types.h.
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_02_FileIncludes</srcid><srcstatus/><internalId>2373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>772</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM022</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The file ComM.c shall include ComM_BSW_Cfg.h
        and ComM_BSW.h.
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_02_FileIncludes</srcid><srcstatus/><internalId>2373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>773</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM023</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The file ComM_BSW_Cfg.h shall include ComM_BSW.h.
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_02_FileIncludes</srcid><srcstatus/><internalId>2373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>774</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM025</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The file ComM_Rte_Cfg.h shall include Rte_ComM.h
        and ComM_Cfg.h.
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_02_FileIncludes</srcid><srcstatus/><internalId>2373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>775</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM026</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The file ComM_Rte_Cfg.c shall include ComM_Rte_Cfg.h.
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_02_FileIncludes</srcid><srcstatus/><internalId>2373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>776</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM027</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The file ComM_BSW_Cfg.c shall include ComM_BSW_Cfg.h.
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_02_FileIncludes</srcid><srcstatus/><internalId>2373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>777</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM100</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For all APIs called in the implementation
        of the Rte/SWC API,
        the file ComM.h shall provide the following macro definition
        instead of the function declaration

        #define ComM_&lt;APIName&gt; ComM_ASR40_&lt;APIName&gt;

        Note: For AUTOSAR 4.0, this concerns the APIs
          - ComM_UserRequest
          - ComM_CurrentMode
          - ComM_ECUModeLimitation
          - ComM_ChannelWakeup
          - ComM_ChannelLimitation
      </description>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_02_ASRAPIs</srcid><srcstatus/><internalId>2378</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>778</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM101</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For each AUTOSAR 4.0 API called in the implementation
        of the Rte/SWC API as defined in the ComM Service Component,
        the file ComM_BSW.h shall provide the
        function declaration, where the API name and the
        module specific parameter and return types are infixed with _ASR40_.

        Note: This concerns the following AUTOSAR 4.0 APIs:
          - ComM_UserRequest
          - ComM_CurrentMode
          - ComM_ECUModeLimitation
          - ComM_ChannelWakeup
          - ComM_ChannelLimitation
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_02_ASRAPIs</srcid><srcstatus/><internalId>2378</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>779</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM103</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For each AUTOSAR 4.0 API called in the implementation
        of the Rte/SWC API,
        the file ComM_BSW_Types.h shall provide the AUTOSAR 4.0
        macro and type definitions with the infix _ASR40_
        required only if these macro and type definitions are not already
        provided via the Rte file Rte_ComM.h.

        Note: This concerns the following AUTOSAR 4.0 typedefs:
        ComM_ModeType
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_03_ASRTypes</srcid><srcstatus/><internalId>2379</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>780</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM105</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For each AUTOSAR 4.0 API called in the implementation
        of the Rte/SWC API,
        the file ComM_Types.h shall map all
        macro and type definitions required by these APIs
        to the corresponding macro and type definitions with the infix _ASR40_
        (provided in ComM_BSW_Types.h).

        Note: This concerns the following AUTOSAR 4.0 typedefs:
        ComM_ModeType
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_03_ASRTypes</srcid><srcstatus/><internalId>2379</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>781</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM106</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For each AUTOSAR 4.0 API called in the implementation
        of the Rte/SWC API as defined in the ComM Service Component,
        the file ComM.c shall implement
        the function with the API name and the
        module specific parameter and return types infixed with _ASR40_.

        Note: This concerns the following AUTOSAR 4.0 APIs:

          - ComM_UserRequest
          - ComM_CurrentMode
          - ComM_ECUModeLimitation
          - ComM_ChannelWakeup
          - ComM_ChannelLimitation
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_02_ASRAPIs</srcid><srcstatus/><internalId>2378</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>782</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM109</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the pre-compile time configuration switch
        ComMEnableASR40ServiceAPI=true, then
        for each AUTOSAR 4.0 API called in the implementation
        of the Rte/SWC API as defined in the ComM Service Component,
        the file ComM_ASR40_Rte.c shall implement
        this function with a simple call to the corresponding AUTOSAR 4.0
        ComM BSW API.

        Note: This concerns the following AUTOSAR 4.0 APIs:

          - ComM_UserRequest
          - ComM_CurrentMode
          - ComM_ECUModeLimitation
          - ComM_ChannelWakeup
          - ComM_ChannelLimitation
          If no users are configured users specific functions for RTE are not available.
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_04_ASRRteAPIs</srcid><srcstatus/><internalId>2380</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_ASR40_Rte.c.m4_154</srcid><srcstatus/><internalId>1192</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_ASR40_Rte.c.m4_175</srcid><srcstatus/><internalId>1193</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_ASR40_Rte.c.m4_193</srcid><srcstatus/><internalId>1194</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_ASR40_Rte.c.m4_211</srcid><srcstatus/><internalId>1195</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_ASR40_Rte.c.m4_229</srcid><srcstatus/><internalId>1196</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_ASR40_Rte.c.m4_250</srcid><srcstatus/><internalId>1197</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_ASR40_Rte.c.m4_271</srcid><srcstatus/><internalId>1198</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_ASR40_Rte.c.m4_290</srcid><srcstatus/><internalId>1199</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_ASR40_Rte.c.m4_310</srcid><srcstatus/><internalId>1200</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_ASR40_Rte.c.m4_327</srcid><srcstatus/><internalId>1201</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_ASR40_Rte.c.m4_343</srcid><srcstatus/><internalId>1202</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>783</internalId></specobject>

    <specobject>
      <id>ComM.EB.ASR.ComM111</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the pre-compile time configuration switch
        DefaultASRServiceAPI=AUTOSAR_40, then
        for each AUTOSAR 4.0 API called in the implementation
        of the Rte/SWC API as defined in the ComM Service Component,
        the file ComM_Rte.c shall implement
        this function with a simple call to the corresponding AUTOSASR 4.0
        ComM BSW API.

        Note: This concerns the following AUTOSAR 4.0 APIs:

          - ComM_UserRequest
          - ComM_CurrentMode
          - ComM_ECUModeLimitation
          - ComM_ChannelWakeup
          - ComM_ChannelLimitation
          If no users are configured users specific functions for RTE are not available.
      </description>
      <comment/>
      <verifycrit/>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_04_ASRRteAPIs</srcid><srcstatus/><internalId>2380</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_349</srcid><srcstatus/><internalId>1455</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_366</srcid><srcstatus/><internalId>1456</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_380</srcid><srcstatus/><internalId>1457</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_393</srcid><srcstatus/><internalId>1458</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_407</srcid><srcstatus/><internalId>1459</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_437</srcid><srcstatus/><internalId>1460</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_454</srcid><srcstatus/><internalId>1461</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_469</srcid><srcstatus/><internalId>1462</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_485</srcid><srcstatus/><internalId>1463</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_498</srcid><srcstatus/><internalId>1464</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_Rte.c.m4_511</srcid><srcstatus/><internalId>1465</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations><ruleid>WRN.impl.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>784</internalId></specobject>
    
    <specobject>
        <id>ComM.EB.ComMNmPassiveStartupDelayMainfunctionCycles_Conf</id>
        <status>approved</status>
        <version>1</version>
        <description>
        Name:             ComMNmPassiveStartupDelayMainfunctionCycles
        Parent Container: ComMChannel
        Description:      Specifies the number of mainfunctions for witch the 
                          Nm_PassiveStartup shall be delayed.
                          This parameter is applicable only for channels with 
                          ComMNmVariant = FULL                                                     
        Multiplicity:     0..1
        Type:             EcucIntegerParamDef
        Range:            0 .. 254
        Default value:    0
        Post-Build 
        Variant Value:    false
        Value             Pre-compile time  X All Variants
        Configuration     Link time         -
        Class:            Post-build time   -
        Scope/Dependency: scope: local
                          dependency: 
                          ComMNmVariant must be set to FULL 
       </description>
       <needscoverage>
         <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/ComM.xdm.m4_695</srcid><srcstatus/><internalId>1500</internalId></linkedfrom></coveredby></needscov>
         <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PassiveStartup_Delay_01</srcid><srcstatus/><internalId>2047</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PassiveStartup_Delay_02</srcid><srcstatus/><internalId>2048</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>785</internalId></specobject>    
    
  </specobjects>
    <specobjects doctype="swurs">

      <specobject>
         <id>HisComM0001</id>
         <status>approved</status>
         <source>Elektrobit Automotive GmbH</source>
         <version>1</version>
         <description>
        If the pre compile configuration of a ComM contains only one ComMChannel configuration
        container, the ComM module should make use of the ComMChannel configuration directly in the
        code.
      </description>
         <comment>
        Code related to loops over channels shall be disabled then.
        This just affects hand written code. The Code generated from
        the HsmGen shall not be modified.

        HisComM0001 is particularly applicable for the parameters ComMBusType,
        ComMNoWakeup, ComMNoFullCom, ComMNoCom, and ComMNmVariant.
      </comment>
         <needscoverage>
            <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.HisComM0001_Refine1</srcid><srcstatus/><internalId>515</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.HisComM0001_Refine2</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>786</internalId></specobject>

      <specobject>
         <id>HisComM0002</id>
         <status>approved</status>
         <source>Elektrobit Automotive GmbH</source>
         <version>1</version>
         <description>
        If the pre compile configuration of a ComM contains only one ComMChannel configuration
        container, the ComM module should not make branches at run time depending on this
        configuration data.
      </description>
         <comment>
        Branches and checks e.g. related to NmVariant shall be disabled
        in that case.

        HisComM0002 is particularly applicable for the parameters ComMBusType,
        ComMNoWakeup, ComMNoFullCom, ComMNoCom, and ComMNmVariant.
      </comment>
         <needscoverage>
            <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.HisComM0002_Refine1</srcid><srcstatus/><internalId>517</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.HisComM0002_Refine2</srcid><srcstatus/><internalId>518</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>787</internalId></specobject>

      <specobject>
         <id>HisComM0003</id>
         <status>approved</status>
         <source>Elektrobit Automotive GmbH</source>
         <version>1</version>
         <description>
        If the pre compile configuration of a ComM contains only one ComMChannel configuration
        container, the ComM module should avoid to separately store this configuration data.
      </description>
         <comment>
        Note from the HIS document "Requirements HisComM0001,
        HisComM0002, and HisComM0003 especially affect the configuration
        items ComMBusType, ComMNoWakeup, ComMNoFullCom, ComMNoCom, and
        ComMNmVariant."

        This means that the channel specific field storing the
        ComMBusType, ComMNoWakeup, ComMNoFullCom, ComMNoCom, and
        ComMNmVariant shall be disabled in the related C data
        structures.
      </comment>
         <needscoverage>
            <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>ComM.EB_Ref.HisComM0003_Refine1</srcid><srcstatus/><internalId>519</internalId></linkedfrom><linkedfrom><srcid>ComM.EB_Ref.HisComM0003_Refine2</srcid><srcstatus/><internalId>520</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>788</internalId></specobject>

      <specobject>
         <id>HisComM0004</id>
         <status>approved</status>
         <source>Elektrobit Automotive GmbH</source>
         <version>1</version>
         <description>
        If the pre compile configuration of a ComM contains only one ComMChannel and this channel
        references the only user in this configuration, a ComM module should not contain any code for
        the user to channel mapping like switch blocks, mapping tables, callback lists, etc.
      </description>
         <comment>
        Disable loops over users in this case.
      </comment>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.HISOptimization</srcid><srcstatus/><internalId>804</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>789</internalId></specobject>

      <specobject>
         <id>HisComM0005</id>
         <status>approved</status>
         <source>Elektrobit Automotive GmbH</source>
         <version>1</version>
         <description>
        If the pre compile configuration of a ComM contains only one ComMChannel and this channel
        references the only user in this configuration, a ComM module should not use the indirection
        to access data indexed by the user id.
      </description>
         <comment>
        We can eliminate the user-to-channel and channel-to-user look up
        arrays and replace the look up with a macro which may expand to 0
        in this case.
      </comment>
         <needscoverage>
            <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.ComM.HISOptimization</srcid><srcstatus/><internalId>804</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>790</internalId></specobject>

  </specobjects>
    <specobjects doctype="man">
    <specobject>
      <id>TS_COMM_ResourceConsumption</id>
      <status>approved</status>
      <source>EB manual test</source>
      <version>1</version>
      <description>
        01: Get RAM/ROM consumption of the reference tests
        02 VP(ComM.EB.Dsn.ROMConsumption_RefCfg1): Check the ROM consumption of
           the test run against the threshold specified in the requirement.
        03 VP(ComM.EB.Dsn.RAMConsumption_RefCfg1): Check the RAM consumption of
           the test run against the threshold specified in the requirement.
        Action if test any verification point is not fulfilled:
        If the consumption exceeds the threshold, an analysis shall be started to find the cause
        of the additional resource consumption.
        The result of the analysis shall trigger either:
        * an update of the resource view in the design and the existing threshold if there is a
          rationale for the additional resource consumption.
        OR
        * measurements to reduce the additional resource consumption below the existing threshold
          if there is no rationale for the additional resource consumption.
      </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.ROMConsumption_RefCfg1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1829</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.RAMConsumption_RefCfg1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1828</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>791</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>ComM.EB.DBGINST001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Every public API of the module shall have debug instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_DBGINST_001</srcid><srcstatus/><internalId>1830</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>792</internalId></specobject>

    <specobject>
      <id>ComM.EB.DBGINST002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The parameter of a API shall be available in the entry instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_DBGINST_001</srcid><srcstatus/><internalId>1830</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>793</internalId></specobject>

    <specobject>
      <id>ComM.EB.DBGINST003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The parameter of a API shall be available in the exit instrumentation.
        If the API has a return value, the very first parameter of the macro shall contain the expected return value.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_DBGINST_001</srcid><srcstatus/><internalId>1830</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>794</internalId></specobject>

    <specobject>
      <id>ComM.EB.DBGINST004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The default implementation of the debug instrumentation shall be an empty macro.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_DBGINST_001</srcid><srcstatus/><internalId>1830</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>795</internalId></specobject>

    <specobject>
      <id>ComM.EB.DBGINST005</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The module shall include the header files Base_Dbg.h in order to allow changing the default implementation of the debug instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_DBGINST_001</srcid><srcstatus/><internalId>1830</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>796</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>ComM.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_VerifyCodeStub</srcid><srcstatus/><internalId>1831</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>797</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.ComM.ComM_PncModeType</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00673</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>798</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_GetCurrentComModeMulticore</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>67</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>799</internalId></specobject>
    <specobject>
      <id>dev.ComM.BswDataTypes</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>94</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00668</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00673</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>800</internalId></specobject>
    <specobject>
      <id>dev.ComM.HeaderInclusion</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>192</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00506</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>801</internalId></specobject>
    <specobject>
      <id>dev.ComM.SetECUGroupClassificationMadeOptional</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>256</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00552</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00552</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>802</internalId></specobject>
    <specobject>
      <id>dev.ComM.SymbolicPortName</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>336</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00662</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>803</internalId></specobject>
    <specobject>
      <id>dev.ComM.HISOptimization</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>373</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.HisComM0001_Refine2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.HisComM0002_Refine2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.HisComM0003_Refine2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
        <provcov>
          <linksto>HisComM0004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>789</internalId></provcov>
        <provcov>
          <linksto>HisComM0005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>790</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>804</internalId></specobject>
    <specobject>
      <id>dev.ComM.VariantPreCompile</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>394</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00549</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>805</internalId></specobject>
    <specobject>
      <id>dev.ComM.SWS_ComM_91000</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>416</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_91000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>806</internalId></specobject>
    <specobject>
      <id>dev.ComM.FunctionReturnValueModuleNotInitilized</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>437</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00612</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00858</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>807</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComMMainFunctionPeriod</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>451</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00556</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>808</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComMChannel</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>465</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>809</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComMBusType</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>479</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00567</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00888</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00957</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>810</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComMUser</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>493</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>811</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComMUserIdentifier</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>507</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>812</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComMUserPerChannel</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>521</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00657</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>813</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComMPncId</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>537</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00874</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>814</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComMUserPerPnc</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>551</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00876</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>815</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComMChannelPerPnc</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>567</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00880</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00913</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>816</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComMPncComSignalKind</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>583</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00883</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>817</internalId></specobject>
    <specobject>
      <id>dev.ComM.COMM_E_UNINIT</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>624</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00552</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00619</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00612</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>818</internalId></specobject>
    <specobject>
      <id>dev.ComM.DevelopmentErrors</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>653</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00234</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00858</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>819</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_EcuM_WakeUpIndication.HeaderFile</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>669</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>820</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_Init.HeaderFile</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>685</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>821</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_DeInit.HeaderFile</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>701</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>822</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_GetStatus.HeaderFile</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>717</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>823</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_GetVersionInfo.HeaderFile</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>733</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00370</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>824</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_MainFunction</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>751</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00429</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>825</internalId></specobject>
    <specobject>
      <id>dev.ComM.Nm_NetworkRequestWithNmVariantPassive</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>767</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00667</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>826</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_BusSM_ModeIndication.HeaderFile</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>783</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00675</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>827</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_LimitChannelToNoComMode</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>799</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00800</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>828</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_LimitECUToNoComMode</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>815</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00801</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>829</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_ReadInhibitCounter</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>832</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>830</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_ResetInhibitCounter</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>849</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>831</internalId></specobject>
    <specobject>
      <id>dev.ComM.DynamicPNCMapping</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>871</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00829</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00896</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00895</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>832</internalId></specobject>
    <specobject>
      <id>dev.ComM.ActiveDiagnostic</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>889</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00866</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00876</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00878</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00883</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>833</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_InitStatusType</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>905</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00668</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>834</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_InhibitionStatusType</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>921</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00669</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>835</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_UserHandleType</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>938</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00670</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>836</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_ModeType</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>954</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>837</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_StateType</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>970</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00674</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>838</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_COMCbk</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>987</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00819</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>839</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_CurrentChannelRequest</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1005</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00904</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>840</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_UserHandleSubArrayType</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1023</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>841</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_UserHandleArrayType</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1041</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00906</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>842</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_ECUModeLimitation</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1057</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>843</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_EcuM_PNCWakeUpIndication.HeaderFile</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1073</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>844</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_BusSM_BusSleepMode.HeaderFile</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1089</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_91000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>845</internalId></specobject>
    <specobject>
      <id>dev.ComM.BSWDistribution</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1106</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>846</internalId></specobject>
    <specobject>
      <id>dev.ComM.UnsupportedFunctionalities</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1160</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00895</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00896</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>460</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>461</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>463</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>847</internalId></specobject>
    <specobject>
      <id>dev.ComM.SynchronizedPncShutDown.ComM_Nm_ForwardSynchronizedPncShutdown</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1215</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>848</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComM_GetCurrentPNCComMode.SID</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1231</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>849</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComMPncPrepareSleepTimer.Checks</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1256</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00841</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>850</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComMPncGatewayType.ManagedChannel</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1273</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00842</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>851</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComMManageReferenceList</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1301</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00893</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>852</internalId></specobject>
    <specobject>
      <id>dev.ComM.ComMPncGatewayEnabledOptional</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1317</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00887</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>853</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/ComM_Cfg.h_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/include/ComM_Cfg.h</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00456</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_Cfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>854</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/ComM_Cfg.h_45</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/include/ComM_Cfg.h</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Impl.Hash</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>855</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/ComM_Cfg.h_62</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/include/ComM_Cfg.h</sourcefile>
      <sourceline>62</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Impl.Relocatable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>633</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>856</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/ComM_Cfg.h_163</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/include/ComM_Cfg.h</sourcefile>
      <sourceline>163</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00270</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00511</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00512</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>857</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/ComM_Cfg.h_200</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/include/ComM_Cfg.h</sourcefile>
      <sourceline>200</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Config.ComMMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>858</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/ComM_Cfg.h_604</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/include/ComM_Cfg.h</sourcefile>
      <sourceline>604</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NM_VARIANT_SLAVE_ACTIVE_NEEDED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1822</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>859</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/ComM_Cfg.h_613</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/include/ComM_Cfg.h</sourcefile>
      <sourceline>613</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NM_VARIANT_SLAVE_PASSIVE_NEEDED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1823</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>860</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/ComM_Cfg.h_678</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/include/ComM_Cfg.h</sourcefile>
      <sourceline>678</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.HisComM0001_Refine1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.HisComM0002_Refine1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.HisComM0003_Refine1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>861</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/ComM_Cfg.h_691</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/include/ComM_Cfg.h</sourcefile>
      <sourceline>691</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.HisComM0001_Refine1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.HisComM0002_Refine1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.HisComM0003_Refine1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>862</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/ComM_Cfg.h_721</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/include/ComM_Cfg.h</sourcefile>
      <sourceline>721</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.HisComM0001_Refine1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.HisComM0002_Refine1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.HisComM0003_Refine1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>863</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/ComM_Cfg.h_761</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/include/ComM_Cfg.h</sourcefile>
      <sourceline>761</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00558</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>864</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/ComM_PBcfg.h_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/include/ComM_PBcfg.h</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>650</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>865</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/ComM_Types.h_39</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/include/ComM_Types.h</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00669</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>866</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/ComM_Types.h_52</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/include/ComM_Types.h</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00670</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>867</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/ComM_Types.h_64</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/include/ComM_Types.h</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>868</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/ComM_BSW_Cfg.c_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_BSW_Cfg.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00503.Include</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>869</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_BSW_Cfg.c_245</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_BSW_Cfg.c</sourcefile>
      <sourceline>245</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00892</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>870</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_BSW_Cfg.c_252</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_BSW_Cfg.c</sourcefile>
      <sourceline>252</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00842</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>871</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_BSW_Cfg.c_344</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_BSW_Cfg.c</sourcefile>
      <sourceline>344</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_CanSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>653</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>872</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_BSW_Cfg.c_345</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_BSW_Cfg.c</sourcefile>
      <sourceline>345</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_FrSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>873</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_BSW_Cfg.c_346</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_BSW_Cfg.c</sourcefile>
      <sourceline>346</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_EthSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>874</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_BSW_Cfg.c_347</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_BSW_Cfg.c</sourcefile>
      <sourceline>347</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_LinSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>875</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_BSW_Cfg.c_363</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_BSW_Cfg.c</sourcefile>
      <sourceline>363</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Dcm_ComM_FullComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>876</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_BSW_Cfg.c_366</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_BSW_Cfg.c</sourcefile>
      <sourceline>366</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Dcm_ComM_SilentComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>658</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>877</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_BSW_Cfg.c_371</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_BSW_Cfg.c</sourcefile>
      <sourceline>371</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Dcm_ComM_NoComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>659</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>878</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_BSW_Cfg.c_824</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_BSW_Cfg.c</sourcefile>
      <sourceline>824</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Dcm_ComM_FullComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>879</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_BSW_Cfg.c_827</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_BSW_Cfg.c</sourcefile>
      <sourceline>827</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Dcm_ComM_SilentComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>658</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>880</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_BSW_Cfg.c_832</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_BSW_Cfg.c</sourcefile>
      <sourceline>832</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Dcm_ComM_NoComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>659</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>881</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/ComM_Lcfg.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_Lcfg.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00503</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>882</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_42</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.Rte</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>883</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_509</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>509</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_RequestComMode_NO_COM_REQ_BY_ALL_COMM_USER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1717</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>884</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_534</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>534</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>885</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_547</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>547</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00975</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00986</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00971</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00819</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>886</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_570</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>570</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00975</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00986</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00971</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>887</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_579</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>579</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ReceiveSignalReturnsValueDiffrentThanEOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>722</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>888</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_580</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>580</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>889</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_583</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>583</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncERACrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>890</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_587</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>587</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>733</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>891</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_588</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>588</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>743</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>892</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_602</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>602</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00975</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00986</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00971</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>893</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_646</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>646</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00975</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00986</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00971</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>894</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_655</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>655</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ReceiveSignalReturnsValueDiffrentThanEOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>722</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>895</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_656</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>656</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>896</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_659</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>659</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncEIRACrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>897</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_663</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>663</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>733</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>898</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_664</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>664</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>743</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>899</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_678</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>678</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00975</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00986</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00971</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>900</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_839</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>839</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00429</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00472</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>901</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_850</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>850</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00979</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>902</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_877</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>877</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Client_Server_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>903</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_909</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>909</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00975</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00986</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00971</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>904</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_917</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>917</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>905</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_918</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>918</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>906</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_921</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>921</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_ReceiveSlaveCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>907</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_925</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>925</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>908</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_940</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>940</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00975</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00986</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00971</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>909</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_977</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>977</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>910</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_1002</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>1002</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00975</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00986</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00971</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>911</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_1010</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>1010</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>912</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_1011</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>1011</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>913</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_1017</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>1017</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>914</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_1032</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>1032</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00975</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00986</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00971</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>915</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_1071</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>1071</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>916</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_1093</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>1093</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00975</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00986</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00971</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>917</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_1101</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>1101</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>918</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_1102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>1102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>919</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_1108</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>1108</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>920</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_1123</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>1123</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00975</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00986</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00971</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>921</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_1160</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>1160</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>922</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_1195</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>1195</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>923</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_1196</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>1196</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>924</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_MainFunction.c_1202</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_MainFunction.c</sourcefile>
      <sourceline>1202</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>925</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/ComM_PBcfg.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_PBcfg.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00503</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>926</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/ComM_PBcfg.c_6</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_PBcfg.c</sourcefile>
      <sourceline>6</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>650</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>927</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/ComM_Rte_Cfg.c_4</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate/src/ComM_Rte_Cfg.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00503.Include</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>928</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_macros/ComM_Checks.m_41</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_macros/ComM_Checks.m</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_CONSTR_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>929</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/ComM_Checks.m_59</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_macros/ComM_Checks.m</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PartialNetworkOffset_MinComMPncId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>675</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>930</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/ComM_Checks.m_92</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_macros/ComM_Checks.m</sourcefile>
      <sourceline>92</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PartialNetworkOffset_MaxComMPncId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>676</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>931</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/ComM_Checks.m_111</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_macros/ComM_Checks.m</sourcefile>
      <sourceline>111</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterCoreOsApplicationCoreId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>665</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>932</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/ComM_Checks.m_119</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_macros/ComM_Checks.m</sourcefile>
      <sourceline>119</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterCoreMultipleOsApplicationCoreIds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>666</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>933</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/ComM_Checks.m_127</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_macros/ComM_Checks.m</sourcefile>
      <sourceline>127</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalMappedToPDU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>667</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>934</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/ComM_Checks.m_133</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_macros/ComM_Checks.m</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PDUsMappedToMainfunctions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>935</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/ComM_Checks.m_140</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_macros/ComM_Checks.m</sourcefile>
      <sourceline>140</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.RxMainfunctionMulticorePerChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>754</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>936</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/ComM_Checks.m_149</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_macros/ComM_Checks.m</sourcefile>
      <sourceline>149</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalMappedToOsApplicationCoreId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>669</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>937</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/ComM_Checks.m_158</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_macros/ComM_Checks.m</sourcefile>
      <sourceline>158</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalMappedToMultipleOsApplicationCoreIds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>670</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>938</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/ComM_Checks.m_167</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_macros/ComM_Checks.m</sourcefile>
      <sourceline>167</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalMappedToPDU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>667</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>939</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/ComM_Checks.m_174</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_macros/ComM_Checks.m</sourcefile>
      <sourceline>174</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PDUsMappedToMainfunctions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>940</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/ComM_Checks.m_181</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_macros/ComM_Checks.m</sourcefile>
      <sourceline>181</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.TxMainfunctionMulticorePerChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>755</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>941</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/ComM_Checks.m_190</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_macros/ComM_Checks.m</sourcefile>
      <sourceline>190</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalMappedToOsApplicationCoreId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>669</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>942</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/ComM_Checks.m_199</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_macros/ComM_Checks.m</sourcefile>
      <sourceline>199</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalMappedToMultipleOsApplicationCoreIds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>670</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>943</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_macros/ComM_Functions.m_38</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_macros/ComM_Functions.m</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PartialNetworkOffset_ComMPnInfoOffsetEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>673</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>944</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/ComM_Functions.m_42</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_macros/ComM_Functions.m</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PartialNetworkOffset_busNmOffsetUsage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>674</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>945</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_Checks.m_36</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_Checks.m</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.RxSignalIsNotLinkedToASinglePdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>745</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>946</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_Checks.m_41</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_Checks.m</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.RxPduComMainfunctionRefNotValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>746</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>947</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_Checks.m_54</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_Checks.m</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.RxPduNotLinkedToASingleOsApplication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>747</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>948</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_Checks.m_62</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_Checks.m</sourcefile>
      <sourceline>62</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.RxERASignalSamePartitionAsLinkedChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>748</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>949</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_Checks.m_69</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_Checks.m</sourcefile>
      <sourceline>69</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.RxEIRASignalSamePartitionAsMasterPnc</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>749</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>950</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_Checks.m_79</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_Checks.m</sourcefile>
      <sourceline>79</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.TxSignalIsNotLinkedToASinglePdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>750</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>951</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_Checks.m_84</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_Checks.m</sourcefile>
      <sourceline>84</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.TxPduComMainfunctionRefNotValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>751</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>952</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_Checks.m_95</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_Checks.m</sourcefile>
      <sourceline>95</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.TxPduNotLinkedToASingleOsApplication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>752</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>953</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_Checks.m_103</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_Checks.m</sourcefile>
      <sourceline>103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.TxERASignalSamePartitionAsLinkedChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>753</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>954</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/ComM.h_2</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM.h</sourcefile>
      <sourceline>2</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComMh</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>955</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM.h_9</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>956</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/ComM_BSW.h_8</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW.h</sourcefile>
      <sourceline>8</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>957</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM_BSW.h_215</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW.h</sourcefile>
      <sourceline>215</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00234.COMM_E_NOT_INITED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>958</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM_BSW.h_254</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW.h</sourcefile>
      <sourceline>254</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00649.COMM_E_MULTIPLE_PNC_ASSIGNED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>959</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM_BSW.h_262</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW.h</sourcefile>
      <sourceline>262</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00649.COMM_E_NO_PNC_ASSIGNED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>960</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/ComM_BSW_Cfg.h_133</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW_Cfg.h</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00829.Det_ReportError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>961</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/ComM_BSW_Types.h_32</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW_Types.h</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Rte_Ports_UserMode_P.NO_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>962</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM_BSW_Types.h_39</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW_Types.h</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Rte_Ports_UserMode_P.SILENT_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>963</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM_BSW_Types.h_46</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW_Types.h</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Rte_Ports_UserMode_P.FULL_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>964</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM_BSW_Types.h_71</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW_Types.h</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00881</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>965</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM_BSW_Types.h_78</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW_Types.h</sourcefile>
      <sourceline>78</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00881</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>966</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM_BSW_Types.h_85</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW_Types.h</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00880</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>967</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM_BSW_Types.h_92</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW_Types.h</sourcefile>
      <sourceline>92</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00880</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>968</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM_BSW_Types.h_193</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW_Types.h</sourcefile>
      <sourceline>193</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00668.ComM_InitStatusType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>969</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM_BSW_Types.h_206</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW_Types.h</sourcefile>
      <sourceline>206</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00669</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>970</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM_BSW_Types.h_219</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW_Types.h</sourcefile>
      <sourceline>219</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00670</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>971</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM_BSW_Types.h_231</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW_Types.h</sourcefile>
      <sourceline>231</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>972</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM_BSW_Types.h_244</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW_Types.h</sourcefile>
      <sourceline>244</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00674</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>973</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM_BSW_Types.h_267</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BSW_Types.h</sourcefile>
      <sourceline>267</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00673.ComM_PncModeType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>974</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/ComM_BusSm.h_2</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_BusSm.h</sourcefile>
      <sourceline>2</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_BusSm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>975</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/ComM_Dcm.h_2</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_Dcm.h</sourcefile>
      <sourceline>2</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_Dcm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00266</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>976</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/ComM_EcuMBswM.h_14</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_EcuMBswM.h</sourcefile>
      <sourceline>14</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_EcuMBswM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>977</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/ComM_Int.h_43</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_Int.h</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.SchM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>978</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM_Int.h_51</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_Int.h</sourcefile>
      <sourceline>51</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00103.NvM_SetRamBlockStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00140.NvM_SetRamBlockStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>979</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/ComM_Int.h_986</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_Int.h</sourcefile>
      <sourceline>986</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00976</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>980</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/ComM_Nm.h_2</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/include/ComM_Nm.h</sourcefile>
      <sourceline>2</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_Nm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00261</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>981</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_80</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.NvM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>982</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_84</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>84</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.CanSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>983</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_89</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>89</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.FrSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>984</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_94</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>94</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.LinSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>985</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_98</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.EthSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>986</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_104</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.Det</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>987</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_199</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>199</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>988</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_200</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>200</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_ACTIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>989</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_201</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>201</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_PASSIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>990</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_205</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>205</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>991</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_206</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>206</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_ACTIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>992</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_207</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>207</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_PASSIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>993</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_355</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>355</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00855</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00962.CanSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>597</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>994</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_361</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>361</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00860</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00962.EthSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>995</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_367</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>367</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00853</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00962.FrSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>996</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_374</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>374</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00857</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00962.LinSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>598</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>997</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_435</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>435</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00982</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>998</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_648</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>648</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00927</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>999</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_660</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>660</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Impl.PbCfgM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1000</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_686</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>686</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_Init_NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1001</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_700</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>700</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00485</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1002</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_719</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>719</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1003</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_752</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>752</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00864</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1004</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_913</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>913</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00794</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1005</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_952</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>952</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00872</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1006</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_974</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>974</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00649.COMM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1007</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_998</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>998</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1008</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1036</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1036</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00619</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1009</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1110</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1110</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToMasterPncCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1010</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1114</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1114</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToMasterPncDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>735</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1011</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1126</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1126</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_RequestComMode_NO_COM_REQ_BY_ALL_COMM_USER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1717</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1012</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1191</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1191</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00842</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1013</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1208</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1208</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00649.COMM_E_MODE_LIMITATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1014</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1215</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1215</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToInhibitionCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>728</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1015</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1219</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1219</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToInhibitionDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>736</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1016</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1267</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1267</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>724</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1017</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1271</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1271</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToChannelDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>734</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1018</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1293</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1293</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_RequestComMode_REQ_STATUS_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1019</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1304</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1304</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>756</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00978</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00972</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00218.NOCOM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1020</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1305</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1305</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00218.SILENTCOM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00848</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1021</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1348</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1348</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00151.DetReport.WrongComModeReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1022</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1372</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1372</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00686</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00374</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1023</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1400</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1400</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00858</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1024</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1413</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1413</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00858</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1025</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1443</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1443</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1026</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1492</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1492</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00625</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1027</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1555</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1555</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1028</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1580</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1580</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00234.WRONG_PARAMETERS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1029</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1586</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1586</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00234.WRONG_PARAMETERS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1030</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1595</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1595</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00234.WRONG_PARAMETERS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1031</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1601</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1601</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00234.WRONG_PARAMETERS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1032</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1633</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1633</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.BusSM_GetCurrentComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1033</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1665</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1665</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_GetCurrentPNCComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1034</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1719</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1719</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1035</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1724</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1724</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1036</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1729</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1729</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_GetCurrentPNCComMode.ReturnedComMode.COMM_FULL_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>703</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1037</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1730</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1730</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_GetCurrentPNCComMode.ReturnedComMode.COMM_NO_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>704</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1038</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1759</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1759</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1039</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1760</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1760</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00799</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00470</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1040</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1805</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1805</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToInhibitionCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1041</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1809</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1809</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToInhibitionDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>737</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1042</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1832</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1832</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToInhibitionCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1043</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1845</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1845</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_ComM_PreventWakeUp_REQ_STATUS_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1044</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1862</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1862</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00470</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1045</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1863</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1863</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00800.ComM_LimitChannelToNoComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00841</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1046</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1907</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1907</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToInhibitionCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1047</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1919</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1919</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_LimitChannelToNoComMode_LIMIT_TO_NO_COM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1707</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1048</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1932</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1932</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToInhibitionCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1049</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1945</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1945</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_LimitChannelToNoCom_REQ_STATUS_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1693</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1050</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_1962</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>1962</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00470</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1051</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2002</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2002</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_LimitECUToNoComMode_LIMIT_TO_NO_COM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1706</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1052</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2012</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2012</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_LimitECUToNoCom_REQ_STATUS_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1695</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1053</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2033</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2033</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00302</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1054</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2034</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2034</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1055</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2078</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2078</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00301</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1056</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2120</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2120</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00552.ComM_SetECUGroupClassification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1057</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2161</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2161</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00370</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1058</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2222</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2222</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00383</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00583</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1059</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2264</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2264</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_Nm_NetworkStartIndication_PASSIVE_WAKEUP_IND</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1700</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1060</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2265</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2265</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_PASSIVE_WAKEUP_IND_NoComNoPendingReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>637</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00903</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1061</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2277</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2277</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00390</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1062</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2305</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2305</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.BusNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1063</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2309</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2309</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_Nm_NetworkMode_NM_MODE_SWITCHED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1697</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1064</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2321</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2321</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00391</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1065</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2348</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2348</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.BusNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1066</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2352</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2352</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_Nm_PrepareBusSleepMode_NM_MODE_SWITCHED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1067</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2364</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2364</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00392</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1068</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2392</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2392</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.BusNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1069</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2396</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2396</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_Nm_BusSleepMode_NM_MODE_SWITCHED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1070</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2408</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2408</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00792</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1071</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2449</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2449</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_Nm_RestartIndication_PASSIVE_WAKEUP_IND</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1701</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00902</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1072</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2450</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2450</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00894</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1073</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2463</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2463</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR21-11.SWS_ComM_91030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1074</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2541</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2541</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_91000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1075</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2608</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2608</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01018.NmVariant.SLAVE_ACTIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1076</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2609</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2609</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01018.NmVariant.SLAVE_PASSIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>577</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1077</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2610</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2610</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.BUS_SM_SLEEP_INDICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1705</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1078</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2611</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2611</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.BUS_SM_SLEEP_INDICATION_NO_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1764</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1079</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2630</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2630</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00873</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1080</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2672</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2672</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00889.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1081</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2673</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2673</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00889.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1082</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2674</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2674</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00866.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1083</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2675</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2675</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00866.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00866.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1084</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2676</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2676</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00876.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00876.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00876.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1085</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2677</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2677</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00878.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00878.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00878.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1086</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2678</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2678</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00883.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00883.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00883.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1087</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2690</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2690</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_DCM_ActiveDiagnostic_REQ_STATUS_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1691</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1088</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2699</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2699</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00874</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1089</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2752</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2752</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_DCM_InactiveDiagnostic_REQ_STATUS_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1090</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2763</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2763</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1091</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2796</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2796</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1092</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2835</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2835</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR430.SWS_ComM_00965</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1093</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2847</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2847</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication_ComMPncEnable_FALSE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>644</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1094</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2856</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2856</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication_No_PNCs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>636</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1095</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2862</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2862</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00871</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00884</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00885</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1096</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2903</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2903</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_CommunicationAllowed_COMALLOWED_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1708</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1097</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2911</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2911</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00675</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1098</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2950</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2950</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.BusSMModeIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1099</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_2954</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>2954</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.BUSSM_MODE_IND</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1704</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1100</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3009</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3009</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00825</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1101</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3050</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3050</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1102</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3051</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3051</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00165_UserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>706</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1103</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3057</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3057</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_RequestComMode_NO_COM_REQ_BY_ALL_COMM_USER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1717</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1104</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3058</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3058</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ModeLimitation_NO_COM_REQ_BY_ALL_COMM_USER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1105</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3087</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3087</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00690</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1106</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3120</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3120</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.InhibitionToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>729</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1107</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3124</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.InhibitionToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>740</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1108</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3125</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3125</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SetChannelComMInhibitionStatusDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1109</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3146</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3146</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00839</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00840</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1110</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3147</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3147</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_LimitChannelToNoCom_REQ_STATUS_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1693</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1111</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3148</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3148</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_LimitECUToNoCom_REQ_STATUS_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1695</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1112</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3172</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3172</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.InhibitionToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>729</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1113</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3176</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3176</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.InhibitionToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>740</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1114</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3177</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3177</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SetChannelComMInhibitionStatusDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1115</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3225</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3225</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.InhibitionToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>729</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1116</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3229</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3229</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.InhibitionToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>740</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1117</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3230</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3230</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SetChannelComMInhibitionStatusDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1118</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3264</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3264</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00839</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00840</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1119</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3272</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3272</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.InhibitionToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>729</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1120</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3276</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3276</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.InhibitionToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>740</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1121</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3277</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3277</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SetChannelComMInhibitionStatusDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1122</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3286</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3286</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_ComM_PreventWakeUp_REQ_STATUS_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1123</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3436</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3436</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00984</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1124</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3437</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3437</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.Com_ReceiveSignal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1125</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3493</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3493</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00944</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00945</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1126</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3569</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3569</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.COMCBK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1719</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00950</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1127</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3581</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3581</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00934</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00951</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1128</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3582</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3582</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00165_ERARequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>707</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1129</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3583</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3583</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_PREPARE_SLEEP_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1778</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1130</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3584</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3584</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_PREPARE_SLEEP_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1779</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1131</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3585</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3585</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_READY_SLEEP_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1771</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1132</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3586</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3586</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_READY_SLEEP_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1772</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1133</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3587</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3587</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_READY_SLEEP_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1773</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1134</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3588</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3588</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_NO_COMMUNICATION_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1766</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1135</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3589</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3589</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_PncReadySleep_PncRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1136</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3595</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3595</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NO_COM_REQ_BY_ALL_COMM_USER_PNC_REQUESTED_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1769</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1137</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3621</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3621</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToSignalCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>716</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1138</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3629</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3629</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToSignalDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1139</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3630</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3630</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToSignalSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>744</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1140</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3653</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3653</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_SendSlaveCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>663</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1141</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3661</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3661</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1142</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3777</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3777</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PncMainfunctionDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>732</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1143</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3781</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3781</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>742</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1144</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3799</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3799</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>742</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1145</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3850</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3850</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00964</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1146</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3900</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3900</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1147</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3901</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3901</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PncMainfunctionDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>732</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1148</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3905</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3905</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>742</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1149</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3916</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3916</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_Channel_ComMSynchronousWakeUp_true</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>642</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1150</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3917</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3917</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1151</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3928</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3928</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ECUM_PNCWAKEUP_IND_PNC_NO_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1780</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1152</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3929</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3929</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_Channel_ComMSynchronousWakeUp_false</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>643</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1153</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3959</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3959</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1154</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3960</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3960</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PncMainfunctionDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>732</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1155</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3964</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3964</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>742</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1156</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3985</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3985</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ECUM_PNCWAKEUP_IND_PNC_NO_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1780</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1157</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_3986</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>3986</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_Channel_ComMSynchronousWakeUp_false</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>643</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1158</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4018</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4018</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1159</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4019</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4019</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PncMainfunctionDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>732</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1160</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4023</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4023</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>742</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1161</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4044</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4044</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ECUM_PNCWAKEUP_IND_PNC_NO_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1780</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1162</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4045</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4045</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_Channel_ComMSynchronousWakeUp_false</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>643</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1163</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4103</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1164</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4111</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4111</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01082.Nm_RequestSynchronizedPncShutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1165</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4112</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4112</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01082.COMM_PNC_REQUESTED.To.COMM_PNC_READY_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1166</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4113</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4113</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.Nm_RequestSynchronizedPncShutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1167</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4217</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4217</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToUserCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1168</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4221</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4221</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToUserSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>741</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1169</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4247</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4247</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>724</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1170</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4253</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4253</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToChannelDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>734</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1171</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4258</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4258</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToUserDataGetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>730</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1172</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4259</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4259</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToChannelDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>734</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1173</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4280</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4280</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToMasterPncCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1174</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4286</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4286</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToMasterPncDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>735</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1175</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4291</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4291</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToUserDataGetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>730</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1176</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4292</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4292</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToMasterPncDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>735</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1177</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4304</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4304</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_RequestComMode_NO_COM_REQ_BY_ALL_COMM_USER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1717</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1178</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4327</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4327</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ModeLimitation_NO_COM_REQ_BY_ALL_COMM_USER</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1179</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4366</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4366</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_EcuM_WakeUpIndication_syncWU_PASSIVE_WAKEUP_IND</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1703</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00694</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1180</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4390</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4390</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1181</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4394</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4394</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToChannelDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>738</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1182</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4433</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4433</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToMasterPncCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>726</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1183</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4437</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4437</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToMasterPncDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>739</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1184</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4446</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4446</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ECUM_WAKEUP_IND_PNC_NO_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1768</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1185</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4447</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4447</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ECUM_WAKEUP_IND</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1186</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4469</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4469</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComM_EcuM_WakeUpIndication_PASSIVE_WAKEUP_IND</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1702</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1187</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4507</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4507</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1188</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4511</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4511</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToChannelDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>738</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1189</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4665</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4665</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01082.Nm_RequestSynchronizedPncShutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1190</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM.c.m4_4666</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM.c.m4</sourcefile>
      <sourceline>4666</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01082.COMM_PNC_REQUESTED.To.COMM_PNC_READY_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1191</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/ComM_ASR40_Rte.c.m4_154</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_ASR40_Rte.c.m4</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>783</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1192</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_ASR40_Rte.c.m4_175</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_ASR40_Rte.c.m4</sourcefile>
      <sourceline>175</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>783</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1193</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_ASR40_Rte.c.m4_193</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_ASR40_Rte.c.m4</sourcefile>
      <sourceline>193</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>783</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1194</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_ASR40_Rte.c.m4_211</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_ASR40_Rte.c.m4</sourcefile>
      <sourceline>211</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>783</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1195</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_ASR40_Rte.c.m4_229</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_ASR40_Rte.c.m4</sourcefile>
      <sourceline>229</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>783</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1196</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_ASR40_Rte.c.m4_250</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_ASR40_Rte.c.m4</sourcefile>
      <sourceline>250</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>783</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1197</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_ASR40_Rte.c.m4_271</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_ASR40_Rte.c.m4</sourcefile>
      <sourceline>271</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>783</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1198</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_ASR40_Rte.c.m4_290</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_ASR40_Rte.c.m4</sourcefile>
      <sourceline>290</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>783</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1199</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_ASR40_Rte.c.m4_310</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_ASR40_Rte.c.m4</sourcefile>
      <sourceline>310</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>783</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1200</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_ASR40_Rte.c.m4_327</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_ASR40_Rte.c.m4</sourcefile>
      <sourceline>327</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>783</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1201</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_ASR40_Rte.c.m4_343</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_ASR40_Rte.c.m4</sourcefile>
      <sourceline>343</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>783</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1202</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_63</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>63</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.Nm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1203</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_67</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>67</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.Dcm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1204</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_72</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>72</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.BswM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>494</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1205</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_75</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>75</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.CanSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1206</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_80</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.FrSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1207</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_85</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.LinSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1208</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_89</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>89</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.EthSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1209</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_147</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>147</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.ErrorHandling.Nm_PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1824</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1210</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_149</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>149</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.ErrorHandling.Nm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1825</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1211</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_151</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>151</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.ErrorHandling.Nm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1826</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1212</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_182</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>182</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.ErrorHandling.BusSm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1827</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1213</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_454</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>454</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00854</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00664</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00962.CanSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>597</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1214</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_460</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>460</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00859</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00962.EthSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1215</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_466</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>466</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00852</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00962.FrSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1216</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_473</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>473</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00856</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00962.LinSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>598</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1217</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_534</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>534</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.ModePropagation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1687</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1218</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_576</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>576</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION.WithRequest.COMM_FULL_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1219</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_577</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>577</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1220</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_578</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>578</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1221</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_588</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>588</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.BusSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1222</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_589</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>589</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1223</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_597</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>597</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Client_Server_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1224</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_641</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>641</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>SWS_ComM_01057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1225</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_642</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>642</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FullCommunicationAction1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1785</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1226</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_643</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>643</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.BusSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1227</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_644</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>644</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1228</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_715</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>715</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_FULL_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1751</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00637</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1229</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_717</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>717</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.BusNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1230</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_739</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>739</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00899</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00869</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1231</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_775</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>775</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00870</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1232</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_776</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>776</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Nm_PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1233</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_777</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>777</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_WakeUpIndication</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1234</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_778</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>778</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_PNCWakeUpIndication</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>565</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1235</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_779</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>779</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_WakeUpIndication.ManagedChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1236</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_780</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>780</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_PNCWakeUpIndication.ManagedChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1237</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_781</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>781</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_MODE_PASSIVE_STARTUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1722</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1238</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_831</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>831</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1239</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_850</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>850</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMPncGatewayEnabled.EB_NM_STACK.Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1240</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_851</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>851</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMPncGatewayEnabled.EB_NM_STACK.Enabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1241</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_868</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>868</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LocalUserRequest.NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1242</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_869</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>869</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.DcmRequest.NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>687</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1243</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_870</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>870</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LocalUserRequest.RestartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1244</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_871</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>871</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.DcmRequest.RestartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>689</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1245</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_872</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>872</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1246</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_873</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>873</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>691</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1247</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_874</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>874</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1248</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_875</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>875</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1249</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_876</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>876</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1250</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_877</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>877</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1251</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_878</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>878</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>696</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1252</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_879</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>879</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>697</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1253</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_880</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>880</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1254</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_881</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>881</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1255</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_882</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>882</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>700</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1256</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_883</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>883</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>701</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1257</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_886</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>886</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00869</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1258</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_887</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>887</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Nm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1259</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_901</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>901</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_NETWORK_REQUESTED_NmVariantFULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1784</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1260</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_909</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>909</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Nm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1261</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_935</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>935</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_FULL_COM_NETWORK_REQUESTED_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1734</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00890.COMM_FULL_COM_READY_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1262</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_936</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>936</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_FULL_COM_NETWORK_REQUESTED_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1735</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1263</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_962</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>962</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_FULL_COM_NETWORK_REQUESTED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1736</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1264</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_965</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>965</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.BusNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1265</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1000</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1000</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>574</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00886.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1266</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1002</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1002</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00886.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1267</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1007</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1007</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComMTMinFullComModeDuration_TIMEOUT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1268</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1025</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1025</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_NETWORK_REQUESTED_ENTRY_REQ_STATUS_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1696</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1269</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1027</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1027</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_NETWORK_REQUESTED_ENTRY_REQ_STATUS_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1696</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1270</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1028</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1028</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1745</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1271</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1029</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1029</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1746</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1272</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1030</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1030</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1273</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1031</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1031</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00915.NmVariant.SLAVE_PASSIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1274</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1032</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1032</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00915.NmVariant.PASSIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1275</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1046</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1046</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>574</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00886.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1276</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1048</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1048</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00886.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1277</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1053</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1053</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00890.CANCEL_COMMTMINFULLCOMMODEDURATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>592</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1278</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1065</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1065</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_FULL_COM_NETWORK_REQUESTED_Transition_UserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1279</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1066</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1066</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_FULL_COM_NETWORK_REQUESTED_Transition_DcmRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>641</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1280</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1067</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1067</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1737</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1281</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1068</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1068</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1738</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1282</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1098</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1098</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1743</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1283</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1099</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1099</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1744</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1284</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1745</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1285</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1101</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1101</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1746</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1286</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1287</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1103</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00915.NmVariant.SLAVE_PASSIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1288</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1134</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1134</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TIMEOUT_NO_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1741</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1289</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1135</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1135</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TIMEOUT_NO_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1742</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1290</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1148</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1148</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TIMEOUT_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1739</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1291</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1149</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1149</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TIMEOUT_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1740</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1292</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1190</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1190</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_FULL_COM_NETWORK_REQUESTED_PENDING_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1747</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1293</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1211</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1211</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00888</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1294</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1215</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1215</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00891</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1295</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1216</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1216</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>574</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1296</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1220</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1220</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComMNmLightTimeout_TIMEOUT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1297</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1226</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1226</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1298</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1230</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1230</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Nm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1299</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1241</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1241</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_ENTRY_REQ_STATUS_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1723</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1300</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1246</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1246</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_ENTRY_REQ_STATUS_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1723</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1301</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1250</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1250</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1302</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1254</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1254</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_TIMEOUT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1713</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1303</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1255</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1255</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMReleaseNoneChannels</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>679</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1304</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1260</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1260</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMReleaseNoneChannels_BusTypeDifferentThan_COMM_BUS_TYPE_INTERNAL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>680</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1305</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1261</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1261</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_TIMEOUT_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1714</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1306</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1267</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1267</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMReleaseNoneChannels_BusTypeIs_COMM_BUS_TYPE_INTERNAL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>681</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1307</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1268</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1268</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_TIMEOUT_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1715</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1308</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1274</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1274</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00610</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1309</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1287</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1287</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>574</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1310</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1291</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1291</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00892</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1311</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1318</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1318</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_FULL_COM_READY_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1748</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1312</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1321</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1321</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.BusNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1313</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1348</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1348</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COM_READY_SLEEP_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1756</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1314</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1349</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1349</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COM_READY_SLEEP_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1757</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00882</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1315</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1360</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1360</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TIMEOUT_FULL_COM_READY_SLEEP_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1750</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1316</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1361</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1361</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TIMEOUT_FULL_COM_READY_SLEEP_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1749</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1317</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1369</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1369</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00671</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00582</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1318</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1385</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1385</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00898</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00288</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1319</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1397</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1397</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00355</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00558</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1320</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1401</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1401</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_InitiateReset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1321</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1410</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1410</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Nm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1322</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1421</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1421</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NO_COMMUNICATION_ENTRY_REQ_STATUS_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1724</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1323</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1431</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1431</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.BusSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1324</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1432</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1432</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1325</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1433</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1433</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1326</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1441</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1441</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Client_Server_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1327</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1494</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1494</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_NO_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1328</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1495</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1495</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_DCM_NO_COM_NO_PENDING_REQUEST_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1726</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1329</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1496</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1496</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00876.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00876.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00876.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1330</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1518</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1518</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00893.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1331</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1519</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1519</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00893.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1332</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1520</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1520</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1333</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1521</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1521</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1727</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1334</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1522</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1522</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1728</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1335</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1523</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1523</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1729</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1336</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1524</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1524</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1730</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1337</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1526</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1526</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NO_COM_REQUEST_PENDING_COMALLOWED_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1709</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1338</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1527</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1527</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00875</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1339</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1538</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1538</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.COMALLOWED_CHANGE_NO_COM_PENDING_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1733</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00896</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00895</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1340</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1552</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1552</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LimitToNoCom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1341</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1553</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1553</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_NO_COM_REQUEST_PENDING_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1761</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1342</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1554</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1554</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_NO_COM_REQUEST_PENDING_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1762</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1343</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1568</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1568</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LimitToNoComClearUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1344</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1589</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1589</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_INDICATION_NO_COM_REQUEST_PENDING_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1758</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1345</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1590</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1590</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_INDICATION_NO_COM_REQUEST_PENDING_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1759</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1346</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1591</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1591</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_INDICATION_NO_COM_REQUEST_PENDING_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1760</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1347</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1602</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1602</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1348</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1603</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1603</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_DCM_NO_COM_PENDING_REQUEST_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1732</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00897</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1349</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1619</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1619</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.WakeupInhibition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1350</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1620</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1620</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.WAKEUP_INHIBITION_NO_COM_REQUEST_PENDING</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1763</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1351</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1636</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1636</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1352</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1641</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1641</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00299</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1353</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1653</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1653</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.BusSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1354</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1654</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1654</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1355</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1662</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1662</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Client_Server_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1356</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1694</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1694</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_SILENT_COMMUNICATION_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1754</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00296</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1357</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1696</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1696</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.BusNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1358</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1727</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1727</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_SILENT_COMMUNICATION_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1755</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00295</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1359</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1729</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1729</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.BusNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1360</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1746</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1746</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_SILENT_COMMUNICATION_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1752</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1361</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1747</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1747</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_SILENT_COMMUNICATION_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1753</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00877</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1362</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1748</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1748</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00878.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00878.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00878.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1363</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1769</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1769</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComMTMinFullComModeDuration_TIMEOUT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1364</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1770</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1770</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ComMNmLightTimeout_TIMEOUT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1365</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1802</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1802</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Client_Server_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1366</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1838</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1838</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00663</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1367</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1853</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1853</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToUserCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1368</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1857</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1857</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToUserSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>741</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1369</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1871</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1871</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TOPNotifyTransition_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1782</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1370</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1877</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1877</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00778</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1371</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1883</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1883</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TOPNotifyTransition_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1781</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00861</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.BswM_ComM_CurrentMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1372</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1895</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1895</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Dcm_ComM_SilentComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1373</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1902</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1902</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Dcm_ComM_NoComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1374</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1911</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1911</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TOPNotifyTransition_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1783</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1375</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1912</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1912</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Dcm_ComM_FullComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1376</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1923</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1923</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Dcm_ComM_SilentComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1377</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMFnct.c_1934</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMFnct.c</sourcefile>
      <sourceline>1934</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Dcm_ComM_NoComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1378</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_62</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>62</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.Com</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1379</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_182</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>182</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00916</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1380</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_250</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>250</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00907</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00908</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1381</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_251</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>251</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_CurrentPNCMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1382</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_252</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>252</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_CurrentPNCMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1383</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_255</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>255</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00952</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00947</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1384</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_256</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>256</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PREPARE_SLEEP_TIMEOUT_PNC_PREPARE_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1776</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1385</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_267</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>267</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00942</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1386</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_268</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>268</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.COMCBK_PNC_PREPARE_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1774</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1387</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_299</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>299</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_PREPARE_SLEEP_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1777</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00948</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1388</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_320</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>320</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00907</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00908</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1389</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_321</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>321</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_CurrentPNCMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1390</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_322</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>322</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayType.NotSet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>596</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1391</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_333</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>333</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.COMCBK_PNC_READY_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1775</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00940</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1392</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_357</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>357</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_PncReadySleep_PncRequested_User</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1393</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_363</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>363</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00825</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1394</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_369</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>369</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00966</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1395</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_370</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>370</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.PncRequestChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1680</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1396</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_371</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>371</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00993</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1397</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_372</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>372</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01067.COMM_PNC_NO_COM.To.COMM_PNC_REQUESTED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1398</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_373</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>373</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01067.COMM_PNC_PREPARE_SLEEP.To.COMM_PNC_REQUESTED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>583</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1399</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_374</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>374</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01069.COMM_PNC_REQUESTED.Entry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1400</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_375</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>375</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01070.COMM_PNC_NO_COM.To.COMM_PNC_REQUESTED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1401</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_376</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>376</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01070.COMM_PNC_PREPARE_SLEEP.To.COMM_PNC_REQUESTED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1402</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_377</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>377</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01071.COMM_PNC_REQUESTED.Entry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1403</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_421</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>421</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00966</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1404</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_428</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>428</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PNC_NM_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1405</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_429</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>429</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00929</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00980</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1406</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_439</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>439</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00907</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00908</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1407</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_440</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>440</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_CurrentPNCMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1408</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_466</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>466</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PncRequestedAction1_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1786</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1409</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_467</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>467</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PncRequestedAction1_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1787</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1410</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_471</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>471</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00966</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1411</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_528</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>528</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00961</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1412</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_529</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>529</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00966</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1413</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_542</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>542</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00966</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1414</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_548</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>548</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR21-11.SWS_ComM_01083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1415</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_559</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>559</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1416</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_567</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>567</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.Nm_RequestSynchronizedPncShutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1417</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_603</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>603</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00933</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1418</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_614</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>614</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.COMCBK_PNC_NO_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1767</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00924</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00908</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1419</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_615</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>615</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_CurrentPNCMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1420</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_618</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>618</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00931</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1421</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_626</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>626</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00990</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1422</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_642</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>642</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00924</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00908</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1423</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_643</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>643</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_CurrentPNCMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1424</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_664</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>664</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_NO_COMMUNICATION_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1765</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1425</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_665</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>665</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00924</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00908</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00932</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1426</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_666</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>666</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_CurrentPNCMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1427</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_684</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>684</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00925</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1428</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_690</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>690</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00924</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00908</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00926</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1429</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_691</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>691</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_CurrentPNCMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1430</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_697</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>697</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.ComM_PNC_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1677</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1431</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_709</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>709</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.ComM_PNC_RequestComMode_Mode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1678</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1432</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_710</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>710</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00827</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1433</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_712</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>712</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00966</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1434</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_806</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>806</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.ComM_PNC_RequestComMode_Event</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1679</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1435</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_810</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>810</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.ComM_PNC_RequestComMode_Mode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1678</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1436</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_893</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>893</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00959</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1437</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_896</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>896</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00930.ComMPncGatewayEnabled.FALSE.Tx.WithValue.One</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00992</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00960</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00959</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1438</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_897</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>897</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00164.Entering.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.Rx.Era</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1439</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_898</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>898</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00164.Entering.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.Rx.UserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1440</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_899</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>899</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00164.In.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.Rx.ERA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1441</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_900</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>900</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00164.In.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.UserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1442</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_901</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>901</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00930.ComMPncGatewayType.NotSet.Tx.WithValue.One</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1443</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_924</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>924</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.Com_SendSignal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1444</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_980</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>980</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PREPARE_SLEEP_TIMEOUT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1716</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1445</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_996</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>996</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00991</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1446</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_997</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>997</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NO_COM_REQ_BY_ALL_COMM_USER_PNC_REQUESTED_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1770</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1447</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_HsmComMPncFnct.c_1008</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_HsmComMPncFnct.c</sourcefile>
      <sourceline>1008</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1448</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/ComM_Rte.c.m4_68</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_Rte.c.m4</sourcefile>
      <sourceline>68</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1449</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_Rte.c.m4_191</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_Rte.c.m4</sourcefile>
      <sourceline>191</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1450</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_Rte.c.m4_226</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_Rte.c.m4</sourcefile>
      <sourceline>226</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1451</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_Rte.c.m4_266</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_Rte.c.m4</sourcefile>
      <sourceline>266</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1452</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_Rte.c.m4_272</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_Rte.c.m4</sourcefile>
      <sourceline>272</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.RteNrOfRequesters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>677</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1453</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_Rte.c.m4_294</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_Rte.c.m4</sourcefile>
      <sourceline>294</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1454</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_Rte.c.m4_349</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_Rte.c.m4</sourcefile>
      <sourceline>349</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>784</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1455</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_Rte.c.m4_366</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_Rte.c.m4</sourcefile>
      <sourceline>366</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>784</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1456</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_Rte.c.m4_380</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_Rte.c.m4</sourcefile>
      <sourceline>380</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>784</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1457</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_Rte.c.m4_393</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_Rte.c.m4</sourcefile>
      <sourceline>393</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>784</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1458</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_Rte.c.m4_407</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_Rte.c.m4</sourcefile>
      <sourceline>407</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>784</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1459</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_Rte.c.m4_437</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_Rte.c.m4</sourcefile>
      <sourceline>437</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>784</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1460</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_Rte.c.m4_454</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_Rte.c.m4</sourcefile>
      <sourceline>454</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>784</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1461</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_Rte.c.m4_469</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_Rte.c.m4</sourcefile>
      <sourceline>469</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>784</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1462</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_Rte.c.m4_485</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_Rte.c.m4</sourcefile>
      <sourceline>485</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>784</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1463</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_Rte.c.m4_498</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_Rte.c.m4</sourcefile>
      <sourceline>498</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>784</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1464</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/ComM_Rte.c.m4_511</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/src/ComM_Rte.c.m4</sourcefile>
      <sourceline>511</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>784</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00669</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1465</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_50</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>50</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1466</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_76</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>76</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00879</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1467</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_91</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>91</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00878</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00911</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00999</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00953</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00998</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1468</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_109</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.REQPROD_233633_1.AUTOSAR403PB.ComMPncEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>624</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1469</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_129</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>129</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00890</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1470</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_145</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>145</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1471</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_160</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>160</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1472</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_167</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>167</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00567</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1473</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_194</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>194</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1474</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_201</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>201</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1475</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_224</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>224</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00888</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1476</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_250</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>250</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1477</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_268</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>268</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00635</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1478</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_289</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>289</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1479</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_307</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>307</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00896</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1480</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_337</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>337</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00894</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1481</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_375</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>375</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00787</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1482</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_395</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>395</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1483</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_404</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>404</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00789</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1484</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_429</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>429</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1485</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_444</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>444</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00556</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1486</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_460</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>460</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1487</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_479</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>479</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00571</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1488</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_510</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>510</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1489</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_519</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>519</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00690</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1490</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_525</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>525</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00569</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1491</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_546</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>546</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1492</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_574</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>574</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1493</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_582</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>582</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00842</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1494</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_587</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>587</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00981</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1495</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_593</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>593</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00898</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1496</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_629</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>629</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00607</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1497</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_646</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>646</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00606</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1498</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_673</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>673</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1499</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_695</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>695</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMNmPassiveStartupDelayMainfunctionCycles_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>785</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1500</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_709</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>709</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1501</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_727</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>727</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00568</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1502</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_762</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>762</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1503</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_770</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>770</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00599</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1504</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_784</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>784</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1505</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_787</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>787</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00501</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>617</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1506</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_789</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>789</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00502</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1507</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_797</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>797</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00886</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1508</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_818</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>818</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1509</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_826</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>826</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMPncNmRequest.dependencyCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>613</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1510</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_834</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>834</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00327</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00995</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1511</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_845</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>845</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00657</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1512</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_860</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>860</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1513</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_866</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>866</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_CONSTR_00003.NmVariant.SLAVE_PASSIVE.User</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>578</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1514</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_874</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>874</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00658</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1515</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_892</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>892</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1516</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_908</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>908</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00893</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1517</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_959</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>959</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00843</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1518</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_974</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>974</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMPncComSignal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1519</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_978</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>978</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.GwChannelCoordinationConstraint</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>705</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1520</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_986</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>986</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00874</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1521</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1000</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1000</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1522</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1016</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1016</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00899</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1523</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1052</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1052</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00913</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1524</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1057</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1057</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00880</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1525</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1073</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1073</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.REQPROD_233633_1.RFC_55562.ComMChannelPerPnc</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1526</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1084</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1084</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00996</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1527</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1089</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1089</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_CONSTR_00003.NmVariant.SLAVE_PASSIVE.Pnc</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>579</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1528</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1099</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1099</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00912</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1529</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1104</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1104</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00876</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1530</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1123</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1123</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.REQPROD_233633_1.RFC_55562.ComMUserPerPnc</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>626</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1531</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1137</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1137</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1532</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1144</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1144</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00919</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1533</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1151</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1151</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00881</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1534</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1164</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1164</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATION_CONFIG_VARIANT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>621</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1535</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1170</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1170</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Constraint_ComMPncGatewayType_Enabled_SignalType_ERA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>708</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1536</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1176</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1176</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00885</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1537</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1191</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1191</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1538</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1209</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1209</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00883</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1539</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1224</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1224</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1540</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1246</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1246</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00884</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1541</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1269</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1269</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1542</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1294</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1294</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00882</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1543</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1310</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1310</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1544</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1331</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1331</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00891</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1545</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1368</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1368</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1546</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1401</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1401</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1547</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1429</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1429</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1548</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1448</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1448</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00786</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1549</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1449</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1449</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMUserEcucPartitionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>714</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1550</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1465</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1465</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1551</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1494</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1494</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00554</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1552</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1508</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1508</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMChannelPartitionConfigError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>709</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1553</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1512</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1512</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMUserEcuCPartitionRefError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>715</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1554</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1516</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1516</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMInhibitionEcuCPartitionRefError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>713</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1555</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1520</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1520</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMMasterPNCEcuCPartitionRefError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>711</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1556</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1592</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1592</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Config.ComMMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1557</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1646</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1646</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMMasterPNCEcuCPartitionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>710</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1558</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1679</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1679</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMInhibitionEcuCPartitionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>712</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1559</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1740</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1740</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1560</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1746</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1746</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMDcmUsage_Automatically</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1561</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1749</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1749</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.DcmDependencyChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>612</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1562</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1752</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1752</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.DcmDependencyChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>612</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1563</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1756</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1756</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.DcmDependencyChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>612</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1564</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1765</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1765</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00892</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1565</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1793</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1793</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00555</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1566</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1812</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1812</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1567</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1822</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1822</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00840</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1568</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1850</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1850</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1569</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1861</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1861</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00895</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1570</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1891</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1891</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00563</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1571</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1923</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1923</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1572</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1938</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1938</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00560</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00801.ComM_LimitECUToNoComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1573</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1957</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1957</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1574</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1967</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1967</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00887</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1575</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_1985</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>1985</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1576</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2001</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2001</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00841</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1577</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2021</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2021</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1578</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2036</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2036</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00839</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00910</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1579</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2054</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2054</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1580</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2061</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2061</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMPncSupport_Automatically</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>682</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1581</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2074</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2074</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00897</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1582</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2093</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2093</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1583</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2111</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2111</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PartialNetworkOffset_ParamLocation</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>672</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1584</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2158</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2158</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.ComMRelocatablePbcfgEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1585</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2205</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2205</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1586</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2221</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2221</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00695</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1587</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2239</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2239</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1588</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2249</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2249</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00557</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1589</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2267</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2267</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1590</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2281</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2281</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00622</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1591</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2300</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2300</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1592</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2310</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2310</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00559</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1593</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2328</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2328</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1594</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2338</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2338</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00783</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1595</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2360</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2360</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1596</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2379</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2379</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00558</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1597</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM.xdm.m4_2398</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM.xdm.m4</sourcefile>
      <sourceline>2398</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Config.IMPLEMENTATIONCONFIGCLASS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>622</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.AUTOSAR_4.0.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>623</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1598</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/ComM_EBParameters.xdm.m4_21</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM_EBParameters.xdm.m4</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMReleaseNoneChannels_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>678</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1599</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM_EBParameters.xdm.m4_59</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM_EBParameters.xdm.m4</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ModeDeclarationGroup.ComMDefineOrder</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1600</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/ComM_EBParameters.xdm.m4_93</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/config/ComM_EBParameters.xdm.m4</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMOptimizePncIndexingForSpeed</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>759</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1601</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4_3413</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4</sourcefile>
      <sourceline>3413</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1602</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4_3505</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4</sourcefile>
      <sourceline>3505</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1603</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4_3601</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4</sourcefile>
      <sourceline>3601</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1604</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4_3698</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4</sourcefile>
      <sourceline>3698</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1605</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4_3792</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4</sourcefile>
      <sourceline>3792</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1606</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4_3889</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4</sourcefile>
      <sourceline>3889</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1607</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4_4981</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4</sourcefile>
      <sourceline>4981</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1608</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4_5073</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_Bswmd.arxml.m4</sourcefile>
      <sourceline>5073</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1609</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_73</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00906</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1610</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_01005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>758</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1611</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_162</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>162</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ModeDeclarationGroup.ComMDefineOrder</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1612</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_208</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>208</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1613</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_265</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>265</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00733</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00847</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1614</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_282</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>282</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1615</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_299</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>299</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.GetCurrentComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1616</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_314</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>314</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.GetCurrentPNCComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1617</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_331</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>331</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.GetMaxComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1618</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_346</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>346</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.GetRequestedComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1619</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_387</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>387</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00904</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>757</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1620</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_401</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>401</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00740</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00741</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00744</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1621</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_467</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>467</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00752</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00743</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00744</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1622</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_510</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>510</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00747</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00742</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00744</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1623</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_633</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>633</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_01005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>758</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1624</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_695</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>695</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ModeDeclarationGroup.ComMDefineOrder</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1625</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_785</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>785</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1626</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_801</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>801</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1627</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_818</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>818</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.GetCurrentComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1628</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_833</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>833</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.GetMaxComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1629</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_848</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>848</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.GetRequestedComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1630</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_885</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>885</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00734</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1631</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_891</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>891</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00904</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>757</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1632</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_893</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>893</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00736</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1633</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1101</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1101</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00906</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1634</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1130</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1130</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_01005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>758</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1635</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1192</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1192</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ModeDeclarationGroup.ComMDefineOrder</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>651</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1636</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1291</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1291</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1637</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1307</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1307</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1638</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1324</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1324</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.GetCurrentComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1639</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1340</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1340</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.GetCurrentPNCComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1640</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1358</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1358</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.GetMaxComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1641</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1373</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1373</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.GetRequestedComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1642</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1416</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1416</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00904</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>757</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1643</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1430</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1430</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00740</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00741</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00744</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1644</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1496</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1496</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00752</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00743</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00744</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1645</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4_1539</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1539</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00747</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00742</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00744</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1646</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_41</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1647</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_53</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1648</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_84</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>84</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00745</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1649</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_291</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>291</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1650</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_316</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>316</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1651</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_339</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>339</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1652</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_359</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>359</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00745</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1653</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_569</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>569</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1654</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_579</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>579</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00745</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1655</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_783</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>783</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1656</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_795</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>795</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1657</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_821</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>821</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1658</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_841</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>841</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1659</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_851</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>851</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1660</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_871</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>871</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1661</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_892</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>892</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1662</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_904</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>904</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1663</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_936</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>936</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1664</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_956</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>956</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1665</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_966</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>966</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1666</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_986</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>986</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1667</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4_1006</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_swcd/swcd/ComM_swc_internal.arxml.m4</sourcefile>
      <sourceline>1006</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00745</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1668</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_var/xgen/ComM.xgen_98</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_var/xgen/ComM.xgen</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>648</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1669</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/ComM.xgen_104</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_var/xgen/ComM.xgen</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>649</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1670</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/ComM.xgen_132</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_var/xgen/ComM.xgen</sourcefile>
      <sourceline>132</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Impl.Relocatable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>633</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1671</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/ComM.xgen_137</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_var/xgen/ComM.xgen</sourcefile>
      <sourceline>137</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1672</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/ComM.xgen_141</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_var/xgen/ComM.xgen</sourcefile>
      <sourceline>141</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Impl.Hash</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>629</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1673</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/ComM.xgen_213</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_var/xgen/ComM.xgen</sourcefile>
      <sourceline>213</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Format.C</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1674</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/ComM.xgen_228</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/src/Autosar/generate_var/xgen/ComM.xgen</sourcefile>
      <sourceline>228</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00795</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00796</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00797</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00798</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1675</internalId></specobject>
  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>doc/public/releasenotes/Limitations.xml_32</id>
      <status>approved</status>
      <source>EB limitations</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/public/releasenotes/Limitations.xml</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00880</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00876</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1676</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>ComM.EB.Dsn.Algorithm.ComM_PNC_RequestComMode</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>2674</sourceline>
      <version>1</version>
      <description>
                    The ComM PNC state machine shall implement a static
                    function
                    &lt;function moreinfo="none"&gt;void ComM_PNC_RequestComMode(const uint8 pncIdx, ComM_ModeType Mode)
                    &lt;/function&gt;.
                </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_697</srcid><srcstatus/><internalId>1431</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00993</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1677</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Algorithm.ComM_PNC_RequestComMode_Mode</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>2695</sourceline>
      <version>1</version>
      <description>
                    The function
                    &lt;function moreinfo="none"&gt;void ComM_PNC_RequestComMode(const uint8 pncIdx, ComM_ModeType Mode)
                    &lt;/function&gt; shall set the mode requested by the PNC
                    &lt;parameter moreinfo="none"&gt;pncIdx&lt;/parameter&gt; to &lt;parameter moreinfo="none"&gt;Mode&lt;/parameter&gt; and updated the
                    requested mode of
                    all ComM channels associated with the PNC.
                </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_709</srcid><srcstatus/><internalId>1432</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_810</srcid><srcstatus/><internalId>1436</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00993</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1678</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Algorithm.ComM_PNC_RequestComMode_Event</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>2718</sourceline>
      <version>1</version>
      <description>
                    The function
                    &lt;function moreinfo="none"&gt;void ComM_PNC_RequestComMode(const uint8 pncIdx, ComM_ModeType Mode)
                    &lt;/function&gt; shall emit the event &lt;literal moreinfo="none"&gt;REQ_STATUS_CHANGED&lt;/literal&gt; to all
                    ComM channels associated with the PNC
                    &lt;parameter moreinfo="none"&gt;pncIdx&lt;/parameter&gt;.
                </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_806</srcid><srcstatus/><internalId>1435</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00993</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1679</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Algorithm.PncRequestChannel</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>2740</sourceline>
      <version>1</version>
      <description>
                    The ComM PNC state machine shall call
                    &lt;function moreinfo="none"&gt;ComM_PNC_RequestComMode(pncIdx, COMM_FULL_COMMUNICATION)&lt;/function&gt;
                    on entering state PNC_REQUESTED to request the ComM
                    channels associated
                    with the PNC.
                </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_370</srcid><srcstatus/><internalId>1396</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00993</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1680</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeNOCOM</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>2830</sourceline>
      <version>1</version>
      <description>
                    On entering state COMM_NO_COMMUNICATION and the channel's
                    &lt;parameter moreinfo="none"&gt;ComMBusType&lt;/parameter&gt; is not COMM_BUS_TYPE_INTERNAL,
                    the ComM channel state machine shall
                    request COMM_NO_COMMUNICATION from the according &amp;lt;Bus&amp;gt; State Manager
                    module by calling
                    &lt;function moreinfo="none"&gt;&amp;lt;Bus&amp;gt;_RequestComMode()&lt;/function&gt;.
                </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30004</srcid><srcstatus/><internalId>1890</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1681</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>2853</sourceline>
      <version>1</version>
      <description>
                    On entering state COMM_FULL_COMMUNICATION and the channel's
                    &lt;parameter moreinfo="none"&gt;ComMBusType&lt;/parameter&gt; is not COMM_BUS_TYPE_INTERNAL,
                    the ComM channel state machine shall
                    request COMM_FULL_COMMUNICATION from the according &amp;lt;Bus&amp;gt; State Manager
                    module by calling
                    &lt;function moreinfo="none"&gt;&amp;lt;Bus&amp;gt;_RequestComMode()&lt;/function&gt; 
                    in case COMM_FULL_COMMUNICATION was requested for the channel.
                </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30004</srcid><srcstatus/><internalId>1890</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30025</srcid><srcstatus/><internalId>2054</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION.WithRequest.COMM_FULL_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1682</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>2878</sourceline>
      <version>1</version>
      <description>
                    On entering state COMM_FULL_COMMUNICATION and the channel's
                    &lt;parameter moreinfo="none"&gt;ComMBusType&lt;/parameter&gt; is not COMM_BUS_TYPE_INTERNAL,
                    the ComM channel state machine shall
                    request COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST from the according &amp;lt;Bus&amp;gt; State Manager
                    module by calling
                    &lt;function moreinfo="none"&gt;&amp;lt;Bus&amp;gt;_RequestComMode()&lt;/function&gt; 
                    in case mode COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST was requuested and 
                    ComMWakeupSleepRequestEnabled of the ComM channel is set to TRUE.
                </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_12</srcid><srcstatus/><internalId>2345</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_13</srcid><srcstatus/><internalId>2346</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ConTest_WakeupOnDataLine_MulticorePerChannel_01</srcid><srcstatus/><internalId>2355</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ConTest_WakeupOnDataLine_MulticorePerChannel_02</srcid><srcstatus/><internalId>2356</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1683</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_2</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>2904</sourceline>
      <version>1</version>
      <description>
                    On entering state COMM_FULL_COMMUNICATION and the channel's
                    &lt;parameter moreinfo="none"&gt;ComMBusType&lt;/parameter&gt; is not COMM_BUS_TYPE_INTERNAL,
                    the ComM channel state machine shall
                    request COMM_FULL_COMMUNICATION from the according &amp;lt;Bus&amp;gt; State Manager
                    module by calling
                    &lt;function moreinfo="none"&gt;&amp;lt;Bus&amp;gt;_RequestComMode()&lt;/function&gt; 
                    in case mode COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST was requuested and 
                    ComMWakeupSleepRequestEnabled of the ComM channel is set to FALSE.
                </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_14</srcid><srcstatus/><internalId>2347</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_15</srcid><srcstatus/><internalId>2348</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1684</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeSILENTCOM</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>2930</sourceline>
      <version>1</version>
      <description>
                    On entering state COMM_SILENT_COMMUNICATION and the channel's
                    &lt;parameter moreinfo="none"&gt;ComMBusType&lt;/parameter&gt; is not COMM_BUS_TYPE_INTERNAL,
                    the ComM channel state machine shall
                    request COMM_SILENT_COMMUNICATION from the according &amp;lt;Bus&amp;gt; State Manager
                    module by calling
                    &lt;function moreinfo="none"&gt;&amp;lt;Bus&amp;gt;_RequestComMode()&lt;/function&gt;.
                </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30032</srcid><srcstatus/><internalId>2057</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1685</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Algorithm.BusSMModeIndication</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>2953</sourceline>
      <version>1</version>
      <description>
                    Whenever the &amp;lt;Bus&amp;gt; State Manager
                    module indicates a mode to the ComM channel state machine via
                    &lt;function moreinfo="none"&gt;ComM_BusSM_ModeIndication()&lt;/function&gt;,
                    the ComM shall store the mode indicated for this channel.
                </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2950</srcid><srcstatus/><internalId>1099</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00675</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1686</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Algorithm.ModePropagation</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>2974</sourceline>
      <version>1</version>
      <description>
                    Whenever the event BUSSM_MODE_IND occurs, the ComM channel state machine
                    shall report the stored communication mode to the users by calling
                    &lt;function moreinfo="none"&gt;BswM_ComM_CurrentMode()&lt;/function&gt; and if applicable
                    &lt;function moreinfo="none"&gt;Rte_Ports_UserMode_P()[n].Switch_currentMode()&lt;/function&gt;.
                </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_534</srcid><srcstatus/><internalId>1218</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00675</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1687</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Algorithm.FullComModeInternalBus</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>2995</sourceline>
      <version>1</version>
      <description>
                    On entering state COMM_FULL_COMMUNICATION and the channel's
                    &lt;parameter moreinfo="none"&gt;ComMBusType&lt;/parameter&gt; is COMM_BUS_TYPE_INTERNAL,
                    the ComM channel state machine shall
                    indicate COMM_FULL_COMMUNICATION to the users by calling
                    &lt;function moreinfo="none"&gt;BswM_ComM_CurrentMode()&lt;/function&gt; and if applicable
                    &lt;function moreinfo="none"&gt;Rte_Ports_UserMode_P()[n].Switch_currentMode()&lt;/function&gt;.
                </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ModeIndInternalBus</srcid><srcstatus/><internalId>2368</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00976</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1688</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Algorithm.NoComModeInternalBus</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>3018</sourceline>
      <version>1</version>
      <description>
                    On entering state COMM_NO_COMMUNICATION from state COMM_FULL_COMMUNICATION
                    and the channel's
                    &lt;parameter moreinfo="none"&gt;ComMBusType&lt;/parameter&gt; is COMM_BUS_TYPE_INTERNAL,
                    the ComM channel state machine shall
                    indicate COMM_NO_COMMUNICATION to the users by calling
                    &lt;function moreinfo="none"&gt;BswM_ComM_CurrentMode()&lt;/function&gt; and if applicable
                    &lt;function moreinfo="none"&gt;Rte_Ports_UserMode_P()[n].Switch_currentMode()&lt;/function&gt;.
                </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ModeIndInternalBus</srcid><srcstatus/><internalId>2368</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00976</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1689</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComM_RequestComMode_REQ_STATUS_CHANGED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>3811</sourceline>
      <version>1</version>
      <description>
                The API function &lt;function moreinfo="none"&gt;ComM_RequestComMode()&lt;/function&gt; shall emit the event
                REQ_STATUS_CHANGED for all channels directly associated with the calling user and
                for which mode inhibition is currently not active.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1293</srcid><srcstatus/><internalId>1019</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1690</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComM_DCM_ActiveDiagnostic_REQ_STATUS_CHANGED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>3832</sourceline>
      <version>1</version>
      <description>
                The API function &lt;function moreinfo="none"&gt;ComM_DCM_ActiveDiagnostic()&lt;/function&gt; shall emit the
                event REQ_STATUS_CHANGED to the given channel's state machine.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2690</srcid><srcstatus/><internalId>1088</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1691</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComM_DCM_InactiveDiagnostic_REQ_STATUS_CHANGED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>3852</sourceline>
      <version>1</version>
      <description>
                The API function &lt;function moreinfo="none"&gt;ComM_DCM_InactiveDiagnostic()&lt;/function&gt; shall emit the
                event REQ_STATUS_CHANGED to the given channel's state machine.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2752</srcid><srcstatus/><internalId>1090</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1692</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComM_LimitChannelToNoCom_REQ_STATUS_CHANGED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>3872</sourceline>
      <version>1</version>
      <description>
                If the API function &lt;function moreinfo="none"&gt;ComM_LimitChannelToNoCom()&lt;/function&gt; is called with
                &lt;parameter moreinfo="none"&gt;Status = FALSE&lt;/parameter&gt;, it shall emit the
                event REQ_STATUS_CHANGED to the given channel's state machine.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1945</srcid><srcstatus/><internalId>1050</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3147</srcid><srcstatus/><internalId>1111</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1693</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComM_ComM_PreventWakeUp_REQ_STATUS_CHANGED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>3893</sourceline>
      <version>1</version>
      <description>
                If the API function &lt;function moreinfo="none"&gt;ComM_PreventWakeUp()&lt;/function&gt; is called with
                &lt;parameter moreinfo="none"&gt;Status = FALSE&lt;/parameter&gt;, it shall emit the
                event REQ_STATUS_CHANGED to the given channel's state machine.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1845</srcid><srcstatus/><internalId>1044</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3286</srcid><srcstatus/><internalId>1123</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1694</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComM_LimitECUToNoCom_REQ_STATUS_CHANGED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>3914</sourceline>
      <version>1</version>
      <description>
                If the API function &lt;function moreinfo="none"&gt;ComM_LimitECUToNoCom()&lt;/function&gt; is called with
                &lt;parameter moreinfo="none"&gt;Status = FALSE&lt;/parameter&gt;, it shall emit the
                event REQ_STATUS_CHANGED to all &lt;package&gt;ComM&lt;/package&gt; channel state machines.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2012</srcid><srcstatus/><internalId>1053</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3148</srcid><srcstatus/><internalId>1112</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1695</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.FULL_COM_NETWORK_REQUESTED_ENTRY_REQ_STATUS_CHANGED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>3935</sourceline>
      <version>1</version>
      <description>
                On entering state FULL_COM_NETWORK_REQUESTED_ENTRY and if the channel is of
                &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; &lt;literal moreinfo="none"&gt;FULL&lt;/literal&gt; or
                &lt;literal moreinfo="none"&gt;PASSIVE&lt;/literal&gt;,the channel state machine shall emit the event
                REQ_STATUS_CHANGED to itself,  to trigger a switch to state FULL_COM_READY_SLEEP or
                FULL_COM_NETWORK_REQUESTED_PENDING.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1025</srcid><srcstatus/><internalId>1269</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1027</srcid><srcstatus/><internalId>1270</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00888</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1696</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComM_Nm_NetworkMode_NM_MODE_SWITCHED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>3962</sourceline>
      <version>1</version>
      <description>
                The API function &lt;function moreinfo="none"&gt;ComM_Nm_NetworkMode()&lt;/function&gt; shall emit the
                event NM_MODE_SWITCHED to the given channel's state machine.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2309</srcid><srcstatus/><internalId>1064</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00296</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1697</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComM_Nm_PrepareBusSleepMode_NM_MODE_SWITCHED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>3986</sourceline>
      <version>1</version>
      <description>
                The API function &lt;function moreinfo="none"&gt;ComM_Nm_PrepareBusSleepMode()&lt;/function&gt; shall emit the
                event NM_MODE_SWITCHED to the given channel's state machine.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2352</srcid><srcstatus/><internalId>1067</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1698</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComM_Nm_BusSleepMode_NM_MODE_SWITCHED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4006</sourceline>
      <version>1</version>
      <description>
                The API function &lt;function moreinfo="none"&gt;ComM_Nm_BusSleepMode()&lt;/function&gt; shall emit the
                event NM_MODE_SWITCHED to the given channel's state machine.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2396</srcid><srcstatus/><internalId>1070</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1699</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComM_Nm_NetworkStartIndication_PASSIVE_WAKEUP_IND</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4026</sourceline>
      <version>1</version>
      <description>
                The API function &lt;function moreinfo="none"&gt;ComM_Nm_NetworkStartIndication()&lt;/function&gt; shall emit
                the event PASSIVE_WAKEUP_IND to the given channel's state machine.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2264</srcid><srcstatus/><internalId>1060</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1700</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComM_Nm_RestartIndication_PASSIVE_WAKEUP_IND</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4046</sourceline>
      <version>1</version>
      <description>
                The API function &lt;function moreinfo="none"&gt;ComM_Nm_RestartIndication()&lt;/function&gt; shall emit the
                event PASSIVE_WAKEUP_IND to the given channel's state machine.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2449</srcid><srcstatus/><internalId>1072</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1701</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComM_EcuM_WakeUpIndication_PASSIVE_WAKEUP_IND</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4066</sourceline>
      <version>1</version>
      <description>
                The API function &lt;function moreinfo="none"&gt;ComM_EcuM_WakeUpIndication()&lt;/function&gt; shall emit the
                event PASSIVE_WAKEUP_IND to the given channel's state machine.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4469</srcid><srcstatus/><internalId>1187</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1702</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComM_EcuM_WakeUpIndication_syncWU_PASSIVE_WAKEUP_IND</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4086</sourceline>
      <version>1</version>
      <description>
                If &lt;parameter moreinfo="none"&gt;ComMSynchronousWakeUp&lt;/parameter&gt; is enabled, the API function
                &lt;function moreinfo="none"&gt;ComM_EcuM_WakeUpIndication()&lt;/function&gt; shall emit the
                event PASSIVE_WAKEUP_IND to all &lt;package&gt;ComM&lt;/package&gt; channel state machines.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4366</srcid><srcstatus/><internalId>1180</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00694</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1703</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.BUSSM_MODE_IND</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4111</sourceline>
      <version>1</version>
      <description>
                The API function &lt;function moreinfo="none"&gt;ComM_BusSM_ModeIndication()&lt;/function&gt; shall emit the
                event BUSSM_MODE_IND to the given channel's state machine.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2954</srcid><srcstatus/><internalId>1100</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00675</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1704</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.BUS_SM_SLEEP_INDICATION</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4131</sourceline>
      <version>1</version>
      <description>
                The API function &lt;function moreinfo="none"&gt;ComM_BusSM_BusSleepMode()&lt;/function&gt; shall emit the
                event BUS_SM_SLEEP_INDICATION to the given channel's state machine.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2610</srcid><srcstatus/><internalId>1078</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_91000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1705</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComM_LimitECUToNoComMode_LIMIT_TO_NO_COM</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4151</sourceline>
      <version>1</version>
      <description>
                If the API function &lt;function moreinfo="none"&gt;ComM_LimitECUToNoComMode()&lt;/function&gt; is called with
                &lt;parameter moreinfo="none"&gt;Status = TRUE&lt;/parameter&gt;, it shall emit the
                event LIMIT_TO_NO_COM to all &lt;package&gt;ComM&lt;/package&gt; channel state machines.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2002</srcid><srcstatus/><internalId>1052</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1706</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComM_LimitChannelToNoComMode_LIMIT_TO_NO_COM</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4172</sourceline>
      <version>1</version>
      <description>
                If the API function &lt;function moreinfo="none"&gt;ComM_LimitChannelToNoComMode()&lt;/function&gt; is called
                with &lt;parameter moreinfo="none"&gt;Status = TRUE&lt;/parameter&gt;, it shall emit the
                event LIMIT_TO_NO_COM to the given channel's state machine.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1919</srcid><srcstatus/><internalId>1048</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1707</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComM_CommunicationAllowed_COMALLOWED_CHANGED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4193</sourceline>
      <version>1</version>
      <description>
                The API function &lt;function moreinfo="none"&gt;ComM_CommunicationAllowed()&lt;/function&gt; shall emit the
                event COMALLOWED_CHANGED to the given channel's state machine.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2903</srcid><srcstatus/><internalId>1097</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1708</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.NO_COM_REQUEST_PENDING_COMALLOWED_CHANGED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4213</sourceline>
      <version>1</version>
      <description>
                On entering state NO_COM_REQUEST_PENDING the &lt;package&gt;ComM&lt;/package&gt; channel
                state machine shall emit the
                event COMALLOWED_CHANGED to itself to trigger a transition to state
                FULL_COMMUNICATION.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1526</srcid><srcstatus/><internalId>1338</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00895</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1709</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.PNC_NM_REQUEST</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4239</sourceline>
      <version>1</version>
      <description>
                When a PNC state machine enters state PNC_REQUESTED, it shall emit the event
                PNC_NM_REQUEST to each channel state machine, whose channel is
                associated with this PNC and which has the parameter
                &lt;parameter moreinfo="none"&gt;ComMPncNmRequest&lt;/parameter&gt; set to TRUE.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_428</srcid><srcstatus/><internalId>1405</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00980</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1710</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComMTMinFullComModeDuration_TIMEOUT</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4261</sourceline>
      <version>1</version>
      <description>
                When the timer for &lt;parameter moreinfo="none"&gt;ComMTMinFullComModeDuration&lt;/parameter&gt; for a channel
                expires, the
                event TIMEOUT shall be emitted to the according channel state machine.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1007</srcid><srcstatus/><internalId>1268</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1769</srcid><srcstatus/><internalId>1364</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00889.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00889.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1711</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComMNmLightTimeout_TIMEOUT</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4290</sourceline>
      <version>1</version>
      <description>
                When the timer for &lt;parameter moreinfo="none"&gt;ComMNmLightTimeout&lt;/parameter&gt; for a channel
                expires, the
                event TIMEOUT shall be emitted to the according channel state machine.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1220</srcid><srcstatus/><internalId>1297</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1770</srcid><srcstatus/><internalId>1365</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00610</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1712</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_TIMEOUT</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4315</sourceline>
      <version>2</version>
      <description>
                On entering state FULL_COM_READY_SLEEP and if the channel is of
                &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; &lt;literal moreinfo="none"&gt;NONE&lt;/literal&gt;, and parameter
                &lt;parameter moreinfo="none"&gt;ComMReleaseNoneChannels&lt;/parameter&gt; is set to false the channel
                state machine shall emit the event TIMEOUT to itself to trigger an immediate
                transition to state NO_COMMUNICATION.
            </description>
      <comment>
                ComM.SWS_ComM_00671 defines an immediate transition for channels with bus type
                COMM_BUS_TYPE_INTERNAL.
                ComM568_Conf specifies, that channels of bus type COMM_BUS_TYPE_INTERNAL shall have
                ComMNmVariant NONE.
                The behavior for channels with ComMNmVariant NONE and a bus type other than
                COMM_BUS_TYPE_INTERNAL is not specified by the AUTOSAR SWS.
                As there is no other possibility provided to switch from state
                COMM_FULL_COMMUNICATION to state COMM_NO_COMMUNICATION for channels with
                ComMNmVariant NONE
                (it does neither adhere to the timer for ComMNmLightTimeout, like channels of
                ComMNmVariant LIGHT do,
                nor can be triggered by mode switch from a network, because only channels of
                ComMNmVariant FULL or PASSIVE have an associated network channel),
                an immediate transition must be the intended behavior if parameter
                ComMReleaseNoneChannels is set to false.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1254</srcid><srcstatus/><internalId>1303</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_LIN_NONE_CH</srcid><srcstatus/><internalId>2068</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00671</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComMReleaseNoneChannels</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>679</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1713</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_TIMEOUT_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4364</sourceline>
      <version>1</version>
      <description>
              If configuration parameter &lt;parameter moreinfo="none"&gt;ComMReleaseNoneChannels&lt;/parameter&gt;
              is set to true and
              ComMBusType is diffrent from &lt;literal moreinfo="none"&gt;COMM_BUS_TYPE_INTERNAL&lt;/literal&gt; and
              ComMNmVariant is set to &lt;literal moreinfo="none"&gt;NONE&lt;/literal&gt; and Ready Sleep State is
              entered, the state machine shall not switch to No Communication in this case
              the event TIMEOUT is not emitted which would trigger a state transition to
              No Communication.
              In this case the state machine remains in Full Communication and can never
              switch back to No Communication.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1261</srcid><srcstatus/><internalId>1306</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComMReleaseNoneChannels_True_1</srcid><srcstatus/><internalId>1991</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMReleaseNoneChannels_BusTypeDifferentThan_COMM_BUS_TYPE_INTERNAL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>680</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1714</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_TIMEOUT_2</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4392</sourceline>
      <version>1</version>
      <description>
              If configuration parameter &lt;parameter moreinfo="none"&gt;ComMReleaseNoneChannels&lt;/parameter&gt;
              is set to true and ComMBusType is equals to
              &lt;literal moreinfo="none"&gt;COMM_BUS_TYPE_INTERNAL&lt;/literal&gt; and Ready Sleep State is entered,
              the Ready Sleep State shall be left immediately and No Communication shall
              be entered.
              This is done by emitting event TIMEOUT on entry of Ready Sleep State.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1268</srcid><srcstatus/><internalId>1308</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComMReleaseNoneChannels_True_2</srcid><srcstatus/><internalId>1992</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMReleaseNoneChannels_BusTypeIs_COMM_BUS_TYPE_INTERNAL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>681</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1715</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.PREPARE_SLEEP_TIMEOUT</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4417</sourceline>
      <version>1</version>
      <description>
                When the timer for &lt;parameter moreinfo="none"&gt;ComMPncPrepareSleepTimer&lt;/parameter&gt; for a PNC
                expires, the &lt;package&gt;ComM&lt;/package&gt; shall emit the
                event PREPARE_SLEEP_TIMEOUT to the according PNC.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_980</srcid><srcstatus/><internalId>1445</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00988</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00947</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1716</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ComM_RequestComMode_NO_COM_REQ_BY_ALL_COMM_USER</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4442</sourceline>
      <version>1</version>
      <description>
                If a user associated with a PNC calls the API
                &lt;function moreinfo="none"&gt;ComM_RequestComMode()&lt;/function&gt; with
                &lt;parameter moreinfo="none"&gt;ComMode = COMM_NO_COMMUNICATION&lt;/parameter&gt; and no other user is
                currently requesting the PNC or if the PNC Gateway functionality is set to TRUE
                the ERAn bit representing this PNC has to be zero,
                the API shall emit the event
                NO_COM_REQ_BY_ALL_COMM_USER to these PNCs.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/ComM_MainFunction.c_509</srcid><srcstatus/><internalId>884</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_1126</srcid><srcstatus/><internalId>1012</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3057</srcid><srcstatus/><internalId>1104</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4304</srcid><srcstatus/><internalId>1178</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00988</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayType.NotSet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>596</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1717</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ModeLimitation_NO_COM_REQ_BY_ALL_COMM_USER</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4475</sourceline>
      <version>1</version>
      <description>
                The &lt;package&gt;ComM&lt;/package&gt; channel state machine shall emit the event
                NO_COM_REQ_BY_ALL_COMM_USER to the state machines of all PNCs associated with the
                channel, if all channels of the corresponding PNC have entered
                COMM_NO_COMMUNICATION mode due to an active mode limitation.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3058</srcid><srcstatus/><internalId>1105</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4327</srcid><srcstatus/><internalId>1179</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00988</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00582</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1718</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.COMCBK</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4501</sourceline>
      <version>1</version>
      <description>
                The &lt;package&gt;ComM&lt;/package&gt; channel state machine shall emit the event COMCBK to
                the state machines of all PNCs associated with the channel, if the bit corresponding
                to the corresponding PNC in the EIRA has changed.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3569</srcid><srcstatus/><internalId>1127</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00988</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00940</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00933</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1719</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ECUM_WAKEUP_IND</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4530</sourceline>
      <version>1</version>
      <description>
                If &lt;parameter moreinfo="none"&gt;ComMSynchronousWakeUp&lt;/parameter&gt; is enabled for the
                &lt;package&gt;ComM&lt;/package&gt;, the API &lt;function moreinfo="none"&gt;ComM_EcuM_WakeUpIndication()&lt;/function&gt;
                shall emit the event ECUM_WAKEUP_IND to all PNC state machines.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4447</srcid><srcstatus/><internalId>1186</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00988</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00931</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1720</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4555</sourceline>
      <version>1</version>
      <description>
                If a user associated with one or more PNCs calls the API
                &lt;function moreinfo="none"&gt;ComM_RequestComMode()&lt;/function&gt; with
                &lt;parameter moreinfo="none"&gt;ComMode = COMM_FULL_COMMUNICATION&lt;/parameter&gt; the API shall emit the event
                FULL_COM_REQ_BY_COMM_USER to these PNCs.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3050</srcid><srcstatus/><internalId>1102</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00988</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00932</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00948</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1721</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_MODE_PASSIVE_STARTUP</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4585</sourceline>
      <version>1</version>
      <description>
                In state FULL_COM_NETWORK_REQUESTED and Mode limitation is enabled by
                configuration (ComMModeLimitationEnabled = TRUE) and
                &lt;function moreinfo="none"&gt;ComM_LimitChannelToNoComMode()&lt;/function&gt; is called with parameter
                &lt;parameter moreinfo="none"&gt;Status = TRUE&lt;/parameter&gt; and the state machine goes to
                COMM_NO_COMMUNICATION and passive wakeup is triggered,
                the state machine goes to COMM_FULL_COM_READY_SLEEP.
            </description>
      <comment>
                Make sure that user requested is not cleared.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_781</srcid><srcstatus/><internalId>1238</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_LimitToNoCom20</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1722</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_ENTRY_REQ_STATUS_CHANGED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4607</sourceline>
      <version>1</version>
      <description>
                A user request or a Dcm active diagnostic request causes a transition from
                FULL_COM_READY_SLEEP to FULL_COM_NETWORK_REQUESTED and Nm_NetworkRequest is also
                called and the BusNm indicates Prepare Bus-Sleep Mode. Notification causes a
                transition to SILENT_COMMUNICATION and if the BusNm indicates Network Mode and
                Full Communication is requested the ComM enters the FULL_COM_NETWORK_REQUESTED.
                See (ASCCOMM-1147).
            </description>
      <comment>
                On entering state FULL_COM_READY_SLEEP_ENTRY and if channel is of
                &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; &lt;literal moreinfo="none"&gt;FULL&lt;/literal&gt; or
                &lt;literal moreinfo="none"&gt;PASSIVE&lt;/literal&gt;,the channel state machine shall emit the event
                REQ_STATUS_CHANGED.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1241</srcid><srcstatus/><internalId>1300</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1246</srcid><srcstatus/><internalId>1301</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PrepareBussSleepWithNetworkRequest</srcid><srcstatus/><internalId>2094</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00877</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1723</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.NO_COMMUNICATION_ENTRY_REQ_STATUS_CHANGED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4638</sourceline>
      <version>1</version>
      <description>
                A user request or a Dcm active diagnostic request causes a transition
                from FULL_COM_READY_SLEEP to FULL_COM_NETWORK_REQUESTED and
                if BusNm indicates &lt;function moreinfo="none"&gt;ComM_Nm_BusSleepMode()&lt;/function&gt;
                transition to state NO_COMMUNICATION is done.
                In case channel is requested transition to FULL_COM_NETWORK_REQUESTED
                is done.
            </description>
      <comment>
                On entering state NO_COMMUNICATION and if channel is of
                &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; &lt;literal moreinfo="none"&gt;FULL&lt;/literal&gt; or
                &lt;literal moreinfo="none"&gt;PASSIVE&lt;/literal&gt;,the channel state machine shall emit
                the event REQ_STATUS_CHANGED.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1421</srcid><srcstatus/><internalId>1323</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_BussSleepWithNetworkRequest</srcid><srcstatus/><internalId>2095</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00637</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1724</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_NO_PENDING_REQUEST_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4670</sourceline>
      <version>1</version>
      <description>
                In state NO_COM_NO_PENDING_REQUEST and user calls
                &lt;function moreinfo="none"&gt;ComM_RequestComMode()&lt;/function&gt; with
                &lt;parameter moreinfo="none"&gt;ComMode = COMM_FULL_COMMUNICATION&lt;/parameter&gt;,
                and limit channel to no communication is not active and wakeup
                inhibition in not active the state machine goes to state NO_COM_REQUEST_PENDING.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1494</srcid><srcstatus/><internalId>1328</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComAllowed</srcid><srcstatus/><internalId>1945</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00875</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1725</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_DCM_NO_COM_NO_PENDING_REQUEST_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4694</sourceline>
      <version>1</version>
      <description>
                In state NO_COM_NO_PENDING_REQUEST and DCM calls
                &lt;function moreinfo="none"&gt;ComM_DCM_ActiveDiagnostic()&lt;/function&gt;
                the state machine goes to state NO_COM_REQUEST_PENDING.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1495</srcid><srcstatus/><internalId>1329</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NoComToFullCom_ActiveDiag</srcid><srcstatus/><internalId>1895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00876.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00876.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00876.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00866.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00866.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00866.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1726</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4736</sourceline>
      <version>1</version>
      <description>
                In state NO_COM_NO_PENDING_REQUEST and function
                &lt;function moreinfo="none"&gt;ComM_Nm_NetworkStartIndication()&lt;/function&gt; is called
                the state machine swithces to state NO_COM_REQUEST_PENDING.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1521</srcid><srcstatus/><internalId>1334</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_NetworkStartIndicationTransition</srcid><srcstatus/><internalId>1948</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_PASSIVE_WAKEUP_IND_NoComNoPendingReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>637</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1727</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4758</sourceline>
      <version>1</version>
      <description>
                In state NO_COM_NO_PENDING_REQUEST and function
                &lt;function moreinfo="none"&gt;ComM_Nm_RestartIndication()&lt;/function&gt; is called
                the state machine swithces to state NO_COM_REQUEST_PENDING.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1522</srcid><srcstatus/><internalId>1335</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComMNmCbkInd_forPassiveCh</srcid><srcstatus/><internalId>1899</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00894</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1728</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_2</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4780</sourceline>
      <version>1</version>
      <description>
                In state NO_COM_NO_PENDING_REQUEST and function
                &lt;function moreinfo="none"&gt;ComM_EcuM_WakeUpIndication()&lt;/function&gt; is called
                the state machine swithces to state NO_COM_REQUEST_PENDING.
            </description>
      <comment>
                Wake up of one channel shall lead to a wake up of all channels if
                ComMSynchronousWakeUp is TRUE.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1523</srcid><srcstatus/><internalId>1336</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SwitchingBacktoDefaultState</srcid><srcstatus/><internalId>1939</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SYNC_WAKEUP</srcid><srcstatus/><internalId>2006</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00893.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00893.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1729</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_3</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4811</sourceline>
      <version>1</version>
      <description>
                In state NO_COM_NO_PENDING_REQUEST and function
                &lt;function moreinfo="none"&gt;ComM_EcuM_PNCWakeUpIndication()&lt;/function&gt; is called
                the state machine swithces to state NO_COM_REQUEST_PENDING.
            </description>
      <comment>
                Wake up of one channel shall lead to a wake up of all channels if
                ComMSynchronousWakeUp is TRUE.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1524</srcid><srcstatus/><internalId>1337</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_VLAN_1</srcid><srcstatus/><internalId>2330</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1730</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4838</sourceline>
      <version>1</version>
      <description>
                In state NO_COM_PENDING_REQUEST and no longer any valid pending request for
                &lt;parameter moreinfo="none"&gt;COMM_FULL_COMMUNICATION&lt;/parameter&gt; from users and DCM is not
                requesting the channel and no passive startup request is active
                the state machine shall switch to state NO_COM_NO_PENDING_REQUEST.
            </description>
      <comment>
                The reason for being in NO_COM_PENDING_REQUEST is a request of the user of
                &lt;parameter moreinfo="none"&gt;COMM_FULL_COMMUNICATION&lt;/parameter&gt; or DCM was requesting
                Full Communication.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1602</srcid><srcstatus/><internalId>1348</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SwitchingBacktoDefaultState</srcid><srcstatus/><internalId>1939</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_IsRequested0</srcid><srcstatus/><internalId>2033</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_IsRequested1</srcid><srcstatus/><internalId>2034</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_IsRequested2</srcid><srcstatus/><internalId>2035</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_IsRequested3</srcid><srcstatus/><internalId>2036</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_IsRequested4</srcid><srcstatus/><internalId>2037</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_IsRequested5</srcid><srcstatus/><internalId>2038</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_IsRequested6</srcid><srcstatus/><internalId>2039</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_IsRequested7</srcid><srcstatus/><internalId>2040</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_IsRequested8</srcid><srcstatus/><internalId>2086</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_IsRequested9</srcid><srcstatus/><internalId>2087</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_IsRequested10</srcid><srcstatus/><internalId>2088</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_IsRequested11</srcid><srcstatus/><internalId>2089</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00897</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations><ruleid>WRN.swuts.needscoverage.count</ruleid></oreqmViolations><covstatus>covered</covstatus><internalId>1731</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_DCM_NO_COM_PENDING_REQUEST_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4866</sourceline>
      <version>1</version>
      <description>
                In state NO_COM_PENDING_REQUEST and DCM calls
                &lt;function moreinfo="none"&gt;ComM_DCM_InactiveDiagnostic()&lt;/function&gt;
                and user is not requesting the channel anymore and there is no passive wakeup indication
                the state machine shall switch to state NO_COM_NO_PENDING_REQUEST.
            </description>
      <comment>
                The reason for being in NO_COM_PENDING_REQUEST is a request of the user of
                &lt;parameter moreinfo="none"&gt;COMM_FULL_COMMUNICATION&lt;/parameter&gt; or DCM was requesting Full
                Communication.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1603</srcid><srcstatus/><internalId>1349</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SwitchingBacktoDefaultState</srcid><srcstatus/><internalId>1939</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00874</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00897</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1732</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.COMALLOWED_CHANGE_NO_COM_PENDING_REQUEST</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4898</sourceline>
      <version>1</version>
      <description>
                In state NO_COM_PENDING_REQUEST and user calls
                &lt;function moreinfo="none"&gt;ComM_CommunicationAllowed()&lt;/function&gt; with
                &lt;parameter moreinfo="none"&gt;Allowed = TRUE&lt;/parameter&gt; the state machine
                switch to state FULL_COMMUNICATION.
            </description>
      <comment>
                On this transition the state manager is requested with Full Communication
                (in case state manager exists for the current channel).
                In case of channels with ComMNmVariant PASSIVE or FULL the BusNm is requested
                (with BusNm_NetworkRequest or BusNm_PassiveStartup) and state
                FULL_COM_NETWORK_REQUESTED_PENDING (in case active wakeup)
                or state FULL_COM_READY_SLEEP (in case of a passive startup) is entered.
                In case of channels with ComMNmVariant NONE or LIGHT a ComM timer
                is started with ComMTMinFullComModeDuration and state machine goes to state
                FULL_COM_NETWORK_REQUESTED_ENTRY.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1538</srcid><srcstatus/><internalId>1340</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SwitchingBacktoDefaultState</srcid><srcstatus/><internalId>1939</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00895</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1733</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_FULL_COM_NETWORK_REQUESTED_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4932</sourceline>
      <version>1</version>
      <description>
                In state FULL_COM_NETWORK_REQUESTED and
                &lt;function moreinfo="none"&gt;ComM_LimitChannelToNoComMode()&lt;/function&gt; is called with parameter
                &lt;parameter moreinfo="none"&gt;Status = TRUE&lt;/parameter&gt;, the state machine shall switch to
                state FULL_COM_READY_SLEEP regardless of user request but only if DCM
                is not requesting the channel.
            </description>
      <comment>
                On this transition in case ComMNmVariant is FULL, the BusNm is released.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_935</srcid><srcstatus/><internalId>1262</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30043</srcid><srcstatus/><internalId>1915</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_LimitToNoCom20</srcid><srcstatus/><internalId>2093</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00890.COMM_FULL_COM_READY_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1734</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_FULL_COM_NETWORK_REQUESTED_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4959</sourceline>
      <version>1</version>
      <description>
                In state FULL_COM_NETWORK_REQUESTED and
                &lt;function moreinfo="none"&gt;ComM_LimitECUToNoComMode()&lt;/function&gt; is called with parameter
                &lt;parameter moreinfo="none"&gt;Status = TRUE&lt;/parameter&gt;, the state machine shall switch
                to state FULL_COM_READY_SLEEP regardless of user request but only
                if DCM is not requesting the channel.
            </description>
      <comment>
                On this transition in case ComMNmVariant is FULL, the BusNm is released.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_936</srcid><srcstatus/><internalId>1263</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ECUModeLimitation_UserReq</srcid><srcstatus/><internalId>1923</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00890.COMM_FULL_COM_READY_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1735</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_FULL_COM_NETWORK_REQUESTED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>4986</sourceline>
      <version>1</version>
      <description>
                In state FULL_COM_NETWORK_REQUESTED and function
                &lt;function moreinfo="none"&gt;ComM_Nm_PrepareBusSleepMode()&lt;/function&gt; is called,
                the state machine shall switch to state SILENT_COMMUNICATION.
            </description>
      <comment>
                While doing the transition the ComM state machine requests
                SILENT_COMMUNICATION from BusSm.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_962</srcid><srcstatus/><internalId>1264</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_FullToSilentTransition</srcid><srcstatus/><internalId>1949</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00900</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1736</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5012</sourceline>
      <version>1</version>
      <description>
                In state FULL_COM_NETWORK_REQUESTED_ENTRY and if the
                &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; for the channel is set to FULL,
                the event REQ_STATUS_CHANGED is emitted.
                In case a user request the channel and mode limitation is not active
                transition to state FULL_COM_NETWORK_REQUESTED_PENDING is done.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1067</srcid><srcstatus/><internalId>1281</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30003</srcid><srcstatus/><internalId>1889</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_FULL_COM_NETWORK_REQUESTED_Transition_UserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1737</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5036</sourceline>
      <version>1</version>
      <description>
                In state FULL_COM_NETWORK_REQUESTED_ENTRY and if the
                &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; for the channel is set to FULL,
                the event REQ_STATUS_CHANGED is emitted.
                In case DCM requests the channel, transition to state
                FULL_COM_NETWORK_REQUESTED_PENDING is done.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1068</srcid><srcstatus/><internalId>1282</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SC_FulSilFul_thruDiag</srcid><srcstatus/><internalId>1908</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_FULL_COM_NETWORK_REQUESTED_Transition_DcmRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>641</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1738</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.TIMEOUT_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5060</sourceline>
      <version>1</version>
      <description>
                In state FULL_COM_NETWORK_REQUESTED_ENTRY and
                &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; is equal NONE, in case DCM or
                a user requests Full Communication, after the expiration of the ComM timer
                (ComMTMinFullComModeDuration), the state machine shall switch to
                FULL_COM_NETWORK_REQUESTED_PENDING.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1148</srcid><srcstatus/><internalId>1291</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_FULL_COM_NETWORK_REQUESTED_TimeoutNone</srcid><srcstatus/><internalId>1950</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00886.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1739</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.TIMEOUT_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5084</sourceline>
      <version>1</version>
      <description>
                In state FULL_COM_NETWORK_REQUESTED_ENTRY and
                &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; is equal LIGHT, in case DCM or
                a user requests Full Communication, after the expiration of the ComM timer
                (ComMTMinFullComModeDuration), the state machine shall switch to
                FULL_COM_NETWORK_REQUESTED_PENDING.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1149</srcid><srcstatus/><internalId>1292</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_FULL_COM_NETWORK_REQUESTED_TimeoutLight</srcid><srcstatus/><internalId>1951</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00886.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1740</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.TIMEOUT_NO_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5108</sourceline>
      <version>1</version>
      <description>
                When state FULL_COM_NETWORK_REQUESTED_ENTRY is entered for channels
                with &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; equal to NONE,
                the ComM timer is started and after the expiration
                and in case DCM and a user does not requests "Full Communication",
                the state machine switches to state FULL_COM_READY_SLEEP.
            </description>
      <comment>
                In case of ComMNmVarint NONE when FULL_COM_READY_SLEEP is entered
                the event EV_TIMEOUT is emitted instantly.
                When EV_TIMEOUT is emitted the state machine goes to state NO_COMMUNICATION.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1134</srcid><srcstatus/><internalId>1289</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_NETWORK_REQUESTED_TO_READY_SLEEP_Timeout</srcid><srcstatus/><internalId>1953</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00889.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1741</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.TIMEOUT_NO_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5137</sourceline>
      <version>1</version>
      <description>
                When state FULL_COM_NETWORK_REQUESTED_ENTRY is entered for channels
                with &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; equal to LIGHT,
                the ComM timer is started and after the expiration
                and in case DCM and a user does not requests "Full Communication",
                the state machine switches to state FULL_COM_READY_SLEEP.
            </description>
      <comment>
                On entry of FULL_COM_READY_SLEEP and in case of &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt;
                is LIGHT the ComM timer is started with value ComMNmLightTimeout
                after timer expires event EV_TIMEOUT is emitted.
                When EV_TIMEOUT is emitted the state machine goes to state NO_COMMUNICATION.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1135</srcid><srcstatus/><internalId>1290</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30019</srcid><srcstatus/><internalId>1898</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00889.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1742</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5167</sourceline>
      <version>1</version>
      <description>
                In case the &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; for the channel is set to FULL,
                when entering state FULL_COM_NETWORK_REQUESTED_ENTRY the event
                REQ_STATUS_CHANGED is emitted.
                In case user or DCM does not requests the channel anymore transition to
                state FULL_COM_READY_SLEEP is done.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1098</srcid><srcstatus/><internalId>1283</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_FullCommunicationTransition</srcid><srcstatus/><internalId>1952</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00888</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1743</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5191</sourceline>
      <version>1</version>
      <description>
                In case the &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; for the channel is set to PASSIVE,
                when entering state FULL_COM_NETWORK_REQUESTED_ENTRY the event
                REQ_STATUS_CHANGED is emitted.
                Transition to state FULL_COM_READY_SLEEP is done.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1099</srcid><srcstatus/><internalId>1284</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ComMNmCbkInd_forPassiveCh</srcid><srcstatus/><internalId>1899</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00888</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00915.NmVariant.PASSIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1744</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_2</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5218</sourceline>
      <version>1</version>
      <description>
                In case the &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; for the channel is set to SLAVE_ACTIVE,
                when entering state FULL_COM_NETWORK_REQUESTED_ENTRY the event
                REQ_STATUS_CHANGED is emitted.
                In case user or DCM does not requests the channel anymore transition to
                state FULL_COM_READY_SLEEP is done.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1028</srcid><srcstatus/><internalId>1271</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1100</srcid><srcstatus/><internalId>1285</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SLAVE_ACTIVE_TRANSITIONS_1</srcid><srcstatus/><internalId>2183</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1745</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_3</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5242</sourceline>
      <version>1</version>
      <description>
                In case the &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; for the channel is set to SLAVE_PASSIVE,
                when entering state FULL_COM_NETWORK_REQUESTED_ENTRY the event
                REQ_STATUS_CHANGED is emitted.
                Transition to state FULL_COM_READY_SLEEP is done.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1029</srcid><srcstatus/><internalId>1272</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1101</srcid><srcstatus/><internalId>1286</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SLAVE_PASSIVE_TRANSITIONS_0</srcid><srcstatus/><internalId>2184</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SLAVE_PASSIVE_TRANSITIONS_2</srcid><srcstatus/><internalId>2193</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00915.NmVariant.SLAVE_PASSIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1746</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_FULL_COM_NETWORK_REQUESTED_PENDING_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5265</sourceline>
      <version>1</version>
      <description>
                In state FULL_COM_NETWORK_REQUESTED_PENDING and user calls
                &lt;function moreinfo="none"&gt;ComM_RequestComMode()&lt;/function&gt; with
                &lt;parameter moreinfo="none"&gt;ComMode = COMM_NO_COMMUNICATION&lt;/parameter&gt; and DCM does not
                requests the channel, transition to state FULL_COM_READY_SLEEP is done.
            </description>
      <comment>
                When entering state FULL_COM_READY_SLEEP the network is realeased in case
                of a channel with ComMNmVariant set to FULL.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1190</srcid><srcstatus/><internalId>1293</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30021</srcid><srcstatus/><internalId>1900</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00888</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1747</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_FULL_COM_READY_SLEEP</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5292</sourceline>
      <version>1</version>
      <description>
                In state FULL_COM_READY_SLEEP and BusNm calls
                &lt;function moreinfo="none"&gt;ComM_Nm_PrepareBusSleepMode()&lt;/function&gt;,
                transition to state SILENT_COMMUNICATION is done.
            </description>
      <comment>
                When entering SILENT_COMMUNICATION the BusSm is requested with
                Silent Communication.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1318</srcid><srcstatus/><internalId>1312</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SC_FulSilFul_thruDiag</srcid><srcstatus/><internalId>1908</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00299</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1748</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.TIMEOUT_FULL_COM_READY_SLEEP_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5318</sourceline>
      <version>1</version>
      <description>
                In state FULL_COM_READY_SLEEP and if the channel is of
                &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; is set to LIGHT,
                the channel state machine shall emit the event TIMEOUT
                (after ComMNmLightTimeout time has expired) to
                trigger a transition to state NO_COMMUNICATION.
            </description>
      <comment>
                When entering NO_COMMUNICATION the BusSm is requested with No Communication.
                If &lt;function moreinfo="none"&gt;ComM_LimitChannelToNoComMode()&lt;/function&gt; is active
                the user request is cleared after BusSm indicated No Communication.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1361</srcid><srcstatus/><internalId>1317</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30019</srcid><srcstatus/><internalId>1898</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30102</srcid><srcstatus/><internalId>1933</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_TM_IN_FULL_COMMODE_DURATION</srcid><srcstatus/><internalId>2063</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00610</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1749</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.TIMEOUT_FULL_COM_READY_SLEEP_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5347</sourceline>
      <version>1</version>
      <description>
                In state FULL_COM_READY_SLEEP and if configuration parameter
                &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; is set to NONE,
                the state machine shall immediately switch to state NO_COMMUNICATION.
            </description>
      <comment>
                When entering NO_COMMUNICATION the BusSm is requested with No Communication,
                if &lt;parameter moreinfo="none"&gt;BusType&lt;/parameter&gt; differs from
                &lt;parameter moreinfo="none"&gt;COMM_BUS_TYPE_INTERNAL&lt;/parameter&gt;.
                If &lt;function moreinfo="none"&gt;ComM_LimitChannelToNoComMode&lt;/function&gt; is active,
                the user request is cleared after BusSm indicated No Communication for
                channels which has &lt;parameter moreinfo="none"&gt;BusType&lt;/parameter&gt; different
                from &lt;parameter moreinfo="none"&gt;COMM_BUS_TYPE_INTERNAL&lt;/parameter&gt;.
                For channels with &lt;parameter moreinfo="none"&gt;BusType&lt;/parameter&gt;
                &lt;parameter moreinfo="none"&gt;COMM_BUS_TYPE_INTERNAL&lt;/parameter&gt; and
                &lt;function moreinfo="none"&gt;ComM_LimitChannelToNoComMode()&lt;/function&gt; is active
                the user request is cleared on transition from FULL_COM_READY_SLEEP state
                to NO_COMMUNICATION.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1360</srcid><srcstatus/><internalId>1316</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30048</srcid><srcstatus/><internalId>1921</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00671</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1750</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_FULL_COMMUNICATION</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5383</sourceline>
      <version>1</version>
      <description>
                In state FULL_COMMUNICATION when BusNm indicates
                &lt;function moreinfo="none"&gt;ComM_Nm_BusSleepMode()&lt;/function&gt;
                transition to state NO_COMMUNICATION is done.
            </description>
      <comment>
                On NO_COMMUNICATION entry the BusSm is requested
                with no communication.
                If &lt;function moreinfo="none"&gt;ComM_LimitChannelToNoComMode()&lt;/function&gt; is active
                the user request is cleared.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_715</srcid><srcstatus/><internalId>1229</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30017</srcid><srcstatus/><internalId>1896</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_NeverInhibitWkUpIfFullCom_1</srcid><srcstatus/><internalId>1918</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00637</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1751</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_SILENT_COMMUNICATION_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5411</sourceline>
      <version>1</version>
      <description>
                In state COMM_SILENT_COMMUNICATION and DCM calls
                &lt;function moreinfo="none"&gt;ComM_DCM_ActiveDiagnostic()&lt;/function&gt;, the ComM channel state
                machine shall switch to state COMM_FULL_COMMUNICATION.
            </description>
      <comment>
                On FULL_COMMUNICATION entry the BusSm is requested
                with full communication.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1746</srcid><srcstatus/><internalId>1361</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SC_FulSilFul_thruDiag</srcid><srcstatus/><internalId>1908</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00878.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00878.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00878.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1752</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_SILENT_COMMUNICATION_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5445</sourceline>
      <version>1</version>
      <description>
                In state COMM_SILENT_COMMUNICATION and user requests
                &lt;parameter moreinfo="none"&gt;COMM_FULL_COMMUNICATION&lt;/parameter&gt; and
                limit channel to no communication is not active and wakeup
                inhibition in not active, the ComM channel state machine shall
                switch to state COMM_FULL_COMMUNICATION.
            </description>
      <comment>
                On FULL_COMMUNICATION entry the BusSm is requested
                with full communication.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1747</srcid><srcstatus/><internalId>1362</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30017</srcid><srcstatus/><internalId>1896</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00877</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1753</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_SILENT_COMMUNICATION_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5473</sourceline>
      <version>1</version>
      <description>
                In state SILENT_COMMUNICATION when BusNm calls
                &lt;function moreinfo="none"&gt;ComM_Nm_NetworkMode()&lt;/function&gt;
                transition to state FULL_COM_READY_SLEEP is done.
            </description>
      <comment>
                On FULL_COMMUNICATION entry the BusSm is requested
                with full communication.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1694</srcid><srcstatus/><internalId>1357</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30021</srcid><srcstatus/><internalId>1900</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00296</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1754</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_SILENT_COMMUNICATION_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5499</sourceline>
      <version>1</version>
      <description>
                In state SILENT_COMMUNICATION when BusNm calls
                &lt;function moreinfo="none"&gt;ComM_Nm_BusSleepMode()&lt;/function&gt;
                transition to state NO_COMMUNICATION is done.
            </description>
      <comment>
                On NO_COMMUNICATION entry the BusSm is requested with no communication.
                In case &lt;function moreinfo="none"&gt;ComM_LimitChannelToNoComMode()&lt;/function&gt; is active
                the user request is cleared.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1727</srcid><srcstatus/><internalId>1359</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30014</srcid><srcstatus/><internalId>2311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00295</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1755</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COM_READY_SLEEP_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5526</sourceline>
      <version>1</version>
      <description>
                In state FULL_COM_READY_SLEEP and DCM indicates
                &lt;function moreinfo="none"&gt;ComM_DCM_ActiveDiagnostic()&lt;/function&gt;
                transition to state FULL_COM_NETWORK_REQUESTED is done.
            </description>
      <comment>
                On transition from FULL_COM_READY_SLEEP to
                FULL_COM_NETWORK_REQUESTED the BusNm is requested in case
                &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; is FULL.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1348</srcid><srcstatus/><internalId>1314</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30103</srcid><srcstatus/><internalId>2004</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00883.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00883.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00883.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>542</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1756</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COM_READY_SLEEP_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5561</sourceline>
      <version>1</version>
      <description>
                In state FULL_COM_READY_SLEEP and a user request
                &lt;parameter moreinfo="none"&gt;COMM_FULL_COMMUNICATION&lt;/parameter&gt; and
                limit channel to no communication is not active,
                transition to COMM_FULL_COM_NETWORK_REQUESTED is done.
            </description>
      <comment>
                On transition from FULL_COM_READY_SLEEP to
                FULL_COM_NETWORK_REQUESTED the BusNm is requested in case
                &lt;parameter moreinfo="none"&gt;ComMNmVariant&lt;/parameter&gt; is FULL.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1349</srcid><srcstatus/><internalId>1315</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ModeLimitation_UserReq</srcid><srcstatus/><internalId>1944</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00882</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1757</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_INDICATION_NO_COM_REQUEST_PENDING_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5589</sourceline>
      <version>1</version>
      <description>
                In state NO_COM_REQUEST_PENDING and
                &lt;function moreinfo="none"&gt;ComM_Nm_NetworkStartIndication()&lt;/function&gt; is called
                the state machine shall treat the startup also as a passive startup.
            </description>
      <comment>
              In case user or DCM does not requests anymore the channel
              the state machine shall evaluate if also a pasive startup
              was detected.
              If a pasive startup is detected the state machine shall not
              switch back to state NO_COM_NO_PENDING_REQUEST.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1589</srcid><srcstatus/><internalId>1345</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_LimitToNoCom8_0</srcid><srcstatus/><internalId>2021</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupInhibition8</srcid><srcstatus/><internalId>2032</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00383</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1758</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_INDICATION_NO_COM_REQUEST_PENDING_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5618</sourceline>
      <version>1</version>
      <description>
                In state NO_COM_REQUEST_PENDING and
                &lt;function moreinfo="none"&gt;ComM_Nm_RestartIndication()&lt;/function&gt; is called
                the state machine shall treat the startup also as a passive startup.
            </description>
      <comment>
              In case user or DCM does not requests anymore the channel
              the state machine shall evaluate if also a pasive startup
              was detected.
              If a pasive startup is detected the state machine shall not
              switch back to state NO_COM_NO_PENDING_REQUEST.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1590</srcid><srcstatus/><internalId>1346</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_LimitToNoCom8_1</srcid><srcstatus/><internalId>2022</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00792</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1759</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_INDICATION_NO_COM_REQUEST_PENDING_2</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5647</sourceline>
      <version>1</version>
      <description>
                In state NO_COM_REQUEST_PENDING and
                &lt;function moreinfo="none"&gt;ComM_EcuM_WakeUpIndication()&lt;/function&gt; is called
                the state machine shall treat the startup also as a passive startup.
            </description>
      <comment>
              In case user or DCM does not requests anymore the channel
              the state machine shall evaluate if also a pasive startup
              was detected.
              If a pasive startup is detected the state machine shall not
              switch back to state NO_COM_NO_PENDING_REQUEST.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1591</srcid><srcstatus/><internalId>1347</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_LimitToNoCom8_2</srcid><srcstatus/><internalId>2023</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1760</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_NO_COM_REQUEST_PENDING_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5676</sourceline>
      <version>1</version>
      <description>
                In state NO_COM_REQUEST_PENDING and
                &lt;function moreinfo="none"&gt;ComM_LimitChannelToNoComMode()&lt;/function&gt; is called
                the state machine shall switch back to state
                NO_COM_NO_PENDING_REQUEST if no passive wakeup request is pending
                and DCM does not requests the channel
            </description>
      <comment>
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1553</srcid><srcstatus/><internalId>1342</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_LimitToNoCom7_0</srcid><srcstatus/><internalId>2019</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_LimitToNoCom12</srcid><srcstatus/><internalId>2081</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LimitToNoCom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.LimitToNoComClearUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1761</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_NO_COM_REQUEST_PENDING_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5706</sourceline>
      <version>1</version>
      <description>
                In state NO_COM_REQUEST_PENDING and
                &lt;function moreinfo="none"&gt;ComM_LimitECUToNoComMode()&lt;/function&gt; is called
                the state machine shall switch back to state
                NO_COM_NO_PENDING_REQUEST if no passive wakeup request is pending
                and DCM does not requests the channel
            </description>
      <comment>
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1554</srcid><srcstatus/><internalId>1343</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_LimitToNoCom7_1</srcid><srcstatus/><internalId>2020</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LimitToNoCom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.LimitToNoComClearUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1762</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.WAKEUP_INHIBITION_NO_COM_REQUEST_PENDING</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5736</sourceline>
      <version>1</version>
      <description>
                In state NO_COM_REQUEST_PENDING and
                &lt;function moreinfo="none"&gt;ComM_PreventWakeUp()&lt;/function&gt; is called
                the state machine shall switch back to state
                NO_COM_NO_PENDING_REQUEST if no passive wakeup request is pending
                and DCM does not requests the channel
            </description>
      <comment>
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1620</srcid><srcstatus/><internalId>1351</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupInhibition7</srcid><srcstatus/><internalId>2031</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupInhibition12</srcid><srcstatus/><internalId>2085</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.WakeupInhibition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1763</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.BUS_SM_SLEEP_INDICATION_NO_COMMUNICATION</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5762</sourceline>
      <version>1</version>
      <description>
                In state FULL_COMMUNICATION and 
                &lt;function moreinfo="none"&gt;ComM_BusSM_BusSleepMode()&lt;/function&gt; was called then 
                the state machine goes to state NO_COMMUNICATION.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_2611</srcid><srcstatus/><internalId>1079</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_SLAVE_ACTIVE_TRANSITIONS_0</srcid><srcstatus/><internalId>2182</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SLAVE_PASSIVE_TRANSITIONS_1</srcid><srcstatus/><internalId>2185</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_SLAVE_ACTIVE_TRANSITIONS_2</srcid><srcstatus/><internalId>2192</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01018.NmVariant.SLAVE_ACTIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01018.NmVariant.SLAVE_PASSIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>577</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1764</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_NO_COMMUNICATION_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5788</sourceline>
      <version>1</version>
      <description>
                In state PNC_NO_COMMUNICATION and at least one ComMUser assigned to this
                PNC requests "Full Communication" transition to PNC_REQUESTED is done.
            </description>
      <comment>
                On transition from PNC_NO_COMMUNICATION to PNC_REQUESTED
                the PNC shall request the channels linked to it.
                On transition the TX signals shall be updated with 1 for the coresponding PNC.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_664</srcid><srcstatus/><internalId>1425</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00932</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1765</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_NO_COMMUNICATION_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5814</sourceline>
      <version>1</version>
      <description>
                In state PNC_NO_COMMUNICATION and at least one bit representing this PNC
                in the ERAn changes to '1' and if the &lt;parameter moreinfo="none"&gt;ComMPncGatewayEnabled&lt;/parameter&gt;
                equals TRUE, transition to PNC_REQUESTED is done.
            </description>
      <comment>
                While doing the transition from PNC_NO_COMMUNICATION to PNC_REQUESTED the channels
                linked to the PNC are requested.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3588</srcid><srcstatus/><internalId>1135</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_3</srcid><srcstatus/><internalId>2290</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00934</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1766</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.COMCBK_PNC_NO_COMMUNICATION</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5840</sourceline>
      <version>1</version>
      <description>
                In state PNC_NO_COMMUNICATION and if at least one bit representing this
                PNC in EIRA changes to '1', transmission to PNC_READY_SLEEP is done.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_614</srcid><srcstatus/><internalId>1419</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PncNoComToRdySlpTest</srcid><srcstatus/><internalId>2073</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_ComRecvSigReturnVal</srcid><srcstatus/><internalId>2076</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00933</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1767</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ECUM_WAKEUP_IND_PNC_NO_COMMUNICATION</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5861</sourceline>
      <version>1</version>
      <description>
                In state PNC_NO_COMMUNICATION and the API
                &lt;function moreinfo="none"&gt;ComM_EcuM_WakeUpIndication()&lt;/function&gt; is called and
                the configuration &lt;parameter moreinfo="none"&gt;ComMSynchronousWakeUp&lt;/parameter&gt;
                is set to TRUE, transmission to PNC_PREPARE_SLEEP is done for all PNCs.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4446</srcid><srcstatus/><internalId>1185</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00931</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1768</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.NO_COM_REQ_BY_ALL_COMM_USER_PNC_REQUESTED_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5884</sourceline>
      <version>1</version>
      <description>
                In state PNC_REQUESTED and the PNC bit in all ERAn is equal to 0 and
                if the configuration switch &lt;parameter moreinfo="none"&gt;ComMPncGatewayEnabled&lt;/parameter&gt; is
                set to TRUE, transition to PNC_READY_SLEEP is done.
            </description>
      <comment>
                On transition from PNC_REQUESTED to PNC_READY_SLEEP
                the TX signals shall be updated with 0 for the coresponding PNC.
                If parameter COMM_PNC_RELEASE_CHANNEL is set to COMM_NO_INTERNAL_REQUESTS
                the PNC shall release the channels linked to it.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3595</srcid><srcstatus/><internalId>1137</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_1</srcid><srcstatus/><internalId>2289</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00991</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1769</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.NO_COM_REQ_BY_ALL_COMM_USER_PNC_REQUESTED_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5912</sourceline>
      <version>1</version>
      <description>
                In state PNC_REQUESTED and all users linked to this PNC
                do not request the PNC anymore transition to PNC_READY_SLEEP is done.
            </description>
      <comment>
                On transition from PNC_REQUESTED to PNC_READY_SLEEP
                the TX signals shall be updated with 0 for the coresponding PNC.
                If parameter COMM_PNC_RELEASE_CHANNEL is set to COMM_NO_INTERNAL_REQUESTS
                the PNC shall release the channels linked to it.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_997</srcid><srcstatus/><internalId>1447</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00991</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1770</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_READY_SLEEP_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5939</sourceline>
      <version>1</version>
      <description>
                In state PNC_READY_SLEEP and at least one bit representing this PNC
                in the ERAn changes to '1' with the the referenced channel's parameter
                ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE
                and if the &lt;parameter moreinfo="none"&gt;ComMPncGatewayEnabled&lt;/parameter&gt;
                equals TRUE, transition to PNC_REQUESTED is done.
            </description>
      <comment>
                On transition from PNC_READY_SLEEP to PNC_REQUESTED
                the TX signals shall be updated with 1 for the corresponding PNC.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3585</srcid><srcstatus/><internalId>1132</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_1</srcid><srcstatus/><internalId>2289</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_PncReadySleep_PncRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1771</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_READY_SLEEP_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5966</sourceline>
      <version>1</version>
      <description>
                In state PNC_READY_SLEEP and at least one bit representing this PNC
                in the ERAn changes to '1' with the the referenced channel's parameter
                ComMPncGatewayType set to COMM_GATEWAY_TYPE_PASSIVE
                and if the &lt;parameter moreinfo="none"&gt;ComMPncGatewayEnabled&lt;/parameter&gt;
                equals TRUE, transition to PNC_REQUESTED is done.
            </description>
      <comment>
                On transition from PNC_READY_SLEEP to PNC_REQUESTED
                the TX ERA signals with the referenced channel parameter
                ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE
                and signals with signal type EIRA
                shall be updated with 1 for the corresponding PNC.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3586</srcid><srcstatus/><internalId>1133</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_9</srcid><srcstatus/><internalId>2298</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_PncReadySleep_PncRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1772</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_READY_SLEEP_2</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>5997</sourceline>
      <version>1</version>
      <description>
                In state PNC_READY_SLEEP and a user requests full communication
                transition from PNC_READY_SLEEP to PNC_REQUESTED is done.
            </description>
      <comment>
                On transition from PNC_READY_SLEEP to PNC_REQUESTED the TX signals shall
                be updated with 1 for the coresponding PNC.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3587</srcid><srcstatus/><internalId>1134</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_8</srcid><srcstatus/><internalId>2297</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_PncReadySleep_PncRequested_User</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1773</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.COMCBK_PNC_PREPARE_SLEEP</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>6022</sourceline>
      <version>1</version>
      <description>
                In state PNC_PREPARE_SLEEP and at least one PNC bit within EIRA changes to
                '1', transmission to PNC_READY_SLEEP is done.
            </description>
      <comment>
                The timer &lt;parameter moreinfo="none"&gt;ComMPncPrepareSleepTimer&lt;/parameter&gt;
                shall be stopped and the sub state PNC_READY_SLEEP shall be entered.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_268</srcid><srcstatus/><internalId>1387</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PrepSlpToRdySlpMultiComSig</srcid><srcstatus/><internalId>2071</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PrepSlpToRdySlp_32bit</srcid><srcstatus/><internalId>2169</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00950</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1774</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.COMCBK_PNC_READY_SLEEP</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>6047</sourceline>
      <version>1</version>
      <description>
                In state PNC_READY_SLEEP and all PNC bits within EIRA equals '0',
                transition to PNC_PREPARE_SLEEP is done and
                &lt;parameter moreinfo="none"&gt;ComMPncPrepareSleepTimer&lt;/parameter&gt; shall be started.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_333</srcid><srcstatus/><internalId>1392</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00940</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1775</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.PREPARE_SLEEP_TIMEOUT_PNC_PREPARE_SLEEP</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>6069</sourceline>
      <version>1</version>
      <description>
                In state PNC_PREPARE_SLEEP and when the timer
                &lt;parameter moreinfo="none"&gt;ComMPncPrepareSleepTimer&lt;/parameter&gt; expires,
                transmission to PNC_NO_COMMUNICATION is done.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_256</srcid><srcstatus/><internalId>1385</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_PncStateChangeNotifyTest</srcid><srcstatus/><internalId>2072</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00947</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1776</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_PREPARE_SLEEP_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>6091</sourceline>
      <version>1</version>
      <description>
                In state PNC_PREPARE_SLEEP and at least one ComMUser assigned
                to this PNC requests "Full Communication", transmission to PNC_REQUESTED is done.
            </description>
      <comment>
                The timer &lt;parameter moreinfo="none"&gt;ComMPncPrepareSleepTimer&lt;/parameter&gt; shall be stopped
                and the sub state PNC_REQUESTED state shall be entered.
                On transition the TX signals shall be updated with 1 for the coresponding PNC.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_299</srcid><srcstatus/><internalId>1388</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</srcid><srcstatus/><internalId>2070</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</srcid><srcstatus/><internalId>2168</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00948</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1777</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_PREPARE_SLEEP_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>6117</sourceline>
      <version>1</version>
      <description>
                In state PNC_PREPARE_SLEEP and at least one PNC bit within ERAn changes
                to '1' with the the referenced channel's parameter
                ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE
                and the &lt;parameter moreinfo="none"&gt;ComMPncGatewayEnabled&lt;/parameter&gt; equals TRUE,
                transmission to PNC_REQUESTED is done.
            </description>
      <comment>
                The timer &lt;parameter moreinfo="none"&gt;ComMPncPrepareSleepTimer&lt;/parameter&gt; shall be stopped
                and the sub state PNC_REQUESTED state shall be entered.
                On transition the TX signals shall be updated with 1 for the corresponding PNC.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3583</srcid><srcstatus/><internalId>1130</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_1</srcid><srcstatus/><internalId>2289</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00951</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1778</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_PREPARE_SLEEP_2</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>6146</sourceline>
      <version>1</version>
      <description>
                In state PNC_PREPARE_SLEEP and at least one PNC bit within ERAn changes
                to '1' with the referenced channel's parameter
                ComMPncGatewayType set to COMM_GATEWAY_TYPE_PASSIVE
                and the &lt;parameter moreinfo="none"&gt;ComMPncGatewayEnabled&lt;/parameter&gt; equals TRUE,
                transmission to PNC_REQUESTED is done.
            </description>
      <comment>
                The timer &lt;parameter moreinfo="none"&gt;ComMPncPrepareSleepTimer&lt;/parameter&gt; shall be stopped
                and the sub state PNC_REQUESTED state shall be entered.
                On transition the ERA TX signals with the referenced channel's parameter
                ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE and
                signals with signal type EIRA,
                shall be updated with 1 for the corresponding PNC.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3584</srcid><srcstatus/><internalId>1131</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_12</srcid><srcstatus/><internalId>2301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00951</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1779</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.ECUM_PNCWAKEUP_IND_PNC_NO_COMMUNICATION</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>6178</sourceline>
      <version>1</version>
      <description>
                In PNC state PNC_NO_COMMUNICATION, if
                &lt;function moreinfo="none"&gt;ComM_EcuM_PNCWakeUpIndication()&lt;/function&gt; is called,
                the PNC main state PNC_NO_COMMUNICATION shall be left and the PNC sub state
                PNC_PREPARE_SLEEP shall be entered.
            </description>
      <comment>
                Timer &lt;parameter moreinfo="none"&gt;ComMPncPrepareSleepTimer&lt;/parameter&gt; shall be started
                on this transition.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3928</srcid><srcstatus/><internalId>1152</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_3985</srcid><srcstatus/><internalId>1157</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/ComM.c.m4_4044</srcid><srcstatus/><internalId>1162</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_PNC_Wakeup</srcid><srcstatus/><internalId>2174</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00964</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1780</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.TOPNotifyTransition_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>6205</sourceline>
      <version>1</version>
      <description>
                In case of Bus State Manager indicates a state change,
                ComM shall propagate the indicated state to the BswM.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1883</srcid><srcstatus/><internalId>1372</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30017</srcid><srcstatus/><internalId>1896</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00675</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1781</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.TOPNotifyTransition_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>6226</sourceline>
      <version>1</version>
      <description>
                In case of Bus State Manager indicates a state change,
                ComM shall propagate the indicated state to the RTE.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1871</srcid><srcstatus/><internalId>1370</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_RteModeNotification</srcid><srcstatus/><internalId>2321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00675</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1782</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.TOPNotifyTransition_2</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>6247</sourceline>
      <version>1</version>
      <description>
                In case of Bus State Manager indicates a state change,
                ComM shall propagate the indicated state to the DCM.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_1911</srcid><srcstatus/><internalId>1375</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30017</srcid><srcstatus/><internalId>1896</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00675</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1783</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.FULL_COM_NETWORK_REQUESTED_NmVariantFULL</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>6268</sourceline>
      <version>1</version>
      <description>
                In case PNC state machine enters PNC_REQUESTED state,
                the API Nm_NetworkRequest shall be called, even if
                the current state of the channel state machine is already "Full communication".
            </description>
      <comment>
                This behaviour is applicable only if ComMPncNmRequest equals true for a channel.
            </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_901</srcid><srcstatus/><internalId>1260</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_InternTransition2</srcid><srcstatus/><internalId>2293</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00980</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00869</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00886</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1784</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.FullCommunicationAction1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>6302</sourceline>
      <version>1</version>
      <description>
              If the current state is COMM_FULL_COMMUNICATION and PNC requests the channel with
              COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST,
              BusSm shall be notified with COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_642</srcid><srcstatus/><internalId>1226</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_17</srcid><srcstatus/><internalId>2350</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_WakeupOnDataLine_18</srcid><srcstatus/><internalId>2351</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>SWS_ComM_01057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1785</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.PncRequestedAction1_0</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>6325</sourceline>
      <version>1</version>
      <description>
              If the current state is PNC_REQUESTED and user requests Full communication
              the TX signals which has the linked channel parameter
              ComMPncGatewayType set to COMM_GATEWAY_TYPE_PASSIVE shall be set to 1
              for the corresponding PNC.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_466</srcid><srcstatus/><internalId>1409</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_10</srcid><srcstatus/><internalId>2299</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00164.In.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.UserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1786</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.StateDynamics.PncRequestedAction1_1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>6349</sourceline>
      <version>1</version>
      <description>
              If the current state is PNC_REQUESTED and an ERA signal with
              the linked channel parameter
              ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE,
              the TX signals which has the linked channel parameter
              ComMPncGatewayType set to COMM_GATEWAY_TYPE_PASSIVE shall be set to 1
              for the corresponding PNC.
            </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMPncFnct.c_467</srcid><srcstatus/><internalId>1410</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Test_ComM_PncGateway_11</srcid><srcstatus/><internalId>2300</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00164.In.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.Rx.ERA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1787</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>ComM.EB.Dsn.Interaction.BusSm</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>6412</sourceline>
      <version>1</version>
      <description>
                    The &lt;package&gt;ComM&lt;/package&gt; shall not change its state, due to a mode
                    indication from the lower layer Bus State Manager modules
                    &lt;package&gt;CanSm&lt;/package&gt;, &lt;package&gt;FrSm&lt;/package&gt;, &lt;package&gt;EthSm&lt;/package&gt; or
                    &lt;package&gt;LinSm&lt;/package&gt;.
                </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_BusSMIndependency</srcid><srcstatus/><internalId>2365</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1788</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_ENABLE_ASR40_SERVICE_API</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11058</sourceline>
      <version>1</version>
      <description>
                COMM_ENABLE_ASR40_SERVICE_API; Range: STD_OFF, STD_ON; Type: Compiler Switch;
                Enables the AUTOSAR 4.0 service API for ComM.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_01_ASRSvcCompDescr</srcid><srcstatus/><internalId>2377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>760</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1789</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_DEFAULT_ASR_SERVICE_API</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11078</sourceline>
      <version>1</version>
      <description>
                COMM_DEFAULT_ASR_SERVICE_API; Range: COMM_SERVICE_API_ASR2011,
                COMM_SERVICE_API_ASR40, COMM_SERVICE_API_NONE; Type: Compiler Switch; Defines
                a default AUTOSAR service API for ComM.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ComM_ImpTest_ASR_01_ASRSvcCompDescr</srcid><srcstatus/><internalId>2377</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>761</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1790</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.ComMConf_ComMChannel_ChannelName</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11099</sourceline>
      <version>1</version>
      <description>
                ComMConf_ComMChannel_&amp;lt;ChannelName&amp;gt;; Range: 0, ..., 255; Type: Integer;
                Provides the symbolic name value of each configured ComM channel with its
                channel Id.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_Multicore_1</srcid><srcstatus/><internalId>1837</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Multicore_2</srcid><srcstatus/><internalId>1838</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Multicore_3</srcid><srcstatus/><internalId>1839</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Multicore_5</srcid><srcstatus/><internalId>1841</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00635</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1791</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.ComMConf_ComMUser_UserName</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11120</sourceline>
      <version>1</version>
      <description>
                ComMConf_ComMUser_&amp;lt;UserName&amp;gt;; Range: 0, ..., 255; Type: Integer;
                Provides the symbolic name value of each configured ComM user with its user
                Id.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_Multicore_1</srcid><srcstatus/><internalId>1837</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Multicore_2</srcid><srcstatus/><internalId>1838</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Multicore_3</srcid><srcstatus/><internalId>1839</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Multicore_5</srcid><srcstatus/><internalId>1841</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1792</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_DEV_ERROR_DETECT</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11141</sourceline>
      <version>1</version>
      <description>
                COMM_DEV_ERROR_DETECT; Range: STD_OFF, STD_ON; Type: Compiler Switch;
                Enables/Disables development error detection.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00555</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1793</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_VERSION_INFO_API</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11161</sourceline>
      <version>1</version>
      <description>
                COMM_VERSION_INFO_API; Range: STD_OFF, STD_ON; Type: Compiler Switch;
                Enables/Disables the version info API.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Multicore_1</srcid><srcstatus/><internalId>1837</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00622</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1794</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_T_MIN_FULL_COM_MODE_DURATION</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11181</sourceline>
      <version>1</version>
      <description>
                COMM_T_MIN_FULL_COM_MODE_DURATION; Range: 1, ..., 65000 Type: Integer; Minimum
                time duration in ms, spent in the Full Communication Mode.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00557</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1795</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_INCLUDE_RTE</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11201</sourceline>
      <version>1</version>
      <description>
                COMM_INCLUDE_RTE; Range: STD_OFF, STD_ON; Type: Compiler Switch;
                Enables/Disables the Rte usage in ComM.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GenerateSWCD_UserOnlytoPNC_RteON</srcid><srcstatus/><internalId>1854</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GenerateSWCD_NoUsers_PncON_RteOn</srcid><srcstatus/><internalId>1855</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1796</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_DCM_ENABLED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11215</sourceline>
      <version>1</version>
      <description>
                COMM_DCM_ENABLED; Range: STD_OFF, STD_ON; Type: Compiler Switch;
                Enables/Disables the Dcm usage in ComM.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</srcid><srcstatus/><internalId>1833</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</srcid><srcstatus/><internalId>1836</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1797</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_SYNCHRONOUS_WAKE_UP</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11229</sourceline>
      <version>1</version>
      <description>
                COMM_SYNCHRONOUS_WAKE_UP; Range: STD_OFF, STD_ON; Type: Compiler Switch; Wake
                up of one channel leads to a wake up of all channels if the switch is enabled.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Multicore_1</srcid><srcstatus/><internalId>1837</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00695</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1798</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_MODE_LIMITATION_ENABLED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11249</sourceline>
      <version>1</version>
      <description>
                COMM_MODE_LIMITATION_ENABLED; Range: STD_OFF, STD_ON; Type: Compiler Switch;
                Enables/Disables mode limitation functionality in ComM.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Multicore_1</srcid><srcstatus/><internalId>1837</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00560</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1799</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_ECU_GROUP_CLASSIFICATION</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11269</sourceline>
      <version>1</version>
      <description>
                COMM_ECU_GROUP_CLASSIFICATION; Range: 0, ..., 255; Type: Integer; Defines
                whether a mode inhibition affects the ECU or not.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00563</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1800</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_WAKEUP_INHIBITION_ENABLED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11289</sourceline>
      <version>1</version>
      <description>
                COMM_WAKEUP_INHIBITION_ENABLED; Range: STD_OFF, STD_ON; Type: Compiler Switch;
                Enables/Disables mode wakeup inhibition functionality functionality in ComM.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Multicore_1</srcid><srcstatus/><internalId>1837</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30082</srcid><srcstatus/><internalId>1842</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00559</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1801</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_CURRENTCHANNELREQUEST_ENABLED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11309</sourceline>
      <version>1</version>
      <description>
                COMM_CURRENTCHANNELREQUEST_ENABLED; Range: STD_OFF, STD_ON; Type: Compiler
                Switch; Enables/Disables the usage of port interface
                ComM_CurrentChannelRequest.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GenerateSWCD_UserOnlytoPNC_RteON</srcid><srcstatus/><internalId>1854</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GenerateSWCD_NoUsers_PncON_RteOn</srcid><srcstatus/><internalId>1855</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00787</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1802</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_NUM_BYTES_NVM</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11330</sourceline>
      <version>1</version>
      <description>
                COMM_NUM_BYTES_NVM; Range: 0, ..., 32; Type: Integer; The amount of required
                NVRam bytes.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1803</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_NVM_ENABLED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11344</sourceline>
      <version>1</version>
      <description>
                COMM_NVM_ENABLED; Range: STD_OFF, STD_ON; Type: Compiler Switch;
                Enables/Disables the usage of NVRam.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1804</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_NVM_BLOCK_DESCRIPTOR</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11358</sourceline>
      <version>1</version>
      <description>
                COMM_NVM_BLOCK_DESCRIPTOR; Type: Reference; NvM block Id for ComM block.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_SingleChMaxFeatures</srcid><srcstatus/><internalId>1847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00783</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1805</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_PN_INFO_LENGTH</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11377</sourceline>
      <version>1</version>
      <description>
                COMM_PN_INFO_LENGTH; Range: 1, ..., 63; Type: Integer; Number of bytes to store
                the EIRA. Must be at least the size of the referenced Rx Com signal.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GenerateSWCD_UserOnlytoPNC_RteON</srcid><srcstatus/><internalId>1854</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GenerateSWCD_NoUsers_PncON_RteOn</srcid><srcstatus/><internalId>1855</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1806</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_NUM_CHANNELS</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11391</sourceline>
      <version>1</version>
      <description>
                COMM_NUM_CHANNELS; Range: 0, ..., 255; Type: Integer; Number of configured
                ComM channels.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1807</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_NUM_USERS</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11405</sourceline>
      <version>1</version>
      <description>
                COMM_NUM_USERS; Range: 0, ..., 255; Type: Integer; Number of configured ComM
                users.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1808</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_NM_ACCESS_NEEDED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11419</sourceline>
      <version>1</version>
      <description>
                COMM_NM_ACCESS_NEEDED; Range: STD_OFF, STD_ON; Type: Compiler Switch;
                Defines whether the &lt;package&gt;Nm&lt;/package&gt; module is needed by the
                &lt;package&gt;ComM&lt;/package&gt;.
                &lt;package&gt;Nm&lt;/package&gt; related inclusion (headerfiles), functions (callbacks
                declaration/definition) and Identifiers shall only be included by
                &lt;package&gt;ComM&lt;/package&gt;, if &lt;package&gt;Nm&lt;/package&gt; is used/configured.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00602</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1809</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_CANSM_ACCESS_NEEDED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11443</sourceline>
      <version>1</version>
      <description>
                COMM_CANSM_ACCESS_NEEDED; Range: STD_OFF, STD_ON; Type: Compiler Switch;
                Defines whether the &lt;package&gt;CanSM&lt;/package&gt; module is needed by the
                &lt;package&gt;ComM&lt;/package&gt;.
                &lt;package&gt;CanSM&lt;/package&gt; related inclusion (headerfiles), functions (callbacks
                declaration/definition) and Identifiers shall only be included by
                &lt;package&gt;ComM&lt;/package&gt;, if &lt;package&gt;CanSM&lt;/package&gt; is used/configured.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.CanSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1810</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_FRSM_ACCESS_NEEDED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11467</sourceline>
      <version>1</version>
      <description>
                COMM_FRSM_ACCESS_NEEDED; Range: STD_OFF, STD_ON; Type: Compiler Switch;
                Defines whether the &lt;package&gt;FrSM&lt;/package&gt; module is needed by the
                &lt;package&gt;ComM&lt;/package&gt;.
                &lt;package&gt;FrSM&lt;/package&gt; related inclusion (headerfiles), functions (callbacks
                declaration/definition) and Identifiers shall only be included by
                &lt;package&gt;ComM&lt;/package&gt;, if &lt;package&gt;FrSM&lt;/package&gt; is used/configured.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.FrSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1811</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_LINSM_ACCESS_NEEDED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11491</sourceline>
      <version>1</version>
      <description>
                COMM_LINSM_ACCESS_NEEDED; Range: STD_OFF, STD_ON; Type: Compiler Switch;
                Defines whether the &lt;package&gt;LinSM&lt;/package&gt; module is needed by the
                &lt;package&gt;ComM&lt;/package&gt;.
                &lt;package&gt;LinSM&lt;/package&gt; related inclusion (headerfiles), functions (callbacks
                declaration/definition) and Identifiers shall only be included by
                &lt;package&gt;ComM&lt;/package&gt;, if &lt;package&gt;LinSM&lt;/package&gt; is used/configured.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_30085</srcid><srcstatus/><internalId>1845</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.LinSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1812</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_ETHSM_ACCESS_NEEDED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11515</sourceline>
      <version>1</version>
      <description>
                COMM_ETHSM_ACCESS_NEEDED; Range: STD_OFF, STD_ON; Type: Compiler Switch;
                Defines whether the &lt;package&gt;EthSM&lt;/package&gt; module is needed by the
                &lt;package&gt;ComM&lt;/package&gt;.
                &lt;package&gt;EthSM&lt;/package&gt; related inclusion (headerfiles), functions (callbacks
                declaration/definition) and Identifiers shall only be included by
                &lt;package&gt;ComM&lt;/package&gt;, if &lt;package&gt;EthSM&lt;/package&gt; is used/configured.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30083</srcid><srcstatus/><internalId>1843</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_Compile_Eth</srcid><srcstatus/><internalId>1850</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00506.EthSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1813</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_PNC_SUPPORT</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11539</sourceline>
      <version>1</version>
      <description>
                COMM_PNC_SUPPORT; Range: STD_OFF, STD_ON; Type: Compiler Switch;
                Enables/disables PNC support.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GenerateSWCD_UserOnlytoPNC_RteON</srcid><srcstatus/><internalId>1854</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GenerateSWCD_NoUsers_PncON_RteOn</srcid><srcstatus/><internalId>1855</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00839</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1814</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_NUM_PNC</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11559</sourceline>
      <version>2</version>
      <description>
                COMM_NUM_PNC; Range: 0, ..., 504; Type: Integer; Defines the number of
                configured PNCs.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GenerateSWCD_UserOnlytoPNC_RteON</srcid><srcstatus/><internalId>1854</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GenerateSWCD_NoUsers_PncON_RteOn</srcid><srcstatus/><internalId>1855</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1815</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_T_PNC_PREPARE_SLEEP</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11573</sourceline>
      <version>1</version>
      <description>
                COMM_T_PNC_PREPARE_SLEEP; Type: Integer; Time in ms, spent
                in the PNC_PREPARE_SLEEP state.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GenerateSWCD_UserOnlytoPNC_RteON</srcid><srcstatus/><internalId>1854</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GenerateSWCD_NoUsers_PncON_RteOn</srcid><srcstatus/><internalId>1855</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00841</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1816</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.ComMConf_ComMPnc_PncName</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11593</sourceline>
      <version>2</version>
      <description>
                ComMConf_ComMPnc_&amp;lt;PncName&amp;gt;; Range: 8, ..., 511; Type: Integer; Provides
                the symbolic name for the PNCs configured in ComM with their PNC Id.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GenerateSWCD_UserOnlytoPNC_RteON</srcid><srcstatus/><internalId>1854</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GenerateSWCD_NoUsers_PncON_RteOn</srcid><srcstatus/><internalId>1855</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00874</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1817</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_NUM_RX_ACTIVE_ERA_SIGNALS</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11613</sourceline>
      <version>1</version>
      <description>
                COMM_NUM_RX_ACTIVE_ERA_SIGNALS; Type: Integer;
                Number of Rx ERA Com Signals referenced by ComM with referenced channel
                parameter ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GenerateSWCD_UserOnlytoPNC_RteON</srcid><srcstatus/><internalId>1854</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GenerateSWCD_NoUsers_PncON_RteOn</srcid><srcstatus/><internalId>1855</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1818</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_NUM_RX_UNFILTERED_ERA_SIGNALS</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11628</sourceline>
      <version>1</version>
      <description>
                COMM_NUM_RX_UNFILTERED_ERA_SIGNALS; Type: Integer; Number of Rx ERA
                Com Signals referenced by ComM.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GenerateSWCD_UserOnlytoPNC_RteON</srcid><srcstatus/><internalId>1854</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GenerateSWCD_NoUsers_PncON_RteOn</srcid><srcstatus/><internalId>1855</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1819</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_NUM_RX_EIRA_SIGNALS</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11642</sourceline>
      <version>1</version>
      <description>
                COMM_NUM_RX_EIRA_SIGNALS; Type: Integer; Number of Rx EIRA
                Com Signals referenced by ComM.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GenerateSWCD_UserOnlytoPNC_RteON</srcid><srcstatus/><internalId>1854</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GenerateSWCD_NoUsers_PncON_RteOn</srcid><srcstatus/><internalId>1855</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1820</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_NUM_TX_SIGNALS</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11656</sourceline>
      <version>1</version>
      <description>
                COMM_NUM_TX_SIGNALS; Type: Integer; Number of Tx
                Com Signals referenced by ComM.
              </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_GenerateSWCD_UserOnlytoPNC_RteON</srcid><srcstatus/><internalId>1854</internalId></linkedfrom><linkedfrom><srcid>TS_COMM_GenerateSWCD_NoUsers_PncON_RteOn</srcid><srcstatus/><internalId>1855</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00916</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1821</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_NM_VARIANT_SLAVE_ACTIVE_NEEDED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11676</sourceline>
      <version>1</version>
      <description>
                COMM_NM_VARIANT_SLAVE_ACTIVE_NEEDED; Range: STD_OFF, STD_ON; Type: Compiler Switch;
                Defines whether handling for channels with Nm variant SLAVE_ACTIVE is needed by 
                the &lt;package&gt;ComM&lt;/package&gt;.
              </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_604</srcid><srcstatus/><internalId>859</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1822</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.Information.COMM_NM_VARIANT_SLAVE_PASSIVE_NEEDED</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>11692</sourceline>
      <version>1</version>
      <description>
                COMM_NM_VARIANT_SLAVE_PASSIVE_NEEDED; Range: STD_OFF, STD_ON; Type: Compiler Switch;
                Defines whether handling for channels with Nm variant SLAVE_PASSIVE is needed by 
                the &lt;package&gt;ComM&lt;/package&gt;.
              </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/ComM_Cfg.h_613</srcid><srcstatus/><internalId>860</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_30080</srcid><srcstatus/><internalId>1832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1823</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>ComM.EB.Dsn.ErrorHandling.Nm_PassiveStartup</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>12155</sourceline>
      <version>1</version>
      <description>
                    The ComM shall ignore the return value of
                    &lt;literal moreinfo="none"&gt;Nm_PassiveStartup()&lt;/literal&gt;.
                </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_147</srcid><srcstatus/><internalId>1210</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1824</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.ErrorHandling.Nm_NetworkRequest</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>12168</sourceline>
      <version>1</version>
      <description>
                    The ComM shall ignore the return value of
                    &lt;literal moreinfo="none"&gt;Nm_NetworkRequest()&lt;/literal&gt;.
                </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_149</srcid><srcstatus/><internalId>1211</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1825</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.ErrorHandling.Nm_NetworkRelease</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>12181</sourceline>
      <version>1</version>
      <description>
                    The ComM shall ignore the return value of
                    &lt;literal moreinfo="none"&gt;Nm_NetworkRelease()&lt;/literal&gt;.
                </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_151</srcid><srcstatus/><internalId>1212</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1826</internalId></specobject>
    <specobject>
      <id>ComM.EB.Dsn.ErrorHandling.BusSm</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>12194</sourceline>
      <version>1</version>
      <description>
                    The ComM shall ignore the return value of
                    &lt;literal moreinfo="none"&gt;&amp;lt;Bus&amp;gt;SM_RequestComMode&lt;/literal&gt;.
                </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_IgnoreBusSMNotOK</srcid><srcstatus/><internalId>2364</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/ComM_HsmComMFnct.c_182</srcid><srcstatus/><internalId>1213</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1827</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>ComM.EB.Dsn.RAMConsumption_RefCfg1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>13117</sourceline>
      <version>2</version>
      <description>
              The RAM consumption for reference configuration must not exceed 20k bytes.
            </description>
      <rationale>
              The defined RAM consumption is the result of all analysed configuration
              parameters of reference configuration 1.
            </rationale>
      <needscoverage>
        <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ResourceConsumption</srcid><srcstatus/><internalId>791</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_Pnc_ResourceConsumption</srcid><srcstatus/><internalId>1853</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1828</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>ComM.EB.Dsn.ROMConsumption_RefCfg1</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/doc/project/design/pdf/ComM_Design-profiled.xml</sourcefile>
      <sourceline>14441</sourceline>
      <version>1</version>
      <description>
              The ROM consumption for reference configuration for code and configuration
              must not exceed 30k bytes.
            </description>
      <rationale>
              The defined ROM consumption is the result of all analysed configuration
              parameters of reference configuration 1.
            </rationale>
      <needscoverage>
        <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_ResourceConsumption</srcid><srcstatus/><internalId>791</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_COMM_Compile_Pnc_ResourceConsumption</srcid><srcstatus/><internalId>1853</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1829</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ComM_DBGINST_001</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/common_req/ComM_DbgInst_Trace_APIs.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
   Test Dbg
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  VP: Successful compilation test.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.DBGINST001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>792</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.DBGINST002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>793</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.DBGINST003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>794</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.DBGINST004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>795</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.DBGINST005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>796</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1830</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ComM_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/build/reqm/common_req/ComM_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(ComM.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>797</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1831</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_30080</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_1/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all the type definitions and their possible values/ranges
    are implemented correctly.
    Verify generated symbolic names for ComMChannelId and ComMUserIdentifier.
    Verify Development Error Detection and Notification ON
    Verify period in seconds that the MainFunction has to be triggered with
    Verify the bus type of the channel.
    Verify the functionality of the network management.
    Verify ComMUser that corresponds to specific channel user.
    Verify ComM general configuration.
    Verify ComMWakeupInhibitionEnabled is enabled.
    Verify ComMModeLimitationEnabled is enabled.
    Verify ComMNoCom is enabled.
    Verify ComMEcuGroupClassification value is set correctly.
    Verify ComMNetworkManagement.
    Verify ComMSynchronousWakeUp is enabled.
    Verify ComMDcmUsage is disabled.
    Verify ComM provides the file ComM.h.
    Verify ComM provides the file ComM_Nm.h.
    Verify ComM provides the file ComM_EcuMBswM.h.
    Verify ComM provides the file ComM_Cfg.h.
    Verify ComM provides the file ComM_BusSm.h.
    Verify the version info API switch is STD_ON.
    Verify the value of COMM_T_MIN_FULL_COM_MODE_DURATION.
    Verify the COMM_INCLUDE_RTE switch is STD_OFF.
    Verify the usage of port interface ComM_CurrentChannelRequest is disabled.
    Verify the calculated number of NvM bytes.
    Verify NvM is disabled.
    Verify the calculated number of channels.
    Verify the calculated number of users.
    Verify the COMM_NM_ACCESS_NEEDED switch is STD_ON.
    Verify the COMM_FRSM_ACCESS_NEEDED switch is STD_ON.
    Verify PNC support is disabled.
  
Test Object: None.
Test Precondition: 
    There is at least one channel configured with ComMBusType FlexRay
    PNC support is disabled.
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00668.ComM_InitStatusType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00669</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00670</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00674</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00635</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00555</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00567</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00568</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00658</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00559</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00560</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00571</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00563</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00695</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00799</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00800.ComM_LimitChannelToNoComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.DcmInterface</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>611</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComMh</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_Nm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_EcuMBswM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_Cfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_BusSm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_DEV_ERROR_DETECT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1793</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_VERSION_INFO_API</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1794</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_T_MIN_FULL_COM_MODE_DURATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1795</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_INCLUDE_RTE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1796</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_DCM_ENABLED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1797</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_SYNCHRONOUS_WAKE_UP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1798</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_MODE_LIMITATION_ENABLED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1799</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_ECU_GROUP_CLASSIFICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1800</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_WAKEUP_INHIBITION_ENABLED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1801</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_CURRENTCHANNELREQUEST_ENABLED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1802</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NUM_BYTES_NVM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1803</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NVM_ENABLED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1804</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NUM_CHANNELS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1807</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NUM_USERS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1808</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NM_ACCESS_NEEDED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1809</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_FRSM_ACCESS_NEEDED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1811</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_PNC_SUPPORT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1814</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_LINSM_ACCESS_NEEDED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1812</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NM_VARIANT_SLAVE_ACTIVE_NEEDED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1822</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NM_VARIANT_SLAVE_PASSIVE_NEEDED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1823</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1832</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_10/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all the type definitions and their possible values/ranges
    are implemented correctly.
    Verify generated symbolic names for ComMChannelId and ComMUserIdentifier.
    Verify Development Error Detection and Notification
    Verify period in seconds that the MainFunction has to be triggered with
    Verify the bus type of the channel.
    Verify the functionality of the networkmanagement
    Verify ComMUser that corresponds to specific channel user.
    Verify ComM general configuration.
    Verify ComMWakeupInhibitionEnabled is enabled.
    Verify ComMModeLimitationEnabled is enabled.
    Verify ComMNoCom is enabled.
    Verify ComMEcuGroupClassification value is set.
    Verify ComMNetworkManagement.
    Verify ComMSynchronousWakeUp is disabled.
    Verify ComMDcmUsage is enabled.
  
Test Object: None.
Test Precondition: None
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00674</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00635</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00555</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00567</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00568</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00658</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00559</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00560</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00571</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00563</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00695</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00840</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00885</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00883</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00884</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00882</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00799</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00800.ComM_LimitChannelToNoComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00910</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00502</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>618</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_DCM_ENABLED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1797</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1833</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_PassiveActive_Channel</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_11/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   - Verify that in case two channels are available 
   one with ComMNmVariant set to FULL and the other set to PASSIVE,
   and both channels are connected to two different PNCs, 
   a ComMPncComSignal with ComMPncComSignalDirection set to TX
   is only required for the PNC with the channel ComMNmVariant set to FULL.
   - Verify that for both PNCs ComMPncComSignalDirection set to RX is needed
  
Test Object: None.
Test Precondition: None
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMPncComSignal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1834</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Passive_Channel</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_12/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   - Verify that in case a channel with ComMNmVariant set to PASSIVE is 
   linked to a PNC a ComMPncComSignal with ComMPncComSignalDirection set to TX
   is not required.
   - Verify that for the PNC ComMPncComSignalDirection set to RX is needed.
  
Test Object: None.
Test Precondition: None
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMPncComSignal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>634</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1835</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Compile_MultiCh_MultiPnc_MaxFeatures_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_13/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all the type definitions and their possible values/ranges
    are implemented correctly.
    Verify generated symbolic names for ComMChannelId and ComMUserIdentifier.
    Verify Development Error Detection and Notification
    Verify period in seconds that the MainFunction has to be triggered with
    Verify the bus type of the channel.
    Verify the functionality of the networkmanagement
    Verify ComMUser that corresponds to specific channel user.
    Verify ComM general configuration.
    Verify ComMWakeupInhibitionEnabled is enabled.
    Verify ComMModeLimitationEnabled is enabled.
    Verify ComMNoCom is enabled.
    Verify ComMEcuGroupClassification value is set.
    Verify ComMNetworkManagement.
    Verify ComMSynchronousWakeUp is disabled.
    Verify ComMDcmUsage is enabled.
  
Test Object: None.
Test Precondition: None
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00674</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00635</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00555</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00567</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00568</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00658</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00559</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00560</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00571</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00563</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00695</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00840</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00799</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00800.ComM_LimitChannelToNoComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00910</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Impl.PbCfgM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>632</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.ComMRelocatablePbcfgEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>627</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_DCM_ENABLED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1797</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1836</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Compile_Multicore_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_14_SchM/source/application/test_config.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all the type definitions and their possible values/ranges
    are implemented correctly in case Multicore is enabled.
    Verify generated symbolic names for ComMChannelId and ComMUserIdentifier
    (for AR 4.0.3 symbolic name).
    Verify ComMWakeupInhibitionEnabled is disabled.
    Verify ComMModeLimitationEnabled is disabled.
    Verify ComMSynchronousWakeUp is disabled.
    Verify the version info API switch is STD_OFF.
  
Test Object: None.
Test Precondition: 
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Config.ComMMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.ComMConf_ComMChannel_ChannelName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1791</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.ComMConf_ComMUser_UserName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1792</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_VERSION_INFO_API</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1794</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_SYNCHRONOUS_WAKE_UP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1798</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_MODE_LIMITATION_ENABLED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1799</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_WAKEUP_INHIBITION_ENABLED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1801</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1837</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Compile_Multicore_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_15_SchM/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all the type definitions and their possible values/ranges
    are implemented correctly in case multicore is enabled and
    configured signals of PNC's are on the same core as mastercore.
    Verify generated symbolic names for ComMChannelId and ComMUserIdentifier.
  
Test Object: None.
Test Precondition: None
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Config.ComMMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.ComMConf_ComMChannel_ChannelName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1791</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.ComMConf_ComMUser_UserName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1792</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1838</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Compile_Multicore_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_16_SchM/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all the type definitions and their possible values/ranges
    are implemented correctly in case multicore is enabled and
    configured some of the configured signals of PNC's are on the same core as mastercore
    and some signals are on different core.
    Verify generated symbolic names for ComMChannelId and ComMUserIdentifier.
  
Test Object: None.
Test Precondition: None
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Config.ComMMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.ComMConf_ComMChannel_ChannelName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1791</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.ComMConf_ComMUser_UserName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1792</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1839</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Compile_Multicore_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_17/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that in case only NM variant NONE or LIGHT (Nm Variant FULL or
    PASSIVE is not configured) is used, test compiles.
  
Test Object: None.
Test Precondition: 
    Multi-core is enabled;
    Only NONE or LIGHT ComMNmVariant is used;
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Config.ComMMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1840</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Compile_Multicore_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_18_SchM/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case multicore is enabled and only one channel is cofigured
    and no pncs are configurred the source code compiles.
  
Test Object: None.
Test Precondition: 
    - only one channel is configured with NmVariant 'FULL' or 'PASSIVE'
    - zero PNCs are configured
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Config.ComMMultiCoreSupport</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>652</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.ComMConf_ComMChannel_ChannelName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1791</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.ComMConf_ComMUser_UserName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1792</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1841</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_30082</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_2/source/application/test_config.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all the type definitions and their possible values/ranges
    are implemented correctly.
    Verify generated symbolic names for ComMChannelId and ComMUserIdentifier
    (for AR 4.0.3 symbolic name).
    Verify Development Error Detection and Notification OFF
    Verify period in seconds that the MainFunction has to be triggered with
    Verify the bus type of the channel.
    Verify the functionality of the network management.
    Verify ComMUser that corresponds to specific channel user.
    Verify ComM general configuration.
    Verify ComMWakeupInhibitionEnabled is disabled.
    Verify ComMModeLimitationEnabled is disabled.
    Verify ComMNoCom is disabled.
    Verify ComMEcuGroupClassification value is set.
    Verify ComMNetworkManagement.
    Verify ComMSynchronousWakeUp is disabled.
    Verify ComM provides the file ComM_Dcm.h.
    Verify the version info API switch is STD_OFF.
  
Test Object: None.
Test Precondition: 
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00668.ComM_InitStatusType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00669</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00670</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00674</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00635</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00555</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00567</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00568</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00658</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00559</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00560</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00571</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00563</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00695</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00799</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00800.ComM_LimitChannelToNoComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00463.ComM_Dcm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.ComMConf_ComMChannel_ChannelName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1791</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.ComMConf_ComMUser_UserName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1792</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_VERSION_INFO_API</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1794</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_SYNCHRONOUS_WAKE_UP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1798</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_MODE_LIMITATION_ENABLED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1799</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_WAKEUP_INHIBITION_ENABLED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1801</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00961</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1842</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_30083</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_3/source/application/test_config.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all the type definitions and their possible values/ranges
    are implemented correctly.
    Verify generated symbolic names for ComMChannelId and ComMUserIdentifier.
    Verify Development Error Detection and Notification OFF
    Verify period in seconds that the MainFunction has to be triggered with
    Verify the bus type of the channel.
    Verify the functionality of the network management.
    Verify ComMUser that corresponds to specific channel user.
    Verify ComM general configuration.
    Verify ComMWakeupInhibitionEnabled is disabled.
    Verify ComMModeLimitationEnabled is disabled.
    Verify ComMNoCom is disabled.
    Verify ComMEcuGroupClassification value is set.
    Verify ComMNetworkManagement.
    Verify ComMSynchronousWakeUp is disabled.
    Verify generation of SchM stubs, Exclusive areas and Main_Functions using BSWMD
    Verify the switch COMM_CANSM_ACCESS_NEEDED is STD_ON.
    Verify the switch COMM_FRSM_ACCESS_NEEDED is STD_OFF.
    Verify the switch COMM_LINSM_ACCESS_NEEDED is STD_OFF.
    Verify the switch COMM_ETHSM_ACCESS_NEEDED is STD_OFF.
  
Test Object: None.
Test Precondition: 
    There is at least one channel configured with ComMBusType CAN.
    There is no channel configured with ComMBusType FlexRay.
    There is no channel configured with ComMBusType LIN.
    There is no channel configured with ComMBusType Ethernet.
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00674</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00635</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00783</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00786</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00690</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00555</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00567</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00568</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00658</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00559</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00560</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00571</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00563</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00695</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00799</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00800.ComM_LimitChannelToNoComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00456</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.BSWMDGeneration_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>608</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.BSWMDGeneration_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>609</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.BSWMDGeneration_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>610</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_CANSM_ACCESS_NEEDED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1810</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_FRSM_ACCESS_NEEDED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1811</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_LINSM_ACCESS_NEEDED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1812</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_ETHSM_ACCESS_NEEDED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1813</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1843</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_30084</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_4/source/application/test_config.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all the type definitions and their possible values/ranges
    are implemented correctly.
    Verify generated symbolic names for ComMChannelId and ComMUserIdentifier.
    Verify Development Error Detection and Notification OFF
    Verify period in seconds that the MainFunction has to be triggered with
    Verify the bus type of the channel.
    Verify the functionality of the networkmanagement
    Verify ComMUser that corresponds to specific channel user.
    Verify ComM general configuration.
    Verify ComMWakeupInhibitionEnabled is disabled.
    Verify ComMModeLimitationEnabled is enabled.
    Verify ComMNoCom is enabled.
    Verify ComMEcuGroupClassification value is set.
    Verify ComMNetworkManagement.
    Verify ComMSynchronousWakeUp is disabled.
  
Test Object: None.
Test Precondition: None
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00674</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00635</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00555</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00567</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00568</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00658</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00559</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00560</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00571</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00563</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00695</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00799</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00800.ComM_LimitChannelToNoComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00327</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1844</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_30085</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_5/source/application/test_config.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all the type definitions and their possible values/ranges
    are implemented correctly.
    Verify generated symbolic names for ComMChannelId and ComMUserIdentifier.
    Verify Development Error Detection and Notification OFF
    Verify period in seconds that the MainFunction has to be triggered with
    Verify the bus type of the channel.
    Verify the functionality of the network management.
    Verify ComMUser that corresponds to specific channel user.
    Verify ComM general configuration.
    Verify ComMWakeupInhibitionEnabled is enabled.
    Verify ComMModeLimitationEnabled is disabled.
    Verify ComMNoCom is disabled.
    Verify ComMEcuGroupClassification value is set.
    Verify ComMNetworkManagement.
    Verify ComMSynchronousWakeUp is disabled.
    Verify the COMM_NM_ACCESS_NEEDED switch is STD_OFF.
    Verify the switch COMM_CANSM_ACCESS_NEEDED is STD_OFF.
    Verify the switch COMM_CANSM_ACCESS_NEEDED is STD_ON.
  
Test Object: None.
Test Precondition: 
    There is no channel configured with ComMBusType CAN.
    There is at least one channel configured with ComMBusType LIN.
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00674</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00635</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00555</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00567</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00568</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00658</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00559</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00560</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00571</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00563</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00695</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00799</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00800.ComM_LimitChannelToNoComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00501</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>617</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_DEV_ERROR_DETECT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1793</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NM_ACCESS_NEEDED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1809</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_CANSM_ACCESS_NEEDED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1810</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_LINSM_ACCESS_NEEDED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1812</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1845</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_30086</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_6/source/application/test_config.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all the type definitions and their possible values/ranges
    are implemented correctly.
    Verify generated symbolic names for ComMChannelId and ComMUserIdentifier
    and ComMPnc.
    Verify Development Error Detection and Notification OFF
    Verify period in seconds that the MainFunction has to be triggered with
    Verify the bus type of the channel.
    Verify the functionality of the networkmanagement
    Verify ComMUser that corresponds to specific channel user.
    Verify ComM general configuration.
    Verify ComMWakeupInhibitionEnabled is disabled.
    Verify ComMModeLimitationEnabled is disabled.
    Verify ComMNoCom is disabled.
    Verify ComMEcuGroupClassification value is set.
    Verify ComMNetworkManagement.
    Verify ComMSynchronousWakeUp is disabled.
  
Test Object: None.
Test Precondition: None
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00674</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00635</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00554</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00879</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00842</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00607</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00657</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00555</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00567</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00568</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00658</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00559</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00560</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00571</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00563</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00695</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00874</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00880</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00876</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00881</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00799</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00800.ComM_LimitChannelToNoComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00456</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PartialNetworkOffset_busNmOffsetUsage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>674</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1846</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Compile_SingleChMaxFeatures</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_7/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all the type definitions and their possible values/ranges
    are implemented correctly.
    Verify generated symbolic names for ComMChannelId and ComMUserIdentifier.
    Verify Development Error Detection and Notification ON
    Verify period in seconds that the MainFunction has to be triggered with
    Verify the bus type of the channel.
    Verify the functionality of the network management.
    Verify ComMUser that corresponds to specific channel user.
    Verify ComM general configuration.
    Verify ComMWakeupInhibitionEnabled is disabled.
    Verify ComMModeLimitationEnabled is enabled.
    Verify ComMNoCom is enabled.
    Verify ComMEcuGroupClassification value is set.
    Verify ComMNetworkManagement.
    Verify ComMSynchronousWakeUp is disabled.
    Verify NvM is enabled.
    Verify the value of the NvMBlockDescriptor Identifier.
  
Test Object: None.
Test Precondition: None
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00668.ComM_InitStatusType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00669</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00670</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00674</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00635</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00887</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00555</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00567</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00568</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00658</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00559</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00560</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00571</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00563</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00695</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00799</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00800.ComM_LimitChannelToNoComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.DcmDependencyChecks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>612</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NVM_ENABLED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1804</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NVM_BLOCK_DESCRIPTOR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1805</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1847</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Compile_MultiCh_MinFeatures</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_8/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all the type definitions and their possible values/ranges
    are implemented correctly.
    Verify generated symbolic names for ComMChannelId and ComMUserIdentifier.
    Verify Development Error Detection is disabled
    Verify period in seconds that the MainFunction has to be triggered with
    Verify the bus type of the channel.
    Verify the functionality of the networkmanagement
    Verify ComMUser that corresponds to specific channel user.
    Verify ComM general configuration.
    Verify ComMWakeupInhibitionEnabled is disabled.
    Verify ComMModeLimitationEnabled is disabled.
    Verify ComMNoCom is disabled.
    Verify ComMEcuGroupClassification value is set.
    Verify ComMNetworkManagement.
    Verify ComMSynchronousWakeUp is disabled.
  
Test Object: None.
Test Precondition: None
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00668.ComM_InitStatusType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00669</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00670</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00674</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00635</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00555</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00567</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00568</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00658</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00559</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00560</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00571</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00563</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00695</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00843</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00799</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00800.ComM_LimitChannelToNoComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1848</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Compile_MultiCh_MaxFeatures</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_9/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all the type definitions and their possible values/ranges
    are implemented correctly.
    Verify generated symbolic names for ComMChannelId and ComMUserIdentifier.
    Verify Development Error Detection and Notification
    Verify period in seconds that the MainFunction has to be triggered with
    Verify the bus type of the channel.
    Verify the functionality of the networkmanagement
    Verify ComMUser that corresponds to specific channel user.
    Verify ComM general configuration.
    Verify ComMWakeupInhibitionEnabled is enabled.
    Verify ComMModeLimitationEnabled is enabled.
    Verify ComMNoCom is enabled.
    Verify ComMEcuGroupClassification value is set.
    Verify ComMNetworkManagement.
    Verify ComMSynchronousWakeUp is disabled.
  
Test Object: None.
Test Precondition: None
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00668.ComM_InitStatusType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00669</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00670</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00674</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00635</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00555</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00567</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00568</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00658</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00559</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00560</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00571</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00563</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00695</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00799</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00800.ComM_LimitChannelToNoComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00599</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00322</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1849</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Compile_Eth</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_Eth/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that all the type definitions and their possible values/ranges
    are implemented correctly.
    Verify generated symbolic names for ComMChannelId and ComMUserIdentifier.
    Verify Development Error Detection and Notification
    Verify period in seconds that the MainFunction has to be triggered with
    Verify the bus type of the channel.
    Verify the functionality of the network management.
    Verify ComMUser that corresponds to specific channel user.
    Verify ComM general configuration.
    Verify ComMWakeupInhibitionEnabled is enabled.
    Verify ComMModeLimitationEnabled is enabled.
    Verify ComMNoCom is enabled.
    Verify ComMEcuGroupClassification value is set.
    Verify ComMNetworkManagement.
    Verify ComMSynchronousWakeUp is disabled.
    Verify the switch COMM_ETHSM_ACCESS_NEEDED is STD_ON.
  
Test Object: None.
Test Precondition: 
    There is at least one channel configured with ComMBusType Ethernet.
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00668.ComM_InitStatusType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00669</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00670</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00674</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00635</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00654</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00653</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00555</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00567</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00568</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00658</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00559</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00560</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00571</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00563</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00695</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00840</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00799</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00800.ComM_LimitChannelToNoComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00910</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_ETHSM_ACCESS_NEEDED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1813</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1850</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_NoPn_RteUsage_Enabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_MCPerChannelNoPncRteUsage/source/application/test_config.h</sourcefile>
      <sourceline>10</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Verify that in case multiocre per channel is enabled and pnc support is disabled
   source compiles
  
Test Object: None.
Test Precondition: None
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00839</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1851</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_OnlyInternalNetworkChannels</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_OnlyInternalNetworkChannels/source/application/EbTest.c</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Regression test for ASCCOMM-1617
Test Description: 
    &lt;para&gt;
      Verify that ComM module compiles when only internal network channels are configured.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    ComMConfigSet is configured.
    At least one ComMChannel is configured.
    Only internal network channels are configured (ComMBusType = COMM_BUS_TYPE_INTERNAL)
  
Test Execution: 
    01. Initialize the ComM module.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00567</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1852</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Compile_Pnc_ResourceConsumption</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_ResourceConsumption/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Run the compile test in order to measure resource consumption (RAM/ROM) resources
    Get RAM/ROM consumption for ComM
    VP(ComM.EB.Dsn.ROMConsumption_RefCfg1): Check the ROM consumption of
      the test run against the threshold specified in the requirement.
    VP(ComM.EB.Dsn.RAMConsumption_RefCfg1): Check the RAM consumption of
      the test run against the threshold specified in the requirement.
  
Test Object: None.
Test Precondition: None
Test Execution: None
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.ROMConsumption_RefCfg1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1829</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.RAMConsumption_RefCfg1</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1828</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1853</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_GenerateSWCD_UserOnlytoPNC_RteON</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_RtePNC/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that SWCDs are generated without error, when no users
    are connected to channels but only to the PNC and RTE is enabled,
    and also to verify that Module will compile for such a configuration.
  
Test Object: None.
Test Precondition: 
    PNC support is enabled.
  
Test Execution: 
    Verify PNC support is enabled.
    Verify the calculated number of PNCs.
    Verify number of bytes required to store the EIRA.
    Verify the configuration switch COMM_INCLUDE_RTE is STD_ON.
    Verify the configuration switch COMM_CURRENTCHANNELREQUEST_ENABLED is STD_ON.
    Verify the time, a PNC shall stay in PNC_PREPARE_SLEEP state.
    Verify the symbolic name values for the PNCs.
    Verify the number of Rx EIRA signals.
    Verify the number of Tx EIRA signals.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00906</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_INCLUDE_RTE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1796</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_CURRENTCHANNELREQUEST_ENABLED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1802</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_PN_INFO_LENGTH</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1806</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_PNC_SUPPORT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1814</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NUM_PNC</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1815</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_T_PNC_PREPARE_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1816</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.ComMConf_ComMPnc_PncName</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1817</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NUM_RX_EIRA_SIGNALS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1820</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NUM_RX_ACTIVE_ERA_SIGNALS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1818</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NUM_RX_UNFILTERED_ERA_SIGNALS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1819</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NUM_TX_SIGNALS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1821</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1854</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_GenerateSWCD_NoUsers_PncON_RteOn</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_RtePNCNoUser/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that SWCDs are generated without error, when all channels
    NM_VARIANT is set to passive and they are connected to PNCs and RTE is enabled,
    and also to verify that Module will compile for such a configuration.
  
Test Object: None.
Test Precondition: 
    PNC support is enabled.
  
Test Execution: 
    Verify PNC support is enabled.
    Verify the calculated number of PNCs.
    Verify number of bytes required to store the EIRA.
    Verify the configuration switch COMM_INCLUDE_RTE is STD_ON.
    Verify the configuration switch COMM_CURRENTCHANNELREQUEST_ENABLED is STD_ON.
    Verify the time, a PNC shall stay in PNC_PREPARE_SLEEP state.
    Verify the symbolic name values for the PNCs.
    Verify the number of Rx EIRA signals.
    Verify the number of Tx EIRA signals.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00906</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_INCLUDE_RTE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1796</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_CURRENTCHANNELREQUEST_ENABLED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1802</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_PN_INFO_LENGTH</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1806</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_PNC_SUPPORT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1814</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NUM_PNC</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1815</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_T_PNC_PREPARE_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1816</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.ComMConf_ComMPnc_PncName</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1817</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NUM_RX_EIRA_SIGNALS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1820</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NUM_RX_ACTIVE_ERA_SIGNALS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1818</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NUM_RX_UNFILTERED_ERA_SIGNALS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1819</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_NUM_TX_SIGNALS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1821</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1855</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Compile_Vlan_constaraint_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_VLAN_0/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case ComMChannel_0 manages channel ComMChannel_1
    and both have ComMUser_0 directly linked to the channels,
    source code compiles
  
Test Object: None.
Test Precondition: 
   - ComMUser_0 is linked to ComMChannel_0 directly
   - ComMUser_0 is linked to ComMChannel_1 directly
   - ComMChannel_0 manages ComMChannel_1
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_CONSTR_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1856</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Compile_Vlan_constaraint_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_VLAN_1/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case ComMChannel_0 manages channel ComMChannel_1
    and user 0 is linked directly to ComMChannel_0 and user 0 is linked via pnc to ComMChannel_1
    source code compiles
  
Test Object: None.
Test Precondition: 
   - ComMUser_0 is linked to ComMChannel_0 directly
   - ComMUser_0 is linked to ComMChannel_1 via Pnc 0
   - ComMChannel_0 manages ComMChannel_1
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_CONSTR_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1857</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Compile_Vlan_constaraint_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_VLAN_2/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case ComMChannel_0 manages channel ComMChannel_1
    and user 0 is linked via Pnc 0 to ComMChannel_0 and user 0 is linked directly to ComMChannel_1
    source code compiles
  
Test Object: None.
Test Precondition: 
   - ComMUser_0 is linked to ComMChannel_0 via pnc 0
   - ComMUser_0 is linked to ComMChannel_1 directly 
   - ComMChannel_0 manages ComMChannel_1
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_CONSTR_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1858</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Compile_Vlan_constaraint_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_ComTest_VLAN_3/source/application/test_config.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case ComMChannel_0 manages channel ComMChannel_1
    and user 0 is linked via Pnc 0 to ComMChannel_0 and ComMChannel_1
    source code compiles
  
Test Object: None.
Test Precondition: 
   - ComMUser_0 is linked to ComMChannel_0 via pnc 0
   - ComMUser_0 is linked to ComMChannel_1 via pnc 0
   - ComMChannel_0 manages ComMChannel_1
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_CONSTR_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1859</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_01_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_01_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check if the master core core assignment can be detected
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.MasterCoreOsApplicationCoreId)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterCoreOsApplicationCoreId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>665</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1860</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_02_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_02_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check if the master core is detected on more than one core
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.MasterCoreMultipleOsApplicationCoreIds) 
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterCoreMultipleOsApplicationCoreIds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>666</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1861</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_03_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_03_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check if that the Signal is mapped to a Pdu
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.SignalMappedToPDU)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalMappedToPDU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>667</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1862</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_04_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_04_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check if that the Pdu is mapped to a mainfunction
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.PDUsMappedToMainfunctions)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PDUsMappedToMainfunctions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1863</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_05_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_05_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check if the mainfunction (signal-&gt;pdu-&gt;mainfunction) is linked to an Os application and OsApplicationCoreAssignment exists
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.SignalMappedToOsApplicationCoreId)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalMappedToOsApplicationCoreId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>669</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1864</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_06_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_06_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that a signal is mapped to a single core
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.SignalMappedToMultipleOsApplicationCoreIds)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalMappedToMultipleOsApplicationCoreIds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>670</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1865</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_07_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_07_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that a signal is mapped to a PDU
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.SignalMappedToPDU)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalMappedToPDU</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>667</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1866</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_08_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_08_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that a signal is mapped to a ComIPduMainFunctionRef
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.PDUsMappedToMainfunctions)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PDUsMappedToMainfunctions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>668</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1867</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_09_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_09_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that a signal is mapped to a valid OsApplication which has OsApplicationCoreAssignment enabled
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.SignalMappedToOsApplicationCoreId)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalMappedToOsApplicationCoreId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>669</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1868</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_10_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_10_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that a signal is mapped to a single core
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.SignalMappedToMultipleOsApplicationCoreIds)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalMappedToMultipleOsApplicationCoreIds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>670</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1869</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_11_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_11_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that PncId does not exceed maximum value in respect to PnInfoOffset and PnInfoLength
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.PartialNetworkOffset_MaxComMPncId)
      Check that an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PartialNetworkOffset_MaxComMPncId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>676</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1870</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_12_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_12_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that PncId does not exceed maximum value in respect to PnInfoOffset and PnInfoLength
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.PartialNetworkOffset_MaxComMPncId)
      Check that an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PartialNetworkOffset_MaxComMPncId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>676</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1871</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_13_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_13_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that PncId does not exceed maximum value in respect to PnInfoOffset and PnInfoLength
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.PartialNetworkOffset_MaxComMPncId)
      Check that an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PartialNetworkOffset_MaxComMPncId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>676</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1872</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_14_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_14_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that a user refences a manged channel but the manging channel does not references the same user 
  configuration error shall be thrown
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.SWS_ComM_CONSTR_00002)
      Check that an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_CONSTR_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1873</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_15_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_15_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that in case multicore per channel is enabled a signal is maped to one and only one PDU
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.RxSignalIsNotLinkedToASinglePdu)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.RxSignalIsNotLinkedToASinglePdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>745</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1874</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_16_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_16_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that in case multicore per channel is enabled a PDU is linked to a valid Com mainfunction
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(comM.EB.RxPduComMainfunctionRefNotValid)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.RxPduComMainfunctionRefNotValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>746</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1875</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_17_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_17_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that in case multicore per channel is enabled and a Com signal which is part of a PDU 
  is referenced by a valid Com Mainfunction, and Com mainfunction references a EcuC partition which shall be configured in Os module
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.RxPduNotLinkedToASingleOsApplication)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.RxPduNotLinkedToASingleOsApplication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>747</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1876</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_18_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_18_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that in case multicore per channel is enabled an ERA com signal which references a ComM channel are on the same partition
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.RxERASignalSamePartitionAsLinkedChannel)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.RxERASignalSamePartitionAsLinkedChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>748</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1877</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_19_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_19_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that in case multicore per channel is enabled an RX EIRA signal is on the same partition as the master pnc
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.RxEIRASignalSamePartitionAsMasterPnc)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.RxEIRASignalSamePartitionAsMasterPnc</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>749</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1878</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_20_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_20_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that in case multicore per channel is enabled a signal is maped to one and only one PDU
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.TxSignalIsNotLinkedToASinglePdu)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.TxSignalIsNotLinkedToASinglePdu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>750</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1879</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_21_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_21_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that in case multicore per channel is enabled a PDU is linked to a valid Com mainfunction
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(omM.EB.TxPduComMainfunctionRefNotValid)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.TxPduComMainfunctionRefNotValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>751</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1880</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_22_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_22_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that in case multicore per channel is enabled and a Com signal which is part of a PDU 
  is referenced by a valid Com Mainfunction, and Com mainfunction references a EcuC partition which shall be configured in Os module
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.TxPduNotLinkedToASingleOsApplication)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.TxPduNotLinkedToASingleOsApplication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>752</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1881</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_23_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_23_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that in case multicore per channel is enabled an ERA com signal which references a ComM channel are on the same partition
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.TxERASignalSamePartitionAsLinkedChannel)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.TxERASignalSamePartitionAsLinkedChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>753</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1882</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_24_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_24_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check if the master core is detected on more than one core using OsApplicationCoreRef
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.MasterCoreMultipleOsApplicationCoreIds) 
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterCoreMultipleOsApplicationCoreIds</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>666</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1883</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_25_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_25_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that in case multicore a per channel is enabled and TX pdu Is mapped to a rx mainfunction generation error occures
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.TxMainfunctionMulticorePerChannel)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.TxMainfunctionMulticorePerChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>755</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1884</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_GenTest_26_XdmChecks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Compile/IN/ComM_GenTest_26_XdmChecks/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Check that in case multicore a per channel is enabled and RX pdu Is mapped to a tx mainfunction generation error occures
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP(ComM.EB.RxMainfunctionMulticorePerChannel)
      Check if an error is thrown if a bad configuration is given.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.RxMainfunctionMulticorePerChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>754</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1885</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_GetVersionInfoTest_DetOff</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/GetVersionInfo_test.c.m4</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM GetVersionInfo API with valid pointer as parameter.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Set the Version information values to invalid value before the call of
        ComM_GetVersionInfo.
    02: Call ComM GetVersionInfo with a valid address.
    03: VP (ComM.ASR403.SWS_ComM_00370, ComM.ASR403.SWS_ComM_00822, ComM.ECUC_ComM_00622):
        - The version information returned are those that are
          configured/hardcoded in the module.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00823</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00822</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00370</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00622</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1886</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_30001</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM_Init and ComM_GetStatus functionality.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: Initialize the CanSM stub.
    02: VP (ComM.ASR403.SWS_ComM_00242):
        - The status of ComM module before initialization is
        COMM_UNINIT.
    03: VP (ComM.SWS_ComM_00146):
        - Initialize the ComM module.
    04: VP (ComM.ASR403.SWS_ComM_00242):
        - The status of ComM module after initialization is
        COMM_UNINIT.
    05: VP (ComM.SWS_ComM_00485):
        - Default mode of ComM channel is
        COMM_NO_COMMUNICATION using the API ComM_GetCurrentComMode.
    06: VP (ComM.SWS_ComM_00898, ComM.ASR403.SWS_ComM_00872):
       - Default state of all ComM channel is
        COMM_NO_COM_NO_PENDING_REQUEST using the API ComM_GetState.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00485</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00872</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00898</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1887</internalId></specobject>
    <specobject>
      <id>TS_COMM_30002</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>189</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM_Deinit and  ComM_GetStatus functionality.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: Initialize the CanSM stub.
    02: VP (ComM.ASR403.SWS_ComM_00147):
        - De-initialize the ComM module.
        (ComM already initialized in the previous test case)
    03: VP (ComM.ASR403.SWS_ComM_00242):
        - The status of ComM module after calling ComM_Deinit
        is COMM_UNINIT.
    04: Initialize the ComM module.
    05: VP (ComM.ASR403.SWS_ComM_00242):
        - The status of ComM module after initialization is
        COMM_INIT.
    06: De-initialize the ComM module.
    07: VP (ComM.ASR403.SWS_ComM_00242):
         - The status of ComM module after calling ComM_Deinit is
        COMM_UNINIT.
    09: Call ComM_Init with NULL_PTR
    10: VP (ComM.EB.ComM_Init_NULL_PTR)
        Check the current state is still COMM_UNINIT.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00147</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_Init_NULL_PTR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>635</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1888</internalId></specobject>
    <specobject>
      <id>TS_COMM_30003</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>282</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM_RequestComMode and ComM_GetRequestedComMode
    functionalities during a transition from No communication to
    Full communication.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked
    to any user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize the CanSM stub.
    03: Initialize the ComM module.
    04: Clear inhibition status of all channels.
    05: Allow Communication TRUE for all the channels of the user
        Test_ComMUser_0.
    06: VP (ComM.EB.SWS_ComM_00110, ComM.ASR403.SWS_ComM_00079) :
        Request the mode Full communication using the API ComM_RequestComMode
        for Test_ComMUser_0.
        (The function Test_UserRequestFullComMode() requests UserRequest Full
        ComMode and should make all channels linked to Specific User to Full
        ComMode and returns E_OK if successful).
    07: VP (ComM.ASR403.SWS_ComM_00872, ComM.EB.ComM_FULL_COM_NETWORK_REQUESTED_Transition_UserRequest),
           (ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_0):
        - The current state of ComM channel is
        COMM_FULL_COM_NETWORK_REQUESTED using the API ComM_GetState.
    08: De-initialize the ComM module.
    09: VP (ComM.SWS_ComM_00794):
        - Initialization status of ComM module after
        de-initialization is COMM_INIT since de intialization is possible only
        if all channles are in COMM_NO_COMMUNICATION.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>756</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00794</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00872</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_FULL_COM_NETWORK_REQUESTED_Transition_UserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>640</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1737</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1889</internalId></specobject>
    <specobject>
      <id>TS_COMM_30004</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>395</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM_RequestComMode, ComM_GetRequestedComMode and
    ComM_GetCurrentComMode functionalities during a transition from
    FULL_COM to NO_COM.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to any user
    are not able to produce the desired transition within a timeout period.

    01. Initialized ComM module by invoking ComM_Init()
    02. Set ComM_CommunicationAllowed to TRUE all the channels of Test_ComMUser_0.
    03. Make all the channels of Test_ComMUser_0 in Full communication mode.
    04. VP (ComM.SWS_ComM_00899, ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_0):
        Verify that FrSM_RequestComMode()/CanSM_RequestComMode()/EthSM_RequestComMode() was invoked
        with COMM_FULL_COMMUNICATION.
        Verify the current state as COMM_FULL_COM_NETWORK_REQUESTED.
    05. Reset CanSm, EthSm and FrSm stub counts and invoke ComM_RequestComMode with
        COMM_NO_COMMUNICATION.
    06. VP (ComM.ASR403.SWS_ComM_00079):
        Verify that the current requested mode is COMM_NO_COMMUNICATION.
    07. Call the main function of all the channels of Test_ComMUser_0 until
        Network Release has been called.
    08. VP:
        Verify that the current state is COMM_FULL_COM_READY_SLEEP.
    09. Call ComM_Nm_BusSleepMode() for all the channels of Test_ComMUser_0.
    10. Call the main function of all the channels of Test_ComMUser_0 until
        ComM invokes CanSM_RequestComMode(), EthSM_RequestComMode() and FrSM_RequestComMode().
    11. VP (ComM.EB.Dsn.Algorithm.BusSM_RequestComModeNOCOM, ComM.SWS_ComM_00073):
        Verify the Current ComMode Requested by CanSm as COMM_NO_COMMUNICATION.
        Verify the Current ComMode Requested by FrSM as COMM_NO_COMMUNICATION.
        Verify the Current ComMode Requested by EthSM as COMM_NO_COMMUNICATION.
    12. Call the main function of all the channels of Test_ComMUser_0 once.
    13. VP (ComM.EB.SWS_ComM_00110):
        Verify the Current Communication Mode as COMM_NO_COMMUNICATION.
        Verify the Current state as COMM_NO_COM_NO_PENDING_REQUEST.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>756</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00872</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00899</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00888</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeNOCOM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1681</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1682</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.BusSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>557</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00962.CanSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>597</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00962.FrSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>599</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00962.EthSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>600</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1890</internalId></specobject>
    <specobject>
      <id>TS_COMM_30005</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>619</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM_RequestComMode, ComM_GetRequestedComMode and
    ComM_GetCurrentComMode functionalities during a transition from NO_COM to
    FULL_COM triggered by a Passive wakeup.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize the CanSM stub.
    03: Initialize the ComM module.
    04: Clear inhibition status of all channels.
    05: Allow Communication TRUE for all the channels of the user
        Test_ComMUser_0.
    06: The following steps are implemented in the test helper function
        Test_WakeUpIndicationFullComMode().
        - Simulate a wakeup indication for all channels linked to
          Test_ComMUser_0.
        - Simulate the Nm network mode indications for all channels of
          Test_ComMUser_0.
        - VP (ComM.ASR403.SWS_ComM_00675):
          - Call ComM_MainFunction of corresponding channel until ComM requests
          FULL_COM mode to the corresponding state managers for all channels
          linked to Test_ComMUser_0.
        - Call ComM_MainFunction of corresponding channel until ComM module
          calls Nm_PassiveStartup for all channels linked to Test_ComMUser_0.
        - Verify the current mode of channel using the API
          ComM_GetCurrentComMode.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00675</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1891</internalId></specobject>
    <specobject>
      <id>TS_COMM_30006</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>715</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM_RequestComMode, ComM_GetRequestedComMode and
    ComM_GetCurrentComMode functionalities during a transition from FULL_COM to
    SILENT_COM.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSm stub.
    03: Initialize ComM
    04: Clear the BusSm Request count.
    05: Clear the inhibition status of all channels.
    06: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_0.
    07: Make all the channels of Test_ComMUser_0 in Full communication mode
        when simulated dwake-up indication for channels of Test_ComMUser_0.
    08: Simulate a Prepare bus sleep indication for all channels linked to
        Test_ComMUser_0.
    09: Clear the BusSm Request count.
    10: Call ComM_MainFunction of corresponding channel until ComM requests
        SILENT_COM mode to the corresponding state managers for all channels
        linked to Test_ComMUser_0.
    11: VP (ComM.SWS_ComM_00071, ComM.EB.SWS_ComM_00110):
        - The Requested mode of CanSM is COMM_SILENT_COMMUNICATION.
        - The Requested mode of FrSM is COMM_SILENT_COMMUNICATION.
    12: VP (ComM.ASR403.SWS_ComM_00872):
        - The current state of ComM channel is COMM_SILENT_COM using
        the API ComM_GetState.
    13: VP (ComM.ASR403.SWS_ComM_00079):
        - The current mode of ComM channel is
        COMM_SILENT_COMMUNICATION using the API ComM_GetCurrentComMode.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>756</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00872</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1892</internalId></specobject>
    <specobject>
      <id>TS_COMM_30007_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>858</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM_GetMaxComMode functionality under several conditions.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01. Simulate the reset of the ComM module to reset the stub counters and
        indication flags.
    02. Initialize ComM
    03. Clear the inhibition status of all channels.
    04. Set ComM_CommunicationAllowed to false for all the channels of
        Test_ComMUser_0.
    05. Call MainFunction for all the channels of Test_ComMUser_0
    06. VP (ComM.ASR403.SWS_ComM_00085, ComM.SWS_ComM_00871, ComM.SWS_ComM_00885):
        Verify the maximum possible communication mode using the API
        ComM_GetMaxComMode as COMM_NO_COMMUNICATION.
    07. Set ComM_CommunicationAllowed to true for all the channels of
        Test_ComMUser_0.
    08. Set flag 'LimitToNoCom' for channel-0 by calling ComM_LimitChannelToNoComMode().
    09. VP (ComM.ASR403.SWS_ComM_00085, ComM.SWS_ComM_00796):
        Verify the maximum possible communication mode using the API
        ComM_GetMaxComMode as COMM_NO_COMMUNICATION.
    10. Lift the mode limitation
    11. Prevent wakeup for channel-0.
    12. VP (ComM.ASR403.SWS_ComM_00085, ComM.SWS_ComM_00796):
        Verify the maximum possible communication mode using the API
        ComM_GetMaxComMode as COMM_NO_COMMUNICATION.
    13. Lift the wakeup inhibition
    14. VP (ComM.ASR403.SWS_ComM_00085, ComM.SWS_ComM_00796):
        Verify the maximum possible communication mode using the API
        ComM_GetMaxComMode as COMM_FULL_COMMUNICATION
    15. Bring the channel-0 in state Full Communication:
        * Call ComM_DCM_ActiveDiagnostic() for channel-0
        * Invoke ComM_MainFunction_0()
    16. Set ComM_CommunicationAllowed to false for channel-0
    17. VP (ComM.ASR403.SWS_ComM_00085, ComM.SWS_ComM_00796):
        Verify the maximum possible communication mode using the API
        ComM_GetMaxComMode as COMM_FULL_COMMUNICATION
    18. Set ComM_CommunicationAllowed to true for channel-0
    19. Set flag 'LimitToNoCom' for channel-0 by calling ComM_LimitChannelToNoComMode().
    20. VP (ComM.ASR403.SWS_ComM_00085, ComM.SWS_ComM_00796):
        Verify the maximum possible communication mode using the API
        ComM_GetMaxComMode as COMM_FULL_COMMUNICATION
    21. Lift the mode limitation.
    22. Prevent wakeup for channel-0.
    23. VP (ComM.ASR403.SWS_ComM_00085, ComM.SWS_ComM_00796):
        Verify the maximum possible communication mode using the API
        ComM_GetMaxComMode as COMM_FULL_COMMUNICATION
    24. Lift the wakeup inhibition
    25. VP (ComM.ASR403.SWS_ComM_00085, ComM.SWS_ComM_00796):
        Verify the maximum possible communication mode using the API
        ComM_GetMaxComMode as COMM_FULL_COMMUNICATION
    26. Bring the channel-0 in state Silent Communication:
        * Call ComM_DCM_InactiveDiagnostic() for channel-0
        * Simulate Nm PrepareBusSleep mode
        * Invoke ComM_MainFunction_0()
    27. Set ComM_CommunicationAllowed to false for channel-0
    28. VP (ComM.ASR403.SWS_ComM_00085, ComM.SWS_ComM_00796):
        Verify the maximum possible communication mode using the API
        ComM_GetMaxComMode as COMM_FULL_COMMUNICATION
    29. Set ComM_CommunicationAllowed to true for channel-0
    30. Set flag 'LimitToNoCom' for channel-0 by calling ComM_LimitChannelToNoComMode().
    31. VP (ComM.ASR403.SWS_ComM_00085, ComM.SWS_ComM_00796):
        Verify the maximum possible communication mode using the API
        ComM_GetMaxComMode as COMM_SILENT_COMMUNICATION
    32. Lift the mode limitation.
    33. Prevent wakeup for channel-0.
    34. VP (ComM.ASR403.SWS_ComM_00085, ComM.SWS_ComM_00796):
        Verify the maximum possible communication mode using the API
        ComM_GetMaxComMode as COMM_SILENT_COMMUNICATION
    35. Lift the wakeup inhibition
    36. VP (ComM.ASR403.SWS_ComM_00085, ComM.SWS_ComM_00796):
        Verify the maximum possible communication mode using the API
        ComM_GetMaxComMode as COMM_FULL_COMMUNICATION
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00871</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00885</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00796</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1893</internalId></specobject>
    <specobject>
      <id>TS_COMM_30007_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>1118</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM_GetMaxComMode functionality under several conditions.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01. Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02. Initialize the ComM module.
    03. Clear inhibition status of all channels.
    04. Disallow Communication for all channels of the user
        Test_ComMUser_0.
    05. Call MainFunction for all channels of Test_ComMUser_0
    06. VP (ComM.ASR403.SWS_ComM_00085):
        - ComM_GetMaxComMode for Test_ComMUser_0 returns
          COMM_NO_COMMUNICATION.
    07. Set ComM_CommunicationAllowed to true for all channels of
        Test_ComMUser_0.
    08. Enable wake-up inhibition on ComMChannel_0.
    09. VP (ComM.ASR403.SWS_ComM_00085):
        - ComM_GetMaxComMode for Test_ComMUser_0 returns
          COMM_NO_COMMUNICATION.
    10. Disable wake-up inhibition on ComMChannel_0.
    11. VP (ComM.ASR403.SWS_ComM_00085):
        - ComM_GetMaxComMode() returns the maximum possible
          communication mode as COMM_FULL_COMMUNICATION.
    12. Bring all channels of the Test_ComMUser_0 in state Full Communication:
        - Call ComM_RequestComMode() for each channel
        - Invoke ComM_MainFunction() for the channel
    13. Enable mode limitation on ComMChannel_0.
    14. Simulate Nm_BusSleepMode indication on ComMChannel_0 and
        invoke main function of the channel.
    15. VP (ComM.ASR403.SWS_ComM_00085, ComM.ECUC_ComM_00569):
        - ComM_GetMaxComMode() returns the maximum possible
          communication mode as COMM_NO_COMMUNICATION.
    16. Disable mode limitation on ComMChannel_0.
    17. Enable wake-up inhibition on ComMChannel_0.
    18. VP (ComM.ASR403.SWS_ComM_00085):
        - ComM_GetMaxComMode() returns the maximum possible
          communication mode as COMM_NO_COMMUNICATION
    19. Disable wake-up inhibition on ComMChannel_0.
    20. VP (ComM.ASR403.SWS_ComM_00085):
        - ComM_GetMaxComMode() returns the maximum possible
          communication mode as COMM_FULL_COMMUNICATION
    21. Bring ComMChannel_0 in state Full Communication:
        * Call ComM_DCM_InactiveDiagnostic() for ComMChannel_0
        * Simulate Nm_NetworkMode indication on ComMChannel_0
        * Invoke ComM_MainFunction_0()
    22. Enable mode limitation on ComMChannel_0.
    23. VP (ComM.ASR403.SWS_ComM_00085):
        - ComM_GetMaxComMode() returns the maximum possible
          communication mode as COMM_FULL_COMMUNICATION
    24. Disable mode limitation on ComMChannel_0.
    25. Enable wakeup inhibition on ComMChannel_0.
    26. VP (ComM.ASR403.SWS_ComM_00085, ComM.ECUC_ComM_00569):
        - ComM_GetMaxComMode() returns the maximum possible
          communication mode as COMM_NO_COMMUNICATION
    27. Disable wakeup inhibition on ComMChannel_0.
    28. VP (ComM.ASR403.SWS_ComM_00085):
        - ComM_GetMaxComMode() returns the maximum possible
          communication mode as COMM_FULL_COMMUNICATION
    29. Bring the ComMChannel_0 in state Silent Communication:
        * Call ComM_DCM_InactiveDiagnostic() for ComMChannel_0
        * Simulate Nm PrepareBusSleep mode
        * Invoke ComM_MainFunction_0()
    30. VP (ComM.ASR403.SWS_ComM_00085):
        - ComM_GetMaxComMode() returns the maximum possible
          communication mode as COMM_FULL_COMMUNICATION
    31. Enable wakeup inhibition on ComMChannel_0.
    32. VP (ComM.ASR403.SWS_ComM_00085):
        - ComM_GetMaxComMode() returns the maximum possible
          communication mode as COMM_SILENT_COMMUNICATION
    33. Disable wakeup inhibition on ComMChannel_0.
    34. VP (ComM.ASR403.SWS_ComM_00085):
        - ComM_GetMaxComMode() returns the maximum possible
          communication mode as COMM_FULL_COMMUNICATION
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00569</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1894</internalId></specobject>
    <specobject>
      <id>TS_COMM_NoComToFullCom_ActiveDiag</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>1368</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM when an Active diagnostic indication occurs
    on channels with different values for parameter 'ComMNmVariant'.
  
Test Object: None.
Test Precondition: 
    Module state:
    - Module is initialized
    - Communication is not allowed
    Important test configuration details:
    - ComMUser_0 has ComMChannels of ComMNmVariant "FULL"
    - ComMUser_1 has ComMChannels of ComMNmVariant "LIGHT"
    - ComMUser_3 has ComMChannels of ComMNmVariant "NONE"
    - ComMChannel_5 has ComMNmVariant "PASSIVE"
  
Test Execution: 
    01: Initialize test case.
        - Reset stub invocation counts.
        - Initialize call out functions.
        - Initialize ComM.
        - Clear inhibition status.
    02: Simulate (ComM.SWS_ComM_00873) Active diagnostic indication for all
        the channels (= 11) and invoke main functions of all channels.
    03: VP(ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_DCM_NO_COM_NO_PENDING_REQUEST_1,
           ComM.EB_Ref.SWS_ComM_00866.NmVariant.FULL, ComM.EB_Ref.SWS_ComM_00866.NmVariant.LIGHT, ComM.EB_Ref.SWS_ComM_00866.NmVariant.NONE,
           ComM.EB_Ref.SWS_ComM_00876.NmVariant.FULL, ComM.EB_Ref.SWS_ComM_00876.NmVariant.LIGHT, ComM.EB_Ref.SWS_ComM_00876.NmVariant.NONE):
        - Current state of all channels except PASSIVE channel is
        COMM_NO_COM_REQUEST_PENDING since diagnostic indication on PASSIVE
        channels are ignored.
    04: Allow communication for all channels
    05: Invoke main functions of all channels of all NmVariants and ensure the
        following calls:
        - VP (ComM.SWS_ComM_00870):
          Nm_NetworkRequest is called for channels with ComMNmVariant = FULL
        - VP (ComM.EB_Ref.SWS_ComM_00602.NmVariant.LIGHT, ComM.EB_Ref.SWS_ComM_00602.NmVariant.NONE):
          No Nm_NetworkRequest / Nm_PassiveStartUp is called for
          channels with ComMNmVariant = PASSIVE / LIGHT / NONE
    06: Simulate Network mode indication for required channels and invoke the
        corresponding main function of the channels until FULL_COM mode state
        transition occurs and Dcm is notified.
    07: VP (ComM.SWS_ComM_00161):
        - Ensure that the current state of all channels (except channel with
        ComMNmVariant=PASSIVE) is COMM_FULL_COM_NETWORK_REQUESTED
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00876.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00876.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00876.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_DCM_NO_COM_NO_PENDING_REQUEST_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1726</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00870</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00866.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00866.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00866.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00873</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>574</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>575</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1895</internalId></specobject>
    <specobject>
      <id>TS_COMM_30017</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>1554</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM transition from FULL_COM - SILENT_COM -
    FULL_COM, through an inactive diagnostic indication and user request
    FULL_COM when ComM_Nm_Variant is FULL.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    Verify the behaviour of ComM for an Inactive diagnostic indication while
    ComM is in FULL_COM:

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSm stub.
    03: Initialize ComM.
    04: Clear the inhibition status of all channels.
    05: VP (ComM.SWS_ComM_00871):
        Set ComM_CommunicationAllowed to false.
    06: Call ComM_MainFunction().
    07: Simulate an Active diagnostic indication.
        (Test helper function This function Test_DcmNoComToFullComMode
        simulates Active diagnostic indication and makes all channels linked
        to User to Full ComMode and returns E_OK if successful).
    08: Verify the current mode of the user Test_ComMUser_0 is
        COMM_NO_COMMUNICATION using the API ComM_GetCurrentComMode.
    09: Verify the current state of all channel is COMM_NO_COM_REQUEST_PENDING
        using the API ComM_GetState.
    10: VP (ComM.SWS_ComM_00871):
        Call ComM_CommunicationAllowed() for making the communication allowed
        for all channels.
    11: Call ComM_MainFunction() for user Test_ComMUser_0.
    12: Simulate an Active diagnostic indication.
        (Test helper function This function Test_DcmNoComToFullComMode
        simulates active diagnostic indication and makes all channels linked to
        User to Full ComMode and returns E_OK if successful).
    13: a.Verify the current mode of channel is COMM_FULL_COMMUNICATION using
        the API ComM_GetCurrentComMode.
        b. VP (ComM.EB.Dsn.StateDynamics.TOPNotifyTransition_2).
    14: VP (ComM.SWS_ComM_00874):
        - Call an Inactive diagnostic indication for all channels of the
        user Test_ComMUser_0.
    15: Call the main functions of all the channels linked to Test_ComMUser_0
        until Network Release is called.
    16: Simulate prepare bus sleep mode for all channels.
    17: Reset CanSM and FrSM stub counts.
    18: Call the main functions of all the channels linked to Test_ComMUser_0
        until all channels reach COMM_SILENT_COMMUNICATION.
    19: VP (ComM.ASR403.SWS_ComM_00854):
        - The CanSM and FrSM requested mode is
        COMM_SILENT_COMMUNICATION.
    20: Check DCM is notified as all the channels are in Silent ComMode.
    21: VP (ComM.ASR403.SWS_ComM_00299):
        - The current mode of the user Test_ComMUser_0
        is COMM_SILENT_COMMUNICATION.
    22: Reset all the stub counters.
    23: Request Full ComMode for the user Test_ComMUser_0 .
    24: Call the main functions of all the channels linked to Test_ComMUser_0
        until Network Request is called.
    25: CanSm_RequestComMode, FrSM_RequestComMode and EthSM_RequestComMode
        shall be called.
    26: VP (ComM.SWS_ComM_00877):
        - The request ComMode is COMM_FULL_COMMUNICATION
        for CanSm, FrSM and EthSM.
    27: Simulate network mode for all channels of the user Test_ComMUser_0.
    28: Call the main functions of all the channels linked to Test_ComMUser_0
        until all channels reach FULL_COM.
    29: Verify that Dcm_ComM_FullComModeEntered() is invoked.
    30: VP (ComM.SWS_ComM_00861, ComM.EB.Dsn.StateDynamics.TOPNotifyTransition_0):
        - BswM_ComM_CurrentMode() is invoked.
    31: VP (ComM.SWS_ComM_00895, ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_SILENT_COMMUNICATION_1):
        - The current state of channel-2 (Can channel) &amp; channel-3
        (Fr channel) is in COMM_FULL_COMMUNICATION.
    32: Request No Communication for Test_ComMUser_0.
    33: Simulate Bus sleep mode for channel-2 and invoke main function for the
        channel 2.
    34: VP: (ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_FULL_COMMUNICATION):
        Verify that the channel-2 enters COMM_NO_COMMUNICATION state.
    35: VP (ComM.SWS_ComM_00976):
         - The notification to BswM with network / channel id as 2.
    36: Simulate Bus sleep mode for channel-3 and invoke main function for the
        channel 3
    37: VP:
        Verify that the channel-3 enters NO_COM state
    38: VP (ComM.SWS_ComM_00976):
         - The notification to BswM with network / channel id as 3.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00874</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00299</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00877</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_SILENT_COMMUNICATION_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1753</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00871</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00861</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TOPNotifyTransition_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1781</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00895</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_FULL_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1751</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00854</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00976</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TOPNotifyTransition_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1783</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1896</internalId></specobject>
    <specobject>
      <id>TS_COMM_30018</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>1909</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM in FULL_COM when a bus sleep
    indication occurs and when the ComM_Nm_Variant is FULL.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSm stub.
    03: Initialize ComM.
    04: Clear the inhibition status of all channels.
    05: Set ComM_CommunicationAllowed to TRUE for all the channels.
    06: Simulate an Active diagnostic indication.
        (This function should simulate Active diagnostic indication
        and should make all channels linked to User to Full ComMode returns
        E_OK if successful).
    07: Simulate an Inactive diagnostic indication.
    08: VP (ComM.ASR403.ECUC_ComM_00556):
        - Call the main functions of all the channels linked to Test_ComMUser_0
        until Network Release is called.
    09: VP (ComM.SWS_ComM_00392):
        - Simulate an Bus Sleep indication mode by calling
        ComM_Nm_BusSleepMode().
    10: VP (ComM.SWS_ComM_00637):
        - Call the main functions of all the channels linked to
        Test_ComMUser_0 until No ComMode state transition occurs from Full
        ComMode.
    11: Check DCM is notified as all the channels are in No ComMode.

  
Test Input: None.
Test Output: 
    The behaviour of ComM for an Bus Sleep indication while ComM is in FULL_COM:
    Transition occurs and the mode changes from Full ComMode to No ComMode.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00637</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00392</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00556</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1897</internalId></specobject>
    <specobject>
      <id>TS_COMM_30019</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>2051</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM in No ComMode when a user requests FULL_COM
    and ComMNmVariant is LIGHT.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Reset stub invocation counts.
    02: Initialize CanSM stub.
    03: Initialize ComM.
    04: Clear inhibition status.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_1.
    06: Request Full communication for Test_ComMUser_1.
    07: VP (ComM.ASR403.SWS_ComM_00429):
        - Call the main functions of all the channels linked to Test_ComMUser_1
        until the mode becomes FULL_COM (Network requested).
    08. Verify that CanSM_RequestComMode is invoked.
    09. VP (ComM.ECUC_ComM_00557):
        - Verify that the Requested ComM mode is COMM_FULL_COMMUNICATION.
    10. Call main functions of all channels of Test_ComMUser_1 until ComM in
        Full communication mode.
    11. Verify that Nm_NetworkRequest is not called.
    12: Request No communication for Test_ComMUser_1.
    13: Clear CanSM and EthSM request ComMode stub count.
    14: VP (ComM.ECUC_ComM_00606):
        Wait until state duration extension expires.
    15: Call the main functions of all the channels linked to Test_ComMUser_1
        after timeout occurs for transition to Full ComMode (Ready Sleep).
    16: VP (ComM.EB_Ref.SWS_ComM_00886.NmVariant.LIGHT, ComM.EB_Ref.SWS_ComM_00889.NmVariant.LIGHT, ComM.EB.Dsn.StateDynamics.TIMEOUT_NO_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_1):
        - The current state is COMM_FULL_COM_READY_SLEEP.
    17: Verify that Nm_NetworkRelease is not called during transition.
    18: VP (ComM.ECUC_ComM_00606):
        Wait Until Light Duration time out.
    19: Call the main functions of all the channels linked to
        Test_ComMUser_1 after a LIGHT timeout occurs to verify that all
        channels linked to Test_ComMUser_1 are moved to NO_COM.
    20: Verify that CanSM/EthSM_RequestComMode has been invoked.
    21: VP (ComM.SWS_ComM_00610, ComM.EB.Dsn.StateDynamics.TIMEOUT_FULL_COM_READY_SLEEP_0):
        - The current mode is COMM_NO_COMMUNICATION.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00429</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00610</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00889.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00886.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00557</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00606</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TIMEOUT_FULL_COM_READY_SLEEP_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1749</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TIMEOUT_NO_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1742</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1898</internalId></specobject>
    <specobject>
      <id>TS_COMM_ComMNmCbkInd_forPassiveCh</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>2218</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    To test the behavior of ComM when ComMNmVariant is PASSIVE and
    Nm callbacks (ComM_Nm*() API's) are invoked.
  
Test Object: None.
Test Precondition: 
    ComMNmVariant of channel 5 is PASSIVE.
  
Test Execution: 
    Note: After each Nm callback (ComM_Nm*()) the corresponding mainfuntion
    of the channel (here ComM_MainFunction_5()) should be invoked.

    01. Reset stub counts, initialize ComM &amp; callout functions.
    02. VP (ComM.SWS_ComM_00871):
        Simulate Communication allowed to FALSE for channel-5
    03. Invoke main function of ch-5.
    04. Simulate Nm restart indication for ch-5
    05. VP: (ComM.SWS_ComM_00792, ComM.SWS_ComM_00894, ComM.SWS_ComM_00885, ComM.SWS_ComM_00895,ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_1)
        a) Verify that BusSM is not requested as Communication is not allowed.
        b) verify the current state of the channel is COMM_NO_COM_REQUEST_PENDING
    06. VP (ComM.SWS_ComM_00871):
        Simulate Communication allowed to TRUE for channel-5
    07. Invoke main function of ch-5.
    08. VP: (ComM.SWS_ComM_00895, ComM.SWS_ComM_00902):
        a) Verify that Nm_PassiveStartup() is called as Communication is allowed.
        b) Verify that BusSM is requested as Communication is allowed.
    09. Simulate Nm Network mode indication for ch-5
    10. VP: (ComM.EB_Ref.SWS_ComM_00890.COMM_FULL_COM_READY_SLEEP, ComM.SWS_ComM_00390, ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_1, ComM.EB_Ref.SWS_ComM_00915.NmVariant.PASSIVE)
        Verify that the channel entered into COMM_FULL_COM_READY_SLEEP state.
    11. Simulate Prepare bus sleep mode indication for ch-5
    12. VP:
        a) verify that BusSm is requested
        b) verify that the channel entered into COMM_SILENT_COM state
    13. Simulate Bus sleep mode indication for ch-5
    14. VP:
        a) verify that BusSm is requested
        b) verify that the channel entered into COMM_NO_COM_NO_PENDING_REQUEST
           state
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00792</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00390</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00894</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1728</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00890.COMM_FULL_COM_READY_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00902</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00871</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00885</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00895</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1744</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00915.NmVariant.PASSIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>569</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1899</internalId></specobject>
    <specobject>
      <id>TS_COMM_30021</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>2386</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM in Silent communication mode
    and Network Mode Indication, when the ComMNmVariant is FULL.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    Verify the behaviour of ComM is in Silent ComMode and a Network indication
    is received:

    01: Initialize the CanSM stub.
    02: Initialize the ComM module.
    03: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    04: Clear inhibition status.
    05: Set ComM Communication Allowed to false for all the channels of the
        user Test_ComMUser_0.
    06: Call main functions of all channels of Test_ComMUser_0.
    07: Request Full ComMode for the user Test_ComMUser_0 .
    08: Verify that the current mode of channel using the API
        ComM_GetCurrentComMode is NO_COM.
    09: Verify that the current state of all the channels of the user
        Test_ComMUser_0 using the API ComM_GetState is
        COMM_NO_COM_REQUEST_PENDING.
    10: VP (ComM.SWS_ComM_00896, ComM.SWS_ComM_00871):
        - Set ComM_CommunicationAllowed to true for all the channels of
        the user Test_ComMUser_0.
    11: Call main functions of all channels of Test_ComMUser_0.
    12: Request Full ComMode for the user Test_ComMUser_0.
    13: Verify that the current mode of channel using the API
        ComM_GetCurrentComMode is COMM_FULL_COMMUNICATION.
    14: Request No ComMode for the user Test_ComMUser_0.
    15: 15.a VP (ComM.SWS_ComM_00133):
        - Call the main functions of all the channels linked to Test_ComMUser_0
        until Network Release is called.
        15.b VP:(ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_FULL_COM_NETWORK_REQUESTED_PENDING_0):
        - Verify state machine is in Ready Sleep State
    16: Simulate the Prepare bus sleep mode indication for all channels of
        Test_ComMUser_0;
    17: Reset CanSM/FrSM_RequestComMode stub count.
    18: Call main functions of all channels of Test_ComMUser_0 until ComM
        requests Silent communication mode to the corresponding bus state
        manager.
    19: VP (ComM.SWS_ComM_00071):
        - The request ComM mode is COMM_SILENT_COMMUNICATION for
        CanSM and FrSM.
    20: Verify that the current mode is COMM_SILENT_COMMUNICATION by calling
        ComM_GetCurrentComMode.
    21: VP (ComM.SWS_ComM_00871):
        - Set ComM_CommunicationAllowed to false for all the channels of the
        user Test_ComMUser_0.
    22: Call main functions of all channels of Test_ComMUser_0.
    23: Simulate network mode for all channels.
    24: Reset CanSM/FrSM_RequestComMode stub count.
    25: Call main functions of all channels of Test_ComMUser_0 until ComM
        requests Full communication mode to the corresponding bus state
        manager.
    26: Verify that the request ComM mode is COMM_FULL_COMMUNICATION for CanSM
        and FrSM.
    27: VP (ComM.SWS_ComM_00296):
        - The current mode is COMM_FULL_COMMUNICATION by calling
        ComM_GetCurrentComMode.
    28: VP (ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_SILENT_COMMUNICATION_0):
        - The current state is COMM_FULL_COM_READY_SLEEP.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00296</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_SILENT_COMMUNICATION_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1754</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00871</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00896</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_FULL_COM_NETWORK_REQUESTED_PENDING_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1747</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1900</internalId></specobject>
    <specobject>
      <id>TS_COMM_30022</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>2657</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM in No communication mode and user request
    FULL communication, when the ComM_Nm_Variant is NONE and BusType of one
    channel is COMM_BUS_TYPE_INTERNAL.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.
    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSM stub.
    03: Initialize ComM.
    04: Clear inhintion status of all channels and make all the channels of
        Test_ComMUser_3 in No communication mode.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_3.
    06: Request Full ComMode for the user Test_ComMUser_3.
    07: Call ComM_MainFunction of corresponding channel until Full ComMode
        reached.
    08: Verify Nm_NetworkRequest is not called for all channels linked to
        Test_ComMUser_3.
    09: Verify that BusSm is called once since one channel of
        Test_ComMUser_3 is configured as BusType - INTERNAL.
    10: Verify that the requested ComMode is COMM_FULL_COMMUNICATION.
    11: Wait Until State Duration time out.
    12: Request No Communication for Test_ComMUser_3.
    13: Call main functions of all channels of Test_ComMUser_0.
    14: VP (ComM.EB_Ref.SWS_ComM_00889.NmVariant.NONE, ComM.NoCommunication, ComM.SWS_ComM_00671):
         - The current ComMode is COMM_NO_COMMUNICATION.
    15: VP (ComM.SWS_ComM_00664):
         - BusSm has not been called for channels of Test_ComMUser_3
           which is configured as BusType - INTERNAL.
    16: Verify that Nm_NetworkRelease is not called.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00671</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00664</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.NoCommunication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>606</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00889.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1901</internalId></specobject>
    <specobject>
      <id>TS_COMM_30024</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>2797</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM transition from No ComMode - Full ComMode
    (Network Request) - Full ComMode (Ready Sleep) - Full ComMode (Network
    Request) - No ComMode, through user request Full ComMode and No ComMode
    when ComM_Nm_Variant is LIGHT.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSM stub.
    03: Initialize ComM module.
    04: Clear inhibition status and make all the channels of Test_ComMUser_1
        in No communication mode.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_1.
    06: Request Full communication for Test_ComMUser_1.
    07: VP (ComM.ASR403.SWS_ComM_00429):
        - Call the main functions of all the channels linked to Test_ComMUser_1
        until the mode becomes Full ComMode (Network requested).
    08: Wait Until State Duration time out.
    09: VP (ComM.ASR403.SWS_ComM_00429):
        - Call main functions of all channels of Test_ComMUser_1 until ComM in
        Full communication mode.
    10: Verify Nm_NetworkRequest is not called.
    11: VP (ComM.SWS_ComM_00402):
        - The CanSM Requested mode is COMM_FULL_COMMUNICATION.
    12: Request No communication for Test_ComMUser_1.
    13: VP (ComM.ASR403.SWS_ComM_00429):
        - Call main functions of all channels of Test_ComMUser_1 before
        completing the LIGHT timeout to initiate a User request Full ComMode.
    14: Request Full communication for Test_ComMUser_1.
    15: VP (ComM.ASR403.SWS_ComM_00429):
        - Call the main functions of all the channels linked to Test_ComMUser_1
        until the mode becomes Network requested.
    16: Verify that the current ComM mode is COMM_FULL_COMMUNICATION.
    17: Request No communication for Test_ComMUser_1.
    18: Wait until state duration extension expires.
    19: VP (ComM.ASR403.SWS_ComM_00429):
        - Call main functions of all channels of Test_ComMUser_1.
    20: Check whether Nm_NetworkRelease is called.
    21: Wait Until Light Duration time out.
    22: VP (ComM.ASR403.SWS_ComM_00429):
        - Call main functions of all channels of Test_ComMUser_1.
    23: VP (ComM.SWS_ComM_00610):
        - The current ComM mode is COMM_NO_COMMUNICATION.

  
Test Input: None.
Test Output: 
    The behaviour of ComM for a Full communication request while ComM is in
    different modes:
    In No communication mode
    All channels linked to Test_ComMUser_1 are moved to No communication mode.
    A transition occurs from No communication mode to Network requested mode.
    During the transition Nm_NetworkRequest should not be called.

    In Full ComMode (Network Request)
    All channels linked to Test_ComMUser_1 are moved to Full
    (Network requeste- ComMode.
    Before the state duration extension expires, no transition should occur.
    User request No ComMode for Test_ComMUser_1.
    All channels linked to Test_ComMUser_1 are moved to Full (Ready sleep)
    ComMode.
    During the transition Nm_NetworkRelease should not be called.

    In Full ComMode (Ready Sleep)
    User request Full ComMode for Test_ComMUser_1, before LIGHT time out
    expires.
    A transition occurs from Full communication mode (Ready Sleep to Network
    requested mode).
    During the transition Nm_NetworkRequest should not be called.
    All channels linked to Test_ComMUser_1 are moved to Full communication mode
    (Network Request).

    In Full ComMode (Network Request)
    All channels linked to Test_ComMUser_1 are moved to Full
    (Network requeste- ComMode.
    Before the state duration extension expires, no transition should occur.
    User request No ComMode for Test_ComMUser_1.
    All channels linked to Test_ComMUser_1 are moved to Full (Ready sleep)
    ComMode.
    During the transition Nm_NetworkRelease should not be called.

    In Full ComMode (Ready Sleep)
    Before the Light Duration time out expires, no transition should occur.
    A transition occurs from Full communication mode (Ready Sleep) to No
    ComMode.
    All channels linked to Test_ComMUser_1 are moved to No communication mode.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00429</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00610</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1902</internalId></specobject>
    <specobject>
      <id>TS_COMM_30028</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>3004</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of a shared channel in Full ComMode when a different
    user requests NO_COM to same channel and ComMNmVariant is FULL.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSM stub.
    03: Initialize the ComM module.
    04: Clear inihibitation status.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_0.
    06: Request the mode Full ComMode for Test_ComMUser_0.
        (The test helper function requests UserRequest Full ComMode and
        makes all channels linked to Specific User to Full ComMode and
        returns E_OK if successful).
    07: VP (ComM.SWS_ComM_00867):
        - Request No Communication for Test_ComMUser_4 shared channel
        already in Full ComMode.
    08: Call main functions of all channels of Test_ComMUser_4 to check
        NetworkRelease not called.
    09: Verify that no Nm_Network release is called.
    10: VP (ComM.SWS_ComM_00686, ComM.SWS_ComM_00867, ComM.SWS_ComM_00092):
       - The current mode of user Test_ComMUser_4
        is COMM_FULL_COMMUNICATION by calling ComM_GetCurrentComMode.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00686</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00867</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1903</internalId></specobject>
    <specobject>
      <id>TS_COMM_30029</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>3107</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM in Full communication mode transitions from
    substate Network Request to Ready Sleep and from Ready Sleep to Network
    request, the ComMNmVariant is FULL.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSM stub.
    03: Initialize ComM module.
    04: Clear inhibition status and make all the channels of Test_ComMUser_0 in
        No communication mode.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_0.
    06: VP (ComM.ASR403.SWS_ComM_00079):
        - Simulate Full ComMode for the user Test_ComMUser_0.
    07: VP (ComM.EB.SWS_ComM_00110):
        - Request No Communication for Test_ComMUser_0.
    08: VP (ComM.SWS_ComM_00133):
        - Call main functions of all channels of Test_ComMUser_0 until Network
        release is called.
    09: Request Full Communication for Test_ComMUser_0.
    10: Call main functions of all channels of Test_ComMUser_0 until Network
        request is called.
    11: Verify that current ComM mode is COMM_FULL_COMMUNICATION.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>756</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1904</internalId></specobject>
    <specobject>
      <id>TS_COMM_DiagnosticSessionOnPassiveCh</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>3238</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test motivation:
      The motivation of this test case is to verify that the bug
      scenario reported in ticket "ASCCOMM-492" does not occur.
    Bug scenario:
      When
      - a ComM channel is configured with the parameter "ComMNmVariant" set to
        "PASSIVE"
      - the channel is in "COMM_SILENT_COMMUNICATION" mode
      - Nm has not called ComM_Nm_BusSleepMode() yet and
      - a user or the Dcm requests "COMM_FULL_COMMUNICATION" for this channel
      this channel stays in the mode "COMM_SILENT_COMMUNICATION".
    Test objective:
      To verify that a Diagnosic indication is ignored on a channel configured
      with "ComMNmVariant=PASSIVE"
  
Test Object: None.
Test Precondition: 
    - ComM is initialized
    - ComMChannel_5 is configured with the parameter "ComMNmVariant"
      set to "PASSIVE"
    - Communication is allowed on the channel
  
Test Execution: 
    Note: All references of "channel" refer to ComMChannel_5.

    01: Prepare test case preconditions
        - Initialize ComM
        - Allow communication on channel
        - Invoke main function of channel
    02: Indicate Active Diagnostic session on channel
    03: Invoke main function of channel several times
    04: VP (ComM.EB.DiagnosticIndicationOnPassiveCh):
        - No state change occurs. I.e current state of the channel is
        COMM_NO_COM_NO_PENDING_REQUEST. This ensures diagnostic indication on
        a Passive channel is ignored.
    05: Simulate EcuM wake up indication on channel
    06: Invoke main function of channel
    07: Indicate Network Mode for channel and invoke channel main function
    08: Ensure channel has reached COMM_FULL_COM_READY_SLEEP state
    09: VP (ComM.EB.ComM905, ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest):
        - Nm_NetworkRequest() and Nm_NetworkRelease() has not been called
        - Nm_PassiveStartUp() is called due to EcuM wake up indication
    10: Indicate an Active Diagnostic session on channel
    11: Invoke main function of channel several times
    12: VP (ComM.EB.DiagnosticIndicationOnPassiveCh):
        - No state change occurs. I.e current state of the channel is still
        COMM_FULL_COM_READY_SLEEP. This ensures diagnostic indication on
        a Passive channel is ignored.
    13: Indicate PrepareBusSleep Mode for the channel
    14: Invoke main function of channel
    15: Ensure channel has reached to COMM_SILENT_COM state
    16: Indicate an Active Diagnostic session on channel
    17: Invoke main function of channel several times
    18: VP (ComM.EB.DiagnosticIndicationOnPassiveCh):
        - No state change occurs. I.e current state of the channel is still
          COMM_SILENT_COM. This ensures diagnostic indication on a Passive
          channel is ignored.
        - Nm_PassiveStartUp() is not called
    19: Bring down the channel to COMM_NO_COM by bus sleep mode indication
    20: Verify the channel state is COMM_NO_COM_NO_PENDING_REQUEST.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.DiagnosticIndicationOnPassiveCh</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>614</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM905</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>615</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1905</internalId></specobject>
    <specobject>
      <id>TS_COMM_30033</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>3441</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM in No communication mode
    and Network Restart Indication, when the ComM_Nm_Variant is FULL.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSM stub.
    03: Initialize ComM.
    04: Clear inhibition status for all channels and change to No
        communication.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_0.
    06: VP (ComM.SWS_ComM_00792, ComM.SWS_ComM_00261 ):
        Simulate Network Restart indication  to Full ComMode for the user
        Test_ComMUser_0.
    07: Call the main functions of all the channels linked to Test_ComMUser_2
        until the mode becomes Network requested which is Full
        communication (Ready Sleep).
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00792</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00261</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1906</internalId></specobject>
    <specobject>
      <id>TS_COMM_EcuMWkupInd_forPassiveCh</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>3539</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM during a transition from No communication to Full
    communication triggered by a Passive wakeup, when the ComMNmVariant is
    PASSIVE. (ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_WakeUpIndication)
    Also verify that on entering to state COMM_NO_COMMUNICATION and
    if configuration parameter ComMNmVariant!=FULL, the ComM module shall not
    call Nm_NetworkRelease(). (ComM.SWS_ComM_00288)
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
      - ComMChannel_5 is configured with ComMNmVariant=PASSIVE (CAN bus)
  
Test Execution: 
    Note:
    - All references of "channel" refer to ComMChannel_5

    01: Intialize test preconditions
        - Reset stub invocation counters
        - Initialize ComM
        - Initialize callout functions
        - Clear inhibition status
        - Allow communication for the channel
    02: Simulate a EcuM Wake up indication for the channel and
        invoke main function
    03: VP (ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_WakeUpIndication):
        - Nm_PassiveStartup() is called with corresponding network ID
    04: Simulate Network mode indication for the channel and
        invoke main function
    05: Channel enters COMM_FULL_COM_READY_SLEEP state
    06: Indicate bus sleep mode for the channel and invoke main function
        Note: As ComMBusType of ComMChannel_5 is CAN, and a bus sleep mode
        indication is impossible (when CanNm is in Ready Sleep) at this
        time. However it is required to verify different possibilities (for
        e.g. if the bus type is FR, then Bus sleep mode indication is possible
        at this time) with available test configuration.
    07: VP (ComM.SWS_ComM_00288):
        - Channel enters COMM_NO_COMMUNICATION state
        - Nm_NetworkRelease() is not called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_WakeUpIndication</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00288</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1907</internalId></specobject>
    <specobject>
      <id>TS_COMM_SC_FulSilFul_thruDiag</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>3642</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    To verify the behaviour of ComM, for the transitions from Full ComMode -
    Silent ComMode - Full ComMode, through active and Inactive Diagnostic
    indications when ComMNmVariant of the channel is FULL.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
    ComMChannels associated with ComMUser_0 have ComMNmVariant "FULL"
  
Test Execution: 
    Note: All references to "user" refer to Test_ComMUser_0.

    01: Initialize test case
    02: Allow communication for all the channels of user
    03: Simulate Active Diagnostic indication using
        Test_DcmNoComToFullComMode()
    04: VP (ComM.EB_Ref.SWS_ComM_00876.NmVariant.FULL, ComM.SWS_ComM_00895, ComM.EB.ComM_FULL_COM_NETWORK_REQUESTED_Transition_DcmRequest),
       (ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_1):
        - Current mode of user is COMM_FULL_COMMUNICATION
    05: Simulate InActive Diagnostic indication for user
    06: Call main function of all the channels of user
    07: Nm_NetworkRelease has been called for all the channels of user
    08: Indicate Prepare bus sleep for all the channels of user
    09: Call main functions of all channels of user
    10: VP (ComM.ASR403.SWS_ComM_00299, ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_FULL_COM_READY_SLEEP):
        - User has entered Silent Communication mode
        - Verify the requested mode to BusSM, notification to BswM &amp; Dcm
    11: Simulate Active Diagnostic indication for all the channels and invoke
        corresponding main function of channels
    12: Simulate network mode indication for all the channels and invoke
        corresponding main function of channels
    13: VP (ComM.EB_Ref.SWS_ComM_00878.NmVariant.FULL):
        - Check DCM is notified as all the channels of user.
        - Current mode is COMM_FULL_COMMUNICATION.
    14: VP (ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_SILENT_COMMUNICATION_0):
        Verify the current state is COMM_FULL_COM_NETWORK_REQUESTED.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00874</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00876.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00895</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1738</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_FULL_COM_NETWORK_REQUESTED_Transition_DcmRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>641</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_FULL_COM_READY_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1748</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00299</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00878.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_SILENT_COMMUNICATION_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1752</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1908</internalId></specobject>
    <specobject>
      <id>TS_COMM_30037</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>3823</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM_SetECUGroupClassification functionality.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Simulate the reset of the ComM module to reset the stub counters and
        indication flags Initialize the ComM module
    02: VP (ComM.EB_Ref.ASR403.SWS_ComM_00552.ComM_SetECUGroupClassification):
        - Call ComM_SetECUGroupClassification to Changes the ECU Group
        Classification status and verify that ComM_SetECUGroupClassification
        returns E_OK.
  
Test Input: None.
Test Output: 
    ECU Group Classification status should be set as specified with API
    ComM_SetECUGroupClassification returns E_OK.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00552.ComM_SetECUGroupClassification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1909</internalId></specobject>
    <specobject>
      <id>TS_COMM_30038</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>3874</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    1. To test the ComM_PreventWakeUp functionality
       Along with that the Bus wake up inhibition
    2. To test whether NvM_SetRamBlockStatus is called after
       the change of inhibition counter.
  
Test Object: None.
Test Precondition: 
    The channels of Test_ComMUser_4 are of Bus type CAN and ComMNmVariant FULL.
  
Test Execution: 
    01. Simulate the reset of the ComM module to reset the stub counters and
        indication flags
    02. Initialize the ComM module
    03. Set ComM_CommunicationAllowed to TRUE for all the channels.
    04. Call ComM_PreventWakeUp of corresponding channel with status "TRUE"
        to switch on wake up inhibition
    05. Repeat the call to ComM_PreventWakeUp of corresponding channel with status "TRUE"
    06. VP (ComM.SWS_ComM_00157, ComM.ASR403.SWS_ComM_00156, ComM.EB_Ref.ASR403.SWS_ComM_00103.NvM_SetRamBlockStatus):
        * Verify the ComM_PreventWakeUp returns E_OK
        * Verify NvM_SetRamBlockStatus is invoked once for each channel which is configured to store
          its data in NvM with the configured
          NvM blockId since inhibition status has been changed after the call of
          ComM_PreventWakeUp.
          For the second call to ComM_PreventWakeUp(), ComM shall not write to NvM because the data
          does not change.
    07. VP (ComM.EB_Ref.SWS_ComM_00218.NOCOM):
        * Request the mode Full communication using the API ComM_RequestComMode
        for Test_ComMUser_0, Test_ComMUser_1, Test_ComMUser_2, and Test_ComMUser_3 and check the
        return value is COMM_E_MODE_LIMITATION.
    08. VP (ComM.SWS_ComM_00138):
        * Call ComM_ReadInhibitCounter to get amount of rejected "Full Communication" request
    09. VP (ComM.EB_Ref.SWS_ComM_00218.NOCOM, ComM.EB_Ref.SWS_ComM_00140.NvM_SetRamBlockStatus, ComM.SWS_ComM_00301, ComM.SWS_ComM_00302):
        * Verify ComM_ReadInhibitCounter returns E_OK.
        * Verify the correct value of the inhibition counter.
        * Verify the NvM was called to store the inhibition counter
    10. Call main functions of all channels, simulate Nm Network mode indication and check that
        neither Nm_NetworkRequest() was called nor a mode was requested from the relevant Bus State
        Manager modules.
    11  Request "NoCommunication" for using the API ComM_RequestComMode
        for Test_ComMUser_0, Test_ComMUser_1, Test_ComMUser_2, and Test_ComMUser_3
    12. Invoke ComM_DCM_ActiveDiagnostic() for all channels of Test_ComMUser_4.
    13. Invoke Mainfunction of all channels.
    14. Invoke ComM_DCM_InactiveDiagnostic() for all channels of Test_ComMUser_4.
    15. Simulate Nm PrepareBusSleepMode for all channels of Test_ComMUser_4.
    16. Verify the current state of all channels of Test_ComMUser_4. is COMM_SILENT_COM.
    17. VP (ComM.EB_Ref.SWS_ComM_00218.SILENTCOM):
        Request the mode Full communication using the API ComM_RequestComMode for Test_ComMUser_4
        and check the return value is COMM_E_MODE_LIMITATION.
    18. VP (ComM.SWS_ComM_00138):
        * Call ComM_ReadInhibitCounter to get amount of rejected "Full Communication" request
    19. VP (ComM.EB_Ref.SWS_ComM_00218.SILENTCOM):
        * Verify ComM_ReadInhibitCounter returns E_OK.
        * Verify the correct value of the inhibition counter.
    20. Invoke all channel main functions and verify, the state of all channels of Test_ComMUser_4
        is still COMM_SILENT_COM.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00302</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00301</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00218.NOCOM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00218.SILENTCOM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00789</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00140.NvM_SetRamBlockStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00157</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00103.NvM_SetRamBlockStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1910</internalId></specobject>
    <specobject>
      <id>TS_COMM_30039</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>4183</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM_LimitChannelToNoComMode, ComM_ReadInhibitCounter and
    ComM_ResetInhibitCounter functionality.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Simulate the reset of the ComM module to reset the stub counters and
        indication flags.
    02: Initialize CanSm stub.
    03: Initialize the ComM module
    04: Clear inhibition status.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_0.
    06: Simulate Full ComMode for Test_ComMUser_0.
    07: VP (ComM.ASR403.SWS_ComM_00108, ComM.SWS_ComM_00301):
        Call ComM_ResetInhibitCounter to reset the inhibition
        counter and check that the function returns E_OK.
    08: VP (ComM.ASR403.SWS_ComM_00163):
        - Call ComM_LimitChannelToNoComMode of corresponding channel with status
        "TRUE" to Limit channel 1 to "No Communication" enabled and verify that
        the function returns E_OK.
    09: Call main functions of all channels of Test_ComMUser_0.
    10: Call ComM_GetInhibitionStatus with channel to get inhibition Status and
        check that the return value is E_OK.
    11. Verify that the inhibition status of channel is set for limitation to
        "No Communication" mode active.
    12. Check whether Nm_NetworkRelease is called.
    13: Request the mode Full communication using the API ComM_RequestComMode
        for Test_ComMUser_0.
    14: VP (ComM.ASR403.SWS_ComM_00224, ComM.SWS_ComM_00143, ComM.SWS_ComM_00215):
        Call ComM_ReadInhibitCounter to get inhibition counter value and check
        that the return value is E_OK.
    15: Verify the inhibition counter value.
    16: Simulate active diagnostics to check for channels of Test_ComMUser_0
        Network is requested.
    17: Call MainFunction for all channels.
    18: Verify Nm_NetworkRequest is called.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00301</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1911</internalId></specobject>
    <specobject>
      <id>TS_COMM_30040</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>4340</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM_LimitECUToNoComMode, ComM_ReadInhibitCounter,
    ComM_GetInhibitionStatus and ComM_ResetInhibitCounter functionality
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Simulate the reset of the ComM module to reset the stub counters and
        indication flags.
    02: Initialize the ComM module.
    03: Clear inhibition status.
    04: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_0.
    05: Simulate Full ComMode for Test_ComMUser_0.
    06: VP (ComM.ASR403.SWS_ComM_00108):
        - Call ComM_ResetInhibitCounter to reset the inhibition
        counter and verify that ComM_ResetInhibitCounter returns E_OK.
    07: VP (ComM.ASR403.SWS_ComM_00124):
        - Call ComM_LimitECUToNoComMode for all channels with status "TRUE" to
        Limit all channels to "No Communication" enabled and verify that
        ComM_LimitECUToNoComMode returns E_OK.
    08: Call MainFunction of all the channels of Test_ComMUser_0.
    09: VP (ComM.EB_Ref.SWS_ComM_00890.COMM_FULL_COM_READY_SLEEP and ComM.SWS_ComM_00133):
        - Verify that Nm_NetworkRelease is called the number of times equal to
        the total number of channels for user Test_ComMUser_0.
    10: Request Full Communication for Test_ComMUser_0 and verify the return
        value as TEST_COMM_E_MODE_LIMITATION
    11: VP (ComM.ASR403.SWS_ComM_00224):
        - Call ComM_ReadInhibitCounter and verify the return value as E_OK.
    12: Verify the inibition counter value equal to the
        total number of channels for user Test_ComMUser_0.
    13: Call ComM_LimitECUToNoComMode for all channels with status "FALSE" to
        Limit all channels to "No Communication" disabled.
    14: Request the mode Full communication using the API ComM_RequestComMode
        for Test_ComMUser_0.
    15: Call MainFunction of all the channels of Test_ComMUser_0.
    16: Verify Nm_NetworkRequest is called the number of times equal to the
        total number of channels for user Test_ComMUser_0.
    17: Call ComM_SetECUGroupClassification with status '0' as to clear
        ECUGroupClassification status.
    18: VP (ComM.ASR403.SWS_ComM_00124) :
        - Call ComM_LimitECUToNoComMode with status true and verify that
        ComM_LimitECUToNoComMode returns E_NOT_OK.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00890.COMM_FULL_COM_READY_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>591</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1912</internalId></specobject>
    <specobject>
      <id>TS_COMM_30041</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>4495</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM_GetInhibitionStatus, ComM_LimitChannelToNoComMode
    and ComM_ReadInhibitCounter functionality.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Simulate the reset of the ComM module to reset the stub counters and
        indication flags.
    02: Initialize the ComM module.
    03: Clear inhibition stauts.
    04: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_0.
    05: Simulate Full ComMode for Test_ComMUser_0.
    06: Call ComM_ResetInhibitCounter to reset inhibition counter value and
        check the return value is E_OK.
    07: VP (ComM.ASR403.SWS_ComM_00163):
        - Call ComM_LimitChannelToNoComMode with Status, Channel and check the
        return value is E_OK.
    08: VP (ComM.ASR403.SWS_ComM_00619):
        - Call ComM_GetInhibitionStatus to get the inhibition status of a
        ComM channel and check the return value is E_OK.
    09: Check inhibition status of channel is set for limitation to
        "No Communication" mode active.
    10: Request FULL Communication for Test_ComMUser_0.
    11: VP (ComM.ASR403.SWS_ComM_00224)
        Call ComM_ReadInhibitCounter to get inhibition counter value and check
        the return value is E_OK.
    12: Verify that inhibition counter value is COMM_NUM_CHANNELS_OF_USER_0.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00619</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1913</internalId></specobject>
    <specobject>
      <id>TS_COMM_30042</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>4618</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test whether the state is switched to Full ComMode (Ready Sleep) when
    Limit to No Communication mode is enabled in Full Communication mode when
    ComMNmVariant is LIGHT.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSM stub.
    03: Initialize ComM.
    04: Clear inhibition status.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_1.
    06: Request Full communication for User1.
    07: Call the main functions of all the channels linked to User1.
    08: Verify that the Requested mode Counter is equal to the total
        CanSM and FrSM requested ComM mode.
    09: Verify the Requested mode of CanSM is COMM_FULL_COMMUNICATION.
    10: Call the main functions of all the channels linked to User1.
    11: Verify Nm_NetworkRequest is not called.
    12: Wait Until Light Duration time out.
    13: VP (ComM.SWS_ComM_00798):
        - Verify that the  current mode is COMM_FULL_COMMUNICATION by calling
        the API ComM_GetCurrentComMode.
    14: Call ComM_LimitChannelToNoComMode of corresponding channel with status
        "TRUE" to Limit channel 4 to "No Communication" enabled.
    15: Call the main functions of all the channels linked to User1.
    16: VP (ComM.SWS_ComM_00303):
        - Nm_NetworkRelease is not called
        - Channels of the User1 are switched to COMM_FULL_COM_READY_SLEEP state
    17: Call ComM_GetInhibitionStatus with channel to get inhibition Status
        and check the return value.
    18: Check inhibition status of channel is set limitation to
        "No Communication" mode active.
    19: Wait Until Light Duration time out.
    20: Call main functions of all channels of Test_ComMUser_1.
    21: VP (ComM.SWS_ComM_00798):
        - Verify that the  current mode is COMM_NO_COMMUNICATION by calling
        the API ComM_GetCurrentComMode.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00798</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1914</internalId></specobject>
    <specobject>
      <id>TS_COMM_30043</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>4793</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test whether the state is switched Full ComMode (Ready Sleep) when Limit
    to No Communication mode is enabled in Full Communication mode when
    ComMNmVariant is FULL.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSM stub.
    03: Initialize ComM.
    04: Clear inhibition status.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_0.
    06: Bring channels of Test_ComMUser_0 to COMM_FULL_COM_NETWORK_REQUESTED
        state, by requesting Full ComMode.
    07: Call ComM_LimitChannelToNoComMode for all channels of Test_ComMUser_0
        and check that the return value is E_OK.
    08: Call the main functions of all the channels linked to User0 until
        Network requested mode.
    09: VP (ComM.SWS_ComM_00303, ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_FULL_COM_NETWORK_REQUESTED_0):
        - Nm_NetworkRelease is called.
        - Channel of Test_ComMUser_0 are switched to COMM_FULL_COM_READY_SLEEP
          state
    10: Call ComM_GetInhibitionStatus with channel to get inhibition Status and
        check the return value.
    11: Check inhibition status of channel is set for COMM_LIMIT_NOCOMM.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_FULL_COM_NETWORK_REQUESTED_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1734</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1915</internalId></specobject>
    <specobject>
      <id>TS_COMM_30044</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>4919</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test whether ComM clear the user requests after all the channels that
    belong to the corresponding user enters "No Communication" mode.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSM stub.
    03: Initialize ComM.
    04: Clear inhibition status for all channels.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_0 and Test_ComMUser_4.
    06: Request Full communication for Test_ComMUser_0.
    07: Request Full communication for Test_ComMUser_4.
    08: Call the main functions of all the channels linked to Test_ComMUser_4.
    09: Check whether Nm_NetworkRequest is not called.
    10: Check whether CanSM_RequestComMode is called.
    11: VP (ComM.EB_Ref.SWS_ComM_00801.ComM_LimitECUToNoComMode):
        Call ComM_LimitChannelToNoComMode of user Test_ComMUser_4
        with status "TRUE" to Limit channel 0 and 1 to "No Communication"
        enabled, which is shared by Test_ComMUser_0 and Test_ComMUser_4 and
        verify that ComM_LimitChannelToNoComMode returns E_OK.
    12: Call the main functions of all channels of Test_ComMUser_4.
    13: Simulate the bus sleep indication for channel 0 of Test_ComMUser_4.
    14: Simulate the bus sleep indication for channel 1 of Test_ComMUser_4.
    15: Call main functions of all channels of Test_ComMUser_4 is called.
    16: Verify that Nm_NetworkRelease is called.
    17: Verify the ComM mode for Test_ComMUser_0 is COMM_FULL_COMMUNICATION
        by calling ComM_GetRequestedComMode.
    18: Verify the comM mode for Test_ComMUser_4 is COMM_NO_COMMUNICATION
        by calling ComM_GetRequestedComMode.
    19: VP (ComM.EB_Ref.SWS_ComM_00801.ComM_LimitECUToNoComMode):
        Call ComM_LimitChannelToNoComMode with Channel 1 and check the return
        value is E_OK.
    20: Call main functions of all channels of Test_ComMUser_0 is called.
    21: Call ComM_GetInhibitionStatus with channel to get inhibition Status
        and check that return value is E_OK.
    22: Check inhibition status of channel is set for Wake up inhibition
        and limitation to "No Communication" mode active.
    23: Call main functions of all channels of user0 until Network release is
        called.
    24: Simulate the bus sleep indication for all channels of Test_ComMUser_0.
    25: Call main functions of all channels of Test_ComMUser_0 is called.
    26: Verify the Requested mode is COMM_NO_COMMUNICATION for CanSM.
    27: Verify the Requested mode is COMM_NO_COMMUNICATION for FrSM.
    28: Call main functions of all channels of Test_ComMUser_0.
    29: VP (ComM.SWS_ComM_00303):
         - The comM mode for Test_ComMUser_0 is  COMM_NO_COMMUNICATION
        by calling ComM_GetRequestedComMode.
    30: VP (ComM.SWS_ComM_00303):
         - The comM mode for Test_ComMUser_4 is  COMM_NO_COMMUNICATION
        by calling ComM_GetRequestedComMode.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00582</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00839</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00801.ComM_LimitECUToNoComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1916</internalId></specobject>
    <specobject>
      <id>TS_COMM_30045</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>5168</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test ComM shall never inhibit the passive wake-up capability.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize the CanSM stub.
    03: Initialize the ComM module.
    04: Clear inhibition status for all channels.
    05: Simulate a wakeup inhibition for all channels linked to ComM.
    06: Call MainFunction for User 0.
    07: VP (ComM.SWS_ComM_00066, ComM.ASR403.SWS_ComM_00275):
       - ComM never inhibits the passive wake-up capability
        Test_ComMUser_0.
    08: VP (ComM.SWS_ComM_00066, ComM.ASR403.SWS_ComM_00275):
       - ComM never inhibits the passive wake-up capability
        Test_ComMUser_1 and Test_ComMUser_2.
    09: VP (ComM.SWS_ComM_00066, ComM.ASR403.SWS_ComM_00275):
       - ComM never inhibits the passive wake-up capability
        Test_ComMUser_3.
  
Test Input: None.
Test Output: 
    Full communication should be requested to the corresponding state manager
    for all channels linked to Test_ComMUser_2.
    Nm_PassiveStartup should be called for all channels linked to
    Test_ComMUser_2.
    The current mode of channels linked to Test_ComMUser_2 should be FULL_COM.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1917</internalId></specobject>
    <specobject>
      <id>TS_COMM_NeverInhibitWkUpIfFullCom_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>5289</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that [ComM.SWS_ComM_00219], the (wakeup) inhibition shall not get active if
    the current communication state is COMM_FULL_COMMUNICATION
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01. Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02. Simulate Communication allowed to TRUE for all the channels of
        Test_ComMUser_0.
    03. Simulate ComM_Nm_RestartIndication indication for Test_ComMUser_0.
    04. Simulate network mode indication for all the channels of
        Test_ComMUser_0.
    05. Simulate a full communication request for Test_ComMUser_0.
    06. Call main functions of all the channels of Test_ComMUser_0.
    07. VP:
        - Verify the current mode of Test_ComMUser_0 as
          COMM_FULL_COMMUNICATION.
        - Verify the current state of each channel of Test_ComMUser_0 as
          COMM_FULL_COMMUNICATION.
    08. Simulate wake up inhibition for each channels of Test_ComMUser_0.
    09. VP: [ComM.SWS_ComM_00219]
        - Check inhibition status of channel: request for Wakeup Inhibition is accepted
          even if a channel is in state COMM_FULL_COMMUNICATION and becomes active when
          channel changes to COMM_NO_COMMUNICATION.
    10. Call main function MAIN_CNT times and check if the inhibition triggered
        the transition to COMM_NO_COMMUNICATION.
    11. Request COMM_NO_COMMUNICATION state.
    12. Call main function until network relase has been called
    13. Call ComM_Nm_BusSleepMode() for all the channels of Test_ComMUser_0.
    14. VP: (ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_FULL_COMMUNICATION):
        Check that COMM_NO_COMMUNICATION has been entered.
    15. Get the inhibition status for each channel using ComM_GetInhibitionStatus().
    16. For all channels verify if the wakeup is prevented.
    17. Request COMM_FULL_COMMUNICATION.
    18. Clear all inhibition flags with Tst_ClearInhibitionStatus().
    19. Check if all channels can be driven into COMM_FULL_COMMUNICATION again.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_FULL_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1751</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1918</internalId></specobject>
    <specobject>
      <id>TS_COMM_NeverInhibitWkUpIfFullCom_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>5502</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that [ComM.SWS_ComM_00219], the (wakeup) inhibition shall not get active if
    the current communication state is COMM_FULL_COMMUNICATION
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01. Reset stub counts, initialize ComM and callout functions.
    02. Simulate Communication allowed to TRUE for all the channels of
        Test_ComMUser_0
    03. Simulate Nm Restart indication using Test_RestartIndicationFullComMode()
    04. Simulate network mode indication for all the channels of Test_ComMUser_0
    05. Call main functions of all the channels of Test_ComMUser_0
    06. VP:
        * Verify the current mode of Test_ComMUser_0 as COMM_FULL_COMMUNICATION
        * Verify the current state of each channel of Test_ComMUser_0 as
          COMM_FULL_COMMUNICATION.
    07. Simulate wake up inhibition for each channels of Test_ComMUser_0
    08. Get the inhibition status using ComM_GetInhibitionStatus()
    09. Verify that wake up Inhibition status is active.
    10. Simulate a User request for Test_ComMUser_0
    11. Call main functions of all the channels of Test_ComMUser_0
    12. VP: [ComM.SWS_ComM_00219]
        Verify that wake up Inhibition is not active, i.e the user request is granted.
        * Verify Nm_NetworkRequest is called.
        * Verify the current state is COMM_FULL_COM_NETWORK_REQUESTED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00219</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1919</internalId></specobject>
    <specobject>
      <id>TS_COMM_30047</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>5658</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test whether the state is switched Full ComMode (Ready Sleep) to Silent
    ComMdoe when Limit to No Communication mode is enabled in Full
    Communication mode and indicate prepare Bus Sleep, and to check from Silent
    ComMode no transition occurs to Full ComMode with Full ComMode user request
    as Limit to No Communication mode is enabled. The State is switched to Full
    ComMode when Limit to No Communication mode is disabled and user requests
    Full ComMode, when Nm_Variant = FULL.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize the CanSM stub.
    03: Initialize ComM.
    04: Clear inhibition status of all channels.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_0.
    06: Simulate Full communication for User0.
    07: Invoke ComM_LimitChannelToNoComMode for all channels linked with
        Test_ComMUser_0 and verify that inhibition status of channel is set
        for Wake up inhibition and limitation to "No Communication" mode
        active.
    08: Call main functions of all channels of Test_ComMUser_0.
    09: VP (ComM.SWS_ComM_00303):
        - Check whether Nm_NetworkRelease is called number of times equal to
        the number of channels.
    10: Simulate the Prepare bus sleep mode indication for all channels of
        Test_ComMUser_0.
    11: Call main functions of all channels of Test_ComMUser_0.
    12: Verify the CanSM/FrSM Requested mode is COMM_SILENT_COMMUNICATION.
    13: Verify that the current ComM mode is COMM_SILENT_COMMUNICATION.
    14: VP (ComM.SWS_ComM_00374):
        - Call ComM_GetMaxComMode() and verify that the maximum possible
        ComM mode is COMM_SILENT_COMMUNICATION.
    15: Request Full Communication for User.
    16: Call main functions of all channels of Test_ComMUser_0.
    17: Verify that CanSM/FrSM RequestComMode is not called.
    18: Verify that Nm_NetworkRequest is called.
    19: Verify that the current ComM mode is COMM_SILENT_COMMUNICATION.
    20: VP (ComM.SWS_ComM_00841):
        - Call ComM_LimitChannelToNoComMode() with status FALSE for all channels
        linked with Test_ComMUser_0 and verify that inhibition status of
        channel is disabled.
    21: Request Full Communication for User.
    22: Call main functions of all channels of Test_ComMUser_0 is called.
    23: Verify that CanSM/FrSM RequestComMode is called.
    24: Verify that  Nm_NetworkRequest is called the number of times the total
        number of channels configured for user 0.
    25: Simulate the network mode indication for all channels of
        Test_ComMUser_0.
    26: Call main functions of all channels of Test_ComMUser_0.
    27: Verify that the current ComMode is COMM_FULL_COMMUNICATION for
        Test_ComMUser_0.

  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00841</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00374</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1920</internalId></specobject>
    <specobject>
      <id>TS_COMM_30048</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>5898</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behavior of ComM in No communication mode and user request FULL
    communication, when the ComM_Nm_Variant is NONE and BusType of one channel
    is COMM_BUS_TYPE_INTERNAL and also there behaviour when Limit to No
    Communication mode is enabled.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    Reset stub invocation counts.
    Initialize CanSM stub.
    Initialize ComM.

    Verify the behavior of ComM for a Full communication request while ComM is
    in No ComMode:

    Make all the channels of Test_ComMUser_3 in No communication mode.
    Set ComM_CommunicationAllowed to TRUE all the channels of Test_ComMUser_3.
    User request Full ComMode.
    Call ComM_MainFunction of corresponding channel until Full ComMode reached
    Verify Nm_NetworkRequest not called for all channels linked to
    Test_ComMUser_3.
    VP (ComM.SWS_ComM_00841): Activate "Limit to NoCom"
    Verify that transition changed to No communication.
  
Test Input: None.
Test Output: 
    The behavior of ComM for a Full communication request while ComM is in
    different modes:
    All channels linked to Test_ComMUser_3 are moved to No communication mode.
    A transition occurs from No communication mode to Full (Network requested)
    ComMode.
    During the transition Nm_NetworkRequest should not be called.
    All channels linked to Test_ComMUser_3 are moved to Full (Network requested)
    ComMode.
    A transition occurs from FULL Communication(Network Request) ComMode to
    NO_COM.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00841</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TIMEOUT_FULL_COM_READY_SLEEP_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1750</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1921</internalId></specobject>
    <specobject>
      <id>TS_COMM_30049</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>6052</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test behaviour communication inhibition shall get temporarily inactive
    during an active diagnostic session.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSM stub.
    03: Initialize ComM.
    04: Clear inhibition status.
    05: Set ComM_CommunicationAllowed to TRUE for all the channels.
    06: Request the mode Full communication for all users.
    07: VP (ComM.SWS_ComM_00488):
        - Call ComM_LimitChannelToNoComMode for all channels with status
        "TRUE" to Limit channel to "No Communication" enabled.
    08: Verify that Nm_NetworkRelease is called.
    09: Simulate the ActiveDiagnostic indication for all channels.
    10: Call MainFunction for all channels.
    11: Verify that Nm_NetworkRelease is called.
    12: VP (ComM.SWS_ComM_00182):
        - The current mode is COMM_FULL_COMMUNICATION for all the
        users.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1922</internalId></specobject>
    <specobject>
      <id>TS_COMM_ECUModeLimitation_UserReq</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>6209</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test Motivation:
      This test case actually covers 3 different scenarios within the scope of
      mode limitation requirements.
    Test Objectives:
      Scenario 1:
        All active user requests for a communication channel must be ignored
        when mode limitation is active for the entire ECU and all channels
        have to switch to COMM_NO_COMMUNICATION state (ComM.SWS_ComM_00215).
      Scenario 2:
        User requests which were stored before the mode limitation got active
        may not keep the bus awake when the mode limitation is removed.
        Therefore ensure that the channels remain in COMM_NO_COMMUNICATION state
        in this case. This ensures that all the stored user requests are cleared
        after all channels of an user enter COMM_NO_COMMUNICATION due to an
        active mode limitation (ComM.SWS_ComM_00839, ComM.SWS_ComM_00582).
      Scenario 3 (origin: Jira ticket "ASCCOMM-543"):
        This scenario covers the case when channels are shared between different
        users (ComM.SWS_ComM_00582).
  
Test Object: Mode limitation for ECU
Test Precondition: 
    General configuration details required for all scenarios:
    * ComMNmVariant != PASSIVE (Passive channels never wake up actively)
    Initial module state:
    * All channels are in COMM_FULL_COM_NETWORK_REQUESTED state
    Important configuration details required for scenarios 1 / 2:
    * ComMChannel_4 and ComMChannel_10 have ComMNmVariant = LIGHT and the
      associated user is "ComMUser_1"
    * ComMChannel_6 and ComMChannel_7 have ComMNmVariant = NONE and the
      associated user is "ComMUser_3"
    * ComMChannel_5 has ComMNmVariant = PASSIVE
    * All other channels have ComMNmVariant = FULL and the associated user
      is ComMUser_0.
    Important configuration details required for scenario 3:
    * ComMChannel_0 and ComMChannel_1 is shared by ComMUser_0 and ComMUser_4
    * ComMUser_0 also have the channels ComMChannel_2, ComMChannel_3,
      ComMChannel_8 and ComMChannel_9
    * ComMUser_4 only have ComMChannel_0 and ComMChannel_1
  
Test Execution: 
    Test case scenario 1:
    01: Initialize the test case
        * Reset stub invocation counts
        * Initialize call out functions
        * Initialize ComM
        * Clear inhibition status
        * Allow communication for all channels
        * Reset inhibition counter value
    02: Bring all channels (except PASSIVE channel = ComMChannel_5) of the ECU
        to Full communication mode
        * Request 'Full Communication' for all channels of corresponding
          users
        * Invoke main function of all channels
        * Simulate network mode indication for required channels
          (ComMNmVariant = FULL)
        * Invoke main functions of all channels
    03: VP (ComM.SWS_ComM_00160):
        Ensure all channels (except PASSIVE channel) are in
        COMM_FULL_COM_NETWORK_REQUESTED state
    04: Enable inhibition for the ECU by calling ComM_LimitECUToNoComMode(TRUE)
    05: VP (ComM.SWS_ComM_00215) :
        a) Request 'Full communication' for all users when mode limitation is
           enabled for the ECU and verify the return value as
           COMM_E_MODE_LIMITATION
        b) Read the inhibition counter value and verify the counter value as
           "number of channels of all requested users"
    06: Call main function of all channels once.

    Test case scenario 2:
    07: For channels with ComMNmVariant = LIGHT || NONE, there is no need to call main function of
        channels until "Minimum Full ComMode duration" timer expires, as the channels have switched
        to COMM_FULL_COM_READY_SLEEP in the main function call above, due to the mode limitation.
    08: VP: (ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_FULL_COM_NETWORK_REQUESTED_1):
        Ensure all channels (except PASSIVE || NONE channel) have switched to
        COMM_FULL_COM_READY_SLEEP state.
        Channels with NONE variant have switched to COMM_NO_COM_NO_PENDING_REQUEST.
        Also ensure inhibition status is set with "COMM_LIMIT_NOCOMM" for
        all the channels (except PASSIVE channel)
    09: Simulate PrepareBusSleepMode indication for required channels
        followed by main function invocation of all channels
    10: Simulate Nm and Sm BusSleepMode indication for required channels followed by
        main function invocation of all channels
    11: Ensure that all the channels have reached COMM_NO_COM_NO_PENDING_REQUEST
        state
    12: Disable inhibition for the ECU by calling
        ComM_LimitECUToNoComMode(FALSE)
    13: Call main function of all channels
    14: VP (ComM.SWS_ComM_00582):
        * All channels remains in COMM_NO_COM_NO_PENDING_REQUEST state

    Test case scenario 3:
    15: Bring shared channels of users to Full communication mode
        * Request 'Full communication' for ComMUser_0 and ComMUser_4
        * Invoke main function of all channels of ComMUser_0
        * Indicate network mode for all these channels (indicating network mode
          for channels of ComMUser_0 is sufficient)
        * Invoke main function of all channels of ComMUser_0
    16: Ensure that all the channels of ComMUser_0 are in
        COMM_FULL_COM_NETWORK_REQUESTED state
    17: Enable inhibition for the ECU by calling ComM_LimitECUToNoComMode(TRUE)
    18: Invoke main function of all channels of ComMUser_0
    19: Simulate PrepareBusSleepMode indication for shared channels
    20: Invoke main function of shared channels
    21: Simulate BusSleepMode indication for shared channels
    22: Invoke main function of shared channels
    23: VP (ComM.SWS_ComM_00582):
        Ensure that shared channels have reached COMM_NO_COM_NO_PENDING_REQUEST
        and user request is cleared only for ComMUser_4 and not the ComMUser_0,
        (because only channels of ComMUser_4 comes down to
        COMM_NO_COM_NO_PENDING_REQUEST but not the channels of ComMUser_0)
        using ComM_GetRequestedComMode()
    24: Disable inhibition for the ECU by calling
        ComM_LimitECUToNoComMode(FALSE)
    25: Invoke main function of all channels of ComMUser_0
    26: Simulate network mode indication for all channels of ComMUser_0
    27: Invoke main function of all channels of ComMUser_0
    28: VP (ComM.SWS_ComM_00839):
        Ensure that all the channels of ComMUser_0 comes again to
        COMM_FULL_COM_NETWORK_REQUESTED state.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00582</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00839</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00160</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_FULL_COM_NETWORK_REQUESTED_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1735</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1923</internalId></specobject>
    <specobject>
      <id>TS_COMM_EcuMWkupInd_FullVariant</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>6723</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM during a transition from No communication to Full
    communication triggered by a Passive wakeup using
    ComM_EcuM_WakeUpIndication(), when the ComMNmVariant is FULL.
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
    - Following ComMChannels have ComMNmVariant=FULL.
      - ComMChannel_0 (CAN bus)
      - ComMChannel_1 (CAN bus)
      - ComMChannel_2 (CAN bus)
      - ComMChannel_3 (Fr bus)
      - ComMChannel_8 (Eth bus)
      - ComMChannel_9 (Eth bus)
  
Test Execution: 
    01: Prepare test case preconditions
        - Initialize ComM
        - Initialize stub callout functions
        - Reset stub invocation counters
        - Allow communication for required channels
    02: Simulate (ComM.ASR403.SWS_ComM_00275) an ECU wakeup indication for a channel say
        ComMChannel_1.
    03: Invoke main function of ComMChannel_1
    04: VP (ComM.EB_Ref.SWS_ComM_00828.Nm_PassiveStartup):
        - Nm_PassiveStartUp is called with corresponding network handle (= 1)
        - Verify that CanSM is requested for COMM_FULL_COMMUNICATION
    05: Simulate network mode indication for ComMChannel_1
    06: Invoke main function of ComMChannel_1
    07: Ensure that ComMChannel_1 has entered COMM_FULL_COM_READY_SLEEP
    08: Simulate (ComM.ASR403.SWS_ComM_00275) an ECU wakeup indication for another channel say
        ComMChannel_2
    09: Invoke main function of ComMChannel_2
    10: VP (ComM.EB_Ref.SWS_ComM_00828.Nm_PassiveStartup):
        - Nm_PassiveStartUp is called with corresponding network handle (= 2)
        - Verify that CanSM is requested for COMM_FULL_COMMUNICATION
    11: Simulate Prepare bus sleep indication for ComMChannel_2. Note: Prepare
        bus sleep mode indication is unexpected at this time. However it is
        done to cover all the scenarios w.r.t HSM implementation.
    12: Invoke main function of ComMChannel_2
    13: Ensure that ComMChannel_2 has entered COMM_SILENT_COM state
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Nm_PassiveStartup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>543</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1924</internalId></specobject>
    <specobject>
      <id>TS_COMM_NetworkReqAndRel_FullVariant</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>6863</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify the call to Nm_NetworkRequest() and Nm_NetworkRelease() APIs,
    when ComMNmVariant of the channel is FULL. ([ComM.EB_Ref.SWS_ComM_00828.Nm_NetworkRequest], [ComM.SWS_ComM_00869],
    [ComM.SWS_ComM_00133] and [ComM.SWS_ComM_00288]).
  
Test Object: Network Request, Network Release
Test Precondition: 
    Module State:
    - ComM is initialized
    Important test configuration details:
    - ComM Channel associated with ComMUser_0 have ComMNmVariant "FULL" which
      concerns these channels:
      - ComMChannel_0 (CAN bus)
      - ComMChannel_1 (CAN bus)
      - ComMChannel_2 (CAN bus)
      - ComMChannel_3 (Fr bus)
      - ComMChannel_8 (Eth bus)
      - ComMChannel_9 (Eth bus)
  
Test Execution: 
    Notes:
    1) All references of "user" refer to ComMUser_0

    01: Initialize test case
    02: Allow communication for all channels of user
    03: Request 'Full Communication' for user
    04: Call main function of all the channels of user
    05: VP (ComM.SWS_ComM_00869, ComM.EB_Ref.SWS_ComM_00828.Nm_NetworkRequest):
        - Nm_NetworkRequest() has been called with corresponding network handle
        for all the channels of user
    06: Simulate Network mode indication for all the channels of user
    07: Call main function of all the channels of user
    08: VP (ComM.SWS_ComM_00880):
        - All the channels of user have entered
        'COMM_FULL_COM_NETWORK_REQUESTED' state.
    09: Request 'No Communication' for user
    10: Call main function of all the channels of user
    11: VP (ComM.SWS_ComM_00880):
        - The channels of user have entered
        'COMM_FULL_COM_READY_SLEEP' state.
    12: VP (ComM.SWS_ComM_00133, ComM.EB_Ref.SWS_ComM_00828.Nm_NetworkRelease):
        - Nm_NetworkRelease() has been called with corresponding network handle
        for all the channels of user
    13: Request 'Full Communication' for user (belated user request)
    14: Call main function of all the channels of user
    15: VP (ComM.SWS_ComM_00869):
        - Nm_NetworkRequest() has been called with corresponding network
           handle for all the channels of user
        - Channel state is COMM_FULL_COM_NETWORK_REQUESTED
    16: Indicate Prepare bus sleep mode for all channels other than
        ComMChannel_3
    17: Call main function of all the channels of user
    18: Verify all channels except ComMChannel_3 enters COMM_SILENT_COM
    19: Indicate Bus Sleep Mode for all channels (including ComMChannel_3)
    20: Call main function of all the channels of user
    21: VP (ComM.SWS_ComM_00288):
         - Nm_NetworkRelease() has been called for all channels of the user
    22: Nm_NetworkRequest() has been called and all channels (incl. ComMChannel_3)
        has entered COMM_FULL_COMMUNICATION, caused by step 13. Related to ASCCOMM-1148.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00288</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Nm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>544</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Nm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00869</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00880</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1925</internalId></specobject>
    <specobject>
      <id>TS_COMM_UserRequestNotQueued</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>7175</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To ensure that user requests are not queued and that the latest user
    request of the same user overwrites an old user request even if the
    request is not finished. ([ComM.SWS_ComM_00500] and [ComM.SWS_ComM_00625])
  
Test Object: None.
Test Precondition: 
    Module State:
    - ComM is initialized
  
Test Execution: 
    Notes:
    1) All references of "user" refer to ComMUser_0
    2) All references of "channel" refer to ComMChannel_3

    01: Initialize test case
    02: Allow communication for all channels of user
    03: Request 'Full Communication' for user
    04: Request 'No Communication' for user
    05: VP (ComM.SWS_ComM_00500, ComM.SWS_ComM_00625):
        The last requested mode of the user is COMM_NO_COMMUNICATION
    06: Full Communication' (again) for user
    07: Request 'No Communication' for user
    08: Request 'Full Communication' for user
    09: Call main function of channel
    10: VP (ComM.SWS_ComM_00500, ComM.SWS_ComM_00625):
        The last requested mode of the user is COMM_FULL_COMMUNICATION
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00625</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1926</internalId></specobject>
    <specobject>
      <id>TS_COMM_30057</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>7282</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM_Nm_NetworkStartIndication for all channels of
    ComM.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSM stub.
    03: Initialize ComM.
    04: Clear inhibition status for all channels and make all the channels of
        ComM in No communication mode.
    05: Set ComM_CommunicationAllowed to TRUE for all the channels.
    06: VP (ComM.SWS_ComM_00383):
        - Call Nm NetworkStartIndication for channels configured as
        FULL / PASSIVE.
    07: Call main function for all channels.
    08: Verify whether CanSM/FrSM request comMode is called.
    09: Verify that the requested ComM mode is COMM_FULL_COMMUNICATION.
    10: Simulate Nm Network Mode Indication for channels configured as
        FULL / PASSIVE.
    11: Call main functions for all channels.
    12: Verify that Nm_NetworkRequest is not called.
    13: VP (ComM.SWS_ComM_00903):
        - Nm_PassiveStartUp is invoked.
    14: VP (ComM.SWS_ComM_00583):
        - The current mode of all users are COMM_FULL_COMMUNICATION.

  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00583</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00383</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00903</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1927</internalId></specobject>
    <specobject>
      <id>TS_COMM_30060_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>7436</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the state machine where the ComM state machine depends
    on other modules' proper reaction.
    1. To test that the state machine does the transition from No ComMode
      state to Full ComMode state if the BusSM indicate Full Com mode
    2. To test that the state machine transit to "Silent ComMode"
      if prepare bus sleep is indicated and only the BusSM indicate Silent
      Commode.
    3. To test that the state machine will go to "No Com" mode if
      the BusSM does indicate silent ComMode.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    Simulate the reset of the ComM module to reset the stub counters and
    indication flags.
    Initialize the ComM module.
    Request the mode Full communication using the API ComM_RequestComMode for
    Test_ComMUser_0.
    Reset the timeout flag to FALSE, so that there is no BusSm indication.
    verify no transition occurs and Test_UserRequestFullComMode() returns E_OK.
    Call ComM_MainFunction of corresponding channel until ComM requests FULL_COM
    mode to the corresponding state managers for all channels linked to
    Test_ComMUser_0.
    Call ComM_MainFunction of corresponding channel until ComM module calls
    Nm_NetworkRequest for all channels linked to Test_ComMUser_0.
    Verify the current mode of channel using the API ComM_GetCurrentComMode.
    Request the mode No communication using the API ComM_RequestComMode for
    Test_ComMUser_0.
    Verify Nm_NetworkRelease is called.
    Simulate the PrepareBusSleepMode indication.
    Call ComM_MainFunction for all channels linked to Test_ComMUser_0.
    Verify current mode is Silent ComMode.
  
Test Input: None.
Test Output: 
    After the Full communication request the requested mode should be
    COMM_NO_COMMUNICATION.
    Set ComM_CommunicationAllowed to TRUE all the channels of Test_ComMUser_0.
    Test_UserRequestFullComMode() returns E_OK.
    After the Full communication request the requested mode should be
    COMM_FULL_COMMUNICATION.
    Full communication should be requested to the corresponding state manager
    for all channels linked to Test_ComMUser_0.
    NetworkRequest should be called for all channels linked to Test_ComMUser_0.
    The current mode of channels linked to Test_ComMUser_0 should be Full
    communication mode.
    Nm_NetworkRelease should be called, after the No communication request.
    Transition occurs and current mode is Silent ComMode.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00429</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1928</internalId></specobject>
    <specobject>
      <id>TS_COMM_30060_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>7594</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the state machine where the ComM state machine depends
    on Nm module' proper reaction.
    1. To test that the state machine does the transition from No ComMode
       state to Full ComMode state if the Nm indicates Network mode. (ComM.SWS_ComM_00390)
    2. To test that the state machine transit to "Silent ComMode"
       if prepare bus sleep mode is indicated by Nm. (ComM.SWS_ComM_00391)
    3. To test that the state machine will go to "No Com" mode if
       the bus sleep mode is indicated by Nm. (ComM.SWS_ComM_00392)
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize stub callouts.
    03: Initialize ComM.
    04: Clear inhibition status.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_0.
    06: Request the mode Full communication using the API ComM_RequestComMode
        for Test_ComMUser_0.
    07: Invoke main function of all channels of Test_ComMUser_0.
    08: Ensure that Nm_NetworkRequest() is called equal to the total number of
        channels for Test_ComMUser_0. Also ensure the current state of all the
        channels of Test_ComMUser_0 are COMM_FULL_COM_NETWORK_REQUETSED
    09: Indicate Network mode indication for all the channels of
        Test_ComMUser_0
    10: Invoke main function of all channels of Test_ComMUser_0 once
    11: VP (ComM.SWS_ComM_00390) :
        - Current state of all the channels of Test_ComMUser_0 is
          COMM_FULL_COM_NETWORK_REQUESTED.
    12: Request No Communication for Test_ComMUser_0.
    13: Call main functions of all channels of Test_ComMUser_0 is called.
    14: Check whether Nm_NetworkRelease is called equal to the total number of
        channels for Test_ComMUser_0.
    15: Simulate the Prepare bus sleep mode indication for all channels of
        Test_ComMUser_0.
    16: Call main functions of all channels of Test_ComMUser_0 once.
    17:  VP (ComM.SWS_ComM_00391) :
         - Verify that the current ComM Mode is COMM_SILENT_COMMUNICATION.
    18: Call main functions of all channels of Test_ComMUser_0 is called.
    19: Simulate the Bus sleep mode indication for all channels of
        Test_ComMUser_0.
    20: Call main functions of all channels of Test_ComMUser_0 once.
    21: VP (ComM.SWS_ComM_00392) :
        - Verify that the current ComM mode of  Test_ComMUser_0 is
          COMM_NO_COMMUNICATION.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00390</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00391</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00392</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1929</internalId></specobject>
    <specobject>
      <id>TS_COMM_30074</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>7777</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that when active diagnostics is in progress and ComM is in
    COMM_FULL_COM_NETWORK_REQUESTED state, then ComM doesn't switch to
    COMM_FULL_COM_READY_SLEEP state if "Limit to No Communication"
    is performed. (ComM.SWS_ComM_00182)
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSM stub.
    03: Initialize ComM.
    04: Clear inhibition status for all channels.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_0.
    06: Request the mode Full communication using the API ComM_RequestComMode
        for Test_ComMUser_0.
    07: Ensure that all channels of Test_ComMUser_0 are in
        COMM_FULL_COM_NETWORK_REQUESTED state.
    08: Simulate the ActiveDiagnostic indication for all channels of
        Test_ComMUser_0.
    09: Simulate ComM_LimitChannelToNoComMode() for all channels of the user
        Test_ComMUser_0.
    10: Call main functions of all channels of Test_ComMUser_0 is called.
    11: Check whether Nm_NetworkRelease is called.
    12: VP (ComM.SWS_ComM_00182):
        - All the channels remain in COMM_FULL_COM_NETWORK_REQUESTED state.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1930</internalId></specobject>
    <specobject>
      <id>TS_COMM_30079</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>7920</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the persistent storage of the following in NvM
    - ComMNoWakeup
    - Inhibition Counter
    - ComMEcuGroupClassification
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Reset NvM, initialize stubs, Read NvM (ROM values), initialize ComM.
    02: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_0.
    03: VP (ComM.ASR403.SWS_ComM_00619):
        - Upon startup channel 0 has NoCom inhibition set and
        no NoWakeup inhibition set.
    04: VP (ComM.ASR403.SWS_ComM_00619):
        - Upon startup channel 1 has NoWakeup inhibition set
        and no NoCom inhibition set.
    05: VP (ComM.ASR403.SWS_ComM_00619):
        - Upon startup channel 2 has NoCom inhibition set and
        no NoWakeup inhibition set.
    06: VP (ComM.ASR403.SWS_ComM_00619):
        - Upon startup channel 3 has NoWakeup inhibition set
        and no NoCom inhibition set.
    07: VP (ComM.ASR403.SWS_ComM_00156):
        - Call ComM_PreventWakeUp for channel - 1 channel - 3 and verify
        that the return value is E_OK.
    08: Call ComM_LimitChannelToNoComMode for channel 1 and channel -3
        and verify that the return value is E_OK.
    09: Call main functions of all channels of Test_ComMUser_0 is called.
    10: Request Full Communication for Test_ComMUser_0.
    11: Call ComM_MainFunction_1 of channel 1 of Test_ComMUser_0.
    12: Call ComM_MainFunction_3 of channel 3 of Test_ComMUser_0.
    13: Call network mode indication to channel 1 and channel 3.
    14: Call ComM_MainFunction_1 of channel 1 of Test_ComMUser_0.
    15: Call ComM_MainFunction_3 of channel 3 of Test_ComMUser_0.
    16: Call ComM_LimitChannelToNoComMode for channel 0 with FALSE.
    17: Call ComM_MainFunction_0 of channel 0 of Test_ComMUser_0.
    18: Call ComM_LimitChannelToNoComMode for channel 1 with TRUE.
    19: Call ComM_MainFunction_1 of channel 0 of Test_ComMUser_0.
    20: Call ComM_LimitChannelToNoComMode for channel 2 with FALSE.
    21: Call ComM_MainFunction_2 of channel 0 of Test_ComMUser_0.
    22: Call ComM_LimitChannelToNoComMode for channel 3 with TRUE.
    23: Call ComM_MainFunction_3 of channel 0 of Test_ComMUser_0.
    24: Check that channel 0 has NoWakeup inhibition set and no
        NoCom inhibition set.
    25: Check that channel 1 has NoCom inhibition set and no NoWakeup
        inhibition set.
    26: Check that channel 2 has NoWakeup inhibition set and no NoCom
        inhibition set.
    27: Check that channel 3 has NoCom inhibition set and no NoWakeup
        inhibition set.
    28: Call NvM_WriteAll() to write values to NvM.
    29: De Initialize ComM.
    30: Call NvM_ReadAll() to read back the values form NvM.
    31: Re-initialize ComM.
    32: Check that channel 0 has NoCom inhibition set (restored from ROM)
        and NoWakeup inhibition set(as saved in NvRAM) .
    33: Check that channel 1 has no NoCom inhibition set (restored from ROM)
        and no NoWakeup inhibition set (as saved in NvRAM).
    34: Check that upon startup channel 2 has NoCom inhibition set
        (restored from ROM) and no NoWakeup inhibition set (restored from ROM,
        too, because saving in NvRAM is not enabled).
    35: Check that upon startup channel 3 has no NoCom inhibition set
        (restored from ROM) and NoWakeup inhibition set (restored from ROM, too,
        because saving in NvRAM is not enabled).
    36: Check inhibition counter initial value.
    37: Modify inhibition counter by requesting full communication for user 0;
        this should lead to inhibition counter increase.
    38: VP (ComM.EB_Ref.ASR403.SWS_ComM_00552.ComM_SetECUGroupClassification):
        - Set ECU group classification so all inhibitions are dissallowed.
    39: Save changes to NvRAM.
    40: De-initialize ComM.
    41: Reload NvRAM.
    42: Re-initialize ComM.
    43: Check inhibit counter has been restored from NvRAM properly.
    44: Check ECU group classification does not allow setting inhibitions now
        Channel 1 should still be completely un-inhibited.
    45: Try limiting; must fail if ECU classification has been restored from
        NvRAM properly.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00619</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00552.ComM_SetECUGroupClassification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1931</internalId></specobject>
    <specobject>
      <id>TS_COMM_30101</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>8239</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM_LimitChannelToNoComMode and
    ComM_DCM_InactiveDiagnostic functionality in different scenarios.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01. Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSM stub.
    03. Initialize the ComM module.
    04: Clear inhibition status for all channels.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_0.
    06: Simulate Full ComMode for Test_ComMUser_0.
    07: VP (ComM.ASR403.SWS_ComM_00108, ComM.SWS_ComM_00301,ComM.SWS_ComM_00143):
        Call ComM_ResetInhibitCounter() and verify that the return value is
        E_OK.
    08: VP (ComM.ASR403.SWS_ComM_00163)
        Call ComM_LimitChannelToNoComMode and verify the inhibition status
        of all channels of Test_ComMUser_0 in following scenarios.
        - Call ComM_LimitChannelToNoComMode with Status as TRUE, Channel and
          check that the return value is E_OK.
        - Call main functions of all channels of Test_ComMUser_0.
        - Call ComM_LimitChannelToNoComMode with Status as FALSE, Channel and
          check that the return value is E_OK.
        - Call main functions of all channels of Test_ComMUser_0.
        - Check inhibition status of channel is not set.
    09: Call ComM_DCM_InactiveDiagnostic to check nothing happens as Limit to
        NoComMode is disabled and current state is FULL ComMode.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00301</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1932</internalId></specobject>
    <specobject>
      <id>TS_COMM_30102</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>8370</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify the behavior of ComM when ComMNmVariant of a channel is "LIGHT"
    for the following transitions:
    - When a user requests for COMM_FULL_COMMUNICATION mode (and Communication
      is allowed), ComM transits to COMM_FULL_COM_NETWORK_REQUESTED state from
      COMM_NO_COM_NO_PENDING_REQUEST state. ([ComM.SWS_ComM_00875] and [ComM.SWS_ComM_00895])
    - When a user requests for COMM_NO_COMMUNICATION mode, ComM transits to
      COMM_FULL_COM_READY_SLEEP state from COMM_FULL_COM_NETWORK_REQUESTED
      state. (ComM.EB_Ref.SWS_ComM_00889.NmVariant.LIGHT)
    - When ComMNmLightTimeout time expires in COMM_FULL_COM_READY_SLEEP state,
      ComM transits to COMM_NO_COMMUNICATION mode. ([ComM.SWS_ComM_00610])
    - In all these (main) transitions, ComM requests the underlying BusSM for
      a dedicated communication mode. ([ComM.SWS_ComM_00402])
    - Also ensure ComM uses dedicated main function for each channel (ComM.ASR403.SWS_ComM_00429)
      (channel with LIGHT Nm variant).
  
Test Object: None.
Test Precondition: 
    - Important test configuration details:
      - ComMChannel_4 (CAN bus) and ComMChannel_10_Eth3 (Eth bus) have
        "ComMNmVariant = LIGHT"
      - ComMUser_1 is associated with this two channels
  
Test Execution: 
    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSM stub.
    03: Initialize ComM.
    04: Clear inhibition status of all channels and make all the
        channels of Test_ComMUser_1 in No communication mode.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_1.
    06: Request Full communication for Test_ComMUser_1.
    07: ComM.ASR403.SWS_ComM_00429: Call the main functions of all the channels linked to
        Test_ComMUser_1 once.
    08: VP (ComM.SWS_ComM_00402, ComM.SWS_ComM_00875 and ComM.SWS_ComM_00895) :
        - Underlying BusSM is requested for COMM_FULL_COMMUNICATION mode
        - Current state of all channels of Test_ComMUser_1 is
          COMM_FULL_COM_NETWORK_REQUESTED
        - Just check Nm_NetworkRequest is not called as ComMNmVariant = LIGHT.
    09: Wait Until State Duration time out.
    10: Request No communication for Test_ComMUser_1.
    11: ComM.ASR403.SWS_ComM_00429: Call the main functions of all the channels linked to
        Test_ComMUser_1 once
    12: VP (ComM.EB_Ref.SWS_ComM_00889.NmVariant.LIGHT) :
        - Current state of all channels of Test_ComMUser_1 is
          COMM_FULL_COM_READY_SLEEP

    13: Request Full Communication for Test_ComMUser_1
    14: Reset Counters
    15: Call ComM_LimitChannelToNoComMode with Status, Channel and check the return value
    16: Call main functions of all channels of Test_ComMUser_1 until ComM in Full
        communication mode.
    17: Verify the current mode
    18: Wait Until State Duration time out.
    19: VP (ComM.SWS_ComM_00402, ComM.SWS_ComM_00610, ComM.EB.Dsn.StateDynamics.TIMEOUT_FULL_COM_READY_SLEEP_0):
        - Underlying BusSM is requested for COMM_NO_COMMUNICATION mode
        - Current state of all channels of Test_ComMUser_1 is
          COMM_NO_COM_NO_PENDING_REQUEST
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00875</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00895</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00429</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00610</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TIMEOUT_FULL_COM_READY_SLEEP_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1749</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00889.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1933</internalId></specobject>
    <specobject>
      <id>TS_COMM_30104</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>8564</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM_GetMaxComMode, when WakeUp is active
    To test the ComM_PreventWakeUp functionality, when WakeUp is
    enabled for channels.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize the CanSM module.
    03: Initialize the ComM module.
    04: Clear inhibition status of all channels.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_0.
    06: Call ComM_ResetInhibitCounter to reset inhibition counter value
        and check that the return value is E_OK.
    07: VP (ComM.ASR403.SWS_ComM_00156):
        - Call ComM_PreventWakeUp() and verify that the return value is E_OK.
    08: Call main functions of all channels of Test_ComMUser_0.
    09: Request Full Communication for Test_ComMUser_0.
    10: Check inhibit counter has been restored from NvRAM properly.
    11: VP (ComM.SWS_ComM_00374,ComM.ASR403.SWS_ComM_00085):
        Check that the Max Mode is COMM_NO_COMMUNICATION.

  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00374</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1934</internalId></specobject>
    <specobject>
      <id>TS_COMM_30105</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>8672</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM in No ComMode when a user requests Full
    communication mode and Limit No ComMode is active when ComM_Nm_Variant
    is LIGHT.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize the CanSM stub.
    03: Initialize the ComM module.
    04: Clear inhibition status of all channels and make channels of
        Test_ComMUser_1 in No communication mode.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_1.
    06: VP (ComM.EB.SWS_ComM_00110):
        - Request Full communication for Test_ComMUser_1.
    07: Call main functions of all channels of Test_ComMUser_1.
    08: Call ComM_LimitChannelToNoComMode with status "TRUE" for the channels
        linked to Test_ComMUser_1.
    09: Wait Until Light Duration time out.
    10: Call the main functions of all the channels linked to Test_ComMUser_1.
    11: Wait Until Light Duration time out.
    12: Call main functions of all channels of Test_ComMUser_1.
    13: VP (ComM.SWS_ComM_00215):
        - Call ComM_GetCurrentComMode for Test_ComMUser_1 and verify that the
        mode is No Communication and no state transition occured.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>756</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1935</internalId></specobject>
    <specobject>
      <id>TS_COMM_30106</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>8788</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM transition from Full ComMode - Silent ComMode-
    Full ComMode, through an Inactive diagnostic indication.
    To Check from Silent ComMode no transition occurs to Full ComMode,
    when Limit No ComMode is active and user request Full ComMode.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    Verify the behaviour of ComM for an Inactive diagnostic indication while
    ComM is in Full ComMode:

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize the CanSM stub.
    03: Initialize the ComM module.
    04: Clear inhibition status of all channels and make channels of
        Test_ComMUser_1 in No communication mode.
    05: Set ComM_CommunicationAllowed to TRUE for all the channels.
    06: Simulate an Active diagnostic indication.
    07: VP (ComM.SWS_ComM_00874):
        - Simulate the InactiveDiagnostic indication for all channels of
        Test_ComMUser_0.
    08: Call the main functions of all the channels linked to Test_ComMUser_0
        until Network Release is called.
    09: Simulate the Prepare bus sleep indication for all channels of
        Test_ComMUser_0.
    10: Indicate different mode (COMM_NO_COMMUNICATION) when channel-0 is in
        Ready Sleep.
    11: VP (ComM.ASR403.SWS_ComM_00299):
        - CanSM current mode for channel-0 is COMM_SILENT_COMMUNICATION.
    12: Call main functions of all channels of Test_ComMUser_0 until ComM
        requests Silent communication mode to the corresponding bus state
        manager.
    13: Verify the CanSM and FrSM Requested mode is COMM_SILENT_COMMUNICATION.
    14: Verify that DCM is notified as all the channels are in Silent ComMode.
    15: Verify that the current ComM mode is COMM_SILENT_COMMUNICATION.
    16: Request Full Communication for Test_ComMUser_0.
    17: Call ComM_LimitChannelToNoComMode with status "TRUE" for all channels
        of Test_ComMUser_0.
    18: Call main functions of all channels of Test_ComMUser_0 until ComM
        requests silent communication mode to the corresponding bus state
        manager.
    19: Verify all the channels are in Silent ComMode and no transition occured
        to Full ComMode.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00874</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00299</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1936</internalId></specobject>
    <specobject>
      <id>TS_COMM_30107</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>8990</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM in No communication mode transitions from
    substate Network Request to Ready Sleep and from Ready Sleep to Network
    request. To check in Ready Sleep state if user request Full ComMode no
    transition occurs, when Limit No ComMode is active.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize the CanSM stub.
    03: Initialize the ComM module.
    04: Clear inhibition status of all channels and make channels of
        Test_ComMUser_0 in No communication mode.
    05: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_0.
    06: Simulate Full ComMode for Test_ComMUser_0.
    07: Call ComM_LimitChannelToNoComMode with status "TRUE" for the channels
        linked to Test_ComMUser_0.
    08: VP (ComM.SWS_ComM_00133):
        - Call main functions of all channels of Test_ComMUser_0 until Network
        release is called.
    09: VP (ComM.EB.SWS_ComM_00110):
        - Request Full ComMode for Test_ComMUser_0.
    10: Call the main functions of all the channels linked to Test_ComMUser_0.
    11: VP (ComM.SWS_ComM_00303):
        - Nm_NetworkRequest is not called.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>756</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1937</internalId></specobject>
    <specobject>
      <id>TS_COMM_30081</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>9125</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM in Silent communication mode if the user
    requests full communication, when the ComM_Nm_Variant is FULL.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize the CanSM stub.
    03: Initialize the ComM module.
    04: Clear inhibition status of all channels and make channels of
        Test_ComMUser_0 in No communication mode.
    05: Set ComM_CommunicationAllowed to TRUE for all the channels.
    06: VP (ComM.SWS_ComM_00261):
        - Simulate Active diagnostic indication.
    07: Simulate the InactiveDiagnostic indication for all channels of
        Test_ComMUser_0.
    08: Call main functions of all channels of Test_ComMUser_0 until network
        is released
    09: Simulate the Prepare bus sleep indication for all channels of
        Test_ComMUser_0.
    10: Call main functions of all channels of Test_ComMUser_0 until ComM
        requests Silent communication mode to the corresponding bus state
        manager.
    11: VP (ComM.ASR403.SWS_ComM_00852):
         - The CanSM and FrSM Requested mode is COMM_SILENT_COMMUNICATION.
    12: Check DCM is notified as all the channels are in Silent ComMode.
    13: Verify that current ComM mode is Silent communication.
    14: Request Full Communication for Test_ComMUser_0.
    15: Call main functions of all channels of Test_ComMUser_0 until Network
        request is called.
    16: Verify the CanSM/FrSM Requested mode Counter value.
    17: Verify that no Nm passive statup is called.
    18: Verify that CanSM/FrSM requested mode is COMM_FULL_COMMUNICATION.
    19: Call main functions of all channels of Test_ComMUser_0 until
        Full Communication transition occurs.
    20: Check DCM is notified as all the channels are in Full ComMode.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00261</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00852</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1938</internalId></specobject>
    <specobject>
      <id>TS_COMM_SwitchingBacktoDefaultState</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>9339</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test case verifies two different scenarios w.r.t.
    requirement ComM.SWS_ComM_00897 - "active wake up" and "passive wake up".

    1) Ensure that when ComM is in sub-state COMM_NO_COM_REQUEST_PENDING
       due to a COMM_FULL_COMMUNICATION user request or an active
       diagnostic indication from Dcm, ComM switches to the default
       sub-state COMM_NO_COM_NO_PENDING_REQUEST if the user requests
       COMM_NO_COMMUNICATION or Dcm indicates inactive diagnostic.

    2) Ensure that when ComM is in sub-state COMM_NO_COM_REQUEST_PENDING due
       to a passive wake up (ComM_Nm_RestartIndication(),
       ComM_Nm_NetworkStartIndication() or ComM_EcuM_WakeUpIndication()),
       ComM does not switch to COMM_NO_COM_NO_PENDING_REQUEST if
          1) the user requests for COMM_NO_COMMUNICATION or
          2) Dcm requests for 'Inactive diagnostics' or
          3) "mode limitation" is disabled or
          4) "wake up inhibition" is enabled / disabled
       Further ensure that ComM reaches COMM_FULL_COMMUNICATION state.
       (ComM.SWS_ComM_00894 and ComM.SWS_ComM_00895).
  
Test Object: Switching back to default state
Test Precondition: 
    Important test configuration details:
    * Module is initialized
    * Communication is not allowed for the channels of the user
    * ComM is in COMM_NO_COM_NO_PENDING_REQUEST state
  
Test Execution: 
    Note:
    1) All references of "user" refer to ComMUser_0

    Test case scenario 1:
    01: Preparation of test case preconditions
    02: Request 'Full Communication' for the user
    03: Invoke main function of all channels of the user
    04: VP (ComM.SWS_ComM_00881):
        * Ensure that ComM enters COMM_NO_COM_REQUEST_PENDING state
    05: Request 'No Communication' for the user
    06: Invoke main function of all channels of the user
    07: VP (ComM.SWS_ComM_00897, ComM.SWS_ComM_00881, ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0):
        * ComM switches back to COMM_NO_COM_NO_PENDING_REQUEST state
    08: Indicate an 'Active diagnostic' for all the channels of user
    09: Invoke main function of all channels of the user
    10: Ensure that ComM enters COMM_NO_COM_REQUEST_PENDING state
    11: Indicate an 'Inactive diagnostic' for all the channels of user
    12: Invoke main function of all channels of the user
    13: VP (ComM.SWS_ComM_00897, ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_DCM_NO_COM_PENDING_REQUEST_1):
        * ComM switches back to COMM_NO_COM_NO_PENDING_REQUEST state

    Test case scenario 2:
    14: Simulate a passive wake up call for all channels of the user.
        Note: passive wake up call is a call of any one of the
        following APIs:
        * ComM_EcuM_WakeUpIndication() or
        * ComM_Nm_RestartIndication() or
        * ComM_Nm_NetworkStartIndication()
    15: Invoke main function of all channels of the user
    16: VP: (ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_2):
        Ensure that ComM enters COMM_NO_COM_REQUEST_PENDING state
    17: Request 'No Communication' for the user
    18: Invoke main function of all channels of the user
    19: VP (ComM.SWS_ComM_00894 and ComM.SWS_ComM_00895):
        * ComM remains in COMM_NO_COM_REQUEST_PENDING state
    20: Indicate an 'Inactive diagnostic' for all the channels of user
        and repeat the steps 18 and 19
    21: Enable "wake up inhibition" and repeat the steps 18 and 19
    22: Disable "wake up inhibition" and repeat the steps 18 and 19
    23: Disable "NoCom inhibition" by calling ComM_LimitChannelToNoComMode()
        and repeat the steps 18 and 19
    24: Disable "NoCom inhibition" by calling ComM_LimitECUToNoComMode()
        and repeat the steps 18 and 19
    25: Allow communication for all the channels of the user and invoke the
        channel main function.
    26: VP(ComM.SWS_ComM_00895, ComM.EB.Dsn.StateDynamics.COMALLOWED_CHANGE_NO_COM_PENDING_REQUEST):
        * ComM has reached COMM_FULL_COMMUNICATION state
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00897</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_DCM_NO_COM_PENDING_REQUEST_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1732</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00881</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00894</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00895</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1729</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.COMALLOWED_CHANGE_NO_COM_PENDING_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1733</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1939</internalId></specobject>
    <specobject>
      <id>TS_COMM_REJECT_REQ_IN_LIMIT_NO_COMMODE</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>9631</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that the ComM module shall ignore the requests in other states than
    COMM_FULL_COM_NETWORK_REQUESTED when ComM_LimitChannelToNoComMode is
    enabled.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize ComM module by calling ComM_Init().
    03: Clear inhibition status.
    04: Set ComM_CommunicationAllowed to TRUE for all channels Test_ComMUser_0.
    05: Simulate full communication for Test_ComMUser_0.
    06: Call main functions of all channels of Test_ComMUser_0.
    07: VP (ComM.SWS_ComM_00303):
        - Verify the current state is COMM_FULL_COM_NETWORK_REQUESTED.
        - Nm_NetworkRequest is invoked.
    08: VP (ComM.SWS_ComM_00841):
        - Call ComM_LimitChannelToNoComMode for all channels of Test_ComMUser_0
        and verify the inhibition status with COMM_LIMIT_NOCOMM.
    09: Request the network for all channels, but the request shall be rejected
        by verifying that the the return value is TEST_COMM_E_MODE_LIMITATION.
    10: Call MainFunction for all channels.
    11: VP: Verify the current state as COMM_FULL_COM_READY_SLEEP.
    12: Request the network for all the channels of Test_ComMUser_0.
    13: Call ComM_Mainfuntion() for all the channels of Test_ComMUser_0.
    14: Invoke ComM_Nm_PrepareBusSleepMode() and ComM_Mainfuntion() for all the
        channels.
    15: VP: Verify whether the current state is COMM_SILENT_COM.
    16: Request the network for Test_ComMUser_0, but the request shall be
        rejected by verifying that the the return value is
        TEST_COMM_E_MODE_LIMITATION.
    17: Call MainFunction for all channels.
    18: VP (ComM.SWS_ComM_00842):
         - The request shall be rejected since verify the return value as
          TEST_COMM_E_MODE_LIMITATION.
        - the current state is still in COMM_SILENT_COM.
    19:  Invoke ComM_Nm_BusSleepMode() and ComM_Mainfunction() for all the
         channels.
    20: VP: Verify whether the current state is COMM_NO_COM_NO_PENDING_REQUEST.
    21: Request the network for Test_ComMUser_0, but the request shall be
        rejected by verifying that the the return value is
        TEST_COMM_E_MODE_LIMITATION.
    22: Call MainFunction for all channels.
    23: VP:
        - The request shall be rejected since verify the return value as
          TEST_COMM_E_MODE_LIMITATION
        - The current state is still COMM_NO_COM_NO_PENDING_REQUEST.
        - Nm_NetworkRequest is not invoked since communication
          inhibition is enabled and also the request should be rejected.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00841</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00842</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1940</internalId></specobject>
    <specobject>
      <id>TS_COMM_CANCEL_TM_WITH_USERREQ</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>9871</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that in sub-state COMM_FULL_COM_NETWORK_REQUESTED and configuration
    parameter ComMNmVariant=LIGHT or ComMNmVariant=NONE and the user requests
    ComM_RequestComMode(user,COMM_FULL_COMMUNICATION), the timer for
    ComMTMinFullComModeDuration (ComM.ECUC_ComM_00557) shall be cancelled.
  
Test Object: None.
Test Precondition: 
    ComMNmVariant type of the channels referenced by the user Test_ComMUser_1 is
    LIGHT.
    ComMNmVariant type of the channels referenced by the user Test_ComMUser_3 is
    NONE.
  
Test Execution: 
    01. Initialize ComM module by calling ComM_Init().
    02. Set ComM_CommunicationAllowed to TRUE for all the channels of
        Test_ComMUser_1.
        (ComMNmVariant type is = LIGHT for all channels referenced by
        Test_ComMUser_1).
    03. Set ComM_CommunicationAllowed to TRUE for all the channels of
        Test_ComMUser_3.
        (ComMNmVariant type is = NONE for all channels referenced by
        Test_ComMUser_3).
    04. Simulate the User Request for Test_ComMUser_1 and Test_ComMUser_3 and
        call ComM_MainFunction()
    05. VP (ComM.ECUC_ComM_00557):
        - Verify the current state is COMM_FULL_COM_NETWORK_REQUESTED.
    06. Invoke ComM_RequestComMode() for the users Test_ComMUser_1 and
        Test_ComMUser_3 and call ComM_MainFunction().
    07. Invoke Test_StateLightTimeOutDuration() until State Duration time out
        occurs and invoke Mainfunction for all the channels.
    08. Invoke Test_StateLightTimeOutDuration() until Light Duration time out
        occurs invoke Mainfunction for all the channels.
    09. (ComM.EB_Ref.ASR403.SWS_ComM_00887.LIGHTUser, ComM.EB_Ref.ASR403.SWS_ComM_00887.NONEUser):
        - The current state is still COMM_FULL_COM_NETWORK_REQUESTED since
        the timer should be cancelled so the state will be retained.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00557</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00887.LIGHTUser</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>497</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00887.NONEUser</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1941</internalId></specobject>
    <specobject>
      <id>TS_COMM_CANCEL_TM_WITH_DCM</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>10028</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that in sub-state COMM_FULL_COM_NETWORK_REQUESTED and configuration
    parameter ComMNmVariant=LIGHT or ComMNmVariant=NONE and the DCM indicate
    ComM_DCM_ActiveDiagnostic(channel) the timer for ComMTMinFullComModeDuration
    (ComM.ECUC_ComM_00557) shall be cancelled.
  
Test Object: None.
Test Precondition: 
    ComMNmVariant type of the channels referenced by the user Test_ComMUser_1 is
    LIGHT.
    ComMNmVariant type of the channels referenced by the user Test_ComMUser_3 is
    NONE.
  
Test Execution: 
    01. Initialize ComM module by calling ComM_Init().
    02. Set ComM_CommunicationAllowed to TRUE for all the channels of
        Test_ComMUser_1.
        (ComMNmVariant type is = LIGHT for all channels referenced by
        Test_ComMUser_1).
    03. Set ComM_CommunicationAllowed to TRUE for all the channels of
        Test_ComMUser_3.
        (ComMNmVariant type is = NONE for all channels referenced by
        Test_ComMUser_3).
    04. Simulate the User Request for Test_ComMUser_1 and Test_ComMUser_3 and
        call ComM_MainFunction()
    05. VP (ComM.ECUC_ComM_00557):
        Verify the current state is COMM_FULL_COM_NETWORK_REQUESTED.
    06. Simulate ActivDiagnostic indication for all channels of the users
        Test_ComMUser_1 and Test_ComMUser_3 and call ComM_MainFunction().
    07. Invoke Test_StateLightTimeOutDuration() until State Duration time out
        occurs and invoke Mainfunction for all the channels.
    08. Invoke Test_StateLightTimeOutDuration() until Light Duration time out
        occurs invoke Mainfunction for all the channels.
    09. (ComM.EB_Ref.ASR403.SWS_ComM_00887.NONEDcm, ComM.EB_Ref.ASR403.SWS_ComM_00887.LIGHTDcm):
        - The current state is still COMM_FULL_COM_NETWORK_REQUESTED since
        the timer should be cancelled so the state will be retained.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00557</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00887.LIGHTDcm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00887.NONEDcm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>500</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1942</internalId></specobject>
    <specobject>
      <id>TS_COMM_EcuM_WkUpInd</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>10196</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test ComM_EcuM_WakeUpIndication() functionality in sub-state
    COMM_NO_COM_NO_PENDING_REQUEST.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01. Initialize ComM module by calling ComM_Init().
    02. Set ComM_CommunicationAllowed to FALSE for all the channels of
        Test_ComMUser_0.
    03. Verify the current state as COMM_NO_COM_NO_PENDING_REQUEST.
    04. Simulate Wake Up Indication for all the channels of Test_ComMUser_0.
    05. Invoke Main function of all the channels of Test_ComMUser_0.
    06. VP (ComM.EB_Ref.SWS_ComM_00893.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False):
        - Verify the current state as COMM_NO_COM_REQUEST_PENDING.
    07. Set ComM_CommunicationAllowed to TRUE for all the channels of
        Test_ComMUser_0.
    08. Call ComM_Nm_NetworkMode() followed by ComM_RequestComMode()
        with COMM_FULL_COMMUNICATION for all the channels of Test_ComMUser_0.
    09. Invoke Main function of all the channels of Test_ComMUser_0.
    10. VP:
        Verify the current state as COMM_FULL_COM_NETWORK_REQUESTED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00893.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>562</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1943</internalId></specobject>
    <specobject>
      <id>TS_COMM_ModeLimitation_UserReq</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>10326</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test Motivation:
      The motivation of this test case is to verify the status of user request
      during an active mode limitation (ComM.SWS_ComM_00839) and after an active mode
      limitation (ComM.SWS_ComM_00582).
    Test Objective:
      Verify that a user request which occurs before all channels of the user
      have reached COMM_NO_COMMUNICATION state is granted when
      the mode limitation is disabled (ComM.SWS_ComM_00839).

      Verify also, that a user request which occurs before all channels of
      the user have not reached COMM_NO_COMMUNICATION state is not granted
      after all channels reach COMM_NO_COMMUNICATION state and
      mode limitation is disabled (ComM.SWS_ComM_00582).
  
Test Object: Stored user request
Test Precondition: 
  
Test Execution: 
    Note: All references of "user" refer to ComMUser_0

    01: Initialize test case
        - Reset stub invocation counts
        - Initialize call out functions
        - Initialize ComM
        - Clear inhibition status
        - Allow communication for all channels of the user
    02: Bring all channels of the user to Full communication mode
        - Request 'Full Communication' for the user
        - Invoke main function of all channels of the user
        - Simulate network mode indication for all channels of the user
        - Invoke main function of all channels of the user
    03: Verify all channels of the user are in
        COMM_FULL_COM_NETWORK_REQUESTED state
    04: Enable mode limitation for all channels of the user
    05: Call main function of all channels of the user
    06: Verify Nm_NetworkRelease() is called
    07: Verify the current state of all channels of the user
        is COMM_FULL_COM_READY_SLEEP
    08: Disable mode limitation for all channels of the user
    09: Call main functions of all channels of the user
    10: VP (ComM.SWS_ComM_00839, ComM.SWS_ComM_00882, ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COM_READY_SLEEP_1):
        - Stored user request is granted now as all channels of the user have
          returned back to COMM_FULL_COM_NETWORK_REQUESTED state
    11: Verify the current requested mode of user is COMM_FULL_COMMUNICATION by
        calling ComM_GetRequestedComMode() API
    12: Again, perform "Limit to No Com" for all channels of the user
    13: Call main function of all channels of the user
    14: Simulate Prepare bus sleep mode indication followed by main function
        invocation for all channels of the user
    15: Request 'Full communication' for user, when all channels of the user
        have not yet reached COMM_NO_COMMUNICATION.
    16: Invoke main functions of all channels of the user
    17: Verify the requested mode of the user is COMM_FULL_COMMUNICATION
    18: Simulate bus sleep mode indication for all channels of the user
    19: Invoke main functions of all channels of the user
    20: Verify that all channles of the user have reached
        COMM_NO_COM_NO_PENDING_REQUEST state
    21: VP (ComM.SWS_ComM_00582):
         - Stored user request is cleared, i.e, the requested mode
          of the user is COMM_NO_COMMUNICATION
    22: Disable mode limitation for all channels of the user
    23: VP (ComM.SWS_ComM_00582):
         - All channels of the user remain in COMM_NO_COM_NO_PENDING_REQUEST
          state as there is no user request pending
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00839</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00882</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00582</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COM_READY_SLEEP_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1757</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1944</internalId></specobject>
    <specobject>
      <id>TS_COMM_ComAllowed</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>10643</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    When communication limitation is disabled and a user requests
    COMM_FULL_COMMUNICATION in sub-state COMM_NO_COM_NO_PENDING_REQUEST,
    the ComM channel state machine shall immediately switch to sub-state
    COMM_NO_COM_REQUEST_PENDING.
  
Test Object: None.
Test Precondition: 
    - Important configuration details:
      - All channels of ComMUser_0 have ComMNmVariant = FULL.
    - Initial module state:
      - All channels are in COMM_NO_COM_NO_PENDING_REQUEST state
      - Communication is not enabled on any of the channels of ComMUser_0
      - Communication limitation is disabled on all channels of ComMUser_0
  
Test Execution: 
    01: Initialize test preconditions
      - Initialize ComM.
      - Disable communication on all the channels of ComMUser_0.
      - Disable communication limitation on all channels of ComMUser_0.
    02: Verify the current state is COMM_NO_COM_NO_PENDING_REQUEST.
    03: Request Full communication for Test_ComMUser_0.
    04: Call the main functions of all channels linked to ComMUser_0
        once each.
    05: VP (ComM.SWS_ComM_00875, ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_NO_PENDING_REQUEST_0):
        - Current state of all channels linked to ComMUser_0 is
          COMM_NO_COM_REQUEST_PENDING.
    06: Enable communication on all channels of ComMUser_0.
    07: Call the main functions of all channels linked to ComMUser_0
        once each.
    08: Indicate network mode on all channels of ComMUser_0.
    09: Call the main functions of all channels linked to ComMUser_0
        once each.
    10. VP (ComM.SWS_ComM_00875):
        - Current state of all channels linked to ComMUser_0 is
          COMM_FULL_COM_NETWORK_REQUESTED.
    11: Enable communication limitation on all channels of ComMUser_0.
    12: Call the main functions of all channels linked to ComMUser_0
        once each.
    13: Indicate Bus sleep mode on all channels of ComMUser_0.
    14: Call the main functions of all channels linked to ComMUser_0
        once each.
    15: Verify the current communication mode of ComMUser_0
        is COMM_NO_COMMUNICATION.
    16: Disable communication on all channels of ComMUser_0.
    17: Request Full communication for Test_ComMUser_0.
    18: Call the main functions of all channels linked to ComMUser_0
        once each.
    19: VP (ComM.SWS_ComM_00875):
        - Current state of all channels linked to ComMUser_0 is
          COMM_NO_COM_NO_PENDING_REQUEST.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00875</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_NO_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1945</internalId></specobject>
    <specobject>
      <id>TS_COMM_Query_BusSMModeFr</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>10839</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    The function ComM_GetCurrentComMode() shall use the corresponding interfaces of the Bus State
    Managers to get the current Communication Mode of the network.
    Test that the mode is queried for channels of bus type CAN, Fr, Eth.
  
Test Object: ComM_GetCurrentComMode()
Test Precondition: 
  Test_ComMUser_0 is configured for
    * 3 channels of bus type CAN
    * 1 channels of bus type FlexRay
    * 2 channels of bus type Ethernet
  
Test Execution: 
    01: Initialize test case
        * Reset stub invocation counts
        * Initialize call out functions
        * Initialize ComM
        * Clear inhibition status
    02: Configure stubs CanSM_GetCurrentComMode_Stub, FrSM_GetCurrentComMode_Stub and
        EthSM_GetCurrentComMode_Stub so, that they all return COMM_FULL_COMMUNICATION mode.
    03: Invoke ComM_GetCurrentComMode() for Test_ComMUser_0.
    04: VP (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00853, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083, ComM.SWS_ComM_00084)
        * Verify, that ComM has invoked for each channel the corresponding
          &lt;Bus&gt;SM_GetCurrentComMode stub
        * Verify the returned Mode is COMM_FULL_COMMUNICATION.

    05: Configure stubs so that
        * CanSM_GetCurrentComMode_Stub returns COMM_NO_COMMUNICATION mode
        * FrSM_GetCurrentComMode_Stub returns COMM_FULL_COMMUNICATION mode
        * EthSM_GetCurrentComMode_Stub returns COMM_FULL_COMMUNICATION mode
    06: Invoke ComM_GetCurrentComMode() for Test_ComMUser_0.
    07: VP (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00853, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083, ComM.SWS_ComM_00176, ComM.SWS_ComM_00084)
        * Verify, that ComM has invoked for each channel the corresponding
          &lt;Bus&gt;SM_GetCurrentComMode stub (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00853, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083).
        * Verify the returned Mode is COMM_NO_COMMUNICATION
         (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00853, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083, ComM.SWS_ComM_00176).

    08: Configure stubs so that
        * CanSM_GetCurrentComMode_Stub returns COMM_FULL_COMMUNICATION mode
        * FrSM_GetCurrentComMode_Stub returns COMM_SILENT_COMMUNICATION mode
        * EthSM_GetCurrentComMode_Stub returns COMM_FULL_COMMUNICATION mode
    09: Invoke ComM_GetCurrentComMode() for Test_ComMUser_0.
    10: VP (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00853, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083, ComM.SWS_ComM_00176, ComM.SWS_ComM_00084)
        * Verify, that ComM has invoked for each channel the corresponding
          &lt;Bus&gt;SM_GetCurrentComMode stub (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00853, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083).
        * Verify the returned Mode is COMM_SILENT_COMMUNICATION
         (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00853, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083, ComM.SWS_ComM_00176).

    11: Configure stubs so that
        * CanSM_GetCurrentComMode_Stub returns COMM_FULL_COMMUNICATION mode
        * FrSM_GetCurrentComMode_Stub returns COMM_FULL_COMMUNICATION mode
        * EthSM_GetCurrentComMode_Stub returns COMM_NO_COMMUNICATION mode
    12: Invoke ComM_GetCurrentComMode() for Test_ComMUser_0.
    13: VP (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00853, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083, ComM.SWS_ComM_00176, ComM.SWS_ComM_00084)
        * Verify, that ComM has invoked for each channel the corresponding
          &lt;Bus&gt;SM_GetCurrentComMode stub (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00853, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083).
        * Verify the returned Mode is COMM_NO_COMMUNICATION
         (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00853, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083, ComM.SWS_ComM_00176).
    14: Configure the Bus State Manager stubs so, that
        * CanSM_GetCurrentComMode() returns the error code E_OK
        * FrSM_GetCurrentComMode() returns the error code E_OK
        * EthSM_GetCurrentComMode() returns the error code E_NOT_OK
    15: VP (ComM.ASR403.SWS_ComM_00083)
        Invoke ComM_GetCurrentComMode() for Test_ComMUser_0 and verify, that the returned error code
        is E_NOT_OK.
    16: Configure the Bus State Manager stubs so, that
        * CanSM_GetCurrentComMode() returns the error code E_OK
        * FrSM_GetCurrentComMode() returns the error code E_NOT_OK
        * EthSM_GetCurrentComMode() returns the error code E_OK
    17: VP (ComM.ASR403.SWS_ComM_00083)
        Invoke ComM_GetCurrentComMode() for Test_ComMUser_0 and verify, that the returned error code
        is E_NOT_OK.
    18: Configure the Bus State Manager stubs so, that
        * CanSM_GetCurrentComMode() returns the error code E_NOT_OK
        * FrSM_GetCurrentComMode() returns the error code E_OK
        * EthSM_GetCurrentComMode() returns the error code E_OK
    19: VP (ComM.ASR403.SWS_ComM_00083)
        Invoke ComM_GetCurrentComMode() for Test_ComMUser_0 and verify, that the returned error code
        is E_NOT_OK.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00855</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00853</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00860</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1946</internalId></specobject>
    <specobject>
      <id>TS_ActiveDiagnosticReEntrantTransition</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>11079</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM when an active diagnostic when state machine is
    in NO_COM_REQUEST_PENDING state.
  
Test Object: None.
Test Precondition: 
    Module state:
    - Module is initialized
    - Communication is not allowed
  
Test Execution: 
  01: Initialize test case.
  02: Call ComM_EcuM_WakeUpIndication() for channel-0
  03: Invoke main function.
  04: Verify channel-0 is in state COMM_NO_COM_REQUEST_PENDING.
  05: Simulate active diagnostic indication for channel-0 and invoke main function.
  06: Current state of channel-0 is COMM_NO_COM_REQUEST_PENDING.
  07: Enable communication on channel-0 and invoke main function.
  08: VP: (ComM.EB_Ref.SWS_ComM_00866.NmVariant.FULL):
      - Verify channel-0 is in state COMM_FULL_COM_NETWORK_REQUESTED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00866.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1947</internalId></specobject>
    <specobject>
      <id>TS_NetworkStartIndicationTransition</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>11159</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify if function ComM_Nm_NetworkStartIndication() is called in state
    NO_COM_NO_PENDING_REQUEST, transition to NO_COM_REQUEST_PENDING is done.
  
Test Object: None.
Test Precondition: 
    Module state:
    - Module is initialized
    - Communication is not allowed
  
Test Execution: 
  01: Initialize test case.
  02: Verify channel-0 is in state COMM_NO_COM_NO_PENDING_REQUEST.
  03: Function ComM_Nm_NetworkStartIndication() is called.
  04: VP: (ComM.SWS_ComM_00903, ComM.EB.ComM_PASSIVE_WAKEUP_IND_NoComNoPendingReq),
          (ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_0):
      - Verify channel-0 is in state COMM_NO_COM_REQUEST_PENDING.
  05: Enable communication on channel-0 and invoke main function.
  06: Verify channel-0 is in state COMM_FULL_COM_READY_SLEEP.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1727</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_PASSIVE_WAKEUP_IND_NoComNoPendingReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>637</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00903</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1948</internalId></specobject>
    <specobject>
      <id>TS_FullToSilentTransition</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>11234</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify if function ComM_Nm_PrepareBusSleepMode() is called in state COMM_FULL_COM_NETWORK_REQUESTED,
    transition to COMM_SILENT_COM is done. ComMNmVariant is FULL.
  
Test Object: None.
Test Precondition: 
    Module state:
    - Module is initialized
    - Communication is not allowed
  
Test Execution: 
  01: Initialize test case.
  02: Call of functions: ComM_PreventWakeUp(), ComM_LimitChannelToNoComMode(), ComM_RequestComMode().
  03: Verify channel-0 is in state COMM_NO_COM_REQUEST_PENDING.
  04: Enable communication on channel-0 and invoke main function.
  05: Verify channel-0 is in state COMM_FULL_COM_NETWORK_REQUESTED.
  06: VP: (ComM.SWS_ComM_00391):
      - Function ComM_Nm_PrepareBusSleepMode() is called.
  07: VP: (ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_FULL_COM_NETWORK_REQUESTED):
      - Verify channel-0 is in state COMM_SILENT_COM.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_FULL_COM_NETWORK_REQUESTED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1736</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00391</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1949</internalId></specobject>
    <specobject>
      <id>TS_COMM_FULL_COM_NETWORK_REQUESTED_TimeoutNone</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>11314</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that in state FULL_COM_NETWORK_REQUESTED_ENTRY, with ComMNmVariant equal NONE,
    after the expiration of the ComM timer: ComMTMinFullComModeDuration, the state machine
    switch to FULL_COM_NETWORK_REQUESTED_PENDING.
  
Test Object: None.
Test Precondition: 
    Module state:
    - Module is initialized
    - Communication is not allowed
    Important test configuration details:
    - ComMNmVariant "NONE"
  
Test Execution: 
    01: Initialize test case.
    02: Simulate active diagnostic indication and invoke main function.
    03: Current state is COMM_NO_COM_REQUEST_PENDING.
    04: Allow communication, simulate inactive diagnostic and invoke main function.
    05: Invoke main function and verify the current state is COMM_FULL_COM_NETWORK_REQUESTED.
    06: Activate Diagnostic and wait the last main funtion.
    07: VP: (ComM.EB_Ref.SWS_ComM_00886.NmVariant.NONE, ComM.EB.Dsn.StateDynamics.TIMEOUT_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_0):
        - After timer stopped, simulate active diagnostic, call main function and ensure that
        the current state is COMM_FULL_COM_NETWORK_REQUESTED.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TIMEOUT_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1739</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00886.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1950</internalId></specobject>
    <specobject>
      <id>TS_COMM_FULL_COM_NETWORK_REQUESTED_TimeoutLight</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>11400</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that in state FULL_COM_NETWORK_REQUESTED_ENTRY, with ComMNmVariant equal LIGHT,
    after the expiration of the ComM timer: ComMTMinFullComModeDuration, the state machine
    switch to FULL_COM_NETWORK_REQUESTED_PENDING.
  
Test Object: None.
Test Precondition: 
    Module state:
    - Module is initialized
    - Communication is not allowed
    Important test configuration details:
    - ComMNmVariant "LIGHT"
  
Test Execution: 
    01: Initialize test case.
    02: Simulate active diagnostic indication and invoke main function.
    03: Current state is COMM_NO_COM_REQUEST_PENDING.
    04: Allow communication, simulate inactive diagnostic and invoke main function.
    05: Invoke main function and verify the current state is COMM_FULL_COM_NETWORK_REQUESTED.
    06: Activate Diagnostic and wait the last main funtion.
    07: VP: (ComM.EB_Ref.SWS_ComM_00886.NmVariant.LIGHT, ComM.EB.Dsn.StateDynamics.TIMEOUT_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_1):
        - After timer has stopped, simulate active diagnostic, call main function and ensure that
        the current state is COMM_FULL_COM_NETWORK_REQUESTED.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TIMEOUT_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1740</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00886.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1951</internalId></specobject>
    <specobject>
      <id>TS_COMM_FullCommunicationTransition</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>11486</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    To test the transition from state COMM_FULL_COM_NETWORK_REQUESTED to state
    COMM_FULL_COM_READY_SLEEP with ComMNmVariant set to FULL.
    enabled.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize ComM module by calling ComM_Init().
    03: Clear inhibition status.
    04: Set ComM_CommunicationAllowed to TRUE and invoke main function.
    05: Invoke Network Start Indication for channel and call main function.
    06: VP (ComM.SWS_ComM_00888, ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_0):
        - Verify the current state is COMM_FULL_COM_READY_SLEEP.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00888</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1743</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1952</internalId></specobject>
    <specobject>
      <id>TS_COMM_NETWORK_REQUESTED_TO_READY_SLEEP_Timeout</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>11555</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Verify that in state FULL_COM_NETWORK_REQUESTED, with ComMNmVariant equal NONE,
    after the expiration of the ComM timer: ComMTMinFullComModeDuration, the state machine
    switch to FULL_COM_READY_SLEEP and immediate after, state machine switch to COMM_NO_COMMUNICATION.
  
Test Object: None.
Test Precondition: 
    Module state:
    - Module is initialized
    - Communication is not allowed
    Important test configuration details:
    - ComMNmVariant "NONE"
  
Test Execution: 
    01: Initialize test case.
    02: Call ComM_Nm_NetworkStartIndication() and invoke main function.
    03: Call ComM_CommunicationAllowed() and invoke main function.
    04: Ensure the timer ComMTMinFullComModeDuration has started and invoke main function.
    05: Call main function.
    06: VP: (ComM.EB_Ref.SWS_ComM_00889.NmVariant.NONE, ComM.EB.Dsn.StateDynamics.TIMEOUT_NO_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_0):
        - Verify the current state is COMM_NO_COMMUNICATION (from COMM_FULL_COM_NETWORK_REQUESTED
        and COMM_FULL_COM_READY_SLEEP).
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TIMEOUT_NO_USER_REQUEST_FULL_COM_NETWORK_REQUESTED_ENTRY_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1741</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00889.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1953</internalId></specobject>
    <specobject>
      <id>TS_COMM_GETCURRENT_PNC_COM_MODE_PNC_DISABLED</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_1/source/application/Tests.c</sourcefile>
      <sourceline>11636</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that in case PNC functionality is disabled,
    function ComM_GetCurrentPNCComMode returns COMM_E_NO_PNC_ASSIGNED
  
Test Object: None.
Test Precondition: 
    Module state:
    - Module is initialized
    - Communication is not allowed
    - PNC functionality is disabled
  
Test Execution: 
    01: Initiate modules and stubs
    02: VP(ComM.SWS_ComM_01023,
           ComM.EB.ComM_GetCurrentPNCComMode)
        - Check that in case PNC functionality is disabled function 
          ComM_GetCurrentPNComMode returns COMM_E_NO_PNC_ASSIGNED
    03: VP(ComM.EB_Ref.SWS_ComM_00649.COMM_E_NO_PNC_ASSIGNED)
        - Verify that COMM_E_NO_PNC_ASSIGNED has the value 4
  
Test Input: 
   - Call ComM_GetCurrentPNCComMode
  
Test Output: 
   - ComM_GetCurrentPNCComMode returns COMM_E_NO_PNC_ASSIGNED
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_GetCurrentPNCComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00649.COMM_E_NO_PNC_ASSIGNED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1954</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Schm_Call</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_10_SchM/source/application/Tests.c</sourcefile>
      <sourceline>67</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: ComM_Init.
    02: VP (ComM.EB.SchM_Call_CanSM_RequestComMode):
        - Verify SchM_Call for ComM_BusSmRequestComModeMcFpList for ComMChannel_0;
    03: VP (ComM.EB.SchM_Call_FrSM_RequestComMode):
        - Verify SchM_Call for ComM_BusSmRequestComModeMcFpList for ComMChannel_1;
    04: VP (ComM.EB.SchM_Call_EthSM_RequestComMode):
        - Verify SchM_Call for ComM_BusSmRequestComModeMcFpList for ComMChannel_2;
    05: VP (ComM.EB.SchM_Call_LinSM_RequestComMode):
        - Verify SchM_Call for ComM_BusSmRequestComModeMcFpList for ComMChannel_3;
    06: VP (ComM.EB.SchM_Call_LinSM_RequestComMode):
        - Verify SchM_Call for ComM_BusSmRequestComModeMcFpList for ComMChannel_4;
    07: VP (ComM.EB.SchM_Call_LinSM_RequestComMode):
        - Verify SchM_Call for ComM_BusSmRequestComModeMcFpList for ComMChannel_5;
    08: VP (ComM.EB.SchM_Call_LinSM_RequestComMode):
        - Verify SchM_Call for ComM_BusSmRequestComModeMcFpList for ComMChannel_6;
    09: VP (ComM.EB.SchM_Call_Dcm_ComM_FullComModeEntered):
        - Verify SchM_Call for ComM_Dcm_Notif_FpList for ComMChannel_3;
    10: VP (ComM.EB.SchM_Call_Dcm_ComM_SilentComModeEntered):
        - Verify SchM_Call for ComM_Dcm_Notif_FpList for ComMChannel_3;
    11: VP (ComM.EB.SchM_Call_Dcm_ComM_NoComModeEntered):
        - Verify SchM_Call for ComM_Dcm_Notif_FpList for ComMChannel_3;
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_CanSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>653</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_FrSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_EthSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_LinSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Dcm_ComM_FullComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Dcm_ComM_SilentComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>658</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Dcm_ComM_NoComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>659</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1955</internalId></specobject>
    <specobject>
      <id>TS_COMM_Schm_Call_ComM_RequiredCSEntry</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_10_SchM/source/application/Tests.c</sourcefile>
      <sourceline>156</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Reset stub invocation counts.
    02: Initialize test case.
    03: Initialize ComM and stubs.
    04: Set ComM_CommunicationAllowed to TRUE for all the channels.
    05: Simulate Nm NetworkStartIndication for channels configured as FULL/ PASSIVE.
    06: Call main functions of all channels.
    07: VP(ComM.EB.SchM_Call_CanSM_RequestComMode,
           ComM.EB.SchM_Call_EthSM_RequestComMode,
           ComM.EB.SchM_Call_FrSM_RequestComMode,
           ComM.EB.SchM_Call_Dcm_ComM_FullComModeEntered):
        - CanSM_RequestComMode_Stub, EthSM_RequestComMode_Stub,
        FrSM_RequestComMode_Stub and Dcm_ComM_FullComModeEntered
        has been requested.
    08: Call main function for channel with bus type LinSM.
    09: Request COMM_FULL_COMMUNICATION.
    10: Call main function for channel with bus type LinSM.
    11: VP(ComM.EB.SchM_Call_LinSM_RequestComMode):
        - LinSM_RequestComMode_Stub has been requested.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_CanSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>653</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_FrSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_EthSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_LinSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Dcm_ComM_FullComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1956</internalId></specobject>
    <specobject>
      <id>TS_COMM_Schm_Call_ComM_Dcm_NoComModeEntered</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_10_SchM/source/application/Tests.c</sourcefile>
      <sourceline>267</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs.
    02: Call ComM_Init and call main function for channel with bus type CanSM.
    03: Call ComM_CommunicationAllowed for channel with bus type CanSM.
        Call main function.
    04: Call ComM_DCM_ActiveDiagnostic and call main function.
    05: Call ComM_DCM_InactiveDiagnostic and call main function.
    06: Call ComM_Nm_PrepareBusSleepMode.
    07: VP(ComM.EB.SchM_Call_Dcm_ComM_SilentComModeEntered):
        - Check if ComM mode is COMM_SILENT_COMMUNICATION.
    08: Call ComM_Nm_BusSleepMode.
    09: VP(ComM.EB.SchM_Call_Dcm_ComM_NoComModeEntered):
        - Check if ComM mode is COMM_NO_COMMUNICATION.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Dcm_ComM_SilentComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>658</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Dcm_ComM_NoComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>659</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1957</internalId></specobject>
    <specobject>
      <id>TS_COMM_Schm_Call_ComM_Nm_Mode</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_10_SchM/source/application/Tests.c</sourcefile>
      <sourceline>347</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that for configurations with multicore enabled, state of busNm
    is stored from ComM_Nm_NetworkMode, ComM_Nm_PrepareBusSleepMode or
    ComM_Nm_BusSleepMode.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Reset stub invocation counts.
    02: Initialize ComM module.
    03: Request COMM_FULL_COMMUNICATION. Call main function.
    04: Set ComM_CommunicationAllowed to TRUE and call main function.
    05: Verify if ComM state is COMM_FULL_COM_NETWORK_REQUESTED.
    06: Request COMM_NO_COMMUNICATION. Call main function.
    07: Call ComM_Nm_PrepareBusSleepMode and call main function.
    08: VP(ComM.EB.BusNm_GetState):
        - Verify if ComM state is COMM_SILENT_COM.
    09: Call ComM_Nm_NetworkMode and call main function.
    10: VP(ComM.EB.BusNm_GetState):
        - Verify if ComM state is COMM_FULL_COM_READY_SLEEP.
    11: Request COMM_NO_COMMUNICATION.
    12: Call ComM_Nm_PrepareBusSleepMode and call main function.
    13: VP(ComM.EB.BusNm_GetState):
        - Verify if ComM state is COMM_SILENT_COM.
    14: Call ComM_Nm_BusSleepMode and call main function.
    15: VP(ComM.EB.BusNm_GetState):
        - Verify if ComM state is COMM_NO_COM_NO_PENDING_REQUEST.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.BusNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1958</internalId></specobject>
    <specobject>
      <id>TS_COMM_Schm_Call_ComM_Nm_Mode_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_10_SchM/source/application/Tests.c</sourcefile>
      <sourceline>460</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that for configurations with multicore enabled, state of busNm
    is stored from ComM_Nm_BusSleepMode.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Reset stub invocation counts.
    02: Initialize test case.
    03: Set ComM_CommunicationAllowed to TRUE. Call main function.
    04: Request full communication. Call main function.
    05: Verify if ComM state is COMM_FULL_COM_NETWORK_REQUESTED.
    06: Request no communication. Call main function.
    07: Call ComM_Nm_BusSleepMode. Call main function.
    08: VP(ComM.EB.BusNm_GetState):
        - Check if ComM state is COMM_NO_COM_NO_PENDING_REQUEST.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.BusNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1959</internalId></specobject>
    <specobject>
      <id>TS_COMM_Schm_Call_ComM_Nm_Mode_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_10_SchM/source/application/Tests.c</sourcefile>
      <sourceline>535</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that for configurations with multicore enabled, state of busNm
    is stored from ComM_Nm_NetworkMode, ComM_Nm_PrepareBusSleepMode
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Reset stub invocation counts.
    02: Initialize ComM module.
    03: Request COMM_FULL_COMMUNICATION. Call main function.
    04: Set ComM_CommunicationAllowed to TRUE and call main function.
    05: Verify if ComM state is COMM_FULL_COM_NETWORK_REQUESTED.
    06: Call ComM_Nm_PrepareBusSleepMode and call main function.
    07: VP(ComM.EB.BusNm_GetState):
        - Verify if ComM state is COMM_SILENT_COM.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.BusNm_GetState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>671</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1960</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Multicore_EIRAOnSameCoreAsMastercore_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_11_SchM/source/application/Tests.c</sourcefile>
      <sourceline>95</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that in case multicore is enabled and activity
    is simulated on an EIRA signal which is on the same core as the Master core,
    PNC is waken up.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs and ComM
    02: Simulate activity on EIRA
    03: VP(ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore)
        - Check PNC is waken up
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1961</internalId></specobject>
    <specobject>
      <id>TS_COMM_Multicore_ERAOnSameCoreAsMastercore_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_11_SchM/source/application/Tests.c</sourcefile>
      <sourceline>160</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that in case multicore is enabled and activity
    is simulated on an ERA signal which is on the same core as the Master core,
    PNC is waken up.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize ComM and stubs
    02: Initialize Rx ERA and Tx buffers
    03: Simulate ERA activity
    04: VP(ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore)
        - Check PNC is waken up
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1962</internalId></specobject>
    <specobject>
      <id>TS_COMM_Multicore_ERAPassiveOnSameCoreAsMastercore_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_11_SchM/source/application/Tests.c</sourcefile>
      <sourceline>235</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that in case multicore is enabled and activity
    is simulated on an ERA signal which is on the same core as the Master core,
    PNC is waken up.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize ComM and stubs
    02: Initialize Rx ERA and Tx buffers
    03: Simulate ERA activity
    04: VP(ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore)
        - Check PNC is waken up
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1963</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Multicore_EIRAOnSameCoreAsMastercore_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_12_SchM/source/application/Tests.c</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that in case multicore is enabled and activity
    is simulated on an EIRA signal which is on the same core as the Master core,
    PNC is waken up.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize module and stubs
    02: Simulate EIRA
    03: VP(ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore)
        - Check that PNC is waken up
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1964</internalId></specobject>
    <specobject>
      <id>TS_COMM_Multicore_ERAOnSameCoreAsMastercore_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_12_SchM/source/application/Tests.c</sourcefile>
      <sourceline>145</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that in case multicore is enabled and activity
    is simulated on an ERA signal which is on the same core as the Master core,
    PNC is waken up.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs and module
    02: Simulate ERA
    03: VP(ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore, ComM.EB.SchM_Call_Sender_Receiver_SendSlaveCore)
        - Check that PNC is waken up
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_SendSlaveCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>663</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1965</internalId></specobject>
    <specobject>
      <id>TS_COMM_Multicore_ERAPassiveOnSameCoreAsMastercore_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_12_SchM/source/application/Tests.c</sourcefile>
      <sourceline>222</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that in case multicore is enabled and activity
    is simulated on an ERA signal which is on the same core as the Master core,
    PNC is waken up.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize stubs and module
    02: Simulate ERA
    03: VP(ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore, ComM.EB.SchM_Call_Sender_Receiver_SendSlaveCore)
        - Check that PNC is waken up
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_SendSlaveCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>663</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1966</internalId></specobject>
    <specobject>
      <id>TS_COMM_Multicore_EIRAOnDifferentCoreAsMastercore_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_12_SchM/source/application/Tests.c</sourcefile>
      <sourceline>298</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that in case multicore is enabled and activity
    is simulated on an EIRA signal which is not on the same core as the Master core,
    PNC is waken up.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize ComM and stubs
    02: Simulate EIRA
    03: VP(ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore)
        - Check that PNC is waken up
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_SendReceiveOnSameCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>662</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1967</internalId></specobject>
    <specobject>
      <id>TS_COMM_Multicore_ERAOnDifferentCoreAsMastercore_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_12_SchM/source/application/Tests.c</sourcefile>
      <sourceline>359</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that in case multicore is enabled and activity
    is simulated on an ERA signal which is not on the same core as the Master core,
    PNC is waken up.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize ComM and stubs
    02: Simulate activity on ERA
    03: VP(ComM.EB.SchM_Call_Sender_Receiver_SendSlaveCore, ComM.EB.SchM_Call_Sender_Receiver_ReceiveSlaveCore)
        - Check that PNC is waken up
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_SendSlaveCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>663</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_ReceiveSlaveCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1968</internalId></specobject>
    <specobject>
      <id>TS_COMM_Multicore_ERAPassiveOnDifferentCoreAsMastercore_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_12_SchM/source/application/Tests.c</sourcefile>
      <sourceline>438</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that in case multicore is enabled and activity
    is simulated on an ERA signal which is not on the same core as the Master core,
    PNC is waken up.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize ComM and stubs
    02: Simulate activity on ERA
    03: VP(ComM.EB.SchM_Call_Sender_Receiver_SendSlaveCore, ComM.EB.SchM_Call_Sender_Receiver_ReceiveSlaveCore)
        - Check that PNC is waken up
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_SendSlaveCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>663</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_ReceiveSlaveCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>664</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1969</internalId></specobject>
    <specobject>
      <id>TS_COMM_Multicore_SlaveDataSetEiraDet</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_12_SchM/source/application/Tests.c</sourcefile>
      <sourceline>517</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that in case SchM call fails for a sender receiver interface DET is reported
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Stubs and ComM
    02: Set SchM call to return E_NOT_OK
    03: VP(ComM.EB.SchM_Call_Sender_Receiver_DET)
        - Check DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1970</internalId></specobject>
    <specobject>
      <id>TS_COMM_Multicore_SlaveDataSetEraDet</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_12_SchM/source/application/Tests.c</sourcefile>
      <sourceline>573</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that in case SchM call fails for a sender receiver interface DET is reported
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Stubs and ComM
    02: Set SchM call to return E_NOT_OK
    03: VP(ComM.EB.SchM_Call_Sender_Receiver_DET)
        - Check DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1971</internalId></specobject>
    <specobject>
      <id>TS_COMM_Multicore_MasterDataGetEiraDet</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_12_SchM/source/application/Tests.c</sourcefile>
      <sourceline>629</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that in case SchM call fails for a sender receiver interface DET is reported
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Stubs and ComM
    02: Set SchM call to return E_NOT_OK
    03: VP(ComM.EB.SchM_Call_Sender_Receiver_DET)
        - Check DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1972</internalId></specobject>
    <specobject>
      <id>TS_COMM_Multicore_MasterDataGetEraDet</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_12_SchM/source/application/Tests.c</sourcefile>
      <sourceline>684</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that in case SchM call fails for a sender receiver interface DET is reported
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Stubs and ComM
    02: Set SchM call to return E_NOT_OK
    03: VP(ComM.EB.SchM_Call_Sender_Receiver_DET)
        - Check DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1973</internalId></specobject>
    <specobject>
      <id>TS_COMM_Multicore_MasterDataSetEiraDet</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_12_SchM/source/application/Tests.c</sourcefile>
      <sourceline>740</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that in case SchM call fails for a sender receiver interface DET is reported
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Stubs and ComM
    02: Set SchM call to return E_NOT_OK
    03: VP(ComM.EB.SchM_Call_Sender_Receiver_DET)
        - Check DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1974</internalId></specobject>
    <specobject>
      <id>TS_COMM_Multicore_MasterDataSetEraDet</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_12_SchM/source/application/Tests.c</sourcefile>
      <sourceline>802</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that in case SchM call fails for a sender receiver interface DET is reported
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Stubs and ComM
    02: Set SchM call to return E_NOT_OK
    03: VP(ComM.EB.SchM_Call_Sender_Receiver_DET)
        - Check DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1975</internalId></specobject>
    <specobject>
      <id>TS_COMM_Multicore_SlaveDataGetEiraDet</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_12_SchM/source/application/Tests.c</sourcefile>
      <sourceline>864</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that in case SchM call fails for a sender receiver interface DET is reported
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Stubs and ComM
    02: Set SchM call to return E_NOT_OK
    03: VP(ComM.EB.SchM_Call_Sender_Receiver_DET)
        - Check DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1976</internalId></specobject>
    <specobject>
      <id>TS_COMM_Multicore_SlaveDataGetEraDet</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_12_SchM/source/application/Tests.c</sourcefile>
      <sourceline>926</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test verifies that in case SchM call fails for a sender receiver interface DET is reported
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Stubs and ComM
    02: Set SchM call to return E_NOT_OK
    03: VP(ComM.EB.SchM_Call_Sender_Receiver_DET)
        - Check DET is reported
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Sender_Receiver_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>661</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1977</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>Tst_Dcm_ComM_FullComModeEntered</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_13_SchM/source/application/Tests.c.m4</sourcefile>
      <sourceline>75</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize ComMode. Reset stub and initialize stub callouts.
    02: Initialize ComM module.
    03: Invoke the main function for channel 3.
    04: Initialize Det stub.
    05: Allow communication for channel 3.
    06: Invoke the main function for channel 3.
    07: Call ComM_BusSM_ModeIndication(COMM_FULL_COMMUNICATION).
    08: Invoke the main function for channel 3.
    09: VP(ComM.EB.SchM_Call_Dcm_ComM_FullComModeEnteredm ComM.EB.SchM_Call_Client_Server_DET):
        - If ComMDevErrorReport = 1, a Det call must have been performed correctly.
        - If ComMDevErrorReport = 0, no Det call must have been performed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Dcm_ComM_FullComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>657</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Client_Server_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1978</internalId></specobject>
    <specobject>
      <id>Tst_Dcm_ComM_SilentComModeEntered</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_13_SchM/source/application/Tests.c.m4</sourcefile>
      <sourceline>151</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize ComMode. Reset stub and initialize stub callouts.
    02: Initialize ComM module.
    03: Invoke the main function for channel 3.
    04: Initialize Det stub.
    05: Allow communication for channel 3.
    06: Invoke the main function for channel 3.
    07: Call ComM_DCM_ActiveDiagnostic for channel 3.
    08: Invoke the main function for channel 3.
    09: Call ComM_DCM_InactiveDiagnostic for channel 3.
    10: Invoke the main function for channel 3.
    11: Call ComM_Nm_PrepareBusSleepMode for channel 3.
    12: Invoke the main function for channel 3.
    13: Call ComM_BusSM_ModeIndication(COMM_FULL_COMMUNICATION).
    14: Invoke the main function for channel 3.
    15: VP(ComM.EB.SchM_Call_Dcm_ComM_SilentComModeEntered, ComM.EB.SchM_Call_Client_Server_DET):
        - If ComMDevErrorReport = 1, a Det call must have been performed correctly.
        - If ComMDevErrorReport = 0, no Det call must have been performed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Dcm_ComM_SilentComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>658</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Client_Server_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1979</internalId></specobject>
    <specobject>
      <id>Tst_Dcm_ComM_NoComModeEntered</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_13_SchM/source/application/Tests.c.m4</sourcefile>
      <sourceline>245</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize ComMode. Reset stub and initialize stub callouts.
    02: Initialize ComM module.
    03: Invoke the main function for channel 3.
    04: Initialize Det stub.
    05: Allow communication for channel 3.
    06: Invoke the main function for channel 3.
    07: Call ComM_DCM_InactiveDiagnostic for channel 3.
    08: Invoke the main function for channel 3.
    09: Call ComM_Nm_PrepareBusSleepMode for channel 3.
    10: Invoke the main function for channel 3.
    11: Call ComM_Nm_BusSleepMode for channel 3.
    12: Invoke the main function for channel 3.
    13: Call ComM_BusSM_ModeIndication(COMM_FULL_COMMUNICATION).
    14: Invoke the main function for channel 3.
    15: VP(ComM.EB.SchM_Call_Dcm_ComM_NoComModeEntered, ComM.EB.SchM_Call_Client_Server_DET):
        - If ComMDevErrorReport = 1, a Det call must have been performed correctly.
        - If ComMDevErrorReport = 0, no Det call must have been performed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Dcm_ComM_NoComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>659</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Client_Server_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1980</internalId></specobject>
    <specobject>
      <id>Tst_CanSM_RequestComMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_13_SchM/source/application/Tests.c.m4</sourcefile>
      <sourceline>339</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize ComMode. Reset stub and initialize stub callouts.
    02: Initialize ComM module.
    03: Invoke the main function for channel 3.
    04: Initialize Det stub.
    05: Allow communication for channel 3.
    06: Invoke the main function for channel 3.
    07: Call ComM_RequestComMode(COMM_FULL_COMMUNICATION) for user Test_ComMUser_0.
    08: Invoke the main function for channel 3.
    09: VP(ComM.EB.SchM_Call_CanSM_RequestComMode, ComM.EB.SchM_Call_Client_Server_DET):
        - If ComMDevErrorReport = 1, a Det call must have been performed correctly.
        - If ComMDevErrorReport = 0, no Det call must have been performed.
    10: Call ComM_RequestComMode(COMM_NO_COMMUNICATION) for user Test_ComMUser_0.
    11: Invoke the main function for channel 3.
    12: Call ComM_Nm_PrepareBusSleepMode for channel 3.
    13: Invoke the main function for channel 3.
    14: Call ComM_BusSM_ModeIndication for channel 3.
    15:Invoke the main function for channel 3.
    16: VP(ComM.EB.SchM_Call_CanSM_RequestComMode, ComM.EB.SchM_Call_Client_Server_DET):
        - If ComMDevErrorReport = 1, a Det call must have been performed correctly;
        - If ComMDevErrorReport = 0, no Det call must have been performed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_CanSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>653</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Client_Server_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1981</internalId></specobject>
    <specobject>
      <id>Tst_FrSM_RequestComMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_13_SchM/source/application/Tests.c.m4</sourcefile>
      <sourceline>447</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize ComMode. Reset stub and initialize stub callouts.
    02: Initialize ComM module.
    03: Invoke the main function for channel 2.
    04: Initialize Det stub.
    05: Allow communication for channel 2.
    06: Invoke the main function for channel 2.
    07: Call ComM_CommunicationAllowed for channel 2.
    08: Invoke the main function for channel 2.
    09: Call ComM_RequestComMode(COMM_FULL_COMMUNICATION) for user Test_ComMUser_0.
    10: Invoke the main function for channel 2.
    11: VP(ComM.EB.SchM_Call_FrSM_RequestComMode, ComM.EB.SchM_Call_Client_Server_DET):
        - If ComMDevErrorReport = 1, a Det call must have been performed correctly.
        - If ComMDevErrorReport = 0, no Det call must have been performed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_FrSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>655</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Client_Server_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1982</internalId></specobject>
    <specobject>
      <id>Tst_EthSM_RequestComMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_13_SchM/source/application/Tests.c.m4</sourcefile>
      <sourceline>527</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize ComMode. Reset stub and initialize stub callouts.
    02: Initialize ComM module.
    03: Invoke the main function for channel 1.
    04: Initialize Det stub.
    05: Call ComM_EcuM_WakeUpIndication for channel 1.
    06: Invoke the main function for channel 1.
    07: Call ComM_CommunicationAllowed for channel 1.
    08: Invoke the main function for channel 1.
    09: Call ComM_RequestComMode(COMM_FULL_COMMUNICATION) for user Test_ComMUser_0.
    10: Invoke the main function for channel 1.
    11: VP(ComM.EB.SchM_Call_EthSM_RequestComMode, ComM.EB.SchM_Call_Client_Server_DET):
        - If ComMDevErrorReport = 1, a Det call must have been performed correctly.
        - If ComMDevErrorReport = 0, no Det call must have been performed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_EthSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>654</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Client_Server_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1983</internalId></specobject>
    <specobject>
      <id>Tst_LinSM_RequestComMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_13_SchM/source/application/Tests.c.m4</sourcefile>
      <sourceline>607</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that function calls are done via RTE SCHM mechanism.
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize ComMode. Reset stub and initialize stub callouts.
    02: Initialize ComM module.
    03: Invoke the main function for channel 4.
    04: Initialize Det stub.
    05: Call ComM_CommunicationAllowed for channel 4.
    06: Invoke the main function for channel 4.
    07: Call ComM_RequestComMode(COMM_FULL_COMMUNICATION) for user Test_ComMUser_0.
    08: Invoke the main function for channel 4.
    09: VP(ComM.EB.SchM_Call_LinSM_RequestComMode, ComM.EB.SchM_Call_Client_Server_DET):
        - If ComMDevErrorReport = 1, a Det call must have been performed correctly.
        - If ComMDevErrorReport = 0, no Det call must have been performed.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_LinSM_RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>656</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Client_Server_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1984</internalId></specobject>
    <specobject>
      <id>Tst_Dcm_ComM_BusSM_Notification</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_13_SchM/source/application/Tests.c.m4</sourcefile>
      <sourceline>681</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case BusNm is failed to be notified about state change, 
m4_ifelse(PM_ComMDevErrorReport,1,\-:    
    DET is reported
:-/,m4_ifelse( :else: )\-:
    DET is not reported
:-/m4_ifelse( :endif: ))
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
  
Test Execution: 
    01: Initialize Stubs
    02: Initilize ComM
    03: Set Det_ReportError_Stub.Count to 0
    04: Call communication allowed
    05: Call ComM_DCM_ActiveDiagnostic
    06: Check State
    07: Call ComM_DCM_InactiveDiagnostic
m4_ifelse(PM_ComMDevErrorReport,1,\-:
    08: Set CanSM_RequestComMode to return SCHM_E_NO_DATA
:-/,m4_ifelse( :else: )\-:
    08: Set CanSM_RequestComMode to return SCHM_E_OK
:-/m4_ifelse( :endif: ))     
    09: Call ComM_Nm_BusSleepMode
    10: Check state
m4_ifelse(PM_ComMDevErrorReport,1,\-:
    11: If ComMDevErrorReport = 1, a Det call must have been performed correctly
:-/,m4_ifelse( :else: )\-:
    11: If ComMDevErrorReport = 0, a Det call is not performed
:-/m4_ifelse( :endif: ))
  
Test Input: 
    - activate DCM
    - in-activate DCM
m4_ifelse(PM_ComMDevErrorReport,1,\-:
    - set BusSm to return SCHM_E_NO_DATA
:-/,m4_ifelse( :else: )\-:
    - set BusSm to return SCHM_E_OK
:-/m4_ifelse( :endif: ))    
  
Test Output: 
m4_ifelse(PM_ComMDevErrorReport,1,\-:    
    DET is reported
:-/,m4_ifelse( :else: )\-:
    DET is not reported
:-/m4_ifelse( :endif: ))
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Dcm_ComM_NoComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>659</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SchM_Call_Client_Server_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>660</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1985</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_GetVersionInfoTest_DetOn_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_14/source/application/GetVersionInfo_test.c.m4</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM GetVersionInfo API with valid pointer as parameter.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Initialize ComM module.
    02: Set the Version information values to invalid value before the call of
        ComM_GetVersionInfo.
    03: VP(ComM.ASR403.SWS_ComM_00823, ComM.ASR403.SWS_ComM_00370):
        Call ComM GetVersionInfo with a valid address.
    04: VP(ComM.ASR403.SWS_ComM_00822, ComM.ECUC_ComM_00622):
        Verify that the version parameters are those that are
        configured/hardcoded in the module.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00823</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00822</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00370</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00622</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1986</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_ModeInhibitionWithDcm</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_14/source/application/Tests.c</sourcefile>
      <sourceline>63</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test state behaviour of channels when Mode limitation is enabled when also Dcm is used.
    Test shall reproduce issue described in ticket: ASCCOMM-1166
  
Test Object: Channel Inhibition with Dcm usage
Test Precondition: 
    - mode limitation is enabled
    - Dcm usage is enabled
  
Test Execution: 
    01: Initialize stubs and module
    02: Allow communication
    03: Request full communication
    04: check the current state is COMM_FULL_COM_NETWORK_REQUESTED
    05: Enable limitation for channel 6
    06: VP(ComM.SWS_ComM_00215)
        - Check the current state is Ready Sleep State
    07: BusNm indicates Bus Sleep Mode
    08: Check the current state is COMM_NO_COM_NO_PENDING_REQUEST
    09: Call ComM_DCM_ActiveDiagnostic
    10: Check the current state is COMM_FULL_COM_NETWORK_REQUESTED
    11: Call ComM_DCM_InactiveDiagnostic
    12: Check that channel is released
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1987</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_GetVersionInfoTest_DetOn_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_15/source/application/GetVersionInfo_test.c.m4</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM GetVersionInfo API with valid pointer as parameter.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Initialize ComM module.
    02: Set the Version information values to invalid value before the call of
        ComM_GetVersionInfo.
    03: VP(ComM.ASR403.SWS_ComM_00823, ComM.ASR403.SWS_ComM_00370):
        Call ComM GetVersionInfo with a valid address.
    04: VP(ComM.ASR403.SWS_ComM_00822, ComM.ECUC_ComM_00622):
        Verify that the version parameters are those that are
        configured/hardcoded in the module.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00823</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00822</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00370</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00622</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1988</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_WakeupInhibition13</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_15/source/application/Tests.c</sourcefile>
      <sourceline>83</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test state behaviour of channels when wakeup inhibition is enabled.
  
Test Object: Wakeup Channel Inhibition
Test Precondition: 
    - mode limitation is disabled
    - wakeup inhibition is enabled
  
Test Execution: 
    01: Initialize stubs and module
    02: Initialize ComM
    03: Set ECU group classification in order that ComM_PreventWakeUp will get active
    04: Allow communication
    05: Call prevent wakeup
    06: VP(ComM.ASR403.SWS_ComM_00156)
        - Request full communication 
        - since prevent wakeup is active user request shall be rejected
    07: check the current state is COMM_NO_COM_NO_PENDING_REQUEST
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1989</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_BswM_ComM_CurrentPNCMode_With_PNCID_255</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_16/source/application/Tests.c</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case user is requested with COMM_FULL_COMMUNICATION,
    BswM is informed about PNC state change.
    Test also uses a PNC id greater than 63.
  
Test Object: None.
Test Precondition: 
    - Partial networking is enabled
    - A PncId is configurred to value greater than 63
  
Test Execution: 
    01: Initialize Stubs
    02: Initialize Module
    03: Allow communication for the required channels
    04: Request Full Communication
    05: Invoke mainfunction
    06: VP(ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_CurrentPNCMode)
        - Check that BswM is notified about PNC state change
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_CurrentPNCMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1990</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_ComMReleaseNoneChannels_True_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_17/source/application/Tests.c</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  
Test Object: None.
Test Precondition: 
    ComMReleaseNoneChannels is set to true 
    Bus Type is diffrent than Internal and
    Nm Variant si None.
  
Test Execution: 
    01: Intialize ComM
    02: Allow Communication
    03: Request Full Communication
    04: Check the Current state is COMM_FULL_COM_NETWORK_REQUESTED
    05: Wait until TEST_COMM_T_MIN_FULL_COM_MODE_DURATION expires
    06: Release the network
    07: VP(ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_TIMEOUT_1
           ComM.EB.ComMReleaseNoneChannels_BusTypeDifferentThan_COMM_BUS_TYPE_INTERNAL)
        - Check the state remains Ready Sleep
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_TIMEOUT_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1714</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComMReleaseNoneChannels_BusTypeDifferentThan_COMM_BUS_TYPE_INTERNAL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>680</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComMReleaseNoneChannels_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>678</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1991</internalId></specobject>
    <specobject>
      <id>TS_COMM_ComMReleaseNoneChannels_True_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_17/source/application/Tests.c</sourcefile>
      <sourceline>130</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  
Test Object: None.
Test Precondition: 
    ComMReleaseNoneChannels is set to true 
    Bus Type is Internal and
    Nm Variant si None.
  
Test Execution: 
    01: Intialize ComM
    02: Allow Communication
    03: Request Full Communication
    04: Check the Current state is COMM_FULL_COM_NETWORK_REQUESTED
    05: Wait until TEST_COMM_T_MIN_FULL_COM_MODE_DURATION expires
    06: Release the network
    07: VP(ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_TIMEOUT_2
           ComM.EB.ComMReleaseNoneChannels_BusTypeIs_COMM_BUS_TYPE_INTERNAL)
        - Check that the state mchine switches to No Communication
    
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_TIMEOUT_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1715</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComMReleaseNoneChannels_BusTypeIs_COMM_BUS_TYPE_INTERNAL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>681</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComMReleaseNoneChannels_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>678</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1992</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_ComMResetAfterForcingNoComm_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_18/source/application/Tests.c</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when calling ComM_LimitChannelToNoComMode during full communication, and
    transitioning to no communication while ComMResetAfterForcingNoComm is set to true,
    then a call to BswM_ComM_InitiateReset occurs. (test on fr channel)
  
Test Object: None.
Test Precondition: 
    ComMResetAfterForcingNoComm must be set to TRUE
  
Test Execution: 
    01: initialize test, set stub counters to 0
    02: Intialize ComM
    03: Allow Communication
    04: Request Full Communication
    05: VP (ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_0):
        Verify that FrSM_RequestComMode/CanSM_RequestComMode has been invoked
        with COMM_FULL_COMMUNICATION.
    06: Verify the current state as COMM_FULL_COM_NETWORK_REQUESTED.
    07: Set flag limitToNoCom for a FrNM channel of user Test_ComMUser_0
    08: Call once main function to enter in ready sleep state due to limitToNoCom
    09: Verify the current State is COMM_FULL_COM_READY_SLEEP
    10: Simulate the bus sleep indication for FrNm channel of user Test_ComMUser_0
    11: Call FrNm main function for to Test_ComMUser_0 for ComM to enter no communication
    12: VP (ComM.EB.Dsn.Algorithm.BusSM_RequestComModeNOCOM, ComM.SWS_ComM_00073):
        Verify the Current ComMode Requested by FrSM as COMM_NO_COMMUNICATION.
    13: VP (ComM.SWS_ComM_00355, ComM.ECUC_ComM_00558):
        Check that BswM_ComM_InitiateReset was called.
  
Test Input: 
    ComM_LimitChannelToNoComMode during full communication
    Trsansition to no communication
  
Test Output: 
    BswM_ComM_InitiateReset is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00355</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00558</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_InitiateReset</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1993</internalId></specobject>
    <specobject>
      <id>TS_COMM_ComMResetAfterForcingNoComm_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_18/source/application/Tests.c</sourcefile>
      <sourceline>197</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when calling ComM_LimitChannelToNoComMode during full communication, and
    transitioning to no communication while ComMResetAfterForcingNoComm is set to true,
    then a call to BswM_ComM_InitiateReset occurs. (test on can channel)
  
Test Object: None.
Test Precondition: 
    ComMResetAfterForcingNoComm must be set to TRUE
  
Test Execution: 
    01: initialize test, set stub counters to 0
    02: Intialize ComM
    03: Allow Communication
    04: Request Full Communication
    05: VP (ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_0):
        Verify that FrSM_RequestComMode/CanSM_RequestComMode has been invoked
        with COMM_FULL_COMMUNICATION.
    06: Verify the current state as COMM_FULL_COM_NETWORK_REQUESTED.
    07: Set flag limitToNoCom for a CanNM channel of user Test_ComMUser_0
    08: Call once main function to enter in ready sleep state due to limitToNoCom
    09: Verify the current State is COMM_FULL_COM_READY_SLEEP
    10: Simulate the bus sleep indication for CanNm channel of user Test_ComMUser_0
    11: Call CanNm main function for to Test_ComMUser_0 for ComM to enter no communication
    12: VP (ComM.EB.Dsn.Algorithm.BusSM_RequestComModeNOCOM, ComM.SWS_ComM_00073):
        Verify the Current ComMode Requested by CanSM as COMM_NO_COMMUNICATION.
    13: VP (ComM.SWS_ComM_00355, ComM.ECUC_ComM_00558):
        Check that BswM_ComM_InitiateReset was called.
  
Test Input: 
    ComM_LimitChannelToNoComMode during full communication
    Trsansition to no communication
  
Test Output: 
    BswM_ComM_InitiateReset is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00355</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00558</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1994</internalId></specobject>
    <specobject>
      <id>TS_COMM_ComMResetAfterForcingNoComm_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_18/source/application/Tests.c</sourcefile>
      <sourceline>345</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when ComM transition to no communication and ComMResetAfterForcingNoComm is enabled
    and no call to ComM_LimitChannelToNoComMode was made, then no call to BswM_ComM_InitiateReset
    occurs. (test on fr channel)
  
Test Object: None.
Test Precondition: 
    ComMResetAfterForcingNoComm must be set to TRUE
  
Test Execution: 
    01: initialize test, set stub counters to 0
    02: Intialize ComM
    03: Allow Communication
    04: Request Full Communication
    05: VP (ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_0):
        Verify that FrSM_RequestComMode/CanSM_RequestComMode has been invoked
        with COMM_FULL_COMMUNICATION.
    06: Verify the current state as COMM_FULL_COM_NETWORK_REQUESTED.
    07: Request no communication for user Test_ComMUser_0
    08: Call once main function to enter in ready sleep state
    09: Verify the current State is COMM_FULL_COM_READY_SLEEP
    10: Simulate the bus sleep indication for FrNm channel of user Test_ComMUser_0
    11: Call FrNm main function for to Test_ComMUser_0 for ComM to enter no communication
    12: VP (ComM.EB.Dsn.Algorithm.BusSM_RequestComModeNOCOM, ComM.SWS_ComM_00073):
        Verify the Current ComMode Requested by FrSM as COMM_NO_COMMUNICATION.
    13: VP (ComM.SWS_ComM_00355, ComM.ECUC_ComM_00558):
        Check that BswM_ComM_InitiateReset was not called.
  
Test Input: 
    ComM_LimitChannelToNoComMode during full communication
    Trsansition to no communication
  
Test Output: 
    BswM_ComM_InitiateReset is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00355</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00558</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1995</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_GETCURRENT_PNC_COMM_MODE_Conformance</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_19/source/application/Tests.c</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test PNC functionality regarding function ComM_GetCurrentPNCComMode
  
Test Object: None.
Test Precondition: 
    Important test configuration details:
    User0 -&gt;         channel0
    User1 -&gt; PNC0 -&gt; channel0
    User2 -&gt; PNC0 -&gt; channel0
    User2 -&gt; PNC1 -&gt; channel0
  
Test Execution: 
    01: Initialize stubs and module
    02: VP(ComM.EB_Ref.SWS_ComM_00649.COMM_E_MULTIPLE_PNC_ASSIGNED) 
        - Check that macro COMM_E_MULTIPLE_PNC_ASSIGNED has the value 3
    03: VP(ComM.EB_Ref.SWS_ComM_00649.COMM_E_NO_PNC_ASSIGNED) 
        - Check that macro COMM_E_NO_PNC_ASSIGNED has the value 4
    04: VP(ComM.EB.ComM_GetCurrentPNCComMode.ReturnedComMode.COMM_NO_COMMUNICATION)
        - Check that ComM_GetCurrentPNCComMode returns COMM_NO_COMMUNICATION
        when called for user 1
    05: Request Full Communication for user 1
    06: VP(ComM.SWS_ComM_01023)
        - Check that if a user 0 has no PNC attached to it
        function ComM_GetCurrentPNCComMode returns COMM_E_NO_PNC_ASSIGNED
    07: VP(ComM.EB.ComM_GetCurrentPNCComMode.ReturnedComMode.COMM_FULL_COMMUNICATION)
        - Check that function ComM_GetCurrentPNCComMode returns COMM_FULL_COMMUNICATION
        when called for user 1
    08: VP(ComM.SWS_ComM_01022)
        - Check that if a user 2 has multiple PNC attached to it
        function ComM_GetCurrentPNCComMode returns COMM_E_MULTIPLE_PNC_ASSIGNED
  
Test Input: 
   - Call ComM_GetCurrentPNCComMode while user request is not issued
   - Call user request
   - Call ComM_GetCurrentPNCComMode for a user which has no PNC attached to it
   - Call ComM_GetCurrentPNCComMode for a user which has one PNC attached to it
   - Call ComM_GetCurrentPNCComMode for a user which has multiple PNCs attached to it
  
Test Output: 
   - ComM_GetCurrentPNCComMode returns COMM_NO_COMMUNICATION since user request is not issued
   - ComM_GetCurrentPNCComMode returns COMM_E_NO_PNC_ASSIGNED as no PNC is attached to user
   - ComM_GetCurrentPNCComMode returns COMM_FULL_COMMUNICATION since PNC is in Full Communication
   - ComM_GetCurrentPNCComMode returns COMM_E_MULTIPLE_PNC_ASSIGNED as multiple PNCs are attached to user
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_GetCurrentPNCComMode.ReturnedComMode.COMM_NO_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>704</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_GetCurrentPNCComMode.ReturnedComMode.COMM_FULL_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>703</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00649.COMM_E_MULTIPLE_PNC_ASSIGNED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00649.COMM_E_NO_PNC_ASSIGNED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1996</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_30008</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    To test all APIs without initializing ComM.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: Call GetCurrentComMode without initializing ComM and verify that
        "COMM_E_NOT_INITED" is reported to Det and the return value is
        COMM_E_UNINIT.
    02: VP (ComM.ASR403.SWS_ComM_00619): Call GetInhibitionStatus without initializing ComM
        and verify that "COMM_E_NOT_INITED" is reported to Det and the
        return value is COMM_E_UNINIT.
    03: VP (ComM.ASR403.SWS_ComM_00085): Call GetMaxComMode without initializing ComM and
        verify that "COMM_E_NOT_INITED" is reported to Det and the return
        value is COMM_E_UNINIT.
    04: VP (ComM.ASR403.SWS_ComM_00797): Call GetRequestedComMode without initializing ComM and verify that
        "COMM_E_NOT_INITED" is reported to Det and the return value is
        COMM_E_UNINIT.
    05: VP (ComM.ASR403.SWS_ComM_00163): Call LimitChannelToNoComMode without initializing ComM
        and verify that "COMM_E_NOT_INITED" is reported to Det and the return
        value is COMM_E_UNINIT.
    06: VP (ComM.ASR403.SWS_ComM_00124): Call LimitECUToNoComMode without initializing ComM and
        verify that "COMM_E_NOT_INITED" is reported to Det and the return value
        is COMM_E_UNINIT.
    07: VP (ComM.ASR403.SWS_ComM_00156):Call PreventWakeUp without initializing ComM and verify
        that "COMM_E_NOT_INITED" is reported to Det and the return value is
        COMM_E_UNINIT.
    08: VP (ComM.ASR403.SWS_ComM_00224): Call ReadInhibitCounter without initializing ComM and
        verify that "COMM_E_NOT_INITED" is reported to Det and the return value
        is COMM_E_UNINIT.
    09: VP (ComM.EB_Ref.ASR403.SWS_ComM_00649.COMM_E_UNINIT): Call RequestComMode without
        initializing ComM and verify that "COMM_E_NOT_INITED" is reported to
        Det and the return value is COMM_E_UNINIT.
    10: VP (ComM.ASR403.SWS_ComM_00108): Call ResetInhibitCounter without initializing ComM and
        verify that "COMM_E_NOT_INITED" is reported to Det and the return
        value is COMM_E_UNINIT.
    11: VP (ComM.EB_Ref.ASR403.SWS_ComM_00552.ComM_SetECUGroupClassification): Call SetECUGroupClassification without initializing
        ComM and verify that "COMM_E_NOT_INITED" is reported to Det and the
        return value is COMM_E_UNINIT.
    12: VP (ComM.EB_Ref.ASR403.SWS_ComM_00829.Det_ReportError):Call ComM_BusSM_ModeIndication
        without initializing ComM and verify that "COMM_E_NOT_INITED" is
        reported to Det and the return value is COMM_E_UNINIT.
    13: VP (ComM.ASR403.SWS_ComM_00858): Call ComM_DCM_ActiveDiagnostic without initializing ComM
        and verify that "COMM_E_NOT_INITED" is reported to Det and the return
        value is COMM_E_UNINIT.
    14: Call ComM_DCM_InactiveDiagnostic without initializing ComM
        and verify that "COMM_E_NOT_INITED" is reported to Det and the return
        value is COMM_E_UNINIT.
    15: Call ComM_EcuM_WakeUpIndication without initializing ComM and verify
        that "COMM_E_NOT_INITED" is reported to Det and the return value is
        COMM_E_UNINIT.
    16: Call ComM_Nm_BusSleepMode without initializing ComM and verify that
        "COMM_E_NOT_INITED" is reported to Det and the return value is
        COMM_E_UNINIT.
    17: Call ComM_Nm_NetworkMode without initializing ComM and verify that
        "COMM_E_NOT_INITED" is reported to Det and the return value is
        COMM_E_UNINIT.
    18: Call ComM_Nm_NetworkStartIndication without initializing ComM and
        verify that "COMM_E_NOT_INITED" is reported to Det and the return
        value is COMM_E_UNINIT.
    19: Call ComM_Nm_PrepareBusSleepMode without initializing ComM and verify
        that "COMM_E_NOT_INITED" is reported to Det and the return value is
        COMM_E_UNINIT.
    20: Call ComM_Nm_RestartIndication without initializing ComM and verify
        that "COMM_E_NOT_INITED" is reported to Det and the return value is
        COMM_E_UNINIT.
    21: VP (ComM.ASR403.SWS_ComM_00872): Call ComM_GetState without initializing ComM and verify
        that "COMM_E_NOT_INITED" is reported to Det and the return value is
        COMM_E_UNINIT.
    22: Call ComM_CommunicationAllowed without initializing ComM and verify
        that "COMM_E_NOT_INITED" is reported to Det and the return value is
        COMM_E_UNINIT.
    23: Call ComM_GetCurrentPNCComMode without initializing ComM and verify
        that "COMM_E_NOT_INITED" is reported to Det and the return value is
        COMM_E_UNINIT.
    24: VP (ComM.SWS_ComM_91000): Call ComM_BusSM_BusSleepMode without initializing 
        ComM and verify that "COMM_E_NOT_INITED" is reported to Det and the 
        return value is COMM_E_UNINIT.
    25: Call ComM_DeInit without initializing ComM and verify that
        "COMM_E_NOT_INITED" is reported to Det and the return value is
        COMM_E_UNINIT.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00619</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00858</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00552.ComM_SetECUGroupClassification</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00872</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00797</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00649.COMM_E_UNINIT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00829.Det_ReportError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_GetCurrentPNCComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00234.COMM_E_NOT_INITED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1997</internalId></specobject>
    <specobject>
      <id>TS_COMM_30009</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>316</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    To test APIs with the NULL pointer as parameter.
  
Test Object: None.
Test Precondition: 
    Configuration parameter ComMDevErrorDetect shall be TRUE.
  
Test Execution: 
    01: Initialize ComM.
    02: VP (ComM.ASR403.SWS_ComM_00512): Call GetCurrentComMode with NULL pointer and verify that
        "COMM_E_WRONG_PARAMETERS" is reported to Det.
    03: VP (ComM.ASR403.SWS_ComM_00270): Call GetInhibitionStatus with NULL pointer and verify that
        "COMM_E_WRONG_PARAMETERS" is reported to Det.
    04: VP (ComM.ASR403.SWS_ComM_00511): Call GetMaxComMod with NULL pointer and verify that
        "COMM_E_WRONG_PARAMETERS" is reported to Det.
    05: VP (ComM.ASR403.SWS_ComM_00079): Call GetRequestedComMode with NULL pointer and verify that
        "COMM_E_WRONG_PARAMETERS" is reported to Det.
    06: VP (ComM.ASR403.SWS_ComM_00224): Call ReadInhibitCounter with NULL pointer and verify that
        "COMM_E_WRONG_PARAMETERS" is reported to Det.
    07: VP (ComM.EB_Ref.ASR403.SWS_ComM_00234.WRONG_PARAMETERS, ComM.ASR403.SWS_ComM_00242): Call ComM_GetStatus with NULL
        pointer and verify that "COMM_E_WRONG_PARAMETERS" is reported to Det.
    08: VP (ComM.ASR403.SWS_ComM_00675): Call ComM_BusSM_ModeIndication with NULL pointer and
        verify that "COMM_E_WRONG_PARAMETERS" is reported to Det.
    09: Call ComM_GetVersionInfo with NULL pointer and verify that
        "COMM_E_WRONG_PARAMETERS" is reported to Det.
    10: VP (ComM.ASR403.SWS_ComM_00872): Call ComM_GetState with NULL pointer and verify that
        "COMM_E_WRONG_PARAMETERS" is reported to Det.
    11: VP (ComM.EB.ComM_GetCurrentPNCComMode): Call GetCurrentPNCComMode with NULL pointer 
        and verify that "COMM_E_WRONG_PARAMETERS" is reported to Det.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00619</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00872</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00675</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00234.WRONG_PARAMETERS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00270</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00511</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00512</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_GetCurrentPNCComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1998</internalId></specobject>
    <specobject>
      <id>TS_COMM_30010</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>430</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test all APIs with out of range parameters.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: Initialize ComM.
    02: VP (ComM.EB_Ref.ASR403.SWS_ComM_00234.WRONG_PARAMETERS): Call GetCurrentComMode with
        invalid user and verify whether DET error is reported with
        "COMM_E_WRONG_PARAMETERS".
    03: VP (ComM.ASR403.SWS_ComM_00270): Call ComM_GetState with invalid channel and verify whether
        DET error is reported with "COMM_E_WRONG_PARAMETERS".
    04: VP (ComM.ASR403.SWS_ComM_00511): Call GetInhibitionStatus with invalid channel and verify
        whether DET error is reported with "COMM_E_WRONG_PARAMETERS".
    05: VP (ComM.ASR403.SWS_ComM_00512): Call GetMaxComMode with invalid user and verify whether
        DET error is reported with "COMM_E_WRONG_PARAMETERS".
    06: Call GetRequestedComMode with invalid user and verify whether
        DET error is reported with "COMM_E_WRONG_PARAMETERS".
    07: Call LimitChannelToNoComMode with invalid channel and verify whether
        DET error is reported with "COMM_E_WRONG_PARAMETERS".
    08: Call PreventWakeUp with invalid channel and verify whether
        DET error is reported with "COMM_E_WRONG_PARAMETERS".
    09: Call ComM_RequestComMode with invalid channel and verify whether
        DET error is reported with "COMM_E_WRONG_PARAMETERS".
    10: Call ComM_BusSM_ModeIndication with invalid channel and verify whether
        DET error is reported with "COMM_E_WRONG_PARAMETERS".
    11: Call ComM_EcuM_WakeUpIndication with invalid channel and verify whether
        DET error is reported with "COMM_E_WRONG_PARAMETERS".
    12: Call ComM_Nm_BusSleepMode with invalid channel and verify whether
        DET error is reported with "COMM_E_WRONG_PARAMETERS".
    13: Call ComM_Nm_NetworkMode with invalid channel and verify whether
        DET error is reported with "COMM_E_WRONG_PARAMETERS".
    14: Call ComM_Nm_NetworkStartIndication with invalid channel and verify
        whether DET error is reported with "COMM_E_WRONG_PARAMETERS".
    15: Call ComM_Nm_PrepareBusSleepMode with invalid channel and verify
        whether DET error is reported with "COMM_E_WRONG_PARAMETERS".
    16: Call ComM_Nm_RestartIndication with invalid channel and verify whether
        DET error is reported with "COMM_E_WRONG_PARAMETERS".
    17: Call ComM_CommunicationAllowed with invalid channel and verify whether
        DET error is reported with "COMM_E_WRONG_PARAMETERS".
    18: Call ComM_BusSM_ModeIndication with a channel (channel-6) of bus type
        as COMM_BUS_TYPE_INTERNAL and verify whether DET error is reported with
        "COMM_E_WRONG_PARAMETERS".
    19: Call ComM_DCM_ActiveDiagnostic with invalid channel and verify whether
        DET error is reported with "COMM_E_WRONG_PARAMETERS".
    20: Call ComM_DCM_InactiveDiagnostic with invalid channel and verify whether
        DET error is reported with "COMM_E_WRONG_PARAMETERS".
    21: Call ComM_GetCurrentPNCComMode with invalid user and verify whether
        DET error is reported with "COMM_E_WRONG_PARAMETERS".
    22: Call ComM_BusSM_BusSleepMode with invalid user and verify whether
        DET error is reported with "COMM_E_WRONG_PARAMETERS".
    23: Call ComM_BusSM_ModeIndication with an invalid ComMode
        and verify whether DET error is reported with
        "COMM_E_WRONG_PARAMETERS".
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00234.WRONG_PARAMETERS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00270</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00511</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00512</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_GetCurrentPNCComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1999</internalId></specobject>
    <specobject>
      <id>TS_COMM_30023</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>618</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test API ComM_RequestComMode() requests ComMode other than main states
    "No Communication" and "Full Communication".
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: Initialze ComM.
    02: VP (ComM.EB_Ref.ASR403.SWS_ComM_00234.WRONG_PARAMETERS, ComM.EB_Ref.SWS_ComM_00151.DetReport.WrongComModeReq):
        Call ComM_RequestComMode with ComMode other than main states
        "No Communication" and "Full Communication" request and verify that
        DET error COMM_E_WRONG_PARAMETERS is reported due to invalid ComMode
        request.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00234.WRONG_PARAMETERS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00151.DetReport.WrongComModeReq</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2000</internalId></specobject>
    <specobject>
      <id>TS_COMM_30035</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>676</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test APIs with incorrect arguments, when channels are configured with
    Nm Varint as LIGHT and NONE DET error shall be reported.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: Initialize ComM.
    02: VP (ComM.EB_Ref.ASR403.SWS_ComM_00234.WRONG_PARAMETERS):
        Call ComM_Nm_BusSleepMode with
        invalid channel and verify that DET error is reported with
        "COMM_E_WRONG_PARAMETERS".
    03: VP (ComM.ASR403.SWS_ComM_00270):
        Call ComM_Nm_NetworkMode with invalid channel and verify
        that DET error is reported with "COMM_E_WRONG_PARAMETERS".
    04: VP (ComM.ASR403.SWS_ComM_00511):
        Call ComM_Nm_NetworkStartIndication with invalid channel
        and verify that DET error is reported with "COMM_E_WRONG_PARAMETERS".
    05: Call ComM_Nm_RestartIndication with invalid channel
        and verify that DET error is reported with "COMM_E_WRONG_PARAMETERS".
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR403.SWS_ComM_00234.WRONG_PARAMETERS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00270</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00511</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00512</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2001</internalId></specobject>
    <specobject>
      <id>TS_COMM_ComMCanSMInteraction</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>749</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that ComM uses CanSM_RequestComMode() to request a dedicated
    communication mode to the CAN State Manager (ComM.ASR403.SWS_ComM_00854).
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Simulate initialization of ComM, reset of stubs &amp; clear inhibition status
    02: Simulate Communication is allowed for all channels of Test_ComMUser_0
    03: Simulate "Full Communication" user request for Test_ComMUser_0
    04: Invoke main function of Channel_0 of Test_ComMUser_0
    05: VP (ComM.ASR403.SWS_ComM_00854):
      CanSM_RequestComMode has been invoked with COMM_FULL_COMMUNICATION.
    06: Simulate network mode indication for Channel_0
    07: Invoke main function of Channel_0 of Test_ComMUser_0
    08: Simulate "No Communication" user request for Test_ComMUser_0
    09: Invoke main function of Channel_0 of Test_ComMUser_0
    10: Check Nm_NetworkRelease is called
    11: Simulate Prepare bus sleep mode indication.
    12: Invoke main function of Channel_0 of Test_ComMUser_0
    13: VP (ComM.ASR403.SWS_ComM_00854):
        CanSM_RequestComMode has been invoked with COMM_SILENT_COMMUNICATION.
    14: Simulate Bus Sleep mode indication
    15: Invoke main function of channel-0 of Test_ComMUser_0
    16: VP (ComM.ASR403.SWS_ComM_00854):
        CanSM_RequestComMode has been invoked with COMM_NO_COMMUNICATION.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00854</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2002</internalId></specobject>
    <specobject>
      <id>TS_COMM_30073</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>873</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test APIs  GetMaxComMode(), GetRequestedComMode()
    LimitChannelToNoComMode(), PreventWakeUp(), ComM_LimitECUToNoComMode() and
    ComM_GetStatus() with valid parameters when DET is enabled.
    Test case checks the correct API called with valid parameters does not
    report DET error when DET is enabled.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: Initialize ComM.
    02: VP (ComM.ASR403.SWS_ComM_00156):
        Call PreventWakeUp without valid parameters.
    03: Clear inhibition status.
    04: Call GetMaxComMode with valid user.
    05: VP (ComM.ASR403.SWS_ComM_00079):
        Call GetRequestedComMode with valid user.
    06: VP (ComM.ASR403.SWS_ComM_00163):
        Call LimitChannelToNoComMode with valid parameter.
    07: VP (ComM.ASR403.SWS_ComM_00124):
        Call LimitECUToNoComMode with valid parameter.
    08: VP (ComM.ASR403.SWS_ComM_00085, ComM.ASR403.SWS_ComM_00242):
        Call ComM_GetStatus with valid parameter.
    09: Verify that Det_ReportError is not called.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00242</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2003</internalId></specobject>
    <specobject>
      <id>TS_COMM_30103</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>970</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM Nm_NetworkRequest().
    The behaviour need to be tested when ComM channel is in Full ComMode
    (Ready Sleep state) and an active diagnostic indication occurs.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Simulate the reset of the ComM module to reset the stub counters and
        indication flags.
    02: Initialize CanSM stub.
    03: Initialize the ComM module.
    04: Clear inhibition status.
    05: Set ComM_CommunicationAllowed to TRUE for all the channels of
        Test_ComMUser_0.
    06: Request the mode Full communication using the API ComM_RequestComMode
        for Test_ComMUser_0.
    07: Call ComM_MainFunction_0 channel 0 of Test_ComMUser_0
        requested.
    08: Simulate the Network mode indication for channel 0 linked to
        Test_ComMUser_0.
    09: Call ComM_MainFunction_0 channel 0 of Test_ComMUser_0
        requested.
    10: Request the mode NO communication using the API ComM_RequestComMode for
        Test_ComMUser_0.
    11: Call ComM_MainFunction_0 channel 0 of Test_ComMUser_0
        requested.
    12: Verify Nm_NetworkRelease is called.
    13: Verify that the current State is COMM_FULL_COM_READY_SLEEP by calling
        the API ComM_GetState.
    14: Simulate the active diagnostic indication.
    15: Call ComM_MainFunction of corresponding channel.
    16: Verify that Nm_NetworkRequest is called.
    17: VP (ComM.EB_Ref.SWS_ComM_00883.NmVariant.FULL, ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COM_READY_SLEEP_0):
        - The current State is COMM_FULL_COM_NETWORK_REQUESTED.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00883.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_FULL_COM_READY_SLEEP_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1756</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00864</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2004</internalId></specobject>
    <specobject>
      <id>TS_COMM_30110</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>1110</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that [ComM.SWS_ComM_00902] When Network Restart Indication is indicated while
    entering Network Requested state, Nm_PassiveStartup should be called by
    ComM.

    To test that [ComM.ASR403.SWS_ComM_00900] When ComM_Nm_PrepareBusSleepMode() is called in
    Network Requested state, the channel should enter into Silent Communication
    when NmVariant is PASSIVE.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01. Reset stub counts, initialize ComM and callout functions.
    02. Simulate Communication allowed to TRUE for all the channels.
    03. Request Full Communication mode for Test_ComMUser_0 and invoke
        main function of all the channels of Test_ComMUser_0.
    04. Simulate Network mode indication for all channels of Test_ComMUser_0.
    05. Invoke main functions of all the channels of Test_ComMUser_0.
    06. VP (ComM.SWS_ComM_00390):
        - Verify the current state of all the channels of Test_ComMUser_0.
    07. Simulate Nm Restart indication for Channel-5 and call the main function
      of the channel-5.
    08. VP (ComM.SWS_ComM_00902, ComM.SWS_ComM_00792):
        - Nm_PassiveStartUp is invoked.
    09: Simulate Network mode indication for Channel-5 &amp; invoke the main
        function of the channel 5.
    10: VP (ComM.SWS_ComM_00390):
        - Current state of ch-5 is COMM_FULL_COM_READY_SLEEP.
    11: Simulate Prepare bus sleep indication for ch-5 &amp; invoke the main
        function of the channel 5.
    12: VP (ComM.ASR403.SWS_ComM_00900):
        - The current State of ch-5 is Silent Communication.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00792</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00261</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00390</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00900</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00902</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2005</internalId></specobject>
    <specobject>
      <id>TS_COMM_SYNC_WAKEUP</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>1249</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    To test that, in sub-state COMM_NO_COM_NO_PENDING_REQUEST and configuration
    parameter ComMSynchronousWakeUp is TRUE and a wake-up-indication of a
    channel is indicated by the EcuM, the ComM module shall immediately switch
    all ComM state machines (resp. channels) to sub-state
    COMM_NO_COM_PENDING_REQUEST.
  
Test Object: None.
Test Precondition: 
    ComMSynchronousWakeUp is set to TRUE.
  
Test Execution: 
    01. Initialize ComM module by calling ComM_Init().
    02. VP:
        Check the current (default) state of all channels with
        COMM_NO_COM_NO_PENDING_REQUEST.
    03. Call EcuM_WakeUpIndication for any single channel (say channel 0).
    04. Call Main function of all channels.
    05. VP (ComM.ECUC_ComM_00695, ComM.SWS_ComM_00694, ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_2):
        Check the current state of all channels with
        COMM_NO_COM_REQUEST_PENDING.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00694</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00695</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1729</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2006</internalId></specobject>
    <specobject>
      <id>TS_COMM_EVENT_QUEUE</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>1332</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test case for not queuing duplicate events
Test Description: 
    This test verifies, that the event queue cannot overflow. Events can be
    added to the queue, although another event was called before very often.
  
Test Object: Event Queue
Test Precondition: 
    channel-0 is configured with BusType = CAN.
  
Test Execution: 
    01: Initialize ComM module by calling ComM_Init().
    02: Simulate the Wakeup indication, Nm Restart Indication and Nm Network
        Indication for channel 0 more often, than the event queue size (=
        amount of defined events, each event is added to the queue only once),
        to check if other events can still be added to the queue.
    03: Call "communication allowed" for channel-0(Nm variant = FULL)
    04: Again Simulate the Wakeup indication, Nm Restart Indication and Nm
        Network Indication for channel 0 more often, than the event queue size
        (= amount of defined events, each event is added to the queue only
        once), to check if other events can still be added to the queue.
    05: Call ComM_DCM_ActiveDiagnostic().
    06: Call ComM_Nm_BusSleepMode().
    07: Invoke main function.
    08: Report ComM_DCM_InactiveDiagnostic() for channel 0 to emit the event
        REQ_STATUS_CHANGED.
    09: Call ComM_Nm_BusSleepMode().
    10: Reset Stub counters.
    11: Call ComM_MainFunction() for channel 0
    12: VP (ComM.EB.EventQueue):
        Verify CanSM_RequestComMode() was called (that means, the event
        COMALLOWED_CHANGED (in step 06:) could be added to the event queue
        although there was already a huge amount of other events before, see
        step 05:).
    13: VP (ComM.EB.EventQueue):
        Verify the ComM has entered state COMM_NO_COM_NO_PENDING_REQUEST again
        (that means, the event REQ_STATUS_CHANGED (in step 06:) could be added
        to the event queue although there was already a huge amount of other
        events before, see step 07:)
    14: Call active diagnostic indication for channel 0 more often, than the
        event queue size, to check if other events can still be added to the
        queue.
    15: Call BusSM Mode Indication for COMM_FULL_COMMUNICATION for channel 0.
        This will trigger the event BUSSM_MODE_IND_FULL_COM.
    16: Call ComM_MainFunction() for channel 0
    17: VP (ComM.EB.EventQueue):
        Verify the ComM has entered state COMM_FULL_COM_NETWORK_REQUESTED
        (that means, the event BUSSM_MODE_IND_FULL_COM could be added to the
        event queue although there was already a huge amount of other events
        before, see step 13:)
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.EventQueue</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>607</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2007</internalId></specobject>
    <specobject>
      <id>TS_COMM_GETMAXCOMMODE_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>1481</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case state machine is in
    NO_COM_REQUEST_PENDING state, and ComM_LimitChannelToNoComMode
    is called, GetMaxComMode returns COMM_NO_COMMUNICATION.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Initialize ComM
    02: Call mainfunction for channel 4
    03: Request Full Communication
    04: Call mainfunction for channel 4
    05: Call ComM_LimitChannelToNoComMode for channel 4
    06: Call ComM_GetMaxComMode
    07: VP(ComM.ASR403.SWS_ComM_00085)
         Check that GetMaxComMode returned No Communication
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2008</internalId></specobject>
    <specobject>
      <id>TS_COMM_GETMAXCOMMODE_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>1544</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case state machine is in
    NO_COM_REQUEST_PENDING state, and ComM_PreventWakeUp
    is called, GetMaxComMode returns COMM_NO_COMMUNICATION.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Initialize ComM
    02: Call mainfunction for channel 4
    03: Request Full Communication
    04: Call mainfunction for channel 4
    05: Call ComM_LimitChannelToNoComMode for channel 4
    06: Call ComM_GetMaxComMode
    07: VP(ComM.ASR403.SWS_ComM_00085)
        Check that GetMaxComMode returned No Communication
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2009</internalId></specobject>
    <specobject>
      <id>TS_COMM_GETMAXCOMMODE_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>1607</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Initialize ComM
    02: Call mainfunction for channel 4
    03: Request Full Communication
    04: Call mainfunction for channel 4
    05: Call ComM_CommunicationAllowed for channel 4
    06: Call ComM_GetMaxComMode
    07: VP(ComM.ASR403.SWS_ComM_00085)
        Check that GetMaxComMode returned Full Communication
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2010</internalId></specobject>
    <specobject>
      <id>TS_COMM_GETMAXCOMMODE_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>1671</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case state machine is in
    NO_COM_REQUEST_PENDING state, and no limitation is done
    on the channel (ComM_LimitChannelToNoComMode, ComM_PreventWakeUp)
    but communication is not allowed, GetMaxComMode returns COMM_NO_COMMUNICATION.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Initialize ComM
    02: Call mainfunction for channel 4
    03: Request Full Communication
    04: Call mainfunction for channel 4
    05: Call ComM_GetMaxComMode
    06: VP(ComM.ASR403.SWS_ComM_00085)
        Check that GetMaxComMode returned No Communication
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2011</internalId></specobject>
    <specobject>
      <id>TS_COMM_LimitToNoCom0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>1731</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_LimitChannelToNoComMode in case
    - ComM_LimitChannelToNoComMode is requested and then released
    - Passive wakeup is true
    - DCM requested is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Do a passive startup
   04: Request DCM
   05: Request than release LimitChannelToNoComMode
   06: VP (ComM.EB.LimitToNoCom)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LimitToNoCom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2012</internalId></specobject>
    <specobject>
      <id>TS_COMM_LimitToNoCom1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>1795</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_LimitChannelToNoComMode in case
    - ComM_LimitChannelToNoComMode is requested and then released
    - Passive wakeup is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Do a passive startup
   04: Request than release LimitChannelToNoComMode
   05: VP (ComM.EB.LimitToNoCom)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LimitToNoCom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2013</internalId></specobject>
    <specobject>
      <id>TS_COMM_LimitToNoCom2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>1854</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_LimitChannelToNoComMode in case
    - ComM_LimitChannelToNoComMode is requested and then released
    - DCM requested is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request DCM
   04: Request than release LimitChannelToNoComMode
   05: VP (ComM.EB.LimitToNoCom)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LimitToNoCom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2014</internalId></specobject>
    <specobject>
      <id>TS_COMM_LimitToNoCom3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>1913</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_LimitChannelToNoComMode in case
    - ComM_LimitChannelToNoComMode is requested and then released
    - User requests full communication
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request FULL COMMUNICATION
   04: Request than release LimitChannelToNoComMode
   05: VP (ComM.EB.LimitToNoCom)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LimitToNoCom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2015</internalId></specobject>
    <specobject>
      <id>TS_COMM_LimitToNoCom4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>1972</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_LimitChannelToNoComMode in case
    - ComM_LimitChannelToNoComMode is requested
    - Passive wakeup is true
    - DCM requested is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Initialize ComM
    02: Clear inhibitions
    03: Do a passive startup
    04: Request DCM
    05: Request LimitChannelToNoComMode
    06: VP (ComM.EB.LimitToNoCom)
        - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LimitToNoCom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2016</internalId></specobject>
    <specobject>
      <id>TS_COMM_LimitToNoCom5</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>2035</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_LimitChannelToNoComMode in case
    - ComM_LimitChannelToNoComMode is requested
    - Passive wakeup is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Do a passive startup
   04: Request LimitChannelToNoComMode
   05: VP (ComM.EB.LimitToNoCom)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LimitToNoCom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2017</internalId></specobject>
    <specobject>
      <id>TS_COMM_LimitToNoCom6</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>2093</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_LimitChannelToNoComMode in case
    - ComM_LimitChannelToNoComMode is requested
    - DCM requested is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request DCM
   04: Request LimitChannelToNoComMode
   05: VP (ComM.EB.LimitToNoCom)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LimitToNoCom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2018</internalId></specobject>
    <specobject>
      <id>TS_COMM_LimitToNoCom7_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>2151</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_LimitChannelToNoComMode in case
    - ComM_LimitChannelToNoComMode is requested
    - User request FULL COMMUNICATION
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request Full Communication
   04: Check the current state is No Com Request Pending
   05: Call ComM_LimitChannelToNoComMode
   06: VP(ComM.EB.LimitToNoCom,
          ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_NO_COM_REQUEST_PENDING_0)
       - Check the current state is No Com No Pending Request
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_NO_COM_REQUEST_PENDING_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1761</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.LimitToNoCom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2019</internalId></specobject>
    <specobject>
      <id>TS_COMM_LimitToNoCom7_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>2217</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_LimitECUToNoComMode in case
    - ComM_LimitECUToNoComMode is requested
    - User request FULL COMMUNICATION
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request Full Communication
   04: Check the current state is No Com Request Pending
   05: Call ComM_LimitECUToNoComMode
   06: VP(ComM.EB.LimitToNoCom,
          ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_NO_COM_REQUEST_PENDING_1)
       - Check the current state is No Com No Pending Request
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_NO_COM_REQUEST_PENDING_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1762</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.LimitToNoCom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2020</internalId></specobject>
    <specobject>
      <id>TS_COMM_LimitToNoCom8_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>2283</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_LimitChannelToNoComMode in case
    - ComM_LimitChannelToNoComMode is requested
    - User request FULL COMMUNICATION and
    - while in state COMM_NO_COM_REQUEST_PENDING a passive startup is detected
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request Full Communication
   04: Check the current state is COMM_NO_COM_REQUEST_PENDING
   05: Do a passive startup
   06: Request ComM_LimitChannelToNoComMode
   07: VP(ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_INDICATION_NO_COM_REQUEST_PENDING_0)
       - Check that current state remains COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_INDICATION_NO_COM_REQUEST_PENDING_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1758</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2021</internalId></specobject>
    <specobject>
      <id>TS_COMM_LimitToNoCom8_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>2352</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_LimitChannelToNoComMode in case
    - ComM_LimitChannelToNoComMode is requested
    - User request FULL COMMUNICATION and
    - while in state COMM_NO_COM_REQUEST_PENDING a passive startup is detected
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request Full Communication
   04: Check the current state is COMM_NO_COM_REQUEST_PENDING
   05: Do a passive startup
   06: Request ComM_LimitChannelToNoComMode
   07: VP(ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_INDICATION_NO_COM_REQUEST_PENDING_1)
       - Check that current state remains COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_INDICATION_NO_COM_REQUEST_PENDING_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1759</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2022</internalId></specobject>
    <specobject>
      <id>TS_COMM_LimitToNoCom8_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>2421</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_LimitChannelToNoComMode in case
    - ComM_LimitChannelToNoComMode is requested
    - User request FULL COMMUNICATION and
    - while in state COMM_NO_COM_REQUEST_PENDING a passive startup is detected
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request Full Communication
   04: Check the current state is COMM_NO_COM_REQUEST_PENDING
   05: Do a passive startup
   06: Request ComM_LimitChannelToNoComMode
   07: VP(ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_INDICATION_NO_COM_REQUEST_PENDING_2)
       - Check that current state remains COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_INDICATION_NO_COM_REQUEST_PENDING_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1760</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2023</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupInhibition0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>2490</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_PreventWakeUp in case
    - ComM_PreventWakeUp is requested and then released
    - Passive wakeup is true
    - DCM requested is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Do a passive startup
   04: Request DCM
   05: Request than release ComM_PreventWakeUp
   06: VP (ComM.EB.WakeupInhibition)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.WakeupInhibition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2024</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupInhibition1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>2554</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_PreventWakeUp in case
    - ComM_PreventWakeUp is requested and then released
    - Passive wakeup is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Do a passive startup
   04: Request than release ComM_PreventWakeUp
   05: VP (ComM.EB.WakeupInhibition)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.WakeupInhibition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2025</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupInhibition2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>2613</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_PreventWakeUp in case
    - ComM_PreventWakeUp is requested and then released
    - DCM requested is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request DCM
   04: Request than release ComM_PreventWakeUp
   05: VP (ComM.EB.WakeupInhibition)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.WakeupInhibition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2026</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupInhibition3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>2672</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_PreventWakeUp in case
    - ComM_PreventWakeUp is requested and then released
    - User requests Full Communication
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request Full Communication
   04: Request than release ComM_PreventWakeUp
   05: VP (ComM.EB.WakeupInhibition)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.WakeupInhibition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2027</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupInhibition4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>2731</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_PreventWakeUp in case
    - ComM_PreventWakeUp is requested
    - Passive wakeup is true
    - DCM requested is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Do a passive startup
   04: Request DCM
   05: Request ComM_PreventWakeUp
   06: VP (ComM.EB.WakeupInhibition)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.WakeupInhibition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2028</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupInhibition5</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>2794</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_PreventWakeUp in case
    - ComM_PreventWakeUp is requested
    - Passive wakeup is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Do a passive startup
   04: Request ComM_PreventWakeUp
   05: VP (ComM.EB.WakeupInhibition)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.WakeupInhibition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2029</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupInhibition6</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>2852</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_PreventWakeUp in case
    - ComM_PreventWakeUp is requested
    - DCM requested is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request DCM
   04: Request ComM_PreventWakeUp
   05: VP (ComM.EB.WakeupInhibition)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.WakeupInhibition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2030</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupInhibition7</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>2910</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_PreventWakeUp in case
    - ComM_PreventWakeUp is requested
    - User requests Full Communication
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request Full Communication
   04: Check the current state is No Com Request Pending
   05: Request ComM_PreventWakeUp
   06: VP(ComM.EB.Dsn.StateDynamics.WAKEUP_INHIBITION_NO_COM_REQUEST_PENDING)
       - Check the current state is No Com No Pending Request
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.WAKEUP_INHIBITION_NO_COM_REQUEST_PENDING</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1763</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2031</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupInhibition8</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>2973</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_PreventWakeUp in case
    - ComM_PreventWakeUp is requested
    - Passive wakeup is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: User requests Full Communication
   04: Check the current state is No Com Request Pending
   05: Do a passive startup
   06: Request ComM_PreventWakeUp
   07: VP (ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_INDICATION_NO_COM_REQUEST_PENDING_0)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_INDICATION_NO_COM_REQUEST_PENDING_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1758</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2032</internalId></specobject>
    <specobject>
      <id>TS_COMM_IsRequested0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>3041</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_RequestComMode in case
    - User requests No Communication and later Full Communication
    - Passive wakeup is true
    - DCM requested is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: User requests Full Communication
   04: Do a passive startup
   05: Request DCM
   06: User releases and then requests channel
   07: VP(ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0)
       - Check the current state is No Com Request Pending
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2033</internalId></specobject>
    <specobject>
      <id>TS_COMM_IsRequested1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>3109</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_RequestComMode in case
    - User requests No Communication and later Full Communication
    - Passive wakeup is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    01: Initialize ComM
    02: Clear inhibitions
    03: Do a passive startup
    04: User releases and then requests channel
    05: VP(ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0)
        - Check the current state is No Com Request Pending
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2034</internalId></specobject>
    <specobject>
      <id>TS_COMM_IsRequested2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>3169</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_RequestComMode in case
    - User requests No Communication and later Full Communication
    - DCM requested is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: User requests Full Communication
   04: Request DCM
   05: User requests No Communication
   06: User requests Full Communication
   07: VP(ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0)
       - Check the current state is No Com Request Pending
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2035</internalId></specobject>
    <specobject>
      <id>TS_COMM_IsRequested3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>3235</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_RequestComMode in case
    - User requests No Communication and later Full Communication
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: User requests Full Communication
   04: User releases and then requests channel
   05: VP(ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0)
       - Check the current state is No Com Request Pending
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2036</internalId></specobject>
    <specobject>
      <id>TS_COMM_IsRequested4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>3293</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_RequestComMode in case
    - User requests No Communication
    - Passive wakeup is true
    - DCM requested is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Do a passive startup
   04: Request DCM
   05: User releases the channel
   06: VP(ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0)
       - Check the current state is No Com Request Pending
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2037</internalId></specobject>
    <specobject>
      <id>TS_COMM_IsRequested5</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>3356</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_RequestComMode in case
    - User requests No Communication
    - Passive wakeup is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Do a passive startup
   04: User releases the channel
   05: VP(ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0)
       - Check the current state is No Com Request Pending
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2038</internalId></specobject>
    <specobject>
      <id>TS_COMM_IsRequested6</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>3414</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_RequestComMode in case
    - User requests No Communication
    - DCM requested is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request DCM
   04: User releases the channel
   05: VP(ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0)
       - Check the current state is No Com Request Pending
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2039</internalId></specobject>
    <specobject>
      <id>TS_COMM_IsRequested7</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>3472</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_RequestComMode in case
    - User requests Full communication and later No Communication
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: User requests full communication
   04: Check the current state is No Com Request Pending
   05: User requests no communication
   06: VP(ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0)
       - Check the current state is No Com No Pending Request
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2040</internalId></specobject>
    <specobject>
      <id>TS_COMM_LimitToNoComClearUserRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>3535</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case state machine is in state
    No Com Pending Request due to an active user request and
    ComM_LimitChannelToNoComMode is called, the state machine switches back
    to state No Com No Pending Request.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request Full Communication
   04: Check the current state is No Com Request Pending
   05: Call ComM_LimitChannelToNoComMode
   06: Check the current state is No Com Pending Request
   07: Release the inhibition
   08: VP (ComM.EB.LimitToNoComClearUserRequest)
       - After limitation is removed the state machine
       remains in state No Com No Pending Request
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LimitToNoComClearUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2041</internalId></specobject>
    <specobject>
      <id>TS_COMM_PreventWakeupCancellation</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>3612</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case state machine is in state
    No Com Pending Request due to an active user request and
    ComM_LimitChannelToNoComMode is called, the state machine switches back
    to state No Com No Pending Request.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request Full Communication
   04: Check the current state is No Com Request Pending
   05: Call ComM_PreventWakeUp
   06: VP(ComM.EB.LimitToNoComClearUserRequest)
       - Check the current state is Com No Pending Request
   07: Remove the limitation
   08: After limitation is removed switch back to state No Com Request Pending
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LimitToNoComClearUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2042</internalId></specobject>
    <specobject>
      <id>TS_COMM_PassiveWakeupLimitToNoCom</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>3687</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case state machine is in state
    No Com Pending Request due to an active user request and
    ComM_LimitChannelToNoComMode is called, the state machine switches back
    to state No Com No Pending Request.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Do a passive startup
   04: Request Full Communication
   05: Check the Current state is No Com Request Pending
   06: Call ComM_LimitChannelToNoComMode
   07: Check the current state is No Com Request Pending
   08: Allow communication
   09: VP(ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_FULL_COM_NETWORK_REQUESTED_0)
       - Check the current state is Ready Sleep
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LimitToNoComClearUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>647</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2043</internalId></specobject>
    <specobject>
      <id>TS_COMM_NoComFullComRequestNoneChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_2/source/application/Tests.c</sourcefile>
      <sourceline>3765</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case the COMM_NM_VARIANT for a channel is NONE
    and FULL_COMM_NETWORK_REQUESTED is entered this state is not left until
    ComMTMinFullComModeDuration does not expire if dcm or users do not request the current channel.
  
Test Object: None.
Test Precondition: 
   - current Nm channel has COMM_NM_VARIANT set to NONE
  
Test Execution: 
    01: Initialize ComM
    02: Call ComM_CommunicationAllowed
    03: Call Do a passive startup
    04: Check current state
    05: Request Full Communication
    06: Check the Current state
    07: Request No Communication
    08: Check the Current state
    09: Wait until ComMTMinFullComModeDuration almoast expires
    10: Check the Current state
    11: Wait until ComMTMinFullComModeDuration expires
    12: Check the Current state
  
Test Input: 
    - passive startup
    - network request
    - network release
    - check current state
  
Test Output: 
    - FULL_COMM_NETWORK_REQUESTED is not leaved until ComMTMinFullComModeDuration does not expire
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00889.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2044</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_SynchronusShutDown_DET_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_20_SynchronusShutDown_DET/source/application/Tests.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case module is not initialized and ComM_Nm_ForwardSynchronizedPncShutdown 
    is called DET is reported
  
Test Object: None.
Test Precondition: 
   - ComMSynchronizedPncShutdownEnabled isa set to true
  
Test Execution: 
    01: Call ComM_Nm_ForwardSynchronizedPncShutdown
    02: Check DET is reported
    03: Intialize module
    04: Call ComM_Nm_ForwardSynchronizedPncShutdown
    05: Check DET is reported
  
Test Input: 
   - Call ComM_Nm_ForwardSynchronizedPncShutdown
  
Test Output: 
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR21-11.SWS_ComM_91030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2045</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_PassiveStartup_Interrupted_By_UserRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_21/source/application/Tests.c</sourcefile>
      <sourceline>70</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test shall prove that in case passive startup is performed and while requesting Nm_PassiveStartup
   User requests COMM_FULL_COMMUNICATION, ComM channel state machine calls Nm_NetworkRequest
  
Test Object: PNC state machine behaviour
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize stub invocation counts and internal functions
    03: Initialize ComM
    04: Allow communication for all the channels
    05: Do a passive startup
    06: Check that Nm_NetworkRequest_Stub.Count is diffrent then zero.
        Passive startup request invokes user request from test code
  
Test Input: 
   - passive startup
   - user request
  
Test Output: 
   - network request is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00869</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2046</internalId></specobject>
    <specobject>
      <id>TS_COMM_PassiveStartup_Delay_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_21/source/application/Tests.c</sourcefile>
      <sourceline>155</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test shall prove that in case ComMNmPassiveStartupDelayMainfunctionCycles is configured for a channel
   the Nm_PassiveStartUp is delayed by the number of cycles specified by ComMNmPassiveStartupDelayMainfunctionCycles
  
Test Object: None.
Test Precondition: 
     - ComMNmPassiveStartupDelayMainfunctionCycles is configured for a FULL channel
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize stub invocation counts and internal functions
    03: Initialize ComM
    04: Allow communication for all the channels
    05: Do a passive startup
    06: Check current state
    07: Wait until ComMNmPassiveStartupDelayMainfunctionCycles almoast expires
    08: Check that Nm_PassiveStartUp is not yet called
    09: VP(ComM.EB.ComMNmPassiveStartupDelayMainfunctionCycles_Conf)
        - Check that Nm_PassiveStartUp is called
  
Test Input: 
   - passive startup
  
Test Output: 
   - Passive startup is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMNmPassiveStartupDelayMainfunctionCycles_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>785</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2047</internalId></specobject>
    <specobject>
      <id>TS_COMM_PassiveStartup_Delay_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_21/source/application/Tests.c</sourcefile>
      <sourceline>249</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test shall prove that in case ComMNmPassiveStartupDelayMainfunctionCycles is configured for a channel
   the Nm_PassiveStartUp is delayed by the number of cycles specified by ComMNmPassiveStartupDelayMainfunctionCycles.
  
Test Object: None.
Test Precondition: 
     - ComMNmPassiveStartupDelayMainfunctionCycles is configured for a FULL channel
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize stub invocation counts and internal functions
    03: Initialize ComM
    04: Allow communication for all the channels
    05: Do a passive startup
    06: Check current state
    07: Wait until ComMNmPassiveStartupDelayMainfunctionCycles almoast expires
    08: Check that Nm_PassiveStartUp is not yet called
    09: Request newtork
    10: VP(ComM.EB.ComMNmPassiveStartupDelayMainfunctionCycles_Conf)
        - Check that Nm_PassiveStartUp is called
        - Check that Nm_NetworkRequest is called
    11: Check current state
  
Test Input: 
   - passive startup
  
Test Output: 
   - Passive startup is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMNmPassiveStartupDelayMainfunctionCycles_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>785</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2048</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_SynchronizedPncShutdown_Intermediate_To_Top_Level</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_22/source/application/Tests.c</sourcefile>
      <sourceline>52</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case intermediate coordinator changes to top level coordinator at post build time and
    when PNC state machine leaves COMM_PNC_REQUESTED state Nm_RequestSynchronizedPncShutdown is called.
  
Test Object: None.
Test Precondition: 
    - ComMSynchronizedPncShutdownEnabled is enabled
  
Test Execution: 
    01: Initialize ComM with V1
    02: Request 'Full Communication' for ComMUser_0
    03: Invoke main function of channel 0
    04: Check Pnc state machine enters PNC_REQUESTED state
    05: Request 'No Communication' for ComMUser_0
    06: Invoke main function of channel 0
    07: Check Nm_RequestSynchronizedPncShutdown is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR21-11.SWS_ComM_01083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2049</internalId></specobject>
    <specobject>
      <id>TS_COMM_SynchronizedPncShutdown_Top_To_Intermediate_Level</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_22/source/application/Tests.c</sourcefile>
      <sourceline>120</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case top coordinator changes to intermediate level coordinator at post build time and
    when PNC state machine leaves COMM_PNC_REQUESTED is and ComM_Nm_ForwardSynchronizedPncShutdown is called
    Nm_RequestSynchronizedPncShutdown is called also.
  
Test Object: None.
Test Precondition: 
    - ComMSynchronizedPncShutdownEnabled is enabled
  
Test Execution: 
    01: Inintialize ComM with V1
    02: Simulate ERA for PNC with ID 9
    03: Invoke main function of channel 0
    04: Check PNC reached PNC_REQUESTED state
    05: Invoke main function of channel 0
    06: Check Nm_RequestSynchronizedPncShutdown is not called
    07: Clear ERA
    08: Invoke main function of channel 0
    09: Check Nm_RequestSynchronizedPncShutdown is not called
    10: Check PNC reached PNC_PREPARE_SLEEP state
    11: Simulate Synchronus shut down
    12: Invoke main function of channel 0
    13: Check Nm_RequestSynchronizedPncShutdown is called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01082.Nm_RequestSynchronizedPncShutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2050</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_VariantLIGHT_NoCallsTo_Nm_NetworkRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_23_Coverage/source/application/Tests.c</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test shall prove that in case ComMNmVariant is LIGHT then
   ComM shall not call Nm_NetworkRequest. (coverage purpose)
  
Test Object: state machine behaviour
Test Precondition: 
    ComMNmVariant is LIGHT for all channels.
  
Test Execution: 
    01: Initialize ComM.
    02: Reset Nm_NetworkRequest stub counter.
    03: Allow communication for all the channels.
    04: Call main function once.
    05: Request COMM_FULL_COMMUNICATION.
    06: Call main function once (coverage purpose).
    07: Check the current state is COMM_FULL_COM_NETWORK_REQUESTED.
    08: Request COMM_FULL_COMMUNICATION full communication again to pass through
        FULL_COM_NETWORK_REQUESTED_ENTRY.
    09: Call main function once (coverage purpose).
    10: Check the current state is COMM_FULL_COM_NETWORK_REQUESTED.
    11: VP (ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest.NotCalled)
        Check no calls to Nm_NetworkRequest occurred.
  
Test Input: 
    user requests
  
Test Output: 
    no calls Nm_NetworkRequest
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest.NotCalled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>571</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2051</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_GetVersionInfoTest_DetOn_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/GetVersionInfo_test.c.m4</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM GetVersionInfo API with valid pointer as parameter.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize ComM module.
    02: Set the Version information values to invalid value before the call of
        ComM_GetVersionInfo.
    03: VP(ComM.ASR403.SWS_ComM_00823, ComM.ASR403.SWS_ComM_00370):
        Call ComM GetVersionInfo with a valid address.
    04: VP(ComM.ASR403.SWS_ComM_00822, ComM.ECUC_ComM_00622):
        Verify that the version parameters are those that are
        configured/hardcoded in the module.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00823</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00822</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00370</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00622</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2052</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_PNC_Wakeup_No_PNCs_Configured</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/Tests.c</sourcefile>
      <sourceline>88</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test should prove that in case no PNCs are configurred
    function ComM_EcuM_PNCWakeUpIndication is an empty function.
  
Test Object: None.
Test Precondition: 
    Det is enabled for ComM.
  
Test Execution: 
    01: Call ComM_EcuM_PNCWakeUpIndication
    02: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication_No_PNCs) 
         - Check that Det is not reported
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication_No_PNCs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>636</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2053</internalId></specobject>
    <specobject>
      <id>TS_COMM_30025</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/Tests.c</sourcefile>
      <sourceline>139</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM in No ComMode when an Active diagnostic
    indication occurs, when the ComM_Nm_Variant is FULL.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Initialize CanSM stub.
    02: Initialize ComM.
    03: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    04: Set ComM_CommunicationAllowed to TRUE for all the channels.
    05: VP(ComM.EB_Ref.SWS_ComM_00866.NmVariant.FULL): 
        - Simulate Active diagnostic indication
        to make all channels to Full
        ComMode retuns E_OK if successful.
    06: Verify that LinSM_RequestComMode is called.
    07: VP (ComM.EB_Ref.SWS_ComM_00828.BusSM_GetCurrentComMode):
        - Call Test_ComM_BusSMGetCurrentComModeFpList() for channel 4 and verify
        that LinSM_GetCurrentComMode must return  COMM_FULL_COMMUNICATION for
        channel Test_ComMChannel_4.
    08: VP (ComM.SWS_ComM_00266, ComM.SWS_ComM_00861, ComM.EB_Ref.SWS_ComM_00828.Dcm_ComM_FullComModeEntered, ComM.EB_Ref.SWS_ComM_00828.BswM_ComM_CurrentMode):
        - The mode as COMM_FULL_COMMUNICATION.
        - Dcm_ComM_FullComModeEntered is called.
        - BswM_ComM_CurrentMode() is called.
  
Test Input: None.
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00866.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00873</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00266</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00861</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Dcm_ComM_FullComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.BswM_ComM_CurrentMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>552</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1682</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.BusSM_GetCurrentComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>556</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00962.LinSM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>598</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2054</internalId></specobject>
    <specobject>
      <id>TS_COMM_30026</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/Tests.c</sourcefile>
      <sourceline>252</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM in Full ComMode and receives an inactive
    diagnostic indication when the ComM_Nm_Variant is FULL.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Initialize CanSM stub.
    02: Initialize ComM.
    03: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    04: Set ComM_CommunicationAllowed to TRUE for all the channels.
    05: Simulate an Active diagnostic indication
    06: VP (ComM.EB_Ref.SWS_ComM_00866.NmVariant.FULL):
        - All channels move into full communication.
    07: ComM.SWS_ComM_00874: Simulate the InactiveDiagnostic indication for all channels
        of Test_ComMUser_0
    08: Call the main functions of all the channels linked to Test_ComMUser_0
        until Network Release is called.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00866.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00874</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2055</internalId></specobject>
    <specobject>
      <id>TS_COMM_30027</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/Tests.c</sourcefile>
      <sourceline>352</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM in Full ComMode and transition to Silent
    ComMode (Prepare Bus Sleep indication) and when the ComM_Nm_Variant is
    FULL.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Initialize CanSM stub.
    02: Initialize ComM.
    03: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    04: Set ComM_CommunicationAllowed to TRUE for all the channels.
    05: VP (ComM.SWS_ComM_00873, ComM.SWS_ComM_00879):
        Simulate an Active diagnostic indication and verify that the all
        channels are in full ComMode.
    06: Simulate the InactiveDiagnostic indication for all channels of
        Test_ComMUser_0.
    Verify the behaviour of ComM in inactive diagnostic indication when ComM is
    in Full ComMode:
    07: VP (ComM.ASR403.SWS_ComM_00429):
        Call the main functions of all the channels linked to Test_ComMUser_0
        until Network Release is called.
    08: Simulate the Prepare Bus Sleep mode indications for all channels of
        Test_ComMUser_0.
    09: VP (ComM.SWS_ComM_00879, ComM.EB_Ref.SWS_ComM_00828.Dcm_ComM_SilentComModeEntered):
        - Call the main functions of all the channels linked to Test_ComMUser_0
        reaches Silent ComMode.
    10: VP (ComM.SWS_ComM_00868):
        - Simulate the Bus Sleep mode indications for all channels of Test_ComMUser_0.
    11: Simulate the Bus sleep mode indication for all channels of
        Test_ComMUser_0.
    12: Call the main functions of all the channels linked to Test_ComMUser_0
        until the mode becomes No ComMode.
    13: VP (ComM.SWS_ComM_00879, ComM.EB_Ref.SWS_ComM_00828.Dcm_ComM_NoComModeEntered):
        - The current ComM mode is COMM_NO_COMMUNICATION.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00873</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00429</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00868</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00879</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Dcm_ComM_NoComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Dcm_ComM_SilentComModeEntered</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2056</internalId></specobject>
    <specobject>
      <id>TS_COMM_30032</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/Tests.c</sourcefile>
      <sourceline>526</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behavior of ComM in Silent communication mode and receives an
    active diagnostic Indication, when the ComM_Nm_Variant is FULL.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Initialize CanSM stub.
    02: Initialize ComM.
    03: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    04: Set ComM_CommunicationAllowed to TRUE for all the channels.
    05: Simulate Active diagnostic indication make all channels to Full ComMode.
    06: Simulate the InactiveDiagnostic indication for all channels of
        Test_ComMUser_0.
    07: VP (ComM.SWS_ComM_00261):
        - Call main functions of all channels of Test_ComMUser_0 until
          Nm_NetworkRelease() is called.
    08: Simulate Prepare bus sleep indication for all channels of
        Test_ComMUser_0.
    09: Call the main functions of all the channels linked to Test_ComMUser_0
        until transition occurs to Silent communication.
    10: VP (ComM.EB.Dsn.Algorithm.BusSM_RequestComModeSILENTCOM):
        Verify that ComMode transition occurred to Silent communication.
        Verify the Bus state manager modules are requested for each channel with
        COMM_SILENT_COMMUNICATION.
    11: Simulate active diagnostic indication for  all channels of
        Test_ComMUser_0.
    12: Call the main functions of all the channels linked to Test_ComMUser_0
        until transition occurs to Full communication.
    13: Simulate the network mode indication for all channels of
        Test_ComMUser_0.
    14: VP (ComM.EB_Ref.SWS_ComM_00878.NmVariant.FULL):
        - Verify that ComMode transition occurred to Full communication.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00261</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeSILENTCOM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1685</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00878.NmVariant.FULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2057</internalId></specobject>
    <specobject>
      <id>TS_COMM_UserReqWhenWkUpInhibit</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/Tests.c</sourcefile>
      <sourceline>736</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test Objective:
    This test case verifies that,
    - When wake up inhibition of a channel is enabled by default (configuration
      parameter ComMNoWakeup is set to TRUE), the channel does not wake up if a
      user requests the channel (however the request is stored  for future
      evaluation). (ComM.ECUC_ComM_00569, ComM.SWS_ComM_00839 and ComM.SWS_ComM_00840)
    - When wake up inhibition of the channel is disabled dynamically (using the
      API ComM_PreventWakeUp()), the stored user request is granted and hence
      the channel does wake up. (ComM.SWS_ComM_00839 and ComM.SWS_ComM_00840)
  
Test Object: Wakeup Inhibition
Test Precondition: 
    Important test configuration details:
      01) Wake up inhibition (ComMNoWakeup) is set to TRUE for ComMChannel_0
          and ComMChannel_2 by default.
      02) Bus type of these two channel is CAN
      03) ComMNmVariant of these two channel is FULL
      04) ComMUser_0 is associated with these two channels
    Module state:
      05) ComM must be initialized
      06) status of ComMEcuGroupClassification must be set with 001 (= only
          "ComMNoWakeup" affects the ECU)
      07) CommunicationAllowed status must be TRUE for the concerned channels
    Misc.:
      08) Reset inhibition counter
      09) Reset stub invocation counts of dependent stub modules
      10) Initialize stub callout functions
  
Test Execution: 
    Notes:
      1) All references of "user" refer to ComMUser_0.
      2) Total number of channels of ComMUser_0 which have inhibition (both
         ComMNoWakeup and ComMNoCom) enabled (by default) is 3. Hence a
         single call of ComM_RequestComMode(COMM_FULL_COMMUNICATION) for
         Test_ComMUser_0 will results in increment of inhibition counter value
         by 3.
      3) We can invoke main function of either (also both) ComMChannel_0 or
         ComMChannel_2 (see Precondition-1). However only main function of
         ComMChannel_0 is invoked in this test case.

    01: Prepare test case preconditions
    02: Request "COMM_FULL_COMMUNICATION" followed by "COMM_NO_COMMUNICATION"
        and again "COMM_FULL_COMMUNICATION" for the user. (This is required to
        verify ComM.SWS_ComM_00839)
    03: Invoke main function of ComMChannel_0
    04: VP (ComM.ECUC_ComM_00569):
        - CanSM_RequestComMode() is not called
        - Nm_NetworkRequest() is not called
        - Current state of the channel is COMM_NO_COM_NO_PENDING_REQUEST
        - Inhibition counter value is 6 (as two times COMM_FULL_COMMUNICATION
           is requested, and see Notes item 2)
    05: VP (ComM.SWS_ComM_00470):
        - Disable wake up inhibition for ComMChannel_0, using
        ComM_PreventWakeUp()
    06: Verify that wake up inhibition status is set to FALSE for
        ComMChannel_0, using ComM_GetInhibitionStatus()
    07: Invoke main function of ComMChannel_0
    08: VP (ComM.SWS_ComM_00839, ComM.SWS_ComM_00840):
        - CanSM_RequestComMode() is called with COMM_FULL_COMMUNICATION
        - Nm_NetworkRequest() is called
    09: Simulate network mode indication for ComMChannel_0
    10: Invoke main function of ComMChannel_0
    11: VP (ComM.SWS_ComM_00839, ComM.SWS_ComM_00840):
         - ComMChannel_0 has reached to COMM_FULL_COM_NETWORK_REQUESTED
    12: Bring down the ComMChannel_0 to COMM_NO_COMMUNICATION state
        - This involves a No Com user request, followed by prepare bus sleep
          and bus sleep mode indications (also main function invocation is
          necessary in between these sub-steps).
    13: Verify ComMChannel_0 is in COMM_NO_COMMUNICATION state
    14: Enable wake up inhibition for ComMChannel_0
    15: Verify wake up inhibition is set to TRUE for ComMChannel_0.
    16: Request "COMM_FULL_COMMUNICATION" for user
    17: Request "COMM_NO_COMMUNICATION" for user
    18: Disable wake up inhibition for ComMChannel_0
    19: Reset necessary stub invocation counts which has to be verified in next
        VP
    20: Invoke main function of ComMChannel_0
    21: Verify that wake up inhibition status is set to FALSE for ComMChannel_0
    22: VP (ComM.SWS_ComM_00840):
         - Channel should not wake up because ComM stores the updated user
         request as the last requested mode is COMM_NO_COMMUNICATION.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00569</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00840</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00839</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00470</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2058</internalId></specobject>
    <specobject>
      <id>TS_COMM_MaxUserReqWhenNoComInhibit</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/Tests.c</sourcefile>
      <sourceline>997</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test Objective:
    This test case verifies that,
    - When NoCom-Inhibition of a channel is enabled by default (configuration
      parameter ComMNoCom is set to TRUE), the channel is not allowed to switch
      into COMM_FULL_COMMUNICATION if a user requests the channel
      However note that the request is stored for future evaluation.
      (ComM.ECUC_ComM_00571, ComM.SWS_ComM_00839 and ComM.SWS_ComM_00840)
    - When NoCom-Inhibition of the channel is disabled dynamically (using the
      API ComM_LimitChannelToNoComMode()), the stored user request is granted
      and hence the channel goes to COMM_FULL_COMMUNICATION mode. (ComM.SWS_ComM_00839 and
      ComM.SWS_ComM_00840)
    - The maximum value of rejected request is 0xFFFFU and the inhibition
      counter doesn't get increment further. (ComM.SWS_ComM_00138, ComM.SWS_ComM_00141, ComM.SWS_ComM_00142)
  
Test Object: Communication Inhibition
Test Precondition: 
    Important test configuration details:
      01) NoCom-Inhibition (ComMNoCom) is set to TRUE for ComMChannel_1 and
          ComMChannel_2 by default.
      02) Bus type of ComMChannel_1 is Ethernet and ComMChannel_2 is CAN.
      03) ComMNmVariant of these two channel is FULL
      04) ComMUser_0 is associated with these two channels
    Module state:
      05) ComM must be initialized
      06) status of ComMEcuGroupClassification must be set with 002 (= only
         "ComMNoCom" affects the ECU)
      07) CommunicationAllowed status must be TRUE for the concerned channels
    Misc.:
      08) Reset inhibition counter
      09) VP (ComM.SWS_ComM_00470):
          - Reset stub invocation counts of dependent stub modules
      10) Initialize stub callout functions
  
Test Execution: 
    Notes:
      1) All references of "user" refer to ComMUser_0.
      2) Total number of channels of ComMUser_0 which have inhibition (both
         ComMNoWakeup and ComMNoCom) enabled (by default) is 3. Hence a
         single call of ComM_RequestComMode(COMM_FULL_COMMUNICATION) for
         Test_ComMUser_0 will results in increment of inhibition counter value
         by 3.
      3) We can invoke main function of either (also both) ComMChannel_1 or
         ComMChannel_2 (see Precondition-1). However only main function of
         ComMChannel_1 is invoked in this test case.

    01: Prepare test case preconditions
    02: Request "COMM_FULL_COMMUNICATION" followed by "COMM_NO_COMMUNICATION"
        and again "COMM_FULL_COMMUNICATION" for the user. (This is required to
        verify ComM.SWS_ComM_00839)
    03: Invoke main function of ComMChannel_1
    04: VP (ComM.ECUC_ComM_00569):
        - EthSM_RequestComMode() is not called
        - Nm_NetworkRequest() is not called
        - Current state of the channel is COMM_NO_COM_NO_PENDING_REQUEST
        - Inhibition counter value is 6 (as two times COMM_FULL_COMMUNICATION
           is requested, and see Notes item 2)
    05: Request "COMM_FULL_COMMUNICATION" for the user until the inhibition
        counter reaches its maximum value (0xFFFFU)
    06: VP (ComM.SWS_ComM_00138, ComM.SWS_ComM_00141):
         - Inhibition counter value is 0xFFFFU
    07: Request "COMM_FULL_COMMUNICATION" for the user again
    08: VP (ComM.SWS_ComM_00142):
        - Inhibition counter doesn't get incremented. i.e the value 0xFFFFU
        - Current state of the channel is still COMM_NO_COM_NO_PENDING_REQUEST
    09: Disable "No Com inhibition", using ComM_LimitChannelToNoComMode()
    10: VP (ComM.ECUC_ComM_00571):
        Verify that "No Com inhibition" status is set to FALSE for
        ComMChannel_1 using ComM_GetInhibitionStatus().
    11. Reset inhibition counter, using the API ComM_ResetInhibitCounter() and
        also reset BusSM stub counts
    12. Invoke main function of ComMChannel_1
    13: VP (ComM.ASR403.SWS_ComM_00859):
        - EthSM_RequestComMode() is called with COMM_FULL_COMMUNICATION
        - Nm_NetworkRequest() is called
    14: Simulate network mode indication for ComMChannel_1
    15: Invoke main function of ComMChannel_1
    16: VP (ComM.SWS_ComM_00839, ComM.SWS_ComM_00840):
         - ComMChannel_1 has reached to COMM_FULL_COM_NETWORK_REQUESTED
    17: Bring down the ComMChannel_1 to COMM_NO_COMMUNICATION state by
        enabling NoCom-Inhibition for ComMChannel_1
        - This also involves prepare bus sleep followed by bus sleep mode
          indications (also main function invocation is necessary in between
          these sub-steps).
    18: Verify ComMChannel_1 is in COMM_NO_COMMUNICATION state
    19: Verify NoCom-Inhibition is set to TRUE for ComMChannel_1
    20: Request "COMM_FULL_COMMUNICATION" for user
    21: Request "COMM_NO_COMMUNICATION" for user
    22: Disable NoCom-Inhibition for ComMChannel_1
    23: Reset necessary stub invocation counts which has to be verified in next
        VP
    24: Invoke main function of ComMChannel_1
    25: Verify that wake up inhibition status is set to FALSE for ComMChannel_1
    26: VP (ComM.SWS_ComM_00840, ComM.ECUC_ComM_00571):
         - Channel should not wake up because ComM stores the updated user
         request as the last requested mode is COMM_NO_COMMUNICATION.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00571</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00141</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00859</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00839</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00840</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00470</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2059</internalId></specobject>
    <specobject>
      <id>TS_COMM_UserReqWhenWkUpAndNoComInhibit</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/Tests.c</sourcefile>
      <sourceline>1311</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test Objective:
    This test case verifies that,
    - When Wakeup Inhibition and NoCom-Inhibition of a channel is enabled by
      default (both the configuration parameters ComMNoWakeup and ComMNoCom is
      set to TRUE), the channel does not wake up if the corresponding user
      request the channel. However note that the request is stored for future
      evaluation. (ComM.ECUC_ComM_00569, ComM.ECUC_ComM_00571, ComM.SWS_ComM_00839 and ComM.SWS_ComM_00840)
    - In such a case only when both the Wakeup Inhibition and NoCom-Inhibition
      of the channel is disabled dynamically (using the corresponding APIs
      ComM_PreventWakeUp() and ComM_LimitChannelToNoComMode()), the stored user
      request is granted and hence the channel goes to COMM_FULL_COMMUNICATION
      mode. (ComM.SWS_ComM_00839 and ComM.SWS_ComM_00840)
  
Test Object: Wakeup Inhibition and Communication Inhibition
Test Precondition: 
    Important test configuration details:
      01) Wake up inhibition (ComMNoWakeup) and NoCom-Inhibition (ComMNoCom) is
          set to TRUE for ComMChannel_2 by default.
      02) Bus type of ComMChannel_2 is CAN
      03) ComMNmVariant of ComMChannel_2 is FULL
      04) VP (ComM.SWS_ComM_00470):
          - ComMUser_0 is associated with this channel
    Module state:
      05) ComM must be initialized
      06) status of ComMEcuGroupClassification must be set with 003 (= both
          "ComMNoWakeup" and "ComMNoCom" affects the ECU)
      07) CommunicationAllowed status must be TRUE for the concerned channels
    Misc.:
      08) Reset inhibition counter
      09) Reset stub invocation counts of dependent stub modules
      10) Initialize stub callout functions
  
Test Execution: 
    Notes:
      1) All references of "user" refer to ComMUser_0.
      2) Total number of channels of ComMUser_0 which have inhibition (both
         ComMNoWakeup and ComMNoCom) enabled (by default) is 3. Hence a
         single call of ComM_RequestComMode with Test_ComMUser_0 will results
         in increment of inhibition counter value by 3.

    01: Prepare test case preconditions
    02: Request "COMM_FULL_COMMUNICATION" for user
    03: Invoke main function of ComMChannel_2
    04: VP (ComM.ECUC_ComM_00569  and ComM.ECUC_ComM_00571):
        - CanSM_RequestComMode() is not called
        - Nm_NetworkRequest() is not called
        - Inhibition counter value is 3
        - Check that both Wake up inhibition and NoCom-Inhibition is enabled (
           Status value is 3). Note: Status bit value: 0b00000011, where 0th
           bit represents NoCom-Inhibition and 1st bit represents Wakeup
           inhibition.
    05: Disable wake up inhibition for ComMChannel_2, using
        ComM_PreventWakeUp().
    06: Invoke main function of ComMChannel_2
    07: VP (ComM.ECUC_ComM_00569):
        - Wake up inhibition status is set to FALSE but NoCom-Inhibition is
           set to TRUE (i.e. Status value is 2) for ComMChannel_2.
        - CanSM_RequestComMode() and Nm_NetworkRequest() is not called yet
    08: Disable NoCom-Inhibition but enable Wakeup inhibition for ComMChannel_2
    09: Invoke main function of ComMChannel_2
    10: VP (ComM.ECUC_ComM_00571):
        - NoCom-Inhibition is set to FALSE, but Wakeup inhibition is set to
           TRUE (i.e. Status value is 1) for ComMChannel_2
        - CanSM_RequestComMode() and Nm_NetworkRequest() is not called yet
    11: Disable both NoCom-Inhibition and Wakeup inhibition for ComMChannel_2
    12: Invoke main function of ComMChannel_2
    13: VP (ComM.SWS_ComM_00839 &amp; ComM.SWS_ComM_00840):
        - Both "No Com inhibition" and "Wake up inhibition" status is set to
           FALSE (i.e. Status value is 0) for ComMChannel_2
        - CanSM_GetCurrentComMode() is called
        - CanSM_RequestComMode() is called with COMM_FULL_COMMUNICATION
        - Nm_NetworkRequest() is called
    14: Simulate network mode indication for ComMChannel_2
    15: Invoke main function of ComMChannel_2
    16: VP (ComM.SWS_ComM_00839 &amp; ComM.SWS_ComM_00840):
        - ComMChannel_2 has reached to COMM_FULL_COM_NETWORK_REQUESTED
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00569</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00571</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00839</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00840</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00470</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2060</internalId></specobject>
    <specobject>
      <id>TS_COMM_30059</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/Tests.c</sourcefile>
      <sourceline>1550</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM_Nm_NetworkStartIndication for all channels of
    ComM.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Reset  (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSM stub.
    03: Initialize ComM.
    04: Set ComM_CommunicationAllowed to TRUE for all the channels.
    05: VP (ComM.SWS_ComM_00383):
        - Simulate Nm NetworkStartIndication for channels configured as FULL /
        PASSIVE.
    06: Call main functions of all channels.
    07: BusSM is requested for COMM_FULL_COMMUNICATION.
    08: Simulate the network mode indication for all channels.
    09: Call main functions of all channels.
    10: Verify that Nm_NetworkRequest is not called.
    11: Verify that the current mode is COMM_NO_COMMUNICATION.
    12: Request Full Communication for Test_ComMUser_0.
    13: Call Main functions for user 4 and 5.
    14: VP (ComM.SWS_ComM_00583):
        - Current mode of the user is COMM_FULL_COMMUNICATION.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00583</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00383</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2061</internalId></specobject>
    <specobject>
      <id>TS_COMM_30075</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/Tests.c</sourcefile>
      <sourceline>1705</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM in No ComMode when a user requests Full
    communication mode and the ComM_Nm_Variant is LIGHT, when BusType is LIN.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize LinSM stub.
    03: Initialize ComM.
    04: Set ComM_CommunicationAllowed to TRUE all the channels of
        Test_ComMUser_0.
    05: Request Full communication for Test_ComMUser_0.
    06: Call the main function of channel 4 linked to Test_ComMUser_0 until the
        mode becomes Full ComMode (Network requested).
    07: Verify that Requested mode Counter is one with respect to LinSM call.
    08: VP (ComM.ASR403.SWS_ComM_00856):
        - LinSM is Requested mode for COMM_FULL_COMMUNICATION.
    09: Call the main function of channel 4 linked to Test_ComMUser_0 until the
        mode becomes Full ComMode (Network requested).
    10: Wait until state duration extension expires.
    11: Request No Communication for Test_ComMUser_0 and invoke main function
        once
    12: Wait Until Light Duration time out.
    13: Verify that LinSM requested for COMM_NO_COMMUNICATION.
    14. Verify that the current mode is COMM_NO_COMMUNICATION.

  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00856</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2062</internalId></specobject>
    <specobject>
      <id>TS_COMM_TM_IN_FULL_COMMODE_DURATION</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/Tests.c</sourcefile>
      <sourceline>1829</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that all ComM channels stay in Full Com Mode for the time
    configured by 'ComMTMinFullComModeDuration' even if the channel
    main functions are configured to run at different cycle intervals.
    To verify that the timeout time for 'Ready Sleep State'
    (ComMNmLightTimeout) is the same for all ComM channels even if
    channel MainFunctions are called at different cycles.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    Note: A failure will be returned when Main functions of channels linked to
    any user are not able to produce the desired transition within a
    timeout period.

    01: Simulate reset of stubs.
    02: Initialize ComM.
    03: Set communication allowed to TRUE for all the channels of
        Test_ComUser_0.
    04: Call ComM_RequestComMode with COMM_FULL_COMMUNICATION for the user
        Test_ComMUser_0.
    05: Call main function of all the channels of Test_ComMUser_0.
    06: VP (ComM.ECUC_ComM_00557):
        Verify the current state of Channel_4 and Channel_5 as
        COMM_FULL_COM_NETWORK_REQUESTED.
    07: Call ComM_RequestComMode with COMM_NO_COMMUNICATION for the user
        Test_ComMUser_0.
    08: Invoke main function of all the channels of Test_ComMUser_0 in a loop
        in such a manner that ComMTMinFullComModeDuration doesn't expire within
        this loop but will expire if the main function would be called once
        further.
    09: Verify the current state of channel-4 and channel-5 as still in
        COMM_FULL_COM_NETWORK_REQUESTED.
    10: Invoke main function of channel-4 and channel-5 exactly once, to check
        whether both the channel timers (of full com mode duration) are
        getting expired at same time.
    11: VP (ComM.EB_Ref.SWS_ComM_00886.NmVariant.LIGHT, ComM.EB_Ref.SWS_ComM_00889.NmVariant.LIGHT):
        - The current state of both channels (ch-4 and ch-5) is
        COMM_FULL_COM_READY_SLEEP which indicates that both the channel
        timers have expired at the same time.
    12: Invoke main function of all the channels of Test_ComMUser_0 in a loop
        in such a manner that ComM_ReadySleepNoNmTimeoutMs doesn't expire
        within this loop but will expire if the main function called one more
        time.
    13: Verify the current state of channel-4 and channel-5 as still in
        COMM_FULL_COM_READY_SLEEP.
    14: VP (ComM.SWS_ComM_00891):
        - Invoke main function of channel-4 and channel-5 exactly once, to
        check whether both channel timers (of LightTimeout time) are getting
        expired at the same time.
    15: VP (ComM.SWS_ComM_00610, ComM.EB.Dsn.StateDynamics.TIMEOUT_FULL_COM_READY_SLEEP_0):
        - The current state of both channels (ch-4 and ch-5) is
        COMM_NO_COMMUNICATION which indicates that both the channel timers
        have expired at the same time.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00557</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00606</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00889.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00610</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00891</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TIMEOUT_FULL_COM_READY_SLEEP_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1749</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00886.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2063</internalId></specobject>
    <specobject>
      <id>TS_COMM_CANCEL_LIGHT_TIMEOUT_TIMER</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/Tests.c</sourcefile>
      <sourceline>2026</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that in sub-state COMM_FULL_COM_READY_SLEEP, the timer
    ComMNmLightTimeout gets cancelled if a state change occurs from
    COMM_FULL_COM_READY_SLEEP to COMM_FULL_COM_NETWORK_REQUESTED due to a
    'full communication' user request, provided ComMNmVariant is configured
    as LIGHT. [ComM.SWS_ComM_00892]
  
Test Object: None.
Test Precondition: 
    All channels of user Test_ComMUser_0 is configured to have 'LIGHT'
    NmVariant.
  
Test Execution: 
    01: Initialize test case.
    02: Simulate ComM_CommunicationAllowed is TRUE for all the channels of
        Test_ComMUser_0.
    03: Request 'Full Communication' for Test_ComMUser_0.
    04: Invoke main functions of all the channels of Test_ComMUser_0.
    05: Verify the current state of Channel_4 &amp; Channel_5 is 'Full Com Network
        Requested'.
    06: Request 'No Communication' for Test_ComMUser_0.
    07: Invoke main functions of all the channels of Test_ComMUser_0 until
        MinFullComModeDuration timeout timer expires.
    08: Verify the current state of Channel_4 &amp; Channel_5 is 'Full Com Ready
        Sleep'.
    09: Invoke main functions of all the channels of Test_ComMUser_0 until
        Ready sleep timeout timer (LightTimeout timer) doesn't expire.
    10: Simulate 'Full Communication' user request for Test_ComMUser_0.
    11: VP (ComM.SWS_ComM_00892):
        - Invoke main functions of all the channels of Test_ComMUser_0 exactly
        once so that LightTimeout timer is expected to be expire, but timer get
        cancelled due to Full communication user request (done in step-10).
    12: The current state of Channel_4 is 'Full Com Network Requested'.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00892</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00606</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2064</internalId></specobject>
    <specobject>
      <id>TS_COMM_ChanInhibition_ActiveDiag</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/Tests.c</sourcefile>
      <sourceline>2182</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To verify that ComM allows inhibiting a channel when active diagnostic
    session is indicated for another channel.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize stubs and ComM module.
    02: Indicate communication is allowed for all channels of ComMUser_0.
    03: Request Full Communication for all channels of ComMUser_0.
    04: Indicate the start of an active diagnostic session for ComMChannel_0.
    05: Invoke main function of ComMChannel_0.
    06: Enable 'limitation to no communication' for ComMChannel_0.
    07: Invoke main function of ComMChannel_0.
    08. Get the inhibition status of ComMChannel_0. and verify it is enabled.
    09: VP [ComM.SWS_ComM_00182]:
        Inhibition does not get active for ComMChannel_0 since an active diagnostic
        session is going on. This must be checked by verifying the current state of ComMChannel_0 is
        COMM_FULL_COM_NETWORK_REQUESTED.
    10: VP [ComM.SWS_ComM_00488]:
        'Limitation to no communication' is not enabled for all other channels.
    11: Enable 'limitation to no communication' for all other channels of
        ComMUser_0.
    12: Invoke main functions of all other channels of Test_ComMUser_0.
    13: VP [ComM.SWS_ComM_00488]:
        Get the inhibition status of the other channels and verify the
        inhibition is enabled for all other channels.
    14: Indicate the end of diagnostic session for ComMChannel_0.
    15: Invoke main function of ComMChannel_0.
    16: Disable 'limitation to no communication' for ComMChannel_0.
    17: Invoke main function of ComMChannel_0.
    18: Get the inhibition status of ComMChannel_0.
    19. VP [ComM.SWS_ComM_00488]:
        Inhibition gets active for ComMChannel_0 since no active diagnostic
        session is going on.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00488</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00182</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2065</internalId></specobject>
    <specobject>
      <id>TS_COMM_Query_BusSMModeLIN</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/Tests.c</sourcefile>
      <sourceline>2346</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    The function ComM_GetCurrentComMode() shall use the corresponding interfaces of the Bus State
    Managers to get the current Communication Mode of the network.
    Test that the mode is queried for channels of bus type CAN, LIN, Eth.
  
Test Object: ComM_GetCurrentComMode()
Test Precondition: 
  Test_ComMUser_0 is configured for
    * 3 channels of bus type CAN
    * 2 channels of bus type LIN
    * 1 channels of bus type Ethernet
  
Test Execution: 
    01: Initialize test case
        * Reset stub invocation counts
        * Initialize call out functions
        * Initialize ComM
        * Clear inhibition status
    02: Configure stubs CanSM_GetCurrentComMode_Stub, LinSM_GetCurrentComMode_Stub and
        EthSM_GetCurrentComMode_Stub so, that they all return COMM_FULL_COMMUNICATION mode.
    03: Invoke ComM_GetCurrentComMode() for Test_ComMUser_0.
    04: VP (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00857, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083, ComM.SWS_ComM_00084)
        * Verify, that ComM has invoked for each channel the corresponding
          &lt;Bus&gt;SM_GetCurrentComMode stub
        * Verify the returned Mode is COMM_FULL_COMMUNICATION.

    05: Configure stubs so that
        * CanSM_GetCurrentComMode_Stub returns COMM_NO_COMMUNICATION mode
        * LinSM_GetCurrentComMode_Stub returns COMM_FULL_COMMUNICATION mode
        * EthSM_GetCurrentComMode_Stub returns COMM_FULL_COMMUNICATION mode
    06: Invoke ComM_GetCurrentComMode() for Test_ComMUser_0.
    07: VP (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00857, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083, ComM.SWS_ComM_00176, ComM.SWS_ComM_00084)
        * Verify, that ComM has invoked for each channel the corresponding
          &lt;Bus&gt;SM_GetCurrentComMode stub (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00857, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083, ComM.SWS_ComM_00084).
        * Verify the returned Mode is COMM_NO_COMMUNICATION
         (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00857, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083, ComM.SWS_ComM_00084, ComM.SWS_ComM_00176).

    08: Configure stubs so that
        * CanSM_GetCurrentComMode_Stub returns COMM_FULL_COMMUNICATION mode
        * LinSM_GetCurrentComMode_Stub returns COMM_SILENT_COMMUNICATION mode
        * EthSM_GetCurrentComMode_Stub returns COMM_FULL_COMMUNICATION mode
    09: Invoke ComM_GetCurrentComMode() for Test_ComMUser_0.
    10: VP (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00857, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083, ComM.SWS_ComM_00176, ComM.SWS_ComM_00084)
        * Verify, that ComM has invoked for each channel the corresponding
          &lt;Bus&gt;SM_GetCurrentComMode stub (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00857, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083, ComM.SWS_ComM_00084).
        * Verify the returned Mode is COMM_SILENT_COMMUNICATION
         (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00857, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083, ComM.SWS_ComM_00084, ComM.SWS_ComM_00176).

    11: Configure stubs so that
        * CanSM_GetCurrentComMode_Stub returns COMM_FULL_COMMUNICATION mode
        * LinSM_GetCurrentComMode_Stub returns COMM_FULL_COMMUNICATION mode
        * EthSM_GetCurrentComMode_Stub returns COMM_NO_COMMUNICATION mode
    12: Invoke ComM_GetCurrentComMode() for Test_ComMUser_0.
    13: VP (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00857, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083, ComM.SWS_ComM_00084, ComM.SWS_ComM_00176)
        * Verify, that ComM has invoked for each channel the corresponding
          &lt;Bus&gt;SM_GetCurrentComMode stub (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00857, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083, ComM.SWS_ComM_00084).
        * Verify the returned Mode is COMM_NO_COMMUNICATION
         (ComM.ASR403.SWS_ComM_00855, ComM.ASR403.SWS_ComM_00857, ComM.ASR403.SWS_ComM_00860, ComM.ASR403.SWS_ComM_00083, ComM.SWS_ComM_00084, ComM.SWS_ComM_00176).
    14: Configure the Bus State Manager stubs so, that
        * CanSM_GetCurrentComMode() returns the error code E_OK
        * LinSM_GetCurrentComMode() returns the error code E_OK
        * EthSM_GetCurrentComMode() returns the error code E_NOT_OK
    15: VP (ComM.ASR403.SWS_ComM_00083)
        Invoke ComM_GetCurrentComMode() for Test_ComMUser_0 and verify, that the returned error code
        is E_NOT_OK.
    16: Configure the Bus State Manager stubs so, that
        * CanSM_GetCurrentComMode() returns the error code E_OK
        * LinSM_GetCurrentComMode() returns the error code E_NOT_OK
        * EthSM_GetCurrentComMode() returns the error code E_OK
    17: VP (ComM.ASR403.SWS_ComM_00083)
        Invoke ComM_GetCurrentComMode() for Test_ComMUser_0 and verify, that the returned error code
        is E_NOT_OK.
    18: Configure the Bus State Manager stubs so, that
        * CanSM_GetCurrentComMode() returns the error code E_NOT_OK
        * LinSM_GetCurrentComMode() returns the error code E_OK
        * EthSM_GetCurrentComMode() returns the error code E_OK
    19: VP (ComM.ASR403.SWS_ComM_00083)
        Invoke ComM_GetCurrentComMode() for Test_ComMUser_0 and verify, that the returned error code
        is E_NOT_OK.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00855</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00857</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00860</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2066</internalId></specobject>
    <specobject>
      <id>TS_COMM_PassiveActiveStartup</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/Tests.c</sourcefile>
      <sourceline>2585</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test case tests the scenario, where a passive wakeup indication and a user request follow#
    each other.
  
Test Object: None.
Test Precondition: 
    * Test_ComMUser_0 is configured for
      - 4 channels of ComMNmVariant FULL
      - 2 channels of ComMNmVariant LIGHT
    * channel-5 is of ComMNmVariant LIGHT
    * synchronous wakeup is enabled
    * Communication is not allowed for any channel
  
Test Execution: 
    01: Initialize test case
        * Reset stub invocation counts
        * Initialize call out functions
        * Initialize ComM
        * Lift NoCom and WakeUp inhibition for all channels
    02: Call ComM_EcuM_WakeUpIndication() for channel-0
    03: Invoke main function of all channels.
    04: VP (ComM.SWS_ComM_00694):
        Verify all channels are in state COMM_NO_COM_REQUEST_PENDING.
    05: Request "Full Communication" for user Test_ComMUser_0
    06: Invoke main function of all channels.
    07: Allow communication for all channels
    08: Invoke main function of all channels.
    09: VP (ComM.SWS_ComM_00869):
        Verify, that ComM has invoked Nm_NetworkRequest for all channels of ComMNmVariant FULL.
    10: Invoke main function of all channels until the timer of all channels of ComMNmVariant LIGHT
        has expired.
    11: VP (ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_2)
        Verify that all channels are still in state COMM_FULL_COM_NETWORK_REQUESTED, because the
        user 0 still requests FULL COMMUNICATION.
    12: Invoke ComM_DCM_ActiveDiagnostic() for channel-5
    13: Invoke main function of all channels.
    14: Verify, Nm_NetworkRequest() is not invoked again, because channel-5 is of
        ComMNmVarinat LIGHT.
    15: Request "No Communication" for user Test_ComMUser_0.
    16: Invoke main function of all channels.
    17: VP (ComM.EB_Ref.SWS_ComM_00889.NmVariant.LIGHT)
        Verify all channels, except channel-5 which is requested by the Dcm, have entered
        COMM_FULL_COM_READY_SLEEP.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00869</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00694</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00889.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2067</internalId></specobject>
    <specobject>
      <id>TS_COMM_LIN_NONE_CH</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/Tests.c</sourcefile>
      <sourceline>2760</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test ensure correct handling of a LIN channel with NONE NM variant.
  
Test Object: None.
Test Precondition: 
    LIN channele has NONE nm variant configuration.
  
Test Execution: 
    01: Test init.
    02: Request COMM_FULL_COMMUNICATION.
    03: Wait from minimum time duration spent in COMM_FULL_COM_NETWORK_REQUESTED.
    04: Check that LinSM mode request is done.
    05: Request COMM_NO_COMMUNICATION
    06: Verify channel is in COMM_NO_COMMUNICATION
    07: VP (ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_TIMEOUT
            ComM.EB.ComMReleaseNoneChannels):
         - channel state machine emit the event TIMEOUT to itself 
           to trigger an immediate transition to state NO_COMMUNICATION. 
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_TIMEOUT</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1713</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComMReleaseNoneChannels</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>679</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2068</internalId></specobject>
    <specobject>
      <id>TS_COMM_SlaveActive_SlavePassive_DET</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_3/source/application/Tests.c</sourcefile>
      <sourceline>2846</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test shall prove that in case if neither NM variant SLAVE_ACTIVE or SLAVE_PASSIVE
   is configured and DET is enabled, a call to ComM_BusSM_BusSleepMode
   wil raise a DET.
  
Test Object: None.
Test Precondition: 
    NM variant SLAVE_ACTIVE are SLAVE_PASSIVE not set
  
Test Execution: 
   01: Initialize ComM
   02: Call ComM_BusSM_BusSleepMode
   03: Call ComM_BusSM_BusSleepMode
  
Test Input: 
    - Call ComM_BusSM_BusSleepMode with a valid channel 
    - Call ComM_BusSM_BusSleepMode with an invalid channel
  
Test Output: 
    - Det is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_91000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2069</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_WkUpInd_BitVector_PrpSlpTmr_MultiComSig</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/PncTests.c</sourcefile>
      <sourceline>51</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test objective:
    * To test PNC state change(s) for the following scenario (via a wake up
      indication):
        PncNoCom -&gt; PncPrepareSleep -&gt; PncRequested -&gt; PncReadySleep -&gt;
        PncPrepareSleep -&gt; PncNoCom.
    * To test the setting and clearing of EIRA in Tx bit vector for the
      particular PNC in the corresponding ComSignal during Com_SendSignal()
      API call. (ComM.SWS_ComM_00948, ComM.EB_Ref.SWS_ComM_00930.ComMPncGatewayEnabled.FALSE.Tx.WithValue.One, ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE, ComM.SWS_ComM_00960, ComM.SWS_ComM_00944)
    * To test the starting, expiration property of PncPrepareSleep timeout
      timer. (ComM.SWS_ComM_00947, ComM.SWS_ComM_00952)
  
Test Object: ComM PNC functionality
Test Precondition: 
    Synchronous wakeup should be ON.
    The configuration contains 48 PNCs.

    Important test configuration details:

    Channel and User mapping:
    ============================================================================
    PNCs     PNCID    Channels                Users
    ============================================================================
    PNC_0     8        ComMChannel_0,        ComMUser_0, ComMUser_4
                       ComMChannel_1

    PNC_1     23       ComMChannel_3         ComMUser_1

    PNC_2     26       ComMChannel_4         ComMUser_2

    PNC_3     38       ComMChannel_5         ComMUser_3

    PNC_4, ..., PNC_56 ComMChannel_3         ComMUser_5
    ============================================================================

    Signal Mapping:
    ============================================================================
    PNCs   Rx Signals (signal ID)              Tx Signals (siganl ID)
           (ComM.SWS_ComM_00982, ComM.SWS_ComM_00916, ComM.SWS_ComM_00919)       (ComM.SWS_ComM_00982, ComM.SWS_ComM_00916, ComM.SWS_ComM_00919)
    ============================================================================
    PNC_0  ComSignal_Rx1_PNCID_8and26 (0)     ComSignal_Tx1_PNCID_8and26 (1)
           ComSignal_Rx2_PNCID_8and26 (4)     ComSignal_Tx2_PNCID_8and26 (5)

    PNC_1  ComSignal_Rx_PNCID_23and38 (2)     ComSignal_Tx_PNCID_23and38 (3)

    PNC_2  ComSignal_Rx1_PNCID_8and26 (0)     ComSignal_Tx1_PNCID_8and26 (1)
           ComSignal_Rx2_PNCID_8and26 (4)     ComSignal_Tx2_PNCID_8and26 (5)

    PNC_3  ComSignal_Rx_PNCID_23and38 (2)     ComSignal_Tx_PNCID_23and38 (3)

    PNC_4, ..., PNC_48
           ComSignal_Rx3_PNCID_AllOther (6)   ComSignal_Tx3_PNCID_AllOther (7)
    ============================================================================
  
Test Execution: 
    Note: 1) A failure will be returned when Main functions of channels linked
             to any user are not able to produce the desired transition within
             a timeout period.
          2) After each verification point (VP related to call to BswM), the
             BswM stub count shall be set to zero.

    01: Initialize test case
    02: Allow communication for all the channels
    03: Simulate EcuM WakeUpIndication for all the channels and invoke the main
        function of all the channels
    04: VP (ComM.ECUC_ComM_00695, ComM.SWS_ComM_00931, ComM.SWS_ComM_00920, ComM.SWS_ComM_00995, ComM.ASR403.SWS_ComM_00913, ComM.EB.Dsn.StateDynamics.ECUM_WAKEUP_IND_PNC_NO_COMMUNICATION):
        * All PNCs have entered PNC_PREPARE_SLEEP state
    05: VP (ComM.SWS_ComM_00919, ComM.SWS_ComM_00912):
        a) Request 'Full communication' for user(s) of PNC_0
        b) Simulate Eira for PNC_0
    06: Invoke main function of channels corresponds to PNC_0
    07: VP (ComM.SWS_ComM_00948, ComM.ECUC_ComM_00839, ComM.EB_Ref.SWS_ComM_00930.ComMPncGatewayEnabled.FALSE.Tx.WithValue.One, ComM.SWS_ComM_00944, ComM.SWS_ComM_00975, ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_PREPARE_SLEEP_0):
        a) PNC_0 has entered PNC_REQUESTED state
        b) Com_SendSignal() has been called with the value '1' for the bit
           representing this PNC in the corresponding ComSignal(s)
    08-10: Repeat steps 5-7 for PNC_1
    11-13: Repeat steps 5-7 for PNC_2
    14-16: Repeat steps 5-7 for PNC_3
    17: Request 'No communication' for user(s) of PNC_0
    18: Invoke main function of channels corresponds to PNC_0
    19: VP (ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE, ComM.ECUC_ComM_00839, ComM.SWS_ComM_00960,ComM.SWS_ComM_00975, ComM.EB.Dsn.StateDynamics.NO_COM_REQ_BY_ALL_COMM_USER_PNC_REQUESTED_1):
        a) PNC_0 has entered the state PNC_READY_SLEEP
        b) Com_SendSignal() has been called with the value '0' for the bit
           representing this PNC in the corresponding ComSignal(s)
    20-22: Repeat steps 17-19 for PNC_1
    23-25: Repeat steps 17-19 for PNC_2
    26-28: Repeat steps 17-19 for PNC_3
    29: Simulate Eira is set to '1' for all PNCs and indicate to ComM via
        corresponding ComM_COMCbk() APIs
    30: Call main functions of all the channels
    31: VP (ComM.SWS_ComM_00984):
        * Com_ReceiveSignal() has been called
    32: Simulate Eira is set to '0' for all PNCs and indicate to ComM via
        corresponding ComM_COMCbk() APIs
    33: Call main functions of all the channels
    34: VP (ComM.SWS_ComM_00984, ComM.SWS_ComM_00940, ComM.SWS_ComM_00920, ComM.EB.Dsn.StateDynamics.COMCBK_PNC_READY_SLEEP):
        a) Com_ReceiveSignal() has been called
        b) All the PNCs have entered PNC_PREPARE_SLEEP state
    35: Invoke main functions of all the channels in a loop such that
        PncPrepareSleep timer doesn't expires
    36: VP(ComM.ASR403.SWS_ComM_00943):
        a) Verify no call to BswM
        b) Verify the Pnc state is (still in) PNC_PREPARE_SLEEP.
    37: Invoke main function of all the channels exactly once so that
        PncPrepareSleep timer expires
    38: VP(ComM.SWS_ComM_00947, ComM.SWS_ComM_00952, ComM.EB.Dsn.StateDynamics.PREPARE_SLEEP_TIMEOUT_PNC_PREPARE_SLEEP):
        * All the PNCs have entered PNC_NO_COMMUNICATION state
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00931</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ECUM_WAKEUP_IND_PNC_NO_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1768</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00948</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_PREPARE_SLEEP_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1777</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00912</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00995</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00913</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00943</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00940</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.COMCBK_PNC_READY_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1775</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00947</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PREPARE_SLEEP_TIMEOUT_PNC_PREPARE_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1776</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00952</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00982</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00984</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00960</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NO_COM_REQ_BY_ALL_COMM_USER_PNC_REQUESTED_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1770</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00916</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00919</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00986</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00944</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00930.ComMPncGatewayEnabled.FALSE.Tx.WithValue.One</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00695</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00841</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00839</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_CurrentPNCMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00920</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00975</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.Com_ReceiveSignal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00819</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00825</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2070</internalId></specobject>
    <specobject>
      <id>TS_COMM_PrepSlpToRdySlpMultiComSig</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/PncTests.c</sourcefile>
      <sourceline>591</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test PNC state change(s) for the following scenario:
    PncNoCom -&gt; PncPrepareSleep -&gt;  PncReadySleep -&gt; PncPrepareSleep.
  
Test Object: ComM PNC FSM
Test Precondition: 
    Synchronous wakeup should be ON.
  
Test Execution: 
    01: Initialize test case
    02: Allow communication for all the channels.
    03: Simulate ComM_EcuM_WakeUpIndication() for all the channels
    04: Invoke main function of all the channels
    05: VP (ComM.SWS_ComM_00931):
         * All PNCs transit to PNC_PREPARE_SLEEP state.
    06: Simulate EIRA is set with '1' for all the PNCs.
    07: Indicate 'change in EIRA' by calling corresponding ComM Com call back
        functions
    08: Call main function of all the channels
    09: VP (ComM.SWS_ComM_00950, ComM.EB.Dsn.StateDynamics.COMCBK_PNC_PREPARE_SLEEP):
        * All PNCs transit to PNC_READY_SLEEP.
    10: Simulate EIRA bit is reset (with '0') for all the PNCs
    11: Indicate 'change in EIRA' by calling corresponding ComM Com call back
        functions
    12. Call main function of all the channels.
    13. VP (ComM.SWS_ComM_00984, ComM.SWS_ComM_00940):
        a) Com_ReceiveSignal has been called.
        b) All PNCs transit to PNC_PREPARE_SLEEP state.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00940</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00950</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.COMCBK_PNC_PREPARE_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1774</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00931</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00984</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2071</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_PncStateChangeNotifyTest</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>167</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    To test PNC state change notifications and state entry behaviours.
  
Test Object: ComM PNC FSM
Test Precondition: 
    Important test configuration details:
    Channel and User mapping:
    ============================================================================
    PNCs        PNCID     Channels         Users
    ============================================================================
    ComMPnc_0    38      ComMChannel_3    ComMUser_3_PNCID_38


    ComMPnc_1    8       ComMChannel_0,   ComMUser_0_PNCID_8,
                         ComMChannel_1    ComMUser_4_PNCID_8

    ComMPnc_2    26      ComMChannel_4    ComMUser_2_PNCID_26

    ComMPnc_3    23      ComMChannel_3    ComMUser_1_PNCID_23
    ============================================================================

    Signal Mapping:
    ============================================================================
    PNCs       Rx Signals (signal ID)            Tx Signals (siganl ID)
    ============================================================================
    ComMPnc_0  ComSignal_Rx_PNCID_23and38 (2)    ComSignal_Tx_PNCID_23and38 (3)

    ComMPnc_1  ComSignal_Rx1_PNCID_8and26 (2)    ComSignal_Tx1_PNCID_8and26 (1)
               ComSignal_Rx2_PNCID_8and26 (4)    ComSignal_Tx2_PNCID_8and26 (5)

    ComMPnc_2  ComSignal_Rx1_PNCID_8and26 (0)    ComSignal_Tx1_PNCID_8and26 (1)
               ComSignal_Rx2_PNCID_8and26 (4)    ComSignal_Tx2_PNCID_8and26 (5)

    ComMPnc_3  ComSignal_Rx_PNCID_23and38 (2)     ComSignal_Tx_PNCID_23and38 (3)
    ============================================================================
  
Test Execution: 
    01: Initialize test case
    02: Allow communication for all the channels
    03: VP (ComM.SWS_ComM_00978, ComM.SWS_ComM_00924, ComM.SWS_ComM_00971, ComM.SWS_ComM_00972):
        a) Simulate EIRA
        b) Request 'Full Communication' for the user(s) of ComMPnc_1
        and verify that no PNC state change occurs.
    04: Invoke main function of all the channels of ComMPnc_1
    05: VP (ComM.ASR403.SWS_ComM_00908, ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_CurrentPNCMode, ComM.SWS_ComM_00976, ComM.SWS_ComM_00932, ComM.SWS_ComM_00907),
           (ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_NO_COMMUNICATION_0, ComM.ASR403.SWS_ComM_00280):
        - ComMPnc_1 has entered PNC_REQUESTED state
    06: Simulate Network mode indication for all channels of ComMPnc_1
    07: VP (ComM.SWS_ComM_00993, ComM.SWS_ComM_00929):
        - Current state of all of channels of ComMPnc_1 is
           COMM_FULL_COM_NETWORK_REQUESTED
        - Nm_NetworkRequest() has been called
        - &lt;Bus&gt;SM is requested with COMM_FULL_COMMUNICATION
    08: VP (ComM.SWS_ComM_00972):
        - Request 'No Communication' for ComMPnc_1 and invoke main function
        of the corresponding channels
    09: VP (ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE, ComM.SWS_ComM_00976, ComM.ECUC_ComM_00839, ComM.SWS_ComM_00910, ComM.SWS_ComM_00907):
        - ComMPnc_1 has entered PNC_READY_SLEEP state
    10: VP (ComM.ASR403.SWS_ComM_00942, ComM.SWS_ComM_00907):
        - No state change has been occured for ComMPnc_1
    11: VP (ComM.SWS_ComM_00971):
        - Simulate EIRA is to '0' and indicate to ComM via corresponding
        ComM_COMCbk() API and invoke corresponding channel main function for
        processing the EIRA
    12: VP (ComM.SWS_ComM_00940, ComM.SWS_ComM_00976, ComM.SWS_ComM_00907):
        - ComMPnc_1 has entered PNC_PREPARE_SLEEP state
    13: Invoke main function of all the channels of ComMPnc_1 until
        Pnc Prepare sleep timer expires
    14: VP (ComM.SWS_ComM_00947, ComM.SWS_ComM_00976, ComM.SWS_ComM_00924, ComM.EB.Dsn.StateDynamics.PREPARE_SLEEP_TIMEOUT_PNC_PREPARE_SLEEP):
        - ComMPnc_1 has entered PNC_NO_COMMUNICATION
    15: Repeat the above steps 03 to 14 for ComMPnc_3 (Note: ComMPnc_3 is
        assigned to ComSignals different from ComMPnc_1)
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00910</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00976</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00924</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00907</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00908</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00930.ComMPncGatewayEnabled.FALSE.Tx.WithValue.One</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>593</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00993</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00971</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00940</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00932</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_NO_COMMUNICATION_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1765</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00929</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00972</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00942</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00978</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00280</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.BswM_ComM_CurrentPNCMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00839</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00886</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PREPARE_SLEEP_TIMEOUT_PNC_PREPARE_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1776</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00947</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2072</internalId></specobject>
    <specobject>
      <id>TS_COMM_PncNoComToRdySlpTest</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>525</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    To test PNC state change(s) for the following scenario:
      PncNoCom -&gt; PncReadySleep -&gt; PncRequested -&gt; PncReadySleep
      -&gt; PncPrepareSleep -&gt; PncNoCom.
    To test that PNC goes from PNC_REQUESTED to PNC_READY_SLEEP only if all
    the associated users release the PNC (ComM.ASR403.SWS_ComM_00936).
  
Test Object: ComM PNC functionality
Test Precondition: 
    - ComMPncSupport is set to 'true' (ComM.ECUC_ComM_00839).
    - For PNC configuration details, refer to precondition section of the
      test case TS_COMM_PncStateChangeNotifyTest above.
    - To verify [ComM.ASR403.SWS_ComM_00936]: A configured PNC must have more than one ComMUser.
      Only ComMPnc_1 (whose PNCID is '8') have such users in this test configuration.
      - ComMPnc_1 have the users "ComMUser_0_PNCID_8" and "ComMUser_4_PNCID_8"
  
Test Execution: 
    Note:
    1) A failure will be returned when Main functions of channels linked
       to any user are not able to produce the desired transition within
       a timeout period.
    2) After each verification point (call to BswM), the BswM stub count
       shall be set to zero.

    01: Initialize test case
    02: Set ComM_CommunicationAllowed to TRUE for all the channels
    03: Set EIRA bits corresponds to ComMPnc_1 (whose PNCID is '8') and
        indicate this to ComM via corresponding ComM_COMCbk() API of signal
        ComSignal_Rx1_PNCID_8and26 (not for signal ComSignal_Rx_PNCID_23and38).
    04: Invoke main functions of the channel(s) associated to ComMPnc_1
    05: VP (ComM.SWS_ComM_00933, ComM.EB.Dsn.StateDynamics.COMCBK_PNC_NO_COMMUNICATION):
        - ComMPnc_1 has entered PncReadySleep state
    06: Request 'Full communication' user ComMUser_0_PNCID_8
    07: Invoke main function of ComMUser_0_PNCID_8 which is associated to
        ComMPnc_1
    08: Simulate network mode indication fo all the channels of ComMPnc_1
    09: VP (ComM.ASR403.SWS_ComM_00942):
        - ComMPnc_1 has entered PNC_REQUESTED state
    10: Request 'No communication' for one of the users (say
        ComMUser_4_PNCID_8) of ComMPnc_1 (ComM.ASR403.SWS_ComM_00936)
    11: Invoke main functions of all the channels of ComMPnc_1
    12: VP (ComM.ASR403.SWS_ComM_00936):
        - No state change occurs for ComMPnc_1 (it remains in PNC_REQUESTED
          state) since ComMUser_0_PNCID_8 still requests the PNC for "Full
          communication" even-though ComMUser_4_PNCID_8 has requested
          for "No Communication".
    13: Request 'No communication' for ComMUser_0_PNCID_8 (ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE) and invoke
        corresponding main function
    14: VP (ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE):
        - ComMPnc_1 has entered PNC_READY_SLEEP state.
    15: Simulate EIRA request is set to 0 for all PNC's and indicate to ComM
        via ComM_COMCbk()
    16: Invoke main functions of users associated to ComMPnc_1
    17: VP (ComM.SWS_ComM_00940, ComM.EB.Dsn.StateDynamics.COMCBK_PNC_READY_SLEEP):
        - ComMPnc_1 has entered PNC_PREPARE_SLEEP state.
    18: Invoke main function of channel which has LeastMainFunctionPeriod until
        PrepareSleep timer expires
    19: VP (ComM.SWS_ComM_00947):
        - ComMPnc_1 has entered PNC_NO_COMMUNICATION state.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00933</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.COMCBK_PNC_NO_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1767</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00936</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00940</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00947</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00839</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2073</internalId></specobject>
    <specobject>
      <id>TS_COMM_PncChnlInhibition</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>739</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test state behaviour of channels of PNC when Mode limitation is enabled
    during run time.
  
Test Object: PNC and Channel Inhibition
Test Precondition: 
  
Test Execution: 
    01: Initialize test case
    02: Allow communication for all channels
    03: Request "Full Communication" for all the PNCs
    04: Invoke main functions of all channels
    05: Simulate network mode indication for required channels of all users
    06: VP (ComM.SWS_ComM_00301):
        - Enable inhibition for all channels of all PNCs by calling
        ComM_LimitChannelToNoComMode(Channel, TRUE)
    07: Invoke main functions of all the channels
    08: VP (ComM.ASR403.SWS_ComM_00163, ComM.EB_Ref.SWS_ComM_00828.Nm_NetworkRelease):
        - Inhibition status of channel is COMM_LIMIT_NOCOMM
        - Nm_NetworkRelease() has been called
    09: Request "Full Communication" for all users of all PNCs
    10: VP (ComM.EB.SWS_ComM_00827, ComM.SWS_ComM_00215,
            ComM.EB_Ref.SWS_ComM_00649.COMM_E_MODE_LIMITATION):
        - The return value of ComM_RequestComMode is
           TEST_COMM_E_MODE_LIMITATION
        - Inhibition counter value
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00215</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00301</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00649.COMM_E_MODE_LIMITATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Nm_NetworkRelease</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00827</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>616</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2074</internalId></specobject>
    <specobject>
      <id>TS_COMM_DefaultInhibitionChPNCs</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>898</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Ensure that when a mode inhibition is enabled, channels of a PNC
    remain in COMM_NO_COM_NO_PENDING_REQUEST state when users of this
    PNC requests COMM_FULL_COMMUNICATION.
    Also ensure, channels of a PNC remain in COMM_NO_COM_PENDING_REQUEST
    state as long as communication is not allowed.
  
Test Object: PNC, Communication Allowed and Channel Inhibition
Test Precondition: 
    Module State:
      - ComM is initialized
      - Communication is not allowed
      - Status of ComMEcuGroupClassification is set to 003 (= both
        "ComMNoWakeup" and "ComMNoCom" affects the ECU)
    Important test configuration details:
      - ComMNoCom inhibition and ComMNoWakeup inhibition are enabled by default
        for ComMChannel_3
      - ComMChannel_3 is associated with ComMPnc_3 whose user is ComMUser_1
      - ComMBusType of ComMChannel_3 is Fr
      - ComMPncId of ComMPnc_3 is 23
  
Test Execution: 
    Note:
    1) All references of "PNC" refer to ComMPnc_3
    2) All references of "Channel" refer to ComMChannel_3

    01: Initialize test case
        - Initialize stub invocation counts
        - Initialize &lt;Bus&gt;SM callouts
        - Initialize ComM
        - Both "ComMNoWakeup" and "ComMNoCom" affects the ECU
        - Reset inhibition counter
    02: Request "Full Communication" for the PNC
    03: Invoke main function of the channel once
    04: VP (ComM.EB.SWS_ComM_00827):
        - The inhibition counter value
        - The channel remains in COMM_NO_COM_NO_PENDING_REQUEST state
        - PNC is in PNC_REQUESTED state
    05: Disable No Com inhibition for the channel
    06: Invoke main function of the channel several times
    07: VP (ComM.EB.SWS_ComM_00827):
        - The channel is still in COMM_NO_COM_NO_PENDING_REQUEST state since
          Wake up inhibition is still enabled.
    08: Disable Wake up inhibition for the channel
    09: Invoke main function of channel once
    10: VP (ComM.EB.SWS_ComM_00827):
        - The channel now switches to COMM_NO_COM_REQUEST_PENDING state
          since both inhibitions are disabled but communication is not
          allowed yet.
        - BusSM is not requested COMM_FULL_COMMUNICATION
        - Nm_NetworkRequest() is not called
    11: Invoke main function of the channel several times
    12: VP (ComM.EB.SWS_ComM_00827):
        - The channel is still in COMM_NO_COM_REQUEST_PENDING state since
          communication is not allowed yet.
        - BusSM is not requested COMM_FULL_COMMUNICATION
        - Nm_NetworkRequest() is not called
    13: Allow communication for the channel
    14: Invoke main function of the channel once
    15: VP (ComM.EB.SWS_ComM_00827):
        - BusSM is requested COMM_FULL_COMMUNICATION
        - Nm_NetworkRequest() is called
    16: Simulate network mode indication for the channel and invoke main
        function of the channel once
    17: Ensure that channel has reached COMM_FULL_COM_NETWORK_REQUESTED
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00827</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>616</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2075</internalId></specobject>
    <specobject>
      <id>TS_COMM_ComRecvSigReturnVal</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>1100</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test Motivation:
      Motivation of this test case is to improve uncovered code w.r.t the
      return value of Com_ReceiveSignal() call back.
    Test Objective:
      Ensure that when Com_ReceiveSignal() returns a value other than E_OK
      ComM doesn't process change in EIRA or no state change occurs in
      PNC state machine.
  
Test Object: return value of Com_ReceiveSignal
Test Precondition: 
    Module state:
      - Module is initialized
      - Communication is allowed for all the channels
      - Com_ReceiveSignal() returns a value other than E_OK
      - Hint:
      -* Range of return value of Com_ReceiveSignal():
         E_OK: service has been accepted
         COM_SERVICE_NOT_AVAILABLE: corresponding I-PDU group was stopped
            (or service failed due to development error)
         COM_BUSY: in case the TP-Buffer is locked for large data types
            handling
  
Test Execution: 
    Note:
    - All references of "PNC" refer to PNC_0 (any PNC can be taken, however
      just take "PNC_0" for simulation purpose).

    01: Prepare test case preconditions
        - Set the return value of Com_ReceiveSignal_stub to return
          "COM_SERVICE_NOT_AVAILABLE"
    02: Ensure that PNC is in PNC_NO_COMMUNICATION state
    03: Simulate EIRA bit is set for a PNC, and indicate the change in EIRA
    04: Invoke channel main function
    05: VP (ComM.SWS_ComM_00984):
        - PNC remains in PNC_NO_COMMUNICATION state
    06: Set the return value of Com_ReceiveSignal_stub to return
        "COM_BUSY" and repeat the steps 03 to 05
    07: Set the return value of Com_ReceiveSignal_stub to return
        "E_OK" and repeat the steps 03 to 04
    08: VP (ComM.SWS_ComM_00984, ComM.SWS_ComM_00933, ComM.EB.Dsn.StateDynamics.COMCBK_PNC_NO_COMMUNICATION):
        - PNC has switched to PNC_READY_SLEEP state
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00984</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00933</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.COMCBK_PNC_NO_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1767</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2076</internalId></specobject>
    <specobject>
      <id>TS_COMM_Test_EIRA_MultipleSignalValues</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>1234</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that in case two COM signals refer to the same PNC, and on one signal
    the bit corresponding to the PNC is cleared but on the other signal
    the bit corresponding to the PNC is still set it will stay in PncReadySleep.
    Test that in case both signals release the PNC, the PNC will go to PncNoComNotify.
  
Test Object: ComM PNC FSM
Test Precondition: 
    Important test configuration details:
    Channel and User mapping:
    ============================================================================
    PNCs        PNCID     Channels         Users
    ============================================================================
    ComMPnc_1    8       ComMChannel_0,   ComMUser_0_PNCID_0,
                         ComMChannel_1    ComMUser_4_PNCID_0
    ============================================================================

    Signal Mapping:
    ============================================================================
    PNCs       Rx Signals (signal ID)            Tx Signals (siganl ID)
    ============================================================================
    ComMPnc_1  ComSignal_Rx1_PNCID_8and26 (2)    ComSignal_Tx1_PNCID_8and26 (1)
               ComSignal_Rx2_PNCID_8and26 (4)    ComSignal_Tx2_PNCID_8and26 (5)
    ============================================================================
  
Test Execution: 
    01: Initialize test case
    02: Call COM callback functions for the two signals which refer to PNC_1 (ID 0)
        In both signals the request for PNC_1 is active.
    03: Check that PNC_READY_SLEEP is entered.
    04: Clear the bit corresponding to PNC_1 (ID 0) from the signal2
    05: Wait PREPARE_SLEEP_TIMEOUT cycles plus some cycles to make shore that the PNC_1 (ID 0) would go
        to PncNoComNotify if the value for the PNC_1 from signal 1 is ignored. Req. ComM.ASR403.SWS_ComM_00942
    06: Check that no state change was performed
    07: Clear from signal1 the bit corresponding to PNC_1 (ID 0)
    08: Since not signal1 and signal2 does requests the PNC the PNC shall go to PNC_PREPARE_SLEEP state.
        Req. ComM.SWS_ComM_00940
    09: Wait PREPARE_SLEEP_TIMEOUT cycles plus some cycles to make shore that the PNC_1 (ID 0) will to
        PNC_NO_COMMUNICATION
    10: Check that PNC_1 (ID 0) is in PNC_NO_COMMUNICATION state.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00942</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00940</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2077</internalId></specobject>
    <specobject>
      <id>TS_COMM_LimitToNoCom9</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>1367</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_LimitChannelToNoComMode in case
    - ComM_LimitChannelToNoComMode is requested and then released
    - Passive wakeup is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Do a passive startup
   04: Request than release LimitChannelToNoComMode
   05: VP (ComM.EB.LimitToNoCom)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LimitToNoCom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2078</internalId></specobject>
    <specobject>
      <id>TS_COMM_LimitToNoCom10</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>1428</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_LimitChannelToNoComMode in case
    - ComM_LimitChannelToNoComMode is requested and then released
    - User requests full communication
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request FULL COMMUNICATION
   04: Request than release LimitChannelToNoComMode
   05: VP (ComM.EB.LimitToNoCom)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LimitToNoCom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2079</internalId></specobject>
    <specobject>
      <id>TS_COMM_LimitToNoCom11</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>1489</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_LimitChannelToNoComMode in case
    - ComM_LimitChannelToNoComMode is requested and then released
    - Passive wakeup is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Do a passive startup
   04: Request LimitChannelToNoComMode
   05: VP (ComM.EB.LimitToNoCom)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LimitToNoCom</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>646</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2080</internalId></specobject>
    <specobject>
      <id>TS_COMM_LimitToNoCom12</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>1549</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_LimitChannelToNoComMode in case
    - ComM_LimitChannelToNoComMode is requested
    - User request FULL COMMUNICATION
  
Test Object: None.
Test Precondition: None.
Test Execution: 
  01: Initialize ComM
  02: Clear inhibitions
  03: Request Full Communication
  04: Check the current state is COMM_NO_COM_REQUEST_PENDING
  05: Call ComM_LimitChannelToNoComMode
  06: VP(ComM.EB.LimitToNoCom,
         ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_NO_COM_REQUEST_PENDING_0)
      - Check the current state is No Com No Pending Request
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_NO_COM_REQUEST_PENDING_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1761</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2081</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupInhibition9</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>1616</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_PreventWakeUp in case
    - ComM_PreventWakeUp is requested and then released
    - Passive wakeup is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Do a passive startup
   04: Request than release ComM_PreventWakeUp
   05: VP (ComM.EB.WakeupInhibition)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.WakeupInhibition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2082</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupInhibition10</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>1675</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_PreventWakeUp in case
    - ComM_PreventWakeUp is requested and then released
    - User requests Full Communication
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request Full Communication
   04: Request than release ComM_PreventWakeUp
   05: VP (ComM.EB.WakeupInhibition)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.WakeupInhibition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2083</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupInhibition11</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>1734</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_PreventWakeUp in case
    - ComM_PreventWakeUp is requested
    - Passive wakeup is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Do a passive startup
   04: Request ComM_PreventWakeUp
   05: VP (ComM.EB.WakeupInhibition)
       - Check the current state is still COMM_NO_COM_REQUEST_PENDING
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.WakeupInhibition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>645</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2084</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupInhibition12</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>1792</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_PreventWakeUp in case
    - ComM_PreventWakeUp is requested
    - User requests Full Communication
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Request Full Communication
   04: Check the current state is No Com Request Pending
   05: Request ComM_PreventWakeUp
   06: VP(ComM.EB.Dsn.StateDynamics.WAKEUP_INHIBITION_NO_COM_REQUEST_PENDING)
       - Check the current state is No Com No Pending Request
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.WAKEUP_INHIBITION_NO_COM_REQUEST_PENDING</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1763</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2085</internalId></specobject>
    <specobject>
      <id>TS_COMM_IsRequested8</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>1855</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_RequestComMode in case
    - User requests No Communication and later Full Communication
    - Passive wakeup is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: User requests Full Communication
   04: Do a passive startup
   05: User releases and then requests channel
   06: VP(ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0)
       - Check the current state is No Com Request Pending
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2086</internalId></specobject>
    <specobject>
      <id>TS_COMM_IsRequested9</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>1918</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_RequestComMode in case
    - User requests No Communication and later Full Communication
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: User requests Full Communication
   04: User releases and then requests channel
   05: VP(ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0)
       - Check the current state is No Com Request Pending
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2087</internalId></specobject>
    <specobject>
      <id>TS_COMM_IsRequested10</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>1976</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_RequestComMode in case
    - User requests No Communication
    - Passive wakeup is true
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: Do a passive startup
   04: User Requests No Communication
   05: VP(ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0)
       - Check the current state is No Com Request Pending
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2088</internalId></specobject>
    <specobject>
      <id>TS_COMM_IsRequested11</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_4/source/application/Tests.c</sourcefile>
      <sourceline>2034</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test verifies the functionality of ComM_RequestComMode in case
    - User requests Full communication and later No Communication
  
Test Object: None.
Test Precondition: None.
Test Execution: 
   01: Initialize ComM
   02: Clear inhibitions
   03: User requests full communication
   04: Check the current state is No Com Request Pending
   05: User requests no communication
   06: VP(ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0)
       - Check the current state is No Com No Pending Request
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_USER_NO_COM_PENDING_REQUEST_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2089</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_18062014_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_5/source/application/Tests.c</sourcefile>
      <sourceline>62</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test-case checks that if the ComMPncNmRequest is set to TRUE
    and the channel statemachine is already in the COMM_FULL_COM_NETWORK_REQUESTED,
    if a PNC goes to PNC_REQUESTED then a new network request is generated
    (ie. Nm_NetworkRequest) even if it was called before.
    
    Requirement ComM.SWS_ComM_00980 states that each time PNC_REQUESTED is entered from
    other states, the network should be requested again if ComMPncNmRequest is
    set to TRUE.
    To simulate a situation like this, the channel needs to be already in the
    COMM_FULL_COM_NETWORK_REQUESTED. In this test-case, ComM_DCM_ActiveDiagnostic
    is used to bring the channel statemachine to full communication.
  
Test Object: None.
Test Precondition: 
    - User0 mapped to Pnc0 which is mapped to Channel0
    - Channel statemachine already in the COMM_FULL_COM_NETWORK_REQUESTED state
    - Communication allowed on the tested channel
    - ComMPncNmRequest set to TRUE for Channel0
  
Test Execution: 
    01: Initialize test environment
    02: Initialize ComM
    03: Allow communication on Channel0
    04: Indicate a DCM diagnostics session start
    05: Execute the mainfunction of the channel
    06: Check that Nm_NetworkRequest has been called
    07: Simulate Network Mode to allow transition
        to COMM_FULL_COM_NETWORK_REQUESTED
    08: Execute the mainfunction of the channel
    09: Check that the channel statemachine is in 
        state COMM_FULL_COM_NETWORK_REQUESTED
    10: Request FULL COMMUNICATION for User0
    11: Execute the mainfunction of the channel
    12: VP (ComM.EB_Ref.SWS_ComM_00673.ComM_PncModeType):
        - Check that Pnc0 switched to PNC_REQUESTED
    13: VP(ComM.SWS_ComM_00980, ComM.EB.ComMPncNmRequest.dependencyCheck):
        - Check if Nm_NetworkRequest has been called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00980</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00673.ComM_PncModeType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComMPncNmRequest.dependencyCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>613</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2090</internalId></specobject>
    <specobject>
      <id>TS_COMM_18062014_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_5/source/application/Tests.c</sourcefile>
      <sourceline>176</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test-case checks that if the ComMPncNmRequest is set to FALSE
    and the channel statemachine is already in the COMM_FULL_COM_NETWORK_REQUESTED,
    if a PNC goes to PNC_REQUESTED then no new network request is generated
    (ie. Nm_NetworkRequest is not called).
    
    Requirement ComM.SWS_ComM_00980 states that each time PNC_REQUESTED is entered from
    other states, the network should be requested again if ComMPncNmRequest is
    set to TRUE.
    To simulate a situation like this, the channel needs to be already in the
    COMM_FULL_COM_NETWORK_REQUESTED. In this test-case, ComM_DCM_ActiveDiagnostic
    is used to bring the channel statemachine to full communication.
  
Test Object: None.
Test Precondition: 
    - User1 mapped to Pnc1 which is mapped to Channel1
    - Channel statemachine already in the COMM_FULL_COM_NETWORK_REQUESTED state
    - Communication allowed on the tested channel
    - ComMPncNmRequest set to FALSE for Channel1
  
Test Execution: 
    01: Initialize test environment
    02: Initialize ComM
    03: Allow communication on Channel1
    04: Indicate a DCM diagnostics session start
    05: Execute the mainfunction of the channel
    06: Check that Nm_NetworkRequest has been called
    07: Simulate Network Mode to allow transition
        to COMM_FULL_COM_NETWORK_REQUESTED
    08: Execute the mainfunction of the channel
    09: Check that the channel statemachine is in 
        state COMM_FULL_COM_NETWORK_REQUESTED
    10: Request FULL COMMUNICATION for User1
    11: Execute the mainfunction of the channel
    12: Check that Pnc1 switched to PNC_REQUESTED
    13: VP(ComM.SWS_ComM_00980):
        - Check if Nm_NetworkRequest has been called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00980</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2091</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_PnInfo_504PNCs</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_504PNCs/source/application/EbTests.c</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Verify ComM partial networking functionality when the COMM_PN_INFO_LENGTH
      is greater than 7 and the data provided are correct.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    Partial networking is enabled.
  
Test Execution: 
    01. Initialize Stubs.
    02. Initialize Module.
    03. Allow communication for the required channel.
    04. Request Full Communication.
    05. Invoke mainfunction.
    06. Check that Pnc requested state is reached.
    07. Check ComSendSignal was called and the bit is set to 1 for PNC.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PartialNetworkOffset_busNmOffsetUsage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>674</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PartialNetworkOffset_MinComMPncId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>675</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PartialNetworkOffset_MaxComMPncId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>676</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00874</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2092</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_LimitToNoCom20</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_8/source/application/Tests.c</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    When state FULL_COM_NETWORK_REQUESTED and ComMModeLimitationEnabled = TRUE and
    ComM_LimitChannelToNoComMode() is called with Status = TRUE and the state machine
    goes to COMM_NO_COMMUNICATION and passive wakeup is triggered, the state machine
    goes to COMM_FULL_COM_READY_SLEEP.
    Make sure that user requested is not cleared since 2 channels are linked to a user and 
    limitation is aplied for only one channel.
  
Test Object: None.
Test Precondition: 
    ComMModeLimitationEnabled = TRUE;
  
Test Execution: 
    01: Initialize ComM.
    02: Simulate Communication allowed to TRUE for channel 1 and channel 2.
    03: Request Full Communication Mode and invoke main function for user 6.
    04: Verify that current state for channel 1 is COMM_FULL_COM_NETWORK_REQUESTED.
    05: Verify that current state for channel 2 is COMM_FULL_COM_NETWORK_REQUESTED.
    06: VP(ComM.ASR403.SWS_ComM_00163):
        - Call ComM_LimitChannelToNoComMode for channel 1.
    07: VP(ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_FULL_COM_NETWORK_REQUESTED_0):
        - Verify that current state for channel 1 is COMM_FULL_COM_READY_SLEEP.
    08: Verify that Nm_NetworkRelease() is called.
    09: Call ComM_Nm_PrepareBusSleepMode() and invoke main function for channel 1.
    10: Verify that current state for channel 1 is COMM_SILENT_COM.
    11: Call ComM_Nm_BusSleepMode() and invoke main function for channel 1.
    12: Verify that current state for channel 1 is COMM_NO_COM_NO_PENDING_REQUEST.
    13: VP (ComM.SWS_ComM_00582):
        - Verify that current state for channel 2 is still COMM_FULL_COM_NETWORK_REQUESTED.
    14: Do a passive startup and invoke main function for channel 1.
    15: VP (ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_MODE_PASSIVE_STARTUP):
        - Verify that current state for channel 1 is COMM_FULL_COM_READY_SLEEP.
    16: Verify that Nm_PassiveStartUp() is called and Nm_NetworkRequest() is not called.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00582</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_FULL_COM_NETWORK_REQUESTED_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1734</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.LIMIT_TO_NO_COM_MODE_PASSIVE_STARTUP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1722</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00795</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2093</internalId></specobject>
    <specobject>
      <id>TS_COMM_PrepareBussSleepWithNetworkRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_8/source/application/Tests.c</sourcefile>
      <sourceline>233</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The channel state machine shall emit the event REQ_STATUS_CHANGED
    on entry in COMM_FULL_COM_READY_SLEEP.
    A user request causes a transition from FULL_COM_READY_SLEEP to
    FULL_COM_NETWORK_REQUESTED and Nm_NetworkRequest is also called
    and the BusNm indicates Prepare Bus-Sleep Mode. Notification
    causes a transition to SILENT_COMMUNICATION and if the BusNm
    indicates Network Mode and Full Communication is requested
    the ComM enters the FULL_COM_NETWORK_REQUESTED.
    See (ASCCOMM-1147).
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize ComM;
    02: Simulate Communication allowed to TRUE for channel 3.
    03: Request Full Communication Mode and invoke main function for user 7.
    04: Verify that current state for channel 3 is COMM_FULL_COM_NETWORK_REQUESTED.
    05: Request No Communication Mode and invoke main function for user 7.
    06: Verify that current state for channel 3 is COMM_FULL_COM_READY_SLEEP.
    07: Request Full Communication Mode and invoke main function for user 7.
    08: Verify that current state for channel 3 is COMM_FULL_COM_NETWORK_REQUESTED.
    09: Call ComM_Nm_PrepareBusSleepMode for channel 3.
    10: Verify that current state for channel 3 is COMM_SILENT_COM.
    11: Call ComM_Nm_NetworkMode for channel 3.
    12: Check that Nm_NetworkRequest_Stub stub is called.
    13: VP(ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_ENTRY_REQ_STATUS_CHANGED):
        - Verify that current state for channel 3 is COMM_FULL_COM_NETWORK_REQUESTED
    14: Request No Communication Mode and invoke main function for user 7.
    15: Call ComM_Nm_PrepareBusSleepMode for channel 3.
    16: Verify that current state for channel 3 is COMM_SILENT_COM.
    17: Call ComM_Nm_NetworkMode for channel 3.
    18: VP(ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_ENTRY_REQ_STATUS_CHANGED):
        - Verify that current state for channel 3 is COMM_FULL_COM_READY_SLEEP caused
        by step 14.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_READY_SLEEP_ENTRY_REQ_STATUS_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1723</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2094</internalId></specobject>
    <specobject>
      <id>TS_COMM_BussSleepWithNetworkRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_8/source/application/Tests.c</sourcefile>
      <sourceline>371</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The channel state machine shall emit the event REQ_STATUS_CHANGED
    on entry in COMM_NO_COMMUNICATION.
    A user request or a Dcm active diagnostic request causes a transition
    from FULL_COM_READY_SLEEP to FULL_COM_NETWORK_REQUESTED and if BusNm
    indicates ComM_Nm_BusSleepMode(), transition to state NO_COMMUNICATION
    is done.
    In case channel is requested transition to FULL_COM_NETWORK_REQUESTED
    is done. See ASCCOMM-1148.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize ComM.
    02: Simulate Communication allowed to TRUE for channel 3.
    03: Request Full Communication Mode and invoke main function for user 7.
    04: Verify that current state for channel 3 is COMM_FULL_COM_NETWORK_REQUESTED.
    05: Request No Communication Mode and invoke main function for user 7.
    06: Verify that current state for channel 3 is COMM_FULL_COM_READY_SLEEP.
    07: Request Full Communication Mode and invoke main function for user 7.
    08: Verify that Nm_NetworkRequest() is not called.
    09: Verify that current state for channel 3 is COMM_FULL_COM_NETWORK_REQUESTED.
    10: Call ComM_Nm_BusSleepMode for channel 3.
    11: VP(ComM.EB.Dsn.StateDynamics.NO_COMMUNICATION_ENTRY_REQ_STATUS_CHANGED):
        - Verify that current mode for user 7 is COMM_FULL_COMMUNICATION caused by
        Full Communication request(step 7).
    12: Request No Communication Mode and invoke main function for user 7.
    13: Verify that current state for channel 3 is COMM_FULL_COM_READY_SLEEP.
    14: Call ComM_Nm_BusSleepMode for channel 3.
    15: VP(ComM.EB.Dsn.StateDynamics.NO_COMMUNICATION_ENTRY_REQ_STATUS_CHANGED):
        - Verify that current mode for user 7 is COMM_NO_COMMUNICATION (caused by
        step 12 and step 14).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NO_COMMUNICATION_ENTRY_REQ_STATUS_CHANGED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1724</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2095</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_PB_ChannelPerPnc</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_9/source/application/Tests.c</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
     Verify state for channel 0 and channel 1 based configuration.
     To test post-build selectable.
  
Test Object: None.
Test Precondition: 
    Important Configuration Details:
    - The channel ComMChannel_0 is associated to PNCs ComMPnc_0 and ComMPnc_1
    - The channel ComMChannel_1 is associated to PNCs ComMPnc_0 and ComMPnc_1
    - The channel ComMUser_0 is associated to ComMPnc_0
    - The channel ComMUser_1 is associated to ComMPnc_1
   Module State:
    - Module is initialized
    - Communication is allowed for all channels
  
Test Execution: 
    VP (ComM.EB.PBSelectable.Master, ComM.EB.PB.Format.C):
        - Check that ComM_PBcfg.h exists and can be included
    VP (ComM.EB.PBSelectable.FileName):
        - Verify that files ComM_V0_PBcfg.h and ComM_V1_PBcfg.h exist
    01: VP (ComM.EB.PBSelectable.TypeName): 
        - Verify that types ComM_V0_ConstConfigLayoutType and ComM_V1_ConstConfigLayoutType exist;
    02: Reset stub invocation counters;
    03: Initialize stub callouts;
    04: Inintialize ComM with V0;
    05: VP (ComM.SWS_ComM_00885):
        - Allow communication for the required channels;
    06: Request 'Full Communication' for ComMUser_0;
    07: Invoke main function of the channel 0 and channel 1;
    08: VP (ComM.ASR403.SWS_ComM_00872):
        - Verify state for channel 0 and channel 1;
    09: Inintialize ComM with V1;
    10: VP (ComM.SWS_ComM_00885):
        - Allow communication for the required channels;
    11: Request 'Full Communication' for ComMUser_0;
    12: Invoke main function of the channel 0 and channel 1;
    13: VP (ComM.ASR403.SWS_ComM_00872, ComM.ASR403.ECUC_ComM_00880, ComM.EB.PB.Config.REQPROD_233633_1.RFC_55562.ComMChannelPerPnc):
        - Verify state for channel 0 and channel 1;
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00872</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00885</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>648</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>649</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>650</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Format.C</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00880</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.REQPROD_233633_1.RFC_55562.ComMChannelPerPnc</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>625</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2096</internalId></specobject>
    <specobject>
      <id>TS_COMM_PB_UserPerPnc</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_9/source/application/Tests.c</sourcefile>
      <sourceline>237</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
     Verify state for channel 2 and channel 3 based configuration.
     To test post-build selectable.
  
Test Object: None.
Test Precondition: 
     Important Configuration Details:
     - The channel ComMChannel_2 is associated to PNCs ComMPnc_2
     - The channel ComMChannel_3 is associated to PNCs ComMPnc_3
     - The channel ComMUser_2 is associated to ComMPnc_2 and ComMPnc_3
     - The channel ComMUser_3 is associated to ComMPnc_2 and ComMPnc_3
     Module State:
     - Module is initialized
     - Communication is allowed for all channels
  
Test Execution: 
     VP (ComM.EB.PBSelectable.Master, ComM.EB.PB.Format.C):
         - Check that ComM_PBcfg.h exists and can be included
     VP (ComM.EB.PBSelectable.FileName):
         - Verify that files ComM_V0_PBcfg.h and ComM_V1_PBcfg.h exist
     01: VP (ComM.EB.PBSelectable.TypeName):
         - Verify that types ComM_V0_ConstConfigLayoutType and ComM_V1_ConstConfigLayoutType exist;
     02: Reset stub invocation counters;
     03: Initialize stub callouts;
     04: Inintialize ComM with V0
     05: VP (ComM.SWS_ComM_00885):
         - Allow communication for the required channels;
     06: Request 'Full Communication' for ComMUser_2;
     07: Invoke main function of the channel 2 and channel 3;
     08: VP (ComM.ASR403.SWS_ComM_00872):
         - Verify state for channel 2 and channel 3;
     09: Inintialize ComM with V1;
     10: VP (ComM.SWS_ComM_00885):
         - Allow communication for the required channels;
     11: Request 'Full Communication' for ComMUser_2;
     12: Invoke main function of the channel 2 and channel 3;
     13: VP (ComM.ASR403.SWS_ComM_00872, ComM.ASR403.ECUC_ComM_00876, ComM.EB.PB.Config.REQPROD_233633_1.RFC_55562.ComMUserPerPnc):
         - Verify state for channel 2 and channel 3;
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00872</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00885</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PBSelectable.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>648</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PBSelectable.TypeName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>649</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PBSelectable.Master</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>650</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Format.C</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>620</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00876</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Config.REQPROD_233633_1.RFC_55562.ComMUserPerPnc</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>626</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2097</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_NetworkStartIndication_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>107</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case NetworkStartIndication is called before local
   user request first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   - Channel 0 is set to FULL
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_Nm_NetworkStartIndication
    04: Local User Requests full communication
    05: VP(ComM.EB.LocalUserRequest.NetworkStartIndication)
        - Check that Passive startup is called before Network request
        Note: second network request for Nm handle id 0 is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for Nm handle id 2
  
Test Input: 
    Call network start indication for channel zero
    Call ComM_ASR40_RequestComMode for user 0
  
Test Output: 
    Passive startup is called for Nm handle id 0
    Network request is called twice for Nm handle id 0
    Network request is called for Nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LocalUserRequest.NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2098</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_NetworkStartIndication_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>211</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case NetworkStartIndication is called before DCM active diagnostic
   first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   - Channel 0 is set to FULL
   - Dcm usage is enabled
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_Nm_NetworkStartIndication
    04: Dcm requests active diagnostic
    05: VP(ComM.EB.DcmRequest.NetworkStartIndication)
        - Check that Passive startup is called before Network request
  
Test Input: 
    Call network start indication for channel 0
    Call Dcm active diagnostic for channel 0
  
Test Output: 
    Passive startup is called
    Network request is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.DcmRequest.NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>687</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2099</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_NetworkStartIndication_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>303</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case NetworkStartIndication is called before local
   user request and before Dcm active diagnostic,
   first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   - Channel 0 is set to FULL
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_Nm_NetworkStartIndication
    04: Local User Requests full communication
    05: Dcm requests active diagnostic
    06: VP(ComM.EB.LocalUserRequest.NetworkStartIndication,
           ComM.EB.DcmRequest.NetworkStartIndication)
        - Check that Passive startup is called before Network request
        Note: second network request for Nm handle id 0 is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for Nm handle id 2
  
Test Input: 
    Call network start indication for channel 0
    Call ComM_ASR40_RequestComMode for user 0
    Call active diagnostic
  
Test Output: 
    Passive startup is called for Nm handle id 0
    Network request is called twice for Nm handle id 0
    Network request is called for Nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.DcmRequest.NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>687</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.LocalUserRequest.NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2100</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_NetworkStartIndication_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>416</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request is requested before NetworkStartIndication
   network request is called (passive startup is not called).
  
Test Object: 
  
Test Precondition: 
   - Channel 0 is set to FULL
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Call ComM_Nm_NetworkStartIndication
    05: VP(ComM.EB.LocalUserRequest.NetworkStartIndication)
        - Check Network request is called (Passive Startup is not called)
          Note: second network request for Nm handle id 0 is called due to the fact that
          user is linked to pnc which is linked to the current channel
          and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for Nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 0
    Call network start indication for channel 0
  
Test Output: 
    Network request is called twice for Nm handle id 0
    Network request is called for Nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LocalUserRequest.NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2101</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_NetworkStartIndication_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>516</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case DCM active diagnostic is requested before NetworkStartIndication
   network request is called (passive startup is not called).
  
Test Object: 
  
Test Precondition: 
   - Channel 0 is set to FULL
   - Dcm is enabled
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Dcm requests active diagnostic
    04: Call ComM_Nm_NetworkStartIndication
    05: VP(ComM.EB.DcmRequest.NetworkStartIndication)
        - Check that Check Network request is called (Passive Startup is not called)
  
Test Input: 
    Call active diagnostic for channel 0
    Call network start indication for channel 0
  
Test Output: 
    Network request is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.DcmRequest.NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>687</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2102</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_NetworkStartIndication_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>604</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request and Dcm active diagnsotic
   is called before NetworkStartIndication,
   network request is called and passive startup is not called at all.
  
Test Object: 
  
Test Precondition: 
   - Channel 0 is set to FULL
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Dcm requests active diagnostic
    05: Call ComM_Nm_NetworkStartIndication
    06: VP(ComM.EB.LocalUserRequest.NetworkStartIndication,
           ComM.EB.DcmRequest.NetworkStartIndication)
        - Check that network request is called
        Note: second network request for Nm handle id 0 is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for Nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 0
    Call active diagnostic for channel 0
    Call Network start indication for channel 0
  
Test Output: 
    Network request is called twice for Nm handle id 0
    Network request is called for Nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.DcmRequest.NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>687</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.LocalUserRequest.NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2103</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_RestartIndication_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>713</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case RestartIndication is called before local
   user request first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   - Channel 0 is set to FULL
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_Nm_RestartIndication
    04: Local User Requests full communication
    05: VP(ComM.EB.LocalUserRequest.RestartIndication)
        - Check that Passive startup is called before Network request
        Note: second network request for Nm handle id 0 is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for Nm handle id 2
  
Test Input: 
    Call network restart indication for channel 0
    Call ComM_ASR40_RequestComMode for user 0
  
Test Output: 
    Passive startup is called for Nm handle id 0
    Network request is called twice for Nm handle id 0
    Network request is called for Nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LocalUserRequest.RestartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2104</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_RestartIndication_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>817</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case RestartIndication is called before DCM active diagnostic
   first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   - Channel 0 is set to FULL
   - Dcm usage is enabled
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_Nm_RestartIndication
    04: Dcm requests active diagnostic
    05: VP(ComM.EB.DcmRequest.RestartIndication)
        - Check that Passive startup is called before Network request
  
Test Input: 
    Call network restart indication for channel 0
    Call active diagnostic for channel 0
  
Test Output: 
    Passive startup is called
    Network request is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.DcmRequest.RestartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>689</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2105</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_RestartIndication_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>909</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case RestartIndication is called before local
   user request and before Dcm active diagnsotic,
   first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   - Channel 0 is set to FULL
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_Nm_RestartIndication
    04: Local User Requests full communication
    05: Dcm requests active diagnostic
    06: VP(ComM.EB.LocalUserRequest.RestartIndication,
           ComM.EB.DcmRequest.RestartIndication)
        - Check that Passive startup is called before Network request
        Note: second network request for Nm handle id 0 is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for Nm handle id 2
  
Test Input: 
    Call restart indication for channel 0
    Call ComM_ASR40_RequestComMode for user 0
  
Test Output: 
    Passive startup is called for Nm handle id 0
    Network request is called twice for Nm handle id 0
    Network request is called for Nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.DcmRequest.RestartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>689</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.LocalUserRequest.RestartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2106</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_RestartIndication_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>1021</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request is requested before RestartIndication
   network request is called (passive startup is not called).
  
Test Object: 
  
Test Precondition: 
   - Channel 0 is set to FULL
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Call ComM_Nm_RestartIndication
    05: VP(ComM.EB.LocalUserRequest.RestartIndication)
        - Check Network request is called (Passive Startup is not called)
          Note: second network request for Nm handle id 0 is called due to the fact that
          user is linked to pnc which is linked to the current channel
          and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for Nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 0
    Call network restart indication
  
Test Output: 
    Network request is called twice for Nm handle id 0
    Network request is called for Nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LocalUserRequest.RestartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2107</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_RestartIndication_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>1121</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case DCM active diagnostic is requested before RestartIndication
   network request is called (passive startup is not called).
  
Test Object: 
  
Test Precondition: 
   - Channel 0 is set to FULL
   - Dcm is enabled
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Dcm requests active diagnostic
    04: Call ComM_Nm_RestartIndication
    05: VP(ComM.EB.DcmRequest.RestartIndication)
        - Check Network request is called (Passive Startup is not called)
  
Test Input: 
    Call of dcm active diagnsotic for channel 0
    Call restart indication for channel 0
  
Test Output: 
    Network request is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.DcmRequest.RestartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>689</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2108</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_RestartIndication_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>1209</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request and Dcm active diagnsotic
   is called before RestartIndication,
   network request is called and passive startup is not called at all.
  
Test Object: 
  
Test Precondition: 
   - Channel 0 is set to FULL
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Dcm requests active diagnostic
    05: Call ComM_Nm_RestartIndication
    06: VP(ComM.EB.LocalUserRequest.RestartIndication,
           ComM.EB.DcmRequest.RestartIndication)
        - Check that network request is called
        Note: second network request for Nm handle id 0 is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for Nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode
    Call dcm active diagnostic
    Call restart indication
  
Test Output: 
    Network request is called twice for Nm handle id 0
    Network request is called for Nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.DcmRequest.RestartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>689</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.LocalUserRequest.RestartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2109</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>1318</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case EcuM_WakeUpIndication is called before local
   user request first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_WakeUpIndication
    04: Local User Requests full communication
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest)
        - Check that Passive startup is called before Network request
        Note: second network request is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Passive startup is called before Network request for Nm Handle Id 0        
  
Test Input: 
    Call EcuM wakeup indication
    Call ComM_ASR40_RequestComMode for user 0
    Call ComM_ASR40_RequestComMode for user 2
  
Test Output: 
    Passive startup is called for nm handle id 0
    Network request is called twice for nm handle id 0
    Passive startup is called for nm handle id 2
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2110</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>1427</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_WakeUpIndication is called before DCM active diagnostic
   first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_WakeUpIndication
    04: Dcm requests active diagnostic
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest)
        - Check that Passive startup is called before Network request
  
Test Input: 
   Call EcuM wakeup indication for channel 0
   Call dcm active diagnostic for channel 0
   Call dcm active diagnostic for channel 2
  
Test Output: 
   Passive startup is called for nm handle id 0
   Network request is called for nm handle id 0
   Passive startup is called for nm handle id 2
   Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>691</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2111</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>1527</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_WakeUpIndication is called before local
   user request and before Dcm active diagnsotic,
   first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_WakeUpIndication
    04: Local User Requests full communication
    05: Dcm requests active diagnostic
    06: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest,
           ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest)
        - Check that Passive startup is called before Network request
        Note: second network request is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Passive startup is called before Network request for Nm Handle Id 0       
  
Test Input: 
    Call EcuM wakeup indication
    Call ComM_ASR40_RequestComMode for user 0
    Call ComM_ASR40_RequestComMode for user 2
    Call active diagnostic for channel 0
    Call active diagnostic for channel 2
  
Test Output: 
    Passive startup is called for nm handle id 0
    Network request is called twice for nm handle id 0
    Passive Startup is called for nm handle id 2
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>691</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2112</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>1647</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request is requested before ComM_EcuM_WakeUpIndication
   network request is called (passive startup is not called).
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Call ComM_EcuM_WakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest)
        - Check Network request is called (Passive Startup is not called)
          Note: second network request is called due to the fact that
          user is linked to pnc which is linked to the current channel
          and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 0
    Call ComM_ASR40_RequestComMode for user 2
    Call Ecum wakeup indication for channel 0
  
Test Output: 
    Network request is called twice for nm handle id 0
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2113</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>1749</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case DCM active diagnostic is requested before ComM_EcuM_WakeUpIndication
   network request is called (passive startup is not called).
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to true
   - Dcm is enabled
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Dcm requests active diagnostic
    04: Call ComM_EcuM_WakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest)
        - Check Network request is called (Passive Startup is not called)
        - Network request is called for nm handle id 2
  
Test Input: 
    Call activate diagnostic for channel 0
    Call activate diagnostic for channel 2
    Call Ecum wakeup indication for channel 0
  
Test Output: 
    Network request is called for nm handle id 0
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>691</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2114</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>1844</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request and Dcm active diagnsotic
   is called before ComM_EcuM_WakeUpIndication,
   network request is called and passive startup is not called at all.
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Dcm requests active diagnostic
    05: Call ComM_EcuM_WakeUpIndication
    06: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest,
           ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest)
        - Check that network request is called
        Note: second network request is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 0
    Call ComM_ASR40_RequestComMode for user 2
    Call activate diagnostic for channel 0
    Call activate diagnostic for channel 2
    Call Ecum wakeup indication for channel 0
  
Test Output: 
    Network request is called twice for nm handle id 0
    Ntework request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>691</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2115</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>1958</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case EcuM_PNCWakeUpIndication is called before local
   user request first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_PNCWakeUpIndication
    04: Local User Requests full communication
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest)
        - Check that Passive startup is called before Network request
        Note: second network request is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Passive startup is called before Network request for Nm Handle Id 2
  
Test Input: 
    Call Ecum pnc wakeup indication for pnc 8
    Call ComM_ASR40_RequestComMode for user 0
    Call ComM_ASR40_RequestComMode for user 2
  
Test Output: 
    Passive startup is called for nm hnadle id 0
    Network request is called twice for nm handle id 0
    Passive startup is called for nm handle id 2
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>696</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2116</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>2067</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_PNCWakeUpIndication is called before DCM active diagnostic
   first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_PNCWakeUpIndication
    04: Dcm requests active diagnostic
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest)
        - Check that Passive startup is called before Network request for Nm Handle Id 0        
        - Check that Passive startup is called before Network request for Nm Handle Id 2
  
Test Input: 
    Call Ecum wakeup indication for pnc 8
    Call dcm active diagnostic for channel 0
    Call dcm active diagnostic for channel 2
  
Test Output: 
    Passive startup is called for nm handle id 0
    Network request is called for nm handle id 0
    Passive startup is called for nm handle id 2
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>697</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2117</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>2168</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_PNCWakeUpIndication is called before local
   user request and before Dcm active diagnsotic,
   first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_PNCWakeUpIndication
    04: Local User Requests full communication
    05: Dcm requests active diagnostic
    06: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest,
           ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest)
        - Check that Passive startup is called before Network request for Nm Handle Id 0
        Note: second network request is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Passive startup is called before Network request for Nm Handle Id 2
  
Test Input: 
    Call Ecum pnc wakeup indication for pnc 8
    Call ComM_ASR40_RequestComMode for user 0
    Call ComM_ASR40_RequestComMode for user 2
    Call active diagnostic for channel 0
    Call active diagnostic for channel 2
  
Test Output: 
    Passive startup is called for nm handle id 0
    Network request is called twice for nm handle id 0
    Passive startup is called for nm handle id 2
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>697</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>696</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2118</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>2288</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request is requested before ComM_EcuM_PNCWakeUpIndication
   network request is called (passive startup is not called).
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Call ComM_EcuM_PNCWakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest)
        - Check Network request is called (Passive Startup is not called)
          Note: second network request is called due to the fact that
          user is linked to pnc which is linked to the current channel
          and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 0
    Call ComM_ASR40_RequestComMode for user 2
    Call Ecum pn wakeup indication for pnc 8
  
Test Output: 
    Network request is called twice for nm handle id 0
    Network request is called twice for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>696</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2119</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>2390</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case DCM active diagnostic is requested before ComM_EcuM_PNCWakeUpIndication
   network request is called (passive startup is not called).
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to true
   - Dcm is enabled
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Dcm requests active diagnostic
    04: Call ComM_EcuM_PNCWakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest)
        - Check that Network request is called for (Passive Startup is not called)
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call activate diagnostic for channel 0
    Call activate diagnostic for channel 2
    Call Ecum pnc wakeup indication for pnc 8
  
Test Output: 
    Network request is called for nm handle id 0
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>697</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2120</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>2485</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request and Dcm active diagnsotic
   is called before ComM_EcuM_PNCWakeUpIndication,
   network request is called and passive startup is not called at all.
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Dcm requests active diagnostic
    05: Call ComM_EcuM_PNCWakeUpIndication
    06: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest,
           ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest)
        - Check that network request is called for nm handle id 0
        Note: second network request is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that network request is called for nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 0
    Call ComM_ASR40_RequestComMode for user 2
    Call Ecum pnc wakeup indication for pnc 8
  
Test Output: 
    Network requested is called twice for nm handle id 0
    Network requested is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>697</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>696</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2121</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_ERA_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_1_Dcm_On_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>2596</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case channel is requested via ERA (Gateway) functionailty
   and EB_NM_STACK is set true, Nm_NetworkGwEraRequest shall be called.
  
Test Object: 
  
Test Precondition: 
    EB_NM_STACK is set to STD_ON
    ComMPncNmRequest is set to true
  
Test Execution: 
   01: Test init
   02: Allow communication for all channels
   03: Simulate Era
   04: VP(ComM.EB.ComMPncGatewayEnabled.EB_NM_STACK.Enabled)
       - Check that Nm_NetworkGwEraRequest is called
       - Check that Nm_NetworkRequest is called
         Note: second network request is called due to the fact that
         user is linked to pnc which is linked to the current channel
         and parameter ComMPncNmRequest is set to true for current channel
  
Test Input: 
   Simulate ERA
  
Test Output: 
    NetworkGwEraRequest is called
    NetworkRequest is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMPncGatewayEnabled.EB_NM_STACK.Enabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2122</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_NetworkStartIndication_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_2_Dcm_Off_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>105</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case NetworkStartIndication is called before local
   user request first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   - Channel 0 is set to FULL
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_Nm_NetworkStartIndication
    04: Local User Requests full communication
    05: VP(ComM.EB.LocalUserRequest.NetworkStartIndication)
        - Check that Passive startup is called before Network request
        Note: second network request for Nm handle id 0 is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called nm handle id 2
  
Test Input: 
    Call Network start indication
    Call ComM_ASR40_RequestComMode for user 0
  
Test Output: 
    Passive startup is called for Nm handle Id 0
    Network request is called twice for nm handle id 0
    Network request is called nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LocalUserRequest.NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2123</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_NetworkStartIndication_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_2_Dcm_Off_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>209</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request is requested before NetworkStartIndication
   network request is called (passive startup is not called).
  
Test Object: 
  
Test Precondition: 
   - Channel 0 is set to FULL
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Call ComM_Nm_NetworkStartIndication
    05: VP(ComM.EB.LocalUserRequest.NetworkStartIndication)
        - Check Network request is called (Passive Startup is not called)
          Note: second network request for Nm handle id 0 is called due to the fact that
          user is linked to pnc which is linked to the current channel
          and parameter ComMPncNmRequest is set to true for current channel   
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 0
    Network start indication is called
  
Test Output: 
    Network request is called twice for Nm handle id 0
    Network request is called for Nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LocalUserRequest.NetworkStartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>686</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2124</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_RestartIndication_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_2_Dcm_Off_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>309</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case RestartIndication is called before local
   user request first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   - Channel 0 is set to FULL
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_Nm_RestartIndication
    04: Local User Requests full communication
    05: VP(ComM.EB.LocalUserRequest.RestartIndication)
        - Check that Passive startup is called before Network request
        Note: second network request for Nm handle id 0 is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call restart indication for channel 0
    Call ComM_ASR40_RequestComMode for user 0
  
Test Output: 
    Passive startup is called for Nm handle id 0
    Network request is called twice for Nm handle id 0
    Network request is called for Nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LocalUserRequest.RestartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2125</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_RestartIndication_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_2_Dcm_Off_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>413</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request is requested before RestartIndication
   network request is called (passive startup is not called).
  
Test Object: 
  
Test Precondition: 
   - Channel 0 is set to FULL
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Call ComM_Nm_RestartIndication
    05: VP(ComM.EB.LocalUserRequest.RestartIndication)
        - Check Network request is called (Passive Startup is not called)
          Note: second network request for Nm handle id 0 is called due to the fact that
          user is linked to pnc which is linked to the current channel
          and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 0
    Call restart indication for channel 0
  
Test Output: 
    Network request is called twice for Nm handle id 0
    Network request is called for Nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.LocalUserRequest.RestartIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>688</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2126</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_2_Dcm_Off_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>513</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_WakeUpIndication is called before local
   user request first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   - SynchronousWakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_WakeUpIndication
    04: Local User Requests full communication
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest)
        - Check that Passive startup is called before Network request
        Note: second network request is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Passive startup is called before Network request for Nm Handle Id 2
  
Test Input: 
    Call Ecum wkaeup indication for channel 0
    Call ComM_ASR40_RequestComMode for user 0
    Call ComM_ASR40_RequestComMode for user 2
  
Test Output: 
    Call passive startup for nm handle id 0
    Call network request twice for nm handle id 0
    Call passive startup for nm handle id 2
    CAll network request for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2127</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_True_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_2_Dcm_Off_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>622</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request is requested before ComM_EcuM_WakeUpIndication
   network request is called (passive startup is not called).
  
Test Object: 
  
Test Precondition: 
   - SynchronousWakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Call ComM_EcuM_WakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest)
        - Check Network request is called (Passive Startup is not called)
          Note: second network request is called due to the fact that
          user is linked to pnc which is linked to the current channel
          and parameter ComMPncNmRequest is set to true for current channel   
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 0
    Call ComM_ASR40_RequestComMode for user 2
    Call Ecum wakeup indication for channel 0
  
Test Output: 
    Network request is called twice for nm handle id 0
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>690</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2128</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_2_Dcm_Off_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>724</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_PNCWakeUpIndication is called before local
   user request first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   - SynchronousWakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_PNCWakeUpIndication
    04: Local User Requests full communication
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest)
        - Check that Passive startup is called before Network request
        Note: second network request is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Passive startup is called before Network request for Nm Handle Id 2
  
Test Input: 
    Call Ecum Pnc wakeup indication for pnc 8
    Call ComM_ASR40_RequestComMode for user 0
    Call ComM_ASR40_RequestComMode for user 2    
  
Test Output: 
    Passive startup is called for nm handle id 0
    Network request is called for nm handle id 0
    Network request is called for nm handle id 0
    Passive startup is called for nm handle id 2
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>696</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2129</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_True_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_2_Dcm_Off_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>834</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request is requested before ComM_EcuM_PNCWakeUpIndication
   network request is called (passive startup is not called).
  
Test Object: 
  
Test Precondition: 
   - SynchronousWakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Call ComM_EcuM_PNCWakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest)
        - Check Network request is called (Passive Startup is not called)
          Note: second network request is called due to the fact that
          user is linked to pnc which is linked to the current channel
          and parameter ComMPncNmRequest is set to true for current channel   
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 0
    Call ComM_ASR40_RequestComMode for user 2
    Call Ecum pnc wakeup indication for pnc 8
  
Test Output: 
    Call network request twice for nm handle id 0
    Call network request for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.True.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>696</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2130</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_ERA_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_2_Dcm_Off_VlanOn_SynchOn/source/application/Tests.c</sourcefile>
      <sourceline>936</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case channel is requested via ERA (Gateway) functionailty
   and EB_NM_STACK is set true, Nm_NetworkGwEraRequest shall be called.
  
Test Object: 
  
Test Precondition: 
    EB_NM_STACK is set to STD_ON
    ComMPncNmRequest is set to true
  
Test Execution: 
   01: Test init
   02: Allow communication for all channels
   03: Simulate Era
   04: VP(ComM.EB.ComMPncGatewayEnabled.EB_NM_STACK.Enabled)
       - Check that Nm_NetworkGwEraRequest is called
       - Check that Nm_NetworkRequest is called
  
Test Input: 
   Simulate ERA
  
Test Output: 
    NetworkGwEraRequest is called
    NetworkRequest is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMPncGatewayEnabled.EB_NM_STACK.Enabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>685</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2131</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case EcuM_WakeUpIndication is called before local
   user request first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_WakeUpIndication
    04: Local User Requests full communication
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest)
        - Check that Passive startup is called before Network request
        Note: second network request for Nm handle id 0 is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call Ecum wakeup indication for channel 0
    Call ComM_ASR40_RequestComMode for user 0
  
Test Output: 
    Passive startup is called for Nm handle id 0
    Network request is called twice for Nm handle id 0
    Network request is called for Nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2132</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>205</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_WakeUpIndication is called before DCM active diagnostic
   first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_WakeUpIndication
    04: Dcm requests active diagnostic
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest)
        - Check that Passive startup is called before Network request
  
Test Input: 
    Call Ecum wakeup indication for channel 0
    Call dcm active diagnostic for channel 0
  
Test Output: 
    Passive startup is called for nm handle id 0
    Network request is called for nm handle id 0
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2133</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>296</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_WakeUpIndication is called before local
   user request and before Dcm active diagnsotic,
   first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_WakeUpIndication
    04: Local User Requests full communication
    05: Dcm requests active diagnostic
    06: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest,
           ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest)
        - Check that Passive startup is called before Network request
        Note: second network request for Nm handle id 0 is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call Ecum wakeup indication for channel 0
    Call ComM_ASR40_RequestComMode for user 0
  
Test Output: 
    Passive startup is called for Nm handle id 0
    Network request is called twice for Nm handle id 0
    Network request is called for Nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2134</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>408</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request is requested before ComM_EcuM_WakeUpIndication
   network request is called (passive startup is not called).
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Call ComM_EcuM_WakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest)
        - Check Network request is called (Passive Startup is not called)
         Note: second network request for Nm handle id 0 is called due to the fact that
         user is linked to pnc which is linked to the current channel
         - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 0
    Call Ecum wakeup indication for channel 0
  
Test Output: 
    Network request is called twice for nm handle id 0
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2135</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>506</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case DCM active diagnostic is requested before ComM_EcuM_WakeUpIndication
   network request is called (passive startup is not called).
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
   - Dcm is enabled
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Dcm requests active diagnostic
    04: Call ComM_EcuM_WakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest)
        - Check Network request is called (Passive Startup is not called)
  
Test Input: 
    Call Dcm active diagnsotic for channel 0
    Call Ecum wakeup indication for channel 0
  
Test Output: 
    Network request is called for nm handle id 0
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2136</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>594</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request and Dcm active diagnsotic
   is called before ComM_EcuM_WakeUpIndication,
   network request is called and passive startup is not called at all.
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Dcm requests active diagnostic
    05: Call ComM_EcuM_WakeUpIndication
    06: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest,
           ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest)
        - Check that network request is called
        Note: second network request for Nm handle id 0 is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 0
    Call Active diagnostic for channel 0
    Call Ecum wakeup indication for channel 0
  
Test Output: 
    Network request is called twice for Nm handle id 0
    Network request is called for Nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>693</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2137</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>703</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case EcuM_WakeUpIndication is called before local
   user request first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
   VLAN is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_WakeUpIndication
    04: Local User Requests full communication
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel)
        - Check that Passive startup is called before Network request
  
Test Input: 
    Call ecum wkaeup indication for channel 1
    Call ComM_ASR40_RequestComMode for user 2
  
Test Output: 
    Passive startup is called for nm handle id 2
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2138</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>795</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_WakeUpIndication is called before DCM active diagnostic
   first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
   VLAN is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_WakeUpIndication
    04: Dcm requests active diagnostic
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel)
        - Check that Passive startup is called before Network request
  
Test Input: 
    Call Ecum wakeup indication for channel 1
    Call Dcm active wakeup for channel 2
  
Test Output: 
    Passive startup is called for nm handle id 2
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2139</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>887</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_WakeUpIndication is called before local
   user request and before Dcm active diagnsotic,
   first passive startup is called and then network request is called for current
   channels managing channel
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
   VLAN is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_WakeUpIndication
    04: Local User Requests full communication
    05: Dcm requests active diagnostic
    06: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel,
           ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel)
        - Check that Passive startup is called before Network request
  
Test Input: 
    Call Ecum wakeup indication for channel 1
    Call ComM_ASR40_RequestComMode for user 2
    Call Dcm active diagnostic for channel 2
  
Test Output: 
    Passive startup is called for nm handle id 2
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2140</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>989</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request is requested before ComM_EcuM_WakeUpIndication
   network request is called (passive startup is not called).
   for current channels managing channel
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
   VLAN is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Call ComM_EcuM_WakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel)
        - Check Network request is called (Passive Startup is not called)
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 2
    Call Ecum wakeup indication for channel 1
  
Test Output: 
    Network request is called for Nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2141</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>1078</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case DCM active diagnostic is requested before ComM_EcuM_WakeUpIndication
   network request is called (passive startup is not called)
   for current channels managing channel
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
   VLAN is set to true
   - Dcm is enabled
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Dcm requests active diagnostic
    04: Call ComM_EcuM_WakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel)
        - Check Network request is called (Passive Startup is not called)
  
Test Input: 
    Call Dcm active diagnostic for channel 2
    Call Ecum wakeup indication for channel 1
  
Test Output: 
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2142</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>1168</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request and Dcm active diagnsotic
   is called before ComM_EcuM_WakeUpIndication,
   network request is called and passive startup is not called at all
   for current channels managing channel
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
   VLAN is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Dcm requests active diagnostic
    05: Call ComM_EcuM_WakeUpIndication
    06: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel,
           ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel)
        - Check that network request is called
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 2
    Call Dcm active diagnostic for channel 1
  
Test Output: 
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>695</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2143</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>1265</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case EcuM_PNCWakeUpIndication is called before local
   user request first passive startup is called and then network request is called.
   Test also verifies that in case a managed channel is present in the PNC also it's managing channel is waken up
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_PNCWakeUpIndication
    04: Local User Requests full communication
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest)
        - Check that Passive startup is called before Network request
        Note: second network request for Nm handle id 0 is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that also managing channel is waken up
  
Test Input: 
    Call Ecum Pnc wakeup indication for pnc 8
    Call ComM_ASR40_RequestComMode for user 2
  
Test Output: 
    Passive startup is called for nm handle id 0
    Network request is called twice for nm handle id 2
    Passive startup is called for nm handle id 2
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2144</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>1373</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_PNCWakeUpIndication is called before DCM active diagnostic
   first passive startup is called and then network request is called
   Test also verifies that in case a managed channel is present in the PNC also it's managing channel is waken up
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_PNCWakeUpIndication
    04: Dcm requests active diagnostic
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest)
        - Check that Passive startup is called before Network request
        - Check that also managing channel is waken up
  
Test Input: 
    Call Ecum Pnc wakeup indication for pnc 8
    Call Dcm active diagnostic for channel 0
  
Test Output: 
    Passive startup is called for nm handle id 0
    Network request is called for nm handle id 0
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2145</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>1470</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_PNCWakeUpIndication is called before local
   user request and before Dcm active diagnsotic,
   first passive startup is called and then network request is called
   Test also verifies that in case a managed channel is present in the PNC also it's managing channel is waken up
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_PNCWakeUpIndication
    04: Local User Requests full communication
    05: Dcm requests active diagnostic
    06: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel,
           ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel)
        - Check that Passive startup is called before Network request
        Note: second network request for Nm handle id 0 is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that also managing channel is waken up
        - Check that Passive startup is called before Network request for Nm handle id 2
  
Test Input: 
    Call Ecum Pnc wakeup indication for pnc 8
    Call ComM_ASR40_RequestComMode for user 0
    Call Dcm active diagnostic for channel 0
  
Test Output: 
    Passive startup is called for nm handle id 0
    Network request is called twice for nm handle id 0
    Passive startup is called for nm handle id 2
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2146</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>1589</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request is requested before ComM_EcuM_PNCWakeUpIndication
   network request is called (passive startup is not called).
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Call ComM_EcuM_PNCWakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest)
        - Check Network request is called (Passive Startup is not called)
        - Check that also managing channel is waken up
          without calling passive startup since user zero is linked also to channel with nm handle id 0
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 0
    Call Ecum pnc wakeup indication for pnc 8
  
Test Output: 
    Network request is called twice for Nm handle id 0
    Passive startup is not called for Nm handle id 2 (Network request is called)
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2147</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>1687</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case DCM active diagnostic is requested before ComM_EcuM_PNCWakeUpIndication
   network request is called (passive startup is not called).
   Test also verifies that in case a managed channel is present in the PNC also it's managing channel is waken up
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
   - Dcm is enabled
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Dcm requests active diagnostic
    04: Call ComM_EcuM_PNCWakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest)
        - Check Network request is called (Passive Startup is not called)
        - Check that also managing channel is waken up
  
Test Input: 
    Call active diagnsotic for channel 0
    Call Ecum pnc wakeup indication for pnc 8
  
Test Output: 
    Network request is called for nm handle id 0
    Passive startup is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2148</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>1783</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request and Dcm active diagnsotic
   is called before ComM_EcuM_PNCWakeUpIndication,
   network request is called and passive startup is not called at all.
   Test also verifies that in case a managed channel is present in the PNC also it's managing channel is waken up
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Dcm requests active diagnostic
    05: Call ComM_EcuM_PNCWakeUpIndication
    06: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest,
           ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest)
        - Check that network request is called
        Note: second network request is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that also managing channel is waken up (passive startup is not called
        since user zero is also also linked to channel with Nm handleId 0)
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 0
    Call dcm active diagnostic for channel 0
    Call Ecum pnc wakeup indication for pnc 8
  
Test Output: 
    Network request is called twice for nm handle id 0
    Passive startup is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>699</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2149</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>1896</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case EcuM_PNCWakeUpIndication is called before local
   user request first passive startup is called and then network request is called
   for the configurred managing channel
   (pnc has a managed channel which managing channel is not part of the PNC)
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
   VLAN is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_PNCWakeUpIndication
    04: Local User Requests full communication
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel)
        - Check that Passive startup is called
        - Check that also managing channel is waken up
  
Test Input: 
    Call Ecum pnc wakeup indication for pnc 8
    Call ComM_ASR40_RequestComMode for user 2
  
Test Output: 
    Passive startup is called for nm handle id 0
    Passive startup is called for nm handle id 2
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>700</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2150</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>1995</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_PNCWakeUpIndication is called before DCM active diagnostic
   first passive startup is called and then network request is called
   for the configurred managing channel
   (pnc has a managed channel which managing channel is not part of the PNC)
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
   VLAN is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_PNCWakeUpIndication
    04: Dcm requests active diagnostic
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel)
        - Check that Passive startup is called before Network request
        - Check that also managing channel is waken up
        - Check that Passive startup is called before Network request for Nm handle id 2
  
Test Input: 
    Call Ecum Pnc wakeup indication for pnc 8
    Call Dcm active diagnostic for channel 2
  
Test Output: 
    Passive startup is called for nm handle id 0
    Passive startup is called for nm handle id 2
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>701</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2151</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>2096</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_PNCWakeUpIndication is called before local
   user request and before Dcm active diagnsotic,
   first passive startup is called and then network request is called
   for the configurred managing channel
   (pnc has a managed channel which managing channel is not part of the PNC)
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
   VLAN is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_PNCWakeUpIndication
    04: Local User Requests full communication
    05: Dcm requests active diagnostic
    06: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel,
           ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel)
        - Check that Passive startup is called before Network request
        - Check that also managing channel is waken up
        - Check that Passive startup is called before Network request for Nm handle id 2
  
Test Input: 
    Call Ecum Pnc wakeup indication for pnc 8
    Call ComM_ASR40_RequestComMode for user 2
    Call Dcm active diagnostic for channel 2
  
Test Output: 
    Passive startup is called for nm handle id 0
    Passive startup is called for nm handle id 2
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>701</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>700</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2152</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>2206</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request is requested before ComM_EcuM_PNCWakeUpIndication
   network request is called (passive startup is not called).
   for the configurred managing channel
   (pnc has a managed channel which managing channel is not part of the PNC)
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
   VLAN is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Call ComM_EcuM_PNCWakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel)
        - Check Network request is called (Passive Startup is not called)
        - Check that also managing channel is waken up
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 2
    Call Ecum Pnc wakeup indication for pnc 8
  
Test Output: 
    Passive startup is called for nm handle id 0
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>700</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2153</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>2304</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case DCM active diagnostic is requested before ComM_EcuM_PNCWakeUpIndication
   network request is called (passive startup is not called).
   for the configurred managing channel
   (pnc has a managed channel which managing channel is not part of the PNC)
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
   VLAN is set to true
   - Dcm is enabled
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Dcm requests active diagnostic
    04: Call ComM_EcuM_PNCWakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel)
        - Check Network request is called (Passive Startup is not called)
        - Check that also managing channel is waken up
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call dcm active diagnostic for channel 2
    Call Ecum pnc wakeup indication for pnc 8
  
Test Output: 
    Passive startup is called for nm handle id 0
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>701</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2154</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>2403</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request and Dcm active diagnsotic
   is called before ComM_EcuM_PNCWakeUpIndication,
   network request is called and passive startup is not called at all.
   for the configurred managing channel
   (pnc has a managed channel which managing channel is not part of the PNC)
  
Test Object: 
  
Test Precondition: 
   Synchronus wakeup is set to false
   VLAN is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Dcm requests active diagnostic
    05: Call ComM_EcuM_PNCWakeUpIndication
    06: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel,
           ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel)
        - Check that network request is called
        - Check that also managing channel is waken up
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 2
    Call Active diagnsotic for channel 2
    Call Ecum pnc wakeup indication for pnc 8
  
Test Output: 
    Passive startup is called for nm handle id 0
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.DCMRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>701</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>700</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2155</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_ERA_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_3_Dcm_On_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>2510</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case channel is requested via ERA (Gateway) functionailty
   and EB_NM_STACK is set false, Passive Startup Network Request sequence shall be called.
  
Test Object: 
  
Test Precondition: 
    EB_NM_STACK is set to STD_OFF
    ComMPncNmRequest is set to true
  
Test Execution: 
   01: Test init
   02: Allow communication for all channels
   03: Simulate Era
   04: VP(ComM.EB.ComMPncGatewayEnabled.EB_NM_STACK.Disabled)
       - Check that Nm_PassiveStartUp is called
       - Check that Nm_NetworkRequest is called
       - Check that Nm_NetworkRequest is called
  
Test Input: 
   Simulate ERA
  
Test Output: 
    NetworkGwEraRequest is called
    NetworkRequest is called twice
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMPncGatewayEnabled.EB_NM_STACK.Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2156</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_4_Dcm_Off_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>99</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_WakeUpIndication is called before local
   user request first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   - SynchronousWakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_WakeUpIndication
    04: Local User Requests full communication
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest)
        - Check that Passive startup is called before Network request
        Note: second network request is for Nm handle id 0 called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call Ecum wakeup indication for channel 0
    Call ComM_ASR40_RequestComMode for user 0
  
Test Output: 
    Passive startup is called for nm handle id 0
    Network request is called twice for nm handle id 0
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2157</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_13</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_4_Dcm_Off_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>203</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request is requested before ComM_EcuM_WakeUpIndication
   network request is called (passive startup is not called).
  
Test Object: 
  
Test Precondition: 
   - SynchronousWakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Call ComM_EcuM_WakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest)
        - Check Network request is called (Passive Startup is not called)
        Note: second network request for Nm handle id 0 is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 0
    Call Ecum wkaeup indication for channel 0
  
Test Output: 
    Network request is called twice for Nm handle id 0
    Network request is called for Nm handle id 0
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>692</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2158</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_14</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_4_Dcm_Off_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>303</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_WakeUpIndication is called before local
   user request first passive startup is called and then network request is called
  
Test Object: 
  
Test Precondition: 
   - SynchronousWakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_WakeUpIndication
    04: Local User Requests full communication
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel)
        - Check that Passive startup is called before Network request
  
Test Input: 
    Call Ecum wkaeup indication for channel 1
    Call ComM_ASR40_RequestComMode for user 2
  
Test Output: 
    Passive startup is called for nm handle id 2
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2159</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_WakeUpIndication_ComMSynchronousWakeUp_False_15</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_4_Dcm_Off_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>394</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request is requested before ComM_EcuM_WakeUpIndication
   network request is called (passive startup is not called).
  
Test Object: 
  
Test Precondition: 
   - SynchronousWakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Call ComM_EcuM_WakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel)
        - Check Network request is called (Passive Startup is not called)
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 2
    Call Ecum wakeup indication for channel 1    
  
Test Output: 
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>694</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2160</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_4_Dcm_Off_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>481</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_PNCWakeUpIndication is called before local
   user request first passive startup is called and then network request is called
   for the configurred managing channel 
   (pnc has a managed channel which managing channel is not part of the PNC)
  
Test Object: 
  
Test Precondition: 
   - SynchronousWakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_PNCWakeUpIndication
    04: Local User Requests full communication
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest)
        - Check that Passive startup is called before Network request
        Note: second network request for Nm handle id 0 is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Passive startup is called before Network request for Nm handle id 2
  
Test Input: 
    Call Ecum pnc wakeup indication
    Call ComM_ASR40_RequestComMode for user 0
  
Test Output: 
    Passive startup is called for nm handle id 0
    Network request is called twice for nm handle id 0
    Passive startup is called for nm handle id 2
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2161</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_13</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_4_Dcm_Off_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>590</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request is requested before ComM_EcuM_PNCWakeUpIndication
   network request is called (passive startup is not called)
   for the configurred managing channel 
   (pnc has a managed channel which managing channel is not part of the PNC)
  
Test Object: 
  
Test Precondition: 
   - SynchronousWakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Call ComM_EcuM_PNCWakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest)
        - Check Network request is called (Passive Startup is not called)
        Note: second network request for Nm handle id 0 is called due to the fact that
        user is linked to pnc which is linked to the current channel
        and parameter ComMPncNmRequest is set to true for current channel
        - Check that Network request is called for nm handle id 2
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 0
    Call Ecum pnc wakeup indication for pnc 8    
  
Test Output: 
    Network request is called twice for nm handle 0
    Network  request is called for nm handle 1
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>698</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2162</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_14</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_4_Dcm_Off_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>692</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case ComM_EcuM_PNCWakeUpIndication is called before local
   user request first passive startup is called and then network request is called
   for the configurred managing channel 
   (pnc has a managed channel which managing channel is not part of the PNC)   
  
Test Object: 
  
Test Precondition: 
   - SynchronousWakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_PNCWakeUpIndication
    04: Local User Requests full communication
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel)
        - Check that Passive startup is called before Network request for Nm handle id 0
        - Check that Passive startup is called before Network request for Nm handle id 2
  
Test Input: 
    Call Ecum pnc wakeup indication
    Call ComM_ASR40_RequestComMode for user 0    
  
Test Output: 
    Passive startup is called for nm handle id 0
    Passive startup is called for nm handle id 2
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>700</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2163</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_EcuM_PNCWakeUpIndication_ComMSynchronousWakeUp_False_15</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_4_Dcm_Off_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>790</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case local user request is requested before ComM_EcuM_PNCWakeUpIndication
   network request is called (passive startup is not called).
   for the configurred managing channel 
   (pnc has a managed channel which managing channel is not part of the PNC)   
  
Test Object: 
  
Test Precondition: 
   - SynchronousWakeup is set to true
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Local User Requests full communication
    04: Call ComM_EcuM_PNCWakeUpIndication
    05: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel)
        - Check Network request is called (Passive Startup is not called)
  
Test Input: 
    Call ComM_ASR40_RequestComMode for user 2
    Call Ecum wakeup indication for pnc 8    
  
Test Output: 
    Passive startup is called for nm handle id 0
    Network request is called for nm handle id 2
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication.ComMSynchronousWakeUp.False.LocalUserRequest.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>700</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2164</internalId></specobject>
    <specobject>
      <id>TS_COMM_ActiveWakeupTest_ERA_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_4_Dcm_Off_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>883</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case channel is requested via ERA (Gateway) functionailty
   and EB_NM_STACK is set false, Passive Startup Network Request sequence shall be called.
  
Test Object: 
  
Test Precondition: 
    EB_NM_STACK is set to STD_OFF
    ComMPncNmRequest is set to true
  
Test Execution: 
   01: Test init
   02: Allow communication for all channels
   03: Simulate Era
   04: VP(ComM.EB.ComMPncGatewayEnabled.EB_NM_STACK.Disabled)
       - Check that Nm_PassiveStartUp is called
       - Check that Nm_NetworkRequest is called
       - Check that Nm_NetworkRequest is called
  
Test Input: 
   Simulate ERA
  
Test Output: 
    NetworkGwEraRequest is called
    NetworkRequest is called twice
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComMPncGatewayEnabled.EB_NM_STACK.Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2165</internalId></specobject>
    <specobject>
      <id>TS_COMM_PassiveFollowedByActiveRequest_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_4_Dcm_Off_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>983</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case channel is waken up passively
   it goes to COMM_FULL_COM_READY_SLEEP state and ComM_Nm_PrepareBusSleepMode is indicated
   channel state machine goes to COMM_SILENT_COM and after user request full communication
   for channel channel goes to COMM_FULL_COM_NETWORK_REQUESTED.
   Check that in the case described Nm_PassiveStartUp and Nm_NetworkGwEraRequest are not called
   while Nm_NetworkRequest is called.
  
Test Object: 
  
Test Precondition: 
    ComMChannel_CAN3_ACTIVE is linked to Test_ComMUser_2
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_WakeUpIndication
    04: Check current state is COMM_FULL_COM_READY_SLEEP
    05: Simluate PrepareBusSleepMode
    06: Check current state is Silent Communication
    07: Request channel actively
    08: Check COMM_FULL_COM_NETWORK_REQUESTED is reached
    09: VP(ComM.SWS_ComM_00869)
        - Check that NetworkRequest is called, PassiveStartup and NetworkGwEraRequest is not called
  
Test Input: 
   - call ComM_EcuM_WakeUpIndication
   - simulate ComM_Nm_PrepareBusSleepMode
   - request channel actively
  
Test Output: 
   - Nm_NetworkRequest is called 
   - Nm_PassiveStartup is not called 
   - Nm_NetworkGwEraRequest is not called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00869</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2166</internalId></specobject>
    <specobject>
      <id>TS_COMM_PassiveFollowedByActiveRequest_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ActiveWakeupBit_4_Dcm_Off_VlanOn_SynchOff/source/application/Tests.c</sourcefile>
      <sourceline>1093</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case channel is waken up passively
   it goes to COMM_FULL_COM_READY_SLEEP state and ComM_Nm_BusSleepMode is indicated
   channel state machine goes to COMM_NO_COM_NO_PENDING_REQUEST and after user request full communication
   for channel channel goes to COMM_FULL_COM_NETWORK_REQUESTED.
   Check that in the case described Nm_PassiveStartUp and Nm_NetworkGwEraRequest are not called
   while Nm_NetworkRequest is called.
  
Test Object: 
  
Test Precondition: 
    ComMChannel_CAN3_ACTIVE is linked to Test_ComMUser_2
  
Test Execution: 
    01: Test init
    02: Allow communication for all channels
    03: Call ComM_EcuM_WakeUpIndication
    04: Check current state is COMM_FULL_COM_READY_SLEEP
    05: Simluate PrepareBusSleepMode
    06: Check current state is Silent Communication
    07: Request channel actively
    08: Check COMM_FULL_COM_NETWORK_REQUESTED is reached
    09: VP(ComM.SWS_ComM_00869)
        - Check that NetworkRequest is called, PassiveStartup and NetworkGwEraRequest is not called
  
Test Input: 
   - call ComM_EcuM_WakeUpIndication
   - simulate ComM_Nm_BusSleepMode
   - request channel actively
  
Test Output: 
   - Nm_NetworkRequest is called 
   - Nm_PassiveStartup is not called 
   - Nm_NetworkGwEraRequest is not called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00869</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2167</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_WkUpInd_BitVector_PrepSlpTmr_32bit</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ChFuncWhenPNCsConfig/source/application/PncTests.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    To test PNC state change(s) for the following scenario:
    PncNoCom -&gt; PncPrepareSleep -&gt; PncRequested -&gt; PncReadySleep -&gt;
    PncPrepareSleep -&gt; PncNoCom.
    This test case also verifies the behaviour when a PASSIVE channel
    is mapped to a PNC and NO user is mapped to this PNC.
  
Test Object: PNC state behaviour
Test Precondition: 
    Module state:
      - Module is intialized
      - CommunicationAllowed is set to TRUE for all the concerned channels
    Important test configuration details:
      - ComMPnc_3 is configured with PASSIVE channel whose PNC ID is 11.
      - Synchronous wakeup should be ON.
  
Test Execution: 
    01: Prepare test case preconditons
    02: Simulate EcuM wake up indication for all the channels
    03: Invoke main function of all the channels
    04: VP (ComM.SWS_ComM_00931, ComM.SWS_ComM_00912, ComM.SWS_ComM_00995, ComM.ASR403.SWS_ComM_00913, ComM.ECUC_ComM_00695):
        - All PNCs have entered PNC_PREPARE_SLEEP state
    05: a) Simulate EIRA
        b) Request 'Full communication' for all the users of all PNCs.
    06: Call main function of all the channels
    07: VP (ComM.SWS_ComM_00948, ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_PREPARE_SLEEP_0):
        - All PNCs except "ComMPnc_3" which doesn't have any users
          associated to it have entered PNC_REQUESTED.
          Note that "ComMPnc_3" stays in state "PNC_PREPARE_SLEEP"
    08: Request No communication for all the users of all PNCs
    09: Call main functions of all the channel
    10: VP (ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE, ComM.SWS_ComM_00960, ComM.SWS_ComM_00916, ComM.EB.Dsn.StateDynamics.NO_COM_REQ_BY_ALL_COMM_USER_PNC_REQUESTED_1):
          - All PNCs except the PNC which doesn't have any user has entered
            into PNC_READY_SLEEP state
          - Com_SendSignal is called with value 0.
    11: VP (ComM.SWS_ComM_00986):
        - Set EIRA bits to 1 for all PNCs and simulate an indication to ComM
        via ComCbk.
    12: Call main function of all the channels
    13: VP (ComM.SWS_ComM_00984, ComM.SWS_ComM_00950, ComM.ECUC_ComM_00839):
        - Com_ReceiveSignal is called
        - PNC "ComMPnc_3" which stays in state "PNC_PREPARE_SLEEP" state has
          entered "PNC_READY_SLEEP" state
    14: VP (ComM.SWS_ComM_00986):
        - Set EIRA bits to 0 for all PNCs and simulate an indication to ComM
        via ComCbk.
    15: Call main function of all the channels
    16: VP (ComM.SWS_ComM_00984, ComM.SWS_ComM_00940):
        - Com_ReceiveSignal is called
        - All the PNCs have entered PNC_PREPARE_SLEEP state
    17: Invoke main functions of all the channels in a loop such that
        PncPrepareSleep timer doesn't expire
    18: VP (ComM.ASR403.SWS_ComM_00943):
         - The PNCs are still in PNC_PREPARE_SLEEP state.
    19: Invoke main function of all the channels exactly once so that
        PncPrepareSleep timer expires
    20: VP (ComM.SWS_ComM_00952, ComM.SWS_ComM_00947):
        - All PNCs have entered PNC_NO_COMMUNICATION state
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00931</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00948</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_PREPARE_SLEEP_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1777</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00912</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00995</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00913</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00943</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00947</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00952</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00982</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00984</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00960</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NO_COM_REQ_BY_ALL_COMM_USER_PNC_REQUESTED_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1770</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00916</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00986</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00950</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00695</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00841</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00839</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2168</internalId></specobject>
    <specobject>
      <id>TS_COMM_PrepSlpToRdySlp_32bit</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ChFuncWhenPNCsConfig/source/application/PncTests.c</sourcefile>
      <sourceline>323</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test PNC state change(s) for the following scenario:
    PncNoCom -&gt; PncPrepareSleep -&gt; PncReadySleep -&gt; PncPrepareSleep.
  
Test Object: None.
Test Precondition: 
    Synchronous wakeup should be ON.
  
Test Execution: 
    01: Simulate reset of stubs, initialization of ComM &amp; stubs
    02: Indicate CommunicationAllowed is TRUE for all the channels.
    03: Simulate ComM_EcuM_WakeUpIndication() for all the channels.
    04: Invoke main function of all the channels
    05: VP (ComM.SWS_ComM_00931):
        - All PNCs have transitted to PNC_PREPARE_SLEEP state as
        verify the call to BswM.
    06: Simulate EIRA bit is set for all PNCs.
    07: Indicate 'change in EIRA' by calling ComM Com call back.
    08: Call main function of all the channels.
    09: VP (ComM.SWS_ComM_00950, ComM.EB.Dsn.StateDynamics.COMCBK_PNC_PREPARE_SLEEP):
        - All PNCs has transited to PNC_READY_SLEEP.
    10: Simulate EIRA bit is reset for all PNCs.
    11: Indicate 'change in EIRA' by calling ComM Com call back.
    12. Call main function of all the channels.
    13. VP (ComM.SWS_ComM_00984 &amp; ComM.SWS_ComM_00940):
        - Com_ReceiveSignal is called.
        - All PNCs has transited to PNC_PREPARE_SLEEP state.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00940</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00950</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.COMCBK_PNC_PREPARE_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1774</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00931</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00984</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2169</internalId></specobject>
    <specobject>
      <id>TS_COMM_PncBeforeChRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ChFuncWhenPNCsConfig/source/application/PncTests.c</sourcefile>
      <sourceline>463</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test case tests, that ComM user requests of ComM users mapped to one or
    more PNCs are handled within the ComM main function before ComM user
    requests of ComM users mapped to one or more channels.
    Therefore, FULL_COMMUNICATION is requested for a user directly mapped to a
    Channel and then for a user indirectly mapped to this channel, via PNC.
    To verify, that the PNC related actions are handled first, it is checked,
    if BswM_ComM_CurrentPNCNode (called by the PNC state machine) is
    called before CanSm_GetCurrentComMode() (called by the channel state machine).
  
Test Object: None.
Test Precondition: 
    - ComM user ComMUser_5 is directly mapped to ComM channel ComMChannel_4.
    - PNC Pnc_4 has ComM channel ComMChannel_4 and is mapped to ComM user
      ComMUser_4.
  
Test Execution: 
    01: Simulate reset of stubs, initialization of ComM &amp; stubs
    02: Indicate CommunicationAllowed is TRUE for all the channels.
    03: Simulate User request for user ComMUser_5.
    04: Simulate User request for user ComMUser_4.
    05: Invoke main function of channel ComMChannel_4
    06: VP (ComM987, ComM.SWS_ComM_00979):
        BswM_ComM_CurrentPNCNode() is called before CanSm_GetCurrentComMode().
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00987.HandleOrder</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00979</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2170</internalId></specobject>
    <specobject>
      <id>TS_COMM_EIRABeforeChRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ChFuncWhenPNCsConfig/source/application/PncTests.c</sourcefile>
      <sourceline>553</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that ComM user requests of ComM users mapped to one or more
    channels are handled within the ComM main function after EIRA.
    Therefore, request a channel directly mapped to a user and then
    "request" a PNC via EIRA.
    To verify that the EIRA is handled first, it is checked,
    if BswM_ComM_CurrentPNCNode() (called by the PNC state machine,
    triggered by the EIRA) is called before CanSm_GetCurrentComMode()
    (called by the Channel state machine, triggered by the user request).
  
Test Object: None.
Test Precondition: 
    - ComM user ComMUser_5 is directly mapped to ComM channel ComMChannel_4.
    - PNC Pnc_4 (PNC ID 20) has ComM channel ComMChannel_4 and is mapped to
      Com Rx Signal ComSignal_0.
  
Test Execution: 
    01: Simulate reset of stubs, initialization of ComM &amp; stubs
    02: Indicate CommunicationAllowed is TRUE for ComMChannel_4.
    03: Simulate a request for COMM_FULL_COMMUNICATION from user ComMUser_5.
    04: Simulate a change in EIRA after setting the bit for PNC Pnc_4 to 1.
    05: Invoke main function of channel ComMChannel_4
    06: VP (ComM.EB_Ref.SWS_ComM_00987.HandleOrder):
        - BswM_ComM_CurrentPNCNode() is called before CanSm_GetCurrentComMode().
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00987.HandleOrder</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2171</internalId></specobject>
    <specobject>
      <id>TS_COMM_PncRequestBeforeEIRA</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ChFuncWhenPNCsConfig/source/application/PncTests.c</sourcefile>
      <sourceline>641</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test case tests, that ComM user requests of ComM users mapped PNCs are
    handled within the ComM main function before EIRA.
    Therefore, "request" a PNC via EIRA and then request a PNC via its user.
    To verify, that the user request is handled first, it is checked that the
    PNC state machine directly transits from PNC_NO_COMMUNICATION to state
    PNC_REQUESTED without entering state PNC_READY_SLEEP before.
  
Test Object: None.
Test Precondition: 
    - PNC Pnc_4 has ComM channel ComMChannel_4 and is mapped to ComM user
      ComMUser_4.
    - PNC Pnc_4 (PNC ID 20) has ComM channel ComMChannel_4 and is mapped to
      Com Rx Signal ComSignal_0.
  
Test Execution: 
    01: Simulate reset of stubs, initialization of ComM &amp; stubs
    02: Indicate CommunicationAllowed is TRUE for ComMChannel_4.
    03: Simulate EIRA bit is set for PNC Pnc_4.
    04: Simulate User request for user ComMUser_4.
    05: Invoke main function of channel ComMChannel_4
    06: VP (ComM.EB_Ref.SWS_ComM_00987.HandleOrder):
        - BswM_ComM_CurrentPNCNode() is called only once, with RequestedMode
        PNC_REQUESTED.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00987.HandleOrder</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2172</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_PNC_Wakeup_Det_Checks</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ChFuncWhenPNCsConfig/source/application/Tests.c</sourcefile>
      <sourceline>77</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test should check that in case function ComM_EcuM_PNCWakeUpIndication
    is called with a wrong parameter or module is not initialized DET
    error is reported.
  
Test Object: None.
Test Precondition: 
    Det is enabled for ComM.
  
Test Execution: 
    01: Call ComM_EcuM_PNCWakeUpIndication while ComM is not initialized
    02: VP(ComM.ASR430.SWS_ComM_00965)
        - Check that Det reports COMM_E_NOT_INITED
    03: Initialize ComM
    04: Call ComM_EcuM_PNCWakeUpIndication with a wrong PNC id
    05: Check that Det reports COMM_E_WRONG_PARAMETERS
    06: Call ComM_EcuM_PNCWakeUpIndication with a wrong PNC id
    07: Check that Det reports COMM_E_WRONG_PARAMETERS    
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR430.SWS_ComM_00965</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2173</internalId></specobject>
    <specobject>
      <id>TS_COMM_PNC_Wakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ChFuncWhenPNCsConfig/source/application/Tests.c</sourcefile>
      <sourceline>144</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    When ComM_EcuM_PNCWakeUpIndication is called
    and PNC state machine is in state PNC_NO_COMMUNICATION,
     - referenced PNC go in PNC_PREPARE_SLEEP
     - all channels are making transition to COMM_NO_COM_REQUEST_PENDING state
  
Test Object: None.
Test Precondition: 
    ComMSynchronousWakeUp is set TRUE.
  
Test Execution: 
    01: Initialize ComM
    02: VP(ComM.SWS_ComM_91001)
          - Call ComM_EcuM_PNCWakeUpIndication
    03: Trigger the execution of ComM_PncMainFunction() 
    04: VP(ComM.SWS_ComM_00964)
          - PNC state machine reached state PNC_PREPARE_SLEEP
    05: Call Mainfunctions
    06: VP(ComM.EB.SWS_ComM_Channel_ComMSynchronousWakeUp_true)
          - Check that all channels reached state COMM_NO_COM_REQUEST_PENDING    
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00964</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_Channel_ComMSynchronousWakeUp_true</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>642</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.ECUM_PNCWAKEUP_IND_PNC_NO_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1780</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2174</internalId></specobject>
    <specobject>
      <id>TS_COMM_RepeatChReqInPncReqState</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ChFuncWhenPNCsConfig/source/application/Tests.c</sourcefile>
      <sourceline>221</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test When PNC_REQUESTED is entered every time, the channel will be
    requested even if it is already requested.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    Note:
    A failure will be returned when Main functions of channels linked
    to any user are not able to produce the desired transition within
    a timeout period.

    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize CanSM stub.
    03: Initialize ComM.
    04: Set ComM_CommunicationAllowed to TRUE for all the channels.
    05: Request Full Communication for the user Test_ComMUser_0.
    06: Call main functions of all the channels
    07: Simulated Network mode indication.
    08: VP: - Verify Pnc entered state of Pnc0 as PNC_REQUESTED
        - Verify Nm_NetworkRequest is called.
    09: Request Full Communication for the user Test_ComMUser_1.
    10: Call main functions of all the channels
    11: VP (ComM.SWS_ComM_00993, ComM.ECUC_ComM_00886):
         - Pnc entered state of Pnc1 as PNC_REQUESTED
         - Nm_NetworkRequest is called again (ComM.SWS_ComM_00993).
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00993</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00886</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2175</internalId></specobject>
    <specobject>
      <id>TS_COMM_ComMNotifytoBswM</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ChFuncWhenPNCsConfig/source/application/Tests.c</sourcefile>
      <sourceline>342</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test when a channel releases the network, only the corresponding
    channel shall notify the state change to BswM with corresponding
    network ID, when the NmVariant is PASSIVE.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01. Reset stub invocation counts.
    02. Initialize CanSM stub.
    03. Initialize ComM.
    04. Set ComM_CommunicationAllowed to TRUE for all the channels and Invoke main functions of all
        channels.
    05. Simulate wake up indication followed by Network mode
        indication and Bus Mode indication for ch-1.
    06. Invoke main function of ch-1.
    07. VP (ComM.SWS_ComM_00861):
        Verify the notification to BswM with corresponding network ID.
    08. Simulate steps 5 to 7 for ch-2.
    09. Simulate Prepare bus sleep mode for ch-1 &amp; ch-2
    10. Invoke main function of ch-1
    11. VP (ComM.SWS_ComM_00861):
        * Verify the entered state as Silent communication.
        * Verify the notification to BswM with corresponding network ID
          as network id 1.
    12. Invoke main function of ch-2
    13. VP (ComM.SWS_ComM_00861):
        * Verify the entered state as Silent communication
        * Verify the notification to BswM with corresponding network ID
          as network id 2.
    14. Simulate Bus sleep mode for ch-1 &amp; ch-2
    15. Invoke main function of ch-1
    16. VP (ComM.SWS_ComM_00861):
        * Verify the entered state as No communication
        * Verify the notification to BswM with corresponding network ID
          as network id 1.
    17. Invoke main function of ch-2
    18. VP (ComM.SWS_ComM_00861):
        * Verify the entered state as No communication.
        * Verify the notification to BswM with corresponding network ID
          as network id 2.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00861</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2176</internalId></specobject>
    <specobject>
      <id>TS_COMM_ReleasingChannelsOfPNC</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ChFuncWhenPNCsConfig/source/application/Tests.c</sourcefile>
      <sourceline>543</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    When a channel is associated to more than one PNCs and if users of
    all PNCs have requested 'Full Communication',
    then the channel is not released until the users of all PNCs
    request 'No Communication'. (ComM.SWS_ComM_00888 and ComM.SWS_ComM_00686)

    Channels associated to a PNC are released only when the PNC enters
    PNC_NO_COMMUNICATION state (ComM.EB.SWS_ComM_00830).
  
Test Object: None.
Test Precondition: 
    Important Configuration Details:
      - The channel ComMChannel_0_PncUser is associated to PNCs
        ComMPnc_0, ComMPnc_1 and ComMPnc_2
      - The channel ComMUser_0_Pnc0 is associated to ComMPnc_0
      - The channel ComMUser_1_Pnc1 is associated to ComMPnc_1
      - The channel ComMUser_3_Pnc2 is associated to ComMPnc_2
    Module State:
      - Module is initialized
      - Communication is allowed for all channels
      - Stub invocation counters are reset to 0
  
Test Execution: 
    Note: All references of "channel" refer to ComMChannel_0_PncUser

    01: Initialize test case
        - Reset stub invocation counters
        - Initialize stub callouts
        - Initialize ComM
        - Allow communication for the required channels
    02: Request 'Full Communication' for the users of all PNCs of the channel
    03: Invoke main function of the channel
    04: Ensure all the corresponding PNCs enter PNC_REQUESTED state
    05: Simulate network mode indication for the channel
    06: Ensure that the current state of channels of all PNCs is
        'COMM_FULL_COM_NETWORK_REQUESTED'
    07: Set EIRA bits corresponding to ComMPnc_0, ComMPnc_1 and ComMPnc_2
        to 1 and indicate a change in EIRA via Com callback
    08: Request 'No Communication' for all the users of ComMPnc_0 and
        invoke main function of the channel
    09: VP (ComM.SWS_ComM_00686 and ComM.SWS_ComM_00133, ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE):
        - Nm_NetworkRelease() is not called, since other user requests
          for the channel (via ComMPnc_1 &amp; ComMPnc_2) still exist
        - ComMPnc_0 enters PNC_READY_SLEEP state
    10: Request 'No communication' for all users of ComMPnc_1
        and invoke the main function of the channel
    11: VP (ComM.SWS_ComM_00686 and ComM.SWS_ComM_00133, ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE):
        - Nm_NetworkRelease() is not called, since other user requests
          for the channel (via ComMPnc_2) still exist
        - Current state of the channel is still COMM_FULL_COM_NETWORK_REQUESTED
        - ComMPnc_1 enters PNC_READY_SLEEP state
    12: Request "No communication" for all users users of ComMPnc_2
        and invoke the main function of the channel
    13: VP(ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE):
        - Ensure ComMPnc_2 goes to PNC_READY_SLEEP state
    14: VP(ComM.SWS_ComM_00133):
        - Ensure the channel statemachine goes to COMM_FULL_COM_READY_SLEEP
        - Ensure Nm_NetworkRelease is called
    15: Clear EIRA bit corresponding to ComMPnc_2 and indicate a change in
        EIRA via Com callback
    16: Invoke main function of the channel
    17: VP(ComM.SWS_ComM_00940):
        - Ensure all PNCs enter PNC_PREPARE_SLEEP state
    18: Invoke mainfunction of the channel continuously until
        PNC_PREPARE_SLEEP timer expires
    19: VP(ComM.SWS_ComM_00947):
        - Ensure all PNCs enter PNC_NO_COMMUNICATION state
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00888</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00686</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00940</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00947</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2177</internalId></specobject>
    <specobject>
      <id>TS_COMM_UserReq_ReleasingChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ChFuncWhenPNCsConfig/source/application/Tests.c</sourcefile>
      <sourceline>767</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    When a channel which is connected directly to users via configuration
    parameter 'ComMUserPerChannel' and indirectly via PNCs and if both
    type of users request 'Full Communication', then this channel is released
    only when both type of users request 'No Communication' and the associated
    PNCs enter 'PNC_NO_COMMUNICATION' state.

    That is, Nm_NetworkRelease() is called only if
      - both type of users request 'COMM_NO_COMMUNICATION'
      - the associated PNCs enters PNC_NO_COMMUNICATION
  
Test Object: None.
Test Precondition: 
    Important Configuration Details:
      - Multiple users are connected to "ComMChannel_4_PncUserDirectUser"
        both directly and indirectly via PNCs.
        - The user "ComMUser_5_Ch4" is connected to the channel
          "ComMChannel_4_PncUserDirectUser" directly
        - The user "ComMUser_4_Pnc4_Ch4" is connected to the channel
          "ComMChannel_4_PncUserDirectUser" indirectly via PNC "ComMPnc_4"
        - The channel "ComMChannel_4_PncUserDirectUser" is connected to
          the PNC "ComMPnc_4" whose PNC ID is 20
        - ComMSynchronousWakeUp is set to TRUE
    Module State:
      - Module is initialized
      - Communication is allowed on the channel "ComMChannel_4_PncUserDirectUser"
      - Stub invocation counters are reset to 0
  
Test Execution: 
    Notes:
    1) All references of "channel" refer to "ComMChannel_4_PncUserDirectUser"
    2) All references of "channel user" refer to "ComMUser_5_Ch4"
    3) All references of "PNC user" refer to "ComMUser_4_Pnc4_Ch4"

    01: Initialize test case
        - Reset stub invocation counters
        - Initialize stub callouts
        - Initialize ComM
        - Allow communication for all channels
    02: Both "channel user" and "PNC user" request 'Full Communication'
    03: Invoke main function of channel
    04: Check that Nm_NetworkRequest is called and ComMPnc_4 enters PNC_REQUESTED state
    05: Simulate network mode indication for the channel
    06: VP (ComM.SWS_ComM_00686):
        - Ensure the current state of channel is COMM_FULL_COM_NETWORK_REQUESTED
    07: Set EIRA bits corresponding to ComMPnc_4 to 1 and indicate a change
        in EIRA via Com callback
    08: "Channel user" requests 'No Communication'; invoke main function
        of the channel
    09: Ensure Nm_NetworkRelease() is not called
        since the channel is still used by an
        active PNC (ComMPnc_4)
    10: "PNC user" requests 'No Communication'; invoke main function
        of the channel
    11: Ensure ComMPnc_4 enters PNC_READY_SLEEP state
    12: - Nm_NetworkRelease() has been called
        - channel statemachine goes to COMM_FULL_COM_READY_SLEEP
    13: Clear EIRA bit corresponding to ComMPnc_4 and indicate a change in
        EIRA via Com callback
    14: Invoke main function of the channel
    15: Ensure ComMPnc_4 enters PNC_PREPARE_SLEEP state
    16: "Channel user" requests 'Full Communication'
    17: Invoke mainfunction of the channel continuously until
        PNC_PREPARE_SLEEP timer expires
    18: Ensure ComMPnc_4 enters PNC_NO_COMMUNICATION state
    19: VP (ComM.SWS_ComM_00869, ComM.SWS_ComM_00686):
        - Nm_NetworkRequest is called
        - Channel statemachine goes to COMM_FULL_COM_NETWORK_REQUESTED
    20: "Channel user" requests 'No Communication'
    21: Simulate EcuM WakeUpIndication to bring ComMPnc_4 into
        PNC_PREPARE_SLEEP state (ComM.SWS_ComM_00931)
    22: Invoke main function of the channel
    23: VP (ComM.SWS_ComM_00133):
        - Nm_NetworkRelease() is called since the direct user has
          requested No Communication and the only PNC referencing
          the channel was externally requested
        - Channel statemachine goes to COMM_FULL_COM_READY_SLEEP
    24: Ensure ComMPnc_4 enters PNC_PREPARE_SLEEP state
    25: Invoke main function of the channel so that PncPrepareSleep timer
        expires
    26: Ensure ComMPnc_4 enters PNC_NO_COMMUNICATION state
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00888</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00686</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2178</internalId></specobject>
    <specobject>
      <id>TS_COMM_ChReqAfterPNCInReadySleepByEIRA</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ChFuncWhenPNCsConfig/source/application/Tests.c</sourcefile>
      <sourceline>1040</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The aim of this test is to ensure that, if there is a transition of
    the PNC statemachine from PNC_NO_COMMUNICATION TO PNC_READY_SLEEP
    (due to an EIRA signal received), then, in case the channel
    statemachine switches from FULL_COM_READY_SLEEP to
    FULL_COM_NETWORKD_REQUESTED (due to an user requesting
    FULL_COMMUNICATION for example), it can safely return to
    FULL_COM_READY_SLEEP if the user requests NO_COMMUNICATION.
  
Test Object: None.
Test Precondition: 
    Important Configuration Details:
        - The user "ComMUser_5_Ch4" is connected to the channel
          "ComMChannel_4_PncUserDirectUser" directly
        - The channel "ComMChannel_4_PncUserDirectUser" is connected to
          the PNC "ComMPnc_4" whose PNC ID is 20
      - ComMSynchronousWakeUp is set to TRUE
    Module State:
      - Module is initialized
      - Communication is allowed on the channel "ComMChannel_4_PncUserDirectUser"
      - Stub invocation counters are reset to 0
  
Test Execution: 
    Note: All references of "channel" refer to "ComMChannel_4_PncUserDirectUser"

    01: Initialize test case
        - Reset stub invocation counters
        - Initialize stub callouts
        - Initialize ComM
        - Allow communication for ComMChannel_4_PncUserDirectUser
    02: Test_ComMUser_5 requests FULL_COMMUNICATION
    03: Invoke main function of channel
    04: Simulate network mode indication for the channel
    05: Invoke main function of channel
    06: VP (ComM.SWS_ComM_00869):
        - Ensure channel is in COMM_FULL_COM_NETWORK_REQUESTED state
        - Ensure Nm_NetworkRequest() is called
    07: Set EIRA bits corresponding to ComMPnc_4 to 1 and indicate a change
        in EIRA via Com callback
    08: Invoke main function of channel
    09: Ensure ComMPnc_4 enters PNC_READY_SLEEP state
    10: Test_ComMUser_5 requests COMM_NO_COMMUNICATION
    11: Invoke main function of channel
    12: VP (ComM.SWS_ComM_00888):
        - Ensure channel is in COMM_FULL_COM_READY_SLEEP state
    13: VP (ComM.SWS_ComM_00133):
        - Ensure Nm_NetworkRelease() has been called
    14: Test_ComMUser_5 requests FULL_COMMUNICATION
    15: Invoke main function of channel
    16: Ensure ComMPnc_4 hasn't changed it's state (PNC_READY_SLEEP)
    17: VP (ComM.SWS_ComM_00869):
        - Ensure channel is in COMM_FULL_COM_NETWORK_REQUESTED state
        - Ensure Nm_NetworkRequest() is called
    18: Test_ComMUser_5 requests COMM_NO_COMMUNICATION
    19: Invoke main function of channel
    20: VP (ComM.SWS_ComM_00888):
        - Ensure channel is in COMM_FULL_COM_READY_SLEEP state
    21: VP (ComM.SWS_ComM_00133):
        - Ensure Nm_NetworkRelease() has been called
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00888</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00869</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2179</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_UserRequestToChAndToPnc_PncEnable</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ChFuncWith_PncEnable/source/application/Tests.c</sourcefile>
      <sourceline>77</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The testcase tests that if PncEnabled=false, requesting a channel via a Pnc
    requests the channel.
    Releasing a channel via a Pnc, if the channel itself is requested by another user,
    the channel keeps in FULL_COMMUNICATION.
    Releasing also the User request for the channel makes the channel switch to NO_COMMUNICATION.
  
Test Object: None.
Test Precondition: 
    - PNC Pnc_4 has ComM channel ComMChannel_4 and is mapped to ComM user
      ComMUser_4.
    - ComMChannel_4 is also mapped directly to ComMUser_5
  
Test Execution: 
    01: Simulate reset of stubs, initialization of ComM &amp; stubs
    02: Indicate CommunicationAllowed is TRUE for all the channels.
    03: Simulate User request Full Communication for user ComMUser_4.
    04: Invoke main function of channel ComMChannel_4
    05: State machine stays in COMM_NO_COMMUNICATION
    06: Simulate User request for user ComMUser_5
    07: Invoke main function of channel ComMChannel_4
    08: VP (ComM.EB_Ref.SWS_ComM_00987.HandleOrder, ComM.SWS_ComM_00979):
        Check if BswM_ComM_CurrentPNCNode was called
        Check if CanSM_RequestComMode = COMM_FULL_COM_NETWORK_REQUESTED
        Invoke function ComM_Nm_NetworkMode for channel ComMChannel_4
    09: VP:
        The state for the Channel is COMM_FULL_COM_NETWORK_REQUESTED
        The state of the user is COMM_FULL_COMMUNICATION
    10: Simulate User request for user ComMUser_4 with COMM_NO_COMMUNICATION
        Simulate User request for user ComMUser_5 with COMM_FULL_COMMUNICATION
    11: Check that the requested mode for the user4 is COMM_NO_COMMUNICATION
        and for user5 is COMM_FULL_COMMUNICATION
    12: Invoke main function of channel ComMChannel_4 for the request to get propagated
        Check that Nm_NetworkRelease_Stub for the channel was not called
    13: Invoke main function of channel ComMChannel_4 for the request to get propagated
        Simulate User request for user ComMUser_5 with COMM_NO_COMMUNICATION
    14: VP (ComM.EB_Ref.SWS_ComM_00987.HandleOrder, ComM.SWS_ComM_00979):
        Call ComM_Nm_BusSleepMode and main function ComMChannel_4 for the request to be propagated
        BswM_ComM_CurrentPNCNode() is not called
        CanSm_GetCurrentComMode() is called with COMM_NO_COM_NO_PENDING_REQUEST
        The state of the user4 is COMM_NO_COMMUNICATION and
        The state of the user5 is COMM_FULL_COMMUNICATION
    15:
        VP: The state for the Channel is COMM_NO_COM_NO_PENDING_REQUEST
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00987.HandleOrder</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00979</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2180</internalId></specobject>
    <specobject>
      <id>TS_COMM_ComMNotifytoBswM_PncEnable</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ChFuncWith_PncEnable/source/application/Tests.c</sourcefile>
      <sourceline>247</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test when a channel releases the network, only the corresponding
    channel shall notify the state change to BswM with corresponding
    network ID.
    One of the channels is ComMChannel_0 which is linked to a user through a PNC
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01. Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02. Initialize CanSM stub.
    03. Initialize ComM.
    04. Set ComM_CommunicationAllowed to TRUE for all the channels.
    05: Set BswM_ComM_CurrentMode_Stub.Network to an invalid value.
    06. Simulate wake up indication followed by Network mode
        indication for ch-0.
    07. Invoke main function of ch-0.
    08: Verify call to Nm_PassiveStartUp_Stub with NetworkHandle.
    09: Simulate Network mode for channel-2 &amp; invoke main function of ch-0.
    10: Verify that the Requested mode is COMM_FULL_COMMUNICATION.
    11: Verify that the current state is COMM_FULL_COM_READY_SLEEP since
        no user requests the channel.
    12. VP (ComM.SWS_ComM_00861):
        - The notification to BswM with corresponding network ID.
    13. Simulate steps 5 to 12 for ch-2.
    14. Simulate Prepare bus sleep mode for ch-0 &amp; ch-2
    15. Invoke main function of ch-0
    16. VP (ComM.SWS_ComM_00861):
         - The entered state is Silent communication.
         - The notification to BswM with corresponding network ID
          as network id 0.
    17. Invoke main function of ch-2
    18. VP (ComM.SWS_ComM_00861):
         - The entered state is Silent communication
         - The notification to BswM with corresponding network ID
          as network id 2.
    19. Simulate Nm Bus sleep mode for ch-0, ch-2.
    20. Invoke main function of ch-0.
    21. VP (ComM.SWS_ComM_00861):
         - The entered state is No communication
         - The notification to BswM with corresponding network ID
          as network id 0.
    22. Invoke main function of ch-2.
    23. VP (ComM.SWS_ComM_00861):
         - The entered state is No communication.
         - The notification to BswM with corresponding network ID
          as network id 2.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00861</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2181</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_SLAVE_ACTIVE_TRANSITIONS_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ComM_Lin/source/application/Tests.c</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Check that when in state COMM_FULL_COMMUNICATION and a ComM_BusSm_BusSleepMode is 
    triggered, then a channel with ComMNmVariant = SLAVE_ACTIVE shall switch to state
    COMM_NO_COMMUNICATION.
  
Test Object: None.
Test Precondition: 
    Channel 0 is of nm variant SLAVE_ACTIVE
  
Test Execution: 
    01: Initialize ComM.
    02: Disable limitations
    03: Request COMM_FULL_COMMUNICATION for user 0
    04: Reset LinSM_RequestComMode stub count to 0
    05: Call main function for channel 0 until ComM enters COMM_FULL_COMMUNICATION
        or a timeout occurs
    06: Check ComM is in COMM_FULL_COMMUNICATION state
    07: VP (ComM.SWS_ComM_91000)
        Invoke ComM_BusSM_BusSleepMode
    08: Invoke main function once to process previous ComM_BusSM_BusSleepMode callback
    09: VP (ComM.EB.Dsn.StateDynamics.BUS_SM_SLEEP_INDICATION_NO_COMMUNICATION, ComM.EB_Ref.SWS_ComM_01018.NmVariant.SLAVE_ACTIVE)
        Check ComM is in COMM_NO_COMMUNICATION state
    10: Check ComM is in substate COMM_NO_COM_NO_PENDING_REQUEST
  
Test Input: 
    Channel of type SLAVE_ACTIVE
  
Test Output: 
    State transition from full to no communication
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.BUS_SM_SLEEP_INDICATION_NO_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1764</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01018.NmVariant.SLAVE_ACTIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2182</internalId></specobject>
    <specobject>
      <id>TS_COMM_SLAVE_ACTIVE_TRANSITIONS_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ComM_Lin/source/application/Tests.c</sourcefile>
      <sourceline>156</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Check that when in state COMM_FULL_COMMUNICATION and no user requests COMM_FULL_COMMUNICATION,
    then a channel with ComMNmVariant = SLAVE_ACTIVE shall switch to substate
    COMM_FULL_COM_READY_SLEEP.
  
Test Object: None.
Test Precondition: 
    Channel 0 is of nm variant SLAVE_ACTIVE
  
Test Execution: 
    01: Initialize ComM
    02: Disable limitations
    03: Request COMM_FULL_COMMUNICATION for user 0
    04: Reset LinSM_RequestComMode stub count to 0
    05: Call main function for channel 0 until ComM enters COMM_FULL_COMMUNICATION
        or a timeout occurs
    06: Check ComM is in COMM_FULL_COMMUNICATION state
    07: Request COMM_NO_COMMUNICATION for user 0
    08: Invoke main function once
    09: VP (ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_2, ComM.SWS_ComM_01017)
        Check ComM is in COMM_FULL_COM_READY_SLEEP state
  
Test Input: 
    Channel of type SLAVE_ACTIVE
  
Test Output: 
    State transition from full communication to ready sleep.
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1745</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2183</internalId></specobject>
    <specobject>
      <id>TS_COMM_SLAVE_PASSIVE_TRANSITIONS_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ComM_Lin/source/application/Tests.c</sourcefile>
      <sourceline>256</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Check that when in substate COMM_FULL_COM_NETWORK_REQUESTED a channel with 
    ComMNmVariant = SLAVE_PASSIVE will switch to substate COMM_FULL_COM_READY_SLEEP.
  
Test Object: None.
Test Precondition: 
    Channel 1 is of nm variant SLAVE_PASSIVE
  
Test Execution: 
    01: Initialize ComM.
    02: Disable limitations
    03: Call ComM_EcuM_WakeUpIndication to trigger a passive wakeup
    04: Reset LinSM_RequestComMode stub count to 0
    05: Call main function for channel 0 until SM com mode change occurs
        or a timeout occurs
    06: Check that com mode change did occur
    07: VP (ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_3, ComM.EB_Ref.SWS_ComM_00915.NmVariant.SLAVE_PASSIVE)
        Check ComM is in COMM_FULL_COM_READY_SLEEP state (transition from COMM_NO_COMMUNICATION -&gt; COMM_FULL_COM_NETWORK_REQUESTED
        -&gt; COMM_FULL_COM_READY_SLEEP occurs in a single main function cycle)
  
Test Input: 
    Channel of type SLAVE_PASSIVE
  
Test Output: 
    State transition from netwrok requested to ready sleep
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1746</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00915.NmVariant.SLAVE_PASSIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2184</internalId></specobject>
    <specobject>
      <id>TS_COMM_SLAVE_PASSIVE_TRANSITIONS_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ComM_Lin/source/application/Tests.c</sourcefile>
      <sourceline>344</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Check that when in state COMM_FULL_COMMUNICATION and a ComM_BusSm_BusSleepMode is 
    triggered, then a channel with ComMNmVariant = SLAVE_PASSIVE shall switch to state
    COMM_NO_COMMUNICATION.
  
Test Object: None.
Test Precondition: 
    Channel 1 is of nm variant SLAVE_PASSIVE
  
Test Execution: 
    01: Initialize ComM.
    02: Disable limitations
    03: Call ComM_EcuM_WakeUpIndication to trigger a passive wakeup
    04: Reset LinSM_RequestComMode stub count to 0
    05: Call main function for channel 0 until SM com mode change occurs
        or a timeout occurs
    06: Check that com mode change did occur
    07: Check ComM current state is COMM_FULL_COM_READY_SLEEP
    08: VP (ComM.SWS_ComM_91000)
        Invoke ComM_BusSM_BusSleepMode
    09: Invoke main function once to process previous ComM_BusSM_BusSleepMode callback
    10: VP (ComM.EB.Dsn.StateDynamics.BUS_SM_SLEEP_INDICATION_NO_COMMUNICATION, ComM.EB_Ref.SWS_ComM_01018.NmVariant.SLAVE_PASSIVE)
        Check ComM is in substate COMM_NO_COM_NO_PENDING_REQUEST
  
Test Input: 
    Channel of type SLAVE_PASSIVE
  
Test Output: 
    State transition from full communication to no communication
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.BUS_SM_SLEEP_INDICATION_NO_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1764</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01018.NmVariant.SLAVE_PASSIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>577</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2185</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_SLAVE_ACTIVE_NO_NM_APIS_CALL</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ComM_Lin_No_Nm_Api_Calls/source/application/Tests.c</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that no nm apis are called for a channel with nm variant SLAVE_ACTIVE
  
Test Object: None.
Test Precondition: 
    Channel 0 is of nm variant SLAVE_ACTIVE
  
Test Execution: 
    01: Initialize ComM
    02: Reset Det_ReportError stub count
    03: VP(ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_ACTIVE)
        Call ComM_Nm_NetworkStartIndication and check a det error is raised for service with sid
        COMM_SID_NM_NETWORK_START_IND and error COMM_E_WRONG_PARAMETERS
    04: VP(ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_ACTIVE, ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest)
        Call ComM_Nm_NetworkMode and check a det error is raised for service with sid
        COMM_SID_NM_NETWORK_MODE and error COMM_E_WRONG_PARAMETERS
    05: VP(ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_ACTIVE)
        Call ComM_Nm_PrepareBusSleepMode and check a det error is raised for service with sid
        COMM_SID_NM_PREPARE_BUS_SLEEP and error COMM_E_WRONG_PARAMETERS
    06: VP(ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_ACTIVE)
        Call ComM_Nm_BusSleepMode and check a det error is raised for service with sid
        COMM_SID_NM_BUS_SLEEP_MODE and error COMM_E_WRONG_PARAMETERS
    07: VP(ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_ACTIVE)
        Call ComM_Nm_RestartIndication and check a det error is raised for service with sid
        COMM_SID_NM_RESTART_IND and error COMM_E_WRONG_PARAMETERS
  
Test Input: 
    Channel of type SLAVE_ACTIVE
  
Test Output: 
    Det error
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_ACTIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2186</internalId></specobject>
    <specobject>
      <id>TS_COMM_SLAVE_PASSIVE_NO_NM_APIS_CALL</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ComM_Lin_No_Nm_Api_Calls/source/application/Tests.c</sourcefile>
      <sourceline>145</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that no nm apis are called for a channel with nm variant SLAVE_PASSIVE
  
Test Object: None.
Test Precondition: 
    Channel 1 is of nm variant SLAVE_PASSIVE
  
Test Execution: 
    01: Initialize ComM
    02: Reset Det_ReportError stub count
    03: VP(ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_PASSIVE)
        Call ComM_Nm_NetworkStartIndication and check a det error is raised for service with sid
        COMM_SID_NM_NETWORK_START_IND and error COMM_E_WRONG_PARAMETERS
    04: VP(ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_PASSIVE, ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest)
        Call ComM_Nm_NetworkMode and check a det error is raised for service with sid
        COMM_SID_NM_NETWORK_MODE and error COMM_E_WRONG_PARAMETERS
    05: VP(ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_PASSIVE)
        Call ComM_Nm_PrepareBusSleepMode and check a det error is raised for service with sid
        COMM_SID_NM_PREPARE_BUS_SLEEP and error COMM_E_WRONG_PARAMETERS
    06: VP(ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_PASSIVE)
        Call ComM_Nm_BusSleepMode and check a det error is raised for service with sid
        COMM_SID_NM_BUS_SLEEP_MODE and error COMM_E_WRONG_PARAMETERS
    07: VP(ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_PASSIVE)
        Call ComM_Nm_RestartIndication and check a det error is raised for service with sid
        COMM_SID_NM_RESTART_IND and error COMM_E_WRONG_PARAMETERS
  
Test Input: 
    Channel of type SLAVE_PASSIVE
  
Test Output: 
    Det error
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_PASSIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2187</internalId></specobject>
    <specobject>
      <id>TS_COMM_COMM_BUSSM_BUSSLEEPMODE_WRONG_PARAM</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ComM_Lin_No_Nm_Api_Calls/source/application/Tests.c</sourcefile>
      <sourceline>237</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when ComM_BusSM_BusSleepMode is called for a channel with ComMNmVariant
    other than SLAVE_ACTIVE/SLAVE_PASSIVE then a det wrong parameters error is raised.
  
Test Object: None.
Test Precondition: 
    Channel 2 is of nm variant other than SLAVE_ACTIVE/SLAVE_PASSIVE.
  
Test Execution: 
    01: Initialize ComM
    02: Reset Det_ReportError stub count
    03: VP(ComM.SWS_ComM_91000)
        Call ComM_Nm_NetworkStartIndication and check a det error is raised for service with sid
        COMM_SID_BUS_SM_BUS_SLEEP_MODE and error COMM_E_WRONG_PARAMETERS
  
Test Input: 
    Channel of type other than SLAVE_ACTIVE/SLAVE_PASSIVE
  
Test Output: 
    Det error
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_91000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2188</internalId></specobject>
    <specobject>
      <id>TS_COMM_SLAVE_ACTIVE_NO_NM_APIS_CALL_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ComM_Lin_No_Nm_Api_Calls/source/application/Tests.c</sourcefile>
      <sourceline>296</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that no nm apis are called for a channel with nm variant SLAVE_ACTIVE
  
Test Object: None.
Test Precondition: 
    Channel 0 is of nm variant SLAVE_ACTIVE
  
Test Execution: 
    01: Initialize ComM
    02: Reset stub counters
    03: Allow communication for channel 0 (SLAVE_ACTIVE)
    04: Request network for channel 0 (SLAVE_ACTIVE)
    05: Check current state is COMM_FULL_COM_NETWORK_REQUESTED
    06: VP(ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_ACTIVE, ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest)
        Check that Nm_PassiveStartUp and Nm_NetworkRequest were not called.
  
Test Input: 
    Channel of type SLAVE_ACTIVE
  
Test Output: 
    Det error
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_ACTIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2189</internalId></specobject>
    <specobject>
      <id>TS_COMM_SLAVE_ACTIVE_NO_NM_APIS_CALL_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ComM_Lin_No_Nm_Api_Calls/source/application/Tests.c</sourcefile>
      <sourceline>373</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that no nm apis are called for a channel with nm variant SLAVE_ACTIVE
  
Test Object: None.
Test Precondition: 
    Channel 0 is of nm variant SLAVE_ACTIVE
  
Test Execution: 
    01: Initialize ComM
    02: Reset stub counters
    03: Allow communication for channel 0 (SLAVE_ACTIVE)
    04: Invoke ComM_Nm_NetworkStartIndication for channel 0 (SLAVE_ACTIVE)
    05: Check current state is COMM_FULL_COM_NETWORK_REQUESTED
    06: VP(ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_ACTIVE, ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest)
        Check that Nm_PassiveStartUp and Nm_NetworkRequest were not called.
  
Test Input: 
    Channel of type SLAVE_ACTIVE
  
Test Output: 
    Det error
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_ACTIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>572</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2190</internalId></specobject>
    <specobject>
      <id>TS_COMM_SLAVE_PASSIVE_NO_NM_APIS_CALL_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ComM_Lin_No_Nm_Api_Calls/source/application/Tests.c</sourcefile>
      <sourceline>449</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that no nm apis are called for a channel with nm variant SLAVE_PASSIVE
  
Test Object: None.
Test Precondition: 
    Channel 1 is of nm variant SLAVE_PASSIVE
  
Test Execution: 
    01: Initialize ComM
    02: Reset stub counters
    03: Allow communication for channel 1 (SLAVE_PASSIVE)
    04: Invoke ComM_Nm_NetworkStartIndication for channel 1 (SLAVE_PASSIVE)
    05: Check current state is COMM_FULL_COM_NETWORK_REQUESTED
    06: VP(ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_ACTIVE, ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest)
        Check that Nm_PassiveStartUp and Nm_NetworkRequest were not called.
  
Test Input: 
    Channel of type SLAVE_PASSIVE
  
Test Output: 
    Det error
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00602.NmVariant.SLAVE_PASSIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>573</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00667.Nm_NetworkRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>570</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2191</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_SLAVE_ACTIVE_TRANSITIONS_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ComM_Lin_None/source/application/Tests.c</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that when in state COMM_FULL_COMMUNICATION and a ComM_BusSm_BusSleepMode is 
    triggered, then a channel with ComMNmVariant = SLAVE_ACTIVE shall switch to state
    COMM_NO_COMMUNICATION.
  
Test Object: None.
Test Precondition: 
    Channel 0 is of nm variant SLAVE_ACTIVE
  
Test Execution: 
    01: Initialize ComM.
    02: Disable limitations
    03: Request COMM_FULL_COMMUNICATION for user 0
    04: Reset LinSM_RequestComMode stub count to 0
    04: Check ComM is in COMM_FULL_COM_NETWORK_REQUESTED state
    05: VP (ComM.SWS_ComM_91000)
        Invoke ComM_BusSM_BusSleepMode
    06: Invoke main function once to process previous ComM_BusSM_BusSleepMode callback
    07: Check ComM is in substate COMM_NO_COM_NO_PENDING_REQUEST
  
Test Input: 
    Channel of type SLAVE_ACTIVE
  
Test Output: 
    State transition from full to no communication
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.BUS_SM_SLEEP_INDICATION_NO_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1764</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01018.NmVariant.SLAVE_ACTIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>576</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_91000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2192</internalId></specobject>
    <specobject>
      <id>TS_COMM_SLAVE_PASSIVE_TRANSITIONS_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_ComM_Lin_None/source/application/Tests.c</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Check that when in substate COMM_FULL_COM_NETWORK_REQUESTED a channel with 
    ComMNmVariant = SLAVE_PASSIVE will switch to substate COMM_FULL_COM_READY_SLEEP.
  
Test Object: None.
Test Precondition: 
    Channel 1 is of nm variant SLAVE_PASSIVE
  
Test Execution: 
    01: Initialize ComM.
    02: Disable limitations
    03: Call ComM_EcuM_WakeUpIndication to trigger a passive wakeup
    04: Reset LinSM_RequestComMode stub count to 0
    05: Call main function for channel 0 until SM com mode change occurs
        or a timeout occurs
    06: Check that com mode change did occur
    07: VP (ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_3, ComM.EB_Ref.SWS_ComM_00915.NmVariant.SLAVE_PASSIVE)
        Check ComM is in COMM_FULL_COM_READY_SLEEP state (transition from COMM_NO_COMMUNICATION -&gt; COMM_FULL_COM_NETWORK_REQUESTED
        -&gt; COMM_FULL_COM_READY_SLEEP occurs in a single main function cycle)
  
Test Input: 
    Channel of type SLAVE_PASSIVE
  
Test Output: 
    State transition from netwrok requested to ready sleep
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.REQ_STATUS_CHANGED_NO_COMM_FULL_COM_NETWORK_REQUESTED_ENTRY_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1746</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00915.NmVariant.SLAVE_PASSIVE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>568</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2193</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_RequestComMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_1/source/application/Tests.c</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that for channels and users on different partitions, when a
    COMM_FULL_COMMUNICATION request is made for a user, the channels of that
    user enter in COMM_FULL_COM_NETWORK_REQUESTED state. Test shall also prove
    interpartition communication.
  
Test Object: None.
Test Precondition: 
    Users/channels/inhibition configured Os partitions are different.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Check ComM status is COMM_INIT and mode is COMM_NO_COMMUNICATION.
    03: Clear inhibition to all channels, allow communication.
    04: VP (ComM.EB.SWS_ComM_00110, ComM.EB.UserToChannelCrossPartition):
        Request COMM_FULL_COMMUNICATION for users 0,1,2, and check that interpartition communication
        occurs between the requested users and its channels, and no communication occurs for users
        with no request.
    05: Check that no communication occurs between user to inhibition partitions.
    06: Call main functions, simulate RTE communication.
    07: VP (ComM.EB.UserToChannelCrossPartition):
        Check data was received on channels partitions that belong to users that have been requested
        to COMM_FULL_COMMUNICATION.
    08: Check no data was received on channels partitions that don't belong to users that have been
        requested to COMM_FULL_COMMUNICATION.
    09: Check no communication occured between users and inhibition partitions.
    10: Check states of channels that belong to users that have been requested to 
        COMM_FULL_COMMUNICATION to be COMM_FULL_COM_NETWORK_REQUESTED, and 
        COMM_NO_COM_NO_PENDING_REQUEST for the other channels.
    11: VP (ComM.EB.SWS_ComM_00110, ComM.EB.UserToChannelCrossPartition):
        Request COMM_FULL_COMMUNICATION for users 3,4,PNC, and check that interpartition communication
        occurs between the requested users and its channels, and no communication occurs for users
        with no new request.
    12: Call main functions, simulate RTE communication.
    13: VP (ComM.EB.UserToChannelCrossPartition):
        Check data was received on channels partitions that belong to users that have been requested
        to COMM_FULL_COMMUNICATION.
    14: Check no communication occured between users and inhibition partitions.
    15: Check states of channels to be COMM_FULL_COM_NETWORK_REQUESTED.
  
Test Input: 
    COMM_FULL_COMMUNICATION requests.
  
Test Output: 
    Interpartition communication user to channel, and user to inhibition.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>756</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.UserToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>724</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2194</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_RequestComMode_Det_UserToCh_Failure</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_1/source/application/Tests.c</sourcefile>
      <sourceline>348</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that when interpartition communication initiated by calls to
    ComM_RequestComMode fails, then a DET is reported.
  
Test Object: None.
Test Precondition: 
    Users and channels are on separate Os partitions.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Simulate user to channel interpartition communication error.
    03: Request COMM_FULL_COMMUNICATION for user 2.
    04: Check that interpartition communication was attempted.
    05: VP (ComM.EB.UserToChannelDataSetError):
        Check Det error was set to COMM_E_USER_TO_CH_DATASET_ERROR.
  
Test Input: 
    Failed user to channel interpartition communication.
  
Test Output: 
    Det error.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToChannelDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>734</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2195</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_LimitChannelToNoComMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_1/source/application/Tests.c</sourcefile>
      <sourceline>416</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test shall prove that when a COMM_FULL_COMMUNICATION request is made for an user, and channels
    of that user are limited to no communication, then those channels remain in no communication.
    Test shall also prove intercommunication between channel to inhibition, and user to inhibition
    partitions.
  
Test Object: None.
Test Precondition: 
    Users/channels/inhibition configured Os partitions are different.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Allow communication.
    03: VP (ComM.ASR403.SWS_ComM_00163, ComM.SWS_ComM_00470):
        Limit channels 0,2,4,5 to no communication.
    04: VP (ComM.EB.ChannelToInhibitionCrossPartition):
        Check interpartition communication between limited channels to inhibition partitions occured.
    05: Call main functions, simulate RTE communication.
    06: VP (ComM.EB.ChannelToInhibitionCrossPartition):
        Check data was received on inhibition partition from limited channels.
    07: Request communication for all users.
    08: VP (ComM.EB.UserToInhibitionCrossPartition):
        Check interpartition communication between users to inhibition partitions occured.
    09: Call main functions, simulate RTE communication.
    10: VP (ComM.EB.UserToInhibitionCrossPartition):
        Check data was received on inhibition partition from user partitions.
    11: Chekc comm states for channels 0,2,4,5 are COMM_NO_COMMUNICATION, and states for channels 1,3,6 are COMM_FULL_COM_NETWORK_REQUESTED.
  
Test Input: 
    COMM_FULL_COMMUNICATION requests on channels with limit to no communication set to true.
  
Test Output: 
    Interpartition communication between channel to inhibition, user to inhibition partitions.
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00470</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ChannelToInhibitionCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.UserToInhibitionCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>728</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2196</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_LimitChannelToNoComMode_Det_ChToInhibition_Failure</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_1/source/application/Tests.c</sourcefile>
      <sourceline>567</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that when interpartition communication initiated by calls to
    ComM_LimitChannelToNoComMode fails, then a DET is reported.
  
Test Object: None.
Test Precondition: 
    Users/channels/inhibition configured Os partitions are different.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Alow communication.
    03: Simulate channel to inhibition interpartition communication error for channels 0,1.
    04: Call ComM_LimitChannelToNoComMode for channel 0.
    05: Check that interpartition communication was attempted.
    06: VP (ComM.EB.ChannelToInhibitionDataSetError):
        Check Det error was set to COMM_E_CH_TO_INHIBITION_DATASET_ERROR.
    07: Call ComM_LimitChannelToNoComMode for channel 0.
    08: Check that interpartition communication was attempted.
    09: VP (ComM.EB.ChannelToInhibitionDataSetError):
        Check Det error was set to COMM_E_CH_TO_INHIBITION_DATASET_ERROR.
  
Test Input: 
    Failed channel to inhibition interpartition communication.
  
Test Output: 
    Det error.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToInhibitionDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>737</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2197</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_LimitChannelToNoComMode_Det_UserToInhibition_Failure</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_1/source/application/Tests.c</sourcefile>
      <sourceline>646</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that after calling ComM_LimitChannelToNoComMode and interpartition 
    communication initiated by calls to ComM_RequestComMode fails, then a DET is reported.
  
Test Object: None.
Test Precondition: 
    Users/channels/inhibition configured Os partitions are different.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Alow communication.
    03: Call ComM_LimitChannelToNoComMode for channel 0.
    04: Check that communication occurs between channel to inhibition partitions.
    05: Call main functions, simulate RTE communication.
    06: Check data was received on inhibition partition.
    07: Simulate user to inhibition interpartition communication error.
    08: Request COMM_FULL_COMMUNICATION for user 1.
    09: Check that interpartition communication was attempted.
    10: VP (ComM.EB.UserToInhibitionDataSetError):
        Check Det error was set to COMM_E_USER_TO_INHIBITION_DATASET_ERROR.
  
Test Input: 
    Failed user to inhibition interpartition communication.
  
Test Output: 
    Det error.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToInhibitionDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>736</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2198</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_LimitChannelToNoComMode_Det_InhibitionToCh_Failure</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_1/source/application/Tests.c</sourcefile>
      <sourceline>729</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that after calling ComM_LimitChannelToNoComMode and interpartition 
    communication between inhibition to channel fails, then a DET is reported. .
  
Test Object: None.
Test Precondition: 
    Users/channels/inhibition configured Os partitions are different.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Alow communication.
    03: Call ComM_LimitChannelToNoComMode for channel 0.
    04: Check that communication occurs between channel to inhibition partitions.
    05: Simulate inhibition to channel interpartition communication error.
    06: Call main functions, simulate RTE communication.
    07: Check data was received on inhibition partition.
    08: VP (ComM.EB.SetChannelComMInhibitionStatusDataSetSIDError):
        Check Det error was set to COMM_E_INHIBITION_TO_CH_DATASET_ERROR.
  
Test Input: 
    Failed user to inhibition interpartition communication.
  
Test Output: 
    Det error.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SetChannelComMInhibitionStatusDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>731</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2199</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_ComM_SetChannelComMInhibitionStatus_Det_InhibitionToCh_Failure_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_1/source/application/Tests.c</sourcefile>
      <sourceline>806</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that when interpartition communication initiated by calls to
    ComM_LimitChannelToNoComMode fails, then a DET is reported.
  
Test Object: None.
Test Precondition: 
    Users/channels/inhibition configured Os partitions are different.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Alow communication.
    03: Simulate inhibition to channel interpartition communication error.
    04: Call ComM_LimitChannelToNoComMode for channel 0, to set limitation to TRUE.
    05: Call main functions, simulate RTE communication.
    06: Check that interpartition communication was attempted.
    07: VP (ComM.EB.InhibitionToChannelSetError):
        Check Det error was set to COMM_E_INHIBITION_TO_CH_DATASET_ERROR.
  
Test Input: 
    Failed inhibition to channel interpartition communication.
  
Test Output: 
    Det error.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.InhibitionToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>740</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2200</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_ComM_SetChannelComMInhibitionStatus_Det_InhibitionToCh_Failure_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_1/source/application/Tests.c</sourcefile>
      <sourceline>878</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that when interpartition communication initiated by calls to
    ComM_LimitChannelToNoComMode fails, then a DET is reported.
  
Test Object: None.
Test Precondition: 
    Users/channels/inhibition configured Os partitions are different.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Alow communication.
    03: Simulate inhibition to channel interpartition communication error.
    04: Call ComM_LimitChannelToNoComMode for channel 0 to set limitation to FALSE.
    05: Call main functions, simulate RTE communication.
    06: Check that interpartition communication was attempted.
    07: VP (ComM.EB.InhibitionToChannelSetError):
        Check Det error was set to COMM_E_INHIBITION_TO_CH_DATASET_ERROR.
  
Test Input: 
    Failed inhibition to channel interpartition communication.
  
Test Output: 
    Det error.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.InhibitionToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>740</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2201</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_ComM_SetChannelComMInhibitionStatus_Det_InhibitionToCh_Failure_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_1/source/application/Tests.c</sourcefile>
      <sourceline>950</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that when interpartition communication initiated by calls to
    ComM_PreventWakeUp fails, then a DET is reported.
  
Test Object: None.
Test Precondition: 
    Users/channels/inhibition configured Os partitions are different.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Alow communication.
    03: Simulate inhibition to channel interpartition communication error.
    04: Call ComM_PreventWakeUp for channel 0 to enable prevent wakeup.
    05: Call main functions, simulate RTE communication.
    06: Check that interpartition communication was attempted.
    07: VP (ComM.EB.InhibitionToChannelSetError):
        Check Det error was set to COMM_E_INHIBITION_TO_CH_DATASET_ERROR.
  
Test Input: 
    Failed inhibition to channel interpartition communication.
  
Test Output: 
    Det error.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.InhibitionToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>740</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2202</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_ComM_SetChannelComMInhibitionStatus_Det_InhibitionToCh_Failure_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_1/source/application/Tests.c</sourcefile>
      <sourceline>1022</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that when interpartition communication initiated by calls to
    ComM_PreventWakeUp fails, then a DET is reported.
  
Test Object: None.
Test Precondition: 
    Users/channels/inhibition configured Os partitions are different.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Alow communication.
    03: Simulate inhibition to channel interpartition communication error.
    04: Call ComM_PreventWakeUp for channel 0 to disable prevent wakeup.
    05: Call main functions, simulate RTE communication.
    06: Check that interpartition communication was attempted.
    07: VP (ComM.EB.InhibitionToChannelSetError):
        Check Det error was set to COMM_E_INHIBITION_TO_CH_DATASET_ERROR.
  
Test Input: 
    Failed inhibition to channel interpartition communication.
  
Test Output: 
    Det error.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.InhibitionToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>740</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2203</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_PreventWakeUp_True</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_1/source/application/Tests.c</sourcefile>
      <sourceline>1094</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case state machine is in NO_COM_REQUEST_PENDING state, and 
    ComM_PreventWakeUp is called with status TRUE, ComM channel state is set to 
    COMM_NO_COM_NO_PENDING_REQUEST. Test shall also prove intercommunication between channel to
    inhibition, and inhibition to channels partitions.
  
Test Object: None.
Test Precondition: 
    Channels/inhibition configured Os partitions are different.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Call main functions, simulate RTE communication.
    03: Request COMM_FULL_COMMUNICATION for all users.
    04: Call main functions, simulate RTE communication.
    05: VP (ComM.ASR403.SWS_ComM_00156, ComM.SWS_ComM_00470):
        Call ComM_PreventWakeUp for channels to enable prevent wakeup.
    06: VP (ComM.EB.ChannelToInhibitionCrossPartition):
        Check that communication occurs between channel to inhibition partitions.
    07: Call main functions, simulate RTE communication.
    08: VP (ComM.EB.ChannelToInhibitionCrossPartition):
        Check data was received on inhibition partition.
    09: VP (ComM.EB.InhibitionToChannelCrossPartition):
        Check that communication occurs between inhibition to channel partitions.
    10: Call main functions, simulate RTE communication.
    11: VP (ComM.EB.InhibitionToChannelCrossPartition):
        Check data was received on channels partitions.
    12: Check states of channels to be COMM_NO_COM_NO_PENDING_REQUEST.
  
Test Input: 
    Calls to ComM_PreventWakeUp when in full communication.
  
Test Output: 
    Interpartition communication between channels to inhibition and inhibition to channels.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00470</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ChannelToInhibitionCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.InhibitionToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>729</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2204</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_PreventWakeUp_False</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_1/source/application/Tests.c</sourcefile>
      <sourceline>1250</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case state machine is in NO_COM_REQUEST_PENDING state, and 
    ComM_PreventWakeUp is called with status FALSE, ComM channel state is set to 
    COMM_NO_COM_REQUEST_PENDING.  Test shall also prove intercommunication between channel to
    inhibition, and inhibition to channels partitions.
  
Test Object: None.
Test Precondition: 
    Users and channels are on separate Os partitions.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Call main functions, simulate RTE communication.
    03: Request COMM_FULL_COMMUNICATION for all users.
    04: Call main functions, simulate RTE communication.
    05: VP (ComM.ASR403.SWS_ComM_00156, ComM.SWS_ComM_00470):
        Call ComM_PreventWakeUp for channels to disable prevent wakeup.
    06: VP (ComM.EB.ChannelToInhibitionCrossPartition):
        Check that communication occurs between channel to inhibition partitions.
    07: Call main functions, simulate RTE communication.
    08: VP (ComM.EB.ChannelToInhibitionCrossPartition):
        Check data was received on inhibition partition.
    09: VP (ComM.EB.InhibitionToChannelCrossPartition):
        Check that communication occurs between inhibition to channel partitions.
    10: Call main functions, simulate RTE communication.
    11: VP (ComM.EB.InhibitionToChannelCrossPartition):
        Check data was received on channels partitions.
    12: Check states of channels to be COMM_NO_COM_REQUEST_PENDING.
  
Test Input: 
    Calls to ComM_PreventWakeUp when in full communication.
  
Test Output: 
    Interpartition communication between channels to inhibition and inhibition to channels.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00470</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ChannelToInhibitionCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.InhibitionToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>729</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2205</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_PreventWakeUp_True_Det_ChToInhibition_Failure</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_1/source/application/Tests.c</sourcefile>
      <sourceline>1406</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall check det errors are reported if interpartition communication 
    fails during a ComM_PreventWakeUp called.
  
Test Object: None.
Test Precondition: 
    Channels/inhibition configured Os partitions are different.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Call main functions, simulate RTE communication.
    03: Request COMM_FULL_COMMUNICATION for user 0.
    04: Call main functions, simulate RTE communication.
    05: Simulate channel to inhibition interpartition communication error.
    06: Call ComM_PreventWakeUp for channel 0 to enable prevent wakeup.
    07: Check that interpartition communication was attempted.
    08: VP (ComM.EB.ChannelToInhibitionDataSetError):
        Check Det error was set to COMM_E_CH_TO_INHIBITION_DATASET_ERROR.
    09: Call main functions, simulate RTE communication.
    10: Check no additional interpartition communication is done.
  
Test Input: 
    Failed channel to inhibition interpartition communication.
  
Test Output: 
    Det error.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToInhibitionDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>737</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2206</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_PreventWakeUp_False_Det_ChToInhibition_Failure</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_1/source/application/Tests.c</sourcefile>
      <sourceline>1491</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall check det errors are reported if interpartition communication 
    fails during a ComM_PreventWakeUp called.
  
Test Object: None.
Test Precondition: 
    Channels/inhibition configured Os partitions are different.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Call main functions, simulate RTE communication.
    03: Request COMM_FULL_COMMUNICATION for user 0.
    04: Call main functions, simulate RTE communication.
    05: Simulate channel to inhibition interpartition communication error.
    06: Call ComM_PreventWakeUp for channel 0 to disable prevent wakeup.
    07: Check that interpartition communication was attempted.
    08: VP (ComM.EB.ChannelToInhibitionDataSetError):
        Check Det error was set to COMM_E_CH_TO_INHIBITION_DATASET_ERROR.
    09: Call main functions, simulate RTE communication.
    10: Check no additional interpartition communication is done.
  
Test Input: 
    Failed channel to inhibition interpartition communication.
  
Test Output: 
    Det error.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToInhibitionDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>737</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2207</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_ComM_ClearUserRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_1/source/application/Tests.c</sourcefile>
      <sourceline>1576</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test checks that after an user enters full communication then when limit to 
    no communication is set on its channels then the user enters no communication.
    Checks also the communication interpartition between channel and user partition.
  
Test Object: None.
Test Precondition: 
    Users/channels/inhibition configured Os partitions are different.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Alow communication.
    03: Call main functions, simulate RTE communication.
    04: Request COMM_FULL_COMMUNICATION for users 0.
    05: Vp (ComM.EB.UserToChannelCrossPartition):
        Check that communication occurs between user to channel partitions.
    06: Call main functions, simulate RTE communication.
    07: Vp (ComM.EB.UserToChannelCrossPartition):
        Check data was received on channel partition.
    08: Simulate COMM_FULL_COMMUNICATION bussm mode indication.
    09: Check state of channel 0 is COMM_FULL_COM_NETWORK_REQUESTED.
    10: Call ComM_LimitChannelToNoComMode to enable limit to no communication on channel 0.
    11: Call main functions, simulate RTE communication twice(communication to inhibition partition).
    12: Go to sleep mode.
    13: Simulate COMM_NO_COMMUNICATION bussm mode indication.
    14: Check that communication didn't occur between channel to user partition.
    15: Call main functions, simulate RTE communication.
    16: Vp (ComM.EB.ChannelToUserCrossPartition):
        Check that communication occurs between channel to user partition.
    17: Check state of channel 0 is COMM_NO_COM_NO_PENDING_REQUEST.
    18: Call main functions, simulate RTE communication.
    19: Vp (ComM.EB.ChannelToUserCrossPartition):
        Check data was received on user partition.
    20: Vp (ComM.EB.UserToChannelCrossPartition):
        Check that communication occurs between user to channel partition.
    21: Call main functions, simulate RTE communication.
    22: Vp (ComM.EB.UserToChannelCrossPartition):
        Check data was received on channel partition.
  
Test Input: 
    State transitions of ComM channel 0.
  
Test Output: 
    Interpartition communication between channels to users and users to channels.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>724</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ChannelToUserCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2208</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_ComM_ClearUserRequest_Det_ChToUser_Failure</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_1/source/application/Tests.c</sourcefile>
      <sourceline>1727</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that det error is reported on channel to user interpartition communication failure.
  
Test Object: None.
Test Precondition: 
    Users/channels/inhibition configured Os partitions are different.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Alow communication.
    03: Call main functions, simulate RTE communication.
    04: Request COMM_FULL_COMMUNICATION for users 0.
    05: Call main functions, simulate RTE communication.
    06: Simulate COMM_FULL_COMMUNICATION bussm mode indication.
    07: Check state of channel 0 is COMM_FULL_COM_NETWORK_REQUESTED.
    08: Call ComM_LimitChannelToNoComMode to enable limit to no communication on channel 0.
    09: Call main functions, simulate RTE communication twice(communication to inhibition partition).
    10: Go to sleep mode.
    11: Simulate COMM_NO_COMMUNICATION bussm mode indication.
    12: Simulate channel to user interpartition communication error.
    13: Call main functions, simulate RTE communication.
    14: VP (ComM.EB.ChannelToUserSetError):
        Check Det error was set to COMM_E_CH_TO_USER_DATASET_ERROR.
  
Test Input: 
    Failed channel to user interpartition communication.
  
Test Output: 
    Det error.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToUserSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>741</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2209</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_ComM_ClearUserRequest_Det_UserToCh_Failure</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_1/source/application/Tests.c</sourcefile>
      <sourceline>1838</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that det error is reported on user to channel interpartition communication failure.
  
Test Object: None.
Test Precondition: 
    Users/channels/inhibition configured Os partitions are different.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Alow communication.
    03: Call main functions, simulate RTE communication.
    04: Request COMM_FULL_COMMUNICATION for users 0.
    05: Call main functions, simulate RTE communication.
    06: Simulate COMM_FULL_COMMUNICATION bussm mode indication.
    07: Check state of channel 0 is COMM_FULL_COM_NETWORK_REQUESTED.
    08: Call ComM_LimitChannelToNoComMode to enable limit to no communication on channel 0.
    09: Call main functions, simulate RTE communication twice(communication to inhibition partition).
    10: Go to sleep mode.
    11: Simulate COMM_NO_COMMUNICATION bussm mode indication.
    12: Call main functions, simulate RTE communication.
    13: Simulate user to channel interpartition communication error.
    14: Call main functions, simulate RTE communication.
    15: VP (ComM.EB.ChannelToUserDataGetSIDError):
        Check Det error was set to COMM_E_USER_TO_CH_DATASET_ERROR.
  
Test Input: 
    Failed channel to user interpartition communication.
  
Test Output: 
    Det error.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToUserDataGetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>730</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2210</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_100_MC_RX_EIRA</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_100_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>68</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case EIRA RX signal is configured and signal is received 
    ComM pnc goes to full communication
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx eira signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Set Rx Buffer
    03: Simulate Rx EIRA
    04: VP(ComM.EB.SignalToMasterPncEIRACrossPartition) 
        Check that PNC is in full communication
  
Test Input: 
   - simulate RX EIRA
  
Test Output: 
   - Pnc is waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncEIRACrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2211</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_SAME_PARTITION_CH_ACTIVE</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_100_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>147</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the signal is on the same partition as master pnc and
    in case ERA RX ACTIVE signal is configured and signal is received 
    ComM pnc goes to full communication
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx era signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Set Rx Buffer
    03: Simulate Rx ERA
    04: VP(ComM.EB.SignalToMasterPncERACrossPartition) 
        Check that PNC is in full communication
  
Test Input: 
   - rx era is simulated
  
Test Output: 
   - Pnc is waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncERACrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2212</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_SAME_PARTITION_CH_PASSIVE</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_100_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>226</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the signal is on the same partition as master pnc and
    in case ERA RX PASSIVE signal is configured and signal is received 
    ComM pnc goes to full communication
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx era signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Set Rx Buffer
    03: Simulate Rx ERA
    04: VP(ComM.EB.SignalToMasterPncERACrossPartition) 
        Check that PNC is in full communication
  
Test Input: 
   - rx era is simulated
  
Test Output: 
   - Pnc is waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncERACrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2213</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_DIFFERENT_PARTITION_CH_ACTIVE</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_100_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>305</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the signal is on diffrrent partition as master pnc and
    in case ERA RX ACTIVE signal is configured and signal is received 
    ComM pnc goes to full communication
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx era signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Set Rx Buffer
    03: Simulate Rx ERA
    04: VP(ComM.EB.SignalToMasterPncERACrossPartition) 
        Check that PNC is in full communication
  
Test Input: 
   - rx era is simulated
  
Test Output: 
   - Pnc is waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncERACrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2214</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_DIFFERENT_PARTITION_CH_PASSIVE</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_100_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>384</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the signal is on diffrrent partition as master pnc and
    in case ERA RX PASSIVE signal is configured and signal is received 
    ComM pnc goes to full communication
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx era signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Set Rx Buffer
    03: Simulate Rx ERA
    04: VP(ComM.EB.SignalToMasterPncERACrossPartition) 
        Check that PNC is in full communication
  
Test Input: 
   - rx era is simulated
  
Test Output: 
   - Pnc is waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncERACrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2215</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_100_MC_RX_EIRA_REC_SIGNAL_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_100_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>463</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case EIRA RX signal is configured and signal is received and Com_ReceiveSignal returns E_NOT_OK
    ComM pnc stays in no communication
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx eira signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Set Receive signal to return E_NOT_OK
    03: Set Rx Buffer
    04: Simulate Rx EIRA
    05: VP(ComM.EB.ReceiveSignalReturnsValueDiffrentThanEOK) 
        Check that PNC is in no communication
  
Test Input: 
   - simulate RX EIRA
  
Test Output: 
   - Pnc is not waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ReceiveSignalReturnsValueDiffrentThanEOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>722</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2216</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_SAME_PARTITION_CH_ACTIVE_REC_SIGNAL_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_100_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>547</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the signal is on the same partition as master pnc and
    in case ERA RX ACTIVE signal is configured and signal is received and Com_ReceiveSignal returns E_NOT_OK
    ComM pnc stays in no communication
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx era signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Set Receive signal to return E_NOT_OK
    03: Set Rx Buffer
    04: Simulate Rx ERA
    05: VP(ComM.EB.ReceiveSignalReturnsValueDiffrentThanEOK) 
        Check that PNC is in no communication
  
Test Input: 
   - rx era is simulated
  
Test Output: 
   - Pnc is not waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ReceiveSignalReturnsValueDiffrentThanEOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>722</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2217</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_SAME_PARTITION_CH_PASSIVE_REC_SIGNAL_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_100_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>631</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the signal is on the same partition as master pnc and
    in case ERA RX PASSIVE signal is configured and signal is received and Com_ReceiveSignal returns E_NOT_OK
    ComM pnc stays in no communication
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx era signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Set Receive signal to return E_NOT_OK
    03: Set Rx Buffer
    04: Simulate Rx ERA
    05: VP(ComM.EB.ReceiveSignalReturnsValueDiffrentThanEOK) 
        Check that PNC is in no communication
  
Test Input: 
   - rx era is simulated
  
Test Output: 
   - Pnc is not waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ReceiveSignalReturnsValueDiffrentThanEOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>722</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2218</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_DIFFERENT_PARTITION_CH_ACTIVE_REC_SIGNAL_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_100_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>714</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the signal is on diffrrent partition as master pnc and
    in case ERA RX ACTIVE signal is configured and signal is received and Com_ReceiveSignal returns E_NOT_OK
    ComM pnc stays in no communication
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx era signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Set Receive signal to return E_NOT_OK
    03: Set Rx Buffer
    04: Simulate Rx ERA
    05: VP(ComM.EB.ReceiveSignalReturnsValueDiffrentThanEOK) 
        Check that PNC is in no communication
  
Test Input: 
   - rx era is simulated
  
Test Output: 
   - Pnc is not waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ReceiveSignalReturnsValueDiffrentThanEOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>722</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2219</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_DIFFERENT_PARTITION_CH_PASSIVE_REC_SIGNAL_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_100_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>798</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the signal is on diffrrent partition as master pnc and
    in case ERA RX PASSIVE signal is configured and signal is received and Com_ReceiveSignal returns E_NOT_OK
    ComM pnc stays in no communication
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx era signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Set Receive signal to return E_NOT_OK
    03: Set Rx Buffer
    04: Simulate Rx ERA
    05: VP(ComM.EB.ReceiveSignalReturnsValueDiffrentThanEOK) 
        Check that PNC is in no communication
  
Test Input: 
   - rx era is simulated
  
Test Output: 
   - Pnc is not waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ReceiveSignalReturnsValueDiffrentThanEOK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>722</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2220</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_DIFFERENT_PARTITION_CH_ACTIVE_SET_DATA_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_100_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>881</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Check if the signal is on different partition as master pnc and
    in case ERA RX ACTIVE signal is configured and signal is received and Rx set data returns a value different then SCHM_E_OK
    ComM pnc stays in no communication and det is reported
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx era signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Simulate interpartition communication failure, simulate Data Set error
    03: Set Rx Buffer
    04: Simulate Rx ERA
    05: Check that PNC is in no communication
    06: VP(ComM.EB.SignalToMasterPncDataSetSIDError, 
          ComM.EB.SignalToMasterPncSetError)
       - Check that det is reported
  
Test Input: 
   - rx era is simulated
  
Test Output: 
   - Pnc is not waken up
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>733</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>743</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2221</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_100_MC_RX_ERA_DIFFERENT_PARTITION_CH_PASSIVE_SET_DATA_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_100_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>976</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Check if the signal is on different partition as master pnc and
    in case ERA RX PASSIVE signal is configured and signal is received and Rx set data returns a data different then SCHM_E_OK
    ComM pnc stays in no communication and det is reported
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx era signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Simulate interpartition communication failure, simulate Data Set error
    03: Set Rx Buffer
    04: Simulate Rx ERA
    05: Check that PNC is in no communication
    06: VP(ComM.EB.SignalToMasterPncDataSetSIDError, 
          ComM.EB.SignalToMasterPncSetError)
       - Check that det is reported
  
Test Input: 
   - rx era is simulated
  
Test Output: 
   - Pnc is not waken up
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>733</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>743</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2222</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_100_MC_TX_SAME_PARTITION</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_100_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>1071</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the signal is on the same partition as master pnc and
    in case ERA RX ACTIVE signal is configured and signal is received 
    ComM pnc goes to full communication and sends the correct TX signals
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx era signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Set Rx Buffer
    03: Simulate Rx ERA
    04: Check that PNC is in full communication
    05: VP(ComM.EB.MasterPncToSignalCrossPartition)
        - check that the correct signals are set
  
Test Input: 
   - rx era is simulated
  
Test Output: 
   - Pnc is waken up
   - correct TX signals are sent
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToSignalCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>716</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2223</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_100_MC_TX_DIFFERENT_PARTITION</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_100_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>1175</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the signal is on the same partition as master pnc and
    in case ERA RX ACTIVE signal is configured and signal is received 
    ComM pnc goes to full communication and sends the correct TX signals
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx era signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Set Rx Buffer
    03: Simulate Rx ERA
    04: Check that PNC is in full communication
    05: VP(ComM.EB.MasterPncToSignalCrossPartition)
        - check that the correct signals are set
  
Test Input: 
   - rx era is simulated
  
Test Output: 
   - Pnc is waken up
   - correct TX signals are sent
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToSignalCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>716</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2224</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_100_MC_TX_ERA_DIFFERENT_PARTITION_SET_DATA_E_NOT_OK</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_100_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>1277</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Check if the signal is on different partition as master pnc and
    in case ERA RX ACTIVE signal is configured and signal is received and Tx set data for returns a value different then SCHM_E_OK
    det is reported and sending the TX message is retried on the next mainfunction
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx era signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Simulate interpartition communication failure, simulate Data Set error
    03: Set Rx Buffer
    04: Simulate Rx ERA
    05: Check that PNC is in full communication
    06: VP(ComM.EB.MasterPncToSignalDataSetSIDError, 
           ComM.EB.MasterPncToSignalSetError)
        - Check that det is reported
    07: Check that SendSignal is reported for the signal for which TX set data returns SCHM_E_OK
    08: Set Tx data set to SCHM_E_OK for the signal which data set failed
    09: Check that sending the signal is retried on the next mainfucntion
    10: Check that send signal is not retried sinf all the signals are sent succesfully
  
Test Input: 
   - rx era is simulated
   - set SCHM_E_NO_DATA as retutn value for a tx data set 
  
Test Output: 
   - Pnc is waken up
   - signal send is retried
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToSignalDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>717</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.MasterPncToSignalSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>744</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2225</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_101_MC_RX_EIRA</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_101_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>69</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case EIRA RX signal is configured and signal is received 
    ComM pnc goes to full communication
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx eira signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Set Rx Buffer
    03: Simulate Rx EIRA
    04: VP(ComM.EB.SignalToMasterPncEIRACrossPartition) 
        Check that PNC is in full communication
  
Test Input: 
   - simulate RX EIRA
  
Test Output: 
   - Pnc is waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncEIRACrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2226</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_101_MC_RX_ERA_SAME_PARTITION_CH_ACTIVE</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_101_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>139</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the signal is on the same partition as master pnc and
    in case ERA RX ACTIVE signal is configured and signal is received 
    ComM pnc goes to full communication
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx era signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Set Rx Buffer
    03: Simulate Rx ERA
    04: VP(ComM.EB.SignalToMasterPncERACrossPartition) 
        Check that PNC is in full communication
  
Test Input: 
   - rx era is simulated
  
Test Output: 
   - Pnc is waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncERACrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2227</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_101_MC_RX_ERA_SAME_PARTITION_CH_PASSIVE</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_101_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>209</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the signal is on the same partition as master pnc and
    in case ERA RX PASSIVE signal is configured and signal is received 
    ComM pnc goes to full communication
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx era signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Set Rx Buffer
    03: Simulate Rx ERA
    04: VP(ComM.EB.SignalToMasterPncERACrossPartition) 
        Check that PNC is in full communication
  
Test Input: 
   - rx era is simulated
  
Test Output: 
   - Pnc is waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncERACrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>720</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2228</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_101_MC_TX_SAME_PARTITION</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_101_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>278</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check if the signal is on the same partition as master pnc and
    in case ERA RX ACTIVE signal is configured and signal is received 
    ComM pnc goes to full communication and sends the correct TX signals
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx era signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Set Rx Buffer
    03: Simulate Rx ERA
    04: Check that PNC is in full communication
    05: VP(ComM.EB.MasterPncToSignalCrossPartition)
        - check that the cortrect signals are set
  
Test Input: 
   - rx era is simulated
  
Test Output: 
   - Pnc is waken up
   - correct TX signals are sent
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToSignalCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>716</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2229</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_102_MC_RX_EIRA</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_102_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case EIRA RX signal is configured and signal is received 
    ComM pnc goes to full communication
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
   - Rx eira signal is configurred  
  
Test Execution: 
    01: Initialize test case
    02: Set Rx Buffer
    03: Simulate Rx EIRA
    04: VP(ComM.EB.SignalToMasterPncEIRACrossPartition) 
        Check that PNC is in full communication
  
Test Input: 
   - simulate RX EIRA
  
Test Output: 
   - Pnc is waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SignalToMasterPncEIRACrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>721</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2230</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_102_MC_TX_SAME_PARTITION</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_102_PncSignals/source/application/Tests.c</sourcefile>
      <sourceline>141</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that if user request full communication PNC state machine goes to full commcunication 
    and sends the correct TX signals
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - at least a pnc is configured
  
Test Execution: 
    01: Initialize test case
    02: Request full communication
    03: Check that PNC is in full communication
    04: VP(ComM.EB.MasterPncToSignalCrossPartition)
        - check that the cortrect signals are set
  
Test Input: 
   - user request full communication
  
Test Output: 
   - Pnc is waken up
   - correct TX signals are sent
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToSignalCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>716</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2231</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_103_MC_USER_PNC_DIRECT_CALL</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_103_UserToMasterPnc/source/application/Tests.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that if a user is on the same partition as the PNC,
    PNC is waken up
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                      App_Core0
   - Inhibition partition:               App_Core1
   - ComMChannel_0:                      App_Core0
   - ComMUser_CH0:                       App_Core0
   - ComMUser_PNC_16_SamePartition:      App_Core0
   - ComMUser_PNC_16_DifferentPartition: App_Core1 
  
Test Execution: 
    01: Initialize test case
    02: Set communication allowed
    03: Request full communication
    04: VP(ComM.EB.UserToMasterPncCrossPartition)
        - Check that Pnc entered Pnc requested state
  
Test Input: 
   - perform user request
  
Test Output: 
   - Pnc is waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToMasterPncCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2232</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_103_MC_USER_PNC_SCHM_CALL</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_103_UserToMasterPnc/source/application/Tests.c</sourcefile>
      <sourceline>122</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that if a user is on diffrent partition as the PNC,
    PNC is waken up
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                      App_Core0
   - Inhibition partition:               App_Core1
   - ComMChannel_0:                      App_Core0
   - ComMUser_CH0:                       App_Core0
   - ComMUser_PNC_16_SamePartition:      App_Core0
   - ComMUser_PNC_16_DifferentPartition: App_Core1 
  
Test Execution: 
    01: Initialize test case
    02: Set communication allowed
    03: Request full communication
    04: VP(ComM.EB.UserToMasterPncCrossPartition)
        - Check that Pnc entered Pnc requested state
  
Test Input: 
   - perform user request
  
Test Output: 
   - Pnc is waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToMasterPncCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2233</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_103_MC_USER_PNC_SCHM_CALL_DATA_SET_ERROR</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_103_UserToMasterPnc/source/application/Tests.c</sourcefile>
      <sourceline>195</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test shall prove that if a user is on diffrent partition as the PNC and Schm data set return a value diffrent then SCHM_E_OK,
    PNC is not waken up and det is reported
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                      App_Core0
   - Inhibition partition:               App_Core1
   - ComMChannel_0:                      App_Core0
   - ComMUser_CH0:                       App_Core0
   - ComMUser_PNC_16_SamePartition:      App_Core0
   - ComMUser_PNC_16_DifferentPartition: App_Core1 
  
Test Execution: 
    01: Initialize test case
    02: Set Test_User_To_MasterPnc_From_App_Core1_To_App_Core0_DataSet_RetVal to return a value diffrent then SCHM_E_OK
    03: Request full communication
    04: VP(ComM.EB.UserToMasterPncCrossPartition)
        - Check that Pnc stays is PNC_NO_COMMUNICATION
    05: VP(ComM.EB.UserToMasterPncDataSetError)
        - Check that DET is reported
  
Test Input: 
   - perform user request
  
Test Output: 
   - Pnc is not waken up
   - Det is reported
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToMasterPncCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2234</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_104_MC_USER_TO_MASTERPNC_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_104_UserToMasterPnc/source/application/Tests.c</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that channel is on partition 0 and user linked to it is on partition0 
    and pnc linked to it is on partition 0 and mode limitation occurs user request is cleared
    and pnc and channel state machine stays in no communication
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                        App_Core0
   - Inhibition partition:                 App_Core0
   - TEST_COMMUSER_0_PARTITION0_PNC16      App_Core0
   - TEST_COMMCHANNEL_0_PARTITION0_PNC16:  App_Core0
  
Test Execution: 
    01: Initialize test case
    02: Set communication allowed
    03: Request COMM_FULL_COMMUNICATION
    04: Check current state is COMM_FULL_COM_NETWORK_REQUESTED
    05: Simulate BusSm COMM_FULL_COMMUNICATION
    06: Check the current pnc state is PNC_REQUESTED
    07: Call limit to no communication
    08: Check current state is COMM_FULL_COM_READY_SLEEP
    09: Simulate Bus Sleep mode
    10: Check current state is COMM_NO_COM_NO_PENDING_REQUEST
    11: Simulate BusSm COMM_NO_COMMUNICATION
    12: VP(ComM.EB.UserToMasterPncCrossPartition)
        - Check current state is PNC_NO_COMMUNICATION 
    13: Remove mode limitation
    14: Check that channel and pnc stays in no communication
  
Test Input: 
   - perform user request
   - limit channel to no communication
   - remove channel limitation
  
Test Output: 
   - channel wakes up
   - pnc wakes up
   - channel and pnc stays in no communication due to channel limitation
   - user request is cleared (channel and pnc stays in no communication even after limitation is removed)
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToMasterPncCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2235</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_104_MC_USER_TO_MASTERPNC_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_104_UserToMasterPnc/source/application/Tests.c</sourcefile>
      <sourceline>189</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that channel is on partition 1 and user linked to it is on partition 1 
    and pnc linked to it is on partition 0 and mode limitation occurs user request is cleared
    and pnc and channel state machine stays in no communication
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                        App_Core0
   - Inhibition partition:                 App_Core0
   - TEST_COMMUSER_1_PARTITION1_PNC17      App_Core1
   - TEST_COMMCHANNEL_1_PARTITION1_PNC17:  App_Core1
  
Test Execution: 
    01: Initialize test case
    02: Set communication allowed
    03: Request COMM_FULL_COMMUNICATION
    04: Check current state is COMM_FULL_COM_NETWORK_REQUESTED
    05: Simulate BusSm COMM_FULL_COMMUNICATION
    06: Check the current pnc state is PNC_REQUESTED
    07: Call limit to no communication
    08: Check current state is COMM_FULL_COM_READY_SLEEP
    09: Simulate Bus Sleep mode
    10: Check current state is COMM_NO_COM_NO_PENDING_REQUEST
    11: Simulate BusSm COMM_NO_COMMUNICATION
    12: VP(ComM.EB.UserToMasterPncCrossPartition)
        - Check current state is PNC_NO_COMMUNICATION 
    13: Remove mode limitation
    14: Check that channel and pnc stays in no communication
  
Test Input: 
   - perform user request
   - limit channel to no communication
   - remove channel limitation
  
Test Output: 
   - channel wakes up
   - pnc wakes up
   - channel and pnc stays in no communication due to channel limitation
   - user request is cleared (channel and pnc stays in no communication even after limitation is removed)
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToMasterPncCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2236</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_104_MC_USER_TO_MASTERPNC_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_104_UserToMasterPnc/source/application/Tests.c</sourcefile>
      <sourceline>330</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that channel is on partition 1 and user linked to it is on partition 1 
    and pnc linked to it is on partition 0 and mode limitation occurs user request is cleared
    and if user to master pnc data set fails pnc remains in full communication
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                        App_Core0
   - Inhibition partition:                 App_Core0
   - TEST_COMMUSER_1_PARTITION1_PNC17      App_Core1
   - TEST_COMMCHANNEL_1_PARTITION1_PNC17:  App_Core1
  
Test Execution: 
    01: Initialize test case
    02: Set communication allowed
    03: Request COMM_FULL_COMMUNICATION
    04: Check current state is COMM_FULL_COM_NETWORK_REQUESTED
    05: Simulate BusSm COMM_FULL_COMMUNICATION
    06: Check the current pnc state is PNC_REQUESTED
    07: Call limit to no communication
    08: Check current state is COMM_FULL_COM_READY_SLEEP
    09: Simulate Bus Sleep mode
    10: Check current state is COMM_NO_COM_NO_PENDING_REQUEST
    11: Simulate BusSm COMM_NO_COMMUNICATION
    12: Set Schm call to return SCHM_E_NO_DATA for user to master pnc
    13: VP(ComM.EB.UserToMasterPncCrossPartition)
        - Check current state is PNC_NO_COMMUNICATION 
    14: VP(ComM.EB.UserToMasterPncDataSetError)
        - check that det is reported
    15: Check that pnc did not changed state
  
Test Input: 
   - perform user request
   - limit channel to no communication
   - set user to pnc data set to return a value diffrent then SCHM_E_OK
   - remove channel limitation
  
Test Output: 
   - channel wakes up
   - pnc wakes up
   - channel and pnc stays in no communication due to channel limitation
   - user request is cleared (channel no communication even after limitation is removed)
   - pnc did not changed state since user to master pnc data set failed
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToMasterPncCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.UserToMasterPncDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>735</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2237</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_104_MC_USER_TO_MASTERPNC_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_104_UserToMasterPnc/source/application/Tests.c</sourcefile>
      <sourceline>477</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that channel is on partition 1 and user linked to it is on partition 0 
    and pnc linked to it is on partition 0 and mode limitation occurs user request is cleared
    and pnc and channel state machine stays in no communication
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                        App_Core0
   - Inhibition partition:                 App_Core0
   - TEST_COMMUSER_2_PARTITION0_PNC18      App_Core0
   - TEST_COMMCHANNEL_2_PARTITION1_PNC18:  App_Core1
  
Test Execution: 
    01: Initialize test case
    02: Set communication allowed
    03: Request COMM_FULL_COMMUNICATION
    04: Check current state is COMM_FULL_COM_NETWORK_REQUESTED
    05: Simulate BusSm COMM_FULL_COMMUNICATION
    06: Check the current pnc state is PNC_REQUESTED
    07: Call limit to no communication
    08: Check current state is COMM_FULL_COM_READY_SLEEP
    09: Simulate Bus Sleep mode
    10: Check current state is COMM_NO_COM_NO_PENDING_REQUEST
    11: Simulate BusSm COMM_NO_COMMUNICATION
    12: VP(ComM.EB.UserToMasterPncCrossPartition)
        - Check current state is PNC_NO_COMMUNICATION 
    13: Remove mode limitation
    14: Check that channel and pnc stays in no communication
  
Test Input: 
   - perform user request
   - limit channel to no communication
   - remove channel limitation
  
Test Output: 
   - channel wakes up
   - pnc wakes up
   - channel and pnc stays in no communication due to channel limitation
   - user request is cleared (channel and pnc stays in no communication even after limitation is removed)
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToMasterPncCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2238</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_104_MC_USER_TO_MASTERPNC_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_104_UserToMasterPnc/source/application/Tests.c</sourcefile>
      <sourceline>611</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that channel is on partition 0 and user linked to it is on partition 1 
    and pnc linked to it is on partition 0 and mode limitation occurs user request is cleared
    and pnc and channel state machine stays in no communication
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                        App_Core0
   - Inhibition partition:                 App_Core0
   - TEST_COMMUSER_3_PARTITION1_PNC19      App_Core1
   - TEST_COMMCHANNEL_3_PARTITION0_PNC19:  App_Core0
  
Test Execution: 
    01: Initialize test case
    02: Set communication allowed
    03: Request COMM_FULL_COMMUNICATION
    04: Check current state is COMM_FULL_COM_NETWORK_REQUESTED
    05: Simulate BusSm COMM_FULL_COMMUNICATION
    06: Check the current pnc state is PNC_REQUESTED
    07: Call limit to no communication
    08: Check current state is COMM_FULL_COM_READY_SLEEP
    09: Simulate Bus Sleep mode
    10: Check current state is COMM_NO_COM_NO_PENDING_REQUEST
    11: Simulate BusSm COMM_NO_COMMUNICATION
    12: VP(ComM.EB.UserToMasterPncCrossPartition)
        - Check current state is PNC_NO_COMMUNICATION 
    13: Remove mode limitation
    14: Check that channel and pnc stays in no communication
  
Test Input: 
   - perform user request
   - limit channel to no communication
   - remove channel limitation
  
Test Output: 
   - channel wakes up
   - pnc wakes up
   - channel and pnc stays in no communication due to channel limitation
   - user request is cleared (channel and pnc stays in no communication even after limitation is removed)
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToMasterPncCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2239</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_104_MC_USER_TO_MASTERPNC_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_104_UserToMasterPnc/source/application/Tests.c</sourcefile>
      <sourceline>752</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that channel is on partition 1 and user linked to it is on partition 1 
    and pnc linked to it is on partition 0 and mode limitation occurs user request is cleared
    and if user to master pnc data set fails pnc remains in full communication
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                        App_Core0
   - Inhibition partition:                 App_Core0
   - TEST_COMMUSER_3_PARTITION1_PNC19      App_Core1
   - TEST_COMMCHANNEL_3_PARTITION0_PNC19:  App_Core0
  
Test Execution: 
    01: Initialize test case
    02: Set communication allowed
    03: Request COMM_FULL_COMMUNICATION
    04: Check current state is COMM_FULL_COM_NETWORK_REQUESTED
    05: Simulate BusSm COMM_FULL_COMMUNICATION
    06: Check the current pnc state is PNC_REQUESTED
    07: Call limit to no communication
    08: Check current state is COMM_FULL_COM_READY_SLEEP
    09: Simulate Bus Sleep mode
    10: Check current state is COMM_NO_COM_NO_PENDING_REQUEST
    11: Simulate BusSm COMM_NO_COMMUNICATION
    12: Set Schm call to return SCHM_E_NO_DATA for user to master pnc
    13: VP(ComM.EB.UserToMasterPncCrossPartition)
        - Check current state is PNC_NO_COMMUNICATION 
    14: VP(ComM.EB.UserToMasterPncDataSetError)
        - check that det is reported
    15: Check that pnc did not changed state
  
Test Input: 
   - perform user request
   - limit channel to no communication
   - set user to pnc data set to return a value diffrent then SCHM_E_OK
   - remove channel limitation
  
Test Output: 
   - channel wakes up
   - pnc wakes up
   - channel and pnc stays in no communication due to channel limitation
   - user request is cleared (channel no communication even after limitation is removed)
   - pnc did not changed state since user to master pnc data set failed
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToMasterPncCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>723</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.UserToMasterPncDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>735</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2240</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_105_MC_CHANNEL_TO_MASTERPNC_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_105_ChannelToMasterPnc/source/application/Tests.c</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that channel is on partition 0 and user linked to it is on partition0 and
    pnc is on partityion 0 and ecum wakeup indication is triggered pnc is waken up
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                        App_Core0
   - TEST_COMMUSER_0_PARTITION0_PNC16      App_Core0
   - TEST_COMMCHANNEL_0_PARTITION0_PNC16:  App_Core0
  
Test Execution: 
    01: Initialize test case
    02: Perform EcuM wakeup indication
    03: VP(ComM.EB.ChannelToMasterPncCrossPartition)
        - check pnc is waken up
  
Test Input: 
   - perform ecum wakeup indication
  
Test Output: 
   - pnc wakes up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToMasterPncCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>726</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2241</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_105_MC_CHANNEL_TO_MASTERPNC_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_105_ChannelToMasterPnc/source/application/Tests.c</sourcefile>
      <sourceline>116</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that channel is on partition 1 and user linked to it is on partition 1 and
    pnc is on partition 0 and ecum wakeup indication is triggered pnc is waken up
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                        App_Core0
   - TEST_COMMUSER_1_PARTITION1_PNC17      App_Core1
   - TEST_COMMCHANNEL_1_PARTITION1_PNC17:  App_Core1
  
Test Execution: 
    01: Initialize test case
    02: Perform EcuM wakeup indication
    03: VP(ComM.EB.ChannelToMasterPncCrossPartition)
        - check pnc is waken up
  
Test Input: 
   - perform ecum wakeup indication
  
Test Output: 
   - pnc wakes up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToMasterPncCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>726</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2242</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_105_MC_CHANNEL_TO_MASTERPNC_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_105_ChannelToMasterPnc/source/application/Tests.c</sourcefile>
      <sourceline>181</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that channel is on partition 1 and user linked to it is on partition 1 and
    pnc is on partition 0 and ecum wakeup indication is trigger fails pnc is not waken up and
    DET is reported.
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                        App_Core0
   - TEST_COMMUSER_1_PARTITION1_PNC17      App_Core1
   - TEST_COMMCHANNEL_1_PARTITION1_PNC17:  App_Core1
  
Test Execution: 
    01: Initialize test case
    02: Perform EcuM wakeup indication
    03: Simulate interpartition communication failure, simulate Data Set error      
    04: VP(ComM.EB.ChannelToMasterPncCrossPartition, 
           ComM.EB.ChannelToMasterPncDataSetError)
        - check pnc is waken up
        - DET is reported
  
Test Input: 
   - perform ecum wakeup indication
   - data set fails
  
Test Output: 
   - pnc not waken up
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToMasterPncCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>726</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ChannelToMasterPncDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>739</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2243</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_106_MC_MASTERPNC_TO_CHANNEL_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_106_MasterPncToChannel/source/application/Tests.c</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case ComM_1_MasterPnc_EcuM_PNCWakeUpIndication
    is called all channels are waken up passively.
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                        App_Core0
   - TEST_COMMUSER_0_PARTITION0_PNC16      App_Core0
   - TEST_COMMCHANNEL_0_PARTITION0_PNC16:  App_Core0
   - TEST_COMMUSER_1_PARTITION1_PNC17      App_Core1
   - TEST_COMMCHANNEL_1_PARTITION1_PNC17:  App_Core1  
   - ComMSynchronousWakeUp = true
  
Test Execution: 
    01: Initialize test case
    02: Perform EcuM_PNCWakeUpIndication
    03: VP(ComM.EB.MasterPncToChannelCrossPartition)
        - Check that channels are waken up
  
Test Input: 
   - perform ecum pnc wakeup indication
  
Test Output: 
   - all channels are waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2244</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_106_MC_MASTERPNC_TO_CHANNEL_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_106_MasterPncToChannel/source/application/Tests.c</sourcefile>
      <sourceline>133</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case ComM_1_MasterPnc_EcuM_PNCWakeUpIndication is called and
    after that user is requested channels are waken up actively and also passive startup is called.
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                        App_Core0
   - TEST_COMMUSER_0_PARTITION0_PNC16      App_Core0
   - TEST_COMMCHANNEL_0_PARTITION0_PNC16:  App_Core0
   - TEST_COMMUSER_1_PARTITION1_PNC17      App_Core1
   - TEST_COMMCHANNEL_1_PARTITION1_PNC17:  App_Core1  
   - ComMSynchronousWakeUp = true
  
Test Execution: 
    01: Initialize test case
    02: Perform EcuM_PNCWakeUpIndication
    03: VP(ComM.EB.MasterPncToChannelCrossPartition)
        - Check that channels are waken up pasively
  
Test Input: 
   - perform ecum wakeup indication
  
Test Output: 
   - all channels are waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2245</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_106_MC_MASTERPNC_TO_CHANNEL_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_106_MasterPncToChannel/source/application/Tests.c</sourcefile>
      <sourceline>217</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case ComM_1_MasterPnc_EcuM_PNCWakeUpIndication is called 
    and schm return a value diffrent then SCHM_E_OK channel is not waken up and DET is reported
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                        App_Core0
   - TEST_COMMUSER_0_PARTITION0_PNC16      App_Core0
   - TEST_COMMCHANNEL_0_PARTITION0_PNC16:  App_Core0
   - TEST_COMMUSER_1_PARTITION1_PNC17      App_Core1
   - TEST_COMMCHANNEL_1_PARTITION1_PNC17:  App_Core1  
   - ComMSynchronousWakeUp = true
  
Test Execution: 
    01: Initialize test case
    02: Simulate interpartition communication failure, simulate Data Set error
    03: Perform EcuM_PNCWakeUpIndication
    04: - Check channel TEST_COMMCHANNEL_0_PARTITION0_PNC16 is waken up
        - Check channel TEST_COMMCHANNEL_1_PARTITION1_PNC17 is not waken up
    05: VP(ComM.EB.MasterPncToChannelSetError)
        - Check DET is reported
  
Test Input: 
   - perform ecum wakeup indication
  
Test Output: 
   - all channels are waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>742</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2246</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_107_MC_MASTERPNC_TO_CHANNEL_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_107_MasterPncToChannel/source/application/Tests.c</sourcefile>
      <sourceline>57</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case ComM_1_MasterPnc_EcuM_PNCWakeUpIndication
    is called all channels are waken up passively.
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                        App_Core0
   - TEST_COMMUSER_0_PARTITION0_PNC16      App_Core0
   - TEST_COMMCHANNEL_0_PARTITION0_PNC16:  App_Core0
   - TEST_COMMUSER_1_PARTITION1_PNC17      App_Core1
   - TEST_COMMCHANNEL_1_PARTITION1_PNC17:  App_Core1  
   - ComMSynchronousWakeUp = false
  
Test Execution: 
    01: Initialize test case
    02: Perform EcuM_PNCWakeUpIndication
    03: VP(ComM.EB.MasterPncToChannelCrossPartition)
        - Check that channels are waken up pasively
  
Test Input: 
   - perform ecum pnc wakeup indication
  
Test Output: 
   - all channels are waken up pasively
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2247</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_107_MC_MASTERPNC_TO_CHANNEL_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_107_MasterPncToChannel/source/application/Tests.c</sourcefile>
      <sourceline>132</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case ComM_1_MasterPnc_EcuM_PNCWakeUpIndication is called and
    after that user is requested channels are waken up actively and also passive startup is called.
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                        App_Core0
   - TEST_COMMUSER_0_PARTITION0_PNC16      App_Core0
   - TEST_COMMCHANNEL_0_PARTITION0_PNC16:  App_Core0
   - TEST_COMMUSER_1_PARTITION1_PNC17      App_Core1
   - TEST_COMMCHANNEL_1_PARTITION1_PNC17:  App_Core1  
   - ComMSynchronousWakeUp = false
  
Test Execution: 
    01: Initialize test case
    02: Perform EcuM_PNCWakeUpIndication
    03: VP(ComM.EB.MasterPncToChannelCrossPartition)
        - Check that channels are waken up pasively
  
Test Input: 
   - perform ecum wakeup indication
  
Test Output: 
   - all channels are waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2248</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_107_MC_MASTERPNC_TO_CHANNEL_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_107_MasterPncToChannel/source/application/Tests.c</sourcefile>
      <sourceline>227</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case ComM_1_MasterPnc_EcuM_PNCWakeUpIndication is called 
    and schm return a value diffrent then SCHM_E_OK channel is not waken up and DET is reported
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                        App_Core0
   - TEST_COMMUSER_0_PARTITION0_PNC16      App_Core0
   - TEST_COMMCHANNEL_0_PARTITION0_PNC16:  App_Core0
   - TEST_COMMUSER_1_PARTITION1_PNC17      App_Core1
   - TEST_COMMCHANNEL_1_PARTITION1_PNC17:  App_Core1  
   - ComMSynchronousWakeUp = false
  
Test Execution: 
    01: Initialize test case
    02: Simulate interpartition communication failure, simulate Data Set error
    03: Perform EcuM_PNCWakeUpIndication
    04: Check channel TEST_COMMCHANNEL_0_PARTITION0_PNC16 is waken up
        Check channel TEST_COMMCHANNEL_1_PARTITION1_PNC17 is not waken up
    05: VP(ComM.EB.MasterPncToChannelSetError)
        - Check DET is reported
  
Test Input: 
   - perform ecum wakeup indication
  
Test Output: 
   - all channels are waken up which do not need crose core communication
   - DET is reported for channels which need cross core communication
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>742</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2249</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_108_MC_MASTERPNC_TO_CHANNEL_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_108_MasterPncToChannel/source/application/Tests.c</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case ComM_1_MasterPnc_EcuM_PNCWakeUpIndication for a PNC which contains a channel
    which has a managing channel both managed an managing channels are waken up passively
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                          App_Core0
   - TEST_COMMUSER_0_PARTITION0_PNC16_PNC18: App_Core0
   - TEST_COMMCHANNEL_0_PARTITION0_PNC16:    App_Core0
   - TEST_COMMCHANNEL_2_PARTITION0_PNC18:    App_Core0
   - ComMSynchronousWakeUp = false
  
Test Execution: 
    01: Initialize test case
    02: Perform EcuM_PNCWakeUpIndication
    03: VP(ComM.EB.MasterPncToChannelCrossPartition)
        - Check that channels are waken up pasively
  
Test Input: 
   - perform ecum pnc wakeup indication
  
Test Output: 
   - channels are waken up pasively
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2250</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_108_MC_MASTERPNC_TO_CHANNEL_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_108_MasterPncToChannel/source/application/Tests.c</sourcefile>
      <sourceline>130</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case ComM_1_MasterPnc_EcuM_PNCWakeUpIndication for a PNC which contains a channel
    which has a managing channel both managed an managing channels are waken up 
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                          App_Core0
   - TEST_COMMUSER_1_PARTITION1_PNC17_PNC19: App_Core1
   - TEST_COMMUSER_0_PARTITION0_PNC16_PNC18: App_Core0
   - TEST_COMMCHANNEL_0_PARTITION0_PNC16:    App_Core0
   - TEST_COMMCHANNEL_2_PARTITION0_PNC18:    App_Core0    
   - TEST_COMMCHANNEL_1_PARTITION1_PNC17:    App_Core1
   - TEST_COMMCHANNEL_3_PARTITION1_PNC19:    App_Core1
   - ComMSynchronousWakeUp = false
  
Test Execution: 
    01: Initialize test case
    02: Perform EcuM_PNCWakeUpIndication
    03: VP(ComM.EB.MasterPncToChannelCrossPartition)
        - Check that channels are waken
  
Test Input: 
   - perform ecum pnc wakeup indication
  
Test Output: 
   - channels are waken up
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2251</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_108_MC_MASTERPNC_TO_CHANNEL_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_108_MasterPncToChannel/source/application/Tests.c</sourcefile>
      <sourceline>220</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case ComM_1_MasterPnc_EcuM_PNCWakeUpIndication is called 
    and schm return a value diffrent then SCHM_E_OK channel is not waken up and DET is reported
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                          App_Core0
   - TEST_COMMUSER_1_PARTITION1_PNC17_PNC19: App_Core1
   - TEST_COMMUSER_0_PARTITION0_PNC16_PNC18: App_Core0
   - TEST_COMMCHANNEL_0_PARTITION0_PNC16:    App_Core0
   - TEST_COMMCHANNEL_2_PARTITION0_PNC18:    App_Core0    
   - TEST_COMMCHANNEL_1_PARTITION1_PNC17:    App_Core1
   - TEST_COMMCHANNEL_3_PARTITION1_PNC19:    App_Core1 
   - ComMSynchronousWakeUp = false
  
Test Execution: 
    01: Initialize test case
    02: Simulate interpartition communication failure, simulate Data Set error
    03: Perform EcuM_PNCWakeUpIndication
    04: - Check channel TEST_COMMCHANNEL_0_PARTITION0_PNC16 is waken up
        - Check channel TEST_COMMCHANNEL_1_PARTITION1_PNC17 is not waken up
        - Check channel TEST_COMMCHANNEL_2_PARTITION0_PNC18 is waken up
        - Check channel TEST_COMMCHANNEL_3_PARTITION1_PNC19 is not waken up
    05: VP(ComM.EB.MasterPncToChannelSetError)
        - Check DET is reported
  
Test Input: 
   - perform ecum wakeup indication
  
Test Output: 
   - all channels are waken up which do not need crose core communication
   - DET is reported for channels which need cross core communication
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>742</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2252</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_108_MC_MASTERPNC_TO_CHANNEL_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_108_MasterPncToChannel/source/application/Tests.c</sourcefile>
      <sourceline>329</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case ComM_1_MasterPnc_EcuM_PNCWakeUpIndication for a PNC which contains a channel
    which has a managing channel, managing channels are waken up
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                 App_Core0
   - TEST_COMMCHANNEL_4_PARTITION1  App_Core1
   - TEST_COMMCHANNEL_5_PARTITION1  App_Core1
   - TEST_COMMCHANNEL_6_PARTITION1  App_Core1
   - TEST_COMMCHANNEL_7_PARTITION0  App_Core0
   - TEST_COMMCHANNEL_8_PARTITION0  App_Core0
   - TEST_COMMCHANNEL_9_PARTITION0  App_Core0
   - ComMSynchronousWakeUp = false
  
Test Execution: 
    01: Initialize test case
    02: Perform EcuM_PNCWakeUpIndication
    03: VP(ComM.EB.MasterPncToChannelCrossPartition)
        - Check that channels are waken up pasively
  
Test Input: 
   - perform ecum pnc wakeup indication
  
Test Output: 
   - channels are waken
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2253</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_108_MC_MASTERPNC_TO_CHANNEL_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_108_MasterPncToChannel/source/application/Tests.c</sourcefile>
      <sourceline>408</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case ComM_1_MasterPnc_EcuM_PNCWakeUpIndication is called 
    and schm return a value diffrent then SCHM_E_OK channel is not waken up and DET is reported
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                 App_Core0
   - TEST_COMMCHANNEL_4_PARTITION1  App_Core1
   - TEST_COMMCHANNEL_5_PARTITION1  App_Core1
   - TEST_COMMCHANNEL_6_PARTITION1  App_Core1
   - TEST_COMMCHANNEL_7_PARTITION0  App_Core0
   - TEST_COMMCHANNEL_8_PARTITION0  App_Core0
   - TEST_COMMCHANNEL_9_PARTITION0  App_Core0
   - ComMSynchronousWakeUp = false
  
Test Execution: 
    01: Initialize test case
    02: Simulate interpartition communication failure, simulate Data Set error
    03: Perform EcuM_PNCWakeUpIndication
    04: VP(ComM.EB.MasterPncToChannelSetError)
        - Check DET is reported
  
Test Input: 
   - perform ecum wakeup indication
  
Test Output: 
   - all channels are waken up which do not need crose core communication
   - DET is reported for channels which need cross core communication
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>742</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2254</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_109_MC_MASTERPNC_TO_CHANNEL_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_109_MasterPncToChannel/source/application/Tests.c</sourcefile>
      <sourceline>56</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case a direct user linked to channel request full communication
    channel goes to full communication, test also proves that in case user is linked via a pnc
    to a channel, channel state machine calls network request even if channel is in full communication.
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                          App_Core0
   - TEST_COMMCHANNEL_0_PARTITION0_PNC16     App_Core0
   - TEST_COMMUSER_0_PARTITION0_PNC16        App_Core0
   - TEST_COMMUSER_2_PARTITION0_DIRECT       App_Core0
   - ComMPncNmRequest is set to true
  
Test Execution: 
    01: Initialize test case
    02: Set communication allowed
    03: Request full communication for the user directly linked to channe;
    04: VP(ComM.EB.MasterPncToChannelCrossPartition)
        - Check that channel has reached full communication
    05: Request Full communication for user which is linked trough pnc to the channel
    06: Check network request has been called
  
Test Input: 
   - user linked directly to channel is requested
   - user linked to channel via pnc is requested
  
Test Output: 
   - channel wakes up actively
   - network request is called (when pnc enters pnc requested state)
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2255</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_109_MC_MASTERPNC_TO_CHANNEL_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_109_MasterPncToChannel/source/application/Tests.c</sourcefile>
      <sourceline>138</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case a direct user linked to channel request full communication
    channel goes to full communication, test also proves that in case user is linked via a pnc
    to a channel, channel state machine calls network request even if channel is in full communication.
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                          App_Core0
   - TEST_COMMCHANNEL_1_PARTITION1_PNC17     App_Core1
   - TEST_COMMUSER_1_PARTITION1_PNC17        App_Core1
   - TEST_COMMUSER_3_PARTITION1_DIRECT       App_Core1
   - ComMPncNmRequest is set to true
  
Test Execution: 
    01: Initialize test case
    02: Set communication allowed
    03: Request full communication for the user directly linked to channe;
    04: VP(ComM.EB.MasterPncToChannelCrossPartition)
        - Check that channel has reached full communication
    05: Request Full communication for user which is linked trough pnc to the channel
    06: Check network request has been called
  
Test Input: 
   - user linked directly to channel is requested
   - user linked to channel via pnc is requested
  
Test Output: 
   - channel wakes up actively
   - network request is called (when pnc enters pnc requested state)
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2256</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_109_MC_MASTERPNC_TO_CHANNEL_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_109_MasterPncToChannel/source/application/Tests.c</sourcefile>
      <sourceline>224</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case multicore communication between master pnc and channel fails
    DET is reported anc channel is not waken up.
  
Test Object: None.
Test Precondition: 
   - Pnc partition:                          App_Core0
   - TEST_COMMCHANNEL_1_PARTITION1_PNC17     App_Core1
   - TEST_COMMUSER_1_PARTITION1_PNC17        App_Core1
   - TEST_COMMUSER_3_PARTITION1_DIRECT       App_Core1
   - ComMPncNmRequest is set to true
  
Test Execution: 
    01: Initialize test case
    02: Set MasterPnc_To_Ch_From_App_Core0_To_App_Core1_DataSet_RetVal to return SCHM_E_NO_DATA
    03: Set communication allowed
    04: Request Full communication for user which is linked trough pnc to the channel
    05: VP(ComM.EB.MasterPncToChannelCrossPartition)
        - Check that channel has is in no communication
    06: Check network request has been not been called
    07: VP(ComM.EB.MasterPncToChannelSetError)
        - Check that DET is reported
  
Test Input: 
   - set multicore master pnc to channel function to return a value diffrent then SCHM_E_OK
   - user linked to channel via pnc is requested
  
Test Output: 
   - channel does not wakes up
   - network request is not called
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>742</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PncMainfunctionDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>732</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2257</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_110_Top_Level_Coordinator_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_110_SynchronusShutDown/source/application/Tests.c</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case a PNC changes from PNC_REQUESTED to a different state
    and ComMSynchronizedPncShutdownEnabled is enabled and curtrent PNC is a top level
    coordinator Nm_RequestSynchronizedPncShutdown is called
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - ComMSynchronizedPncShutdownEnabled isa set to true
   - PNC with id 17 is a top level coordinator 
     (has only channels with ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE)
   - a channel is on the on the same partition as master pnc
   - a channel is on the on a different partition than master pnc
  
Test Execution: 
    01: Initialize test
    02: Intialize module
    03: Request Full communication
    04: Check that PNC state machine reached FULL_COMMUNICATION
    05: Request No communication
    06: Check that PNC state machine reached No_COMMUNICATION
    07: VP(ComM.ASR21-11.SWS_ComM_01083, ComM.EB.MasterPncToChannelCrossPartition)
        - check that Nm_RequestSynchronizedPncShutdown has been called with correct parameters
  
Test Input: 
   - Request PNC with id 17
   - Release PNC with id 17
  
Test Output: 
   - PNC state machine enters COMM_FULL_COMMUNICATION
   - PNC state machine enters COMM_NO_COMMUNICATION
   - Nm_RequestSynchronizedPncShutdown is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR21-11.SWS_ComM_01083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2258</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_110_Top_Level_Coordinator_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_110_SynchronusShutDown/source/application/Tests.c</sourcefile>
      <sourceline>151</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case a PNC changes from PNC_REQUESTED to a different state
    and ComMSynchronizedPncShutdownEnabled is enabled and curtrent PNC is a top level
    coordinator Nm_RequestSynchronizedPncShutdown is called and if multicore communication fails
    det is reported
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - ComMSynchronizedPncShutdownEnabled isa set to true
   - PNC with id 17 is a top level coordinator 
     (has only channels with ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE)
   - a channel is on the on the same partition as master pnc
   - a channel is on the on a different partition than master pnc
  
Test Execution: 
    01: Initialize test
    02: Set Test_MasterPnc_To_Ch_From_App_Core0_To_App_Core1_DataSet_RetVal to return a 
        value diferent than SCHM_E_OK 
    03: Intialize module
    04: Request Full communication
    05: Check that PNC state machine reached FULL_COMMUNICATION
    06: Request No communication
    07: Check that PNC state machine reached No_COMMUNICATION
    08: VP(ComM.EB.MasterPncToChannelSetError, ComM.EB.PncMainfunctionDataSetSIDError)
        - check det is reported
  
Test Input: 
   - Request PNC with id 17
   - Release PNC with id 17
  
Test Output: 
   - PNC state machine enters COMM_FULL_COMMUNICATION
   - PNC state machine enters COMM_NO_COMMUNICATION
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>742</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PncMainfunctionDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>732</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2259</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_110_Top_Level_Coordinator_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_110_SynchronusShutDown/source/application/Tests.c</sourcefile>
      <sourceline>254</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case a PNC changes from PNC_REQUESTED to a different state
    and ComMSynchronizedPncShutdownEnabled is enabled and curtrent PNC is a top level
    coordinator Nm_RequestSynchronizedPncShutdown is called
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - ComMSynchronizedPncShutdownEnabled isa set to true
   - PNC with id 18 is a top level coordinator 
     (has only channels with ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE)
   - a channel is on the on the same partition as master pnc
   - a channel is on the on a different partition than master pnc
  
Test Execution: 
    01: Initialize test
    02: Intialize module
    03: Request Full communication
    04: Check that PNC state machine reached FULL_COMMUNICATION
    05: Request No communication
    06: Check that PNC state machine reached No_COMMUNICATION
    07: VP(ComM.ASR21-11.SWS_ComM_01083, ComM.EB.MasterPncToChannelCrossPartition)
        - check that Nm_RequestSynchronizedPncShutdown has been called with correct parameters
  
Test Input: 
   - Request PNC with id 18
   - Release PNC with id 18
  
Test Output: 
   - PNC state machine enters COMM_FULL_COMMUNICATION
   - PNC state machine enters COMM_NO_COMMUNICATION
   - Nm_RequestSynchronizedPncShutdown
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR21-11.SWS_ComM_01083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2260</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_110_Top_Level_Coordinator_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_110_SynchronusShutDown/source/application/Tests.c</sourcefile>
      <sourceline>347</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case a PNC changes from PNC_REQUESTED to a different state
    and ComMSynchronizedPncShutdownEnabled is enabled and curtrent PNC is a top level
    coordinator Nm_RequestSynchronizedPncShutdown is called and if multicore communication fails
    det is reported
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - ComMSynchronizedPncShutdownEnabled isa set to true
   - PNC with id 18 is a top level coordinator 
     (has only channels with ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE)
   - a channel is on the on the same partition as master pnc
   - a channel is on the on a different partition than master pnc
  
Test Execution: 
    01: Initialize test
    02: Set Test_MasterPnc_To_Ch_From_App_Core0_To_App_Core1_DataSet_RetVal to return a 
        value diferent than SCHM_E_OK 
    03: Intialize module
    04: Request Full communication
    05: Check that PNC state machine reached FULL_COMMUNICATION
    06: Request No communication
    07: Check that PNC state machine reached No_COMMUNICATION
    08: VP(ComM.EB.MasterPncToChannelSetError, ComM.EB.PncMainfunctionDataSetSIDError)
        - check det is reported
  
Test Input: 
   - Request PNC with id 18
   - Release PNC with id 18
  
Test Output: 
   - PNC state machine enters COMM_FULL_COMMUNICATION
   - PNC state machine enters COMM_NO_COMMUNICATION
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>742</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PncMainfunctionDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>732</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2261</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_110_Intermediate_Coordinator_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_110_SynchronusShutDown/source/application/Tests.c</sourcefile>
      <sourceline>450</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Check that in case a PNC is in PNC_REQUESTED state and
    a channel idicates ComM_Nm_ForwardSynchronizedPncShutdown, 
    Nm_RequestSynchronizedPncShutdown is not called
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - ComMSynchronizedPncShutdownEnabled isa set to true
   - PNC with id 16 is an intermediate coordinator 
     (has channels with ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE and COMM_GATEWAY_TYPE_PASSIVE)
  
Test Execution: 
    01: Initialize test
    02: Intialize module
    03: Request Full communication
    04: Check that PNC state machine reached FULL_COMMUNICATION
    05: passive channel indicates ComM_Nm_ForwardSynchronizedPncShutdown
    06: VP (ComM.EB_Ref.ASR21-11.SWS_ComM_01082.Nm_RequestSynchronizedPncShutdown, ComM.EB_Ref.ASR21-11.SWS_ComM_01082.COMM_PNC_REQUESTED.To.COMM_PNC_READY_SLEEP)
        - Nm_RequestSynchronizedPncShutdown is not called
  
Test Input: 
   - Request PNC with id 16
  
Test Output: 
   - PNC state machine enters COMM_FULL_COMMUNICATION
   - Nm_RequestSynchronizedPncShutdown is not called
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01082.Nm_RequestSynchronizedPncShutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01082.COMM_PNC_REQUESTED.To.COMM_PNC_READY_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2262</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_110_Intermediate_Coordinator_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_110_SynchronusShutDown/source/application/Tests.c</sourcefile>
      <sourceline>532</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Check that in case a PNC is in a state different then PNC_REQUESTED state and
    a channel idicates ComM_Nm_ForwardSynchronizedPncShutdown, 
    Nm_RequestSynchronizedPncShutdown is called for the active channels
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - ComMSynchronizedPncShutdownEnabled isa set to true
   - PNC with id 16 is an intermediate coordinator 
     (has channels with ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE and COMM_GATEWAY_TYPE_PASSIVE)
  
Test Execution: 
    01: Initialize test
    02: Intialize module
    03: Check that PNC state machine is in FULL_NO_COMMUNICATION
    04: passive channel indicates ComM_Nm_ForwardSynchronizedPncShutdown
    05: VP (ComM.EB_Ref.ASR21-11.SWS_ComM_01082.Nm_RequestSynchronizedPncShutdown, ComM.EB_Ref.ASR21-11.SWS_ComM_01082.COMM_PNC_REQUESTED.To.COMM_PNC_READY_SLEEP)
        - Nm_RequestSynchronizedPncShutdown is called
  
Test Input: 
   - Request PNC with id 16
  
Test Output: 
   - PNC state machine enters COMM_FULL_COMMUNICATION
   - Nm_RequestSynchronizedPncShutdown is not called
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01082.Nm_RequestSynchronizedPncShutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01082.COMM_PNC_REQUESTED.To.COMM_PNC_READY_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2263</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_110_Intermediate_Coordinator_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_110_SynchronusShutDown/source/application/Tests.c</sourcefile>
      <sourceline>615</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Check that in case a PNC is in a state different then PNC_REQUESTED state and
    a channel idicates ComM_Nm_ForwardSynchronizedPncShutdown, 
    Nm_RequestSynchronizedPncShutdown is called for the active channels
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - ComMSynchronizedPncShutdownEnabled isa set to true
   - PNC with id 16 is an intermediate coordinator 
     (has channels with ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE and COMM_GATEWAY_TYPE_PASSIVE)
  
Test Execution: 
    01: Initialize test
    02: Intialize module
    03: Check that PNC state machine is in FULL_NO_COMMUNICATION
    04: passive channel indicates ComM_Nm_ForwardSynchronizedPncShutdown
    05: VP (ComM.EB_Ref.ASR21-11.SWS_ComM_01082.Nm_RequestSynchronizedPncShutdown, ComM.EB_Ref.ASR21-11.SWS_ComM_01082.COMM_PNC_REQUESTED.To.COMM_PNC_READY_SLEEP)
        - Nm_RequestSynchronizedPncShutdown is called
  
Test Input: 
   - Request PNC with id 16
  
Test Output: 
   - PNC state machine enters COMM_FULL_COMMUNICATION
   - Nm_RequestSynchronizedPncShutdown is not called
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01082.Nm_RequestSynchronizedPncShutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>580</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01082.COMM_PNC_REQUESTED.To.COMM_PNC_READY_SLEEP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>581</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2264</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_110_Intermediate_Coordinator_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_110_SynchronusShutDown/source/application/Tests.c</sourcefile>
      <sourceline>690</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case a PNC is not in PNC REQUESTED state
    and ComMSynchronizedPncShutdownEnabled is enabled and ComM_Nm_ForwardSynchronizedPncShutdown 
    is called and if multicore communication fails det is reported
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - ComMSynchronizedPncShutdownEnabled isa set to true
   - PNC with id 16 is not a top level coordinator
   - a channel is on the on a different partition than master pnc
     and channel hase ComMPncGatewayType set to COMM_GATEWAY_TYPE_PASSIVE
  
Test Execution: 
    01: Initialize test
    02: Set Test_SynchShutDownCh_To_MasterPnc_From_App_Core1_To_App_Core0_DataSet_RetVal to return a 
        value different than SCHM_E_OK
    03: Intialize module
    04: Check that PNC state machine reached No_COMMUNICATION
    05: passive channel indicates ComM_Nm_ForwardSynchronizedPncShutdown
    06: VP(ComM.ASR21-11.SWS_ComM_91030, ComM.EB.ChannelToMasterPncDataSetError)
        - check det is reported
  
Test Input: 
   - call ComM_Nm_ForwardSynchronizedPncShutdown
  
Test Output: 
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR21-11.SWS_ComM_91030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ChannelToMasterPncDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>739</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2265</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_110_Intermediate_Coordinator_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_110_SynchronusShutDown/source/application/Tests.c</sourcefile>
      <sourceline>773</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case a PNC is in any other state then PNC_REQUESTED and ComM_Nm_ForwardSynchronizedPncShutdown
    is called and intrer partition communication fails, det is reported
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - ComMSynchronizedPncShutdownEnabled isa set to true
   - PNC with id 16 is a intermediate coordinator 
   - a channel is on the on a different partition than master pnc
  
Test Execution: 
    01: Initialize test
    02: Set Test_MasterPnc_To_Ch_From_App_Core0_To_App_Core1_DataSet_RetVal to return a 
        value different than SCHM_E_OK
    03: Intialize module
    04: Check that PNC state machine reached NO_COMMUNICATION
    05: passive channel indicates ComM_Nm_ForwardSynchronizedPncShutdown
    06: VP(ComM.EB.MasterPncToChannelSetError, ComM.EB.PncMainfunctionDataSetSIDError)
        - check det is reported
  
Test Input: 
   - call ComM_Nm_ForwardSynchronizedPncShutdown
  
Test Output: 
   - DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>742</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PncMainfunctionDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>732</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2266</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_110_Intermediate_Coordinator_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_110_SynchronusShutDown/source/application/Tests.c</sourcefile>
      <sourceline>858</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case a PNC changes from PNC_REQUESTED to a different state
    and ComMSynchronizedPncShutdownEnabled is enabled and current PNC is not a top level
    coordinator Nm_RequestSynchronizedPncShutdown is not called
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - ComMSynchronizedPncShutdownEnabled isa set to true
   - PNC with id 16 is a not top level coordinator
  
Test Execution: 
    01: Initialize test
    02: Intialize module
    03: Request Full communication
    04: Check that PNC state machine reached FULL_COMMUNICATION
    05: Request No communication
    06: Check that PNC state machine reached No_COMMUNICATION
    07: VP(ComM.ASR21-11.SWS_ComM_01083, ComM.EB.MasterPncToChannelCrossPartition)
        - check that Nm_RequestSynchronizedPncShutdown has been called with correct parameters
  
Test Input: 
   - Request PNC with id 16
   - Release PNC with id 16
  
Test Output: 
   - PNC state machine enters COMM_FULL_COMMUNICATION
   - PNC state machine enters COMM_NO_COMMUNICATION
   - Nm_RequestSynchronizedPncShutdown is not called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR21-11.SWS_ComM_01083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2267</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_110_Top_Level_Coordinator_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_111_SynchronusShutDown_TopLevel/source/application/Tests.c</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case a PNC changes from PNC_REQUESTED to a different state
    and ComMSynchronizedPncShutdownEnabled is enabled and current PNC is a top level
    coordinator Nm_RequestSynchronizedPncShutdown is called with PNCid 503
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - ComMSynchronizedPncShutdownEnabled ia set to true
   - PNC with id 503 is a top level coordinator 
     (has only channels with ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE)
   - a channel is on the on the same partition as master pnc
   - a channel is on the on a different partition than master pnc
  
Test Execution: 
    01: Initialize test
    02: Initialize module
    03: Request Full communication
    04: Check that PNC state machine reached FULL_COMMUNICATION
    05: Request No communication
    06: Check that PNC state machine reached NO_COMMUNICATION
    07: VP(ComM.ASR21-11.SWS_ComM_01083, ComM.EB.MasterPncToChannelCrossPartition)
        - check that Nm_RequestSynchronizedPncShutdown has been called with correct parameters
          value 2 is checked since there are two channels assigned to the PNC
  
Test Input: 
   - Request PNC with id 503
   - Release PNC with id 503
  
Test Output: 
   - PNC state machine enters COMM_FULL_COMMUNICATION
   - PNC state machine enters COMM_NO_COMMUNICATION
   - Nm_RequestSynchronizedPncShutdown is called
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR21-11.SWS_ComM_01083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>718</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.Nm_RequestSynchronizedPncShutdown</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2268</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_2_ComM_Notify</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_2/source/application/Tests.c</sourcefile>
      <sourceline>86</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that for channels and users on different partitions, when a
    COMM_FULL_COMMUNICATION request is made for a user, the channels of that
    user enter in COMM_FULL_COM_NETWORK_REQUESTED state.
    Also check DCM is notified when a comm channel state changes.
  
Test Object: None.
Test Precondition: 
    Users/channels configured Os partitions are different.
    Rte notification enabled.
  
Test Execution: 
    01: Reset stubs, initialize ComM, clear inhibition, allow communication.
    02: Call main functions, simulate RTE communication.
    03: Request COMM_FULL_COMMUNICATION for user 0.
    04: Call main functions, simulate RTE communication.
    05: Simulate COMM_FULL_COMMUNICATION bussm mode indication.
    06: Call main functions, simulate RTE communication.
    07: Vp (ComM.EB.ChannelToUserCrossPartition):
        Check that communication occurs between channel to user partition.
    08: Check DCM notification occured.
    09: Call main functions, simulate RTE communication.
    10: Vp (ComM.EB.ChannelToUserCrossPartition):
        Check data was received on user partition.
    11: Request COMM_NO_COMMUNICATION for user 0.
    12: Call main functions, simulate RTE communication.
    13: Simulate COMM_SILENT_COMMUNICATION bussm mode indication.
    14: Call main functions, simulate RTE communication.
    15: Check DCM notification occured.
    16: Simulate COMM_NO_COMMUNICATION bussm mode indication.
    17: Call main functions, simulate RTE communication.
    18: Check DCM notification occured.
  
Test Input: 
    Transition to silent communication, no communication.
  
Test Output: 
    Interpartition communication between channels to user and dcm notification.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToUserCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2269</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_2_ComM_Notify_Det_ChToUser_Failure</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_2/source/application/Tests.c</sourcefile>
      <sourceline>223</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that det error is reported if communication between channel to user
    fails during rte notification.
  
Test Object: None.
Test Precondition: 
    Users/channels configured Os partitions are different.
    Rte notification enabled.
  
Test Execution: 
    01: Reset stubs, initialize ComM, clear inhibition, allow communication.
    02: Call main functions, simulate RTE communication.
    03: Request COMM_FULL_COMMUNICATION for user 0.
    04: Call main functions, simulate RTE communication.
    05: Simulate COMM_FULL_COMMUNICATION bussm mode indication.
    06: Simulate channel to user interpartition communication error.
    07: Call main functions, simulate RTE communication.
    08: Check that interpartition communication was attempted.
    09: VP (ComM.EB.ChannelToUserSetError):
        Check Det error was set to COMM_E_CH_TO_USER_DATASET_ERROR.
  
Test Input: 
    Failed channel to user interpartition communication.
  
Test Output: 
    Det error.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToUserSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>741</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2270</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_ComM_EcuM_WakeUpIndication</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_3/source/application/Tests.c</sourcefile>
      <sourceline>86</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM interpartition communication during a transition from 
    no communication to Full communication triggered by a Passive wakeup using
    ComM_EcuM_WakeUpIndication(), when the ComMNmVariant is FULL.
  
Test Object: None.
Test Precondition: 
    Channels configured Os partitions are different.
    Bus synchronization enabled.
  
Test Execution: 
    01: Reset stubs, initialize ComM, allow communication.
    02: Call main functions, simulate RTE communication.
    03: Call ComM_EcuM_WakeUpIndication for channel 0.
    04: Vp (ComM.EB.ChannelToChannelCrossPartition):
        Check that communication occurs between channels partitions.
    05: Reset Nm_PassiveStartUp stub.
    06: Call main functions, simulate RTE communication.
    07: Vp (ComM.EB.ChannelToChannelCrossPartition):
        Check data was received on channel partition.
    08: Call main functions, simulate RTE communication.
    09: Check Nm_PassiveStartUp stub count is 7(number of channels).
  
Test Input: 
    ComM_EcuM_WakeUpIndication call.
  
Test Output: 
    Interpartition communication between channels.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2271</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_ComM_EcuM_WakeUpIndication_Det_ChToCh_Failure</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_3/source/application/Tests.c</sourcefile>
      <sourceline>180</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that det error is reported on channel to channel interpartition communication failure
    from ComM_EcuM_WakeUpIndication(), when the ComMNmVariant is FULL.
  
Test Object: None.
Test Precondition: 
    Channels configured Os partitions are different.
    Bus synchronization enabled.
  
Test Execution: 
    01: Reset stubs, initialize ComM, clear inhibition, allow communication.
    02: Call main functions, simulate RTE communication.
    03: Simulate channel to channel interpartition communication error.
    04: Call ComM_EcuM_WakeUpIndication for channel 0.
    05: Check that interpartition communication was attempted.
    06: VP (ComM.EB.ChannelToChannelDataSetError):
        Check Det error was set to COMM_E_CH_TO_CH_DATASET_ERROR.
  
Test Input: 
    Failed channel to channel interpartition communication.
  
Test Output: 
    Det error.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToChannelDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>738</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2272</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_ComM_EcuM_WakeUpIndication_ManagedChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_4/source/application/Tests.c</sourcefile>
      <sourceline>86</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM interpartition communication during a transition from 
    no communication to Full communication triggered by a Passive wakeup using
    ComM_EcuM_WakeUpIndication(), on a managed channel.
  
Test Object: None.
Test Precondition: 
    Channels configured Os partitions are different.
    Bus synchronization is disabled. One channel is managed.
  
Test Execution: 
    01: Reset stubs, initialize ComM, allow communication.
    02: Call main functions, simulate RTE communication.
    03: Call ComM_EcuM_WakeUpIndication for managed channel.
    04: Vp (ComM.EB.ChannelToChannelCrossPartition):
        Check that communication occurs between channels partitions.
    05: Reset Nm_PassiveStartUp stub.
    06: Call main functions, simulate RTE communication.
    07: Vp (ComM.EB.ChannelToChannelCrossPartition):
        Check data was received on managing channel partition.
    08: Call main functions, simulate RTE communication.
    09: Check Nm_PassiveStartUp stub count is 1(number of managing channels).
  
Test Input: 
    ComM_EcuM_WakeUpIndication call on a managed channel.
  
Test Output: 
    Interpartition communication between managed and managing channels.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2273</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_1_ComM_EcuM_WakeUpIndication_ManagedChannel_Det_ChToCh_Failure</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_4/source/application/Tests.c</sourcefile>
      <sourceline>173</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that det error is reported on channel to channel interpartition communication failure
    from ComM_EcuM_WakeUpIndication(), on a managed channel.
  
Test Object: None.
Test Precondition: 
    Channels configured Os partitions are different.
    Bus synchronization is disabled. One channel is managed.
  
Test Execution: 
    01: Reset stubs, initialize ComM, clear inhibition, allow communication.
    02: Call main functions, simulate RTE communication.
    03: Simulate channel to channel interpartition communication error.
    04: Call ComM_EcuM_WakeUpIndication for managed channel.
    05: Check that interpartition communication was attempted.
    06: VP (ComM.EB.ChannelToChannelDataSetError):
        Check Det error was set to COMM_E_CH_TO_CH_DATASET_ERROR.
  
Test Input: 
    Failed channel to channel interpartition communication.
  
Test Output: 
    Det error.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToChannelDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>738</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2274</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_5_RequestComMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_5/source/application/Tests.c</sourcefile>
      <sourceline>86</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that for channels and users on same or different partitions, 
    when a COMM_FULL_COMMUNICATION request is made for a user, the channels of that
    user enter in COMM_FULL_COM_NETWORK_REQUESTED state.
  
Test Object: None.
Test Precondition: 
    Channels 1,3,6, users 3,4, inhibition and master pnc handling are on same partition,
    the other channels/users are on separate partition.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Check ComM status is COMM_INIT and mode is COMM_NO_COMMUNICATION.
    03: Clear inhibition to all channels, allow communication.
    04: VP (ComM.EB.SWS_ComM_00110, ComM.EB.UserToChannelCrossPartition):
        Request COMM_FULL_COMMUNICATION for users 0,1,2, and check that interpartition communication
        occurs between the requested users and its channels if they are on different partitions, and 
        no communication occurs for other users/channels.
    05: Check that no communication occurs between user to inhibition partitions.
    06: Call main functions, simulate RTE communication.
    07: VP (ComM.EB.UserToChannelCrossPartition):
        Check data was received on channels partitions that belong to users that have been requested
        to COMM_FULL_COMMUNICATION and that are not on the same partition as the requested users.
    08: Check no data was received on channels partitions that don't belong to users that have been
        requested to COMM_FULL_COMMUNICATION.
    09: Check no communication occured between users and inhibition partitions.
    10: Check states of channels that belong to users that have been requested to 
        COMM_FULL_COMMUNICATION to be COMM_FULL_COM_NETWORK_REQUESTED, and 
        COMM_NO_COM_NO_PENDING_REQUEST for the other channels.
    11: VP (ComM.EB.SWS_ComM_00110, ComM.EB.UserToChannelCrossPartition):
        Request COMM_FULL_COMMUNICATION for users 3,4,PNC, and check that interpartition communication
        occurs between the requested users and its channels if they are on different partitions, and 
        no communication occurs for other users/channels.
    12: Call main functions, simulate RTE communication.
    13: VP (ComM.EB.UserToChannelCrossPartition):
        Check data was received on channels partitions that belong to users that have been requested
        to COMM_FULL_COMMUNICATION and that are not on the same partition as the requested users.
    14: Check states of channels to be COMM_FULL_COM_NETWORK_REQUESTED.
  
Test Input: 
    COMM_FULL_COMMUNICATION requests.
  
Test Output: 
    Interpartition communication user to channel, and user to inhibition.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>724</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2275</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_5_LimitChannelToNoComMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_5/source/application/Tests.c</sourcefile>
      <sourceline>330</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test shall prove that when a COMM_FULL_COMMUNICATION request is made for an
    user, and channels of that user are limited to no communication, then those
    channels remain in no communication.
  
Test Object: None.
Test Precondition: 
    Channels 1,3,6, users 3,4, inhibition and master pnc handling are on same partition,
    the other channels/users are on separate partition.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Allow communication.
    03: Limit channels 0,2,4,5 to no communication.
    04: VP (ComM.EB.ChannelToInhibitionCrossPartition):
        Check interpartition communication between limited channels to inhibition partitions occured.
    05: Call main functions, simulate RTE communication.
    06: VP (ComM.EB.ChannelToInhibitionCrossPartition):
        Check data was received on inhibition partition from limited channels.
    07: Request communication for all users.
    08: VP (ComM.EB.UserToInhibitionCrossPartition):
        Check interpartition communication between users to inhibition partitions occured.
    09: Call main functions, simulate RTE communication.
    10: VP (ComM.EB.UserToInhibitionCrossPartition):
        Check data was received on inhibition partition from user partitions.
    11: Chekc comm states for channels 0,2,4,5 are COMM_NO_COMMUNICATION, and states for channels 1,3,6 are COMM_FULL_COM_NETWORK_REQUESTED. 
  
Test Input: 
    COMM_FULL_COMMUNICATION requests on channels with limit to no communication set to true. 
  
Test Output: 
    Interpartition communication between channel to inhibition, user to inhibition partitions for
    channels/users/inhibition different partitions.
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToInhibitionCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.UserToInhibitionCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>728</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2276</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_5_PreventWakeUp_True</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_5/source/application/Tests.c</sourcefile>
      <sourceline>470</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case state machine is in
    NO_COM_REQUEST_PENDING state, and ComM_PreventWakeUp
    is called with status TRUE, ComM channel state is set to
    COMM_NO_COM_NO_PENDING_REQUEST.
  
Test Object: None.
Test Precondition: 
    Channels 1,3,6, users 3,4, inhibition and master pnc handling are on same partition,
    the other channels/users are on separate partition.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Call main functions, simulate RTE communication.
    03: Request COMM_FULL_COMMUNICATION for all users.
    04: Call main functions, simulate RTE communication.
    05: VP (ComM.ASR403.SWS_ComM_00156, ComM.SWS_ComM_00470):
        Call ComM_PreventWakeUp for channels to enable prevent wakeup.
    06: VP (ComM.EB.ChannelToInhibitionCrossPartition):
        Check that communication occurs between channel to inhibition partitions if
        those partitions are different.
    07: Call main functions, simulate RTE communication.
    08: VP (ComM.EB.ChannelToInhibitionCrossPartition):
        Check data was received on inhibition partition.
    09: VP (ComM.EB.InhibitionToChannelCrossPartition):
        Check that communication occurs between inhibition to channel partitions if
        those partitions are different.
    10: Call main functions, simulate RTE communication.
    11: VP (ComM.EB.InhibitionToChannelCrossPartition):
        Check data was received on channels partitions.
    12: Check states of channels to be COMM_NO_COM_NO_PENDING_REQUEST. 
  
Test Input: 
    Calls to ComM_PreventWakeUp when in full communication.
  
Test Output: 
    Interpartition communication between channels to inhibition and inhibition to channels, for
    different channels/inhibition partitions.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToInhibitionCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.InhibitionToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>729</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2277</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_5_PreventWakeUp_False</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_5/source/application/Tests.c</sourcefile>
      <sourceline>616</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that in case state machine is in
    NO_COM_REQUEST_PENDING state, and ComM_PreventWakeUp
    is called with status FALSE, ComM channel state is set to
    COMM_NO_COM_REQUEST_PENDING.
  
Test Object: None.
Test Precondition: 
    Channels 1,3,6, users 3,4, inhibition and master pnc handling are on same partition,
    the other channels/users are on separate partition.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Call main functions, simulate RTE communication.
    03: Request COMM_FULL_COMMUNICATION for all users.
    04: Call main functions, simulate RTE communication.
    05: Call ComM_PreventWakeUp for channels to disable prevent wakeup.
    06: VP (ComM.EB.ChannelToInhibitionCrossPartition):
        Check that communication occurs between channel to inhibition partitions if
        those partitions are different.
    07: Call main functions, simulate RTE communication.
    08: VP (ComM.EB.ChannelToInhibitionCrossPartition):
        Check data was received on inhibition partition.
    09: VP (ComM.EB.InhibitionToChannelCrossPartition):
        Check that communication occurs between inhibition to channel partitions if
        those partitions are different.
    10: Call main functions, simulate RTE communication.
    11: VP (ComM.EB.InhibitionToChannelCrossPartition):
        Check data was received on channels partitions.
    12: Check states of channels to be COMM_NO_COM_REQUEST_PENDING. 
  
Test Input: 
    Calls to ComM_PreventWakeUp when in full communication.
  
Test Output: 
    Interpartition communication between channels to inhibition and inhibition to channels.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToInhibitionCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.InhibitionToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>729</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2278</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_5_ComM_ClearUserRequest_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_5/source/application/Tests.c</sourcefile>
      <sourceline>760</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test checks that after an user enters full communication then when limit to 
    no communication is set on its channels then the user enters no communication.
    Checks also the communication interpartition between chanel and user partition.
  
Test Object: None.
Test Precondition: 
    Channels 1,3,6, users 3,4, inhibition and master pnc handling are on same partition,
    the other channels/users are on separate partition.
  
Test Execution: 
    01: Reset stubs, initialize ComM.
    02: Alow communication.
    03: Call main functions, simulate RTE communication.
    04: Request COMM_FULL_COMMUNICATION for user 3.
    05: Vp (ComM.EB.UserToChannelCrossPartition):
        Check that communication occurs between user to channel partitions if
        those partitions are different.
    06: Call main functions, simulate RTE communication.
    07: Vp (ComM.EB.UserToChannelCrossPartition):
        Check data was received on channel partition.
    08: Simulate COMM_FULL_COMMUNICATION bussm mode indication.
    09: Check state of channels of user 3 are COMM_FULL_COM_NETWORK_REQUESTED.
    10: Call ComM_LimitChannelToNoComMode to enable limit to no communication on channels 3,4,5.
    11: Call main functions, simulate RTE communication twice(communication to inhibition partition).
    12: Go to sleep mode.
    13: Simulate COMM_NO_COMMUNICATION bussm mode indication.
    14: Vp (ComM.EB.ChannelToUserCrossPartition):
        Check that communication occurs between channel to user partition if
        those partitions are different.
    15: Call main functions, simulate RTE communication.
    16: Check state of channels 3,4,5 are COMM_NO_COM_NO_PENDING_REQUEST.
    17: Vp (ComM.EB.UserToChannelCrossPartition):
        Check that communication occurs between user to channel partition if
        those partitions are different.
    18: Call main functions, simulate RTE communication.
    19: Vp (ComM.EB.ChannelToUserCrossPartition):
        Check data was received on user partition.
    20: Vp (ComM.EB.UserToChannelCrossPartition):
        Check data was received on user partition.
    21: Vp (ComM.EB.UserToChannelCrossPartition):
        Check that communication occurs between user to channel partition if
        those partitions are different.
    22: Call main functions, simulate RTE communication.
    23: Vp (ComM.EB.UserToChannelCrossPartition):
        Check data was received on channel partition.
  
Test Input: 
    State transitions of ComM channel 0.
  
Test Output: 
    Interpartition communication between channels to users and users to channels.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>724</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ChannelToUserCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2279</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_5_ComM_ClearUserRequest_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_5/source/application/Tests.c</sourcefile>
      <sourceline>961</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test checks that after an user enters full communication then when limit to 
    no communication is set on one of it's channel.
    User request is not cleared since not all the users are in No Communication
  
Test Object: None.
Test Precondition: 
    User 6 is on channel partition 1
    Channel 7 is on channel partition 0
    Channel 8 is on channel partition 0
    Channel 9 is on channel partition 1
    Channel 10 is on channel partition 1
  
Test Execution: 
    01: Initlize stubs and module
    02: Allow full communication
    03: Call Mainfunctions
    04: Request Full Communication
    05: Check that inter partition communication Occured
    06: Call Mainfunctions
    07:  Check that inter partition communication Occured
    08: Chekc comm states for channels of user 6 are COMM_FULL_COM_NETWORK_REQUESTED
    09: BusSm indicates full Communication
    10: Call Limit To No Communication for Channel 7
    11: Call Mainfunctions
    12: Go to Silent Communication
    13: Go to no Communication
    14: BusSm indicates No Communication
    15: Call Mainfunctions
    16: Check inter partition communication from user partition to channel partition did not occured since not all the channels of the
        users are in no communication
    17: Call Mainfunctions
    18: Check States
    19: Relese limitation
    20: Check states
  
Test Input: 
    State transitions of channels linked to User 6.
  
Test Output: 
    Interpartition communication between channels to users and users to channels.
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>724</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ChannelToUserCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2280</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_5_ComM_ClearUserRequest_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_5/source/application/Tests.c</sourcefile>
      <sourceline>1130</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test checks that in case channels linked to a user (User 6) are limited
    to no communication channels enter no communication.
    And while the same channels are linked to a different user (User 7) and this user
    has some extra channels which are not limited to no communication.
    User 7 request is not cleared since not all tghe channels are in no communication
  
Test Object: None.
Test Precondition: 
    User 6 is on channel partition 1
    Channel 7 is on channel partition 0
    Channel 8 is on channel partition 0
    Channel 9 is on channel partition 1
    Channel 10 is on channel partition 1
    
    User 7 is on channel partition 1
    Channel 7 is on channel partition 0
    Channel 8 is on channel partition 0
    Channel 9 is on channel partition 1
    Channel 10 is on channel partition 1    
    Channel 11 is on channel partition 0
    Channel 12 is on channel partition 0    
  
Test Execution: 
    01: Initlize stubs and module
    02: Allow full communication
    03: Call Mainfunctions
    04: Request Full Communication
    05: Check that inter partition communication Occured
    06: Call Mainfunctions
    07:  Check that inter partition communication Occured
    08: Check comm states for channels of user 6 are COMM_FULL_COM_NETWORK_REQUESTED
    09: BusSm indicates full Communication
    10: Call Limit To No Communication for Channel 7,8,9,10
    11: Call Mainfucntions
    12: Go to Silent Communication
    13: Call mainfunctions
    14: Go to no Communication
    15: Call mainfunctions
    16: BusSm indicates No Communication
    17: Call Mainfunction
    18: Check inter partition communication from user partition to channel partition did not occured since not all the channels of the
        users are in no communication
    19: Call Mainfunction
    20: Check States
    21: Relese limitation
    22: Call mainfunctions
    23: Check states
  
Test Input: 
    State transitions of channels linked to User 6.
  
Test Output: 
    Interpartition communication between channels to users and users to channels.
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>724</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ChannelToUserCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2281</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_5_ComM_ClearUserRequest_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_5/source/application/Tests.c</sourcefile>
      <sourceline>1348</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test checks that after an user enters full communication then when limit to 
    no communication is set on all of it's channel.
    User request is cleared since channels of user are in No Communication
  
Test Object: None.
Test Precondition: 
    User 6 is on channel partition 1
    Channel 7 is on channel partition 0
    Channel 8 is on channel partition 0
    Channel 9 is on channel partition 1
    Channel 10 is on channel partition 1
  
Test Execution: 
    01: Initlize stubs and module
    02: Allow full communication
    03: Call Mainfunctions
    04: Request Full Communication
    05: Check that inter partition communication Occured
    06: Call Mainfunctions
    07:  Check that inter partition communication Occured
    08: Check comm states for channels of user 6 are COMM_FULL_COM_NETWORK_REQUESTED
    09: BusSm indicates full Communication
    10: Call Limit To No Communication for Channel 7
    11: Call Mainfucntions
    12: Go to Silent Communication
    13: Call Mainfunctions
    14: Go to no Communication
    15: Call Mainfunctions
    16: BusSm indicates No Communication
    17: Call mainfunctions
    18: Check inter partition communication occured
    19: Check States
  
Test Input: 
    State transitions of channels linked to User 6.
  
Test Output: 
    Interpartition communication between channels to users and users to channels.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>724</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ChannelToUserCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2282</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_5_ComM_ClearUserRequest_Det_UserToCh_Failure</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_5/source/application/Tests.c</sourcefile>
      <sourceline>1509</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that det error is reported on user to channel interpartition communication failure.
  
Test Object: None.
Test Precondition: 
    Channels 1,3,6, users 3,4, inhibition and master pnc handling are on same partition,
    the other channels/users are on separate partition.
  
Test Execution: 
    01: Reset stubs, initialize ComM, allow communication.
    02: Call main functions, simulate RTE communication.
    03: Request COMM_FULL_COMMUNICATION for user 3.
    04: Call main functions, simulate RTE communication.
    05: Simulate COMM_FULL_COMMUNICATION bussm mode indication.
    06: Check state of channels of user 3 are COMM_FULL_COM_NETWORK_REQUESTED.
    07: Call ComM_LimitChannelToNoComMode to enable limit to no communication on channel 3,4,5.
    08: Call main functions, simulate RTE communication twice(communication to inhibition partition).
    09: Go to sleep mode.
    10: Simulate COMM_NO_COMMUNICATION bussm mode indication.
    11: Simulate user to channel interpartition communication error.
    12: Call main functions, simulate RTE communication.
    13: VP (ComM.EB.UserToChannelDataSetError):
        Check Det error was set to COMM_E_USER_TO_CH_DATASET_ERROR.
  
Test Input: 
    Failed user to channel interpartition communication.
  
Test Output: 
    Det error. 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToChannelDataSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>734</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2283</internalId></specobject>
    <specobject>
      <id>TS_COMM_MulticorePerChannel_5_LimitEcuToNoComMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_5/source/application/Tests.c</sourcefile>
      <sourceline>1634</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall that channels are in Network Requested and mode limitation is called
    all channels enter Ready Sleep State.
    After limitation is removed Network Requested is Re-entered
  
Test Object: None.
Test Precondition: 
    All channels in this test have NmVariant set to FULL
  
Test Execution: 
    01: Reset Stubs
    02: Allow Communication
    03: Request Full Communication
    04: Call mainfunctions
    05: Check all channels entered Network Requested state
    06: Limit Ecu To no commication
    07: Check all channels entered Ready Sleep state
    08: Remove Limitation
    09: Check all channels entered Network Requested state
  
Test Input: 
    All channels are requested by user
    Mode Limitation is set to true
  
Test Output: 
    Channels got to Ready Sleep from (Network Requested) and back to Network requested
    after limitation is disabled
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToInhibitionCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>727</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2284</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_6_ComM_EcuM_WakeUpIndication_ManagedChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_6/source/application/Tests.c</sourcefile>
      <sourceline>86</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the ComM interpartition communication during a transition from 
    no communication to Full communication triggered by a Passive wakeup using
    ComM_EcuM_WakeUpIndication(), on a managed channel.
  
Test Object: None.
Test Precondition: 
    Two managed channels. One on same partition as a managing channel, one on
    different partition than the managing channel.
    Channels 2,3 are managed by channel 1.
  
Test Execution: 
    01: Reset stubs, initialize ComM, clear inhibition, allow communication.
    02: Call main functions, simulate RTE communication.
    03: Call ComM_EcuM_WakeUpIndication for channel 3.
    04: Reset Nm_PassiveStartUp stub.
    05: Call main functions, simulate RTE communication.
    06: Check Nm_PassiveStartUp stub count is 1(number of channels). 
    07: Call ComM_EcuM_WakeUpIndication for channel 2.
    08: Vp (ComM.EB.ChannelToChannelCrossPartition):
        Check that communication occurs between channels partitions.
    09: Call main functions, simulate RTE communication.
    10: Vp (ComM.EB.ChannelToChannelCrossPartition):
        Check data was received on channel partition.
  
Test Input: 
    Wakeup indication on a managed channel.
  
Test Output: 
    Interpartition communication between channels on different partitions.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ChannelToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>719</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2285</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_7_ComM_EvaluateChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_7/source/application/Tests.c</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test interpartition communication on full communication notification.
  
Test Object: None.
Test Precondition: 
    Channels 1,3,6, users 3,4, inhibition and master pnc handling are on same partition,
    the other channels/users are on separate partition.
  
Test Execution: 
    01: Reset stubs, initialize ComM, clear inhibition, allow communication.
    02: Request COMM_FULL_COMMUNICATION for user 2.
    03: Vp (ComM.EB.UserToChannelCrossPartition):
        Check that communication occurs between user to channel partitions for users and channels 
        that are on different partitions.
    04: Call main functions, simulate RTE communication.
    05: Vp (ComM.EB.UserToChannelCrossPartition):
        Check data was received on channel partitions.
    06: Simulate COMM_FULL_COMMUNICATION bussm mode indication.
    07: Call main functions, simulate RTE communication.
    08: Vp (ComM.EB.ChannelToUserCrossPartition):
        Check that communication occurs between channel to user partitions for users and channels 
        that are on different partitions.
    09: Call main functions, simulate RTE communication.
    10: Vp (ComM.EB.ChannelToUserCrossPartition):
        Check data was received on user partitions.
  
Test Input: 
  	  Transition to COMM_FULL_COMMUNICATION, and Rte notification.
  
Test Output: 
  	  Interpartition communication user to channel, channel to user for users/channels on different partition, and
  	  lack of interpartition communication when on same partition.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>724</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ChannelToUserCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>725</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2286</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_MulticorePerChannel_8_ComM_EvaluateChannel</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_MulticorePerChannel_8/source/application/Tests.c</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test interpartition communication on request of full communication.
  
Test Object: None.
Test Precondition: 
    Channels 1,3,6, users 3,4, and inhibition are on same partition,
    the other channels/users are on separate partition.
  
Test Execution: 
    01: Reset stubs, initialize ComM, clear inhibition, allow communication.
    02: Request COMM_FULL_COMMUNICATION for user 2.
    03: Vp (ComM.EB.UserToChannelCrossPartition):
        Check that communication occurs between user to channel partitions for users and channels 
        that are on different partitions.
    04: Call main functions, simulate RTE communication.
    05: Vp (ComM.EB.UserToChannelCrossPartition):
        Check data was received on channel partitions.
  
Test Input: 
  	  Transition to COMM_FULL_COMMUNICATION.
  
Test Output: 
  	  Interpartition communication user to channel, channel to user for users/channels on different partition, and
  	  lack of interpartition communication when on same partition.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.UserToChannelCrossPartition</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>724</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2287</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_NoUsersDetOn</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_NoUserDetOn/source/application/Tests.c</sourcefile>
      <sourceline>62</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that if the module is not initialized
    functions ComM_RequestComMode, ComM_GetMaxComMode,
    ComM_GetRequestedComMode, ComM_GetCurrentComMode should return
    COMM_E_NOT_INITED.
    It also should prove that after initialization the simply calling the
    above listed functions return COMM_E_WRONG_PARAMETERS.
  
Test Object: None.
Test Precondition: 
    No users are configured.
    DET is enabled
  
Test Execution: 
    01: VP (ComM.EB.SWS_ComM_00110): Call ComM_RequestComMode without initializing ComM and
        verify that "COMM_E_NOT_INITED" is reported to Det and the return
        value is COMM_E_UNINIT.
    02: VP (ComM.ASR403.SWS_ComM_00085): Call ComM_GetMaxComMode without initializing ComM and
        verify that "COMM_E_NOT_INITED" is reported to Det and the return
        value is COMM_E_UNINIT.
    03: VP (ComM.ASR403.SWS_ComM_00079): Call ComM_GetRequestedComMode without initializing ComM and
        verify that "COMM_E_NOT_INITED" is reported to Det and the return
        value is COMM_E_UNINIT.
    04: VP (ComM.ASR403.SWS_ComM_00083): Call ComM_GetCurrentComMode without initializing ComM and
        verify that "COMM_E_NOT_INITED" is reported to Det and the return
        value is COMM_E_UNINIT.
    05: VP (ComM.EB.ComM_GetCurrentPNCComMode): Call ComM_GetCurrentPNCComMode without initializing ComM and
        verify that "COMM_E_NOT_INITED" is reported to Det and the return
        value is COMM_E_UNINIT.        
    06: Initialize ComM.
    07: VP (ComM.EB.SWS_ComM_00110): Call ComM_RequestComMode with NULL pointer and verify that
        "COMM_E_WRONG_PARAMETERS" is reported to Det
        and the return value is E_NOT_OK.
    08: VP (ComM.ASR403.SWS_ComM_00085): Call ComM_GetMaxComMode with NULL pointer and verify that
        "COMM_E_WRONG_PARAMETERS" is reported to Det
        and the return value is E_NOT_OK.
    09: VP (ComM.ASR403.SWS_ComM_00079): Call ComM_GetRequestedComMode with NULL pointer and verify that
        "COMM_E_WRONG_PARAMETERS" is reported to Det
        and the return value is E_NOT_OK.
    10: VP (ComM.ASR403.SWS_ComM_00083): Call ComM_GetCurrentComMode with NULL pointer and verify that
        "COMM_E_WRONG_PARAMETERS" is reported to Det
        and the return value is E_NOT_OK.
    11: VP (ComM.EB.ComM_GetCurrentPNCComMode): Call ComM_GetCurrentPNCComMode with NULL pointer and verify that
        "COMM_E_WRONG_PARAMETERS" is reported to Det
        and the return value is E_NOT_OK.        
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>756</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00079</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00083</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_GetCurrentPNCComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>702</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2288</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Test_ComM_PncGateway_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PNC_Gateway_1/source/application/Tests.c</sourcefile>
      <sourceline>110</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test, tests the functionality of the PNC state machine in case
    PNC Gateway is set to true;
    Input ERA is simulated and User requests
    ERA RX Signal Linked to an Active Channel(Can change global ComM_RxEra).
    Output ComSendSignal is checked in case the TX is configured as ERA
  
Test Object: PNC state machine behaviour
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize stub invocation counts
    03: Assign Com_ReceiveSignal_Stub callout
    04: Initialize ERA and EIRA Receive Buffers
    05: Initialize ComM
    06: Allow communication for all the channels
    07: Set EIRA to 1 for PNC_0
    08: Request Full Communication
    09: a: Check PNC_REQUESTED is reached
        b: Check ComSendSignal was called with the bit set to 1 for PNC_0
    10: Request No Communication
    11: VP(ComM.SWS_ComM_00959)
        - a: Check PNC_READY_SLEEP is reached
        - b: Check ComSendSignal was called with the bit set to 0 for PNC_0
    12: VP(ComM.SWS_ComM_00945)
        - Simulate ERA
    13: VP(ComM.EB.ComM_PncReadySleep_PncRequested),
          (ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_READY_SLEEP_0):
        - a: Check PNC_REQUESTED is reached
        - b: Check ComSendSignal was called with the bit set to 1 for PNC_0
    12: Set ERA to 0
    13: VP(ComM.SWS_ComM_00959)
        - a: Check PNC_READY_SLEEP is reached
        - b: Check ComSendSignal was called with the bit set to 0 for PNC_0
    14: VP(ComM.SWS_ComM_00945)
        - a: Request Full Communication
        - b: Simulate ERA
    15: a: Check PNC_REQUESTED is reached
        b: Check ComSendSignal was called with the bit set to 1 for PNC_0
    16: Request No Communication
    17: The state remains PNC_REQUESTED since the PNC is requested via ERA
    18: Clear ERA
    19: VP(ComM.SWS_ComM_00991, ComM.SWS_ComM_00959, ComM.EB.Dsn.StateDynamics.NO_COM_REQ_BY_ALL_COMM_USER_PNC_REQUESTED_0)
        - a: Check PNC_READY_SLEEP is reached (PNC is not requested internally and not requested via ERA)
        - b: Check ComSendSignal was called with the bit set to 0 for PNC_0
    20: VP(ComM.SWS_ComM_00945)
        - Simulate ERA
    21: a: Check PNC_REQUESTED is reached
        b: Check ComSendSignal was called with the bit set to 1 for PNC_0
    22: Clear ERA and EIRA
    23: VP(ComM.SWS_ComM_00959)
        - a: Check PNC_READY_SLEEP was reached and  finally PNC_PREPARE_SLEEP is reached
        - b: Check ComSendSignal was called with the bit set to 0 for PNC_0
    24: VP(ComM.SWS_ComM_00945)
        - In state PNC_PERAPARE_SLEEP simulate ERA
    25: VP(ComM.SWS_ComM_00951, ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_PREPARE_SLEEP_1)
        - a: Check PNC_REQUESTED is reached
        - b: Check ComSendSignal was called with the bit set to 1 for PNC_0
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00945</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00991</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NO_COM_REQ_BY_ALL_COMM_USER_PNC_REQUESTED_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1769</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00951</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_PREPARE_SLEEP_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1778</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00959</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_PncReadySleep_PncRequested</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>638</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_READY_SLEEP_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1771</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00829.Com_SendSignal</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00827</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2289</internalId></specobject>
    <specobject>
      <id>TS_COMM_Test_ComM_PncGateway_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PNC_Gateway_1/source/application/Tests.c</sourcefile>
      <sourceline>458</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test, tests the functionality of the PNC state machine in case
    PNC Gateway is set to true;
    Input ERA is simulated for PNC_0,
    PNC should go into PNC_REQUESTED from PNC_NO_COMMUNICATION
  
Test Object: PNC state machine behaviour
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize stub invocation counts
    03: Assign Com_ReceiveSignal_Stub callout
    04: Initialize ERA and EIRA Receive Buffers
    05: Initialize ComM
    06: Allow communication for all the channels
    07: VP(ComM.SWS_ComM_00934)
        - Simulate ERA
    08: VP(ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_NO_COMMUNICATION_1)
        - a: Check PNC_REQUESTED is reached
        - b: Check ComSendSignal was called with the bit set to 1 for PNC_0
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00934</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_NO_COMMUNICATION_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1766</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2290</internalId></specobject>
    <specobject>
      <id>TS_COMM_Test_ComM_Pasive_Active_Wakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PNC_Gateway_1/source/application/Tests.c</sourcefile>
      <sourceline>569</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test, verifies that in case of ERA uscase,
    when the channel is first passively requested and then
    actively requested (via ERA), the ComM channel wakes-up
    the Nm channel actively
    and calls Passive wakeup and network request
  
Test Object:   
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize stub invocation counts
    03: Assign Com_ReceiveSignal_Stub callout
    04: Initialize ERA and EIRA Receive Buffers
    05: Initialize ComM
    06: Allow communication for all the channels
    07: Simulate EIRA\ERA and also a passive start-up indication
    08: Check that all channels linked to PNC_0 are in COMM_FULL_COM_NETWORK_REQUESTED
    09: VP(ComM.SWS_ComM_00980)
         - Check that even pasive indication was the first event (second an active start-up)
         the Nm channel state machine is requested actively
    10: Check PNC_REQUESTED is reached
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00980</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2291</internalId></specobject>
    <specobject>
      <id>TS_COMM_Test_ComM_PncGateway_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PNC_Gateway_1/source/application/Tests.c</sourcefile>
      <sourceline>701</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test, verifies that in case a PNC is requested internally
    the PNC state machine goes to PncRequested state.
    As long as the PNC is requested internally or via ERA the
    PNC's state remains PncRequested
  
Test Object: None.
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize stub invocation counts
    03: Initialize ComM
    04: Allow communication for all the channels
    05: Simulate ERA
    06:
    06.a: Check PNC_REQUESTED is reached
    06.b: Check ComSendSignal was called with the bit set to 1 for PNC_0
    07: Request Full Communication
    08: Set ERA to zero
    09: VP(ComM.ASR403.SWS_ComM_00936)
        Check that the PNC's state did not changed
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00936</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2292</internalId></specobject>
    <specobject>
      <id>TS_COMM_Test_InternTransition2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PNC_Gateway_1/source/application/Tests.c</sourcefile>
      <sourceline>814</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test, verifies that in case PNC state machine enters PNC_REQUESTED state,
    the API Nm_NetworkRequest shall be called, even if the current state of the
    channel state machine is already "Full communication"
  
Test Object:   
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize stub invocation counts.
    03: Assign Com_ReceiveSignal_Stub callout.
    05: Initialize ComM.
    06: Allow communication and call main function.
    07: Invoke active diagnostic and call main function.
    08: Check that channel is in COMM_FULL_COM_NETWORK_REQUESTED.
    09: Check that Network is requested.
    10: Invoke ComM_RequestComMode().
    11: VP(ComM.SWS_ComM_00980, ComM.EB.Dsn.StateDynamics.FULL_COM_NETWORK_REQUESTED_NmVariantFULL)
         - Check PNC_REQUESTED is reached.
         - Check that Network is requested again.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00980</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_NETWORK_REQUESTED_NmVariantFULL</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1784</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2293</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Test_ComM_PncGateway_5</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PNC_Gateway_2/source/application/Tests.c</sourcefile>
      <sourceline>139</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    The test checks that in case a user requests full communication,
    the PNC state machine goes to PNC requested state,
    and sends 1 on both signals (one signal has linked to it
    a channel with ComMPncGatewayType == COMM_GATEWAY_TYPE_ACTIVE while
    the other signal has linked to it a channel with
    ComMPncGatewayType == COMM_GATEWAY_TYPE_PASSIVE).

  
Test Object: PNC state machine behaviour
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
      - ComMPnInfoOffset is enabled and offset is 7.
      - PNC ID is 62
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize stub invocation counts
    03: Assign Com_ReceiveSignal_Stub callout
    04: Initialize ComM
    05: Allow communication for all the channels
    06: Request Full Communication
    07: Check that Pnc requested state is entered
    08: VP(ComM.EB_Ref.SWS_ComM_00164.Entering.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.Rx.UserRequest)
        - Check that Send signal is called for passive and active.
    10: Request no communication
    11: Check that Pnc Prepare Sleep is reached
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00164.Entering.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.Rx.UserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>559</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PartialNetworkOffset_ComMPnInfoOffsetEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>673</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2294</internalId></specobject>
    <specobject>
      <id>TS_COMM_Test_ComM_PncGateway_6</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PNC_Gateway_2/source/application/Tests.c</sourcefile>
      <sourceline>255</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    The test checks that in case era is simulated on a signal which has
    linked to it a channel with ComMPncGatewayType == COMM_GATEWAY_TYPE_ACTIVE,
    the PNC state machine goes to PNC requested state,
    and sends 1 on both signals
  
Test Object: PNC state machine behaviour
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize stub invocation counts
    03: Assign Com_ReceiveSignal_Stub callout
    04: Initialize ComM
    05: Allow communication for all the channels
    06: Simulate ERA
    07: Check PNC_REQUESTED is reached
    08: VP( ComM.EB_Ref.SWS_ComM_00164.Entering.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.Rx.Era)
         - Check that on both signals 1 is sent
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00164.Entering.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.Rx.Era</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>558</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2295</internalId></specobject>
    <specobject>
      <id>TS_COMM_Test_ComM_PncGateway_7</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PNC_Gateway_2/source/application/Tests.c</sourcefile>
      <sourceline>350</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    The test checks that in case era is simulated on a signal which has
    linked to it a channel with ComMPncGatewayType == COMM_GATEWAY_TYPE_PASSIVE,
    the PNC state machine goes to PNC requested state,
    and only on one TX signal (which has a channel linked to it with
    ComMPncGatewayType == COMM_GATEWAY_TYPE_ACTIVE)
  
Test Object: PNC state machine behaviour
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize stub invocation counts
    03: Assign Com_ReceiveSignal_Stub callout
    04: Initialize ComM
    05: Allow communication for all the channels
    06: Simulate ERA
    07: Check PNC_REQUESTED is reached
    08: VP(ComM.EB_Ref.SWS_ComM_00164.In.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.Rx.ERA)
         - Check that on both signals 1 is sent
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00992</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2296</internalId></specobject>
    <specobject>
      <id>TS_COMM_Test_ComM_PncGateway_8</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PNC_Gateway_2/source/application/Tests.c</sourcefile>
      <sourceline>445</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test checks that in case Pnc state machine is in PNC_READY_SLEEP and
    user requests full communication the state will be PNC_REQUESTED
  
Test Object: PNC state machine behaviour
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize stub invocation counts
    03: Assign Com_ReceiveSignal_Stub callout
    04: Initialize ComM
    05: Allow communication for all the channels
    06: Simulate Eira
    07: Check the current state is PNC_READY_SLEEP
    08: Request Full Communication
    09: VP(ComM.EB.SWS_ComM_00165_UserRequest,
           ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_READY_SLEEP_2)
        - Check the current state is PNC_REQUESTED
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00165_UserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>706</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_READY_SLEEP_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1773</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2297</internalId></specobject>
    <specobject>
      <id>TS_COMM_Test_ComM_PncGateway_9</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PNC_Gateway_2/source/application/Tests.c</sourcefile>
      <sourceline>545</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test checks that in case Pnc state machine is in PNC_READY_SLEEP and
    ERA signal changes to 1 the state of the Pnc state machine will be PNC_REQUESTED
  
Test Object: PNC state machine behaviour
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize stub invocation counts
    03: Assign Com_ReceiveSignal_Stub callout
    04: Initialize ComM
    05: Allow communication for all the channels
    06: Simulate Eira
    07: Check the current state is PNC_READY_SLEEP
    08: Request Full Communication
    09: VP(ComM.EB.SWS_ComM_00165_UserRequest,
           ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_READY_SLEEP_1)
        - Check the current state is PNC_REQUESTED
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00165_ERARequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>707</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_READY_SLEEP_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1772</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2298</internalId></specobject>
    <specobject>
      <id>TS_COMM_Test_ComM_PncGateway_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PNC_Gateway_2/source/application/Tests.c</sourcefile>
      <sourceline>646</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    The test checks that in case Pnc state machine is in PNC_REQUESTED state because of
    ERA changed on a signal which has a channel linked to it with
    ComMPncGatewayType == COMM_GATEWAY_TYPE_PASSIVE, and while in PNC_REQUESTED state
    an ERA changes on a signal which has a channel linked to it with
    ComMPncGatewayType == COMM_GATEWAY_TYPE_ACTIVE,
    Com_SendSignal is called with data set to 1 for all signals which have
    channel linked to them with ComMPncGatewayType == COMM_GATEWAY_TYPE_PASSIVE.
  
Test Object: PNC state machine behaviour
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize stub invocation counts
    03: Assign Com_ReceiveSignal_Stub callout
    04: Initialize ComM
    05: Allow communication for all the channels
    06: Simulate Era on a passive channel
    07: Check the current state is PNC_READY_SLEEP
    08: Simulate ERA on an active channel
    09: VP(ComM.EB_Ref.SWS_ComM_00164.In.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.Rx.ERAm
           ComM.EB.Dsn.StateDynamics.PncRequestedAction1_0)
        - Check that SendSignal is called for the signal which has
        a channel linked to it with ComMPncGatewayType == COMM_GATEWAY_TYPE_PASSIVE
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00164.In.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.Rx.ERA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>560</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PncRequestedAction1_0</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1786</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2299</internalId></specobject>
    <specobject>
      <id>TS_COMM_Test_ComM_PncGateway_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PNC_Gateway_2/source/application/Tests.c</sourcefile>
      <sourceline>754</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    The test checks that in case Pnc state machine is in PNC_REQUESTED state because of
    ERA changed on a signal which has a channel linked to it with
    ComMPncGatewayType == COMM_GATEWAY_TYPE_PASSIVE, and while in PNC_REQUESTED state
    a user requests Full Communication,
    Com_SendSignal is called with data set to 1 for all signals which have
    channel linked to them with ComMPncGatewayType == COMM_GATEWAY_TYPE_PASSIVE.
  
Test Object: PNC state machine behaviour
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize stub invocation counts
    03: Assign Com_ReceiveSignal_Stub callout
    04: Initialize ComM
    05: Allow communication for all the channels
    06: Simulate Era on a passive channel
    07: Check the current state is PNC_READY_SLEEP
    08: Request Full Communication
    09: VP(ComM.EB_Ref.SWS_ComM_00164.In.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.UserRequest,
           ComM.EB.Dsn.StateDynamics.PncRequestedAction1_1)
        - Check that SendSignal is called for the signal which has
        a channel linked to it with ComMPncGatewayType == COMM_GATEWAY_TYPE_PASSIVE
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00164.In.COMM_PNC_REQUESTED.Tx.ComMPncGatewayType.COMM_GATEWAY_TYPE_PASSIVE.With.UserRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>561</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PncRequestedAction1_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1787</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2300</internalId></specobject>
    <specobject>
      <id>TS_COMM_Test_ComM_PncGateway_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PNC_Gateway_2/source/application/Tests.c</sourcefile>
      <sourceline>859</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test checks that in case Pnc state machine is in PNC_PREPARE_SLEEP and
    ERA changed on a signal which has a channel linked to it with
    ComMPncGatewayType == COMM_GATEWAY_TYPE_PASSIVE, the PNC state machine
    switches to state PNC_REQUESTED.
  
Test Object: PNC state machine behaviour
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize stub invocation counts
    03: Assign Com_ReceiveSignal_Stub callout
    04: Initialize ComM
    05: Allow communication for all the channels
    06: Simulate ComM_EcuM_WakeUpIndication
    07: Check the current state is PNC_PREPARE_SLEEP
    08: Simulate Era on a passive channel
    09: Check the current state is PNC_REQUESTED
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FULL_COM_REQ_BY_COMM_USER_PNC_PREPARE_SLEEP_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1779</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2301</internalId></specobject>
    <specobject>
      <id>TS_COMM_Test_ComM_PncGateway_GATEWAY_TYPE_Not_Set</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PNC_Gateway_2/source/application/Tests.c</sourcefile>
      <sourceline>961</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test checks that in case Gateway is enabled and all channels parameter
     - user linked to PNC requests FULL communication
     PNC switches to PNC_REQUESTED state and all TX signals are called.
     - user linked to PNC requests NO communication
     PNC switches to PNC_READY_SLEEP_STATE.
  
Test Object: PNC state machine behaviour
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
      - Channels linked to PNC_1 have ComMPncGatewayType not set
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize stub invocation counts
    03: Assign Com_ReceiveSignal_Stub callout
    04: Initialize ComM
    05: Allow communication for all the channels
    06: Request FULL_COMMUNICATION for Test_ComMUser_1
    07: Check that Pnc requested state is entered
    08: Simulate EIRA
    09: VP(ComM.EB_Ref.SWS_ComM_00930.ComMPncGatewayType.NotSet.Tx.WithValue.One)
        - Check that TX signal has been called
    10: Request No Communication for Test_ComMUser_1
    11: VP(ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayType.NotSet)
        - Check that Pnc entered READY_SLEEP state
  
Test Input: 
    - User requests FULL_COMMUNICATION
    - User requests NO_COMMUNICATION
  
Test Output: 
    - PNC enters PNC_REQUSTED state
    - PNC enters PNC_READY_SLEEP state
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00930.ComMPncGatewayType.NotSet.Tx.WithValue.One</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>594</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayType.NotSet</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>596</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2302</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Test_ComM0PncVectorAvoidance_0</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PncVectorAvoidance_1/source/application/Tests.c</sourcefile>
      <sourceline>124</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If ComM0PncVectorAvoidance = TRUE and user request FULL COMMUNICATION,
    network is requested for all channels of user. When user requeste NO
    COMMUNICATION, network is released for all channels of user.
    When network is requested for two users, network will be released when
    both users requests no communication.
  
Test Object: PNC state machine behaviour
Test Precondition: 
    Module state:
      VP(ComM.ECUC_ComM_00892):
      - Enable ComM0PncVectorAvoidance;
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts;
    02: Initialize stub invocation counts;
    03: Assign Com_ReceiveSignal_Stub callout;
    04: Initialize ComM;
    05: Allow communication for all the channels;
    06: Request Full Communication for user 0 and user 1;
    07: Check the current state is PNC_REQUESTED;
    08: Check the current state for all channels COMM_FULL_COM_NETWORK_REQUESTED;
    09: VP(ComM.SWS_ComM_00966):
        - Network has been requested for all channels;
    10: Request No Communication for user 0;
    11: Check the current state for all channels COMM_FULL_COM_NETWORK_REQUESTED;
    12: VP(ComM.SWS_ComM_00966):
        - Network has not been released;
    13: Request No Communication for user 1;
    14: Check the current state for all channels COMM_FULL_COM_READY_SLEEP;
    15: VP(ComM.SWS_ComM_00966):
        - Network has been released;
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00892</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00966</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2303</internalId></specobject>
    <specobject>
      <id>TS_COMM_Test_ComM0PncVectorAvoidance_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PncVectorAvoidance_1/source/application/Tests.c</sourcefile>
      <sourceline>282</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If ComM0PncVectorAvoidance = TRUE, in case that Era is simulated on RX Passive channel,
    all channels except TX Passive channel enters in state COMM_FULL_COM_NETWORK_REQUESTED.
    When Era is simulated on RX active channel all channels enters is state
    COMM_FULL_COM_NETWORK_REQUESTED. When Era is simulated for RX active channels and for
    RX passive channels all channels enters in state COMM_FULL_COM_NETWORK_REQUESTED, and
    transition to state COMM_FULL_COM_READY_SLEEP is done only if all Era signal types are
    cleared.
  
Test Object: PNC state machine behaviour
Test Precondition: 
    Module state:
      VP(ComM.ECUC_ComM_00892):
      - Enable ComM0PncVectorAvoidance;
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts;
    02: Initialize stub invocation counts;
    03: Assign Com_ReceiveSignal_Stub callout;
    04: Initialize ComM;
    05: Allow communication for all the channels;
    06: Simulate Era on RX Passive channel;
    07: Check the current state is PNC_REQUESTED;
    08: Check the current state for all channels except channel 5 is
        COMM_FULL_COM_NETWORK_REQUESTED;
    09: VP(ComM.SWS_ComM_00966):
        - Network has been requested for all channels except channel 5;
    10: Clear Network Release Stub and clear Era on RX Passive channel;
    11: Check the current state for all channels except channel 5 is
        COMM_FULL_COM_READY_SLEEP;
    12: VP(ComM.SWS_ComM_00966):
        - Network has been released for all channels except channel 5;
    13: Simulate Era on RX active channel 0;
    14: Check the current state for all channels is COMM_FULL_COM_NETWORK_REQUESTED;
    15: VP(ComM.SWS_ComM_00966):
        - Network has been requested for all channels;
    16: Clear Network Release Stub and clear Era on RX active channel 0;
    17: Check the current state for all channels is COMM_FULL_COM_READY_SLEEP;
    18: VP(ComM.SWS_ComM_00966):
        - Network has been released for all channels;
    19: Simulate Era on RX active channel 1;
    20: Check the current state for all channels is COMM_FULL_COM_NETWORK_REQUESTED;
    21: VP(ComM.SWS_ComM_00966):
        - Network has been requested for all channels;
    22: Clear Network Release Stub and clear Era on RX active channel 1;
    23: Check the current state for all channels is COMM_FULL_COM_READY_SLEEP;
    24: VP(ComM.SWS_ComM_00966):
        - Network has been released for all channels;
    25: Simulate Era on RX active channel 0 and channel 1;
    26: Check the current state for all channels is COMM_FULL_COM_NETWORK_REQUESTED;
    27: VP(ComM.SWS_ComM_00966):
        - Network has been requested for all channels;
    28: Clear Network Release Stub and clear Era on RX active channel 0;
    29: Check the current state for all channels is COMM_FULL_COM_NETWORK_REQUESTED;
    30: VP(ComM.SWS_ComM_00966):
        - Network has not been released;
    31: Clear Network Release Stub and clear Era on RX active channel 1;
    32: Check the current state for all channels is COMM_FULL_COM_READY_SLEEP;
    33: VP(ComM.SWS_ComM_00966):
        - Network has been released for all channels;
    34: Simulate Era on RX active channel 0 and channel 1 and for RX passive;
    35: Check the current state for all channels is COMM_FULL_COM_NETWORK_REQUESTED;
    36: VP(ComM.SWS_ComM_00966):
        - Network has been requested for all channels;
    37: Clear Network Release Stub and clear Era on RX active channel 0;
    38: Check the current state for all channels is COMM_FULL_COM_NETWORK_REQUESTED;
    39: VP(ComM.SWS_ComM_00966):
        - Network has not been released;
    40: Clear Network Release Stub and clear Era on RX active channel 1;
    41: Check the current state for all channels except channel 5 is COMM_FULL_COM_NETWORK_REQUESTED;
    42: Check the current state for channel 5 is COMM_FULL_COM_READY_SLEEP;
    43: VP(ComM.SWS_ComM_00966):
        - Network has been released for channel 5;
    44: Clear Network Release Stub and clear Era on RX Passive channel;
    45: Check the current state for all channels is COMM_FULL_COM_READY_SLEEP;
    46: VP(ComM.SWS_ComM_00966):
        - Network has been released for all channels;
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00892</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00966</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2304</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Test_ComM0PncVectorAvoidance_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PncVectorAvoidance_3/source/application/Tests.c</sourcefile>
      <sourceline>110</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    If The parameter ComMPncSupport is set to true and parameter ComMPncGatewayEnabled is set to true and
    parameter ComM0PncVectorAvoidance is set to true and a Tx ERA signal is configured that is linked to a channel
    with the attribute ComMPncGatewayType set to COMM_GATEWAY_TYPE_PASSIVE and the above mentioned signal is not
    configured for the first PNC in the configuration list (not necessarily the PNC with the lowest ID) but it is
    configured for other PNCs and partial network information is received only for an ERA signal that has linked
    to it a channel with the attribute ComMPncGatewayType set to COMM_GATEWAY_TYPE_PASSIVE for the above mentioned
    PNCs and no user requests are for the above mentioned channel (direct or via PNC) which is part of the above
    mentioned PNCs and partial network information is not received for an ERA signal that has linked to it a channel
    with the attribute ComMPncGatewayType set to COMM_GATEWAY_TYPE_ACTIVE for the above mentioned PNCs, a channel with
    the attribute ComMPncGatewayType set to COMM_GATEWAY_TYPE_PASSIVE sends partial network information.
    Verify that the list ComM_PncZeroVectorAvoidanceRelease is generated correctly.
  
Test Object: PNC state machine behaviour
Test Precondition: 
    Module state:
      VP(ComM.ECUC_ComM_00892):
      - Enable ComM0PncVectorAvoidance;
      VP(ComM.ASR403.ECUC_ComM_00842):
      - Use ComMPncGatewayType = COMM_GATEWAY_TYPE_ACTIVE for ComMPnc_0 and
      - Use ComMPncGatewayType = COMM_GATEWAY_TYPE_ACTIVE and COMM_GATEWAY_TYPE_PASSIVE for ComMPnc_1;
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts;
    02: Initialize stub invocation counts;
    03: Assign Com_ReceiveSignal_Stub callout;
    04: Initialize ComM;
    05: Allow communication for all the channels;
    06: Simulate Era on RX Passive channel;
    07: Check the current state;
    08: Request Full Communication for user 1;
    09: Check the current state for all channels is COMM_FULL_COM_NETWORK_REQUESTED;
    10: VP(ComM.SWS_ComM_00966):
        - Network has been requested for all channels;
    11: Request No Communication for user 1;
    12: Check the current state for channel active is COMM_FULL_COM_NETWORK_REQUESTED;
    13: VP(ComM.SWS_ComM_00966):
        - Network has not been released for channel passive;
    14: Check the current state is not PNC_REQUESTED;
  
Test Input: 
    - ComM0PncVectorAvoidance is set to TRUE;
    - The first configured pnc does not have a channel with attribute ComMPncGatewayType set
    to COMM_GATEWAY_TYPE_PASSIVE;
    - The second configured pnc has a channel with attribute ComMPncGatewayType set
    to COMM_GATEWAY_TYPE_PASSIVE;
  
Test Output: 
      After PNC is requested only via a channel with attribute ComMPncGatewayType set to COMM_GATEWAY_TYPE_PASSIVE
    channel with attribute ComMPncGatewayType set to COMM_GATEWAY_TYPE_PASSIVE is released;
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00892</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00966</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.ECUC_ComM_00842</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2305</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_EcuM_PncWakeUp_PncDisabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PncWakeUp_SyncOff_PncDisabled/source/application/Tests.c</sourcefile>
      <sourceline>62</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that in case function ComM_EcuM_PNCWakeUpIndication
    is called  and ComMPncEnabled is FALSE, notification is ignored.
  
Test Object: None.
Test Precondition: 
    ComMPncEnabled is FALSE.
  
Test Execution: 
    01: Init module and test
    02: Call ComM_EcuM_PNCWakeUpIndication
    03: Trigger execution of ComM_PncMainFunction() 
    04: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication_ComMPncEnable_FALSE)
        - Check that no BswM notification was sent
    05: Execute ComM main function for all channels
    06: VP(ComM.EB.ComM_EcuM_PNCWakeUpIndication_ComMPncEnable_FALSE)
        - Check that all ComM chanels referenced by pnc, are 
          in COMM_NO_COM_NO_PENDING_REQUEST state.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_EcuM_PNCWakeUpIndication_ComMPncEnable_FALSE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>644</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2306</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_EcuM_PncWakeUp</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PncWakeUp_SyncOff_PncEnabled/source/application/Tests.c</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test should check that in case function ComM_EcuM_PNCWakeUpIndication
    is called, PNC make transition to PNC_PREPARE_SLEEP and it's referenced 
    ComM channels are making transition to COMM_NO_COM_REQUEST_PENDING.
  
Test Object: None.
Test Precondition: 
    ComMSynchronousWakeUp is FALSE.
  
Test Execution: 
    do for all configured PNC
      01: Init module and test
      02: Call ComM_EcuM_PNCWakeUpIndication(pnc)
      03: Trigger execution of ComM_PncMainFunction() 
      04: VP(ComM.SWS_ComM_00964)
            - Check PNC made transiton to PNC_PREPARE_SLEEP
      05: Execute ComM main function for all channels
      06: VP(ComM.EB.SWS_ComM_Channel_ComMSynchronousWakeUp_false)
          - Check that all ComM chanels referenced by pnc, are 
            making transiton to COMM_NO_COM_REQUEST_PENDING 
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00964</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_Channel_ComMSynchronousWakeUp_false</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>643</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2307</internalId></specobject>
    <specobject>
      <id>TS_COMM_ComM_EcuM_PNCWakeUpIndication_ChannelPassiveWakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_PncWakeUp_SyncOff_PncEnabled/source/application/Tests.c</sourcefile>
      <sourceline>134</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case ComM_EcuM_PNCWakeUpIndication is called for a pnc,
    the assigned channel to the pnc wakes up passively (PassiveStartup)
  
Test Object: None.
Test Precondition: 
   - Synchronuos wakeup is ste to false
   - channel with Id 4 is linked to PNC with id 12
  
Test Execution: 
    01: Initialize stubs and module
    02: Call ComM_EcuM_PNCWakeUpIndication
    03: Call mainfunction
    04: Check current state is COMM_FULL_COM_READY_SLEEP
    05: Allow communication for ComMChannel_4 channel
    06: Call mainfunction
    07: Check current state is COMM_FULL_COM_READY_SLEEP
    08: VP(ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_PNCWakeUpIndication)
        - Passive startup is called
  
Test Input: 
    - ComM_EcuM_PNCWakeUpIndication is called for PNC id 12
  
Test Output: 
    - Passive startup is called for channel 4
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_PNCWakeUpIndication</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>565</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2308</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_30012</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_Rte/source/application/Tests.c</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the Full communication mode indication to the RTE.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    Note:
    A failure will be returned when Main functions of channels linked to any
    user are not able to produce the desired transition within a timeout period.

    01. Simulate the reset of the ComM module to reset the stub counters and
        indication flags.
    02. Initialize the ComM module.
    03. VP (ComM.SWS_ComM_00313):
        * Invoke ComM_MainFunctions of all channels
        * Verify 'No Communication' mode was not reported to the users via Rte
        * Verify 'No Communication' mode was not reported to the users via BswM
    04. VP (ComM.ASR403.SWS_ComM_00275):
        * Simulate a wakeup indication for all channels linked to
        Test_ComMUser_2_RteUser.
    05. Allow communication for all channels linked to Test_ComMUser_2_RteUser using
        the ComM_CommunicationAllowed API.
    06. Call ComM_MainFunction of corresponding channel until ComM module calls
        Nm_PassiveStartup for all channels linked to Test_ComMUser_2_RteUser.
    07. VP (ComM.SWS_ComM_00472):
        * Verify ComM has requested Full
        communication mode to the corresponding state managers for all channels
        linked to Test_ComMUser_2_RteUser.
    08. Simulate the Nm network mode indications for all channels of
        Test_ComMUser_2_RteUser.
    09. Call ComM_MainFunction of all channels linked to Test_ComMUser_2_RteUser to reach
        the Full communication mode.
    10. VP (ComM.SWS_ComM_00744, ComM.SWS_ComM_00745, ComM.SWS_ComM_00091):
        * Verify the current mode set in the RTE using the API
        Rte_Mode_R_currentMode_currentMode is Full Communication.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00472</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00744</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00745</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2309</internalId></specobject>
    <specobject>
      <id>TS_COMM_30013</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_Rte/source/application/Tests.c</sourcefile>
      <sourceline>233</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM on calls from RTE and the response of ComM.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    Note:
    A failure will be returned when Main functions of channels linked to any
    user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize the CanSM stub.
    03: Initialize the ComM module.
    04: Clear inhibition status.
    05: Allow communication for all the channels linked to
        Test_ComMUser_2_RteUser using the ComM_CommunicationAllowed() API.
    06: ComM.SWS_ComM_00848: Request Full communication mode for Test_ComMUser_2_RteUser
        from the RTE using the API Rte_Call_R_RequestMode_RequestComMode().
    07: Call ComM_MainFunction of corresponding channel until ComM module calls
        Nm_NetworkRequest for all the channels linked to
        Test_ComMUser_2_RteUser.
    08: Verify that the Requested mode is COMM_FULL_COMMUNICATION.
    09: Simulate the network mode indication for all the channels of
        Test_ComMUser_2_RteUser.
    10: Call main function of all the channels of Test_ComMUser_2_RteUser
        when ComMode is Full ComMode (Network Mode).
    11: Verify that the current mode is COMM_FULL_COMMUNICATION.
    12: Call Tst_SwcEnableLimitChannelToNoComMode() to enable the channel
        limitation to no Com Mode.
    13: Call ComM_MainFunction() for all the channels of
        Test_ComMUser_2_RteUser.
    14: Call Tst_SwcGetInhibitionStatus() to get the inhibition status.
    15: Check inhibition status of channel is set for limitation to
        No Communication" mode active COMM_LIMIT_NOCOMM.
    16: VP (ComM.EB_Ref.SWS_ComM_00649.COMM_E_MODE_LIMITATION):
        - Request full communication for the user 'Test_ComMUser_2_RteUser', and
        verify the return value as TEST_COMM_E_MODE_LIMITATION since mode
        limitation is enabled for 'Test_ComMUser_2_RteUser'.
    17: VP (ComM.SWS_ComM_00733, ComM.SWS_ComM_00847, ComM.SWS_ComM_00091, ComM.SWS_ComM_00744, ComM.SWS_ComM_00745):
        - The current mode is set to  full communication in the RTE (due to
          resultant of Rte_Switch() call back indication from ComM -&gt; ComM.SWS_ComM_00091)
          using the API Rte_Mode_R_currentMode_currentMode.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00733</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00744</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00745</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00847</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00649.COMM_E_MODE_LIMITATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00848</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2310</internalId></specobject>
    <specobject>
      <id>TS_COMM_30014</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_Rte/source/application/Tests.c</sourcefile>
      <sourceline>389</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the indications to the RTE when a transition occurs from Full
    communication to Silent communication and then to No communication.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    Note:
    A failure will be returned when Main functions of channels linked to any
    user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize the ComM module.
    03: Allow communication for all channels linked to Test_ComMUser_2_RteUser
        using the ComM_CommunicationAllowed() API.
    04: Clear inhibition status.
    05: VP (ComM.SWS_ComM_00091):
        - Request Full communication mode for Test_ComMUser_2_RteUser from the
        RTE using the API Rte_Call_R_RequestMode_RequestComMode().
    06: VP (ComM.SWS_ComM_00472, ComM.SWS_ComM_00778):
        Call ComM_MainFunction of corresponding channel until ComM requests
        - Full communication mode to the corresponding state managers for all
          channels linked to Test_ComMUser_2_RteUser.
        - ComM module calls Nm_NetworkRequest for all channels linked to
          Test_ComMUser_2_RteUser.
        - Call ComM_MainFunction of all channels linked to
          Test_ComMUser_2_RteUser to reach the Full communication mode.
    07: VP (ComM.SWS_ComM_00848):
        - Verify that the current mode set in RTE is COMM_FULL_COMMUNICATION
        using the API Rte_Mode_R_currentMode_currentMode.
    08: Simulate the Network mode indication for all channels linked to
        Test_ComMUser_2_RteUser.
    09: Call main functions of all channels of Test_ComMUser_2_RteUser when
        ComMode is Full ComMode (Network Mode).
    10: Verify that the current ComM mode is COMM_FULL_COMMUNICATION .
    11: VP (ComM.SWS_ComM_00848):
        - Verify the current mode set in the RTE using the API
        Rte_Mode_R_currentMode_currentMode is COMM_FULL_COMMUNICATION.
    12: Request No communication mode for Test_ComMUser_2_RteUser from the
        RTE using the API Rte_Call_R_RequestMode_RequestComMode.
    13: Call ComM_MainFunction of corresponding channel until ComM module
        calls Nm_NetworkRelease for all channels linked to
        Test_ComMUser_2_RteUser.
    14: VP (ComM.SWS_ComM_00391):
        - Simulate a Prepare bus sleep indication for all channels linked to
        Test_ComMUser_2_RteUser.
    15: Call main functions of all channels of Test_ComMUser_2_RteUser until
        ComMrequests Silent communication mode to the corresponding bus state
        manager.
    16: Verify that the requested mode is COMM_SILENT_COMMUNICATION.
    17: Verify that the current mode set in the RTE using the API
        Rte_Mode_R_currentMode_currentMode is COMM_SILENT_COMMUNICATION.
    18: Simulate a Bus sleep indication for all channels linked to
        Test_ComMUser_2_RteUser.
    19: Call ComM_MainFunction of corresponding channel until ComM requests No
        communication mode to the corresponding state managers for all channels
        linked to Test_ComMUser_2_RteUser.
    20: VP (ComM.SWS_ComM_00295, ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_SILENT_COMMUNICATION_1):
        - The requested mode is COMM_NO_COMMUNICATION
    21: VP (ComM.SWS_ComM_00744, ComM.SWS_ComM_00745):
        - The current mode set in the RTE using the API
        Rte_Mode_R_currentMode_currentMode is COMM_NO_COMMUNICATION
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00295</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00391</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.NM_MODE_SWITCHED_SILENT_COMMUNICATION_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1755</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00472</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00744</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00745</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00778</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00848</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2311</internalId></specobject>
    <specobject>
      <id>TS_COMM_30015</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_Rte/source/application/Tests.c</sourcefile>
      <sourceline>625</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the indication of Lowest mode to the RTE when channels of a User are
    in different modes.
  
Test Object: None.
Test Precondition: 
    Prepare CanSM stub CanSMStub_RequestComMode_Callout so, that it does indicate the requested mode
    i.e. set TimeOutCanFlag = 0.
  
Test Execution: 
    Note:
    A failure will be returned when Main functions of channels linked to any
    user are not able to produce the desired transition within a timeout period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize the CanSM stub.
    03: Initialize the ComM module.
    04: Allow communication for all channels linked to Test_ComMUser_2_RteUser
        using the ComM_CommunicationAllowed() API.
    05: Clear inhibition status.
    06: VP (ComM.ASR403.SWS_ComM_00275, ComM.SWS_ComM_00663):
        Simulate the wakeup indication for the first channel linked to
        Test_ComMUser_2_RteUser.
    07: Call ComM_MainFunction of corresponding channel until
         *  ComM requests Full communication mode to the corresponding
            state managers for the first channel linked to
            Test_ComMUser_2_RteUser.
         *  ComM module calls Nm_PassiveStartup for the first channel linked to
            Test_ComMUser_2_RteUser.
    08: VP (ComM.SWS_ComM_00733):
        Verify that the requested ComM mode is COMM_FULL_COMMUNICATION.
    09: Simulate BusSM Full Communication mode indication for channel 0 of
        Test_ComMUser_2_RteUser. Prepare the CanSM stub CanSMStub_GetCurrentComMode_Callout so,
        that it returns COMM_FULL_COMMUNICATION only for channel 0 of
        Test_ComMUser_2_RteUser and COMM_NO_COMMUNICATION for the others.
    10: Call main functions of all channels of Test_ComMUser_2_RteUser to check
        only channel ComMChannel_0 in Full ComMode.
    11: Verify that the current ComM mode is COMM_NO_COMMUNICATION.
    12: VP (ComM.SWS_ComM_00744, ComM.SWS_ComM_00745, ComM.SWS_ComM_00176, ComM.SWS_ComM_00091):
        Verify the current mode set in the RTE is COMM_NO_COMMUNICATION
        using the API Rte_Mode_R_currentMode_currentMode.
  
Test Input: None.
Test Output: 
    Full communication should be requested to the corresponding state manager
    for the first channel linked to Test_ComMUser_2_RteUser.
    Nm_PassiveStartup should be called for the first channel linked to
    Test_ComMUser_2_RteUser.
    The current mode of channels of Test_ComMUser_2_RteUser set in RTE should be
    No communication mode since the lowest mode shall be indicated to the RTE.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00275</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00663</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00313</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00733</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00744</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00745</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2312</internalId></specobject>
    <specobject>
      <id>TS_COMM_30053</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_Rte/source/application/Tests.c</sourcefile>
      <sourceline>780</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the Communication mode indication to the RTE only once.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    Note:
    A failure will be returned when Main functions of channels linked to any
    user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize the CanSM stub.
    02: Initialize the ComM module.
    03: Allow communication for all channels linked to Test_ComMUser_2_RteUser
        using the ComM_CommunicationAllowed API.
    05: Clear inhibition status.
    06: Request Full communication mode for Test_ComMUser_2_RteUser from the
        RTE using the API Rte_Call_R_RequestMode_RequestComMode.
    07: Call ComM_MainFunction of corresponding channel until
          - ComM requests Full communication mode to the corresponding
            state managers for all channels linked to Test_ComMUser_2_RteUser.
          - ComM module calls Nm_NetworkRequest for all channels linked to
            Test_ComMUser_2_RteUser.
          - Test_ComMUser_2_RteUser reach the Full communication mode.
    08: Verify that the Requested mode is COMM_FULL_COMMUNICATION.
    09: Simulate the Network mode indication for all channels linked to
        Test_ComMUser_2_RteUser.
    10: Call main functions of all channels of Test_ComMUser_2_RteUser when
        ComMode is Full ComMode (Network Mode).
    11: Verify that the current ComM mode is COMM_FULL_COMMUNICATION.
    12: VP (ComM.SWS_ComM_00744):
        - The current mode set in the RTE is COMM_FULL_COMMUNICATION
        using the API Rte_Mode_R_currentMode_currentMode.
    13: Verify that the RTE Report counter is one.
    14: VP (ComM.SWS_ComM_00745):
        Request NO communication mode for Test_ComMUser_2_RteUser from the RTE
        using the API Rte_Call_R_RequestMode_RequestComMode.
    15: Call main functions of all channels of Test_ComMUser_2_RteUser when
        ComMode is Full ComMode (Network Mode).
    16: Prepare Bus Sleep Mode for the channel 0 corresponding to
        Test_ComMUser_2_RteUser.
    17: Call main functions of all channels of Test_ComMUser_2_RteUser when
        ComMode is Full ComMode (Ready Sleep).
    18: Verify that the Requested mode is COMM_SILENT_COMMUNICATION.
    19: Verify that the current mode set in the RTE using the API
        Rte_Mode_R_currentMode_currentMode is COMM_SILENT_COMMUNICATION.
    20: Verify that the RTE Report counter value is one.
    21: VP (ComM.SWS_ComM_00778):
        Verify that the current RTE Mode is Silent Communication.
    22: Prepare Bus Sleep Mode for the channel 1 corresponding to
        Test_ComMUser_2_RteUser.
    23: Call main functions of all channels of Test_ComMUser_2_RteUser when
        ComMode is Full ComMode (Ready Sleep).
    24: Verify that the Requested mode is COMM_SILENT_COMMUNICATION.
    25: Verify that the current mode set in the RTE using the API
        Rte_Mode_R_currentMode_currentMode is COMM_SILENT_COMMUNICATION.
    26: Verify that the RTE Report counter value is one.
    27: VP (ComM.SWS_ComM_00778):
        Verify that the current RTE Mode is Silent Communication.
    28: Prepare Bus Sleep Mode for the channel 0 corresponding to
        Test_ComMUser_2_RteUser.
    29: Call main functions of all channels of Test_ComMUser_2_RteUser when
        ComMode is Silent ComMode .
    30: Verify that the RTE Report counter value is one.
    31: VP (ComM.SWS_ComM_00778):
        Verify that the current mode set in the RTE using the API
        Rte_Mode_R_currentMode_currentMode is COMM_NO_COMMUNICATION.
    32: Prepare Bus Sleep Mode for the channel 1 corresponding to
        Test_ComMUser_2_RteUser.
    33: Call main functions of all channels of Test_ComMUser_2_RteUser when
        ComMode is Silent ComMode .
    34: Verify that the RTE Report counter value is one.
    35: VP (ComM.SWS_ComM_00091, ComM.SWS_ComM_00778):
        Verify that the current mode set in the RTE using the API
        Rte_Mode_R_currentMode_currentMode is COMM_NO_COMMUNICATION.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00744</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00745</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00778</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00848</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2313</internalId></specobject>
    <specobject>
      <id>TS_COMM_30076</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_Rte/source/application/Tests.c</sourcefile>
      <sourceline>1044</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM_PreventWakeUp call from RTE and the response
    of ComM. Along with that the Bus wake up inhibition.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Initialize the CanSM stub.
    02: Initialize the ComM module.
    03: Clear inhibition status.
    04: VP (ComM.SWS_ComM_00848):
        Call ComM_ResetInhibitCounter to reset inhibition counter value and
        check the return value.
    05: Call ComM_SetECUGroupClassification  from the RTE using the API
        Rte_Call_R_SetECUGroupClassification_SetECUGroupClassification
        to set the ECUGroupClassification for WakeUp inhibition only.
    06: VP (ComM.SWS_ComM_00848):
        DeInitialise ComM to write the latest to NvM.
    07: Initialise ComM again to read back the latest from NvM.
    08: Allow communication for all channels linked to Test_ComMUser_2_RteUser
        using the ComM_CommunicationAllowed() API.
    09: Call ComM_PreventWakeUp(TRUE) from the RTE using the API
        Rte_Call_R_PreventWakeUp_PreventWakeUp of corresponding channel to
        enable and switch on wake up inhibition.
    10: Call ComM_GetInhibitionStatus  from the RTE using the API
        Rte_Call_R_GetInhibitionStatus_GetInhibitionStatus() of corresponding
        channel to get status.
    11: Verify that the inhibition status of channel is set to
        COMM_PREVENT_WAKEUP for Wake up inhibition active.
    12: Request Full communication mode for Test_ComMUser_2_RteUser from the
        RTE using the API Rte_Call_R_RequestMode_RequestComMode().
    13: Call ComM_GetRequestedComMode to get the requested mode for
        Test_ComMUser_2_RteUser from the RTE using the API
        Rte_Call_R_GetRequestedComMode_GetRequestedComMode() and verify that
        the requested ComMode is COMM_FULL_COMMUNICATION.
    14: Call main function of channel with wakeup prevention.
    15: Verify that no mode request was issued.
    16: Call main functions of all channels of Test_ComMUser_2_RteUser.
    17: Verify that mode requests were issued for the other channels.
    18: Simulate the network mode indication for all channels of
        Test_ComMUser_2_RteUser.
    19: Call main functions of all channels of Test_ComMUser_2_RteUser
    20: VP (ComM.SWS_ComM_00740,ComM.SWS_ComM_00741):
        Call ComM_ReadInhibitCounter from the RTE using the API
        Rte_Call_R_ReadInhibitCounter_ReadInhibitCounter to get amount of
        rejected "Full Communication" request.
    21: Verify that the current ComM mode is COMM_NO_COMMUNICATION  by calling
        ComM_GetCurrentComMode from the RTE using the API
        Rte_Call_R_GetCurrentComMode_GetCurrentComMode to get the current mode.
    22: VP (ComM.SWS_ComM_00742, ComM.SWS_ComM_00744, ComM.SWS_ComM_00747):
        - Call ComM_PreventWakeUp(FALSE) from the RTE using the API
          Rte_Call_R_PreventWakeUp_PreventWakeUp of corresponding channel
          to disable and switch off wake up inhibition.
    23: VP (ComM.SWS_ComM_00742, ComM.SWS_ComM_00744, ComM.SWS_ComM_00747):
        Call ComM_GetInhibitionStatus from the RTE using the API
        Rte_Call_R_GetInhibitionStatus_GetInhibitionStatus of corresponding
        channel to get status.
    24: Check that the inhibition status is 0.
    25: Call main function of channel with wakeup prevention.
    26: Verify that mode request was issued to CanSM.
    27: Verify that the requested mode is COMM_FULL_COMMUNICATION.
    28: Verify that the requested channel is Test_ComMChannel_1.
    29: Call main functions of all channels of Test_ComMUser_2_RteUser.
    30: Simulate the network mode indication for all channels of
        Test_ComMUser_2_RteUser.
    31: Call main functions of all channels of Test_ComMUser_2_RteUser.
    32: Call ComM_ReadInhibitCounter from the RTE using the API
        Rte_Call_R_ReadInhibitCounter_ReadInhibitCounter() to get amount of
        rejected "Full Communication" request.
    33: VP (ComM.SWS_ComM_00839, ComM.SWS_ComM_00840, ComM.SWS_ComM_00745):
        Call ComM_GetCurrentComMode from the RTE using the API
        Rte_Call_R_GetCurrentComMode_GetCurrentComMode() to get the current
        mode and verify that the current ComMode is COMM_FULL_COMMUNICATION.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00740</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00741</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00742</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00744</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00745</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00747</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00848</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00839</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00840</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2314</internalId></specobject>
    <specobject>
      <id>TS_COMM_30077</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_Rte/source/application/Tests.c</sourcefile>
      <sourceline>1291</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM_LimitChannelToNoComMode,
    ComM_GetInhibitionStatus and ComM_ResetInhibitCounter call from RTE and the
    response of ComM.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize the CanSM stub.
    03: Initialize ComM.
    04: Clear inhibition status.
    05: Set the group classification Status from RTE.
    06: DeInitialise ComM to write the latest to NvM.
    07: Initialise ComM again to read back the latest from NvM.
    08: Allow communication for all channels linked to Test_ComMUser_2_RteUser
        using the ComM_CommunicationAllowed() API.
    09: Request Full communication mode for Test_ComMUser_2_RteUser from the
        RTE using the API Rte_Call_R_RequestMode_RequestComMode().
    10: VP (ComM.SWS_ComM_00744):
        - Call ComM_GetRequestedComMode to check whether the requested mode is
        COMM_FULL_COMMUNICATION for Test_ComMUser_2_RteUser from the RTE using
        the API Rte_Call_R_GetRequestedComMode_GetRequestedComMode().
    11: Call main functions of all channels of Test_ComMUser_2_RteUser until
        Network request is called.
    12: Verify that the Requested mode is COMM_FULL_COMMUNICATION.
    13: Simulate the network mode indication for all channels of
        Test_ComMUser_2_RteUser.
    14: Call main functions of all channels of Test_ComMUser_2_RteUser when
        ComMode is Full ComMode (Network Mode).
    15: VP (ComM.SWS_ComM_00744):
        - Call ComM_GetCurrentComMode from the RTE using the API
        Rte_Call_R_GetCurrentComMode_GetCurrentComMode() to verify that the
        current mode is COMM_FULL_COMMUNICATION.
    16: VP (ComM.SWS_ComM_00745):
        - Call ComM_ResetInhibitCounter from the RTE using the API
        Rte_Call_R_ResetInhibitCounter_ResetInhibitCounter().
    17: VP (ComM.SWS_ComM_00752,ComM.SWS_ComM_00743):
        Call ComM_LimitChannelToNoComMode  from the RTE using the API
        Rte_Call_R_LimitChannelToNoComMode_LimitChannelToNoComMode() of
        corresponding channel to set "No Communication" enabled.
    18: Call main functions of all channels of Test_ComMUser_2_RteUser.
    19: Call ComM_GetInhibitionStatus  from the RTE using the API
        Rte_Call_R_GetInhibitionStatus_GetInhibitionStatus() of corresponding
        channel to get status.
    20: Verify that the  inhibition status of channel is set for limitation to
        "No Communication" mode active.
    21: Check whether Nm_NetworkRelease is called.
    22: Check that Nm_NetworkRelease is called for Channel 1.
    23: Request Full communication mode for Test_ComMUser_2_RteUser from the
        RTE using the API Rte_Call_R_RequestMode_RequestComMode().
    24: Call ComM_ReadInhibitCounter from RTE using the API
        Rte_Call_R_ReadInhibitCounter_ReadInhibitCounter() to get amount of
        rejected "Full Communication" request.
    25: Call ComM_LimitChannelToNoComMode  from the RTE using the API
        Rte_Call_R_LimitChannelToNoComMode_LimitChannelToNoComMode() of
        corresponding channel to set "No Communication" disabled.
    26: Request Full communication mode for Test_ComMUser_2_RteUser from the
        RTE using the API Rte_Call_R_RequestMode_RequestComMode().
    27: Call main functions of all channels of Test_ComMUser_2_RteUser
    28: Verify Network Request is called and for channel 1.
    29: Call ComM_GetMaxComMode from the RTE using the API
        Rte_Call_R_GetMaxComMode_GetMaxComMode() to get the max mode available
        which is COMM_FULL_COMMUNICATION.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00743</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00744</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00745</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00752</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2315</internalId></specobject>
    <specobject>
      <id>TS_COMM_30078</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_Rte/source/application/Tests.c</sourcefile>
      <sourceline>1511</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behaviour of ComM_LimitECUToNoComMode ComM_ReadInhibitCounter,
    ComM_GetInhibitionStatus and ComM_ResetInhibitCounter call from RTE and the
    response of ComM.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    Note:
    A failure will be returned when Main functions of channels linked to any
    user are not able to produce the desired transition within a timeout
    period.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize the CanSM stub.
    03: Initialize ComM.
    04: Allow communication for all channels linked to Test_ComMUser_2_RteUser
        using the ComM_CommunicationAllowed() API.
    05: Clear inhibition status.
    06: Request Full communication mode for Test_ComMUser_2_RteUser from the
        RTE using the API Rte_Call_R_RequestMode_RequestComMode().
    07: VP (ComM.SWS_ComM_00848):
        - Call ComM_GetRequestedComMode to get the requested mode for
        Test_ComMUser_2_RteUser from the RTE using the API
        Rte_Call_R_GetRequestedComMode_GetRequestedComMode().
    08: Call main functions of all channels of Test_ComMUser_2_RteUser until
        Network request is called.
    09: Verify that the Requested mode is COMM_FULL_COMMUNICATION.
    10: Simulate the network mode indication for all channels of
        Test_ComMUser_2_RteUser.
    11: Call main functions of all channels of Test_ComMUser_2_RteUser when
        ComMode is Full ComMode (Network Mode).
    12: Call ComM_GetCurrentComMode  from the RTE using the API
        Rte_Call_R_GetCurrentComMode_GetCurrentComMode() to get the current
        mode which is COMM_FULL_COMMUNICATION.
    13: Call ComM_ResetInhibitCounter  from the RTE using the API
        Rte_Call_R_ResetInhibitCounter_ResetInhibitCounter().
    14: Call ComM_LimitECUToNoComMode  from the RTE using the API
        Rte_Call_R_LimitECUToNoComMode_LimitECUToNoComMode of corresponding
        channel with status "TRUE" to set "No Communication" enabled.
    15: Call main functions of all channels of Test_ComMUser_2_RteUser when
        ComMode is Full ComMode (Network Mode).
    16: Call ComM_GetInhibitionStatus  from the RTE using the API
        Rte_Call_R_GetInhibitionStatus_GetInhibitionStatus of corresponding
        channel to get status.
    17: Call main functions of all channels of Test_ComMUser_2_RteUser.
    18: Check whether Nm_NetworkRelease is called
    19: Request Full communication mode for Test_ComMUser_2_RteUser from the
        RTE using the API Rte_Call_R_RequestMode_RequestComMode().
    20: Call ComM_GetMaxComMode from the RTE using the API
        Rte_Call_R_GetMaxComMode_GetMaxComMode to get the max. mode available.
    21: Call ComM_ReadInhibitCounter from RTE using the API
        Rte_Call_R_ReadInhibitCounter_ReadInhibitCounter() to get amount of
        rejected "Full Communication" request.
    22: VP (ComM.SWS_ComM_00740, ComM.SWS_ComM_00741):
        Call ComM_LimitECUToNoComMode  from the RTE using the API
        Rte_Call_R_LimitECUToNoComMode_LimitECUToNoComMode() of corresponding
        channel with status "FALSE" to set "No Communication" disabled.
    23: Full communication request from RTE.
    24: Call main functions of all channels of Test_ComMUser_2_RteUser.
    25: Verify whether Nm_NetworkRequest is called equal to the total number of
        channles of Test_ComMUser_2_RteUser.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00740</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00741</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00848</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2316</internalId></specobject>
    <specobject>
      <id>TS_COMM_Rte_fullComRequestors</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_Rte/source/application/Tests.c</sourcefile>
      <sourceline>1736</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test the RTE interface ComM_CurrentChannelRequest.
  
Test Object: None.
Test Precondition: 
    ComMFullCommRequestNotificationEnabled is enabled.
  
Test Execution: 
    Note:
    A failure will be returned when Main functions of channels linked to any
    user are not able to produce the desired transition within a timeout period.

    Simulate the reset of the ComM module to reset the stub counters and
    indication flags.

    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize the CanSM stub
    03: Initialize the ComM module.
    04: Clear inhibition status for all channels.
    05: Allow communication for all channels linked to Test_ComMUser_2_RteUser
        and Test_ComMUser_3 using the ComM_CommunicationAllowed API.
    06: Simulate COMM_FULL_COMMUNICATION request from Test_ComMUser_2_RteUser
        (id 2).
    07: VP (ComM.EB.SWS_ComM_00904, ComM.SWS_ComM_00744):
        - Check fullComRequestors reported to RTE for channel 0 and channel 6.
    08: VP (ComM.SWS_ComM_00848, ComM.SWS_ComM_00734, ComM.SWS_ComM_00736):
        Simulate COMM_FULL_COMMUNICATION request from Test_ComMUser_4 (id 4).
    09: VP (ComM.EB.SWS_ComM_00904):
        - Check fullComRequestors reported to RTE for channel 0 and channel 6.
    10: VP (ComM.SWS_ComM_00848, ComM.SWS_ComM_00734, ComM.SWS_ComM_00736):
        Simulate COMM_FULL_COMMUNICATION request from Test_ComMUser_3 (id 3).
    11: VP (ComM.EB.SWS_ComM_00904):
        - Check fullComRequestors reported to RTE for channel 0 and channel 6.
    12: VP (ComM.SWS_ComM_00848, ComM.SWS_ComM_00734, ComM.SWS_ComM_00736):
        Simulate COMM_NO_COMMUNICATION request from Test_ComMUser_2_RteUser.
    13: VP (ComM.EB.SWS_ComM_00904):
        - Check fullComRequestors reported to RTE for channel 0 and channel 6.
    14: VP (ComM.SWS_ComM_00848, ComM.SWS_ComM_00734, ComM.SWS_ComM_00736):
        Simulate COMM_NO_COMMUNICATION request from Test_ComMUser_3.
    15: VP (ComM.EB.SWS_ComM_00904):
        - Check fullComRequestors reported to RTE for channel 0 and channel 6.
    16: VP (ComM.SWS_ComM_00848, ComM.SWS_ComM_00734, ComM.SWS_ComM_00736):
        Simulate COMM_NO_COMMUNICATION request from Test_ComMUser_4 (id 4).
    17: VP (ComM.EB.SWS_ComM_00904):
        - Check fullComRequestors reported to RTE for channel 0 and channel 6.
  
Test Input: None.
Test Output: 
    During all checks, the fullComRequestors reported for the correspongin
    channel match the expected values:

    check #   numberOfRequesters   handleArray   numberOfRequesters   handleArray
              channel 0            channel 0     channel 6            channel 6
    (1)       1                    2             0                    -
    (2)       2                    2, 4          0                    -
    (3)       2                    2, 4          1                    3
    (4)       1                    4             1                    3
    (5)       1                    4             0                    -
    (6)       0                    -             0                    -
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00734</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00736</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00744</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00848</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00906</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.SWS_ComM_00904</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>757</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00787</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2317</internalId></specobject>
    <specobject>
      <id>TS_COMM_Rte_Types</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_Rte/source/application/Tests.c</sourcefile>
      <sourceline>1927</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check the type definitions generated by the RTE.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    At compile time (top of this file): use typedefs to check that the expected
    types ComM_ModeType and ComM_InhibitionStatusType are present.
    At compile time (using preprocessor): check that the expected defines for
    all values of ComMMode are present.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00672</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00669</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2318</internalId></specobject>
    <specobject>
      <id>TS_COMM_NotifyModeSwitchtoSWC</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_Rte/source/application/Tests.c</sourcefile>
      <sourceline>1975</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that a second mode switch indication to SWC (via Rte) is correctly
    notified by ComM, for the scenario Full Com -&gt; Silent Com -&gt; No Com.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Reset stub counts and initialize ComM module.
    02: Allow communication for all channels linked to Test_ComMUser_2_RteUser
        using the ComM_CommunicationAllowed() API.
    03: Simulate COMM_FULL_COMMUNICATION request from Test_ComMUser_2_RteUser
        (id = 2) and invoke main function of all the channels until channel
        reaches full communication mode.
    04: VP (ComM.EB_Ref.SWS_ComM_00828.Rte_Ports_UserMode_P.FULL_COMMUNICATION):
        - Verify the current mode as COMM_FULL_COMMUNICATION.
    05: Prevent scheduling by using the API GetResource(RES_SCHEDULER).
    06: Request No Communication for Test_ComMUser_2_RteUser.
    07: Simulate Prepare bus sleep mode indication for Channel_2 of
        Test_ComMUser_2_RteUser.
    08: Invoke main function of Channel_2. (Note that a (1st) mode switch from
        Full Com to Silent Com shall be notified to Rte in step-07 but the
        original switch in SWC can happen only in step-10).
    09: VP (ComM.EB_Ref.SWS_ComM_00828.Rte_Ports_UserMode_P.SILENT_COMMUNICATION):
        - Simulate Bus sleep mode indication for Channel_2.
    10: Invoke main function of Channel_2. (Note that a (2n- mode switch from
        Silent Com to No Com shall be notified to Rte in step-09 but the
        original switch in SWC can happen only in step-10).
    11: Allow scheduling using the API ReleaseResource(RES_SCHEDULER).
    12: VP (ComM.SWS_ComM_00778, ComM.EB_Ref.SWS_ComM_00828.Rte_Ports_UserMode_P.NO_COMMUNICATION):
        Last (Second) mode switch notified to RTE as 'No Communication mode'.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00778</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Rte_Ports_UserMode_P.NO_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Rte_Ports_UserMode_P.SILENT_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00828.Rte_Ports_UserMode_P.FULL_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>551</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2319</internalId></specobject>
    <specobject>
      <id>TS_COMM_NotifyModeSwitchDirectPncUser</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_Rte/source/application/Tests.c</sourcefile>
      <sourceline>2129</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that when a channel is associated with both direct user
    (configuration parameter "ComMUserPerChannel") and PNC user (configuration
    parameter "ComMUserPerPnc"), all the users are notified for the changes
    in communication mode (see requ. [ComM.SWS_ComM_00778]).
    Hint: This indirectly verifies that mode switch points are generated
    for such a configuration scenario (see Jira ticket ASCCOMM-602).
  
Test Object: None.
Test Precondition: 
    - Important test configuration details:
      - ComMChannel_7_PncDirectUser (CAN bus) is associated with the users:
        - ComMUser_5_RteDirectUser
        - ComMUser_6_RtePncUser1
        - ComMUser_7_RtePncUser2
      - ComMUser_5_RteDirectUser is directly connected to the channel via
        parameter "ComMUserPerChannel"
      - ComMUser_6_RtePncUser1 and ComMUser_7_RtePncUser2 are connected to
        the channel via parameter "ComMUserPerPnc"
  
Test Execution: 
    Notes:
      1) All references of "channel" refer to ComMChannel_7_PncDirectUser;
         i.e., throughout this test case, the concerned channel is
         "ComMChannel_7_PncDirectUser"
      2) All references of "direct user" refer to ComMUser_5_RteDirectUser
      3) All references of "indirect users" refer to ComMUser_6_RtePncUser1
         and ComMUser_7_RtePncUser2

    01: Prepare preconditions:
        - Initialize ComM
        - Initialize callout functions
        - Reset stub invocation counters
        - Allow communication for required channels
    02: Request "Full Communication" for both "direct user" and "indirect
        users".
    03: Invoke main function of channel
    04: Indicate network mode for channel and invoke main function
    05: VP (ComM.SWS_ComM_00778):
        - Channel has entered COMM_FULL_COMMUNICATION mode
        - All three users are notified (Rte_Switch call back is invoked) with
          new mode value COMM_FULL_COMMUNICATION.
    06: Request "No Communication" for all 3 users and invoke main function
        of channel
    07: Indicate Prepare bus sleep mode and invoke main function of channel
    08: VP (ComM.SWS_ComM_00778):
        - Channel has entered COMM_SILENT_COMMUNICATION mode
        - All three users are notified (Rte_Switch call back is invoked) with
          mode value COMM_SILENT_COMMUNICATION.
    09: Indicate Bus sleep mode and invoke main function of channel
    10: VP (ComM.SWS_ComM_00778):
        - Channel has entered COMM_NO_COMMUNICATION mode
        - All three users are notified (Rte_Switch call back is invoked) with
          change in mode as COMM_NO_COMMUNICATION.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00778</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2320</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Test_ComM_RteModeNotification</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_RteNotification/source/application/Tests.c</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The test should prove that the ComM will notify the RTE about a state change until
    the RTE returns E_OK.
  
Test Object: State machine behaviour
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
  
Test Execution: 
    01: Reset of (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts
    02: Initialize stub invocation counts
    03: Initialize ComM
    04: Set return value of Rte_Switch_UM_ComMUser_Pnc0_currentMode to E_NOT_OK
    05: Allow communication for all the channels
    06: Request Full Communication
    07: VP (ComM.SWS_ComM_00778, ComM.EB.Dsn.StateDynamics.TOPNotifyTransition_1)
        Check that on the first main cycle RTE is notified twice
    08: RTE should be notified on each cycle until Rte_Switch_UM_ComMUser_Pnc0_currentMode
        returns E_NOT_OK
    09: Set return value for Rte_Switch_UM_ComMUser_Pnc0_currentMode to E_OK
    10: The RTE is notified for the last time
    11: RTE is not notified any-more
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00778</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.TOPNotifyTransition_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1782</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2321</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Test_ComM_Rte_NrOfRequesters_ClearUser</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_RteNrOfRequesters/source/application/Tests.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that in case channel is in full communication,
   and mode limitation is called,
   channel goes back to no communication and clears user request and
   notifies RTE regarding number of requesters per channel.
   In the test a single user is linked to a single channel.
  
Test Object: State machine behaviour
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
      - RTE is enabled
      - ComMFullCommRequestNotificationEnabled is enabled for the channel
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication 
    03: Reset Stub Counters 
    04: Request full communication 
    05: Check the current state id COMM_FULL_COM_NETWORK_REQUESTED 
    06: BusSm indicates full communication 
    07: Check that number of requesters is updated 
    08: Call limit channel to no communication for channel 0 
    09: Check State machine entered Ready Sleep state 
    10: Call ComM_Nm_BusSleepMode 
    11: BusSm indicates No communication 
    12: VP(ComM.EB.RteNrOfRequesters)
        - Check Number of requesters is updated
    13: Check State machine entered Ready Sleep state
    14: Remove limit channel to no communication for channel 0
    15: Check User request has been cleared (channel stays in no communication)
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.RteNrOfRequesters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>677</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2322</internalId></specobject>
    <specobject>
      <id>TS_COMM_Test_ComM_Rte_NrOfRequesters_PreventWakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_RteNrOfRequesters/source/application/Tests.c</sourcefile>
      <sourceline>187</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that if 
    - wakeup inhibition is invoked and
    - channel is in no communication and 
    - user requests full communication
   RTE is updated with number of requesters
  
Test Object: State machine behaviour
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
      - RTE is enabled
      - ComMFullCommRequestNotificationEnabled is enabled for the channel
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication
    03: Reset Stub Counters
    04: Call Prevenet Wakeup
    05: Request full communication
    06: Check Channel is in no communication
    07: VP(ComM.EB.RteNrOfRequesters)
        - Check that number of requesters is updated
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.RteNrOfRequesters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>677</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2323</internalId></specobject>
    <specobject>
      <id>TS_COMM_Test_ComM_Rte_NrOfRequesters_LimitChannelToNoCom</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_RteNrOfRequesters/source/application/Tests.c</sourcefile>
      <sourceline>272</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test should prove that if 
    - limit channel to no communication is invoked and
    - channel is in no communication and 
    - user requests full communication
   RTE is updated with number of requesters
  
Test Object: State machine behaviour
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
      - RTE is enabled
      - ComMFullCommRequestNotificationEnabled is enabled for the channel
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication
    03: Reset Stub Counters
    04: Request full communication
    05: Check that channel is in no communication
    06: VP(ComM.EB.RteNrOfRequesters)
        - Check that number of requesters is updated
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.RteNrOfRequesters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>677</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2324</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_GetCurrenPncComMode_RTE_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_Rte_ServiceAPI2011/source/application/Tests.c</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test that ComM_GetCurrentPNCComMode returns COMM_FULL_COMMUNICATION
    is case PNC is requested.
  
Test Object: None.
Test Precondition: 
   - RTE is used
   - ComMEnableASR40ServiceAPI is set to true
  
Test Execution: 
    01: Initiate modules and stubs
    02: Request full communication
    03: Call mainfunction
    04: VP(ComM.EB.ComM_GetCurrentPNCComMode.ReturnedComMode.COMM_FULL_COMMUNICATION,
           ComM.EB_Ref.SWS_ComM_01000.Operation.GetCurrentPNCComMode)
        - Check ComM_GetCurrentPNCComMode (call via RTE) returns COMM_FULL_COMMUNICATION
  
Test Input: 
   - Call ComM_RequestPNCComMode
  
Test Output: 
   - Request ComM_GetCurrentPNCComMode returns COMM_FULL_COMMUNICATION
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_GetCurrentPNCComMode.ReturnedComMode.COMM_FULL_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>703</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.GetCurrentPNCComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2325</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_PncNoComInitTest</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_SingleChMultiPNC/source/application/Tests.c</sourcefile>
      <sourceline>99</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test the behavior of PNC after initialization and
    ComM_EcuM_WakeUpIndication() indicates wakeup when Synchronous wakeup is set
    to OFF.
  
Test Object: None.
Test Precondition: 
    Synchronous wakeup should be OFF.
  
Test Execution: 
    Note:
    A failure will be returned when Main functions of channels linked to any
    user are not able to produce the desired transition within a timeout period.

    01. Reset stub invocation counts.
    02. Initialize CanSM stub.
    03. Initialize ComM.
    04. VP (ComM.ASR403.SWS_ComM_00908, ComM.SWS_ComM_00926):
        Verify the default state of PNC (no indication to BswM).
    05. Set ComM_CommunicationAllowed to TRUE for all the channels.
    06. Invoke ComM_EcuM_WakeUpIndication() for all channels
    07. Invoke main functions of all channels.
    08. VP (ComM.ASR403.SWS_ComM_00908, ComM.SWS_ComM_00990, ComM.SWS_ComM_00927):
        Verify no state change to Pnc_PrepareSleep state; i.e. no indication to
        BswM.
    09: VP (ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_WakeUpIndication):
        Nm_PassiveStartup() was called for all channels of ComMNmVariant FULL/PASSIVE.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00990</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00925</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00926</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00927</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>ComM.ASR403.SWS_ComM_00908</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_WakeUpIndication</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>564</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2326</internalId></specobject>
    <specobject>
      <id>TS_COMM_SetChannelToNoComIfNoFullComRequested_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_SingleChMultiPNC/source/application/Tests.c</sourcefile>
      <sourceline>197</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    When all users associated to the PNCs connnected to a channel
    request "Full Communication", the channel goes to "No Communication"
    only after all associated PNCs enter PNC_NO_COMMUNICATION.
  
Test Object: None.
Test Precondition: 
    Important test Configuration Details:
      - The user ComMUser_0_Pnc0 is associated to the PNC ComMPnc_0
      - The users ComMUser_1_Pnc1 and ComMUser_2_Pnc1 are associated to
        the PNC ComMPnc_1
      - The users ComMUser_3_Pnc2 and ComMUser_4_Pnc2 are associated to
        the PNC ComMPnc_2
      - The user ComMUser_5_Pnc3 is associated to the PNC ComMPnc_3
      - The channel ComMChannel_0 is the only channel connected to all
        configured PNCs
  
Test Execution: 
    Note: All references of "channel" refer to ComMChannel_0

    01: Initialize test case
        - Reset stub invocation counters
        - Initialize stub callouts
        - Initialize ComM
        - Allow communication on the required channels
    02: All users of the configured PNCs request "Full Communication"
    03: Invoke main function of the channel
    04: Ensure that all PNCs enter PNC_REQUESTED state
    05: Simulate network mode indication and invoke main function of
        the channel
    06: Ensure that the channel enters 'COMM_FULL_COM_NETWORK_REQUESTED' state
    07: Set EIRA bits corresponding to ComMPnc_0, ComMPnc_1, ComMPnc_2 and
        ComMPnc_3 to 1 and indicate a change in EIRA via Com callback
    08: All users of ComMPnc_0 request "No Communication";
        invoke the main function of the channel
    09: VP (ComM.SWS_ComM_00686):
        - The channel is still in state 'COMM_FULL_COM_NETWORK_REQUESTED'
          since other user requests (via ComMPnc_1, ComMPnc_2 and ComMPnc_3)
          still exist
    10: All users of ComMPnc_1 request "No Communication";
        invoke the main function of the channel
    11: VP (ComM.SWS_ComM_00686):
        - The channel is still in state 'COMM_FULL_COM_NETWORK_REQUESTED'
          since other user requests (via ComMPnc_2 and ComMPnc_3) still exist
    12: All users of ComMPnc_2 request "No Communication";
        invoke the main function of the channel
    13: VP (ComM.SWS_ComM_00686):
        - Channel is still in state "Full Comm. Network Requested"
          since other user requests (via ComMPnc_3) still exist
    14: All users of ComMPnc_3 request "No Communication";
        invoke the main function of the channel
    15: VP(ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE):
        - Verify thata all PNC's are in the PNC_READY_SLEEP state
    16: - Ensure the channel statemachine goes to COMM_FULL_COM_READY_SLEEP
        - Ensure Nm_NetworkRelease is called
    17: Clear EIRA bit corresponding to all PNCs except ComMPnc_3 and indicate
        a change in EIRA via Com callback
    18: Invoke main function of the channel
    19: VP(ComM.SWS_ComM_00940):
        - Ensure that all the PNCs except ComMPnc_3 enter PNC_PREPARE_SLEEP state
    20: Invoke mainfunction of the channel continuously until
        PNC_PREPARE_SLEEP timer expires
    21: VP(ComM.SWS_ComM_00947):
        - All PNCs except ComMPnc_3 associated to the channel enter
          PNC_NO_COMMUNICATION state
    22: Clear the EIRA bit corresponds to ComMPnc_3 and indicate
        a change in EIRA via Com callback
    23: Invoke main function of the channel
    24: VP(ComM.SWS_ComM_00940):
        - Ensure that ComMPnc_3 enters PNC_PREPARE_SLEEP state
    25: Invoke mainfunction of the channel continuously until
        PNC_PREPARE_SLEEP timer expires
    26: VP(ComM.SWS_ComM_00947):
        - Ensure that ComMPnc_3 enters PNC_NO_COMMUNICATION state
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00888</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00686</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00940</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00947</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2327</internalId></specobject>
    <specobject>
      <id>TS_COMM_SetChannelToNoComIfNoFullComRequested_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_SingleChMultiPNC/source/application/Tests.c</sourcefile>
      <sourceline>473</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test case verifies that, when a channel is connected with multiple
    PNCS, and all PNCs were already requested with "Full Communication",
    the channel won't go into "No Communication", unless all the PNCs are
    requested with "No Communication" (by the user) and the PNC has entered
    PNC_NO_COMMUNICATION. (ComM.SWS_ComM_00686 and ComM.EB.SWS_ComM_00830)
  
Test Object: None.
Test Precondition: 
   Important test Configuration Details:
    * User-0 is associated with PNC_2
    * User-1 is associated with PNC_11
    * User-2 is associated with PNC_11
    * User-3 is associated with PNC_20
    * User-4 is associated with PNC_20
    * User-5 is associated with PNC_28
    * All the PNCs are having mapped with same channel "ComMChannel_0".
  
Test Execution: 
    Note: All References of "channel" refers to ComMChannel_0

    01: Initialize test case
        * Reset stub invocation counters
        * Initialize callout stubs
        * Initialize ComM
        * Allow communication for the required channels
    02: Simulate EIRA
        Request "Full Communication" user request for all the PNCs
    03: Invoke main function of the channel
    04: Ensure that all PNCs entered into PNC_REQUESTED state
    05: Simulate network mode indication and invoke main funtion of the channel
    06: Ensure that the channel has entered into "Full Comm. Network Requested"
        state
    07: Request "No Communication" for the User(s) of PNC_2 and invoke
        corresponding main function
    08: VP (ComM.SWS_ComM_00686):
        * Channel is still in state "Full Comm. Network Requested"
          since other user requests (via PNC_11, PNC_20 &amp; PNC_28) still exists
    09: Request "No Communication"  for the User(s) of PNC_11 and invoke
        corresponding main function
    10: VP (ComM.SWS_ComM_00686):
        * Channel is still in state "Full Comm. Network Requested"
          since other user requests (via PNC_20 &amp; PNC_28) still exists
    11: Request "No Communication" for the User(s) of PNC_20 and invoke
        corresponding main function
    12: VP (ComM.SWS_ComM_00686):
        * Channel is still in state "Full Comm. Network Requested"
          since other user requests (via PNC_28) still exists
    13: Request "No Communication" for the User(s) of PNC_28 and invoke
        corresponding main function
    14: * Ensure All the PNCs are in PNC_READY_SLEEP state
        * Channel is in COMM_FULL_COM_READY_SLEEP
          since other PNCs have not yet entered PNC_NO_COMMUNICATION
          * Nm_NetworkRelease() is called
    15: Simulate EIRA bit is now reset to '0' for all the PNCs
    16: Indicate the change in EIRA
    17: Invoke main function of the channel
    18: Ensure all the PNCs which uses this shared channel have entered
        PNC_PREPARE_SLEEP state
    19:  * Current state of the channel's of PNCs is still
           'COMM_FULL_COM_READY_SLEEP'
    20: Invoke mainfunction of the channels until PNC_PREPARE_SLEEP timer
        expires
    21.1:  * All the PNCs which uses this shared channel have entered into
             PNC_NO_COMMUNICATION state
    21.2: VP (ComM.SWS_ComM_00686):
           Channel_0 has transited to COMM_FULL_COM_READY_SLEEP
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00888</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00686</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2328</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_SingleChMultiPNCIntExtReq</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_SingleChMultiPNCIntExtReq/source/application/Tests.c</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    When a channel is associated with more than one PNC and all users have requested
    'Full Communication' and afterwards all users request 'No Communication'
    the channel should be released even if there are PNC'S which are in PNC_FULL_COM
    state but have been requested externally from the beginning (eg. they weren't first
    internally requested and then externally).
  
Test Object: None.
Test Precondition: 
    Important Configuration Details:
      - The channel ComMChannel_0 is associated to PNCs
        ComMPnc_0, ComMPnc_1 and ComMPnc_2
      - The user ComMUser_0 is associated to ComMPnc_0
      - The user ComMUser_1 is associated to ComMPnc_2
      - No user mapped to ComMPnc_1 as it's only externally requested
    Module State:
      - Module is initialized
      - Communication is allowed for all channels
      - Stub invocation counters are reset to 0
  
Test Execution: 
    Note: All references of "channel" refer to ComMChannel_0

    01: Initialize test case
        - Reset stub invocation counters
        - Initialize stub callouts
        - Initialize ComM
        - Allow communication for the required channels
    02: Request 'Full Communication' for the Test_ComMUser_0 and Test_ComMUser_1 users
    03: Set EIRA bits corresponding to ComMPnc_0, ComMPnc_2(internal users)
        to 1 and indicate a change in EIRA via Com callback
    04: Invoke main function of the channel
    05: Ensure that both ComMPnc_0 and ComMPnc_2 enter PNC_REQUESTED state
    06: Simulate network mode indication for the channel
    07: VP (ComM.SWS_ComM_00686):
        - Ensure that the current state of the channel is 'COMM_FULL_COM_NETWORK_REQUESTED'
    08: Set the corresponding EIRA bit for ComMPnc_1(external request) so a change will be
        signalized via Com callback
    09: Check if, for ComMPnc_1, the current state is PNC_READY_SLEEP.
    10: Request COMM_NO_COMMUNICATION for Test_ComMUser_0
    11: Clear the ComMPnc_0 EIRA bit and indicate an EIRA change via Com callback
    12: Check that ComMPnc_0 goes to PNC_PREPARE_SLEEP via intermediary state PNC_READY_SLEEP.
    13: Invoke main function of the channel so that the Prepare Sleep Timer expires
    14: Check if the current state for ComMPnc_0 is PNC_NO_COMMUNICATION
    15: Invoke main function of the channel for a while
    16: VP (ComM.SWS_ComM_00686):
        - Check if the current state is still COMM_FULL_COM_NETWORK_REQUESTED as the channel
        is still requested by ComMPnc_2
    17: Request COMM_NO_COMMUNICATION for Test_ComMUser_1 and clear the corresponding PNC bit
    18: VP(ComM.SWS_ComM_00133):
        - Check if the channel state machine goes COMM_FULL_COM_READY_SLEEP
        - Check is Nm_NetworkRelease has been called
    19: Check that ComMPnc_2 goes to PNC_NO_COMMUNICATION via intermediary states PNC_READY_SLEEP
        and PNC_PREPARE_SLEEP
    20: Clear all EIRA bits to indicate an EIRA change via Com callback
    21: Check if ComMPnc_1 goes to PNC_PREPARE_SLEEP
    22: Check that after Prepare Sleep Timer expires, ComMPnc_1 goes to PNC_NO_COMMUNICATION
    23: Check if the current state for ComMPnc_1 is PNC_NO_COMMUNICATION
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00888</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00686</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00938.ComMPncGatewayEnabled.FALSE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>595</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2329</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_VLAN_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_VLAN/source/application/Tests.c</sourcefile>
      <sourceline>63</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that if for a PNC ComM_EcuM_PNCWakeUpIndication is called
    the managing channels of the channels which are part of the PNC
    shall switch to COMM_NO_COM_REQUEST_PENDING
  
Test Object: VLAN
Test Precondition: 
   - Synchronuos wakeup is set to false
   - Test_ComMChannel_CH0_Managed is part of PNC with id 8
   - Test_ComMChannel_CH1_Managing manages channel Test_ComMChannel_CH0_Managed
  
Test Execution: 
    01: Call ComM_EcuM_PNCWakeUpIndication
    02: VP(ComM.SWS_ComM_01014,
           ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_3)
        - check that the managing channel switched state to COMM_NO_COM_REQUEST_PENDING
  
Test Input: 
    Call ComM_EcuM_PNCWakeUpIndication for PNC with id 8
  
Test Output: 
    Check that managing channel switched to COMM_NO_COM_REQUEST_PENDING
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_01014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.PASSIVE_WAKEUP_IND_NO_COM_NO_PENDING_REQUEST_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1730</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2330</internalId></specobject>
    <specobject>
      <id>TS_COMM_VLAN_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_VLAN/source/application/Tests.c</sourcefile>
      <sourceline>129</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that if for a channel ComM_EcuM_WakeUpIndication is called
    the managing channel of the called channel
    shall switch to COMM_NO_COM_REQUEST_PENDING
  
Test Object: VLAN
Test Precondition: 
   - Synchronuos wakeup is set to false
   - Test_ComMChannel_CH1_Managing manages channel Test_ComMChannel_CH0_Managed
  
Test Execution: 
    01: Call ComM_EcuM_WakeUpIndication
    02: VP(ComM.EB_Ref.SWS_ComM_00893.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.ManagingChannel)
        - check that the managing channel switched state to COMM_NO_COM_REQUEST_PENDING
  
Test Input: 
    Call ComM_EcuM_WakeUpIndication for channel Test_ComMChannel_CH0_Managed
  
Test Output: 
    Check that managing channel switched to COMM_NO_COM_REQUEST_PENDING
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00893.ComM_EcuM_WakeUpIndication.ComMSynchronousWakeUp.False.ManagingChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>563</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2331</internalId></specobject>
    <specobject>
      <id>TS_COMM_VLAN_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_VLAN/source/application/Tests.c</sourcefile>
      <sourceline>192</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that if for a channel ComM_EcuM_WakeUpIndication is called
    the managing channel of the called channel  shall wake up passively
  
Test Object: VLAN
Test Precondition: 
   - Synchronuos wakeup is set to false
   - Test_ComMChannel_CH1_Managing manages channel Test_ComMChannel_CH0_Managed
  
Test Execution: 
    00: Test init
    01: Call communication allowed
    02: Call ComM_EcuM_PNCWakeUpIndication
    03: VP(ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_WakeUpIndication.ManagedChannel)
        - check that the managing channel woke up pasively
  
Test Input: 
    Call ComM_EcuM_WakeUpIndication for managed channel
  
Test Output: 
    Check that managing channel switched to COMM_NO_COM_REQUEST_PENDING
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_WakeUpIndication.ManagedChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>566</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2332</internalId></specobject>
    <specobject>
      <id>TS_COMM_VLAN_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_VLAN/source/application/Tests.c</sourcefile>
      <sourceline>263</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that if for a PNC ComM_EcuM_PNCWakeUpIndication is called
    the managing channels of the channels which are part of the PNC
    shall wake up passively
  
Test Object: VLAN
Test Precondition: 
   - Synchronuos wakeup is set to false
   - Test_ComMChannel_CH0_Managed is part of PNC with id 8
   - Test_ComMChannel_CH1_Managing manages channel Test_ComMChannel_CH0_Managed
  
Test Execution: 
    00: Test init
    01: Call communication allowed
    02: Call ComM_EcuM_PNCWakeUpIndication
    03: VP(ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_PNCWakeUpIndication.ManagedChannel)
        - check that the managing channel woke up pasively
  
Test Input: 
    Call ComM_EcuM_PNCWakeUpIndication for PNC with id 8
  
Test Output: 
    Check that managing channel was requested with passive startup
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00665.ComM_EcuM_PNCWakeUpIndication.ManagedChannel</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>567</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2333</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>58</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case PNC state machine enters from
    PNC_NO_COMMUNICATION to PNC_REQUESTED state and ComMPncWakeupSleepRequestEnabled is set to false
    BswM_ComM_CurrentPNCMode is called with PNC_FULL_COMMUNICATION and PNC_REQUESTED
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMPncWakeupSleepRequestEnabled is set to false for current PNC
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: VP(ComM.SWS_ComM_00151)
        Request Full Communication
    04: VP(ComM.EB_Ref.ASR21-11.SWS_ComM_01069.COMM_PNC_REQUESTED.Entry)
  
Test Input: 
   request COMM_FULL_COMMUNICATION
  
Test Output: 
   check that BSWM is notified with PNC_REQUESTED
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00899</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01069.COMM_PNC_REQUESTED.Entry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2334</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>131</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case PNC state machine enters PNC_REQUESTED from
    PNC_PREPARE_SLEEP state and ComMPncWakeupSleepRequestEnabled is set to false
    BswM_ComM_CurrentPNCMode is called with PNC_REQUESTED
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMPncWakeupSleepRequestEnabled is set to false for current PNC
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Call ComM_EcuM_PNCWakeUpIndication
    04: Check that PncPrepareSleep state is reached
    05: VP(ComM.SWS_ComM_00151)
        Request Full Communication
    06: VP(ComM.EB_Ref.ASR21-11.SWS_ComM_01069.COMM_PNC_REQUESTED.Entry)
        - check that PNC_REQUESTED state is notified to BSWM
  
Test Input: 
   call ComM_EcuM_PNCWakeUpIndication
   request COMM_FULL_COMMUNICATION
  
Test Output: 
   check that BSWM is notified with PNC_REQUESTED
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01069.COMM_PNC_REQUESTED.Entry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2335</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_03</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>215</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case PNC state machine enters PNC_REQUESTED from
    PNC_SLEEP_SLEEP state and ComMPncWakeupSleepRequestEnabled is set to false
    BswM_ComM_CurrentPNCMode is called with PNC_REQUESTED
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMPncWakeupSleepRequestEnabled is set to false for current PNC
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Simulate EIRA
    04: Check that PncPrepareSleep state is reached
    05: VP(ComM.SWS_ComM_00151)
        Request Full Communication
    06: VP(ComM.EB_Ref.ASR21-11.SWS_ComM_01067.COMM_PNC_PREPARE_SLEEP.To.COMM_PNC_REQUESTED)
        - check that PNC_REQUESTED state is notified to BSWM
  
Test Input: 
   simulate signal is received by ComM
   request COMM_FULL_COMMUNICATION
  
Test Output: 
   check that BSWM is notified with PNC_REQUESTED
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01067.COMM_PNC_PREPARE_SLEEP.To.COMM_PNC_REQUESTED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>583</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ComM_PncReadySleep_PncRequested_User</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>639</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2336</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_04</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>309</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case PNC state machine enters from
    PNC_NO_COMMUNICATION to PNC_REQUESTED state and ComMPncWakeupSleepRequestEnabled is set to false
    BswM_ComM_CurrentPNCMode is called with PNC_FULL_COMMUNICATION and COMM_PNC_REQUESTED
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMPncWakeupSleepRequestEnabled is set to false for current PNC
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: VP(ComM.SWS_ComM_00151)
        Request Full Communication
    04: VP(ComM.EB_Ref.ASR21-11.SWS_ComM_01067.COMM_PNC_NO_COM.To.COMM_PNC_REQUESTED)
  
Test Input: 
   request COMM_FULL_COMMUNICATION
  
Test Output: 
   check that BSWM is notified with COMM_PNC_REQUESTED_WITH_WAKEUP_REQUEST
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00899</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01067.COMM_PNC_NO_COM.To.COMM_PNC_REQUESTED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>582</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2337</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_05</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>382</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case PNC state machine enters PNC_REQUESTED_from
    PNC_PREPARE_SLEEP state and ComMPncWakeupSleepRequestEnabled is set to false
    COMM_PNC_REQUESTED is called
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMPncWakeupSleepRequestEnabled is set to false for current PNC
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Call ComM_EcuM_PNCWakeUpIndication
    04: Check that PncPrepareSleep state is reached
    05: VP(ComM.SWS_ComM_00151)
        Request Full Communication
    06: VP(ComM.EB_Ref.ASR21-11.SWS_ComM_01067.COMM_PNC_PREPARE_SLEEP.To.COMM_PNC_REQUESTED)
        - check that COMM_PNC_REQUESTED_WITH_WAKEUP_REQUEST state is notified to BSWM
  
Test Input: 
   call ComM_EcuM_PNCWakeUpIndication
   request COMM_FULL_COMMUNICATION
  
Test Output: 
   check that BSWM is notified with COMM_PNC_REQUESTED_WITH_WAKEUP_REQUEST
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00899</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01067.COMM_PNC_PREPARE_SLEEP.To.COMM_PNC_REQUESTED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>583</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2338</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_06</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>469</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case PNC state machine enters from
    PNC_READY_SLEEP state and ComMPncWakeupSleepRequestEnabled is set to false
    PNC_REQUESTED is called
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMPncWakeupSleepRequestEnabled is set to false for current PNC
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Call ComM_EcuM_PNCWakeUpIndication
    04: Check that PncPrepareSleep state is reached
    05: VP(ComM.SWS_ComM_00151)
        Request Full Communication
    06: VP(ComM.EB_Ref.ASR21-11.SWS_ComM_01071.COMM_PNC_REQUESTED.Entry)
        - check that PNC_REQUESTED state is notified to BSWM
  
Test Input: 
   simulate signal is received by ComM
   request COMM_FULL_COMMUNICATION
  
Test Output: 
   check that BSWM is notified with PNC_REQUESTED
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.ECUC_ComM_00899</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01071.COMM_PNC_REQUESTED.Entry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2339</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_07</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>561</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case channel state machine is in ready sleep and
    channel is linked to a PNC, when PNC state machine enters PNC_REQUESTED state
    channel shall be also requested
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMWakeupSleepRequestEnabled is set to false for current channel
    Parameter ComMPncWakeupSleepRequestEnabled is set to false for current PNC
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Perform a passive startup
    04: Check thye current state is Ready Sleep State
    05: Request Full Communication
    06: VP(ComM.EB_Ref.ASR21-11.SWS_ComM_01069.COMM_PNC_REQUESTED.Entry)
  
Test Input: 
   call ComM_EcuM_WakeUpIndication
   request COMM_FULL_COMMUNICATION
  
Test Output: 
   check that ComM channel is requested
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01069.COMM_PNC_REQUESTED.Entry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>584</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2340</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_08</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>647</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case channel state machine is in ready sleep and
    channel is linked to a PNC, when PNC state machine enters PNC_REQUESTED state
    from PNC_NO_COMMUNICATION, channel shall be also requested
    BswM_ComM_CurrentPNCMode shall be called with COMM_PNC_REQUESTED_WITH_WAKEUP_REQUEST as request parameter
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMWakeupSleepRequestEnabled is set to true for current channel
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Perform a passive startup
    04: Check thye current state is Ready Sleep State
    05: Request Full Communication
    06: Check current PNC state
    07: VP(ComM.EB_Ref.ASR21-11.SWS_ComM_01070.COMM_PNC_NO_COM.To.COMM_PNC_REQUESTED)
        - Check the channel state machine is in requested state
  
Test Input: 
   call ComM_EcuM_WakeUpIndication
   request COMM_FULL_COMMUNICATION
  
Test Output: 
   check that ComM channel is requested
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01070.COMM_PNC_NO_COM.To.COMM_PNC_REQUESTED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
        <provcov>
          <linksto>ComM.ECUC_ComM_00898</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2341</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_09</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>739</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case channel state machine is in ready sleep and
    channel is linked to a PNC, when PNC state machine enters PNC_REQUESTED state
    from PNC_PREPARE_SLEEP, channel shall be also requested
    BswM_ComM_CurrentPNCMode shall be called with COMM_PNC_REQUESTED_WITH_WAKEUP_REQUEST as request parameter
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMPncWakeupSleepRequestEnabled is set to true for current PNC
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Perform a passive startup
    04: Check the current state is Ready Sleep State
    03: Call ComM_EcuM_PNCWakeUpIndication 
    04: Check that PncPrepareSleep state is reached
    05: Request Full Communication
    06: Check current PNC state
    07: VP(ComM.EB_Ref.ASR21-11.SWS_ComM_01070.COMM_PNC_PREPARE_SLEEP.To.COMM_PNC_REQUESTED)
        - Check the channel state machine is in requested state
  
Test Input: 
   call ComM_EcuM_WakeUpIndication
   request COMM_FULL_COMMUNICATION
  
Test Output: 
   check that ComM channel is requested
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01070.COMM_PNC_PREPARE_SLEEP.To.COMM_PNC_REQUESTED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>586</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2342</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>838</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case channel state machine is in ready sleep state and
    channel is linked to a PNC, when PNC state machine enters PNC_REQUESTED state
    from PNC_READY_SLEEP, channel shall be also requested
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMPncWakeupSleepRequestEnabled is set to true for current PNC
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Perform a passive startup
    04: Check the current state is Ready Sleep State
    05: Simulate EIRA
    06: Check that PncReadySleep state is reached
    07: Request Full Communication
    08: Check current PNC state
    09: VP(ComM.EB_Ref.ASR21-11.SWS_ComM_01071.COMM_PNC_REQUESTED.Entry)
        - Check the channel state machine is in requested state
  
Test Input: 
   call ComM_EcuM_WakeUpIndication
   simulate eira
   request COMM_FULL_COMMUNICATION
  
Test Output: 
   check that ComM channel is requested
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01071.COMM_PNC_REQUESTED.Entry</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>587</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2343</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>944</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case channel state machine is in COMM_NO_COMMUNICATION
    and pnc state machine is in PNC_READY_SLEEP state
    and user request full communication, BusSm is requested with COMM_FULL_COMMUNICATION
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMWakeupSleepRequestEnabled is set to true for current channel
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Simulate EIRA
    04: Check that PncPrepareSleep state is reached
    05: Request Full Communication
    06: check that PNC_REQUESTED state is notified to BSWM
    08: VP(ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION.WithRequest.COMM_FULL_COMMUNICATION)
        Check that EthSM is requested with COMM_FULL_COMMUNICATION
  
Test Input: 
    simulate EIRA
    request COMM_FULL_COMMUNICATION
  
Test Output: 
   check that BusSm is requested with COMM_FULL_COMMUNICATION
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION.WithRequest.COMM_FULL_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>588</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2344</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_12</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>1044</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test shall prove that in case channel state machine is in COMM_NO_COMMUNICATION
    and pnc state machine is in PNC_NO_COMMUNICATION state
    and user request full communication, BusSm is requested with COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST
    if ComMWakeupSleepRequestEnabled is true
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMWakeupSleepRequestEnabled is set to true for current channel
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Request Full Communication
    04: check that PNC_REQUESTED state is notified to BSWM
    05: VP(ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST)
        Check that EthSM is requested with COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST
  
Test Input: 
    simulate EIRA
    request COMM_FULL_COMMUNICATION
  
Test Output: 
   check that BusSm is requested with COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2345</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_13</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>1131</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test shall prove that in case channel state machine is in COMM_SILENT_COMMUNICATION
    and pnc state machine is in PNC_PREPARE_SLEEP state
    and user request full communication, BusSm is requested with COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST
    if ComMWakeupSleepRequestEnabled is true
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMWakeupSleepRequestEnabled is set to true for current channel
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Call ComM_EcuM_PNCWakeUpIndication
    04: Check that PncPrepareSleep state is reached
    05: Check current state is Ready Sleep State
    06: Simulate Prepare Bus Sleep Mode
    07: Check current state is Silent Communication
    08: Request Full Communication
    09: check that PNC_REQUESTED state is notified to BSWM
    10: VP(ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST)
        Check that EthSM is requested with COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST
  
Test Input: 
    call ComM_EcuM_PNCWakeUpIndication
    request COMM_FULL_COMMUNICATION
  
Test Output: 
   check that BusSm is requested with COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2346</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_14</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>1244</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test shall prove that in case channel state machine is in COMM_NO_COMMUNICATION
    and pnc state machine is in PNC_NO_COMMUNICATION state
    and user request full communication, BusSm is requested with COMM_FULL_COMMUNICATION
    if ComMWakeupSleepRequestEnabled is false
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMWakeupSleepRequestEnabled is set to false for current channel
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Request Full Communication
    04: check that PNC_REQUESTED state is notified to BSWM
    05: VP(ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST)
        Check that EthSM is requested with COMM_FULL_COMMUNICATION
  
Test Input: 
    simulate EIRA
    request COMM_FULL_COMMUNICATION
  
Test Output: 
   check that BusSm is requested with COMM_FULL_COMMUNICATION
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2347</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_15</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>1330</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test shall prove that in case channel state machine is in COMM_SILENT_COMMUNICATION
    and pnc state machine is in PNC_PREPARE_SLEEP state
    and user request full communication, BusSm is requested with COMM_FULL_COMMUNICATION
    if ComMWakeupSleepRequestEnabled is false
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMWakeupSleepRequestEnabled is set to false for current channel
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Call ComM_EcuM_PNCWakeUpIndication
    04: Check that PncPrepareSleep state is reached
    05: Check current state is Ready Sleep State
    06: Simulate Prepare Bus Sleep Mode
    07: Check current state is Silent Communication
    08: Request Full Communication
    09: check that PNC_REQUESTED state is notified to BSWM
    10: VP(ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST)
        Check that EthSM is requested with COMM_FULL_COMMUNICATION
  
Test Input: 
    call ComM_EcuM_PNCWakeUpIndication
    request COMM_FULL_COMMUNICATION
  
Test Output: 
   check that BusSm is requested with COMM_FULL_COMMUNICATION
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>590</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1684</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2348</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_16</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>1444</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case channel state machine is in COMM_FULL_COMMUNICATION
    and pnc state machine is in PNC_READY_SLEEP state
    and user which has Pnc linked to it requests full communication
    EthSM is not notified if ComMWakeupSleepRequestEnabled is true
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMWakeupSleepRequestEnabled is set to true for current channel
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Request Full Communication
    04: Simulate EIRA
    05: Check that PncPrepareSleep state is reached
    06: Request Full Communication
    07: check that PNC_REQUESTED state is notified to BSWM
    08: VP(SWS_ComM_01057)
        Check that EthSM is not requested
  
Test Input: 
    request COMM_FULL_COMMUNICATION
    simulate EIRA
  
Test Output: 
   check that BusSm is not requested when pnc enters PNC_REQUESTED state
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>SWS_ComM_01057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2349</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_17</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>1553</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case channel state machine is in COMM_FULL_COMMUNICATION
    and pnc state machine is in PNC_NO_COMMUNICATION state
    and user which has Pnc linked to it requests full communication
    EthSM is notified if ComMWakeupSleepRequestEnabled is true
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMWakeupSleepRequestEnabled is set to true for current channel
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Perform a passive startup
    04: Check thye current state is Ready Sleep State
    05: Request Full Communication
    06: Check current PNC state
    10: VP(SWS_ComM_01057, ComM.EB.Dsn.StateDynamics.FullCommunicationAction1)
        Check that EthSM is requested with COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST
  
Test Input: 
   request COMM_FULL_COMMUNICATION for the user which does not have PNC linked to it
   request COMM_FULL_COMMUNICATION for the user which has PNC linked to it
  
Test Output: 
   check that EthSM is requested
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>SWS_ComM_01057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FullCommunicationAction1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1785</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2350</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_18</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>1648</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case channel state machine is in COMM_FULL_COMMUNICATION
    and pnc state machine is in PNC_PREPARE_SLEEP state
    and user which has Pnc linked to it requests full communication
    EthSM is notified if ComMWakeupSleepRequestEnabled is true
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMWakeupSleepRequestEnabled is set to true for current channel
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Request Full communication
    04: Check the current state is Network Requested
    05: Call ComM_EcuM_PNCWakeUpIndication
    06: Check that PncPrepareSleep state is reached
    07: Request Full Communication
    08: check that COMM_PNC_REQUESTED_WITH_WAKEUP_REQUEST state is notified to BSWM
    09: VP(SWS_ComM_01057, SWS_ComM_01057, ComM.EB.Dsn.StateDynamics.FullCommunicationAction1)
        Check that EthSM is requested with COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST
  
Test Input: 
   request COMM_FULL_COMMUNICATION for the user which does not have PNC linked to it
   request COMM_FULL_COMMUNICATION for the user which has PNC linked to it
  
Test Output: 
   check that EthSM is requested
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>SWS_ComM_01057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.StateDynamics.FullCommunicationAction1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1785</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2351</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_19</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>1751</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case channel state machine is in COMM_FULL_COMMUNICATION
    and pnc state machine is in PNC_READY_SLEEP state
    and user which has Pnc linked to it requests full communication
    EthSM is not notified if ComMWakeupSleepRequestEnabled is false
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMWakeupSleepRequestEnabled is set to false for current channel
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Request Full Communication
    04: Simulate EIRA
    05: Check that PncPrepareSleep state is reached
    06: Request Full Communication
    07: check that PNC_REQUESTED state is notified to BSWM
    08: VP(SWS_ComM_01057)
        Check that EthSM is not requested
  
Test Input: 
    request COMM_FULL_COMMUNICATION
    simulate EIRA
  
Test Output: 
   check that EthSM is not requested when pnc enters PNC_REQUESTED state
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>SWS_ComM_01057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2352</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_20</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>1860</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case channel state machine is in COMM_FULL_COMMUNICATION
    and pnc state machine is in PNC_NO_COMMUNICATION state
    and user which has Pnc linked to it requests full communication
    EthSM is not notified if ComMWakeupSleepRequestEnabled is false
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMWakeupSleepRequestEnabled is set to false for current channel
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Perform a passive startup
    04: Check thye current state is Ready Sleep State
    05: Request Full Communication
    06: Check current PNC state
    10: VP(SWS_ComM_01057)
        Check that EthSM is not requested
  
Test Input: 
   request COMM_FULL_COMMUNICATION for the user which does not have PNC linked to it
   request COMM_FULL_COMMUNICATION for the user which has PNC linked to it
  
Test Output: 
   check that EthSM is not requested
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>SWS_ComM_01057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2353</internalId></specobject>
    <specobject>
      <id>TS_COMM_WakeupOnDataLine_21</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_01/source/application/Tests.c</sourcefile>
      <sourceline>1952</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case channel state machine is in COMM_FULL_COMMUNICATION
    and pnc state machine is in PNC_PREPARE_SLEEP state
    and user which has Pnc linked to it requests full communication
    EthSM is notified if ComMWakeupSleepRequestEnabled is false
  
Test Object: None.
Test Precondition: 
    Requested user is linked to PNC
    Parameter ComMWakeupSleepRequestEnabled is set to false for current channel
  
Test Execution: 
    01: Initialize ComM
    02: Allow communication for all the channels
    03: Request Full communication
    04: Check the current state is Network Requested
    05: Call ComM_EcuM_PNCWakeUpIndication
    06: Check that PncPrepareSleep state is reached
    07: Request Full Communication
    08: check that COMM_PNC_REQUESTED_WITH_WAKEUP_REQUEST state is notified to BSWM
    09: VP(SWS_ComM_01057)
        Check that EthSM is not requested
  
Test Input: 
   request COMM_FULL_COMMUNICATION for the user which does not have PNC linked to it
   request COMM_FULL_COMMUNICATION for the user which has PNC linked to it
  
Test Output: 
   check that EthSM is requested
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>SWS_ComM_01057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2354</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_ConTest_WakeupOnDataLine_MulticorePerChannel_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_MulticorePerChannel_02/source/application/Tests.c</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test shall prove that in case pnc requested is eneter from pnc no communication and
    ComMWakeupSleepRequestEnabled is set to true EthSm is called with
    COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - gateway functionailty is enabled
   - ComMWakeupSleepRequestEnabled is set to true
   - channel gateway type is set to active
  
Test Execution: 
    01: Initialize test case
    02: Allow communication
    03: Request Full Communication
    04: Check that Multicore functionality is used
    05: Check that PNC state machine reached PNC_REQUESTED state
    06: VP(ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST)
        - Check that EthSM is called with COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST
  
Test Input: 
   - request full communication 
  
Test Output: 
   - check that EthSM is called with COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2355</internalId></specobject>
    <specobject>
      <id>TS_COMM_ConTest_WakeupOnDataLine_MulticorePerChannel_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_MulticorePerChannel_02/source/application/Tests.c</sourcefile>
      <sourceline>137</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test shall prove that in case pnc requested is eneter from pnc no communication and
    ComMWakeupSleepRequestEnabled is set to true EthSm is called with
    COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - gateway functionailty is enabled
   - ComMWakeupSleepRequestEnabled is set to true
   - channel gateway type is set to passive
   - PNC zero vector avoidance is configured
  
Test Execution: 
    01: Initialize test case
    02: Allow communication
    03: Request Full Communication
    04: Check that Multicore functionality is used
    05: Check that PNC state machine reached PNC_REQUESTED state
    06: VP(ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST)
        - Check that EthSM is called with COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST
  
Test Input: 
   - request full communication 
  
Test Output: 
   - check that EthSM is called with COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.BusSM_RequestComModeFULLCOM_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1683</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2356</internalId></specobject>
    <specobject>
      <id>TS_COMM_ConTest_WakeupOnDataLine_MulticorePerChannel_03_DET</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_MulticorePerChannel_02/source/application/Tests.c</sourcefile>
      <sourceline>227</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test shall prove that in case data set from  Pnc Partition to Channel partition 
    fails Det Is reported
  
Test Object: None.
Test Precondition: 
   - multicore per channel is enabled
   - gateway functionailty is enabled
   - ComMWakeupSleepRequestEnabled is set to true
   - channel gateway type is set to active
  
Test Execution: 
    01: Initialize test case
    02: Allow communication
    03: Request Full Communication
    04: Check Det Is reported
  
Test Input: 
   - request full communication 
  
Test Output: 
   - check that EthSM is called with COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.MasterPncToChannelSetError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>742</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PncMainfunctionDataSetSIDError</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>732</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2357</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_ConTest_WakeupOnDataLine_SchM_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_SchM_03/source/application/Tests.c</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
   Test shall prove that in case multicore is enabled,
   EthSM is notified on ComM channel state change
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
    ComMWakeupSleepRequestEnabled is set to true
    A pnc is configured
  
Test Execution: 
    01: Initialize module and stubs
    02: Request Full Communication
    03: Check current state
    04: VP(ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST)
        - Check that EthSM is notified
    05: Request No Communication
    06: Check current state
    07: Simulate Prepare Bus Sleep Mode
    08: Check current state
    09: Check that EthSM is notified
    10: Simulate Bus Sleep Mode
    11: Check current state
    12: VP(ComM.SWS_ComM_00073)
        - Check that EthSM is notified
  
Test Input: 
    Request Full Communication
    Request No Communication
  
Test Output: 
    Check that EthSM is called with correct mode
  </description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00069.BusSMRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST.WithRequest.COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>589</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2358</internalId></specobject>
    <specobject>
      <id>TS_COMM_ConTest_WakeupOnDataLine_SchM_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_SchM_03/source/application/Tests.c</sourcefile>
      <sourceline>180</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test shall prove that in case multicore is enabled,
   EthSM is notified with COMM_FULL_COMMUNICATION_WITH_WAKEUP_REQUEST 
   even if the channel is in COMM_FULL_COMMUNICATION
   ComM channel state change if ComMWakeupSleepRequestEnabled is true
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
    ComMWakeupSleepRequestEnabled is set to true
    A pnc is configured
  
Test Execution: 
    01: Initialize module and stubs
    02: Request Full Communication
    03: Check current state
    04: Check that EthSM is notified
    06: Request Full Communication
    07: Check current state
    08: VP(SWS_ComM_01057)
        - Check that EthSM is notified
  
Test Input: 
    Request Full Communication
    Request No Communication
  
Test Output: 
    Check that EthSM is called with correct mode
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>SWS_ComM_01057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2359</internalId></specobject>
    <specobject>
      <id>TS_COMM_ConTest_WakeupOnDataLine_SchM_03</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Conformance/IN/ComM_ConTest_WakeupOnDataLine_SchM_03/source/application/Tests.c</sourcefile>
      <sourceline>271</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   Test shall prove that in case multicore is enabled,
   and EthSM request fails DET is reported
  
Test Object: None.
Test Precondition: 
    ComMMultiCoreSupport == TRUE
    ComMWakeupSleepRequestEnabled is set to true
    A pnc is configured
  
Test Execution: 
    01: Initialize module and stubs
    02: Request Full Communication
    03: Check current state
    04: VP(ComM.EB_Ref.ASR21-11.SWS_ComM_01070.COMM_PNC_NO_COM.To.COMM_PNC_REQUESTED)
        - Check that EthSM is notified
    05: Check DET is reported
  
Test Input: 
    Request Full Communication
    Request No Communication
  
Test Output: 
    Check that EthSM is called with correct mode
    DET is reported
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.ASR21-11.SWS_ComM_01070.COMM_PNC_NO_COM.To.COMM_PNC_REQUESTED</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>585</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2360</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_30115</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_1/source/application/Tests.c</sourcefile>
      <sourceline>123</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test default value of ComM CommunicationAllowed after initialization.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
    02: Initialize the CanSM stub.
    03: Initialize ComM module.
    04: Clear inhibition status for all channels.
    05: VP (ComM.SWS_ComM_00884):
        - The default value of Communication allowed for all
        channels after initialization is FALSE.
  
Test Input: None.
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00884</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2361</internalId></specobject>
    <specobject>
      <id>TS_COMM_SwitchToNoComIfChanIsRel</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_1/source/application/Tests.c</sourcefile>
      <sourceline>187</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    The motivation of this test case is to verify that the bug which was
    reported by a customer and managed in ticket "ASCCOMM-342" got solved in
    the code.
    The reported bug scenario:
    If a ComM channel is configured with NmVariant set to "NONE" / "LIGHT", the
    ComM stays in state "NetReqNoNm" (EB specific substate of state
    "COMM_FULL_COMMUNICATION") and the application requests / releases the
    communication channel more often than the event queue of the FSM has free
    event entries before timeout "MIN_FULL_COM_MODE_DURATION" expires then
    the ComM might get stuck in this state in dependency of the number of
    user requests.
    This happened because the event queue fills up and the timeout event
    related to the "MIN_FULL_COM_MODE_DURATION" timeout can't be stored within
    the event queue anymore.
    The event queue has now the size of the amount of defined events and events
    are only added to the queue, if they are not already contained in the
    queue.
    Therefore this test shall verify that the FSM is capable of leaving state
    "NetReqNoNm" independently of the number of user requests when the timeout
    expires and all other conditions are met.
    Important test configuration details:
    * Channel_4 has NmVariant "LIGHT" and the associated user is
      Test_ComMUser_1
    * Channel_6 / Channel_7 have NmVariant "NONE" and the associated user is
      Test_ComMUser_3
  
Test Object: ComM FSM
Test Precondition: 
    ComM is in FSM state "NetReqNoNm".
    There are at least two channels available which cover NmVariant "LIGHT" as
    well as "NONE".
  
Test Execution: 
    01: Test initialization.
    02: Allow communication for all channels of Test_ComMUser_1.
    03: Request "Full communication" for Test_ComMUser_1 to bring Channel_4
        into state "NetReqNoNm" mode and invoke the main function of this
        channel.
    04: Verify that current communication mode of Test_ComMUser_1 is
        "COMM_FULL_COMMUNICATION".
    05: Request "No communication" for Test_ComMUser_1 more often than the size
        of the event queue.
    06: Invoke main functions of all channels of Test_ComMUser_1 until timeouts
        "Minimum full com mode duration" and "Light timeout" expire.
    07: VP (ComM.EB_Ref.SWS_ComM_00889.NmVariant.LIGHT):
        - The current communication mode of Test_ComMUser_1 is
        "No Communication" now.
    08: Allow communication for all channels of Test_ComMUser_3.
    09: Request "Full communication" for Test_ComMUser_3 to bring Channel_6
        and Channel_7 into network requested mode and invoke main functions of
        all channels of Test_ComMUser_3.
    10: Verify that current communication mode of Test_ComMUser_3 is
        "COMM_FULL_COMMUNICATION".
    11: Request "No communication" for Test_ComMUser_3 more often than the size
        of the event queue.
    12: Invoke main functions of all channels of Test_ComMUser_3 until timeout
        "Minimum full com mode duration" expires.
    13: VP (ComM.EB_Ref.SWS_ComM_00889.NmVariant.NONE):
        - The current communication mode of Test_ComMUser_3 is
        "No Communication" now.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00889.NmVariant.NONE</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_00889.NmVariant.LIGHT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2362</internalId></specobject>
    <specobject>
      <id>TS_COMM_GoFromSilComToFulComWithoutAbort</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_1/source/application/Tests.c</sourcefile>
      <sourceline>346</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test motivation:
      The motivation of this test case is to verify that the bug which was
      reported by a customer and managed in ticket "ASCCOMM-401" got solved in
      the code.
    Bug scenario reported by customer:
      Bug scenario for the ACG-6.4.1 ComM State machine:
      While the current ComM state is "SILENT_COMMUNICATION" an event
      "REQ_STATUS_CHANGED" and afterwards an event "NM_BUS_SLEEP_MODE" (both
      events are deferred in this state) occur and are queued in the FSM event
      queue. Finally event "BUSSM_MODE_IND_SILENT_COM" is received which
      switches the FSM into state "SilentComNotified".
      With the next main function invocation ComM processes first event
      "REQ_STATUS_CHANGED" and switches to state "WffcToNetReqActive" (in this
      state event "NM_BUS_SLEEP_MODE" is also deferred).
      After reception of event "BUSSM_MODE_IND_FULL_COM" the FSM transits either
      to state "ReqNetworkWait" (for NmVariant "FULL") or to state
      "PassiveStartupWait" (for NmVariant "PASSIVE").
      Furthermore there is a transition from state "FullCom" to state
      "WaitForNoCom" available that gets triggered by event "NM_BUS_SLEEP_MODE"
      which is still pending (in ComM design version against which the bug was
      reported) since its occurrence in state "WaitForSilentCom".
      In consequence the transition sequence to state "FullCom" will be aborted
      as the FSM will switch from the state "ReqNetworkWait" / "PassiveStartupWait"
      to state "WaitForNoCom".
      Scenario for the ACG-6.4.2 ComM State machine:
      While the current ComM state is "SILENT_COMMUNICATION" an event
      "REQ_STATUS_CHANGED" and afterwards an event "NM_MODE_SWITCHED" (Nm Bus Sleep Mode) occur and
       are queued in the FSM event queue.
      With the next main function invocation ComM processes first event
      "REQ_STATUS_CHANGED" and switches to state "FULL_COM_NETWORK_REQUESTED_ENTRY" (substate of
      state "FULL_COMMUNICATION"), where the event "NM_MODE_SWITCHED" must be ignored, because
      furthermore there is a transition from state "FULL_COMMUNICATION" to state
      "NO_COMMUNICATION" available that gets triggered by event "NM_MODE_SWITCHED".
    Test objective:
      It shall be ensured that a pending event "NM_MODE_SWITCHED" does not abort
      the transition sequence to state "FULL_COMMUNICATION"
      (substate "FULL_COM_NETWORK_REQUESTED_PENDING") when all other
      preconditions are met for this transition sequence.
    Rationale:
      Transition sequences may not be aborted if the necessary conditions are
      met.
    Important test configuration details:
      * ComMChannel(s) associated with ComMUser_0 has ComMNmVariant "FULL"
  
Test Object: ComMs FSM design
Test Precondition: 
    * ComM is in FSM state "SILENT_COMMUNICATION".
    * All the ComMChannels associated with the ComMUser should have
      ComMNmVariant "FULL"
  
Test Execution: 
    01: Prepare preconditions
        * Test case initialization
        * Allow communication for all channels
        * Bring ComM to state "COMM_FULL_COMMUNICATION"
        * Indicate Prepare-bus-sleep mode for all channels of ComMUser_0 in
          order to switch to state "SILENT_COMMUNICATION"
        * Call main functions for ComMUser_0
    02: Request full communication for ComMUser_0
    03: Indicate Nm Bus-sleep mode for all channels of ComMUser_0
    04: Call the main functions for ComMUser_0 several times.
    05: VP (ComM.SWS_ComM_00877):
        All channels of user "ComMUser_0" reached state "COMM_FULL_COM_NETWORK_REQUESTED"
        (concerned channels are: ComMChannel_0, ComMChannel_1, ComMChannel_2,
        ComMChannel_3)
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00877</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2363</internalId></specobject>
    <specobject>
      <id>TS_COMM_IgnoreBusSMNotOK</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_1/source/application/Tests.c</sourcefile>
      <sourceline>504</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test motivation:
      The motivation of this test case is to verify that the bug which was
      reported by a customer and managed in ticket "ASCCOMM-456" got solved in
      the code.
    Bug scenario reported by customer:
      When an ECU gets started by a FR bus via a passive wake-up, ComM requests
      the underlying bus (FrSM) with COMM_FULL_COMMUNICATION.
      If the underlying bus (FrSM) fails to switch to communication mode
      "COMM_FULL_COMMUNICATION", ComM FSM gets stuck in an intermediate state
      and the underlying bus (FrSM) is never requested with
      COMM_NO_COMMUNICATION.
      As a consequence transmission of FR startup error frames never ceases
      on the bus.
    Test objective:
      Ensure, that ComM invokes Nm_NetworkRequest() even if the Bus State Manager returns E_NOT_OK
      and does not indicate "Full Communication" mode the ComM.
      Ensure that ComM is capable of switching back to "COMM_NO_COMMUNICATION" by processing a
      user request "COMM_NO_COMMUNICATION"
      (user requested channel with COMM_FULL_COMMUNICATION before) but no mode
      change indication from the underlying Bus State Manager occurs.
    Rationale:
      This enables a SW-C to release the associated ComM channel in case the
      physical bus is unable to wake-up anymore (bus is broken).
  
Test Object: ComMs FSM design
Test Precondition: 
    Important test configuration details:
    * ComMChannels associated with ComMUser_0 are:
      - ComMChannel_0 (CAN bus)
      - ComMChannel_1 (CAN bus)
      - ComMChannel_2 (CAN bus)
      - ComMChannel_3 (FR bus)
  
Test Execution: 
    Note: All references of "user" refer to ComMUser_0.
    01: Initialize test case
    02: Allow communication for all channels of user
    03: Request 'COMM_FULL_COMMUNICATION' for user
    04: Configure BusSM returns E_NOT_OK, when it will be requested with
        COMM_FULL_COMMUNICATION
    05: Call the main function of all channels of user
    06: Verify that BusSM is requested once for each channel with 'Full Communication' as triggered
        in step-3 and step-5
    07: VP (ComM.SWS_ComM_00869, ComM.EB.Dsn.ErrorHandling.BusSm):
        Verify that Nm is requested (even though BusSM has returned E_NOT_OK)
    08: Call the main function of all channels of user
    09: VP (ComM.EB.Dsn.ErrorHandling.BusSm):
        Verify that BusSM is not re-requested with 'Full Communication'
    10: Request 'No communication' for user
    11: Invoke main function of all channels of user
    12: Indicate ComM_Nm_BusSleepMode()
    13: Invoke main function of all channels of user
    14: VP (ComM.SWS_ComM_00073):
        ComMChannel_3 switches back to state 'COMM_NO_COMMUNICATION and requests "No Communication"
        from the BusSM
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.ErrorHandling.BusSm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1827</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00869</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2364</internalId></specobject>
    <specobject>
      <id>TS_COMM_BusSMIndependency</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_1/source/application/Tests.c</sourcefile>
      <sourceline>655</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test case verifies, that ComM does not change its state due to an (unexpected) Bus Mode
    indication.
  
Test Object: ComM FSM design
Test Precondition: 
    Important test configuration details:
    * ComM Channel associated with ComMUser_2 have ComMNmVariant "FULL" which
      concerns these channels:
      - ComMChannel_0 (CAN bus)
  
Test Execution: 
    Note: All references of "user" refer to ComMUser_2.
    01: Prepare preconditions
        * Test case initialization
        * Clear the inhibition status of all channels
        * Simulate BusSM mode indication delays
        * Allow communication for channels ComMChannel_0
    02: Initiate a user Full Communication request
    03: Invoke main function of channel ComMChannel_0
    04: Verify BusSM is requested with COMM_FULL_COMMUNICATION
    05: Verify Nm is requested via Nm_NetworkRequest()
    06: Call ComM_BusSM_ModeIndication(COMM_NO_COMMUNICATION)
    07: Invoke main function of channel ComMChannel_0
    08: VP (ComM.EB.Dsn.Interaction.BusSm):
        The ComM shall not change its state due to the BusSM mode indication.
        * Verify, that ComM did not request any mode to the BusSm.
        * Verify, that ComM did not request or release a network.
    09: Call ComM_BusSM_ModeIndication(COMM_SILENT_COMMUNICATION)
    10: Invoke main function of channel ComMChannel_0
    11: VP (ComM.EB.Dsn.Interaction.BusSm):
        The ComM shall not change its state due to the BusSM mode indication.
        * Verify, that ComM did not request any mode to the BusSm.
        * Verify, that ComM did not request or release a network.
    12: Simulate a user No Communication request
    13: Simulate Network Prepare Bus Sleep Mode by calling ComM_Nm_PrepareBusSleepMode()
    14: Invoke main function of channel ComMChannel_0 to get ComM in state
        "COMM_SILENT_COMMUNICATION"
    15: Verify BusSM is requested with COMM_SILENT_COMMUNICATION
    16: Simulate BusSM to indicate "COMM_FULL_COMMUNICATION"
    17: Invoke main function of channel ComMChannel_0
    18: VP (ComM.EB.Dsn.Interaction.BusSm):
        The ComM shall not change its state due to the BusSM mode indication.
        * Verify, that ComM did not request any mode to the BusSm.
        * Verify, that ComM did not request or release a network.
    19: Simulate BusSM to indicate "COMM_NO_COMMUNICATION"
    20: Invoke main function of channel ComMChannel_0
    21: VP (ComM.EB.Dsn.Interaction.BusSm):
        The ComM shall not change its state due to the BusSM mode indication.
        * Verify, that ComM did not request any mode to the BusSm.
        * Verify, that ComM did not request or release a network.
    22: Simulate Network Bus Sleep Mode by calling ComM_Nm_BusSleepMode()
    23: Invoke main function of channel ComMChannel_0 to get ComM in state
        "COMM_NO_COMMUNICATION"
    24: Verify BusSM is requested with COMM_NO_COMMUNICATION
    25: Verify Nm is released via Nm_NetworkRelease()
    26: Simulate BusSM to indicate "COMM_FULL_COMMUNICATION"
    27: Invoke main function of channel ComMChannel_0
    28: VP (ComM.EB.Dsn.Interaction.BusSm):
        The ComM shall not change its state due to the BusSM mode indication.
        * Verify, that ComM did not request any mode to the BusSm.
        * Verify, that ComM did not request or release a network.
    29: Simulate BusSM to indicate "COMM_SILENT_COMMUNICATION"
    30: Invoke main function of channel ComMChannel_0
    31: VP (ComM.EB.Dsn.Interaction.BusSm):
        The ComM shall not change its state due to the BusSM mode indication.
        * Verify, that ComM did not request any mode to the BusSm.
        * Verify, that ComM did not request or release a network.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.Interaction.BusSm</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1788</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2365</internalId></specobject>
    <specobject>
      <id>TS_COMM_BusSleepIndAndUserRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_1/source/application/Tests.c</sourcefile>
      <sourceline>888</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test motivation:
      The motivation of this test case is to verify the different scenarios
      (applicable for the bus type CAN) for the occurrence of Bus sleep mode
      indication and user requests in various states of ComM, never make Nm out
      of synchronization with ComM, specified under ticket "ASCCOMM-428".
    Test objective:
      Ensure that when BusSleep mode indication followed by user request or
      vice versa occurs at different scenarios / states, ComM maintains
      the synchronization with the Nm module by invoking the APIs
      Nm_NetworkRequest() and Nm_NetworkRelease() correctly.
    Scenario Description:
      The "different scenarios" are described as follows:
      1) a) User has already requested the channel
         b) Nm_BusSleepMode() is indicated
         c) VP: Nm_NetworkRequest() is called

      2) a) Nm_BusSleepMode() is indicated in state "ReqNetworkWait".
            Note: Nm_BusSleepMode() in ReqNetworkWait is not possible to occur
            as Nm_NetworkRequest() is already called before entering state
            ReqNetworkWait
         b) No VP as scenario is not realistic.

      3) a) Nm_BusSleepMode() is indicated in state SilentCom following a
            user request
         b) VP: Nm_NetworkRequest() is called

      4) a) Nm_BusSleepMode() is indicated in state SilentCom followed by a
            user request
         b) Following a Nm_BusSleepMode(), ComM goes to state WaitForNoCom
            where the user request is cleared. Note: This case is handled in
            ASCCOMM-510

    Note that scenario-2 and scenario-4 are not required to be tested in this
    test case. Reason: See (2.b) and (4.b)
  
Test Object: ComM FSM design
Test Precondition: 
    Important test configuration details:
    * ComM Channel associated with ComMUser_0 have ComMNmVariant "FULL" which
      concerns these channels:
      - ComMChannel_0 (CAN bus)
      - ComMChannel_1 (CAN bus)
      - ComMChannel_2 (CAN bus)
      - ComMChannel_3 (Fr bus)
  
Test Execution: 
    Notes:
      1) All references of "user" refer to ComMUser_0.
      2) All references of "channel" refer to ComMChannel_0.
      3) For simplicity, ComMChannel_0 is taken for testing the scenarios. We
         may take ComMChannel_1 or ComMChannel_2 also. But don't take
         ComMChannel_3 because its bus type is Fr, and scenarios tested within
         this test case is applicable to the bus type CAN. Further note that for
         scenarios related to bus type Fr, another test case (conformance test)
         "TS_COMM_NetworkReqAndRel_FullVariant" exists.

    01: Prepare preconditions
        * Test case initialization
        * Clear the inhibition status of all channels
        * Allow communication for channels ComMChannel_0
    02: Initiate a user Full Communication request
    03: Simulate BusSleep Mode by calling ComM_Nm_BusSleepMode()
    04: Invoke main function of channel
    05: Verify BusSM is requested with COMM_FULL_COMMUNICATION
    06: VP (ComM.SWS_ComM_00869):
        * Nm_NetworkRequest() is called
    07: Simulate Network Mode by calling ComM_Nm_NetworkMode() and
        invoke channel main function
    08: Verify that channel has reached COMM_FULL_COM_NETWORK_REQUESTED state
    09: Bring the channel to silent communication state
        * Indicate Prepare bus sleep mode
        * Invoke the channel main function
        * Reset CanSM stub Counter
    10: Simulate a Full communication user request
    11: Simulate BusSleep Mode by calling ComM_Nm_BusSleepMode()
    12: Invoke channel main function
    13: Verify BusSM is requested with COMM_FULL_COMMUNICATION
    14: VP(ComM.SWS_ComM_00869):
        * Nm_NetworkRequest() is called
    15: Simulate Network Mode by calling ComM_Nm_NetworkMode() and
        invoke channel main function
    16: Verify that channel has reached COMM_FULL_COM_NETWORK_REQUESTED state
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00869</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2366</internalId></specobject>
    <specobject>
      <id>TS_COMM_BelatedUserRequest</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_1/source/application/Tests.c</sourcefile>
      <sourceline>1085</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test motivation:
      The motivation of this test case is to ensure that the bug scenario
      reported and managed in Jira ticket "ASCCOMM-510" does not occur.
    Reported scenario:
      If 'COMM_FULL_COMMUNICATION' is requested too late after a ComM channel
      has already switched from 'COMM_FULL_COMMUNICATION' or
      'COMM_SILENT_COMMUNICATION' to 'COMM_NO_COMMUNICATION',
      the user request is accepted and processed but the stored user request
      is cleared.
      As a result, the ComM_GetRequestedComMode() API may return
      an incorrect mode.
    Test Objective:
      Verify that a user request for "Full Communication" which occurs
      just before one of the channels of a user reaches COMM_NO_COMMUNICATION
      is granted if no mode limitation is active when the user request occurs.
      Verify also, that ComM_GetRequestedComMode() API returns the correct
      mode in such a scenario.
  
Test Object: stored user request
Test Precondition: 
    - Current state: Channel is in state COMM_SILENT_COM.
    - Mode limitation is not active.
    - Important configuration details:
    -* ComMChannel associated with ComMUser_2 is ComMChannel_0 (CAN bus)
  
Test Execution: 
    Note: All references of "user" refer to ComMUser_2

    01: Preparation of test case preconditions
        * Test case initialization
        * Allow communication for all channels
        * Bring all channels of the user to Full communication mode by using
          Test_WakeUpIndicationFullComMode()
        * Simulate Prepare-bus-sleep mode indication followed by main function
          invocation of the channel
    02: Simulate Nm Bus-sleep mode indication
    03: Request 'Full communication' for user
    04: Invoke main functions of all channels of the user
    05: Verify the requested mode of the user is COMM_FULL_COMMUNICATION
    06: Invoke main functions of all channels of the user
    07: VP (ComM.SWS_ComM_00582):
        * The stored user request is not cleared as mode limitation
          is not active.
        * ComM_GetRequestedComMode() API returns COMM_FULL_COMMUNICATION
        * BusSM is requested with COMM_FULL_COMMUNICATION
    08: Verify that Nm_NetworkRequest() is called
    09: Simulate Network mode indication for all channels of user
    10: Invoke main functions of all channels of the user
    11: Verify that the belated user request is granted since all channels
        have entered into COMM_FULL_COM_NETWORK_REQUESTED state
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00582</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2367</internalId></specobject>
    <specobject>
      <id>TS_COMM_ModeIndInternalBus</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_1/source/application/Tests.c</sourcefile>
      <sourceline>1265</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Test the communication mode reported to the BswM for a channel of bus type
    COMM_BUS_TYPE_INTERNAL.
  
Test Object: channel with Internal Bus
Test Precondition: 
    ComM channel-7 is of bus type COMM_BUS_TYPE_INTERNAL.
  
Test Execution: 
    01: Preparation of test case preconditions
        * Test case initialization
    02: Initialize ComM
    03: Verify the current state of channel-7 is NO_COM_NO_PENDING_REQUEST
    04: VP(ComM.EB.Dsn.Algorithm.NoComModeInternalBus)
        Verify that mode COMM_NO_COMMUNICATION was not reported to the BswM, because
        COMM_NO_COMMUNICATION was not entered from COMM_FULL_COMMUNICATION.
    05: Allow communication for channel-7
    06: Indicate an active diagnostic session for channel-7
    07: Invoke main functions of channel-7 and verify the current state of channel-7 is
        COMM_FULL_COM_NETWORK_REQUESTED
    08: VP (ComM.EB.Dsn.Algorithm.FullComModeInternalBus)
        Verify mode COMM_FULL_COMMUNICATION is reported to the BswM.
    09: Indicate an inactive diagnostic session for channel-7
    10: Invoke main functions of channel-7 until the timer for ComMTMinFullComModeDuration has
        expired and channel-7 has entered state NO_COM_NO_PENDING_REQUEST
    11: VP (ComM.EB.Dsn.Algorithm.NoComModeInternalBus)
        Verify that mode COMM_NO_COMMUNICATION was reported to the BswM
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.FullComModeInternalBus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1688</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Algorithm.NoComModeInternalBus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1689</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2368</internalId></specobject>
    <specobject>
      <id>TS_COMM_EVENT_QUEUE_IMP</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_1/source/application/Tests.c</sourcefile>
      <sourceline>1374</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Test case for not queuing duplicate events
Test Description: 
    This test verifies, that the event queue cannot overflow. Events can be
    added to the queue, although another event was called before very often.
  
Test Object: Event Queue
Test Precondition: 
    channel-4 is configured with ComNmVariant != PASSIVE.
  
Test Execution: 
    01. Initialize ComM module by calling ComM_Init().
    02. Check the current (default) state of channel-4 is
        COMM_NO_COM_NO_PENDING_REQUEST.
    03. Simulate ComM_DCM_ActiveDiagnostic() for channel 4  more often, than the event queue size
        (= amount of defined events, each event is added to the queue only once), to check
        if other events can still be added to the queue.
    04. Report ComM_DCM_InactiveDiagnostic() for channel 4 so that the Dcm active flag is not set.
    05. Simulate ECU wake up indication to emit event PASSIVE_WAKEUP_IND.
    06. Reset Stub counters.
    07. Call ComM_MainFunction() for channel 4
    08. VP:
        Verify the ComM has entered state COMM_NO_COM_NO_PENDING_REQUEST again
        (that means, the event PASSIVE_WAKEUP_IND could be added to the event
        queue although there was already a huge amount of other events before,
        see step 03.)
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.EventQueue</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>607</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2369</internalId></specobject>
    <specobject>
      <id>TS_COMM_NoNmRequestOnUserRelease</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_1/source/application/Tests.c</sourcefile>
      <sourceline>1458</sourceline>
      <version>1</version>
      <description>Test Synopsis: Test case to ensure, that Nm_NetworkRequest() is not called, when a user releases a
   channel, while another user still requests the channel.
Test Description: 
    This test verifies, that in state COMM_FULL_COM_NETWORK_REQUESTED and a channel is requested by
    two different users (or a user and the Dcm) and one user releases the channel, the ComM does not
    call Nm_NetworkRequest().

    Both, requesting and releasing a channel by a user (or the Dcm) emits the event
    REQ_STATUS_CHANGED. In state COMM_FULL_COM_NETWORK_REQUESTED this event is evaluated.
    If the channel is no longer requested, the ComM channel transits to state
    COMM_FULL_COM_READY_SLEEP, triggered by this event. (ComM.SWS_ComM_00888)
    If a user requests the channel, when it is already in state COMM_FULL_COM_NETWORK_REQUESTED
    shall be called again. 
    But if a user releases the channel by calling ComM_RequestComMode(COMM_NO_COMMUNICATION) or
    ComM_DCM_InactiveDiagnostic(), while another user still requests the channel,
    Nm_NetworkRequest() shall not be called and the channel not switch to state
    COMM_FULL_COM_READY_SLEEP. This is ensured by this test case.
  
Test Object: state COMM_FULL_COM_NETWORK_REQUESTED, calls to Nm_NetworkRequest()
Test Precondition: 
    * channel-0, channel-1, channel-2 and channel-3 are of ComNmVariant FULL.
    * ComMUser_0 is connected to channel-0, channel-1, channel-2 and channel-3.
  
Test Execution: 
    01: Preparation of test case preconditions
        * Test case initialization
        * Initialize ComM
    02: Allow communication for all channels of ComM user ComMUser_0.
    03: Request COMM_FULL_COMMUNICATION for ComM user ComMUser_0.
    04: Invoke all channel main functions.
    05: Verify the current state of all channels of ComMUser_0 is COMM_FULL_COM_NETWORK_REQUESTED.
    06: Nm_NetworkRequest() was called for all channels of Invoke all channel main functions.
    07: Indicate ComM_DCM_ActiveDiagnostic() for channel-0.
    08: Invoke all channel main functions.
    09: Nm_NetworkRequest() must not be called for channel-0 because is already in COMM_FULL_COM_NETWORK_REQUESTED state.
    10: Indicate ComM_DCM_InactiveDiagnostic() for channel-0.
    11: Invoke all channel main functions.
    12: VP:
        * All channels of ComMUser_0 are in state COMM_FULL_COM_NETWORK_REQUESTED.
        * Nm_NetworkRequest() is not called.
        * Nm_NetworkRelease() is not called.
    13: Request COMM_NO_COMMUNICATION for ComM user ComMUser_0.
    14: Invoke all channel main functions.
    15: VP (ComM.SWS_ComM_00888, ComM.SWS_ComM_00133)
        * All channels of ComMUser_0 are in state COMM_FULL_COM_READY_SLEEP.
        * Nm_NetworkRelease() is called for all channels of ComMUser_0.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00888</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2370</internalId></specobject>
    <specobject>
      <id>TS_COMM_EmitSelf</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_1/source/application/Tests.c</sourcefile>
      <sourceline>1604</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test improves the coverage of the HSM.
    It covers the statement ( COMM_EV_COUNTER_ENTRY(sc, instIdx, event) &lt; 1 ) when it's evaluated to false
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: 
    01: Preparation of test case preconditions
        * Test case initialization
        * Initialize ComM
    02. Simulate ECU wake up indication to emit event PASSIVE_WAKEUP_IND.
    03: Allow communication for all channels of ComM user ComMUser_1.
    04: Call Main Function for Channel_4
    05: VP (ComM.SWS_ComM_00899):
        - Verify that Channel_4 gets in COMM_FULL_COM_NETWORK_REQUESTED state
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00899</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2371</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_01_FileStructure</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_2_FileStructure/source/application/ComM_ImpTest_2_StaticFileContent.c</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that file structure of ComM module contains
    ASR40 specific extensions.
  
Test Object: None.
Test Precondition: 
    Folder 'reference' provides:
    - checkComM016.txt (showing all static files of ComM. That is:
      ComM.h, ComM_BSW.h, ComM_Types.h, ComM_BSW_Types.h, ComM_Version.h,
      ComM.c, ComM_Rte.c, ComM_ASR40_Rte.c)
      for comparison.
  
Test Execution: 
    TS5 Test environment steps (see Merged_Makefile.mak):
    01: Grep all static files of installed ComM plugin
    02: VP (ComM.EB.ASR.ComM016):
        - File list of step 01 is according to reference file checkComM016.txt
        (test done by comparison via reference file checkComM016.txt)
    03: Include the difference of the comparison of all previous steps

    Note:
    If there are differences, then due to Step 03 the included file contains
    not compilable content.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>767</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2372</internalId></specobject>
    <specobject>
      <id>TS_COMM_02_FileIncludes</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_2_FileStructure/source/application/ComM_ImpTest_2_StaticFileContent.c</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the file includes of static ComM files is compliant to ASR40
    specific extensions.
  
Test Object: None.
Test Precondition: 
    Folder 'reference' provides
    * checkComMRte.c.txt  (showing includes of ComM_Rte.c which are at least:
      ComM_Rte_Cfg.h, ComM_BSW.h)
    * checkComMASR40Rte.c.txt  (showing includes of ComM_ASR40_Rte.c which are
      at least: ComM_Rte_Cfg.h, ComM_BSW.h)
    * checkComMBSW.h.txt  (showing includes of ComM_BSW.h which are at least
      ComM_BSW_Types.h)
    * checkComMBSWTypes.h.txt  (showing includes of ComM_BSW_Types.h which are
      at least ComM_Cfg.h)
    * checkComM.h.txt  (showing includes of ComM.h which are at least
      ComM_Types.h, ComM_BSW.h)
    * checkComMTypes.h.txt  (showing includes of ComM_Types.h which are at
      least ComM_BSW_Types.h)
    for comparison.
  
Test Execution: 
    TS5 Test environment steps (see Merged_Makefile.mak):
    01: Extract includes of ComM_Rte.c
    02: VP (ComM.EB.ASR.ComM017):
        - Includes of previous step are according to reference file
        checkComMRte.c.txt
    03: Extract includes of ComM_ASR40_Rte.c
    04: VP (ComM.EB.ASR.ComM017):
        - Includes of previous step are according to reference file
        checkComMASR40Rte.c.txt
    05: Extract includes of ComM_BSW.h
    06: VP (ComM.EB.ASR.ComM018):
        - Includes of previous step are according to
        reference file checkComMBSW.h.txt
    07: Extract includes of ComM_BSW_Types.h
    08: VP (ComM.EB.ASR.ComM019):
        - Includes of previous step are according to
        reference file checkComMBSWTypes.h.txt
    09: Extract includes of ComM.h
    10: VP (ComM.EB.ASR.ComM020):
        - Includes of previous step are according to
        reference file checkComM.h.txt
    11: Extract includes of ComM_Types.h
    12: VP (ComM.EB.ASR.ComM021):
        - Includes of previous step are according to reference file
        checkComMTypes.h.txt.
    13: Extract includes of ComM.c
    14: VP (ComM.EB.ASR.ComM022):
        - Includes of previous step are according to reference file ComM.c.txt
    15: Extract includes of ComM_BSW_Cfg.h
    16: VP (ComM.EB.ASR.ComM023):
        - Includes of previous step are according to reference file
        checkComM_BSW_Cfg.h.txt
    17: Extract includes of ComM_Rte_Cfg.h
    18: VP (ComM.EB.ASR.ComM025):
        - Includes of previous step are according to reference file
        checkComM_Rte_Cfg.h.txt
    19: Extract includes of ComM_Rte_Cfg.c
    20: VP (ComM.EB.ASR.ComM026):
        - Includes of previous step are according to reference file
        checkComM_Rte_Cfg.c.txt
    21: Extract includes of ComM_BSW_Cfg.c
    22: VP (ComM.EB.ASR.ComM027):
        - Includes of previous step are according to reference file
        checkComM_BSW_Cfg.c.txt
    23: Include the difference of the comparison of all previous steps

    Note:
    If there are differences, then due to Step 15 the included file contains 
    not compilable content.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>768</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>769</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>770</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>771</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>772</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>773</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>774</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>775</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>776</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>777</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2373</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>ComM_Test_IsValidConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_3_PbcfgM/source/application/Tests.c</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the function ComM_IsValidConfig() is implemented as specified.
  
Test Object: 
    ComM_IsValidConfig()
  
Test Precondition: 
    The ComM module is not initialized.
  
Test Execution: 
    01: Call the function ComM_IsValidConfig() with an NULL_PTR.
    02: VP:
        The function must have returned with E_NOT_OK.
    03: Create an invalid configuration regarding the endianness and alignment.
    04: Call the function ComM_IsValidConfig() with this invalid configuration.
    05: VP(ComM.EB.PBCFGM106):
        The function must have returned with E_NOT_OK.
    06: Create an invalid configuration regarding the link time configuration.
    07: Call the function ComM_IsValidConfig() with this invalid configuration.
    08: VP(ComM.EB.PBCFGM105):
        The function must have returned with E_NOT_OK.
    09: Create an invalid configuration regarding the compile time configuration.
    10: Call the function ComM_IsValidConfig() with this invalid configuration.
    11: VP(ComM.EB.PBCFGM104):
        The function must have returned with E_NOT_OK.
    12: Create an invalid configuration regarding the published information configuration.
    13: Call the function ComM_IsValidConfig() with this invalid configuration.
    14: VP(ComM.EB.PBCFGM104_1):
        The function must have returned with E_NOT_OK.
    15: Call the function ComM_IsValidConfig() with a valid configuration.
    16: VP:
        The function must have returned with E_OK.
    17: VP(ComM.EB.PBCFGM107):
        Check if COMM_PBCFGM_SUPPORT_ENABLED is set to STD_ON.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Impl.IsValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>628</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2374</internalId></specobject>
    <specobject>
      <id>ComM_Test_VerifyInitWithPcfgM</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_3_PbcfgM/source/application/Tests.c</sourcefile>
      <sourceline>206</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the ComM can be initialized via the PbcfgM.
  
Test Object: 
    ComM_IsValidConfig()
  
Test Precondition: 
    The ComM module must not have been initialized.
  
Test Execution: 
    01: Create an invalid configuration regarding the endianness and alignment.
    02: Call the function ComM_Init() with this invalid configuration.
    03: VP:
        A Det call must have been performed correctly.
    04: Create an invalid configuration regarding the compile time configuration.
    05: Call the function ComM_Init() with this invalid configuration.
    06: VP:
        A Det call must have been performed correctly.
    07: Create an invalid configuration regarding the link time configuration.
    08: Call the function ComM_Init() with this invalid configuration.
    09: VP:
        A Det call must have been performed correctly.
    10: Create an invalid configuration regarding the published information configuration.
    11: Call the function ComM_Init() with this invalid configuration.
    12: VP:
        A Det call must have been performed correctly.
    13: Initialize the PbcfgM_GetConfig() stub that way that it can return a valid function.
    14: Call the function ComM_Init() with a null pointer.
    15: VP:
        The function PbcfgM_GetConfig() must have been called once.
    16: VP:
        No Det call must have been performed.
    17: VP:
        The module internal configuration pointer ComM_RootPtr must equal
        the pointer supplied to the initialization function
    18: PbcfgM_GetConfig shall return E_NOT_OK.
        set the configuration pointer which is returned to NULL_PTR
    19: Call ComM_Init with NULL_PTR.
    20: VP(ComM.EB.PBCFGM110):
        Check if Det error is reported.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.PB.Impl.RFC_55562.Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>630</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.PB.Impl.Init</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>631</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2375</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_COMM_Test_ComM_PncMultipleSignals</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_PncMultipleSignals/source/application/Tests.c</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    To test that in case multiple TX Com signals are configured for a PNC
    and the filter (ComM_PncTxEiraMask ) for the first signal is more restrictive
    than for the second signal, the Com_SendSignal function is called with the
    correct EIRA value.
  
Test Object: PNC state behaviour
Test Precondition: 
    Module state:
      - Module is initialized
      - CommunicationAllowed is set to TRUE for all the concerned channels.
      - ComMPnc_0 (ID 0) has 1 Tx signal configured (signal2)
      - ComMPnc_1 (ID 8) has 1 Tx signal configured (signal2)
      - ComMPnc_2 (ID 16) has 2 TX signals configured (signal1, signal2).
        In the configuration the mask for signal1 is more restrictive than the mask for signal2
      - ComMPnc_3 (ID 24) has 1 Tx signal configured (signal1)
  
Test Execution: 
    01: Prepare test case preconditions
    02: Simulate EcuM wake up indication for all the channels
    03: Invoke main function of all the channels
    04: VP (ComM.SWS_ComM_00931):
        - All PNCs have entered PNC_PREPARE_SLEEP state
    05: Request 'Full communication' for all the users of all PNCs.
    06: Call main function of all the channels
    07: VP (ComM.SWS_ComM_00996):
        - Check that each PNC is in the PNC_REQUESTED state.
    08: Check that signal values.
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.SWS_ComM_00931</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_00996</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2376</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ComM_ImpTest_ASR_01_ASRSvcCompDescr</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_Rte/source/application/ComM_ImplTest.c</sourcefile>
      <sourceline>129</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that the generated service description complies
    to the ComM configuration.
  
Test Object: None.
Test Precondition: 
    - ComMModeLimitationEnabled is set to "true".
    - ComMWakeupInhibitionEnabled is set to "true".
    - Following channels are specified:
       ComMChannel_0, ComMChannel_1, ... ComMChannel_7
    - Following useres are configured:
       ComMUser_0, ComMUser_1, ComMUser_2_RteUser, ComMUser_3, ComMUser_4
    - ComMFullCommRequestNotificationEnabled is set to "true" for following
      channels:
       ComMChannel_0, ComMChannel_3, ComMChannel_6
  
Test Execution: 

    This test is executed with the following permutations:
       Parameter / Permutation      |    p0    |    p1    |    p2    |    p3    |      p4      |
    -------------------------------------------|----------|----------|----------|--------------|
    ComMEnableASR40ServiceAPI       |  false   |  true    |  true    |  true    |    false     |
    ComMDefaultASRServiceAPI        |AUTOSAR_40|  NONE    |AUTOSAR_40|AUTOSAR_40|AUTOSAR_R20_11|


    Ts5-Process execution steps:
      01: Ts5 build step: Generate all files
      02: Compare generated System Description files
          with golden reference files
      03: Include comparison difference of 02 in this test
      04: Test case preparation.
          * Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
          * Initialize the CanSM stub.
          * Initialize Comm module.
      05: VP
          If no difference in 03 exists, then nothing
          will be included and the test compiles

          If a difference exists in 03, then the gnu diff
          tool generates some characters which cannot be
          compiled which will be indicated by the ts5 environment.
  
Test Input: 
    System Description reference files (ComM_swc_interface.arxml and
    ComM_swc_internal.arxml) are provided in directory "reference"
    and contains the following definition of the
    Communication Manager Service for the configured channels and their
    users:

    For Permutations: p0, p4

    Service ComM
    {
      ProvidePort ComM_ECUModeLimitation modeLimitation;

      ProvidePort ComM_ChannelLimitation CL_ComMChannel_0;
      ProvidePort ComM_ChannelLimitation CL_ComMChannel_1;
      ...
      ProvidePort ComM_ChannelLimitation CL_ComMChannel_6;

      ProvidePort ComM_ChannelWakeup CW_ComMChannel_0;
      ProvidePort ComM_ChannelWakeup CW_ComMChannel_1;
      ...
      ProvidePort ComM_ChannelWakeup CW_ComMChannel_6;

      ProvidePort ComM_UserRequest UR_ComMUser_0;
      ProvidePort ComM_CurrentMode UM_ComMUser_0;

      ProvidePort ComM_UserRequest UR_ComMUser_1;
      ProvidePort ComM_CurrentMode UM_ComMUser_1;

      ProvidePort ComM_UserRequest UR_ComMUser_2_RteUser;
      ProvidePort ComM_CurrentMode UM_ComMUser_2_RteUser;

      ProvidePort ComM_UserRequest UR_ComMUser_3;
      ProvidePort ComM_CurrentMode UM_ComMUser_3;

      ProvidePort ComM_UserRequest UR_ComMUser_4;
      ProvidePort ComM_CurrentMode UM_ComMUser_4;

      ProvidePort ComM_CurrentChannelRequest CR_ComMChannel_0;
      ProvidePort ComM_CurrentChannelRequest CR_ComMChannel_3;
      ProvidePort ComM_CurrentChannelRequest CR_ComMChannel_6;

      InternalBehavior
      {
        RunnableEntity LimitECUToNoComMode
          symbol "ComM_LimitECUToNoComMode"
          canbeInvokedConcurrently = FALSE
        RunnableEntity ReadInhibitCounter
          symbol "ComM_ReadInhibitCounter"
          canbeInvokedConcurrently = FALSE
        RunnableEntity ResetInhibitCounter
          symbol "ComM_ResetInhibitCounter"
          canbeInvokedConcurrently = FALSE
        RunnableEntity SetECUGroupClassification
          symbol "ComM_SetECUGroupClassification"
          canbeInvokedConcurrently = FALSE
        RunnableEntity LimitChannelToNoComMode
          symbol "ComM_LimitChannelToNoComMode"
          canbeInvokedConcurrently = FALSE
        RunnableEntity GetInhibitionStatus
          symbol "ComM_GetInhibitionStatus"
          canbeInvokedConcurrently = FALSE
        RunnableEntity PreventWakeup
          symbol "ComM_PreventWakeup"
          canbeInvokedConcurrently = FALSE
        RunnableEntity RequestComMode
          symbol "ComM_RequestComMode"
          canbeInvokedConcurrently = TRUE
        RunnableEntity GetMaxComMode
          symbol "ComM_GetMaxComMode"
          canbeInvokedConcurrently = TRUE
        RunnableEntity GetRequestedComMode
          symbol "ComM_GetRequestedComMode"
          canbeInvokedConcurrently = TRUE
        RunnableEntity GetCurrentComMode
          symbol "ComM_GetCurrentComMode"
          canbeInvokedConcurrently = TRUE

        modeLimitation.LimitECUToNoComMode       -&amp;gt; LimitECUToNoComMode
        modeLimitation.ReadInhibitCounter        -&amp;gt; ReadInhibitCounter
        modeLimitation.ResetInhibitCounter       -&amp;gt; ResetInhibitCounter
        modeLimitation.SetECUGroupClassification -&amp;gt; SetECUGroupClassification

        CL_ComMChannel_0.LimitChannelToNoComMode -&amp;gt; LimitChannelToNoComMode
        CL_ComMChannel_0.GetInhibitionStatus     -&amp;gt; GetInhibitionStatus
          PortArgument {port=CL_ComMChannel_0,
                        value.type= ComM_UserhandleType,
                        value.value=0}
        CL_ComMChannel_1.LimitChannelToNoComMode -&amp;gt; LimitChannelToNoComMode
        CL_ComMChannel_1.GetInhibitionStatus     -&amp;gt; GetInhibitionStatus
          PortArgument {port=CL_ComMChannel_1,
                        value.type= ComM_UserhandleType,
                        value.value=1}
         ...
        CL_ComMChannel_6.LimitChannelToNoComMode -&amp;gt; LimitChannelToNoComMode
        CL_ComMChannel_6.GetInhibitionStatus     -&amp;gt; GetInhibitionStatus
          PortArgument {port=CL_ComMChannel_6,
                        value.type= ComM_UserhandleType,
                        value.value=6}

        CW_ComMChannel_0.preventWakeUp -&amp;gt; PreventWakeUp
          PortArgument {port=CW_ComMChannel_0,
                        value.type= ComM_UserhandleType,
                        value.value=0}
        CW_ComMChannel_1.preventWakeUp -&amp;gt; PreventWakeUp
          PortArgument {port=CW_ComMChannel_1,
                        value.type= ComM_UserhandleType,
                        value.value=1}
        ...
        CW_ComMChannel_6.preventWakeUp -&amp;gt; PreventWakeUp
          PortArgument {port=CW_ComMChannel_6,
                        value.type= ComM_UserhandleType,
                        value.value=6}

        UR_ComMUser_0.RequestComMode      -&amp;gt; RequestComMode
        UR_ComMUser_0.GetMaxComMode       -&amp;gt; GetMaxComMode
        UR_ComMUser_0.GetRequestedComMode -&amp;gt; GetRequestedComMode
        UR_ComMUser_0.GetCurrentComMode   -&amp;gt; GetCurrentComMode
          PortArgument {port=UR_ComMUser_0,
                        value.type = ComM_UserhandleType,
                        value.value = 0}
        UR_ComMUser_1.RequestComMode      -&amp;gt; RequestComMode
        UR_ComMUser_1.GetMaxComMode       -&amp;gt; GetMaxComMode
        UR_ComMUser_1.GetRequestedComMode -&amp;gt; GetRequestedComMode
        UR_ComMUser_1.GetCurrentComMode   -&amp;gt; GetCurrentComMode
          PortArgument {port=UR_ComMUser_1,
                        value.type = ComM_UserhandleType,
                        value.value = 1}
        ...
        UR_ComMUser_4.RequestComMode      -&amp;gt; RequestComMode
        UR_ComMUser_4.GetMaxComMode       -&amp;gt; GetMaxComMode
        UR_ComMUser_4.GetRequestedComMode -&amp;gt; GetRequestedComMode
        UR_ComMUser_4.GetCurrentComMode   -&amp;gt; GetCurrentComMode
          PortArgument {port=UR_ComMUser_4,
                        value.type = ComM_UserhandleType,
                        value.value = 4}
      };
    };

    For Permutations: p1, p2, p3
    Service ComM
    {
      ProvidePort ComM_ECUModeLimitation modeLimitation;

      // Using either ASR40 as _INFIX_ and additionally
      // no infix in case of p2
      ProvidePort ComM_ChannelLimitation CL_INFIX_ComMChannel_0;
      ProvidePort ComM_ChannelLimitation CL_INFIX_ComMChannel_1;
      ...
      ProvidePort ComM_ChannelLimitation CL_INFIX_ComMChannel_6;

      // Using either ASR40 as _INFIX_ and additionally
      // no infix in case of p2
      ProvidePort ComM_ChannelWakeup CW_INFIX_ComMChannel_0;
      ProvidePort ComM_ChannelWakeup CW_INFIX_ComMChannel_1;
      ...
      ProvidePort ComM_ChannelWakeup CW_INFIX_ComMChannel_6;

      // Using either ASR40 as _INFIX_ and additionally
      // no infix in case of p2
      ProvidePort ComM_UserRequest UR_INFIX_ComMUser_0;
      ProvidePort ComM_CurrentMode UM_INFIX_ComMUser_0;
      ProvidePort ComM_UserRequest UR_INFIX_ComMUser_1;
      ProvidePort ComM_CurrentMode UM_INFIX_ComMUser_1;
      ProvidePort ComM_UserRequest UR_INFIX_ComMUser_2_RteUser;
      ProvidePort ComM_CurrentMode UM_INFIX_ComMUser_2_RteUser;
      ProvidePort ComM_UserRequest UR_INFIX_ComMUser_3;
      ProvidePort ComM_CurrentMode UM_INFIX_ComMUser_3;
      ProvidePort ComM_UserRequest UR_INFIX_ComMUser_4;
      ProvidePort ComM_CurrentMode UM_INFIX_ComMUser_4;

      // ASR40 only
      ProvidePort ComM_CurrentChannelRequest CR_ASR40_ComMChannel_0;
      ProvidePort ComM_CurrentChannelRequest CR_ASR40_ComMChannel_3;
      ProvidePort ComM_CurrentChannelRequest CR_ASR40_ComMChannel_6;

      // additionally in case of p2
      ProvidePort ComM_CurrentChannelRequest CR_ComMChannel_0;
      ProvidePort ComM_CurrentChannelRequest CR_ComMChannel_3;
      ProvidePort ComM_CurrentChannelRequest CR_ComMChannel_6;

      InternalBehavior
      {
      // Using either ASR40 as _INFIX_ and additionally
      // no infix in case of p2
        RunnableEntity LimitECUToNoComMode
          symbol "ComM_INFIX_LimitECUToNoComMode"
          canbeInvokedConcurrently = FALSE
        RunnableEntity ReadInhibitCounter
          symbol "ComM_INFIX_ReadInhibitCounter"
          canbeInvokedConcurrently = FALSE
        RunnableEntity ResetInhibitCounter
          symbol "ComM_INFIX_ResetInhibitCounter"
          canbeInvokedConcurrently = FALSE
        RunnableEntity SetECUGroupClassification
          symbol "ComM_INFIX_SetECUGroupClassification"
          canbeInvokedConcurrently = FALSE
        RunnableEntity LimitChannelToNoComMode
          symbol "ComM_INFIX_LimitChannelToNoComMode"
          canbeInvokedConcurrently = FALSE
        RunnableEntity GetInhibitionStatus
          symbol "ComM_INFIX_GetInhibitionStatus"
          canbeInvokedConcurrently = FALSE
        RunnableEntity PreventWakeup
          symbol "ComM_INFIX_PreventWakeup"
          canbeInvokedConcurrently = FALSE
        RunnableEntity RequestComMode
          symbol "ComM_INFIX_RequestComMode"
          canbeInvokedConcurrently = TRUE
        RunnableEntity GetMaxComMode
          symbol "ComM_INFIX_GetMaxComMode"
          canbeInvokedConcurrently = TRUE
        RunnableEntity GetCurrentComMode
          symbol "ComM_INFIX_GetCurrentComMode"
          canbeInvokedConcurrently = TRUE
        // ASR40 specific RE
        RunnableEntity GetRequestedComMode
          symbol "ComM_ASR40_GetRequestedComMode"
          canbeInvokedConcurrently = TRUE
        // RE in case of p2
        RunnableEntity GetRequestedComMode
          symbol "ComM_GetRequestedComMode"
          canbeInvokedConcurrently = TRUE

      // Using either ASR40 as _INFIX_ and additionally
      // no infix in case of p2
        ComM_INFIX_ECUModeLimitation.LimitECUToNoComMode  -&amp;gt; LimitECUToNoComMode
        ComM_INFIX_ECUModeLimitation.ReadInhibitCounter   -&amp;gt; ReadInhibitCounter
        ComM_INFIX_ECUModeLimitation.ResetInhibitCounter  -&amp;gt; ResetInhibitCounter
        ComM_INFIX_ECUModeLimitation.SetECUGroupClassification
                                                    -&amp;gt; SetECUGroupClassification

      // Using either ASR40 as _INFIX_ and additionally
      // no infix in case of p2
        CL_INFIX_ComMChannel_0.LimitChannelToNoComMode -&amp;gt; LimitChannelToNoComMode
        CL_INFIX_ComMChannel_0.GetInhibitionStatus     -&amp;gt; GetInhibitionStatus
          PortArgument {port=CL_INFIX_ComMChannel_0,
                        value.type= ComM_UserhandleType,
                        value.value=0}
        CL_INFIX_ComMChannel_1.LimitChannelToNoComMode -&amp;gt; LimitChannelToNoComMode
        CL_INFIX_ComMChannel_1.GetInhibitionStatus     -&amp;gt; GetInhibitionStatus
          PortArgument {port=CL_INFIX_ComMChannel_1,
                        value.type= ComM_UserhandleType,
                        value.value=1}
         ...
        CL_INFIX_ComMChannel_6.LimitChannelToNoComMode -&amp;gt; LimitChannelToNoComMode
        CL_INFIX_ComMChannel_6.GetInhibitionStatus     -&amp;gt; GetInhibitionStatus
          PortArgument {port=CL_INFIX_ComMChannel_6,
                        value.type= ComM_UserhandleType,
                        value.value=6}

      // Using either ASR40 as _INFIX_ and additionally
      // no infix in case of p2
        CW_INFIX_ComMChannel_0.preventWakeUp -&amp;gt; PreventWakeUp
          PortArgument {port=CW_INFIX_ComMChannel_0,
                        value.type= ComM_UserhandleType,
                        value.value=0}
        CW_INFIX_ComMChannel_1.preventWakeUp -&amp;gt; PreventWakeUp
          PortArgument {port=CW_ComMChannel_1,
                        value.type= ComM_UserhandleType,
                        value.value=1}
        ...
        CW_INFIX_ComMChannel_6.preventWakeUp -&amp;gt; PreventWakeUp
          PortArgument {port=CW_INFIX_ComMChannel_6,
                        value.type= ComM_UserhandleType,
                        value.value=6}

      // Using either ASR40 as _INFIX_ and additionally
      // no infix in case of p2
        UR_INFIX_ComMUser_0.RequestComMode      -&amp;gt; RequestComMode
        UR_INFIX_ComMUser_0.GetMaxComMode       -&amp;gt; GetMaxComMode
        UR_INFIX_ComMUser_0.GetRequestedComMode -&amp;gt; GetRequestedComMode
        UR_INFIX_ComMUser_0.GetCurrentComMode   -&amp;gt; GetCurrentComMode
          PortArgument {port=UR_INFIX_ComMUser_0,
                        value.type = ComM_UserhandleType,
                        value.value = 0}
        UR_INFIX_ComMUser_1.RequestComMode      -&amp;gt; RequestComMode
        UR_INFIX_ComMUser_1.GetMaxComMode       -&amp;gt; GetMaxComMode
        UR_INFIX_ComMUser_1.GetRequestedComMode -&amp;gt; GetRequestedComMode
        UR_INFIX_ComMUser_1.GetCurrentComMode   -&amp;gt; GetCurrentComMode
          PortArgument {port=UR_INFIX_ComMUser_1,
                        value.type = ComM_UserhandleType,
                        value.value = 1}
        ...
        UR_INFIX_ComMUser_4.RequestComMode      -&amp;gt; RequestComMode
        UR_INFIX_ComMUser_4.GetMaxComMode       -&amp;gt; GetMaxComMode
        UR_INFIX_ComMUser_4.GetRequestedComMode -&amp;gt; GetRequestedComMode
        UR_INFIX_ComMUser_4.GetCurrentComMode   -&amp;gt; GetCurrentComMode
          PortArgument {port=UR_INFIX_ComMUser_4,
                        value.type = ComM_UserhandleType,
                        value.value = 4}
      };
    };
  
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>760</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>761</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>766</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_ENABLE_ASR40_SERVICE_API</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1789</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.Dsn.Information.COMM_DEFAULT_ASR_SERVICE_API</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>1790</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>762</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>764</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>763</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>765</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
        <provcov>
          <linksto>ComM.SWS_ComM_01011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2377</internalId></specobject>
    <specobject>
      <id>TS_ComM_ImpTest_ASR_02_ASRAPIs</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_Rte/source/application/ComM_ImplTest.c</sourcefile>
      <sourceline>520</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that the Communication Manager provides the correct ASR APIs
    as specified.
  
Test Object: None.
Test Precondition: 
    For permutations: p1
     - Test Component "ComMTest0" is connected to the ComM Service Component
       in ASR40 behavior
  
Test Execution: 
    01: Test case preparation.
          * Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
          * Initialize the CanSM stub.
          * Initialize Comm module.
    02: VP (ComM.EB.ASR.ComM100, ComM.EB.ASR.ComM101, ComM.EB.ASR.ComM106):
        - The following APIs are defined as macros to corresponding
        functions infixed with ASR40:
        - ComM_GetInhibitionStatus
        - ComM_RequestComMode
        - ComM_GetMaxComMode
        - ComM_GetRequestedComMode
        - ComM_GetCurrentComMode
        - ComM_PreventWakeUp
        - ComM_LimitChannelToNoComMode
        - ComM_LimitECUToNoComMode
        - ComM_ReadInhibitCounter
        - ComM_ResetInhibitCounter
        - ComM_SetECUGroupClassification
    03: VP (ComM.EB.ASR.ComM106):
        - The following functions (infixed with ASR40) can be called and executes
        the same functionality as performed by the corresponding ComM BSW API:
        - ComM_ASR40_SetECUGroupClassification
        - ComM_ASR40_LimitChannelToNoComMode
        - ComM_ASR40_PreventWakeUp
        - ComM_ASR40_GetInhibitionStatus
        - ComM_ASR40_RequestComMode
        - ComM_ASR40_GetMaxComMode
        - ComM_ASR40_GetRequestedComMode
        - ComM_ASR40_GetCurrentComMode
        - ComM_ASR40_LimitECUToNoComMode
        - ComM_ASR40_ReadInhibitCounter
        - ComM_ASR40_ResetInhibitCounter
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>778</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>779</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>782</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2378</internalId></specobject>
    <specobject>
      <id>TS_ComM_ImpTest_ASR_03_ASRTypes</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_Rte/source/application/ComM_ImplTest.c</sourcefile>
      <sourceline>847</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that the ComM module provides the correct ASR types as specified.
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
    01: Test case preparation.
          * Reset (&lt;Bus&gt;Sm, Nm, Dcm, BswM, Det) stub invocation counts.
          * Initialize the CanSM stub.
          * Initialize Comm module.
    02: VP (ComM.EB.ASR.ComM103):
        - Variables of type ComM_ASR40_ModeType, ComM_ASR40_InhibitionStatusType,
        and ComM_ASR40_UserHandleType can be instantiated
        and equals type "uint8"
    03: VP (ComM.EB.ASR.ComM105):
        - Variables of type ComM_ModeType, ComM_InhibitionStatusType, and
        ComM_UserHandleType can be instantiated
        and equals type "uint8"
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>780</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>781</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2379</internalId></specobject>
    <specobject>
      <id>TS_ComM_ImpTest_ASR_04_ASRRteAPIs</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_Rte/source/application/ComM_ImplTest.c</sourcefile>
      <sourceline>961</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that ComM implements each AUTOSAR 4.0 API called in the
    implementation of the Rte/SWC API as defined in the ComM Service Component
    with a simple call to the corresponding AUTOSAR 4.0 ComM BSW API.
  
Test Object: None.
Test Precondition: 
  For permutations: p1
    Test Component "ComMTest0" is connected to the ComM Service Component in
    ASR40 behavior.
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ASR.ComM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>783</internalId></provcov>
        <provcov>
          <linksto>ComM.EB.ASR.ComM111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>784</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.GetRequestedComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>604</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.GetMaxComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>603</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.RequestComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>605</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2380</internalId></specobject>
    <specobject>
      <id>TS_ComM_ImpTest_ASR_05_ASRRteIntegration</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_Rte/source/application/ComM_ImplTest.c</sourcefile>
      <sourceline>1355</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that the APIs exported to RTE can be invoked by SW-Cs.
  
Test Object: None.
Test Precondition: 
    For permutations: p1
     - Test Component "ComMTest0" is connected to the ComM Service Component
       in ASR40 behavior
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.GetCurrentComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>601</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2381</internalId></specobject>
    <specobject>
      <id>TS_ComM_ImpTest_ASR_06_ASRGetCurrentPncComMode</id>
      <status>approved</status>
      <source>EB test case specification (asc_ComM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_ComM/test/ts5/Implementation/IN/ComM_ImpTest_Rte/source/application/ComM_ImplTest.c</sourcefile>
      <sourceline>1644</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Check that in case ComMConf_ComMUser_ComMUser_5_RteUser is linked
    to a single PNC and the PNC is requested via a user and
    ComM_GetCurrentPNCComMode is called , 
    function returns COMM_FULL_COMMUNICATION
  
Test Object: None.
Test Precondition: 
   - Operation related to ComM_GetCurrentPNCComMode is connected in RTE 
  
Test Execution: 
    01: Check that ComM_GetCurrentPNCComMode is defined and 
        it's equal to ComM_ASR40_GetCurrentPNCComMode
    02: Initlize stubs and modules
    03: Call ComM_ASR40_RequestComMode
    04: Call Mainfunction
    05: VP(ComM.EB.ComM_GetCurrentPNCComMode.ReturnedComMode.COMM_FULL_COMMUNICATION)
        - Check that ComMTest_Rte_GetCurrentPNCComMode returns COMM_FULL_COMMUNICATION
    06: VP(ComM.EB.ComM_GetCurrentPNCComMode.ReturnedComMode.COMM_FULL_COMMUNICATION)
        - Check that ComMTest_Rte_GetCurrentPNCComMode returns COMM_FULL_COMMUNICATION
    07: Request to get the current mode from the RTE
    08: VP(ComM.EB_Ref.SWS_ComM_01000.Operation.GetCurrentPNCComMode,
            ComM.EB.ComM_GetCurrentPNCComMode.ReturnedComMode.COMM_FULL_COMMUNICATION)
    
Test Input: 
   - Call ComM_ASR40_RequestComMode
  
Test Output: 
   - ComM_GetCurrentPNCComMode returns COMM_FULL_COMMUNICATION
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>ComM.EB.ComM_GetCurrentPNCComMode.ReturnedComMode.COMM_FULL_COMMUNICATION</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>703</internalId></provcov>
        <provcov>
          <linksto>ComM.EB_Ref.SWS_ComM_01000.Operation.GetCurrentPNCComMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>602</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2382</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
