<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_IdsM_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/ReqM2_Native/asc_IdsM_public_modulereference_integration_req.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/ReqM2_Native/asc_IdsM_requirements_AUTOSAR_SWS_IdsM.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/ReqM2_Native/asc_IdsM_requirements_AUTOSAR_SWS_IdsM_R22-11.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/ReqM2_Native/asc_IdsM_requirements_EB_Custom_IdsM.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/common_req/IdsM_PbcfgM_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/common_req/IdsM_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 19:49:59 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_IdsM_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/ReqM2_Native/asc_IdsM_public_modulereference_integration_req.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/ReqM2_Native/asc_IdsM_requirements_AUTOSAR_SWS_IdsM.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/ReqM2_Native/asc_IdsM_requirements_AUTOSAR_SWS_IdsM_R22-11.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/ReqM2_Native/asc_IdsM_requirements_EB_Custom_IdsM.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/common_req/IdsM_PbcfgM_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/common_req/IdsM_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="lim">
    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_0001</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
      <!-- class: minor, long term -->
      <!-- class-reason:
           * Design decision -->
      Although the IdsM SWS specifies event reporting APIs, such as
      <code>IdsM_SetSecurityEvent()</code> or
      <code>IdsM_SetSecurityEventWithContextData()</code> as non-reentrant APIs,
      the current implementation actually realizes such reporting APIs as reentrant.
      Hence, the reporting modules do not have to protect such usage against reentrancy.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_0002</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        When <code>IdsMSignatureSupport</code> or <code>IdsMMacSupport</code> are enabled,
        <code>IdsMSignatureGenerateResultLength</code> or <code>IdsMMacGenerateResultLength</code>
        should be large enough to contain a signature. The <code>IdsM</code> module does not
        double-check this value in the crypto stack.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_0003</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        When <code>IdsMBlockStateSupport</code> and <code>IdsMMultiPartition</code> are enabled,
        block states should be linked with BswM instance in same partition as Master IdsM, as <code>IdsM_BswM_StateChanged</code>
        is only callable in Master IdsM instance, and it synchronizes block state to other satellites.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_0004</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        Reporting security events from Swc to IdsM is recommended to be done through Client-Server interface
        with Synchronous behavior (achieving direct calls to IdsM) to avoid any intermediate Rte buffer usage
        which can leave the vulnerability to corrupt SEv data.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_0005</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        Reporting security events from Swc to IdsM is not recommended to be done across partition as intermediate
        Rte buffer usage can leave the vulnerability to corrupt SEv data.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_0006</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        In Safety Os, in order to allow hook application to report security events to IdsM, it should be configured to have
        memory access rights to the partition which contains this IdsM instance.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_0007</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        In Safety Os, hook application should only report security events to IdsM Master instance or
        Reporting_and_Processing instance.
        Rationale: Reporting_Only instance uses trusted function and it is not supported to call trusted
        function from hook application.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_0008</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        In Safety Os, When security event is reported with context data to Reporting_Only IdsM instance, and
        this context data is declared in global memory, the trusted function which will be used (in Master or
        Reporting_and_Processing partition in same core) should be configured to have memory access to this
        global memory as well.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_0009</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        The BootConnect NvM block Should be configured to be read and written during NvM_Readall and NvM_Writeall respectively.
        Consistency between the Boot and Application configurations and memory layout with regards to the NvM block temporary storage needs to assured.
        Both NvM block configurations must be physically referring to the same physical memory in Bootloader and Application projects.
        When context switches, there shall be no resetting of application dflash.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_00010</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        The BootConnect NvM block Should be configured with enough block ram size to hold all the expected QSEVs,
        IdsM does not calculate this piece of information but it counts on it during the generation.
        During the Bootloader context If there is no available memory to store new QSEV it will be dropped silently.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_00011</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        During the Bootloader context there will be no need for configuring a Csm module specifically for the IdsM,
        as signature and the signing will be deferred to be done in Application context.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_00012</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        When BootConnect is enabled, NvMRamBlock with name "IdsM_BootNvMRamBlockData" should be configured
        in Nvm with read/write access for both Bootloader and Application context.
        Its size should be the sum of all IDS records defined plus two bytes metadata per record plus four bytes global header,
        where each IDS record follow the definition in "Specification of Intrusion Detection System Protocol".
        IdsM_BootNvMRamBlockData is defined in a special memory section to be shared with Nvm.
        Rationale: for security reasons to not allow NvM module to compromise or access IdsM internal buffers directly.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_00013</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        All events configured in Bootloader project should also be configured in Application project for propagation.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_00014</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        When IdsMBootConnect is enabled, IdsM.h file should be configured in NvmUserHeader in Nvm module.
        Rationale: to provide the NvM module source code with the declaration of the IdsM_BootNvMRamBlockData which represent the NvM block
        Ram layout.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_00015</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        The timestamping in bootloader context shall be handled via a custom time source.
        Rationale: The global time synchronization in the vehicle is not viable while in boot mode.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_00016</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        The IDS message PDU shall be the same in the application and bootloader context.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_00017</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        Both IdsMBootConnectSupport and IdsMSuppressExternalDeviceMapping cannot be enabled at the same time.
        Rationale: The IdsMBootConnect depends on the IdsM_External.c file.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_00018</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        When <code>IdsMDiagnosticSupport</code> and <code>IdsMMultiPartition</code> are enabled, Dcm should be at the same partition
        as IdsM Master instance, because ReportingMode APIs are only supported in IdsM Master instance.
        </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_00019</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        When <code>IdsMDiagnosticSupport</code> is enabled, IdsM_NvMRamBlockData block length should be at least the number of security events defined.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_00020</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        When <code>IdsMDiagnosticSupport</code> and <code>IdsMMultiPartition</code> are enabled, IdsM_NvMRamBlockData block should
        be writable from Master IdsM instance only and readable from all Reporting_and_Processing instances.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_00021</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        When <code>IdsMSinkDem</code> is enabled, IdsM_cbk.h should be included in <code>DemHeaderFileInclusion</code>.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_00022</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        For Dem sinks <code>DemDataElementDataSize</code> should be large enough to save IdsM QSEv,
        because IdsM don't do any further checks and write QSEv directly.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_00023</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        When <code>IdsMMacSupport</code> and <code>IdsMMultiPartition</code> are enabled, each Csm job
        referenced from IdsM partition shall be mapped to the same partition.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    <specobject>
      <id>lim.IdsM.EB_INTREQ_IdsM_00024</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: minor, long term -->
        <!-- class-reason:
           * Design decision -->
        <code>IdsM_ContextDataModifierCallout</code> is invoked within a critical section to ensure
        non reentrance.
      </description>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_CONSTR_00001</id>
      <status>rejected</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The Intrusion Detection Manager has no knowledge
        of the meaning of the Context Data reported within a SEv; thus, it can not determine
        independently if a system has being compromised or not. Identification and threat
        response is realized outside of the scope of IdsM, e.g., in a SOC. ()
</description>
      <comment>This requirement is informational only
Rationale: only provides information about module scope on conceptual level</comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00101</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM module shall include the header file Det.h if the pa-
        rameter IdsMDevErrorDetect is enabled. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/IdsM_Int.h_46</srcid><srcstatus/><internalId>379</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_ComTest_01_Minimal</srcid><srcstatus/><internalId>769</internalId></linkedfrom><linkedfrom><srcid>TST_IDSM_COMPILE_5_ECU</srcid><srcstatus/><internalId>771</internalId></linkedfrom><linkedfrom><srcid>TST_IDSM_COMPILE_6_EXTERNALDEVICE</srcid><srcstatus/><internalId>772</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DET_ALREADY_INITIALIZED</srcid><srcstatus/><internalId>814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00102</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM module shall include the header file Dem.h if the pa-
        rameter IdsMSinkDem is enabled. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_33</srcid><srcstatus/><internalId>538</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_IDSM_COMPILE_5_ECU</srcid><srcstatus/><internalId>771</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00103</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM module shall include the header file Dcm.h if the pa-
        rameter IdsMDiagnosticSupport is enabled. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/IdsM_Int.h_31</srcid><srcstatus/><internalId>378</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Simple</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00104</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM module shall include the header file NvM.h if the pa-
        rameter IdsMNvmBlockDescriptor is configured. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/IdsM_Int.h_29</srcid><srcstatus/><internalId>377</internalId></linkedfrom><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/include/IdsMCfgH.java_24</srcid><srcstatus/><internalId>593</internalId></linkedfrom><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/jet_templates/include/IdsM_Cfg.h.jet_27</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Simple</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00105</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM module shall include the header file PduR.h if the
        parameter IdsMSinkIdsR is enabled. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/IdsM_Int.h_15</srcid><srcstatus/><internalId>376</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_ComTest_01_Minimal</srcid><srcstatus/><internalId>769</internalId></linkedfrom><linkedfrom><srcid>TST_IDSM_COMPILE_5_ECU</srcid><srcstatus/><internalId>771</internalId></linkedfrom><linkedfrom><srcid>TST_IDSM_COMPILE_6_EXTERNALDEVICE</srcid><srcstatus/><internalId>772</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00202</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        A call to IdsM_Init initializes all internal variables and sets the
        IdsM module to the initialized state. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM.c_253</srcid><srcstatus/><internalId>393</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM.c_349</srcid><srcstatus/><internalId>394</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DET_ALREADY_INITIALIZED</srcid><srcstatus/><internalId>814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00203</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        If development error reporting is enabled via IdsMDevEr-
        rorDetect, the IdsM module shall call Det_ReportError with the error code
        IDSM_E_PARAM_UNINIT when any API other than IdsM_Init or IdsM_GetVer-
        sionInfo is called in uninitialized state. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_580</srcid><srcstatus/><internalId>426</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1972</srcid><srcstatus/><internalId>526</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_256</srcid><srcstatus/><internalId>541</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_409</srcid><srcstatus/><internalId>552</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_473</srcid><srcstatus/><internalId>556</internalId></linkedfrom><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMLcfgC.java_112</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Lcfg.c.jet_247</srcid><srcstatus/><internalId>618</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_CsmDet</srcid><srcstatus/><internalId>808</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DET_UNINIT</srcid><srcstatus/><internalId>815</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00204</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        When IdsM_Init is called in initialized state, the IdsM mod-
        ule shall not re-initialize its internal variables. It shall instead call Det_ReportError
        with the error code IDSM_E_ALREADY_INITIALIZED if development error reporting is
        enabled (see IdsMDevErrorDetect). ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM.c_247</srcid><srcstatus/><internalId>392</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DET_ALREADY_INITIALIZED</srcid><srcstatus/><internalId>814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00300</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall be able to receive SEvs with the service IdsM_-
        SetSecurityEvent when there no context data is reported. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_398</srcid><srcstatus/><internalId>411</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_RemoveFromStateList</srcid><srcstatus/><internalId>897</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00301</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall be able to receive SEvs with the service IdsM_-
        SetSecurityEventWithContextData when the optional context data is re-
        ported. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_428</srcid><srcstatus/><internalId>414</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00401</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall be able to receive SEvs with a counter calculated
        from a smart sensor with the service IdsM_SetSecurityEventWithCount ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_456</srcid><srcstatus/><internalId>416</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Sampling</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00402</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall be able to receive SEvs with a counter calculated
        from a smart sensor, and additionally the SEv context data, with the service IdsM_-
        SetSecurityEventWithCountContextData ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_487</srcid><srcstatus/><internalId>419</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Aggregtion01</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00403</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall be able to receive SEvs with a timestamp and a
        counter calculated from a smart sensor with the service IdsM_SetSecurityEven-
        tWithTimestampCount ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_518</srcid><srcstatus/><internalId>421</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00404</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall be able to receive SEvs with a timestamp, a
        counter calculated from a smart sensor,and additionally the SEv context data, with the
        service IdsM_SetSecurityEventWithTimestampCountContextData ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_551</srcid><srcstatus/><internalId>423</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00405</id>
      <status>rejected</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        For reporting a SEvs with a timestamp but with no previously cal-
        culated counter, the services IdsM_SetSecurityEventWithTimestampCount-
        ContextData and IdsM_SetSecurityEventWithTimestampCount can be used
        with the counter value equals 1. ()
</description>
      <comment>This requirement is not applicable
Rationale: This is a requirement on external usage of the IdsM not the IdsM and thus can neither be enforced or implemented in IdsM.</comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00501</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The functions IdsM_SetSecurityEventWithContext-
        Data, IdsM_SetSecurityEventWithCountContextData and IdsM_SetSecu-
        rityEventWithTimestampCountContextData shall support a maximum length
        of 1500 bytes for the context data. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DEV_MAX_CONTEXT_DATA_LENGTH</srcid><srcstatus/><internalId>370</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00502</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The functions calling IdsM_SetSecurityEventWithCon-
        textData, IdsM_SetSecurityEventWithCountContextData and IdsM_Set-
        SecurityEventWithTimestampCountContextData shall provide the context
        data pointer to a byte array where the context data is available. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_420</srcid><srcstatus/><internalId>413</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_479</srcid><srcstatus/><internalId>418</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00600</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM module shall represent each SEv instance by an
        IdsMExternalEventId, a IdsMSensorInstanceId, a IdsMInternalEventId,
        and the related EventName. These combination of parameters shall be unique per
        IdsM instance represented by the ECU configuration. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/IdsM.xgen_120</srcid><srcstatus/><internalId>755</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00601</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Each SEv shall have an IdsMInternalEventId. This param-
        eter shall not be configured manually. The IdsM shall calculate the value of this param-
        eter internally and shall publish the value in the parameter. This ID is used for internal
        handling of the SEvs. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_518</srcid><srcstatus/><internalId>641</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00602</id>
      <status>rejected</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Sensors using the IdsM API to report SEvs shall not rely on the
        value of the parameter IdsMInternalEventId. Instead, they shall use the symbolic
        constant (SymbolicNameValue) of the corresponding SEv. ()
</description>
      <comment>This requirement is not applicable
Rationale: This is a requirement on external usage of the IdsM not the IdsM and thus can neither be enforced or implemented in IdsM.</comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00603</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Each SEv shall have an external event ID IdsMExter-
        nalEventId, which is a global and unique ID per Security Event Type repre-
        sented by the ECU configuration, and it is defined in the SecXT. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DEV_GLOBAL_EVENTID_UNIQINESS_NOT_CHECKED</srcid><srcstatus/><internalId>371</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00604</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        A IdsMExternalEventId with value 0xFFFF shall be consid-
        ered invalid. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/IdsM_Int.h_239</srcid><srcstatus/><internalId>381</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DET_PARAM_INVALID</srcid><srcstatus/><internalId>816</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00605</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Each SEv shall have a sensor instance ID IdsMSensorIn-
        stanceId. This is the representation of the module number, in case there are many
        instances of the same module reporting to the IdsM. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/IdsM.xgen_121</srcid><srcstatus/><internalId>756</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Sampling</srcid><srcstatus/><internalId>780</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CustomTimestamp_Get</srcid><srcstatus/><internalId>848</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00606</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The combination of external event ID IdsMExternalEventId
        and sensor instance ID IdsMSensorInstanceId shall make the SEvs uniquely iden-
        tifiable within the configuration. This parameter tuple is represented by the Symbolic
        Name Value of the IdsMEvent Container. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_582</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IDSM_GEN_01002_EVENT_EXTERNAL_IDS_COMBINATION_MUST_BE_UNIQUE</srcid><srcstatus/><internalId>873</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00607</id>
      <status>rejected</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Sensors using the IdsM services shall report a SEv using the
        symbolic constant (SymbolicNameValue) of the IdsMEvent Container . ()
</description>
      <comment>This requirement is not applicable 
Rationale: This is a requirement on external usage of the IdsM not the IdsM and thus can neither be enforced or implemented in IdsM.</comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00608</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Each SEv shall have a IdsMSensorInstanceId configured.
        In case there are several instances of the same sensor reporting SEvs with the same
        Event Definition ID in a ECU, the reporting entity shall be uniquely identified through the
        configuration parameter IdsMSensorInstanceId. In case there is only one instance
        of the module in the configuration, the value of the instance ID shall be, by default, set
        to 0. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_583</srcid><srcstatus/><internalId>724</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IDSM_GEN_01002_EVENT_EXTERNAL_IDS_COMBINATION_MUST_BE_UNIQUE</srcid><srcstatus/><internalId>873</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00701</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall have a configurable number of event buffers
        IdsMNumberOfEventBuffers, depending on the amount of configured IdsMEvents
        that are to be handled. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/IdsM.xgen_190</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00702</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Upon reception of a SEv, the IdsM shall store the event in an
        Event Buffer until it can be further processed. Event buffers shall be handled and
        filtered asynchronously in the IdsM_MainFunction service. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1840</srcid><srcstatus/><internalId>517</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00703</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        In case no Event Buffer is found. The IdsM inter-
        nal SEv 'No Event Buffer Available' shall be triggered, in case it has been
        configured. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1864</srcid><srcstatus/><internalId>519</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00704</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall have a configurable number of context data
        buffers IdsMNumberOfContextDataBuffers with different configurable sizes
        IdsMContextDataBufferSize in order to satisfy different sensor use cases. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_154</srcid><srcstatus/><internalId>625</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00705</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Upon reception of a SEv with context data, the IdsM shall store
        the context data in an Context Data Buffer with the most adequate size available.
        A configured Context Data Buffer Pool shall be searched in order to find a buffer with
        the same size as the reported context data, or find the next larger buffer. These buffers
        shall be handled and filtered asynchronously in the IdsM_MainFunction service. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1807</srcid><srcstatus/><internalId>514</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00706</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Once an appropriate Context Data Buffer has been found,
        it shall be linked to the corresponding Event Buffer for further processing. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1808</srcid><srcstatus/><internalId>515</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00707</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        In case there is no appropriate Context Data Buffer of the
        same size or larger than the context data, the event shall be processed as an event
        without context data. Thus no context data buffer shall be linked to the processed SEv.
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1844</srcid><srcstatus/><internalId>518</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00708</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        In case no appropriate Context Data Buffer
        is found.      The IdsM internal SEv 'No Context Data Buffer Avail-
        able' shall be triggered, in case it has been configured. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1943</srcid><srcstatus/><internalId>524</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00709</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Upon reception of a SEv with no context data, the IdsM shall not
        use any Context Data Buffer. Thus no context data buffer will be linked to the
        processed SEv. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1809</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00801</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The security events reported by IdsM module are listed in
        [SWS_IdsM_91015]. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_846</srcid><srcstatus/><internalId>729</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_TpTrafficLimitation</srcid><srcstatus/><internalId>788</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_InternalError</srcid><srcstatus/><internalId>809</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_InternalErrorBusy</srcid><srcstatus/><internalId>810</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_InternalErrorSignature</srcid><srcstatus/><internalId>811</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_ComError</srcid><srcstatus/><internalId>840</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_InternalError</srcid><srcstatus/><internalId>865</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91015</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Security events for IDSM
        Name                             Description                                                   ID
        IDSM_INTERNAL_EVENT_NO_EVENT_    A SEv cannot be handled because there are no more             46
        BUFFER_AVAILABLE
                                         event buffers available to process the event.
        IDSM_INTERNAL_EVENT_NO_CONTEXT_
        DATA_BUFFER_AVAILABLE            The context data of an incoming event cannot be stored        47
        IDSM_INTERNAL_EVENT_TRAFFIC_     because there are no more context data buffers available.
        LIMITATION_EXCEEDED
                                         The current traffic exceeds a configured traffic limitation.  48
         ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_847</srcid><srcstatus/><internalId>730</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_TpTrafficLimitation</srcid><srcstatus/><internalId>788</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_InternalError</srcid><srcstatus/><internalId>809</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_InternalErrorBusy</srcid><srcstatus/><internalId>810</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_InternalErrorSignature</srcid><srcstatus/><internalId>811</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_ComError</srcid><srcstatus/><internalId>840</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00802</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        In case the IdsM Internal Events are configured, the IdsM shall
        provide own buffers for each one of these SEvs. These are dedicated buffers, inde-
        pendent from the common Event Buffers used for normal SEvs. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_1035</srcid><srcstatus/><internalId>732</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_TpTrafficLimitation</srcid><srcstatus/><internalId>788</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_InternalError</srcid><srcstatus/><internalId>809</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_InternalErrorBusy</srcid><srcstatus/><internalId>810</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_InternalErrorSignature</srcid><srcstatus/><internalId>811</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_NegativeInternalErrorEvents</srcid><srcstatus/><internalId>821</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00803</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        IdsM internal SEvs shall not be filtered by IdsM instance spe-
        cific filters. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_733</srcid><srcstatus/><internalId>563</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_827</srcid><srcstatus/><internalId>568</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_870</srcid><srcstatus/><internalId>574</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_TpTrafficLimitation</srcid><srcstatus/><internalId>788</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_InternalError</srcid><srcstatus/><internalId>809</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_InternalErrorBusy</srcid><srcstatus/><internalId>810</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_InternalErrorSignature</srcid><srcstatus/><internalId>811</internalId></linkedfrom><linkedfrom><srcid>TS_IDSM_GEN_01019_INTERNAL_ERROR_EVENT_FILTER_CHAIN_AGGREGATION_SAMPLING</srcid><srcstatus/><internalId>890</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00804</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        IdsM internal SEvs can be filtered by IdsM SEvID specific fil-
        ters. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1505</srcid><srcstatus/><internalId>477</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1683</srcid><srcstatus/><internalId>509</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_TpTrafficLimitation</srcid><srcstatus/><internalId>788</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_InternalError</srcid><srcstatus/><internalId>809</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_InternalErrorBusy</srcid><srcstatus/><internalId>810</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_InternalErrorSignature</srcid><srcstatus/><internalId>811</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00901</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall store the SEvs in the Event Buffers and pro-
        cess them asynchronously in the IdsM_MainFunction service in order to identify
        them as QSEvs. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1675</srcid><srcstatus/><internalId>507</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00902</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The qualification of reported security events shall take place by
        evaluating the processed SEv against a configurable sequence of filters, known as the
        filter chain. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1598</srcid><srcstatus/><internalId>493</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00903</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        A SEv shall contain the information of the filter chain that
        is used to qualify it into a QSEv. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/IdsM.xgen_76</srcid><srcstatus/><internalId>754</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00904</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Each filter shall reject a processed SEv in case the filter criteria
        are not met by dropping it. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1592</srcid><srcstatus/><internalId>491</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00905</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Otherwise, if a filter does not drop a SEv, the filter shall forward
        the currently processed SEv to the next filter in the chain. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1434</srcid><srcstatus/><internalId>473</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1578</srcid><srcstatus/><internalId>490</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1634</srcid><srcstatus/><internalId>504</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_00906</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        A filter shall be able to modify the SEvs counter according to
        their algorithm, if they are of type sampling or aggregation. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1536</srcid><srcstatus/><internalId>482</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1548</srcid><srcstatus/><internalId>485</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Aggregtion01</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01001</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Filter chain selection When a SEv is reported, the IdsM shall
        apply the filter chain that is mapped to it. (RS_IDS_00300, RS_IDS_00301)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1595</srcid><srcstatus/><internalId>492</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_Filtering</srcid><srcstatus/><internalId>851</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01002</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Filter chain evaluation IdsM shall evaluate the filter chain after
        evaluating the reporting mode. (RS_IDS_00610)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1599</srcid><srcstatus/><internalId>494</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01003</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Possible Filters Each filter chain may consist of the following
        filters:
            · BlockState Filter
            · Forward Every nth Filter
            · Event Aggregation Filter
            · Event Threshold Filter
            · Event Rate Limitation
            · Traffic Limitation
         (RS_IDS_00300)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1620</srcid><srcstatus/><internalId>498</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01004</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Filter chain order IdsM shall evaluate all activated filter in
        the order BlockState Filter, Forward-Every-nth Filter, Event Aggregation Filter, Event
        Threshold Filter. (RS_IDS_00300)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1621</srcid><srcstatus/><internalId>499</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01005</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Dropping of SEvs If the evaluation of one filter leads to dropping
        the SEv, IdsM shall not evaluate any additional filter. (RS_IDS_00300)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1622</srcid><srcstatus/><internalId>500</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01010</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall provide a reporting mode filter for each instance
        of SEv ID. This Filter is mandatory for each configured SEv. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/IdsM.xgen_191</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01011</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The reporting mode filter shall not part of a filter chain. It shall
        be directly linked to the respective SEv. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/IdsM.xgen_192</srcid><srcstatus/><internalId>760</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01012</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Reporting Mode IdsM shall determine the default report-
        ing mode of each reported SEv from the IdsMReportingModeFilter. (RS_IDS_00310)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_666</srcid><srcstatus/><internalId>726</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01013</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Reporting Mode Options IdsM shall handle a reported SEv
        depending on its reporting mode according to Table Table 7.1. (RS_IDS_00310)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1600</srcid><srcstatus/><internalId>495</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1946</srcid><srcstatus/><internalId>525</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1996</srcid><srcstatus/><internalId>533</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01020</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall provide a block state filter. See IdsMBlock-
        StateFilter. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_697</srcid><srcstatus/><internalId>728</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_BlockState</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01021</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The block state filter shall represent a list of states in which the
        collection of the SEvs shall be blocked (the SEvs shall be dropped). ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_696</srcid><srcstatus/><internalId>727</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_BlockState</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01022</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall be inform, by the BswM module, about the current
        state with the callback service IdsM_BswM_StateChanged. This information shall be
        used when a block state filter is processed in the main function asynchronously. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM.c_390</srcid><srcstatus/><internalId>396</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_BlockState</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01023</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Block State Filter If IdsM evaluates the Block State Filter and
        the current block state equals one of the states referenced by IdsMBlockState, then
        IdsM shall drop the SEv. (RS_IDS_00320)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1610</srcid><srcstatus/><internalId>496</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_BlockState</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01024</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The block state filter shall forward the SEv to the next filter in
        the chain if the current state is not part of the list. In case this is the last filter in the
        chain, the filter forwards the QSEv to the sink. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1611</srcid><srcstatus/><internalId>497</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_BlockState</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01030</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall provide Forward Every Nth filter. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1623</srcid><srcstatus/><internalId>501</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Sampling</srcid><srcstatus/><internalId>780</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_Filtering</srcid><srcstatus/><internalId>851</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01031</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Sampling Filter If IdsM evaluates the sampling filter for a SEv,
        IdsM shall drop all the SEvs but every nth, where n is defined in IdsMNthParam-
        eter. Forwarding of SEvs starts with the first received SEv. Then every nth SEv is
        forwarded. (RS_IDS_00330)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1630</srcid><srcstatus/><internalId>502</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Sampling</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01032</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Sampling Filter Initialization IdsM shall initialize the sampling
        filter for a SEv so that the first received SEv is forwarded. (RS_IDS_00330)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM.c_458</srcid><srcstatus/><internalId>401</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Sampling</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01033</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The forwarding of the SEvs by the Forward Every Nth filter
        shall be done without modification of SEv data. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1631</srcid><srcstatus/><internalId>503</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Sampling</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01040</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall provide an aggregation filter. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1644</srcid><srcstatus/><internalId>505</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Aggregtion01</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01041</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Configuration of Event Aggregation Filter The parameter
        IdsMEventAggregationTimeInterval shall represent the duration of the interval
        during which SEvs of the given type shall be aggregated. (RS_IDS_00340)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1415</srcid><srcstatus/><internalId>469</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Aggregtion01</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01042</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The aggregation filter shall forward a SEv with the sum of the
        SEv's counters processed in an interval. Considering the configuration for a specific
        SEv, of the aggregation filter's time interval with value lj for IdsMEventAggrega-
        tionTimeInterval, the filter shall count the number of events of the same ID j
        received during a single aggregation time interval lj ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1537</srcid><srcstatus/><internalId>483</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1549</srcid><srcstatus/><internalId>486</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Aggregtion01</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01043</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        No Event Forwarding During Interval The aggregation filter
        shall not forward (i.e., to the next filter) any incoming SEv during the aggregation inter-
        val. (RS_IDS_00340)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1499</srcid><srcstatus/><internalId>476</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1533</srcid><srcstatus/><internalId>481</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Aggregtion01</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01044</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        End of Interval: No Event If no SEv of the same event type has
        been received by the aggregation filter in the past aggregation interval, no action shall
        be taken. (RS_IDS_00340)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1408</srcid><srcstatus/><internalId>468</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Aggregtion01</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01045</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        End of Interval: One or More Events If one or more SEv of the
        same event type have been received by the aggregation filter in the past aggregation
        interval, a SEv shall be forwarded to the next filter in the chain. (RS_IDS_00340)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1416</srcid><srcstatus/><internalId>470</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Aggregtion01</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01046</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        End of Interval: Count If the SEv is forwarded to the next filter
        in the filter chain, the count parameter of the SEv shall equal the sum of all count
        parameters of all SEvs of given event type processed by the aggregation filter in the
        past time interval. (RS_IDS_00340)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1519</srcid><srcstatus/><internalId>478</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Aggregtion01</srcid><srcstatus/><internalId>781</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01047</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        End of Interval: First Context Data If the SEv is forwarded to
        the next filter in the filter chain and if IdsMContextDataSourceSelector equals
        IDSM_FILTERS_CTX_USE_FIRST, then the context data shall equal the first context
        data of an SEv of given type that has been received at the aggregation filter in the past
        time interval. (RS_IDS_00340)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1544</srcid><srcstatus/><internalId>484</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01048</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        End of Interval: Last Context Data If the SEv is forwarded to
        the next filter in the filter chain and if IdsMContextDataSourceSelector equals
        IDSM_FILTERS_CTX_USE_LAST, then the context data shall equal the last context
        data of an SEv of given type that has been received at the aggregation filter in the past
        time interval. (RS_IDS_00340)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1528</srcid><srcstatus/><internalId>480</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Aggregtion01</srcid><srcstatus/><internalId>781</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01049</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        End of Interval: Timestamp If the SEv is forwarded to the next
        filter in the filter chain, the timestamp shall be taken from the same SEv from which
        the context data comes from (configured in IdsMContextDataSourceSelector ).
        (RS_IDS_00340)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1525</srcid><srcstatus/><internalId>479</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01050</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The time interval for each aggregation filter IdsMEventAggre-
        gationTimeInterval shall be a multiple of the main function period IdsMMain-
        FunctionPeriod. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1417</srcid><srcstatus/><internalId>471</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01051</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The counting of the time interval for the aggregation filter
        IdsMEventAggregationTimeInterval shall start with the first call of the main
        function. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1418</srcid><srcstatus/><internalId>472</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Aggregtion01</srcid><srcstatus/><internalId>781</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01060</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall provide a threshold filter. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1651</srcid><srcstatus/><internalId>506</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Threshold01</srcid><srcstatus/><internalId>782</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01061</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Event Dropping Below Threshold The threshold filter shall
        drop an SEv of given type if the sum of count parameters of all SEvs of given type that
        were processed by the event threshold filter in the current threshold interval is smaller
        than the configured parameter IdsMEventThresholdNumber. (RS_IDS_00350)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1566</srcid><srcstatus/><internalId>487</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Threshold01</srcid><srcstatus/><internalId>782</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01062</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Event Forwarding Above Threshold The threshold filter shall
        forward an SEv of given type if the sum of count parameters of all SEvs of given type
        that were processed by the event threshold filter in the current threshold interval is
        equal to or greater than the configured parameter IdsMEventThresholdNumber.
        (RS_IDS_00350)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1575</srcid><srcstatus/><internalId>489</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Threshold01</srcid><srcstatus/><internalId>782</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01063</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The counter of the events shall reset every time the threshold
        interval expires. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1474</srcid><srcstatus/><internalId>475</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Threshold01</srcid><srcstatus/><internalId>782</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01064</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The configured time interval for each threshold filter
        IdsMEventThresholdTimeInterval shall be a multiple of the IdsMMainFunc-
        tionPeriod. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1471</srcid><srcstatus/><internalId>474</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Threshold01</srcid><srcstatus/><internalId>782</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01065</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The counting of the time interval for the threshold filter
        IdsMEventThresholdTimeInterval shall start with the first call of the main func-
        tion. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1567</srcid><srcstatus/><internalId>488</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Threshold01</srcid><srcstatus/><internalId>782</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01070</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Rate and Traffic Limitation Before sending a QSEv to the IdsR,
        IdsM shall apply rate and traffic limitation that can lead to dropping the QSEv from
        transmission to the IdsR. (RS_IDS_00511)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_730</srcid><srcstatus/><internalId>560</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01080</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall provide a rate limitation filter. This filter speci-
        fies a limit in number of SEvs and an interval in milliseconds. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_731</srcid><srcstatus/><internalId>561</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01081</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Rate Limitation IdsM shall drop an QSEv from transmission, if
        its transmission would cause the number of QSEvs transmitted in the current interval (
        specified in IdsMRateLimitationTimeInterval), to exceed the maximum num-
        ber of transmission, configured in IdsMRateLimitationMaximumEvents. (RS_IDS_00511)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_732</srcid><srcstatus/><internalId>562</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01082</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The time interval for the event rate limitation filter IdsMRate-
        LimitationTimeInterval shall be a multiple of the main function period IdsM-
        MainFunctionPeriod. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_1231</srcid><srcstatus/><internalId>734</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01090</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall provide a traffic limitation filter. This filter spec-
        ifies a limit in bytes and an interval in milliseconds. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_743</srcid><srcstatus/><internalId>564</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01091</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Traffic Limitation IdsM shall drop an QSEv from transmission,
        if its transmission would cause the number of bytes transmitted in the current in-
        terval (specified in IdsMTrafficLimitationTimeInterval), to exceed the max-
        imum number of bytes, configured in IdsMTrafficLimitationMaximumBytes.
        (RS_IDS_00511)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_744</srcid><srcstatus/><internalId>565</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01092</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The time interval for the traffic limitation filter IdsMTraffi-
        cLimitationTimeInterval shall be a multiple of the main function period IdsM-
        MainFunctionPeriod. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_1245</srcid><srcstatus/><internalId>735</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01093</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall reset the byte counter to 0 when the interval
        IdsMTrafficLimitationTimeInterval expires. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_1538</srcid><srcstatus/><internalId>592</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01094</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        In case the number of bytes trying to be sent dur-
        ing a time period exceeds the maximum number of transmitted bytes
        IdsMTrafficLimitationMaximumBytes, The IdsM shall trigger the internal
        SEv IDSM_INTERNAL_EVENT_TRAFFIC_LIMITATION_EXCEEDED if configured. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_761</srcid><srcstatus/><internalId>566</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01100</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall be able to add an additional IDS Message
        Timestamp field to the QSEv. The timestamp feature is optional and shall be acti-
        vated and configured globally for all QSEvs with IdsMTimestampOption. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/IdsM_ProtocolAccess.h_296</srcid><srcstatus/><internalId>383</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_TimestampSignature</srcid><srcstatus/><internalId>861</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01101</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        In case the SEvs do not contain the optional information of a
        timestamp (the sensor does not include it when it reports a SEv to the IdsM), the IdsM
        shall request the timestamp information from the configured source in IdsMTimes-
        tampOption. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1279</srcid><srcstatus/><internalId>456</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1359</srcid><srcstatus/><internalId>460</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01103</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The option None in IdsMTimestampOption shall disable the
        timestamp feature. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/IdsM_ProtocolAccess.h_297</srcid><srcstatus/><internalId>384</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_ComTest_01_Minimal</srcid><srcstatus/><internalId>769</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01104</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The option AUTOSAR in IdsMTimestampOption shall en-
        able the timestamp feature and determines that the source of the timestamp is the
        AUTOSAR StbM module by calling the function StbM_GetCurrentTime. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1113</srcid><srcstatus/><internalId>451</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01105</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The option Custom in IdsMTimestampOption shall enable
        the timestamp feature and determines that the source of the timestamp is provided by
        the application software. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1124</srcid><srcstatus/><internalId>453</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01111</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        If the option Custom in IdsMTimestampOption is enabled,
        the IdsM shall use the Client Server Interface IdsM_CustomTimestamp with the op-
        eration Get, which the application shall implement, to request a timestamp from the
        SW-C via the Require Port CustomTimestamp. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1125</srcid><srcstatus/><internalId>454</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_CustomTimestamp_Get</srcid><srcstatus/><internalId>848</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01106</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Timestamps are optional If the parameter IdsMTimestam-
        pOption is equals None, the IdsM shall not add a timestamp to a QSEv. The IdsM
        shall ignore timestamps provided via the timestamp parameter of the event reporting
        interface. (RS_IDS_00502)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1772</srcid><srcstatus/><internalId>511</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Sampling</srcid><srcstatus/><internalId>780</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01107</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Timestamps provided by the stack If IdsMTimestampOp-
        tion is set to `AUTOSAR' and the SEv is reported without a timestamp parameter,
                                                                 
        then IdsM shall add a timestamp from the StbM to the stored and transmitted QSEvs.
        (RS_IDS_00503)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1280</srcid><srcstatus/><internalId>457</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1360</srcid><srcstatus/><internalId>461</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01108</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Timestamp provided via event reporting interface If the
        timestamp feature is enabled and the SEv is reported with a timestamp parameter via
        the services IdsM_SetSecurityEventWithTimestampCount or IdsM_SetSe-
        curityEventWithTimestampCountContextData, then IdsM shall use this pro-
        vided timestamp parameter for transmission or storage of the QSEv. (RS_IDS_00503)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1367</srcid><srcstatus/><internalId>463</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1781</srcid><srcstatus/><internalId>513</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01112</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Timestamp not provided via event reporting interface If the
        timestamp feature is enabled and the SEv is reported without a timestamp parameter
        via the services IdsM_SetSecurityEventWithTimestampCount or IdsM_Set-
        SecurityEventWithTimestampCountContextData, then IdsM shall set the op-
        tion bit for the time stamp in protocol header to 0 before the transmission or storage of
        the QSEv. (RS_IDS_00503)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DEV_UNCLEAR_TIMESTAMP_HANDLING</srcid><srcstatus/><internalId>372</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01109</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Timestamp provided via application software If IdsMTimes-
        tampOption is set to `Custom', and the SEv is reported without a timestamp param-
        eter, then IdsM shall request a timestamp from the application via the Timestamp-
        Provider callback and add the received timestamp to the QSEv. (RS_IDS_00503)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1281</srcid><srcstatus/><internalId>458</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1361</srcid><srcstatus/><internalId>462</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01110</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Truncation of timestamp parameter If the SEv is reported with
        a timestamp parameter, then IdsM shall truncate this value by the 2 most-significant
        bits, i.e., only keep the 62 least-significant bits for further use. (RS_IDS_00503)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/IdsM_ProtocolAccess.h_417</srcid><srcstatus/><internalId>385</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/IdsM_ProtocolAccess.h_429</srcid><srcstatus/><internalId>386</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01200</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The QSEvs shall have a defined structure independent of the
        sink it is being sent to. The components of a QSEv are listed in table Table 7.2. For
        further details of the IdsM Message structure refer to the [4, Specification of Intrusion
        Detection System Protocol]. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_971</srcid><srcstatus/><internalId>731</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Unordered_ASynchronus</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Delayed_ProcessedCallback_ASynchronus</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ProcessedCallback_No_pervious_CopyCallback</srcid><srcstatus/><internalId>796</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_IdsRSink</srcid><srcstatus/><internalId>797</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Synchronus_IdsRSink_NotDelayed</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ASynchronus_IdsRSink_Delayed</srcid><srcstatus/><internalId>801</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01201</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The configuration of a SEv IdsMEvent shall contain a list of
        data sinks which are used for the resulting QSEv. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_615</srcid><srcstatus/><internalId>645</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_686</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Unordered_ASynchronus</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ProcessedCallback_No_pervious_CopyCallback</srcid><srcstatus/><internalId>796</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_IdsRSink</srcid><srcstatus/><internalId>797</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ASynchronus_IdsRSink_Delayed</srcid><srcstatus/><internalId>801</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01202</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall provide the functionality for forwarding qualified
        on-board security events QSEvs to other ECUs via the PduR module. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_840</srcid><srcstatus/><internalId>569</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01203</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        QSEv transmission The IdsM shall be able to use the sink
        IdsR for the configured events. The IdsMSinkIdsR indicates that the corresponding
        QSEv shall be sent via PduR in a IDS Message to the communication network. (RS_IDS_00510)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_590</srcid><srcstatus/><internalId>557</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01204</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Signing QSEv The IdsM shall be able to attach a cryptographic
        signature, with the same data format, to each QSEv. The signature feature is optional
        and shall be activated or deactivated globally for all QSEvs with the presence of a
        configured Csm Job referenced by the IdsMCsmJobReference. (RS_IDS_00505)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/include/IdsMCfgH.java_43</srcid><srcstatus/><internalId>594</internalId></linkedfrom><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/jet_templates/include/IdsM_Cfg.h.jet_60</srcid><srcstatus/><internalId>608</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_IDSM_COMPILE_9_CSM</srcid><srcstatus/><internalId>775</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CsmSyncSimple</srcid><srcstatus/><internalId>804</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CsmSyncMultipleEvents</srcid><srcstatus/><internalId>805</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CsmAsync</srcid><srcstatus/><internalId>806</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CsmAsyncMultipleEvents</srcid><srcstatus/><internalId>807</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_InternalErrorSignature</srcid><srcstatus/><internalId>811</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_TimestampSignature</srcid><srcstatus/><internalId>861</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01205</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM's Csm Job IdsMSignatureGenerateRe-
        sultLength shall define the length in bytes of the signature calculated by the
        crypto services. It shall be configured when the signature feature is activated. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/include/IdsMCfgH.java_48</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/jet_templates/include/IdsM_Cfg.h.jet_68</srcid><srcstatus/><internalId>609</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_CsmSyncSimple</srcid><srcstatus/><internalId>804</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CsmSyncMultipleEvents</srcid><srcstatus/><internalId>805</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CsmAsync</srcid><srcstatus/><internalId>806</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CsmAsyncMultipleEvents</srcid><srcstatus/><internalId>807</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01206</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        In order to generate a signature by a Csm job IdsMCsmJobRef-
        erence, the signature generation shall be triggered by calling the Csm function Csm_-
        SignatureGenerate. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_1093</srcid><srcstatus/><internalId>583</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_CsmSyncSimple</srcid><srcstatus/><internalId>804</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CsmSyncMultipleEvents</srcid><srcstatus/><internalId>805</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CsmAsync</srcid><srcstatus/><internalId>806</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CsmAsyncMultipleEvents</srcid><srcstatus/><internalId>807</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01207</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        If the signature is generated by a synchronous Csm job IdsMC-
        smJobReference, when the function Csm_SignatureGenerate returns, the signa-
        ture shall be immediately available. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_1100</srcid><srcstatus/><internalId>584</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_CsmSyncSimple</srcid><srcstatus/><internalId>804</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CsmSyncMultipleEvents</srcid><srcstatus/><internalId>805</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01208</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        If the signature is generated by an asynchronous Csm job IdsM-
        CsmJobReference, the IdsM shall be informed about the generation of the signature
        by Csm via the Csm notification callback function IdsM_CsmNotification. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_1088</srcid><srcstatus/><internalId>582</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_CsmAsync</srcid><srcstatus/><internalId>806</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CsmAsyncMultipleEvents</srcid><srcstatus/><internalId>807</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01300</id>
      <status>rejected</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        A SEvs reported by a SW-C shall define a maximum number of
        bytes for the transmission of the context data.IdsMEventMaxContextDataSize. ()
</description>
      <comment>This requirement is not applicable
Rationale: as it is a must for parsing.</comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01301</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        No additional Interface Option The SW-C Service Port Inter-
        face shall not provide additional information other than the optional context data
        when the option None is configured in IdsMAdditionalParameterOption. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/IdsM_EventHlp.m_30</srcid><srcstatus/><internalId>745</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_RteReportingAPIs</srcid><srcstatus/><internalId>847</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_RteAll</srcid><srcstatus/><internalId>849</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01302</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Additional Interface Option: Count The SW-C Service Port In-
        terface shall be extended by the parameter count when the option Count is configured
        in IdsMAdditionalParameterOption. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/IdsM_EventHlp.m_55</srcid><srcstatus/><internalId>746</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_RteReportingAPIs</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01303</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Additional Interface Option: Count and timestamp The SW-C
        Service Port Interface shall be extended by the parameters count and timestamp when
        the option CountTimestamp is configured in IdsMAdditionalParameterOption.
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/IdsM_EventHlp.m_66</srcid><srcstatus/><internalId>747</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_RteReportingAPIs</srcid><srcstatus/><internalId>847</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_RteAll</srcid><srcstatus/><internalId>849</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01400</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall send its data via a interface PDU (IF-PDU) if the
        complete IDS Message with its additional IDS Message Signature, if available, fits in
        a single Bus-PDU. Configured in: IdsMIfTxPdu. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_1359</srcid><srcstatus/><internalId>739</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IDSM_GEN_01001_PDU_IF_LENGTH_TOO_SHORT</srcid><srcstatus/><internalId>872</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01401</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Otherwise, if the data does not fit in a single IF-PDU frame, it
        shall be send via transport protocol using TP-PDUs. Configured in: IdsMTpTxPdu. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_848</srcid><srcstatus/><internalId>572</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_IdsRSink_IF_TP</srcid><srcstatus/><internalId>802</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Sync_IdsRSink_IF_TP</srcid><srcstatus/><internalId>803</internalId></linkedfrom><linkedfrom><srcid>TS_IDSM_GEN_01016_PDU_TP_LENGTH_TOO_SHORT</srcid><srcstatus/><internalId>887</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01498</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        After the IdsM has processed the SEvs, the resulting QSEvs
        which have passed the filtering and have the IdsMSinkIdsR configured, shall be
        transmitted using the service PduR_IdsMTransmit. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_841</srcid><srcstatus/><internalId>570</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01499</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        IdsM shall not call PduR_IdsMTransmit again before IdsM_-
        TpTxConfirmation or IdsM_TxConfirmation have been called. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_811</srcid><srcstatus/><internalId>567</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_854</srcid><srcstatus/><internalId>573</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_IdsRSink</srcid><srcstatus/><internalId>797</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Synchronus_IdsRSink_NotDelayed</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Synchronus_IdsRSink_Delayed</srcid><srcstatus/><internalId>799</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ASynchronus_IdsRSink_NotDelayed</srcid><srcstatus/><internalId>800</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ASynchronus_IdsRSink_Delayed</srcid><srcstatus/><internalId>801</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_TxConf_TimerOFF</srcid><srcstatus/><internalId>812</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_TxConf_TimerON</srcid><srcstatus/><internalId>813</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01500</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall receive the confirmation for the complete trans-
        mission of the IF upper layer Tx-Pdu by the PduR Module with the service IdsM_Tx-
        Confirmation. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_354</srcid><srcstatus/><internalId>548</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_IdsRSink</srcid><srcstatus/><internalId>797</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Synchronus_IdsRSink_NotDelayed</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Synchronus_IdsRSink_Delayed</srcid><srcstatus/><internalId>799</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ASynchronus_IdsRSink_NotDelayed</srcid><srcstatus/><internalId>800</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ASynchronus_IdsRSink_Delayed</srcid><srcstatus/><internalId>801</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_TxConf_TimerOFF</srcid><srcstatus/><internalId>812</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_TxConf_TimerON</srcid><srcstatus/><internalId>813</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01501</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall be able to transmit segmented PDUs with the
        service IdsM_CopyTxData. The function shall be called several times, each call to
        this function shall transmit a segment of the Tx-PDU, until it has been completely sent.
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_445</srcid><srcstatus/><internalId>554</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Tp</srcid><srcstatus/><internalId>786</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_TpRetry</srcid><srcstatus/><internalId>787</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_TpTrafficLimitation</srcid><srcstatus/><internalId>788</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01502</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall receive the confirmation of the transmission of a
        segmented PDU by the PduR Module with the service IdsM_TpTxConfirmation. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_385</srcid><srcstatus/><internalId>550</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Tp</srcid><srcstatus/><internalId>786</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_TpRetry</srcid><srcstatus/><internalId>787</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_TpTrafficLimitation</srcid><srcstatus/><internalId>788</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01600</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        {DRAFT} The IdsM shall provide a functionality for persisting
        on-board QSEvs, with their corresponding optional fields: context data and timestamp
        in Dem / Sem. (DRAFT)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_994</srcid><srcstatus/><internalId>580</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DemSink_Synchronus</srcid><srcstatus/><internalId>789</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ASynchronus</srcid><srcstatus/><internalId>790</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_MIX</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_MultipleSync</srcid><srcstatus/><internalId>792</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_MultipleASync</srcid><srcstatus/><internalId>793</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Unordered_ASynchronus</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Delayed_ProcessedCallback_ASynchronus</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ProcessedCallback_No_pervious_CopyCallback</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01601</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        {DRAFT} The IdsM shall be able to use the sink Dem / Sem for
        the configured events. The Sem sink indicates that the corresponding QSEv shall be
        stored in the Dem's user defined memory: Sem. (DRAFT)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_602</srcid><srcstatus/><internalId>558</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DemSink_Synchronus</srcid><srcstatus/><internalId>789</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ASynchronus</srcid><srcstatus/><internalId>790</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_MIX</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_MultipleSync</srcid><srcstatus/><internalId>792</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_MultipleASync</srcid><srcstatus/><internalId>793</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Unordered_ASynchronus</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Delayed_ProcessedCallback_ASynchronus</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ProcessedCallback_No_pervious_CopyCallback</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01602</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        {DRAFT} The data stored in Dem / Sem is the complete IDS Mes-
        sage with its mandatory and optional fields. (DRAFT)
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_979</srcid><srcstatus/><internalId>579</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DemSink_Synchronus</srcid><srcstatus/><internalId>789</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ASynchronus</srcid><srcstatus/><internalId>790</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_MIX</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_MultipleSync</srcid><srcstatus/><internalId>792</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_MultipleASync</srcid><srcstatus/><internalId>793</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Unordered_ASynchronus</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Delayed_ProcessedCallback_ASynchronus</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ProcessedCallback_No_pervious_CopyCallback</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01700</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall be able to persist the parameter Reporting
        Mode of a SEv in the NvM. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_772</srcid><srcstatus/><internalId>436</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Simple</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_success</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_NvM_Failure</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Cancel_Routine_NVM_Failure</srcid><srcstatus/><internalId>830</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Wrong_Parameters</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Cancel_After_Successful_NVM_Write</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01701</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The write routine of the NvM block NvM_WriteBlock shall be
        triggered after the modification of a Reporting Mode value IdsMReportingMode-
        Filter has been successfully changed by the diagnostic services. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_773</srcid><srcstatus/><internalId>437</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Simple</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_success</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_NvM_Failure</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Cancel_Routine_NVM_Failure</srcid><srcstatus/><internalId>830</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Cancel_After_Successful_NVM_Write</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01702</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        If the persistence in the NvM block fails, the IdsM shall roll back
        the SEv's Reporting Mode IdsMReportingModeFilter, to the value before the
        diagnostic modification. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_790</srcid><srcstatus/><internalId>438</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_NvM_Failure</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Cancel_Routine</srcid><srcstatus/><internalId>829</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01703</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The IdsM shall be able to read out the Reporting Mode IdsM-
        ReportingModeFilter persisted in the NvM for the corresponding SEvs handled by
        the IdsM instance. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_661</srcid><srcstatus/><internalId>432</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Simple</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_success</srcid><srcstatus/><internalId>827</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01704</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        In case there are no NvM values available for the Reporting
        Mode IdsMReportingModeFilter of the SEvs, the configured values provided in
        the configuration tool shall be used. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_662</srcid><srcstatus/><internalId>433</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_NvM_Failure</srcid><srcstatus/><internalId>828</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01705</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The NvM block descriptor referenced by IdsMNvmBlockDe-
        scriptor, shall be a block processed during NvM_ReadAll. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_663</srcid><srcstatus/><internalId>434</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1458</srcid><srcstatus/><internalId>685</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Simple</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_success</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Cancel_Routine_NVM_Failure</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01706</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The supported NvM RAM block name shall be
        IdsM_NvMRamBlockData. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1455</srcid><srcstatus/><internalId>684</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Simple</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_success</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_NvM_Failure</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Cancel_Routine</srcid><srcstatus/><internalId>829</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Cancel_Routine_NVM_Failure</srcid><srcstatus/><internalId>830</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Cancel_After_Successful_NVM_Write</srcid><srcstatus/><internalId>832</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01707</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The supported NvM ROM block name shall be
        IdsM_NvMRomBlockData. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DEV_NVM_ROM_BLOCK_NOT_SUPPORTED</srcid><srcstatus/><internalId>369</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01800</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The diagnostic handling feature shall be optional. It shall be
        activated or deactivated with the parameter IdsMDiagnosticSupport. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/model/IdsMModel.java_65</srcid><srcstatus/><internalId>604</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Simple</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_success</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Cancel_Routine</srcid><srcstatus/><internalId>829</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Cancel_Routine_NVM_Failure</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01900</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The Reporting Mode IdsMReportingModeFilter of a SEv
        shall be modifiable during run-time via the diagnostic services of the Dcm. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_894</srcid><srcstatus/><internalId>441</internalId></linkedfrom><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/model/IdsMModel.java_66</srcid><srcstatus/><internalId>605</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Simple</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_NvM_Failure</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Cancel_Routine</srcid><srcstatus/><internalId>829</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01901</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The service IdsM_Dcm_SetReportingMode_Start called by
        the Dcm module shall enable the IdsM to modify the reporting mode IdsMReport-
        ingModeFilter of a specific SEv. This service shall trigger the routine execution to
        modify the current reporting mode, and shall contain the new reporting mode value to
        be set. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_895</srcid><srcstatus/><internalId>442</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Simple</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_success</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_NvM_Failure</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Cancel_Routine</srcid><srcstatus/><internalId>829</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Cancel_Routine_NVM_Failure</srcid><srcstatus/><internalId>830</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01902</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        In case the reporting mode parameter in IdsM_-
        Dcm_SetReportingMode_Start is invalid, this IdsM service shall return
        DCM_E_REQUESTOUTOFRANGE as its Dcm negative response and the func-
        tion shall return E_NOT_OK. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_934</srcid><srcstatus/><internalId>443</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Wrong_Parameters</srcid><srcstatus/><internalId>831</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01903</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        In case the Security Event Definition Id used for the call
        IdsM_Dcm_SetReportingMode_Start is invalid, this IdsM service shall return
        DCM_E_REQUESTOUTOFRANGE as its Dcm negative response and the function
        shall return E_NOT_OK. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_935</srcid><srcstatus/><internalId>444</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Wrong_Parameters</srcid><srcstatus/><internalId>831</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01904</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        In case the request to NvM to persist the new reporting mode
        fails, this IdsM service shall return DCM_E_GENERALPROGRAMMINGFAILURE as
        its Dcm negative response and the function shall return E_NOT_OK. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_831</srcid><srcstatus/><internalId>439</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_success</srcid><srcstatus/><internalId>827</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_01905</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        In case the request to NvM to persist the new reporting mode
        fails, this IdsM service shall roll back to the previously configured reporting mode. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_713</srcid><srcstatus/><internalId>435</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Cancel_Routine</srcid><srcstatus/><internalId>829</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_02000</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The Reporting Mode IdsMReportingModeFilter of a SEv
        shall be readable via the diagnostic services of the Dcm. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_963</srcid><srcstatus/><internalId>446</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1034</srcid><srcstatus/><internalId>449</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Simple</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_02001</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The service IdsM_Dcm_GetReportingMode_Start called by
        the Dcm module shall trigger the IdsM's routine execution to request the current report-
        ing mode of a specific SEv. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_964</srcid><srcstatus/><internalId>447</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Simple</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_02002</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        The service IdsM_Dcm_GetReportingMode_RequestRe-
        sults called by the Dcm module shall allow the IdsM to provide the routine results
        and reporting mode for the requested security event via a result pointer. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1035</srcid><srcstatus/><internalId>450</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1423</srcid><srcstatus/><internalId>682</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Simple</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_02003</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Type of error                                          Related error code          Error value
                                                               IDSM_E_PARAM_INVALID        0x0A
        API function called with an invalid event identifier.  IDSM_E_PARAM_POINTER        0x0B
                                                               IDSM_E_PARAM_LENGTH         0x0C
        API function called with a NULL pointer parameter.
                                                               IDSM_E_UNINIT               0x0D
        API function called with an invalid data size
        parameter.                                             IDSM_E_ALREADY_INITIALIZED  0x0E
        API function called before IdsM has been fully
        initialized.
        The service IdsM_Init is called while the module is
        already initialized.
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/IdsM_Int.h_252</srcid><srcstatus/><internalId>382</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DET_PARAM_POINTER</srcid><srcstatus/><internalId>817</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_02101</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        With development error detection IdsMDevErrorDetect en-
        abled, the IdsM module shall check the parameter securityEventId of the function
        IdsM_SetSecurityEvent against the configured security events, and shall report
        the development error IDSM_E_PARAM_INVALID when an unknown event ID is pro-
        vided by the service call. An unknown event is an event that has not been configured
        in IdsMEvent. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1980</srcid><srcstatus/><internalId>527</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DET_PARAM_INVALID</srcid><srcstatus/><internalId>816</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_02102</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        With development error detection IdsMDevErrorDetect en-
        abled, the IdsM module shall check the parameter securityEventId of the func-
        tion IdsM_SetSecurityEventWithContextData against the configured security
        events, and shall report the development error IDSM_E_PARAM_INVALID when an
        unknown event ID is provided by the service call. An unknown event is an event that
        has not been configured in IdsMEvent. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1981</srcid><srcstatus/><internalId>528</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DET_PARAM_INVALID</srcid><srcstatus/><internalId>816</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_02103</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        With development error detection IdsMDevErrorDetect en-
        abled, the IdsM module shall check the parameters securityEventId and count of
        the function IdsM_SetSecurityEventWithCount. The development error IDSM_-
        E_PARAM_INVALID shall be reported when an unknown event ID is provided by the
        service call or the passed count is equal to 0. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1982</srcid><srcstatus/><internalId>529</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DET_PARAM_INVALID</srcid><srcstatus/><internalId>816</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_02104</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        With development error detection IdsMDevErrorDetect en-
        abled, the IdsM module shall check the parameters securityEventId and count
        of the function IdsM_SetSecurityEventWithCountContextData. The develop-
        ment error IDSM_E_PARAM_INVALID shall be reported when an unknown event ID is
        provided by the service call or the passed count is equal to 0. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1983</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DET_PARAM_INVALID</srcid><srcstatus/><internalId>816</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_02105</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        With development error detection IdsMDevErrorDetect en-
        abled, the IdsM module shall check the parameters securityEventId and count of
        the function IdsM_SetSecurityEventWithTimestampCount. The development
        error IDSM_E_PARAM_INVALID shall be reported when an unknown event ID is pro-
        vided by the service call or the passed count is equal to 0. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1984</srcid><srcstatus/><internalId>531</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DET_PARAM_INVALID</srcid><srcstatus/><internalId>816</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_02106</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        With development error detection IdsMDevErrorDetect en-
        abled, the IdsM module shall check the parameters securityEventId and count of
        the function IdsM_SetSecurityEventWithTimestampCountContextData. The
        development error IDSM_E_PARAM_INVALID shall be reported when an unknown
        event ID is provided by the service call or the passed count is equal to 0. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1985</srcid><srcstatus/><internalId>532</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DET_PARAM_INVALID</srcid><srcstatus/><internalId>816</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_02107</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        With development error detection IdsMDevErrorDetect en-
        abled, the IdsM module shall check the parameter contextDataSize of the function
                                                                 
        IdsM_SetSecurityEventWithContextData, and shall report the development er-
        ror IDSM_E_PARAM_LENGTH when the value of the parameter exceeds the maxi-
        mum configured context data buffer size. The maximum context data buffer size results
        from the largest configured IdsMContextDataBufferSize. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1938</srcid><srcstatus/><internalId>521</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DET_PARAM_LENGTH</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_02108</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        With development error detection IdsMDevErrorDetect en-
        abled, the IdsM module shall check the parameter contextDataSize of the function
        IdsM_SetSecurityEventWithCountContextData, and shall report the develop-
        ment error IDSM_E_PARAM_LENGTH when the value of the parameter exceeds the
        maximum configured context data buffer size. The maximum context data buffer size
        results from the largest configured IdsMContextDataBufferSize. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1939</srcid><srcstatus/><internalId>522</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DET_PARAM_LENGTH</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_02109</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        With development error detection IdsMDevErrorDetect en-
        abled, the IdsM module shall check the parameter contextDataSize of the function
        IdsM_SetSecurityEventWithTimestampCountContextData, and shall report
        the development error IDSM_E_PARAM_LENGTH when the value of the parameter
        exceeds the maximum configured context data buffer size. The maximum context data
        buffer size results from the largest configured IdsMContextDataBufferSize. ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1940</srcid><srcstatus/><internalId>523</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DET_PARAM_LENGTH</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91022</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Module            Header File               Imported Type
        ComStack_Types    ComStack_Types.h          BufReq_ReturnType
                          ComStack_Types.h          PduIdType
        Dcm               ComStack_Types.h          PduInfoType
        StbM              ComStack_Types.h          PduLengthType
        Std               ComStack_Types.h          RetryInfoType
                          ComStack_Types.h          TpDataStateType
                          Rte_Dcm_Type.h            Dcm_NegativeResponseCodeType
                          Rte_Dcm_Type.h            Dcm_OpStatusType
                          Rte_StbM_Type.h           StbM_SynchronizedTimeBaseType
                          Rte_StbM_Type.h           StbM_TimeBaseStatusType
                          Rte_StbM_Type.h           StbM_TimeStampType
                          Rte_StbM_Type.h           StbM_UserDataType
                          Std_Types.h               Std_ReturnType
                          Std_Types.h               Std_VersionInfoType
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/IdsM_Cbk.h_9</srcid><srcstatus/><internalId>374</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91012</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Name            IdsM_ConfigType
        Kind
        Elements        Structure
                        implementation specific
        Description
        Available via   Type                     ­
                        Comment                  ­
                        Configuration data structure of IdsM module.
                        IdsM.h
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/IdsM.xgen_193</srcid><srcstatus/><internalId>761</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91017</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Name           IdsM_Filters_BlockStateType
        Kind
        Derived from   Type
        Range
        Description    uint16
        Available via
                       0..65535                        ­                           ­
                       Data type used for Block State filter values (bit masks)
                       IdsM_Filters_Types.h
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/IdsM_Filters_Types.h_15</srcid><srcstatus/><internalId>375</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_BlockState</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91013</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Name           IdsM_Filters_ReportingModeType  0x00                        Off: Event is not reported
        Kind                                           0x01
        Derived from   Type                            0x02                        Brief: Event is reported without
        Range                                                                      context data
                       uint8                           0x03
                       IDSM_REPORTING_MODE_OFF                                     Detailed: Event is reported
                                                                                   including context data
                       IDSM_REPORTING_MODE_
                       BRIEF                                                       Brief, bypassing filters: Event is
                       IDSM_REPORTING_MODE_                                        reported unfiltered without context
                       DETAILED                                                    data
                       IDSM_REPORTING_MODE_                                        Detailed, bypassing filters: Event
                       BRIEF_BYPASSING_FILTERS                                     is reported unfiltered including
                                                                                   context data
                       IDSM_REPORTING_MODE_            0x04
                       DETAILED_BYPASSING_                                         Invalid reporting mode
                       FILTERS
                       IDSM_REPORTING_MODE_            0xFF
                       INVALID
        Description    Reporting modes used by the reporting mode filter
        Available via
                       IdsM_Types.h
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/IdsM_Types.h_81</srcid><srcstatus/><internalId>389</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91014</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                                                                   
        Name                IdsM_TimestampType
        Kind                Type
        Derived from        uint64
        Description         Data type for IdsM timestamps
        Available via       IdsM_Types.h
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/IdsM_Types.h_76</srcid><srcstatus/><internalId>388</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91001</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Service Name        IdsM_Init
        Syntax
                            void IdsM_Init (
        Service ID [hex]       const IdsM_ConfigType* configPtr
        Sync/Async
        Reentrancy          )
        Parameters (in)
        Parameters (inout)  0x00
        Parameters (out)
        Return value        Synchronous
        Description
                            Non Reentrant
        Available via
                            configPtr                      Component configuration structure
                            None
                            None
                            None
                            Service to initialize the module IdsM. It initializes all variables and sets the module state to
                            initialized.
                            IdsM.h
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM.c_196</srcid><srcstatus/><internalId>390</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91004</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Service Name        IdsM_GetVersionInfo
        Syntax
                            void IdsM_GetVersionInfo (
        Service ID [hex]       const Std_VersionInfoType* versionInfo
                            )
                            0x01
                                             
        Sync/Async          Synchronous
        Reentrancy
        Parameters (in)     Reentrant
        Parameters (inout)
        Parameters (out)    None
        Return value        None
        Description
        Available via       versionInfo      Pointer to where to store the version information. Parameter must
                                             not be NULL.
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM.c_360</srcid><srcstatus/><internalId>395</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_GetVersionInfo</srcid><srcstatus/><internalId>819</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91000</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Service Name        IdsM_MainFunction
        Syntax
                            void IdsM_MainFunction (
        Service ID [hex]       void
        Sync/Async
        Reentrancy          )
        Parameters (in)
        Parameters (inout)  0x02
        Parameters (out)    Synchronous
        Return value        Non Reentrant
        Description         None
                            None
        Available via       None
                            None
                            This function is called periodically. It processes security events asynchronously which are
                            queued during API function calls.
                            IdsM.h
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_557</srcid><srcstatus/><internalId>424</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Long_ContextData</srcid><srcstatus/><internalId>822</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91010</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Service Name        IdsM_CopyTxData
                                               
        Syntax              BufReq_ReturnType IdsM_CopyTxData (
        Service ID [hex]       PduIdType id,
        Sync/Async             const PduInfoType* info,
        Reentrancy             const RetryInfoType* retry,
        Parameters (in)        PduLengthType* availableDataPtr
        Parameters (inout)  )
        Parameters (out)
        Return value        0x43               Identification of the transmitted I-PDU.
        Description         Synchronous
        Available via       Reentrant          Provides the destination buffer (SduDataPtr) and the number of
                            id                 bytes to be copied (SduLength). If not enough transmit data is
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_444</srcid><srcstatus/><internalId>553</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91002</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Service Name        IdsM_SetSecurityEvent
        Syntax
                            void IdsM_SetSecurityEvent (
        Service ID [hex]       IdsM_SecurityEventIdType securityEventId
        Sync/Async
        Reentrancy          )
        Parameters (in)
        Parameters (inout)  0x03
        Parameters (out)
        Return value        Synchronous
        Description
        Available via       Non Reentrant
                            securityEventId        Security Event ID
                            None
                            None
                            None
                            This API is the application interface to report security events to the IdsM.
                            IdsM.h
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_378</srcid><srcstatus/><internalId>410</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91003</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Service Name        IdsM_SetSecurityEventWithContextData
        Syntax
                            void IdsM_SetSecurityEventWithContextData (
        Service ID [hex]       IdsM_SecurityEventIdType securityEventId,
        Sync/Async             const uint8* contextData,
        Reentrancy             uint16 contextDataSize
        Parameters (in)
                            )
        Parameters (inout)
        Parameters (out)    0x04
        Return value
        Description         Synchronous
        Available via
                            Non Reentrant
                            securityEventId        Security Event ID
                            contextData            Pointer to optional context data. Use NULL_PTR if no context
                                                   data is available.
                            contextDataSize        Size of context data
                            None
                            None
                            None
                            This API is the application interface to report security events with context data to the IdsM.
                            IdsM.h
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_405</srcid><srcstatus/><internalId>412</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91018</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Service Name        IdsM_SetSecurityEventWithCount
        Syntax
                            void IdsM_SetSecurityEventWithCount (
        Service ID [hex]       IdsM_SecurityEventIdType securityEventId,
        Sync/Async             uint16 count
        Reentrancy
        Parameters (in)     )
        Parameters (inout)  0x05
        Parameters (out)
        Return value        Synchronous
        Description
        Available via       Non Reentrant
                            securityEventId  Security event ID
                            count            Count value which is used as the start value for the security
                            None             event.
                            None
                            None
                            This API is the application interface for Smart Sensors to report security events with a count
                            value to the IdsM.
                            IdsM.h
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_435</srcid><srcstatus/><internalId>415</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91019</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Service Name        IdsM_SetSecurityEventWithCountContextData
        Syntax
                            void IdsM_SetSecurityEventWithCountContextData (
        Service ID [hex]       IdsM_SecurityEventIdType securityEventId,
        Sync/Async             uint16 count,
        Reentrancy             const uint8* contextData,
        Parameters (in)        uint16 contextDataSize
        Parameters (inout)  )
        Parameters (out)
                            0x06             Security event ID
                            Synchronous
                            Non Reentrant    Count value which is used as the start value for the security
                            securityEventId  event.
                            count            Pointer to optional context data. Use NULL_PTR if no context
                                             data is available.
                            contextData      Size of context data
                            contextDataSize
                            None
                            None
                                             
        Return value        None
        Description
        Available via       This API is the application interface for Smart Sensors to report security events with a count
                            value and context data to the IdsM.
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_463</srcid><srcstatus/><internalId>417</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91020</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Service Name        IdsM_SetSecurityEventWithTimestampCount
        Syntax
                            void IdsM_SetSecurityEventWithTimestampCount (
        Service ID [hex]       IdsM_SecurityEventIdType securityEventId,
        Sync/Async             IdsM_TimestampType timestamp,
        Reentrancy             uint16 count
        Parameters (in)
                            )
        Parameters (inout)
        Parameters (out)    0x07
        Return value
        Description         Synchronous
        Available via
                            Non Reentrant
                            securityEventId  Security event ID
                            timestamp        Timestamp used for time reference of the security event.
                            count            Count value which is used as the start value for the security
                            None             event.
                            None
                            None
                            This API is the application interface for Smart Sensors to report security events with a
                            timestamp and a count value to the IdsM.
                            IdsM.h
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_494</srcid><srcstatus/><internalId>420</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91021</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Service Name        IdsM_SetSecurityEventWithTimestampCountContextData
                                                    
        Syntax              void IdsM_SetSecurityEventWithTimestampCountContextData (
                               IdsM_SecurityEventIdType securityEventId,
        Service ID [hex]       IdsM_TimestampType timestamp,
        Sync/Async             uint16 count,
        Reentrancy             const uint8* contextData,
        Parameters (in)        uint16 contextDataSize
        Parameters (inout)  )
        Parameters (out)
        Return value        0x08
        Description
        Available via       Synchronous
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_525</srcid><srcstatus/><internalId>422</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91005</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Service Name        IdsM_BswM_StateChanged
        Syntax
                            void IdsM_BswM_StateChanged (
        Service ID [hex]       IdsM_Filters_BlockStateType state
        Sync/Async
        Reentrancy          )
        Parameters (in)
        Parameters (inout)  0x0F
                            Synchronous             Current ECU state
                            Reentrant
                            state
                            None
                                                   
        Parameters (out)    None
        Return value        None
        Description         This callback function is invoked by the BswM to indicate ECU state changes.
        Available via       IdsM_Cbk.h
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM.c_391</srcid><srcstatus/><internalId>397</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_BlockState</srcid><srcstatus/><internalId>779</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91011</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Service Name        IdsM_TpTxConfirmation
        Syntax
                            void IdsM_TpTxConfirmation (
        Service ID [hex]       PduIdType id,
        Sync/Async             Std_ReturnType result
        Reentrancy
        Parameters (in)     )
        Parameters (inout)  0x48
        Parameters (out)
        Return value        Synchronous
        Description
        Available via       Reentrant
                            id                     Identification of the transmitted I-PDU.
                            result                 Result of the transmission of the I-PDU.
                            None
                            None
                            None
                            This function is called after the I-PDU has been transmitted on its network, the result indicates
                            whether the transmission was successful or not.
                            IdsM_Cbk.h
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_384</srcid><srcstatus/><internalId>549</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91009</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Service Name        IdsM_TxConfirmation
        Syntax
                            void IdsM_TxConfirmation (
        Service ID [hex]       PduIdType TxPduId,
        Sync/Async             Std_ReturnType result
                            )
                            0x40
                            Synchronous
                                               
        Reentrancy          Reentrant for different PduIds. Non reentrant for the same PduId.
        Parameters (in)
                            TxPduId            ID of the PDU that has been transmitted.
        Parameters (inout)
        Parameters (out)    result             E_OK: The PDU was transmitted. E_NOT_OK: Transmission of
        Return value                           the PDU failed.
        Description
        Available via       None
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_313</srcid><srcstatus/><internalId>546</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_IdsRSink</srcid><srcstatus/><internalId>797</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Synchronus_IdsRSink_NotDelayed</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Synchronus_IdsRSink_Delayed</srcid><srcstatus/><internalId>799</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ASynchronus_IdsRSink_NotDelayed</srcid><srcstatus/><internalId>800</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ASynchronus_IdsRSink_Delayed</srcid><srcstatus/><internalId>801</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_TxConf_TimerOFF</srcid><srcstatus/><internalId>812</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_TxConf_TimerON</srcid><srcstatus/><internalId>813</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91007</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Service Name        IdsM_Dcm_GetReportingMode_RequestResults
        Syntax
                            Std_ReturnType IdsM_Dcm_GetReportingMode_RequestResults (
        Service ID [hex]       Dcm_OpStatusType OpStatus ,
        Sync/Async             uint8* Out_ReportingMode,
        Reentrancy             Dcm_NegativeResponseCodeType* ErrorCode
        Parameters (in)
        Parameters (inout)  )
        Parameters (out)
                            0x0D               The operation status
        Return value        Synchronous        The reporting mode for the requested Security Event
                            Reentrant
        Description         OpStatus
        Available via       None
                            Out_ReportingMode
                            ErrorCode          Negative Response code, in case of an failure
                            Std_ReturnType     E_OK: The operation is finished
                                               DCM_E_PENDING: The operation is not yet finished
                                               E_NOT_OK The operation has failed. A concrete NRC shall be
                                               set, otherwise the DCM sends NRC 0x22
                            This function is a request from DCM to the IdsM to read the routine results triggered by function
                            IdsM_Dcm_GetReportingMode_Start()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1033</srcid><srcstatus/><internalId>448</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Simple</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91006</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                                                         
        Service Name        IdsM_Dcm_GetReportingMode_Start
        Syntax
                            Std_ReturnType IdsM_Dcm_GetReportingMode_Start (
        Service ID [hex]       uint16 In_SecurityEventId,
        Sync/Async             uint8 In_SensorInstanceId,
        Reentrancy             Dcm_OpStatusType OpStatus,
        Parameters (in)        Dcm_NegativeResponseCodeType* ErrorCode
        Parameters (inout)  )
        Parameters (out)
        Return value        0x0C
        Description         Synchronous
        Available via
                            Reentrant
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_962</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Simple</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91008</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Service Name        IdsM_Dcm_SetReportingMode_Start
        Syntax
                            Std_ReturnType IdsM_Dcm_SetReportingMode_Start (
        Service ID [hex]       uint16 In_SecurityEventId,
        Sync/Async             uint8 In_SensorInstanceId,
        Reentrancy             uint8 In_ReportingMode,
        Parameters (in)        Dcm_OpStatusType OpStatus,
                               Dcm_NegativeResponseCodeType* ErrorCode
                            )
                            0x0E                 External ID of the Security Event from whom the reporting mode
                            Synchronous          shall be altered
                            Reentrant            ID of the sensor instance of the security event
                            In_SecurityEventId
                                                 Reporting Mode which shall be stored
                            In_SensorInstanceId
                            In_ReportingMode     The operation status
                            OpStatus
                                                         
        Parameters (inout)  None
        Parameters (out)
        Return value        ErrorCode                    Negative Response code, in case of an failure
        Description         Std_ReturnType               E_OK The operation is finished
        Available via                                    DCM_E_PENDING The operation is not yet finished
                                                         E_NOT_OK The operation has failed. A concrete NRC shall be
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_893</srcid><srcstatus/><internalId>440</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Changing_Reporting_Mode_Simple</srcid><srcstatus/><internalId>826</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91023</id>
      <status>rejected</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                API Function                        Header File  Description
        There are no mandatory interfaces.
        ()
</description>
      <comment>This requirement is not applicable 
Rationale: This is an empty SWS item.</comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91024</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                                                               
        API Function                      Header File         Description
        StbM_GetCurrentTime               StbM.h
                                                              Returns a time value (Local Time Base derived from
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1114</srcid><srcstatus/><internalId>452</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91027</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Name                 IdsMService_{EventName}
        Comment
                             Interface to report security events to the IdsM.
        IsService
        Variation            Depending on the configuration of the event, thus on the number and type of parameters
                             passed to the IdsM about the event, a different operation shall be used.
        Possible Errors
                             true
                             ({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMExternalEventId)} is in range 0x8000 - 0xFFFE)
                             ({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMServiceInterfaceOptions)} EXISTS IdsM/Ids
                             MConfiguration/IdsMEvent/IdsMServiceInterfaceOptions/IdsMAdditionalParameterOption ==
                             None
                             EventName = {ecuc(IdsM/IdsMConfiguration/IdsMEvent.SHORT-NAME)}
                             ­            ­                   ­
        Operation            SetSecurityEvent
        Comment
        Variation            This function shall report security events to the IdsM only with the SecurityEventId
        Possible Errors      ({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMServiceInterfaceOptions/IdsMAdditional
                             ParameterOption)} == None)({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMServiceInterface
                             Options/IdsMEventMaxContextDataSize)} == 0)
                             ­
        Operation            SetSecurityEventWithContextData
        Comment
        Variation            This function shall report a security event with context data
                             ({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMServiceInterfaceOptions/IdsMAdditional
                             ParameterOption)} == None)({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMServiceInterface
                             Options/IdsMEventMaxContextDataSize)} &gt; 0)
                             contextData
                             Type            IdsM _{EventName}_ContextDataType
                                                     
                          Direction        IN
                          Comment          Pointer to optional context data. Use NULL_PTR if no context data is available.
                          Variation        EventName = {ecuc(IdsM/IdsMConfiguration/IdsMEvent.SHORT-NAME)}
                          contextDataSize
                          Type             uint16
                          Direction        IN
                          Comment
                                           Size of context data, must be in range of 0...(Size of maximum configured
                          Variation        context data buffer)
                          ­                ­
        Possible Errors
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/IdsM_swc_interface.arxml.m4_65</srcid><srcstatus/><internalId>749</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_RteReportingAPIs</srcid><srcstatus/><internalId>847</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_RteAll</srcid><srcstatus/><internalId>849</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Rte_MultiPartition</srcid><srcstatus/><internalId>866</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Rte_MultiPartition_TrustedFunction</srcid><srcstatus/><internalId>867</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91028</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Name              IdsMSmartSensorService_{EventName}
        Comment
                          Interface to report security events to the IdsM used by a smart sensor.
        IsService
        Variation         Depending on the configuration of the event, thus on the number and type of parameters
                          passed to the IdsM about the event, a different operation shall be used.
        Possible Errors
                          true
                          ({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMExternalEventId)} is in range 0x8000 - 0x
                          FFFE)({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMServiceInterfaceOptions)} EXISTSIdsM/
                          IdsMConfiguration/IdsMEvent/IdsMServiceInterfaceOptions/IdsMAdditionalParameterOption !=
                          None
                          EventName = {ecuc(IdsM/IdsMConfiguration/IdsMEvent.SHORT-NAME)}
                          ­          ­                        ­
        Operation         SetSecurityEventWithCount
        Comment
        Variation         This function shall be used by smart sensors to report security events with a count value to the
        Parameters        IdsM.
        Possible Errors   ({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMServiceInterfaceOptions/IdsMAdditional
                          ParameterOption == Count)({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMServiceInterface
                          Options/IdsMEventMaxContextDataSize == 0)
                          count
                          Type             uint16
                          Direction        IN
                          Comment          Count value which is used as the start value for the security event, must be in
                                           range of 1...65535
                          Variation        ­
                          ­
                                                  
        Operation        SetSecurityEventWithCountContextData
        Comment
        Variation        This function shall be used by smart sensors to report a security event with count value and
        Parameters       context data to the IdsM.
        Possible Errors  ({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMServiceInterfaceOptions/IdsMAdditional
        Operation        ParameterOption = Count)({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMServiceInterface
        Comment          Options/IdsMEventMaxContextDataSize &gt; 0)
        Variation
        Parameters       count            uint16
                         Type
        Possible Errors
                         Direction        IN
                         Comment
                                          Count value which is used as the start value for the security event, must be in
                                          range of 1...65535
                         Variation        ­
                         contextData      IdsM _{EventName}_ContextDataType
                         Type
                         Direction        IN
                         Comment          Pointer to optional context data. Use NULL_PTR if no context data is available.
                         Variation        EventName = {ecuc(IdsM/IdsMConfiguration/IdsMEvent.SHORT-NAME)}
                         contextDataSize
                         Type             uint16
                         Direction        IN
                         Comment
                                          Size of context data, must be in range of 0...(Size of maximum configured
                         Variation        context data bufer).
                         ­                ­
                         SetSecurityEventWithTimestampCount
                         This function shall be used by smart sensors to report a security event with timestamp and
                         count value to the IdsM.
                         ({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMServiceInterfaceOptions/IdsMAdditional
                         ParameterOption == CountTimestamp)({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMService
                         InterfaceOptions/IdsMEventMaxContextDataSize == 0)
                         timestamp
                         Type             uint64
                         Direction        IN
                         Comment
                                          Timestamp used for time reference of the security event, must be in range of
                                          0...(2^62 - 1)
                         Variation        ­
                         count            uint16
                         Type
                         Direction        IN
                         Comment
                                          Count value which is used as the start value for the security event, must be in
                                          range of 1...65535
                         Variation        ­
                         ­
                                                   
        Operation         SetSecurityEventWithTimestampCountContextData
        Comment
        Variation         This function shall be used by smart sensors to report a security event with timestamp, count
        Parameters        value and context data.
        Possible Errors   ({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMServiceInterfaceOptions/IdsMAdditional
                          ParameterOption == CountTimestamp)({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMService
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/IdsM_swc_interface.arxml.m4_105</srcid><srcstatus/><internalId>750</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_RteReportingAPIs</srcid><srcstatus/><internalId>847</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_RteAll</srcid><srcstatus/><internalId>849</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Rte_MultiPartition</srcid><srcstatus/><internalId>866</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Rte_MultiPartition_TrustedFunction</srcid><srcstatus/><internalId>867</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91029</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Name              IdsM_CustomTimestamp
        Comment
        IsService         Interface to request custom timestamps from the application.
        Variation
        Possible Errors   true
                          {ecuc(IdsM/IdsMGeneral/IdsMTimeStampOption)} == Custom
                          0            E_OK        Operation successful
                          1            E_NOT_OK    Operation failed
                                                          
        Operation         Get
        Comment
        Variation         This function shall request custom timestamps from the application.
        Parameters
                          ­
        Possible Errors   timestamp
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/IdsM_swc_interface.arxml.m4_26</srcid><srcstatus/><internalId>748</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_CustomTimestamp_Get</srcid><srcstatus/><internalId>848</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_RteAll</srcid><srcstatus/><internalId>849</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91016</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Name             IdsM _{EventName}_ContextDataType
        Kind
        Derived from     Type
        Range
        Description      uint8
        Variation
        Available via    0..255                           ­                ­
                         Data type for IdsM context data
                         EventName = {ecuc(IdsM/IdsMConfiguration/IdsMEvent.SHORT-NAME)}
                         IdsM_Types.h
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/IdsM_Bswmd.arxml.m4_76</srcid><srcstatus/><internalId>742</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_RteReportingAPIs</srcid><srcstatus/><internalId>847</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91031</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Name             IdsM_SecurityEventIdType
        Kind             Type
        Derived from     uint16
        Range            0..65535                         ­                ­
        Description      Data type used for local IdsM Security Event IDs
        Variation        ­
        Available via    IdsM_Types.h
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/IdsM_Types.h_71</srcid><srcstatus/><internalId>387</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/IdsM_Bswmd.arxml.m4_61</srcid><srcstatus/><internalId>741</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91030</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Name               IdsMService_{EventName}
        Kind
        Description        ProvidedPort  Interface             IdsMService_{EventName}
        Port Defined
        Argument Value(s)  ­
        Variation          Type          IdsM_SecurityEventIdType
                           Value         ­
                           ({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMExternalEventId)} is in range 0x8000 - 0x
                           FFFE)({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMServiceInterfaceOptions)}
                           EXISTS)({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMServiceInterfaceOptions/IdsMAdditional
                           ParameterOption)} = None)
                           EventName = {ecuc(IdsM/IdsMConfiguration/IdsMEvent.SHORT-NAME)}
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/IdsM_swc_internal.arxml.m4_41</srcid><srcstatus/><internalId>752</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_RteReportingAPIs</srcid><srcstatus/><internalId>847</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_RteAll</srcid><srcstatus/><internalId>849</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91025</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Name               IdsMSmartSensorService_{EventName}
        Kind
        Description        ProvidedPort  Interface             IdsMSmartSensorService_{EventName}
        Port Defined
        Argument Value(s)  ­
        Variation          Type          IdsM_SecurityEventIdType
                           Value         ­
                           ({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMExternalEventId)} is in range 0x8000 - 0x
                           FFFE)({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMServiceInterfaceOptions)}
                           EXISTS)({ecuc(IdsM/IdsMConfiguration/IdsMEvent/IdsMServiceInterfaceOptions/IdsMAdditional
                           ParameterOption)} != None)
                           EventName = {ecuc(IdsM/IdsMConfiguration/IdsMEvent.SHORT-NAME)}
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/IdsM_swc_internal.arxml.m4_59</srcid><srcstatus/><internalId>753</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_RteReportingAPIs</srcid><srcstatus/><internalId>847</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_RteAll</srcid><srcstatus/><internalId>849</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_91026</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>                Name               IdsM_CustomTimestamp
        Kind
        Description        RequiredPort  Interface             IdsM_CustomTimestamp
                           ­
                      
        Variation  ­
        ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/IdsM_swc_internal.arxml.m4_32</srcid><srcstatus/><internalId>751</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_CustomTimestamp_Get</srcid><srcstatus/><internalId>848</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_RteAll</srcid><srcstatus/><internalId>849</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Rte_MultiPartition</srcid><srcstatus/><internalId>866</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Rte_MultiPartition_TrustedFunction</srcid><srcstatus/><internalId>867</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.SWS_IdsM_CONSTR_00002</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        This section lists configuration constraints for the
        IdsM Module. Instances of the container IdsMFilterChain always require to have
        at least one filter configured (IdsMBlockStateFilter, IdsMForwardEveryNth-
        Filter, IdsMEventAggregationFilter, IdsMEventThresholdFilter).
         ()
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>DEV_UNNECESSARY_FILTER_CHAIN_RESTRICTION</srcid><srcstatus/><internalId>373</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00001</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        10.1.1 IdsM                                         IdsM
         Module SWS Item
         Module Name          false
         Module Description
         Post-Build Variant   VARIANT-PRE-COMPILE
         Support
         Supported Config     Multiplicity Scope / Dependency
         Variants
         Included Containers  1  Configuration parameters of the module IdsM.
         Container Name
         IdsMConfiguration       Tags:
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_22</srcid><srcstatus/><internalId>619</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_21</srcid><srcstatus/><internalId>701</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00002</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                     Container Name       IdsMGeneral
        Parent Container     IdsM
        Description          General configuration parameters of IdsM.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1312</srcid><srcstatus/><internalId>677</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_24</srcid><srcstatus/><internalId>702</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00005</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMDevErrorDetect         Parent Container     IdsMGeneral
        Description          This parameter enables/disables the Development Error Detection and
                             Notification. true: Development error detection is enabled. false:
        Multiplicity         Development error detection is disabled.
        Type
        Default Value        Note: In general, the development error detection is recommended
        Post-Build Variant   during pre-test phase. It is not recommended to enable the
        Value                development error detection in production code due to increased
        Value Configuration  runtime and ROM needs.
        Class
                             Tags:
        Scope / Dependency   atp.Status=draft
                             1
                             EcucBooleanParamDef
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1325</srcid><srcstatus/><internalId>678</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00010</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMDiagnosticSupport         Parent Container     IdsMGeneral
        Description          Enables or disables the Dcm APIs which are used to read and write
                             certain values of the IdsM module through the diagnostic
        Multiplicity         communication manager.
        Type
        Default Value        true: Dcm APIs are enabled false: Dcm APIs are disabled
        Post-Build Variant
        Value                Tags:
        Value Configuration  atp.Status=draft
        Class                1
                             EcucBooleanParamDef
        Scope / Dependency   false
                             false
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1400</srcid><srcstatus/><internalId>681</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00007</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMInstanceId         Parent Container     IdsMGeneral
        Description          The unique identifier of the sending IdsM instance. This ID helps
                             identifying the origin of a SEv, together with the SEv configuration
        Multiplicity         parameters: ExternalEventId and the IdsMSensorInstanceId.
        Type
        Range                Note: There is only one IdsM (from the AUTOSAR Classic Platform)
        Default Value        instance per ECU.
        Post-Build Variant
        Value                Tags:
        Value Configuration  atp.Status=draft
        Class                1
                             EcucIntegerParamDef
        Scope / Dependency   0 .. 1023
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1348</srcid><srcstatus/><internalId>679</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00004</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMMainFunctionPeriod         Parent Container     IdsMGeneral
        Description          The period between successive calls to the IdsM main function (as
                             float in seconds).
        Multiplicity
        Type                 Tags:
        Range                atp.Status=draft
        Default Value        1
        Post-Build Variant   EcucFloatParamDef
        Value                [0 .. INF]
        Value Configuration  0.01
        Class                false
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1374</srcid><srcstatus/><internalId>680</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00011</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMSignatureGenerateResultLength         Parent Container     IdsMGeneral
        Description          This parameter defines the length in bytes of the signature calculated
                             by the crypto services. This parameter should be set when the
        Multiplicity         IdsMSignatureSupport is enabled.
        Type
        Range                Tags:
        Default Value        atp.Status=draft
        Post-Build Variant   0..1
        Multiplicity         EcucIntegerParamDef
        Post-Build Variant   0 .. 4294967295
        Value
        Multiplicity         false
        Configuration Class
                             false
        Value Configuration
        Class                Pre-compile time   X All Variants
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1492</srcid><srcstatus/><internalId>687</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00009</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMSignatureSupport         Parent Container     IdsMGeneral
        Description          This parameter enables/disables the functionality of sending messages
                             to the network with a signature of encryption calculated by the crypto
        Multiplicity         services.
        Type
        Default Value        Tags:
        Post-Build Variant   atp.Status=draft
        Value                1
        Value Configuration  EcucBooleanParamDef
        Class                false
                             false
        Scope / Dependency
                             Pre-compile time         X All Variants
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1465</srcid><srcstatus/><internalId>686</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00012</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMTimestampOption         Parent Container     IdsMGeneral
        Description          This parameter enables/disables the functionality of having a
                             timestamp field as part of a QSEv and if the origin of the timestamp is
        Multiplicity         from the AUTOSAR stack or from the application (custom timestamp).
        Type
        Range                Tags:
                             atp.Status=draft
        Post-Build Variant   1
        Value                EcucEnumerationParamDef
        Value Configuration  AUTOSAR
        Class
        Scope / Dependency                            Tags:
                                                      atp.Status=draft
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1605</srcid><srcstatus/><internalId>689</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00006</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMVersionInfoApi         Parent Container     IdsMGeneral
        Description          This parameter enables/disables the function IdsM_GetVersionInfo() to
                             get major, minor and patch version information of the module.
        Multiplicity
        Type                 Tags:
        Default Value        atp.Status=draft
        Post-Build Variant   1
        Value                EcucBooleanParamDef
        Value Configuration
        Class                false
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1679</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00015</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMCsmJobReference         Parent Container     IdsMGeneral
        Description          This parameter references the Csm job that is used to generate
                             signatures when qualified security events must be signed.
        Multiplicity
        Type                 Tags:
        Post-Build Variant   atp.Status=draft
        Multiplicity         0..1
        Post-Build Variant   Reference to CsmJob
        Value                false
        Multiplicity
        Configuration Class  false
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1575</srcid><srcstatus/><internalId>688</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00013</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMNvmBlockDescriptor         Parent Container     IdsMGeneral
        Description          Choose a NvM block descriptor reference, that is used to load and
                             store the non-volatile data of IdsM module.
        Multiplicity
        Type                 The supported NvM block names are: RAM: IdsM_NvMRamBlockData
        Post-Build Variant   ROM: IdsM_NvMRomBlockData
        Multiplicity
        Post-Build Variant   Tags:
        Value                atp.Status=draft
        Multiplicity         0..1
        Configuration Class  Reference to NvMBlockDescriptor
                             false
        Value Configuration
        Class                false
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1424</srcid><srcstatus/><internalId>683</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00014</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMStbMSynchronizedTimeBaseReference         Parent Container     IdsMGeneral
        Description          This parameter references the time source when the origin of the
                             timestamp is AUTOSAR.
        Multiplicity
        Type                 Tags:
        Post-Build Variant   atp.Status=draft
        Multiplicity         0..1
        Post-Build Variant   Reference to StbMSynchronizedTimeBase
        Value                false
        Multiplicity
        Configuration Class  false
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1644</srcid><srcstatus/><internalId>691</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00008</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                          Container Name            IdsMGlobalRateLimitationFilters
        Parent Container          IdsMGeneral
        Description               Global rate limitation filters for all SEvs.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1703</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00053</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                          Container Name 
IdsMFilterEventRateLimitation
Parent Container 
IdsMGlobalRateLimitationFilters
Description For configurable time intervals of length
"IdsMRateLimitationTimeInterval" this filter forwards all the SEvs until
reaching the limit "IdsMRateLimitationMaximumEvents".
The limit is measured in number of incoming SEvs.
Until the end of the time interval, all subsequent SEvs are dropped.
This is helpful to cap the load that the IdsM generates unto information
sinks like the IdsR. This filter is not specific to a single SEv but it
applies to all SEvs handled by the current IdsM instance.
Note: Each possible SEv counts as a single one, regardless of its
counter value.                        </description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1727</srcid><srcstatus/><internalId>695</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00055</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                      IdsMRateLimitationMaximumEvents         Parent Container          IdsMFilterEventRateLimitation
        Description               The maximum number of SEvs which are passed on by this filter in a
                                  single rate limitation time interval.
        Multiplicity
        Type                      Tags:
        Range                     atp.Status=draft
        Default Value             1
        Post-Build Variant        EcucIntegerParamDef
        Value                     1 .. 65535
        Value Configuration
        Class                     false
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1749</srcid><srcstatus/><internalId>696</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00054</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                    IdsMRateLimitationTimeInterval         Parent Container        IdsMFilterEventRateLimitation
        Description             Time interval length of the event rate limitation filter (as float in
                                seconds).
        Multiplicity
        Type                    Note: Shall be configured as a multiple of the IdsM main function
        Range                   period.
        Default Value
        Post-Build Variant      Tags:
        Value                   atp.Status=draft
        Value Configuration     1
        Class                   EcucFloatParamDef
                                [0 .. INF]
        Scope / Dependency
                                false
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1776</srcid><srcstatus/><internalId>697</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00056</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                        Container Name          IdsMFilterTrafficLimitation
        Parent Container        IdsMGlobalRateLimitationFilters
        Description             The traffic limitation filter forwards all the incoming SEvs until reaching
                                the limit IdsMTrafficLimitationMaximumBytes.
        Post-Build Variant
        Multiplicity            The limit is measured in incoming amount of bytes.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1805</srcid><srcstatus/><internalId>698</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00058</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                      IdsMTrafficLimitationMaximumBytes         Parent Container          IdsMFilterTrafficLimitation
        Description               The maximum number of bytes to be sent out by the IdsM in a single
                                  traffic limitation time interval.
        Multiplicity
        Type                      Tags:
        Range                     atp.Status=draft
        Default Value             1
        Post-Build Variant        EcucIntegerParamDef
        Value                     1 .. 65535
        Value Configuration
        Class                     false
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1826</srcid><srcstatus/><internalId>699</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00057</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                      IdsMTrafficLimitationTimeInterval         Parent Container          IdsMFilterTrafficLimitation
        Description               Length of the traffic limitation time interval (as float in seconds).
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1853</srcid><srcstatus/><internalId>700</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00003</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                         Container Name           IdsMConfiguration
        Parent Container         IdsM
        Description              Configuration parameters of the module IdsM.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_75</srcid><srcstatus/><internalId>620</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00016</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                          Container Name            IdsMFilterChain
        Parent Container          IdsMConfiguration
        Description               A filter chain is a combination of filters that affects one or more SEvs.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_869</srcid><srcstatus/><internalId>659</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00021</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                                  Container Name                    IdsMBlockStateFilter
        Parent Container                  IdsMFilterChain
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_887</srcid><srcstatus/><internalId>660</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00051</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                      IdsMBlockStateReference         Parent Container          IdsMBlockStateFilter
        Description               The collection of SEvs during this state will be suspended.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_906</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00020</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                          Container Name            IdsMBlockState
        Parent Container          IdsMConfiguration
        Description               Configuration of an IdsM blocking state used in the
                                  IdsMStateBlockFilter to suspend the collection of security events. The
                                  active state is reported by the BswM via IdsM_BswM_StateChanged().
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_89</srcid><srcstatus/><internalId>621</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00052</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                      IdsMBlockStateID         Parent Container          IdsMBlockState
        Description               This value specifies the identifier of this block state.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_112</srcid><srcstatus/><internalId>622</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00022</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                          Container Name            IdsMForwardEveryNthFilter
        Parent Container          IdsMFilterChain
        Description               Out of all incoming SEVs, drop all but every nth. Those will be
                                  forwarded without modification.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1094</srcid><srcstatus/><internalId>668</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00023</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>          Name                    IdsMNthParameter           Parent Container        IdsMForwardEveryNthFilter
          Description             For each SEv ID for which this filter is configured, this parameter
                                  assigns the appropriate n. Only 1 from n SEvs will be forwarded.
          Multiplicity
          Type                    Tags:
          Range                   atp.Status=draft
                                  1
        85 of 104                 EcucIntegerParamDef
                                  2 .. 65535
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1115</srcid><srcstatus/><internalId>669</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00024</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                          Container Name            IdsMEventAggregationFilter
        Parent Container          IdsMFilterChain
        Description               All received events of a certain event ID that are received by this filter
                                  during a single aggregation time interval are not forwarded
                                  immediately.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_939</srcid><srcstatus/><internalId>662</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00026</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMContextDataSourceSelector         Parent Container     IdsMEventAggregationFilter
        Description          The resulting SEv from the aggregation filter contains the context data
                             from one of the following two sources:
        Multiplicity
        Type                 IDSM_FILTERS_CTX_USE_FIRST = ContextData of first received
        Range                SEv is used for resulting QSEv.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_961</srcid><srcstatus/><internalId>663</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00025</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMEventAggregationTimeInterval         Parent Container     IdsMEventAggregationFilter
        Description          Length of the aggregation time interval (as float in seconds).
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_991</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00027</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                          Container Name            IdsMEventThresholdFilter
        Parent Container          IdsMFilterChain
        Description               During each time interval IdsMEventThresholdTimeInterval, the filter
                                  drops the first IdsMEventThresholdNumber - 1 SEvs and forwards all
                                  other incoming SEvs immediately until the end of the time interval.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1018</srcid><srcstatus/><internalId>665</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00029</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                      IdsMEventThresholdNumber         Parent Container          IdsMEventThresholdFilter
        Description               This parameter assigns the threshold 'p' for each SEv ID affected by
                                  this threshold filter. All SEvs ' p-1' are dropped, SEvs equal or greater
        Multiplicity              than 'p' are forwarded.
        Type
        Range                     Tags:
        Default Value             atp.Status=draft
        Post-Build Variant        1
        Value                     EcucIntegerParamDef
        Value Configuration       2 .. 65535
        Class
                                  false
        Scope / Dependency
                                  Pre-compile time  X All Variants
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1040</srcid><srcstatus/><internalId>666</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00028</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                      IdsMEventThresholdTimeInterval         Parent Container          IdsMEventThresholdFilter
        Description               Length of the threshold time interval (as float in seconds).
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1066</srcid><srcstatus/><internalId>667</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00017</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                          Container Name            IdsMEvent
        Parent Container          IdsMConfiguration
        Description               Configuration of the IdsM Event unit which is reported by a sensor and
                                  its parameters.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_461</srcid><srcstatus/><internalId>637</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00032</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMExternalEventId         Parent Container     IdsMEvent
        Description          The external security event ID which is reported to the sink. There are
                             two different value ranges depending on the referencing module:
        Multiplicity
        Type                 Standarized SEv ID is defined by the AUTOSAR specification. This ID
        Range                is usually derived from the SecXT. Standard ID range: 0x0000 - 0x8000
        Default Value
        Post-Build Variant   Generic User Event ID is defined by the user. Used when a SW-C /
        Value                Application references the SEv. Generic ID range: 0x8000 - 0xFFFE.
        Value Configuration
        Class                0xFFFF is considered an invalid ID
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_483</srcid><srcstatus/><internalId>639</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00033</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMInternalEventId         Parent Container     IdsMEvent
        Description          Consecutive number used internally as an identifier by the IdsM
                             module.
        Multiplicity
        Type                 This number is calculated internally and shall not be configured
        Range                manually. This parameter is only available to publish the result of this
        Default Value        calculation. Applications using IdsM APIs shall not rely on the value of
        Post-Build Variant   this parameter. Instead, they shall use the symbolic name value.
        Value
        Value Configuration  Tags:
        Class                atp.Status=draft
                             1
        Scope / Dependency   EcucIntegerParamDef (Symbolic Name generated for this parameter)
                             0 .. 65535
                             65535
                             false
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_517</srcid><srcstatus/><internalId>640</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00036</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMReportingModeFilter         Parent Container
        Description          IdsMEvent
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_548</srcid><srcstatus/><internalId>643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00031</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMSensorInstanceId         Parent Container     IdsMEvent
        Description          The instance ID of the sensor which reports security events to the
                             IdsM.
        Multiplicity
        Type                 If there is only one instance of a sensor, the default ID is 0.
        Range
        Default Value        Tags:
        Post-Build Variant   atp.Status=draft
        Value                1
        Value Configuration  EcucIntegerParamDef
        Class                0 .. 65535
                             0
        Scope / Dependency   false
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_586</srcid><srcstatus/><internalId>644</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00035</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMSinkDem         Parent Container     IdsMEvent
        Description          The QSEv will be sent to the Dem Module into a Security Event
                             Memory (Sem) to persist it on the local ECU.
        Multiplicity
        Type                 Tags:
        Default Value        atp.Status=draft
        Post-Build Variant   1
        Value                EcucBooleanParamDef
        Value Configuration  false
        Class                false
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_616</srcid><srcstatus/><internalId>646</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DemSink_MultipleSync</srcid><srcstatus/><internalId>792</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Delayed_ProcessedCallback_ASynchronus</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_IdsRSink</srcid><srcstatus/><internalId>797</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Synchronus_IdsRSink_NotDelayed</srcid><srcstatus/><internalId>798</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ASynchronus_IdsRSink_NotDelayed</srcid><srcstatus/><internalId>800</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ASynchronus_IdsRSink_Delayed</srcid><srcstatus/><internalId>801</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00034</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                 IdsMSinkIdsR         Parent Container     IdsMEvent
        Description          The QSEv will be sent to the IDS Reporter.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_685</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00030</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                  IdsMFilterChainRef         Parent Container      IdsMEvent
        Description           Reference to a configured IdsM filter chain.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_713</srcid><srcstatus/><internalId>653</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00018</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                          Container Name            IdsMPdus
        Parent Container          IdsMConfiguration
        Description               Configuration of the PDU references used to send the events data.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1143</srcid><srcstatus/><internalId>670</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00040</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                      IdsMIfTxPdu         Parent Container          IdsMPdus
        Description              IF PDU used to transmit a QSEv via the PduR to the IdsR.
If the total size of the QSEvs data to be transmitted fits in a single
frame of the underlying bus, the IF PDU is used.

</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1166</srcid><srcstatus/><internalId>671</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00041</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                      IdsMIfTxPduHandleId         Parent Container          IdsMIfTxPdu
        Description               IdsM does not use this parameter, content will be ignored.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1187</srcid><srcstatus/><internalId>672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00042</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                      IdsMIfTxPduRef         Parent Container          IdsMIfTxPdu
        Description               Reference to the IF PDU used for transmission of the QSEvs.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1214</srcid><srcstatus/><internalId>673</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00043</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                          Container Name            IdsMTpTxPdu
        Parent Container          IdsMPdus
        Description               TP PDU used to transmit a QSEv via the PduR to the IdsR.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1237</srcid><srcstatus/><internalId>674</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00044</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                      IdsMTpTxPduHandleId         Parent Container          IdsMTpTxPdu
        Description               IdsM does not use this parameter, content will be ignored.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1258</srcid><srcstatus/><internalId>675</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00045</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                    IdsMTpTxPduRef         Parent Container        IdsMTpTxPdu
        Description             Reference to the TP PDU used for transmission of the QSEvs.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1285</srcid><srcstatus/><internalId>676</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00019</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                        Container Name          IdsMBufferConfiguration
        Parent Container        IdsMConfiguration
        Description             Configuration of the event buffers and context data buffers used by
                                IdsM.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_139</srcid><srcstatus/><internalId>623</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00046</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                                              Container Name                                IdsMContextDataBuffer
        Parent Container                              IdsMBufferConfiguration
        Description                                   Buffer that is reserved to store the context data of SEvs.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_153</srcid><srcstatus/><internalId>624</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00047</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                    IdsMContextDataBufferSize         Parent Container        IdsMContextDataBuffer
        Description             Size of the context data buffer in bytes. It is recommended to configure
                                buffers with an appropriate size depending on the configured SEvs.
        Multiplicity
        Type                    Tags:
        Range                   atp.Status=draft
        Default Value           1
        Post-Build Variant      EcucIntegerParamDef
        Value                   1 .. 1500
        Value Configuration
        Class                   false
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_175</srcid><srcstatus/><internalId>626</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00048</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                    IdsMNumberOfContextDataBuffers         Parent Container        IdsMContextDataBuffer
        Description             The number of buffers with the configured buffer size specified in
                                IdsMContextDataBufferSize. It is recommended to configure an
        Multiplicity            appropriate number of buffers depending on the configured SEvs.
        Type
        Range                   Tags:
        Default Value           atp.Status=draft
        Post-Build Variant      1
        Value                   EcucIntegerParamDef
        Value Configuration     1 .. 65535
        Class
                                false
        Scope / Dependency
                                Pre-compile time         X All Variants
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_204</srcid><srcstatus/><internalId>627</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00049</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                        Container Name          IdsMEventBuffers
        Parent Container        IdsMBufferConfiguration
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_235</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00050</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                    IdsMNumberOfEventBuffers         Parent Container        IdsMEventBuffers
        Description             The number of event buffers used to store the SEvs.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_248</srcid><srcstatus/><internalId>629</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00037</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        SWS Item                        Container Name          IdsMServiceInterfaceOptions
        Parent Container        IdsMEvent
        Description             Adittional configuration parameters of a SEv when the sensor is a
                                SW-C or application.
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_780</srcid><srcstatus/><internalId>656</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00039</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                      IdsMAdditionalParameterOption         Parent Container
        Description               IdsMServiceInterfaceOptions
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_800</srcid><srcstatus/><internalId>657</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>
    <specobject>
      <id>IdsM.ASR20-11.ECUC_IdsM_00038</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R20-11</source>
      <version>1</version>
      <description>        Name                    IdsMEventMaxContextDataSize         Parent Container        IdsMServiceInterfaceOptions
        Description             Maximum number of bytes used by the IdsM and the RTE when
                                forwarding context data of the corresponding security event.
        Multiplicity
        Type                    This parameter is only used for SW-C use cases. This is the maximum
        Range                   amount of bytes defined for transmission of the context data.
        Default Value
        Post-Build Variant      In case this is a Basic Software Module SEv, the configuration of this
        Value                   parameter is not necessary and will be ignored.
        Value Configuration
        Class                   Tags:
                                atp.Status=draft
        Scope / Dependency      1
                                EcucIntegerParamDef
                                0 .. 1500
                                0
                                false
</description>
      <comment/>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_833</srcid><srcstatus/><internalId>658</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>IdsM.ASR22-11.SWS_IdsM_00750</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R22-11</source>
      <version>1</version>
      <description>
        If the Context Data Modifier is configured, the IdsM shall call IdsM_ContextDataModifierCallout_Name directly
        after the corresponding SEv is reported, as long as the reporting mode is DETAILED or
        DETAILED_BYPASSING_FILTERS. (RS_Ids_00200)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1913</srcid><srcstatus/><internalId>520</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Long_ContextDataModifier</srcid><srcstatus/><internalId>823</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CDM_Addition</srcid><srcstatus/><internalId>833</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CDM_Subtraction</srcid><srcstatus/><internalId>834</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CDM_Dropping</srcid><srcstatus/><internalId>835</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CDM_Brief</srcid><srcstatus/><internalId>836</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CDM_NoCdBuffer</srcid><srcstatus/><internalId>837</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_ContextDataModifier_With_InternalEvents</srcid><srcstatus/><internalId>839</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_Cdm</srcid><srcstatus/><internalId>859</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>
    <specobject>
      <id>IdsM.ASR22-11.SWS_IdsM_00751</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R22-11</source>
      <version>1</version>
      <description>
        If IdsM calls IdsM_ContextDataModifierCallout_Name, then it shall use the context data provided by the out
        parameter modifiedContextData as the SEv's context data. (RS_Ids_00200)
        The IdsM can configure two kinds of context data modifiers:
          - A specific modifier, IdsMContextDataModifierCallout, which affects only the SEvs linked to it.
          - A global modifier, IdsMGlobalContextDataModifierCalloutFct, which affects all configured SEvs.
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1742</srcid><srcstatus/><internalId>510</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Long_ContextDataModifier</srcid><srcstatus/><internalId>823</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CDM_Addition</srcid><srcstatus/><internalId>833</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CDM_Subtraction</srcid><srcstatus/><internalId>834</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CDM_Dropping</srcid><srcstatus/><internalId>835</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CDM_NoCdBuffer</srcid><srcstatus/><internalId>837</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_ContextDataModifier_With_InternalEvents</srcid><srcstatus/><internalId>839</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_Cdm</srcid><srcstatus/><internalId>859</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>
    <specobject>
      <id>IdsM.ASR22-11.SWS_IdsM_00752</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R22-11</source>
      <version>1</version>
      <description>
        If IdsMContextDataModifierCalloutFct is configured,SEvs shall call the configured callout function for the
        referenced SEvs. Otherwise, if IdsMGlobalContextDataModifierCalloutFct is configured, SEvs shall call the
        configured callout for all SEvs, except those with a specific modifier callout. (RS_-Ids_00200)
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMCfgC.java_40</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Cfg.c.jet_73</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Long_ContextDataModifier</srcid><srcstatus/><internalId>823</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CDM_Addition</srcid><srcstatus/><internalId>833</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CDM_Subtraction</srcid><srcstatus/><internalId>834</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CDM_Dropping</srcid><srcstatus/><internalId>835</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CDM_NoCdBuffer</srcid><srcstatus/><internalId>837</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_ContextDataModifier_With_InternalEvents</srcid><srcstatus/><internalId>839</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_Cdm</srcid><srcstatus/><internalId>859</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>
    <specobject>
      <id>IdsM.ASR22-11.SWS_IdsM_91033</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R22-11</source>
      <version>1</version>
      <description>
        Service Name        IdsM_ContextDataModifierCallout_Name
        Syntax              void   IdsM_ContextDataModifierCallout_Name     (
                              uint16    securityEventId,
                              const   IdsM  _{EventName}_ContextDataType*     contextData,
                              uint16    contextDataSize,
                              const   IdsM  _{EventName}_ContextDataType*     modifiedContextDataSize,
                              const   uint16*   modifiedContextData
                            )
        Sync/Async          Synchronous
        Reentrancy          Non Reentrant
        Parameters (in)     securityEventId           Security event ID
                            contextData               Pointer to original reported context data. NULL_PTR if no context
                                                      data is available.
                            contextDataSize           Size of original reported context data.
        Parameters (inout)  modifiedContextDataSize   in: As input parameter, the maximum size of the modifiedContext
                                                      Data is described.
                                                      out: Once the function is called the actual new size of the context
                                                      data shall be set by the application.
        Parameters (out)    modifiedContextData       Pointer to the output buffer for the modified context data. The
                                                      application shall set the new context data in this buffer.
        Return value        None
        Description         In this callout the application can modify the original context data of a SEv. The
                            application is responsible to copy the resulting context data into the buffer "modifiedContext
                            Data". The size of the resulting context data must be returned using pointer "modifiedContext
                            DataSize".
        Available via
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Cfg.c.jet_74</srcid><srcstatus/><internalId>613</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Long_ContextDataModifier</srcid><srcstatus/><internalId>823</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CDM_Addition</srcid><srcstatus/><internalId>833</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CDM_Subtraction</srcid><srcstatus/><internalId>834</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CDM_Dropping</srcid><srcstatus/><internalId>835</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CDM_NoCdBuffer</srcid><srcstatus/><internalId>837</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_ContextDataModifier_With_InternalEvents</srcid><srcstatus/><internalId>839</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_Cdm</srcid><srcstatus/><internalId>859</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>
    <specobject>
      <id>IdsM.ASR22-11.ECUC_IdsM_00061</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R22-11</source>
      <version>1</version>
      <description>
        Container Name                    IdsMContextDataModifierOptions
        Parent Container                  IdsMEvent
        Description                       Additional configuration parameters of a SEv to be able to modify incoming context data.
        Post-Build Variant Multiplicity   false
        Multiplicity Configuration Class  Pre-compile time                   X         All Variants
                                          Link time
                                          Post-build time
        Configuration Parameters
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_738</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>
    <specobject>
      <id>IdsM.ASR22-11.ECUC_IdsM_00063</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R22-11</source>
      <version>1</version>
      <description>
        Parameter Name                    IdsMContextDataModifierCalloutRef
        Parent Container                  IdsMContextDataModifierOptions
        Description                       Reference to event specific context data modifier callout function.
        Multiplicity                      1
        Type                              Reference to IdsMContextDataModifierCallout
        Post-Build Variant Value          false
        Value Configuration Class         Pre-compile time                   X         All Variants
                                          Link time
                                          Post-build time
        Scope / Dependency                scope: local
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_757</srcid><srcstatus/><internalId>655</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>
    <specobject>
      <id>IdsM.ASR22-11.ECUC_IdsM_00064</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R22-11</source>
      <version>1</version>
      <description>
        Container Name                      IdsMContextDataModification
        Parent Container                    IdsMConfiguration
        Description                         Configuration of context data modifier callouts.
        Post-Build Variant Multiplicity     false
        Multiplicity Configuration Class    Pre-compile time                   X          All  Variants
                                            Link time
                                            Post-build time
        Configuration Parameters
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_277</srcid><srcstatus/><internalId>630</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>
    <specobject>
      <id>IdsM.ASR22-11.ECUC_IdsM_00072</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R22-11</source>
      <version>1</version>
      <description>
        Parameter Name                    IdsMGlobalContextDataHeaderFileIncludes
        Parent Container                  IdsMContextDataModification
        Description                       List of optional header files which contains the prototypes of the context
                                          data modifier callouts.
        Multiplicity                      0..*
        Type                              EcucStringParamDef
        Default value
        Regular Expression
        Post-Build Variant Multiplicity   false
        Post-Build Variant Value          false
        Multiplicity Configuration Class  Pre-compile time                   X              All Variants
                                          Link time
                                          Post-build time
        Value Configuration Class         Pre-compile time                   X              All Variants
                                          Link time
                                          Post-build time
        Scope / Dependency                scope: local
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_298</srcid><srcstatus/><internalId>631</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>
    <specobject>
      <id>IdsM.ASR22-11.ECUC_IdsM_00070</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R22-11</source>
      <version>1</version>
      <description>
        Parameter Name                    IdsMGlobalContextDataModifierCalloutFct
        Parent Container                  IdsMContextDataModification
        Description                       Global context data modifier callout function. This callout can be
                                          overruled by event-specific context data modifier callouts.
        Multiplicity                      0..1
        Type                              EcucFunctionNameDef
        Default value
        Regular Expression
        Post-Build Variant Multiplicity   false
        Post-Build Variant Value          false
        Multiplicity Configuration Class  Pre-compile time                   X              All   Variants
                                          Link time
                                          Post-build time
        Value Configuration Class         Pre-compile time                   X              All   Variants
                                          Link time
                                          Post-build time
        Scope / Dependency                scope: local
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_327</srcid><srcstatus/><internalId>632</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>
    <specobject>
      <id>IdsM.ASR22-11.ECUC_IdsM_00071</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R22-11</source>
      <version>1</version>
      <description>
        Parameter Name                    IdsMGlobalContextDataSizeModifier
        Parent Container                  IdsMContextDataModification
        Description                       Global context data size modifier used in combination with global context data size
                                          modifier callout function.
        Multiplicity                      0..1
        Type                              EcucIntegerParamDef
        Range                             -1499 .. 1499
        Default value                     0
        Post-Build Variant Multiplicity   false
        Post-Build Variant Value          false
        Multiplicity Configuration Class  Pre-compile time  X                       All Variants
                                          Link time
                                          Post-build time
        Value Configuration Class         Pre-compile time  X                       All Variants
                                          Link time
                                          Post-build time
        Scope / Dependency                scope: local
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_355</srcid><srcstatus/><internalId>633</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>
    <specobject>
      <id>IdsM.ASR22-11.ECUC_IdsM_00065</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R22-11</source>
      <version>1</version>
      <description>
        Container Name                    IdsMContextDataModifierCallout
        Parent Container                  IdsMContextDataModification
        Description                       Configuration of event specific context data modifier callouts.
        Post-Build Variant Multiplicity   false
        Multiplicity Configuration Class  Pre-compile time                   X            All Variants
                                          Link time
                                          Post-build time
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_388</srcid><srcstatus/><internalId>634</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>
    <specobject>
      <id>IdsM.ASR22-11.ECUC_IdsM_00067</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R22-11</source>
      <version>1</version>
      <description>
        Parameter Name                    IdsMContextDataModifierCalloutFct
        Parent Container                  IdsMContextDataModifierCallout
        Description                       Event specific context data modifier callout function. If the global
                                          context data modifier callout is configured, it can be overruled by
                                          this event-specific callout.
        Multiplicity                      1
        Type                              EcucFunctionNameDef
        Default value
        Regular Expression
        Post-Build Variant Value          false
        Value Configuration Class         Pre-compile time                   X            All Variants
                                          Link time
                                          Post-build time
        Scope / Dependency                scope: local
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_410</srcid><srcstatus/><internalId>635</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>
    <specobject>
      <id>IdsM.ASR22-11.ECUC_IdsM_00066</id>
      <status>approved</status>
      <source>AUTOSAR SWS IdsM R22-11</source>
      <version>1</version>
      <description>
        Parameter Name                    IdsMContextDataSizeModifier
        Parent Container                  IdsMContextDataModifierCallout
        Description                       Event specific context data size modifier used in combination with event
                                          specific context data size modifier callout function.
        Multiplicity                      1
        Type                              EcucIntegerParamDef
        Range                             -1499 .. 1499
        Default value                     0
        Post-Build Variant Value          false
        Value Configuration Class         Pre-compile time                   X            All Variants
                                          Link time
                                          Post-build time
        Scope / Dependency                scope: local
      </description>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_432</srcid><srcstatus/><internalId>636</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">
    <specobject>
      <id>eb.custom.IdsM.Aggregate.Internal.SEV</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM Internal security events should be aggregated with aggregation time = main task activation interval</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1202</srcid><srcstatus/><internalId>455</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Switch.Support</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - The IDSM shall also be applicable for ECUs with Ethernet switches running an EB Ethernet Switch Firmware</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/include/IdsMCfgH.java_74</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/jet_templates/include/IdsM_Cfg.h.jet_112</srcid><srcstatus/><internalId>610</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_IDSM_COMPILE_6_EXTERNALDEVICE</srcid><srcstatus/><internalId>772</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Sampling</srcid><srcstatus/><internalId>780</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Aggregtion01</srcid><srcstatus/><internalId>781</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Threshold01</srcid><srcstatus/><internalId>782</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Qualification.OnSwitch</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - The IdsM Proxy running on the Ethernet switch shall buffer and qualify SEv from security sensors</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1682</srcid><srcstatus/><internalId>508</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Sampling</srcid><srcstatus/><internalId>780</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Aggregtion01</srcid><srcstatus/><internalId>781</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Threshold01</srcid><srcstatus/><internalId>782</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Forwarding.QSEV.ToServer</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - The IdsM proxy running on the Ethernet switch shall forward QSEvs using the IdsM-Connect integrated in EB Ethernet Switch FW</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1375</srcid><srcstatus/><internalId>464</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1385</srcid><srcstatus/><internalId>466</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Sampling</srcid><srcstatus/><internalId>780</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Aggregtion01</srcid><srcstatus/><internalId>781</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Threshold01</srcid><srcstatus/><internalId>782</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Single.Server.OnECU</id>
      <status>rejected</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - The solution supports a single IdsM Server in a given ECU</description>
      <comment>This requirement is informational only
Rationale: only provides information about module scope on conceptual level</comment>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.ECU.only.Server</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - The IdsM Server shall always run on the ECU, never on a switch</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_715</srcid><srcstatus/><internalId>559</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Server.Acess.OfBSW</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - The IdsM Server shall have local access to the depending BSW modules: NvM, Det, Dem, Dcm, Csm, PduR, StbM, Rte</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/IdsM_Int.h_55</srcid><srcstatus/><internalId>380</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_842</srcid><srcstatus/><internalId>571</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DET_ALREADY_INITIALIZED</srcid><srcstatus/><internalId>814</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DET_UNINIT</srcid><srcstatus/><internalId>815</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DET_PARAM_INVALID</srcid><srcstatus/><internalId>816</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DET_PARAM_POINTER</srcid><srcstatus/><internalId>817</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DET_PARAM_LENGTH</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Single.Proxy.OnSwitch</id>
      <status>rejected</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - The IdsM Server supports a single IdsM Proxy running on an Ethernet switch</description>
      <comment>This requirement is informational only
Rationale: only provides information about module scope on conceptual level</comment>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.PreCompile.Select.Target</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - The IsdM shall support configurable compile flag for distinguishing targets for IdsM Proxy target (e.g. ECU, Switch) </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_26</srcid><srcstatus/><internalId>703</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Sampling</srcid><srcstatus/><internalId>780</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Aggregtion01</srcid><srcstatus/><internalId>781</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Threshold01</srcid><srcstatus/><internalId>782</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Filters_Limitation</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.PostBuild.Variant</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - The IsdM shall support post build configuration variants </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/IdsM.xgen_240</srcid><srcstatus/><internalId>763</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.PreCompile.Events</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - Number of configured security events, their symbolic names and internalEventIds should be only supported as PreCompile</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_476</srcid><srcstatus/><internalId>638</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_532</srcid><srcstatus/><internalId>642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.ReportingSEV.onSwitch</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM should call the following interface on external device (switch) for relaying SEv back to IdsM server on ECU:
 Name: EthSwtFwM_SetExtSecurityEventWithTimestampCount
          Returns: void
          Parameters:
             - Name: sensorInstanceId
               Type: uint8
             - Name: externalSecurityEventId
               Type: uint16
             - Name: timestamp
               Type: uint64
             - Name: count
               Type: uint16</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1376</srcid><srcstatus/><internalId>465</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Sampling</srcid><srcstatus/><internalId>780</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Aggregtion01</srcid><srcstatus/><internalId>781</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Threshold01</srcid><srcstatus/><internalId>782</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.ReportingSEV.withCD.onSwitch</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM should call the following interface on external device (switch) for relaying SEv with context data back to IdsM server on ECU:
Name: EthSwtFwM_SetExtSecurityEventWithTimestampCountContextData
          Returns: void
          Parameters:
             - Name: sensorInstanceId
               Type: uint8
             - Name: externalSecurityEventId
               Type: uint16
             - Name: timestamp
               Type: uint64
             - Name: count
               Type: uint16
             - Name: contextDataSize
               Type: uint16
             - Name: contextData
               Type: const uint8*</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1386</srcid><srcstatus/><internalId>467</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_EventBuffering01</srcid><srcstatus/><internalId>778</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Sampling</srcid><srcstatus/><internalId>780</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Aggregtion01</srcid><srcstatus/><internalId>781</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Threshold01</srcid><srcstatus/><internalId>782</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Filters_MIX01</srcid><srcstatus/><internalId>783</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.BSWMD.Generate.EA</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - The IdsM module's generator shall generate a basic software module description (BSWMD) containing information on the exclusive areas required by the IdsM module's implementation.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/IdsM_Bswmd.arxml.m4_201</srcid><srcstatus/><internalId>743</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_IDSM_COMPILE_7_SCHM</srcid><srcstatus/><internalId>773</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.BSWMD.Generate.MainFunction</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - The IdsM module's generator shall generate a basic software module description (BSWMD) containing information on the scheduled MainFunction together with the scheduling period</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/IdsM_Bswmd.arxml.m4_218</srcid><srcstatus/><internalId>744</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_IDSM_COMPILE_7_SCHM</srcid><srcstatus/><internalId>773</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>
    <specobject>
      <id>IdsM.EB.RelocatablePBCfg</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - In order to support post-build-time configuration data handled by relative offsets to the configuration start address, the container IdsMGeneral must be extended by the configuration parameter IdsMRelocatablePbcfgEnable.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_659</srcid><srcstatus/><internalId>712</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_PBcfgM_Off</srcid><srcstatus/><internalId>766</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_PBcfgM_On</srcid><srcstatus/><internalId>767</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.StbM.Reference</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM generator should report an error when IdsMTimestampOption is set to AUTOSAR but there is no valid reference configured to an StbM timeBase.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1645</srcid><srcstatus/><internalId>692</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IDSM_GEN_01003_STBM_REFERENCE_NOT_FOUND</srcid><srcstatus/><internalId>874</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.Consecutive.Internal.IDs</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM generator should report an error when Events IdsMInternalEventId parameters are not 0 based consecutive integers.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_584</srcid><srcstatus/><internalId>725</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IDSM_GEN_01004_INTERNAL_IDS_NOT_CONSECUTIVE</srcid><srcstatus/><internalId>875</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.IfPdu.Reference</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM generator should report an error when IdsMIfTxPduRef is enabled but containing invalid reference.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_1352</srcid><srcstatus/><internalId>738</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IDSM_GEN_01005_PDU_IF_REFERENCE_NOT_FOUND_IN_PDUR</srcid><srcstatus/><internalId>876</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.Context.Buffers.Count</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM generator should report an error when number of context data buffers are greater than number of configured event buffers.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_180</srcid><srcstatus/><internalId>722</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IDSM_GEN_01006_MORE_CONTEXT_BUFFERS_THAN_EVENT_BUFFERS</srcid><srcstatus/><internalId>877</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.RAM.Size</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM generator should report an error when used postbuild RAM needs is exceeding the configured precompile IdsMMaxAllocatedRAM value.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_1184</srcid><srcstatus/><internalId>733</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IDSM_GEN_01007_ALLOCATED_MAX_RAM_TOO_SMALL</srcid><srcstatus/><internalId>878</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.TimeStamp.ExternalDevice.Events</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - When timestamp feature is enabled in Ecu, and External Device APIs is invoked without timestamp, The IdsM shall add timestamp to these external qualified events.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1773</srcid><srcstatus/><internalId>512</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_External_Event_Timestamp</srcid><srcstatus/><internalId>785</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_ExternalDevice</srcid><srcstatus/><internalId>855</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Config.IdsMRteUsage</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - This configuration parameter enables the usage of the RTE for the IdsM module.
true:  RTE-usage is enabled  false:  RTE-usage is disabled.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_629</srcid><srcstatus/><internalId>710</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_RteMinimal</srcid><srcstatus/><internalId>846</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.No.Rte.Found</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM shall display a warning message if IdsM is configured for Rte usage (IdsMRteUsage), but the Rte is not part of the configuration.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_651</srcid><srcstatus/><internalId>711</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IDSM_GEN_01008_RTE_USAGE_ENABLED_BUT_RTE_NOT_FOUND</srcid><srcstatus/><internalId>879</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.Custom.Timestamp.And.RteUsage.Disabled</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM shall display an error message if timestamp (IdsMTimestampOption) is selected to be Custom, but Rte usage (IdsMRteUsage) is disabled.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_1637</srcid><srcstatus/><internalId>690</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IDSM_GEN_01009_CUSTOM_TIMESTAMP_BUT_RTE_DISABLED</srcid><srcstatus/><internalId>880</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Config.DemEventParameterRef</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - This configuration parameter contains a refrence to DemEventParameter when DemSink is enabled for an event.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_643</srcid><srcstatus/><internalId>647</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DemSink_Synchronus</srcid><srcstatus/><internalId>789</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ASynchronus</srcid><srcstatus/><internalId>790</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_MIX</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_MultipleASync</srcid><srcstatus/><internalId>793</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Delayed_ProcessedCallback_ASynchronus</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ProcessedCallback_No_pervious_CopyCallback</srcid><srcstatus/><internalId>796</internalId></linkedfrom><linkedfrom><srcid>TS_IDSM_GEN_01013_DEM_NO_PROCESSED_CALLBACK</srcid><srcstatus/><internalId>884</internalId></linkedfrom><linkedfrom><srcid>TS_IDSM_GEN_01014_DEM_NO_COPY_CALLBACK</srcid><srcstatus/><internalId>885</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Dem.Callback</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM shall support both of synchronus and asynchronus callback from Dem.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_889</srcid><srcstatus/><internalId>575</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_935</srcid><srcstatus/><internalId>577</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DemSink_Synchronus</srcid><srcstatus/><internalId>789</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ASynchronus</srcid><srcstatus/><internalId>790</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_MIX</srcid><srcstatus/><internalId>791</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_MultipleSync</srcid><srcstatus/><internalId>792</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_MultipleASync</srcid><srcstatus/><internalId>793</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Unordered_ASynchronus</srcid><srcstatus/><internalId>794</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_Delayed_ProcessedCallback_ASynchronus</srcid><srcstatus/><internalId>795</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_DemSink_ProcessedCallback_No_pervious_CopyCallback</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Dem.Event.Unique</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - Each IdsM Event with a Dem sink shall have a unique DemEventParameterRef.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_671</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IDSM_GEN_01011_DEM_REFERENCE_UNIQUENESS</srcid><srcstatus/><internalId>882</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.DemEventParameterRef</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - When DemSink is enabled, DemEventRef shall contain a valid DemEventParameter container.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_668</srcid><srcstatus/><internalId>649</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IDSM_GEN_01010_INVALID_DEM_REFERENCE</srcid><srcstatus/><internalId>881</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.Dem.Callback.Unique</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - Each IdsM Event with a Dem sink shall have a unique callback name.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/model/IdsMModel.java_401</srcid><srcstatus/><internalId>606</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IDSM_GEN_01012_DEM_CALLBACK_NAME_UNIQUENESS</srcid><srcstatus/><internalId>883</internalId></linkedfrom><linkedfrom><srcid>TS_IDSM_GEN_01015_DEM_PROCESSED_CALLBACK_NAME_UNIQUENESS</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.IfBulkTransmission</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM can transmit up to configured number of QSEVs on IF-Pdu without waiting for TxConfirmation.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_728</srcid><srcstatus/><internalId>715</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_BulkTransmission</srcid><srcstatus/><internalId>820</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.InternalEvent.Unique</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - Each IdsM Internal Event can be configured only once in IdsMEvent list</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM.c_492</srcid><srcstatus/><internalId>402</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IDSM_GEN_01018_INTERNAL_ERROR_EVENT_UNIQUENESS</srcid><srcstatus/><internalId>889</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.TpPdu.Reference</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM generator should report an error when IdsMIfTxPduRef is enabled but containing invalid reference.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_1329</srcid><srcstatus/><internalId>737</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IDSM_GEN_01017_PDU_TP_REFERENCE_NOT_FOUND_IN_PDUR</srcid><srcstatus/><internalId>888</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.MultiplePartitions</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - It shall be supported to run IdsM on different partitions. </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/include/IdsMCfgH.java_143</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/jet_templates/include/IdsM_Cfg.h.jet_245</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_ComTest_08_Partition</srcid><srcstatus/><internalId>774</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_Simple</srcid><srcstatus/><internalId>850</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_TimestampSignature</srcid><srcstatus/><internalId>861</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_InternalError</srcid><srcstatus/><internalId>865</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Rte_MultiPartition</srcid><srcstatus/><internalId>866</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Rte_MultiPartition_TrustedFunction</srcid><srcstatus/><internalId>867</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.MultiplePartitions.Isolation</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - Each IdsM instance shall have its own run time memory area (not shared with other IdsM partition).</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMLcfgC.java_42</srcid><srcstatus/><internalId>600</internalId></linkedfrom><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Lcfg.c.jet_111</srcid><srcstatus/><internalId>615</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Partitions_Simple</srcid><srcstatus/><internalId>850</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.MultiplePartitions.SharedConfiguration</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - It shall be supported to have separate BufferConfigurations and max memory configuration independently per IdsM partition. The rest of configuration parameters values shall be shared between all IdsM partitions.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/IdsM.xgen_154</srcid><srcstatus/><internalId>757</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_var/xgen/IdsM.xgen_194</srcid><srcstatus/><internalId>762</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Partitions_Simple</srcid><srcstatus/><internalId>850</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.MasterPartition.SingleInstance</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - Only one Master IdsM partition is allowed on any ECU.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_356</srcid><srcstatus/><internalId>707</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Partitions_Simple</srcid><srcstatus/><internalId>850</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.SatellitePartitions.Unlimited</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM shall support configurable number of IdsM satellite partitions (i.e. non-Master partitions).</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_925</srcid><srcstatus/><internalId>716</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Partitions_Simple</srcid><srcstatus/><internalId>850</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.MasterPartition.Propagation</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM Master partition shall be the only partition with the ability to propogate qualified security events to IdsR or Dem.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_633</srcid><srcstatus/><internalId>431</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Partitions_Simple</srcid><srcstatus/><internalId>850</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_Sinks</srcid><srcstatus/><internalId>852</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.MasterPartition.RelaySatellitePropagation</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - Master IdsM partition shall recieve qualified SEvs from Satellite IdsM partitions and propogate them to designated sinks.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_628</srcid><srcstatus/><internalId>430</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Partitions_Simple</srcid><srcstatus/><internalId>850</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_Sinks</srcid><srcstatus/><internalId>852</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.SatellitePartitions.SchM</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - Satellite partitions should communicate with Master partition through SchM calls.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_620</srcid><srcstatus/><internalId>429</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Partitions_Simple</srcid><srcstatus/><internalId>850</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_Queue_Full</srcid><srcstatus/><internalId>853</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.InvalidPartitionContext</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - If a IdsM Api function accesses instance specific data and no IdsM configuration has been defined for that partition, the IdsM shall ignore the request by not modifying any data and throw the DET error IDSM_E_WRONG_CONTEXT if DET is enabled.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM.c_232</srcid><srcstatus/><internalId>391</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM.c_404</srcid><srcstatus/><internalId>398</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_569</srcid><srcstatus/><internalId>425</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_2090</srcid><srcstatus/><internalId>536</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_329</srcid><srcstatus/><internalId>547</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_401</srcid><srcstatus/><internalId>551</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_465</srcid><srcstatus/><internalId>555</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_901</srcid><srcstatus/><internalId>576</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_948</srcid><srcstatus/><internalId>578</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_1033</srcid><srcstatus/><internalId>581</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Partitions_Det</srcid><srcstatus/><internalId>854</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_Signature_Invalid_IdsMInstance</srcid><srcstatus/><internalId>862</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_Mac_Invalid_IdsMInstance</srcid><srcstatus/><internalId>864</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.MasterPartition.BlockStateSync</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - Master IdsM partition shall sync block state reported from BswM with satellite partitions of type reporting and processing.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMLcfgC.java_108</srcid><srcstatus/><internalId>602</internalId></linkedfrom><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Lcfg.c.jet_239</srcid><srcstatus/><internalId>617</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Partitions_BlockState</srcid><srcstatus/><internalId>856</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_BlockStateDet</srcid><srcstatus/><internalId>857</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.MultiplePartitions.BswMStateChanged</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - Callback IdsM_BswM_StateChanged() shall only be called on Master partition. When it is called on different partition, IdsM shall throw DET error IDSM_E_WRONG_CONTEXT if DET is enabled.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM.c_405</srcid><srcstatus/><internalId>399</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Partitions_BlockStateDet</srcid><srcstatus/><internalId>857</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.MasterPartition.BlockStateSync.QueueLimit</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM shall throw IDSM_E_LIMIT when Master try to synchronize block state with satellites and it get SCHM_E_LIMIT error.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM.c_427</srcid><srcstatus/><internalId>400</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Partitions_BlockStateDet</srcid><srcstatus/><internalId>857</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Mac</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM shall be able to attach a cryptographic Mac to each QSEv. The Mac feature is optional and shall be activated or deactivated globally for all QSEvs. Signature and Mac cannot be enabled at the same time.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_1288</srcid><srcstatus/><internalId>585</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TST_IDSM_COMPILE_9_CSM</srcid><srcstatus/><internalId>775</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CsmSyncSimple</srcid><srcstatus/><internalId>804</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CsmSyncMultipleEvents</srcid><srcstatus/><internalId>805</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CsmAsync</srcid><srcstatus/><internalId>806</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_CsmAsyncMultipleEvents</srcid><srcstatus/><internalId>807</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_Mac</srcid><srcstatus/><internalId>863</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.SatellitePartitions.ReportingOnly</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - Satellite partition Reporting_Only shall relay reported SEvs to Master or Reporting_and_Processing partition in same core by using Trusted Functions.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_2096</srcid><srcstatus/><internalId>537</internalId></linkedfrom><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMLcfgC.java_97</srcid><srcstatus/><internalId>601</internalId></linkedfrom><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Lcfg.c.jet_212</srcid><srcstatus/><internalId>616</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Partitions_TrustedFunction</srcid><srcstatus/><internalId>858</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Partitions_InternalError</srcid><srcstatus/><internalId>865</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_Rte_MultiPartition_TrustedFunction</srcid><srcstatus/><internalId>867</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.MultiplePartitions.OsHooks</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM instances shall allow reporting of SEvs from Os Hooks.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMCfgC.java_53</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Cfg.c.jet_144</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Error_Hook_Reporting</srcid><srcstatus/><internalId>824</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.NoRpWithMaster</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - There shall not be IdsM instance of type Reporting_and_Processing with IdsM instance of type Master in same core.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_1067</srcid><srcstatus/><internalId>720</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Partitions_TrustedFunction</srcid><srcstatus/><internalId>858</internalId></linkedfrom><linkedfrom><srcid>TS_IDSM_GEN_01020_SATELLITE_RP_WITH_MASTER</srcid><srcstatus/><internalId>891</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.MaxRpPerCore</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - There shall be maximum of one IdsM instance of type Reporting_and_Processing in a core.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_1060</srcid><srcstatus/><internalId>719</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Rte_MultiPartition_TrustedFunction</srcid><srcstatus/><internalId>867</internalId></linkedfrom><linkedfrom><srcid>TS_IDSM_GEN_01021_TWO_SATELLITE_RP_IN_SAME_CORE</srcid><srcstatus/><internalId>892</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.RoWithRpOrMaster</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - In order to add IdsM instance of type Reporting_Only, there shall be another instance in same core of type Master or Reporting_and_Processing.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_1074</srcid><srcstatus/><internalId>721</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Partitions_TrustedFunction</srcid><srcstatus/><internalId>858</internalId></linkedfrom><linkedfrom><srcid>TS_IDSM_GEN_01022_SATELLITE_RP_ALONE_IN_CORE</srcid><srcstatus/><internalId>893</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.TrustedFunctionEnable</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - When Satellite of type Reporting_Only is configured, the Master or Satellite Reporting_and_Processing on same core must have TrustedFunctionRef enabled.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_420</srcid><srcstatus/><internalId>709</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_1006</srcid><srcstatus/><internalId>718</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.TrustedFunctionRef</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - TrustedFunction parameter should reference valid OsApplicationTrustedFunction on same OsApplication as IdsM instance.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_397</srcid><srcstatus/><internalId>708</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_981</srcid><srcstatus/><internalId>717</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IDSM_GEN_01023_SATELLITE_RO_WITH_MASTER_INVALID_TF_REF</srcid><srcstatus/><internalId>894</internalId></linkedfrom><linkedfrom><srcid>TS_IDSM_GEN_01024_SATELLITE_RO_WITH_SATELLITE_RP_INVALID_TF_REF</srcid><srcstatus/><internalId>895</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.CustomFormatHook</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM shall provide hook callout to allow modification of IDS message format after qualification. The modified message format could be signed as well if the signing feature is enabled.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_1296</srcid><srcstatus/><internalId>459</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Hook</srcid><srcstatus/><internalId>868</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.BootConnect</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM BootConnect is used to store the QSEVs reported during the Boot time and having a Dem sink in a NvM block,These QSEVs in the Booltloader context will be written in NvM block as records and read in the Application context to be propagated to Dem.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_BootConnect.c_157</srcid><srcstatus/><internalId>403</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_BootConnect.c_232</srcid><srcstatus/><internalId>405</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_1421</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/IdsM.xdm.m4_661</srcid><srcstatus/><internalId>648</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_200</srcid><srcstatus/><internalId>704</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_1418</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_ComTest_10_BootConnect</srcid><srcstatus/><internalId>776</internalId></linkedfrom><linkedfrom><srcid>IdsM_ComTest_11_ApplConnect</srcid><srcstatus/><internalId>777</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_BootConnect</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_ApplConnect</srcid><srcstatus/><internalId>869</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_ApplConnectInvalidLength</srcid><srcstatus/><internalId>870</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_ApplConnectNvmError</srcid><srcstatus/><internalId>871</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.BootConnectMasterEcu</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - The IdsM BootConnect feature will be supported in Master instance only and ECU host type.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_596</srcid><srcstatus/><internalId>428</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_1422</srcid><srcstatus/><internalId>591</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_ApplConnectNvmError</srcid><srcstatus/><internalId>871</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.BootNvMBlockValid</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - IdsM BootConnect NvM block in Bootloader and Application projects must be valid and referring to the same physical memory.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_BootConnect.c_179</srcid><srcstatus/><internalId>404</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_BootConnect.c_241</srcid><srcstatus/><internalId>406</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_275</srcid><srcstatus/><internalId>705</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_BootConnect</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_ApplConnect</srcid><srcstatus/><internalId>869</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_ApplConnectNvmError</srcid><srcstatus/><internalId>871</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.BootConnectMaxRecords</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - During the Bootloader context each event will have a parameter named eventMaxRecords that defines the max number of Qualified records from the event that could be stored in the NvM block and any consequent Qualified records will be dropped silently.  </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_690</srcid><srcstatus/><internalId>714</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_BootConnect</srcid><srcstatus/><internalId>825</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.BootConnectFirstMainFunction</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - The propagation of Boot Records is done in the first IdsM mainfunction only during the Application context.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_595</srcid><srcstatus/><internalId>427</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_ApplConnect</srcid><srcstatus/><internalId>869</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_ApplConnectNvmError</srcid><srcstatus/><internalId>871</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.BootConnectApplicationContext</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - The Boot Records are handled as Qualified in the Application and processed as long as there are available free IdsM buffers and if there is no available buffer the record is dropped silently.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_BootConnect.c_249</srcid><srcstatus/><internalId>407</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_ApplConnect</srcid><srcstatus/><internalId>869</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_ApplConnectInvalidLength</srcid><srcstatus/><internalId>870</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_ApplConnectNvmError</srcid><srcstatus/><internalId>871</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.BootConnectSharedEvents</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - The Configuration of the Events should be the same in Application and Bootloader projects at least for the events that will be shared otherwise the Record will be dropped silently.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_BootConnect.c_263</srcid><srcstatus/><internalId>408</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_ApplConnect</srcid><srcstatus/><internalId>869</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.BootNvMBlockName</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - The referenced NvM block must be named &amp;IdsM_BootNvMRamBlockData.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_276</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_BootConnect</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_ApplConnect</srcid><srcstatus/><internalId>869</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_ApplConnectNvmError</srcid><srcstatus/><internalId>871</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.BootConnectTimestamp</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description> - BootConnect in Application side shall be able to add timestamp to boot records qualified security events.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_BootConnect.c_299</srcid><srcstatus/><internalId>409</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_ApplConnectTimestamp</srcid><srcstatus/><internalId>838</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.SyncTransmission.BswMRequest</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description>
        - The IdsM shall be informed, by the BswM module, about the underlying network
        readiness to transmit QSEvs via IdsM_RequestTransmission(request) when
        IdsMSyncTransmission is enabled.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_235</srcid><srcstatus/><internalId>539</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_TransmissionStart</srcid><srcstatus/><internalId>841</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.SyncTransmission.IdsRSink</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description>
        - IdsMSyncTransmission only impacts events with IdsR sink.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_2002</srcid><srcstatus/><internalId>534</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_TransmissionStartWithDemSink</srcid><srcstatus/><internalId>844</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_TransmissionStopWithDemSink</srcid><srcstatus/><internalId>845</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.SyncTransmission.Initialization</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description>
        - After IdsM initialization, IdsM shall allow reporting and qualification of SEvs
        but block propagating QSEvs with IdsR sink until transmission state is changed to
        IDSM_TRANSMISSION_START.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_1405</srcid><srcstatus/><internalId>588</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_TransmissionStart</srcid><srcstatus/><internalId>841</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.SyncTransmission.Start</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description>
        - Whenever transmission state is changed to IDSM_TRANSMISSION_START, IdsM shall
        enable both reporting and propagation of events with IdsR sink.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_1406</srcid><srcstatus/><internalId>589</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_TransmissionStart</srcid><srcstatus/><internalId>841</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.SyncTransmission.Stop</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description>
        - When transmission state is changed to IDSM_TRANSMISSION_STOP, IdsM shall
        rejects SEvs reporting with IdsR sink, and keep propagating to IdsR until all
        QSEvs in all partitions are finished.</description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Proxy.c_2003</srcid><srcstatus/><internalId>535</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_TransmissionStop</srcid><srcstatus/><internalId>842</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.SyncTransmission.NotifyStopped</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description>
        - If parameter IdsMNotifyTransmissionStopped is enabled and transmission state
        is IDSM_TRANSMISSION_STOP, IdsM shall call BswM_IdsMTransmissionStopped after all
        QSEvs are propagated.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_282</srcid><srcstatus/><internalId>544</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_1383</srcid><srcstatus/><internalId>587</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_TransmissionStop</srcid><srcstatus/><internalId>842</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.SyncTransmission.Restart</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description>
        - If transmission state is changed from IDSM_TRANSMISSION_STOP to
        IDSM_TRANSMISSION_START, IdsM shall resume normal behavior.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_265</srcid><srcstatus/><internalId>542</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_TransmissionRestart</srcid><srcstatus/><internalId>843</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.SyncTransmission.RestartWithoutNotify</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description>
        - If transmission state is changed from IDSM_TRANSMISSION_STOP to
        IDSM_TRANSMISSION_START and IdsM has not yet called BswM_IdsMTransmissionStopped,
        IdsM shall drop this call because it become obsolete.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_266</srcid><srcstatus/><internalId>543</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_TransmissionRestart</srcid><srcstatus/><internalId>843</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.SyncTransmission.MultiPartitions</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description>
        - Callback IdsM_RequestTransmission() is only accepted in Master IdsM partition.
        If development error detection is enabled and IdsM_RequestTransmission() is called
        on any other partition than Master, the IdsM module shall call Det_ReportError with
        the error code IDSM_E_WRONG_CONTEXT.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_248</srcid><srcstatus/><internalId>540</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_1366</srcid><srcstatus/><internalId>586</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_Partitions_SyncTransmission</srcid><srcstatus/><internalId>860</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.SyncTransmission.WrongParameters</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description>
        - Callback IdsM_RequestTransmission() shall shall call Det_ReportError with the
        error code IDSM_E_PARAM_INVALID when development error detection is enabled and
        IdsM_RequestTransmission() is called with wrong request.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/IdsM_Server.c_303</srcid><srcstatus/><internalId>545</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_DET_PARAM_INVALID</srcid><srcstatus/><internalId>816</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>
    <specobject>
      <id>eb.custom.IdsM.Check.MaxIDSMessageLength</id>
      <status>approved</status>
      <source>custom EB requirement</source>
      <version>1</version>
      <description>
        - Maximum IDS message length shall not exceed 65535 bytes.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/IdsM_Pbcfg.m_1305</srcid><srcstatus/><internalId>736</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IDSM_GEN_01025_MAX_MSG_LENGTH_EXCEEDED</srcid><srcstatus/><internalId>896</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>IdsM.EB.PBCFGM101</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Service name: IdsM_IsValidConfig
        Syntax: Std_ReturnType IdsM_IsValidConfig( void* ConfigPtr )
        Sync/Async: Synchronous
        Reentrancy: Reentrant
        Parameters (in): ConfigPtr, post build configuration manager
        configuration.
        Parameters (inout): None
        Parameters (out): None
        Return value: Returns E_OK if the IdsM configuration is valid otherwise E_NOT_OK. A
        null pointer is interpreted as invalid configuration.
        Description: This function determines if the IdsM configuration is valid. This
        function can be called also before the IdsM is initialized. No error reporting
        is necessary within this function.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_IsValidConfig</srcid><srcstatus/><internalId>764</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>

    <specobject>
      <id>IdsM.EB.PBCFGM102</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A configuration is valid
        - if the platform signature in the post build configuration equals the value
          determined by the macro TS_PlatformSigIsValid.
        - if the link time signature in the post build configuration equals the link time
          signature in the link time configuration file.
        - if the compile time signature in the post build configuration equals the value of
          the macro IDSM_CFG_SIGNATURE.
        - if the compile time signature of Published information in the post build configuration
          equals the value of the macro IDSM_PUBLIC_INFO_SIGNATURE.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_IsValidConfig</srcid><srcstatus/><internalId>764</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>

    <specobject>
      <id>IdsM.EB.PBCFGM104</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the compile time
        configuration:
        - the post build configuration structure shall contain the uint32 value
          CfgSignature.
        - the IdsM_Cfg.h file shall contain the macro
          IDSM_CFG_SIGNATURE.
        - the MCG shall generate this signature value of compile time parameters. The x-path
          function asc:getConfigSignature(nodeset) shall be used to determine the signature out
          of a list of parameters. The list of compile time parameters shall determined with the
          function asc:getConfigClassNodeList(cassString).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_IsValidConfig</srcid><srcstatus/><internalId>764</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>

    <specobject>
      <id>IdsM.EB.PBCFGM104_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the compile time
        configuration:
        - the post build configuration structure shall contain the uint32 value
          PublicInfoSignature.
        - the IdsM_Cfg.h file shall contain the macro
          IDSM_PUBLIC_INFO_SIGNATURE.
        - The MCG shall generate this signature value from the list of parameters of
          configuration class 'PublishedInformation' except 'Release'. The XPath function
          asc:getConfigSignature(nodeset) shall be used to determine the signature out of the
          list of parameters. The list of parameters shall be determined with the function
          asc:getConfigClassNodeList(cassString).
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_IsValidConfig</srcid><srcstatus/><internalId>764</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>

    <specobject>
      <id>IdsM.EB.PBCFGM105</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For generalized consistency of the post build configuration versus the link time
        configuration:
        - the post build configuration structure shall contain the uint32 value
          LcfgSignature.
        - the link time configuration shall contain the uint32 value
          IdsM_LcfgSignature.
        - the MCG shall generate this signature value of link time parameters. The x-path
          function asc:getConfigSignature(nodeset) shall be used to determine the signature out
          of a list of parameters. The list of link time parameters shall determined with the
          function asc:getConfigClassNodeList(cassString).
      </description>
      <comment>
        See also:
        https://infohub.automotive.elektrobit.com/display/PRJEBTRESOS/PostBuild#PostBuild-Consistencypostbuildconfig
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_IsValidConfig</srcid><srcstatus/><internalId>764</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>

    <specobject>
      <id>IdsM.EB.PBCFGM106</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For Platform verification:
        - the IdsM post build configuration structure shall contain the value
          uint32 PlatformSignature. This uint32 must be the first value of the post build
          configuration structure to guarantee the correct access not disturbed by any padding
          bytes.
        - the MCG shall generate this signature for the selected target. The generator shall
          use the x-path function asc:getPlatformSignature() to determine this value.
      </description>
      <comment>
        See also:
        https://infohub.automotive.elektrobit.com/display/PRJEBTRESOS/PostBuild#PostBuild-Consistencypostbuildconfig
        https://issue.ebgroup.elektrobit.com/browse/ASCBASE-1485
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_IsValidConfig</srcid><srcstatus/><internalId>764</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>

    <specobject>
      <id>IdsM.EB.PBCFGM107</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The PbcfgM support shall be enabled or disabled via the macro
        IDSM_PBCFGM_SUPPORT_ENABLED defined in the file
        IdsM_Cfg.h.
        If the PbcfgM configuration references the IdsM configuration
        the macro is set to STD_ON otherwise, or if no PbcfgM configuration is
        available it is set to STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_IsValidConfig</srcid><srcstatus/><internalId>764</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_PBcfgM_Off</srcid><srcstatus/><internalId>766</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>

    <specobject>
      <id>IdsM.EB.PBCFGM108</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the IdsM is referenced by the PbcfgM, the parameter regarding the
        relocatable feature, shall not be editable and the MCG shall use the configuration of
        the PbcfgM.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_PBcfgM_Off</srcid><srcstatus/><internalId>766</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_PBcfgM_On</srcid><srcstatus/><internalId>767</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/IdsM_EBParameters.xdm.m4_681</srcid><srcstatus/><internalId>713</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>

    <specobject>
      <id>IdsM.EB.PBCFGM110</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The IdsM_Init() function must be extended to enable the PbcgfM
        features.
        The initialization function shall obtain the IdsM configuration
        from the PbcfgM if the PbcfgM support is enabled within this IdsM
        and the initialization function is called with a null pointer.
        The validity of the configuration shall be checked by the function
        IdsM_IsValidConfig(). The validity shall be check regardless the PbcfgM
        support is enabled or not.
        If no valid configuration can be obtained the initialization function shall
        return, leaving the IdsM uninitialized.
        In the case error reporting is enabled and no valid configuration can be obtained
        an erroneous parameter shall be indicated.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_VerifyInitWithPcfgM</srcid><srcstatus/><internalId>765</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>

    <specobject>
      <id>IdsM.EB.PostBuild_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The IdsM module shall compile and build an executable even in the absence
        of a post build configuration, i.e. without any post build generated .c and .h files
        available.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_ComTest_NoPBCfg</srcid><srcstatus/><internalId>770</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>

    <specobject>
      <id>IdsM.EB.PbcfgM_General_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The IdsM shall provide the following macros in the header file
        IdsM_Cfg.h:
        - IDSM_RELOCATABLE_CFG_ENABLE which is set to STD_ON
          if relocatable config shall be enabled, otherwise it's set to STD_OFF.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_PBcfgM_On</srcid><srcstatus/><internalId>767</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>

    <specobject>
      <id>IdsM.EB.PbcfgM_General_6</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If PbcfgM support is enabled IdsM shall define the following macros in
        IdsM_PBCfg.c:
        - TS_PB_CFG_LAYOUT_TYPE: Shall expand to the type definition of the Postbuild
          configuration layout type (e.g. IdsM_ConstConfigLayoutType)
        - TS_PB_CFG_NAME: Shall expand to the name of the structure defining the Postbuild
          configuration layout (e.g. IdsM_ConfigLayout)
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>IdsM_Test_PBcfgM_Off</srcid><srcstatus/><internalId>766</internalId></linkedfrom><linkedfrom><srcid>IdsM_Test_PBcfgM_On</srcid><srcstatus/><internalId>767</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>IdsM.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_IdsM_VerifyCodeStub</srcid><srcstatus/><internalId>768</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>DEV_NVM_ROM_BLOCK_NOT_SUPPORTED</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <description>NvM Rom block is not used because ReportingMode is a postbuild parameter. Instead, IdsM restore the data by itself from postbuild configuration when NvM_ReadAll fails.</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01707</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>
  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>DEV_MAX_CONTEXT_DATA_LENGTH</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>19</sourceline>
      <version>1</version>
      <description>Maximum supported context data length is limited by the fact that the whole protocol packet should fit inside a single underlying protocol frame, as TP transmission is not supported. The actual supported length for IF transmission depends on the lower layer propagating IdsR maximum possible PDU length.</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00501</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>
  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>DEV_GLOBAL_EVENTID_UNIQINESS_NOT_CHECKED</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;External event IDs are not checked to be globally unique&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00603</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>
  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>DEV_UNCLEAR_TIMESTAMP_HANDLING</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Several issues were identified with timestamp-reporting APIs that are not actually providing
timestamps. So this functionality is postponed. For more details, check
https://jira.autosar.org/browse/AR-103882. In the current implementation, the sole logic for
setting the propagated timestamp source bit is according to the IdsMTimestampOption parameter value.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>
  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>DEV_UNNECESSARY_FILTER_CHAIN_RESTRICTION</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>88</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;The constraint of not allowing an empty filter chain is unnecessary from module development point
of view. IdsM would still work and behave normally for an existing filter chain without any included filters.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_CONSTR_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/IdsM_Cbk.h_9</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/include/IdsM_Cbk.h</sourcefile>
      <sourceline>9</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/IdsM_Filters_Types.h_15</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/include/IdsM_Filters_Types.h</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/IdsM_Int.h_15</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/include/IdsM_Int.h</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/IdsM_Int.h_29</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/include/IdsM_Int.h</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/IdsM_Int.h_31</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/include/IdsM_Int.h</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/IdsM_Int.h_46</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/include/IdsM_Int.h</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/IdsM_Int.h_55</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/include/IdsM_Int.h</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Server.Acess.OfBSW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/IdsM_Int.h_239</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/include/IdsM_Int.h</sourcefile>
      <sourceline>239</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00604</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/IdsM_Int.h_252</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/include/IdsM_Int.h</sourcefile>
      <sourceline>252</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/IdsM_ProtocolAccess.h_296</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/include/IdsM_ProtocolAccess.h</sourcefile>
      <sourceline>296</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/IdsM_ProtocolAccess.h_297</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/include/IdsM_ProtocolAccess.h</sourcefile>
      <sourceline>297</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/IdsM_ProtocolAccess.h_417</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/include/IdsM_ProtocolAccess.h</sourcefile>
      <sourceline>417</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/IdsM_ProtocolAccess.h_429</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/include/IdsM_ProtocolAccess.h</sourcefile>
      <sourceline>429</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/IdsM_Types.h_71</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/include/IdsM_Types.h</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/IdsM_Types.h_76</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/include/IdsM_Types.h</sourcefile>
      <sourceline>76</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/IdsM_Types.h_81</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/include/IdsM_Types.h</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/IdsM.c_196</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM.c</sourcefile>
      <sourceline>196</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM.c_232</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM.c</sourcefile>
      <sourceline>232</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.InvalidPartitionContext</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM.c_247</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM.c</sourcefile>
      <sourceline>247</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM.c_253</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM.c</sourcefile>
      <sourceline>253</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM.c_349</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM.c</sourcefile>
      <sourceline>349</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM.c_360</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM.c</sourcefile>
      <sourceline>360</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM.c_390</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM.c</sourcefile>
      <sourceline>390</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM.c_391</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM.c</sourcefile>
      <sourceline>391</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM.c_404</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM.c</sourcefile>
      <sourceline>404</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.InvalidPartitionContext</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM.c_405</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM.c</sourcefile>
      <sourceline>405</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions.BswMStateChanged</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM.c_427</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM.c</sourcefile>
      <sourceline>427</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MasterPartition.BlockStateSync.QueueLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM.c_458</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM.c</sourcefile>
      <sourceline>458</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM.c_492</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM.c</sourcefile>
      <sourceline>492</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.InternalEvent.Unique</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/IdsM_BootConnect.c_157</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_BootConnect.c</sourcefile>
      <sourceline>157</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_BootConnect.c_179</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_BootConnect.c</sourcefile>
      <sourceline>179</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.BootNvMBlockValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_BootConnect.c_232</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_BootConnect.c</sourcefile>
      <sourceline>232</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_BootConnect.c_241</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_BootConnect.c</sourcefile>
      <sourceline>241</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.BootNvMBlockValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_BootConnect.c_249</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_BootConnect.c</sourcefile>
      <sourceline>249</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnectApplicationContext</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_BootConnect.c_263</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_BootConnect.c</sourcefile>
      <sourceline>263</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnectSharedEvents</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_BootConnect.c_299</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_BootConnect.c</sourcefile>
      <sourceline>299</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnectTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_378</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>378</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_398</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>398</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_405</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>405</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_420</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>420</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00502</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_428</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>428</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00301</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_435</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>435</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_456</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>456</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_463</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>463</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_479</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>479</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00502</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_487</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>487</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_494</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>494</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_518</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>518</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00403</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_525</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>525</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_551</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>551</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_557</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>557</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_569</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>569</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.InvalidPartitionContext</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_580</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>580</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_595</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>595</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnectFirstMainFunction</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_596</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>596</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnectMasterEcu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_620</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>620</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SatellitePartitions.SchM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_628</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>628</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MasterPartition.RelaySatellitePropagation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_633</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>633</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MasterPartition.Propagation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_661</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>661</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01703</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_662</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>662</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01704</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_663</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>663</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01705</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_713</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>713</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01905</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_772</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>772</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01700</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_773</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>773</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01701</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_790</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>790</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01702</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_831</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>831</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01904</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_893</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>893</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_894</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>894</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01900</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_895</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>895</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01901</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_934</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>934</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01902</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_935</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>935</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01903</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_962</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>962</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_963</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>963</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_964</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>964</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1033</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1033</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1034</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1034</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1035</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1035</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1113</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1113</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1114</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1114</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1124</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1125</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1125</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1202</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1202</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Aggregate.Internal.SEV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1279</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1279</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1280</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1280</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1281</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1281</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1296</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1296</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.CustomFormatHook</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1359</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1359</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1360</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1360</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1361</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1361</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1367</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1367</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1375</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1375</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Forwarding.QSEV.ToServer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1376</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1376</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.ReportingSEV.onSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1385</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1385</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Forwarding.QSEV.ToServer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1386</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1386</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.ReportingSEV.withCD.onSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1408</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1408</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1415</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1415</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1416</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1416</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1417</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1417</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1418</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1418</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1434</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1434</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00905</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1471</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1471</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1474</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1474</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1499</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1499</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1505</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1505</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00804</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1519</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1519</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1525</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1525</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1528</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1528</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1533</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1533</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1536</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1536</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00906</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1537</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1537</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1544</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1544</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1548</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1548</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00906</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1549</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1549</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1566</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1566</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1567</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1567</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1575</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1575</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1578</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1578</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00905</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1592</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1592</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00904</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1595</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1595</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1598</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1598</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00902</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1599</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1599</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1600</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1600</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1610</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1610</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1611</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1611</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1620</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1620</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1621</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1621</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1622</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1622</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1623</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1623</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1630</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1630</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1631</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1631</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1634</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1634</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00905</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1644</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1644</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1651</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1651</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1675</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1675</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00901</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1682</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1682</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Qualification.OnSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1683</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1683</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00804</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1742</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1742</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00751</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1772</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1772</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1773</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1773</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.TimeStamp.ExternalDevice.Events</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1781</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1781</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1807</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1807</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00705</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1808</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1808</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00706</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1809</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1809</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00709</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1840</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1840</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00702</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1844</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1844</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00707</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1864</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1864</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00703</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1913</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1913</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00750</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1938</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1938</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1939</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1939</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1940</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1940</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1943</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1943</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00708</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1946</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1946</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1972</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1972</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1980</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1980</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1981</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1981</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1982</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1982</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1983</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1983</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1984</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1984</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1985</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1985</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_1996</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>1996</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_2002</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>2002</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.IdsRSink</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_2003</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>2003</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.Stop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_2090</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>2090</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.InvalidPartitionContext</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Proxy.c_2096</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Proxy.c</sourcefile>
      <sourceline>2096</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SatellitePartitions.ReportingOnly</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_33</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_235</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>235</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.BswMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_248</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>248</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.MultiPartitions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_256</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>256</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_265</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>265</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.Restart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_266</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>266</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.RestartWithoutNotify</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_282</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>282</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.NotifyStopped</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_303</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>303</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.WrongParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_313</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>313</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_329</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>329</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.InvalidPartitionContext</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_354</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>354</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_384</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>384</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_385</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>385</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01502</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_401</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>401</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.InvalidPartitionContext</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_409</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>409</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_444</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>444</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_445</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>445</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01501</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_465</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>465</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.InvalidPartitionContext</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_473</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>473</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_590</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>590</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_602</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>602</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01601</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_715</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>715</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.ECU.only.Server</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_730</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>730</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_731</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>731</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01080</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_732</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>732</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_733</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>733</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_743</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>743</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_744</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>744</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_761</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>761</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_811</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>811</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01499</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_827</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>827</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_840</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>840</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_841</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>841</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_842</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>842</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Server.Acess.OfBSW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_848</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>848</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_854</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>854</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01499</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_870</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>870</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_889</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>889</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Dem.Callback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_901</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>901</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.InvalidPartitionContext</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_935</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>935</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Dem.Callback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_948</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>948</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.InvalidPartitionContext</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_979</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>979</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01602</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_994</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>994</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01600</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_1033</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>1033</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.InvalidPartitionContext</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_1088</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>1088</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_1093</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>1093</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_1100</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>1100</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_1288</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>1288</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Mac</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_1366</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>1366</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.MultiPartitions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_1383</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>1383</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.NotifyStopped</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_1405</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>1405</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.Initialization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_1406</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>1406</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.Start</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_1421</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>1421</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_1422</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>1422</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnectMasterEcu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/IdsM_Server.c_1538</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/src/IdsM_Server.c</sourcefile>
      <sourceline>1538</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/include/IdsMCfgH.java_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/include/IdsMCfgH.java</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/include/IdsMCfgH.java_43</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/include/IdsMCfgH.java</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/include/IdsMCfgH.java_48</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/include/IdsMCfgH.java</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/include/IdsMCfgH.java_74</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/include/IdsMCfgH.java</sourcefile>
      <sourceline>74</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Switch.Support</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/include/IdsMCfgH.java_143</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/include/IdsMCfgH.java</sourcefile>
      <sourceline>143</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMCfgC.java_40</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMCfgC.java</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00752</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMCfgC.java_53</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMCfgC.java</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions.OsHooks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMLcfgC.java_42</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMLcfgC.java</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions.Isolation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMLcfgC.java_97</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMLcfgC.java</sourcefile>
      <sourceline>97</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SatellitePartitions.ReportingOnly</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMLcfgC.java_108</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMLcfgC.java</sourcefile>
      <sourceline>108</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MasterPartition.BlockStateSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMLcfgC.java_112</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/generated/templates/src/IdsMLcfgC.java</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/model/IdsMModel.java_65</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/model/IdsMModel.java</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01800</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/model/IdsMModel.java_66</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/model/IdsMModel.java</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01900</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/model/IdsMModel.java_401</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/Java/dreisoft/tresos/idsm/model/IdsMModel.java</sourcefile>
      <sourceline>401</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.Dem.Callback.Unique</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/jet_templates/include/IdsM_Cfg.h.jet_27</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/jet_templates/include/IdsM_Cfg.h.jet</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/jet_templates/include/IdsM_Cfg.h.jet_60</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/jet_templates/include/IdsM_Cfg.h.jet</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/jet_templates/include/IdsM_Cfg.h.jet_68</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/jet_templates/include/IdsM_Cfg.h.jet</sourcefile>
      <sourceline>68</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/jet_templates/include/IdsM_Cfg.h.jet_112</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/jet_templates/include/IdsM_Cfg.h.jet</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Switch.Support</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/jet_templates/include/IdsM_Cfg.h.jet_245</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/jet_templates/include/IdsM_Cfg.h.jet</sourcefile>
      <sourceline>245</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Cfg.c.jet_73</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Cfg.c.jet</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00752</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Cfg.c.jet_74</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Cfg.c.jet</sourcefile>
      <sourceline>74</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_91033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Cfg.c.jet_144</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Cfg.c.jet</sourcefile>
      <sourceline>144</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions.OsHooks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Lcfg.c.jet_111</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Lcfg.c.jet</sourcefile>
      <sourceline>111</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions.Isolation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Lcfg.c.jet_212</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Lcfg.c.jet</sourcefile>
      <sourceline>212</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SatellitePartitions.ReportingOnly</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Lcfg.c.jet_239</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Lcfg.c.jet</sourcefile>
      <sourceline>239</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MasterPartition.BlockStateSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>
    <specobject>
      <id>src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Lcfg.c.jet_247</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/plugin.IdsMExt.Autosar/jet_templates/src/IdsM_Lcfg.c.jet</sourcefile>
      <sourceline>247</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_22</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_75</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>75</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_89</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>89</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_112</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>112</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>622</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_139</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>139</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>623</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_153</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>153</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_154</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00704</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_175</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>175</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_204</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>204</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>627</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_235</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>235</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_248</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>248</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_277</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>277</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.ECUC_IdsM_00064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_298</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>298</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.ECUC_IdsM_00072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_327</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>327</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.ECUC_IdsM_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_355</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>355</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.ECUC_IdsM_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_388</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>388</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.ECUC_IdsM_00065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_410</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>410</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.ECUC_IdsM_00067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_432</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>432</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.ECUC_IdsM_00066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_461</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>461</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_476</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>476</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.PreCompile.Events</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>638</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_483</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>483</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_517</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>517</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_518</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>518</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00601</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_532</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>532</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.PreCompile.Events</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_548</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>548</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_586</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>586</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_615</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>615</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_616</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>616</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>646</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_643</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>643</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Config.DemEventParameterRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_661</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>661</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_668</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>668</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.DemEventParameterRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_671</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>671</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Dem.Event.Unique</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_685</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>685</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>651</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_686</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>686</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_713</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>713</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_738</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>738</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.ECUC_IdsM_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_757</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>757</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.ECUC_IdsM_00063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_780</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>780</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_800</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>800</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>657</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_833</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>833</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_869</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>869</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_887</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>887</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_906</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>906</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_939</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>939</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_961</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>961</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_991</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>991</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1018</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1018</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1040</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1040</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1066</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1066</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1094</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1094</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1115</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1115</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1143</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1143</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1166</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1166</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1187</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1187</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1214</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1214</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1237</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1237</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1258</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1258</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1285</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1285</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1312</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1312</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1325</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1325</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1348</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1348</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1374</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1374</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1400</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1400</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1423</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1423</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1424</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1424</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1455</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1455</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01706</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1458</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1458</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01705</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1465</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1465</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1492</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1492</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1575</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1575</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1605</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1605</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1637</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1637</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.Custom.Timestamp.And.RteUsage.Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1644</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1644</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1645</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1645</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.StbM.Reference</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1679</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1679</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1703</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1703</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1727</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1727</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1749</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1749</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1776</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1776</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1805</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1805</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1826</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1826</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM.xdm.m4_1853</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM.xdm.m4</sourcefile>
      <sourceline>1853</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_21</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>21</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_24</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_26</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.PreCompile.Select.Target</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_200</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>200</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_275</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>275</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.BootNvMBlockValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_276</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>276</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.BootNvMBlockName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_356</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>356</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MasterPartition.SingleInstance</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_397</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>397</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.TrustedFunctionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_420</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>420</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.TrustedFunctionEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_629</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>629</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Config.IdsMRteUsage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>710</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_651</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>651</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.No.Rte.Found</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>711</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_659</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>659</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.EB.RelocatablePBCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>712</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_681</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>681</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>713</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_690</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>690</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnectMaxRecords</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>714</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_728</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>728</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.IfBulkTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>715</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_925</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>925</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SatellitePartitions.Unlimited</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>716</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_981</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>981</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.TrustedFunctionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>717</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_1006</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>1006</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.TrustedFunctionEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>718</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_1060</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>1060</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.MaxRpPerCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>719</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_1067</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>1067</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.NoRpWithMaster</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>720</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/IdsM_EBParameters.xdm.m4_1074</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/config/IdsM_EBParameters.xdm.m4</sourcefile>
      <sourceline>1074</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.RoWithRpOrMaster</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>721</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_180</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>180</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.Context.Buffers.Count</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>722</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_582</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>582</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00606</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>723</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_583</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>583</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00608</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>724</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_584</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>584</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.Consecutive.Internal.IDs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>725</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_666</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>666</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>726</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_696</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>696</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>727</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_697</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>697</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>728</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_846</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>846</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00801</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>729</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_847</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>847</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>730</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_971</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>971</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>731</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_1035</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>1035</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>732</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_1184</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>1184</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.RAM.Size</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>733</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_1231</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>1231</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>734</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_1245</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>1245</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>735</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_1305</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>1305</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.MaxIDSMessageLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>736</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_1329</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>1329</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.TpPdu.Reference</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>737</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_1352</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>1352</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.IfPdu.Reference</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>738</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_1359</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>1359</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>739</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_macros/IdsM_Pbcfg.m_1418</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_macros/IdsM_Pbcfg.m</sourcefile>
      <sourceline>1418</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>740</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/IdsM_Bswmd.arxml.m4_61</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_swcd/swcd/IdsM_Bswmd.arxml.m4</sourcefile>
      <sourceline>61</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>741</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/IdsM_Bswmd.arxml.m4_76</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_swcd/swcd/IdsM_Bswmd.arxml.m4</sourcefile>
      <sourceline>76</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>742</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/IdsM_Bswmd.arxml.m4_201</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_swcd/swcd/IdsM_Bswmd.arxml.m4</sourcefile>
      <sourceline>201</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BSWMD.Generate.EA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>743</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/IdsM_Bswmd.arxml.m4_218</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_swcd/swcd/IdsM_Bswmd.arxml.m4</sourcefile>
      <sourceline>218</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BSWMD.Generate.MainFunction</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>744</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/IdsM_EventHlp.m_30</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_swcd/swcd/IdsM_EventHlp.m</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01301</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>745</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/IdsM_EventHlp.m_55</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_swcd/swcd/IdsM_EventHlp.m</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01302</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>746</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/IdsM_EventHlp.m_66</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_swcd/swcd/IdsM_EventHlp.m</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>747</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/IdsM_swc_interface.arxml.m4_26</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_swcd/swcd/IdsM_swc_interface.arxml.m4</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>748</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/IdsM_swc_interface.arxml.m4_65</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_swcd/swcd/IdsM_swc_interface.arxml.m4</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>749</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/IdsM_swc_interface.arxml.m4_105</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_swcd/swcd/IdsM_swc_interface.arxml.m4</sourcefile>
      <sourceline>105</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>750</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/IdsM_swc_internal.arxml.m4_32</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_swcd/swcd/IdsM_swc_internal.arxml.m4</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>751</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/IdsM_swc_internal.arxml.m4_41</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_swcd/swcd/IdsM_swc_internal.arxml.m4</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>752</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/IdsM_swc_internal.arxml.m4_59</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_swcd/swcd/IdsM_swc_internal.arxml.m4</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>753</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_var/xgen/IdsM.xgen_76</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_var/xgen/IdsM.xgen</sourcefile>
      <sourceline>76</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00903</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>754</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/IdsM.xgen_120</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_var/xgen/IdsM.xgen</sourcefile>
      <sourceline>120</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00600</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>755</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/IdsM.xgen_121</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_var/xgen/IdsM.xgen</sourcefile>
      <sourceline>121</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00605</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>756</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/IdsM.xgen_154</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_var/xgen/IdsM.xgen</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions.SharedConfiguration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>757</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/IdsM.xgen_190</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_var/xgen/IdsM.xgen</sourcefile>
      <sourceline>190</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00701</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>758</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/IdsM.xgen_191</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_var/xgen/IdsM.xgen</sourcefile>
      <sourceline>191</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>759</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/IdsM.xgen_192</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_var/xgen/IdsM.xgen</sourcefile>
      <sourceline>192</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>760</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/IdsM.xgen_193</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_var/xgen/IdsM.xgen</sourcefile>
      <sourceline>193</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>761</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/IdsM.xgen_194</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_var/xgen/IdsM.xgen</sourcefile>
      <sourceline>194</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions.SharedConfiguration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>762</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/IdsM.xgen_240</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/src/Autosar/generate_var/xgen/IdsM.xgen</sourcefile>
      <sourceline>240</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.PostBuild.Variant</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>763</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_IsValidConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/common_req/IdsM_PbcfgM_Main_Impl_Test.c</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the function IdsM_IsValidConfig() is implemented as specified.
  
Test Object: 
    IdsM_IsValidConfig()
  
Test Precondition: 
    The IdsM module is not initialized.
  
Test Execution: 
    01: Call the function IdsM_IsValidConfig() with an NULL_PTR.
    02: VP:
        The function must have returned with E_NOT_OK.
    03: Create an invalid configuration regarding the endianness and alignment.
    04: Call the function IdsM_IsValidConfig() with this invalid configuration.
    05: VP(IdsM.EB.PBCFGM106):
        The function must have returned with E_NOT_OK.
    The following 3 steps are only executed if the module has a link-time configuration:
        06: Create an invalid configuration regarding the link time configuration.
        07: Call the function IdsM_IsValidConfig() with this invalid configuration.
        08: VP(IdsM.EB.PBCFGM105):
                The function must have returned with E_NOT_OK.
    09: Create an invalid configuration regarding the compile time configuration.
    10: Call the function IdsM_IsValidConfig() with this invalid configuration.
    11: VP(IdsM.EB.PBCFGM104):
        The function must have returned with E_NOT_OK.
    12: Create an invalid configuration regarding the published information configuration.
    13: Call the function IdsM_IsValidConfig() with this invalid configuration.
    14: VP(IdsM.EB.PBCFGM104_1):
        The function must have returned with E_NOT_OK.
    15: Call the function IdsM_IsValidConfig() with a valid configuration.
    16: VP:
        The function must have returned with E_OK.
    17: VP(IdsM.EB.PBCFGM107):
        Check if IDSM_PBCFGM_SUPPORT_ENABLED is set to STD_ON.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.EB.PBCFGM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>IdsM.EB.PBCFGM102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
        <provcov>
          <linksto>IdsM.EB.PBCFGM104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
        <provcov>
          <linksto>IdsM.EB.PBCFGM104_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
        <provcov>
          <linksto>IdsM.EB.PBCFGM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
        <provcov>
          <linksto>IdsM.EB.PBCFGM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
        <provcov>
          <linksto>IdsM.EB.PBCFGM107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>764</internalId></specobject>
    <specobject>
      <id>IdsM_Test_VerifyInitWithPcfgM</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/common_req/IdsM_PbcfgM_Main_Impl_Test.c</sourcefile>
      <sourceline>225</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    Verify that the IdsM can be initialized via the PbcfgM.
  
Test Object: 
    IdsM_IsValidConfig()
  
Test Precondition: 
    The IdsM module must not have been initialized.
  
Test Execution: 
    01: Create an invalid configuration regarding the endianness and alignment.
    02: Call the function IdsM_Init() with this invalid configuration.
    03: VP:
        A Det call must have been performed correctly.
    04: Create an invalid configuration regarding the compile time configuration.
    05: Call the function IdsM_Init() with this invalid configuration.
    06: VP:
        A Det call must have been performed correctly.
    The following 3 steps are only executed if the module has a link-time configuration:
        07: Create an invalid configuration regarding the link time configuration.
        08: Call the function IdsM_Init() with this invalid configuration.
        09: VP:
            A Det call must have been performed correctly.
    10: Create an invalid configuration regarding the published information configuration.
    11: Call the function IdsM_Init() with this invalid configuration.
    12: VP:
        A Det call must have been performed correctly.
    13: Initialize the PbcfgM_GetConfig() stub that way that it can return a valid function.
    14: Call the function IdsM_Init() with a null pointer.
    15: VP:
        The function PbcfgM_GetConfig() must have been called once.
    16: VP:
        No Det call must have been performed.
    17: VP:
        The module internal configuration pointer IdsM_RootPtr must equal
        the pointer supplied to the initialization function
    18: PbcfgM_GetConfig shall return E_NOT_OK.
        set the configuration pointer which is returned to NULL_PTR
    19: Call IdsM_Init with NULL_PTR.
    20: VP(IdsM.EB.PBCFGM110):
        Check if Det error is reported.
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.EB.PBCFGM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>765</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_PBcfgM_Off</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/common_req/IdsM_PbcfgM_Off_Compile_Test.c</sourcefile>
      <sourceline>26</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      Verify that if PbcfgM support is disabled then IdsM_PBCfg.c shall define
      TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME.
      IDSM_PBCFGM_SUPPORT_ENABLED shall be set to STD_OFF.
      IDSM_RELOCATABLE_CFG_ENABLE shall be set to STD_OFF.
    
Test Object: None.
Test Precondition: 
      - PbcfgM configuration does not refer to module IdsM (or no config exists)
      - Include IdsM_PBcfg.c only for step 01 and 02.
      - Include IdsM_Cfg.h for step 03.
    
Test Execution: 
        01: VP(IdsM.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME exists.
        02: VP(IdsM.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME has the value
            IdsM_ConfigLayoutType and IDSM_CONFIG_NAME respectively.
        03: VP (IdsM.EB.PBCFGM107):
            Verify that IDSM_PBCFGM_SUPPORT_ENABLED is set to STD_OFF.
        04: VP(IdsM.EB.PBCFGM108, IdsM.EB.RelocatablePBCfg):
            IDSM_RELOCATABLE_CFG_ENABLE shall be STD_OFF
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.EB.PbcfgM_General_6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>IdsM.EB.PBCFGM107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
        <provcov>
          <linksto>IdsM.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
        <provcov>
          <linksto>IdsM.EB.RelocatablePBCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>766</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_PBcfgM_On</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/common_req/IdsM_PbcfgM_On_Compile_Test.c</sourcefile>
      <sourceline>24</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      1.)
      Verify that IDSM_RELOCATABLE_CFG_ENABLE is defined
      in the header file IdsM_Cfg.h.
      2.)
      Verify that if PbcfgM support is enabled then IdsM_PBCfg.c shall NOT define
      TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME.
    
Test Object: None.
Test Precondition: 
        - IDSM_PBCFGM_SUPPORT_ENABLED = STD_ON
    
Test Execution: 
        ------------------------ 1.) ---------------------
        01: VP (IdsM.EB.PbcfgM_General_3,
                IdsM.EB.PBCFGM108,
                IdsM.EB.RelocatablePBCfg):
            Verify that IDSM_RELOCATABLE_CFG_ENABLE is set to STD_ON.
        ------------------------ 2.) ---------------------
        02: Include IdsM_PBcfg.c.
        03: VP(IdsM.EB.PbcfgM_General_6):
            Check that symbols TS_PB_CFG_LAYOUT_TYPE and TS_PB_CFG_NAME exist.
    
Test Input: 
        None.
    
Test Output: 
        Binary file.
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.EB.PbcfgM_General_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>IdsM.EB.PbcfgM_General_6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>IdsM.EB.PBCFGM108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
        <provcov>
          <linksto>IdsM.EB.RelocatablePBCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>767</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_IdsM_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/build/reqm/common_req/IdsM_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(IdsM.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>768</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_ComTest_01_Minimal</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Compile/IN/IdsM_ComTest_01_Minimal/source/application/appl.c</sourcefile>
      <sourceline>4</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test shall prove that IdsM compiles with minimal setup.
  Source should not include Det, PduR, or StbM
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  VP: Successful compilation of IdsM using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>769</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_ComTest_NoPBCfg</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Compile/IN/IdsM_ComTest_02_NoPBCfg/source/application/IdsM_ComTest_NoPBCfg.c</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test shall prove that that the IdsM also compiles without any post build information
    
Test Object: None.
Test Precondition: 
        * Set TS_IDSM_COMPILE_WITH_POSTBUILD to FALSE in the merged make file to prevent the compilation
          of the post build C file.
        * The merged make file holds a rule which removes all post build files after generation
    
Test Execution: 
        The test run is successful when the IdsM compiles under sticking to the precondition.
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.EB.PostBuild_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>770</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TST_IDSM_COMPILE_5_ECU</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Compile/IN/IdsM_ComTest_05_Ecu/source/application/IdsM_ComTest_Config.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test shall prove that IdsM compiles with complete ECU setup.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  VP: Successful compilation of IdsM using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>771</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TST_IDSM_COMPILE_6_EXTERNALDEVICE</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Compile/IN/IdsM_ComTest_06_ExternalDevice/source/application/IdsM_ComTest_Config.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test shall prove that IdsM compiles with complete External Device setup.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  VP: Successful compilation of IdsM using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Switch.Support</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>772</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TST_IDSM_COMPILE_7_SCHM</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Compile/IN/IdsM_ComTest_07_SchM/source/application/IdsM_ComTest_Config.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
   This test checks that the IdsM module's generator generates a
   syntactically and semantically valid basic software module
   description (BSWMD) when the generator mode "generate_swcd" is
   invoked. It further tests that the SchM exclusive area API is
   correctly generated by the RTE generator based on the IdsM module's
   generated BSWMD.

Test Object: None.
Test Precondition: 

Test Execution: 
  Ts5 build environment steps:
    The module configuration generator produces the BSWMD containing
    the information on the required exclusive areas.  This information
    is then used by the RTE generator to create the required SchM API
    for these exclusive areas. This implicitly verifies that the BSWMD
    is syntactically and semantically correct.  IdsM's static code
    makes use of this API (and the respective #defines) thus causing
    compile/link errors if the BSWMD does not contain the correct
    information.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BSWMD.Generate.EA</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.BSWMD.Generate.MainFunction</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>773</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_ComTest_08_Partition</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Compile/IN/IdsM_ComTest_08_Partitions/source/application/IdsM_ComTest_Config.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test shall prove that IdsM compiles with partition setup.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  VP: Successful compilation of IdsM using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>774</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TST_IDSM_COMPILE_9_CSM</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Compile/IN/IdsM_ComTest_09_Csm/source/application/IdsM_ComTest_Config.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test shall prove that IdsM compiles when Signature or Mac are enabled.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  VP: Successful compilation of IdsM using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Mac</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>775</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_ComTest_10_BootConnect</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Compile/IN/IdsM_ComTest_10_BootConnect/source/application/IdsM_ComTest_Config.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test shall prove that IdsM compiles in Bootloader project.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  VP: Successful compilation of IdsM using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>776</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_ComTest_11_ApplConnect</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Compile/IN/IdsM_ComTest_11_ApplConnect/source/application/IdsM_ComTest_Config.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test shall prove that IdsM compiles in Bootloader project.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  VP: Successful compilation of IdsM using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>777</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_EventBuffering01</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_01_EventBuffering/source/application/IdsM_Test.c</sourcefile>
      <sourceline>30</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test verifies buffering behavior of IdsM, it verifies storing an event without context
      data when an event buffer is available, storing an event with context data when a context
      data buffer is available, storing event only and dropping context data when event buffer is
      available but no suitable context data buffer, and dropping an event when no buffer is
      available
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
      01: Initialize tests stubs.
      02: Initialize IdsM.
      03: see steps detailed below
  
Test Input: 
  
Test Output: 
      Test passing in case of correct buffering behavior, failing otherwise
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00301</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00701</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00702</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00703</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00704</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00705</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00706</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00707</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00708</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00709</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00801</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00901</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Aggregate.Internal.SEV</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Switch.Support</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Qualification.OnSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Forwarding.QSEV.ToServer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.ReportingSEV.onSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.ReportingSEV.withCD.onSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.PreCompile.Select.Target</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>778</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_BlockState</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_02_Filtering/source/application/IdsM_Test.c</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      This test verifies the behavior of the IdsM Block State Filter:
      - First the block state filter must have some states to be blocked if and only if those states reported from
        IdsM_BswM_StateChanged() module is ON.
      - But in this test case we consider we pass the IdsM_BswM_StateChanged(State) as an argument for testing matters.
      - We second try to send some SEvs over main functions.
      - Then we check the right data to be sent, or blocked in case blocked states.
      - Note: IdsMConf_EV07_Detail_Block_1 is blocked in states 0 and 2
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace
        02: Initialize IdsM
        03: Send a security event with Count 4 and no Context Data
        04: Event is expected to be sent with No count and No context data
        05: First Main Function Call
        06: VP: Check for all added frames transmission, as IdsM_BswM_StateChanged isn't called and there should be no blocking states
        07: Toggle BswM_State to block state 0
        08: Send a security event with count 2 and no context data
        09: Second Main Function Call
        10: Toggle BswM_State to block state 2
        11: Send a security event with No Count nor Context data
        12: Third Main Function Call
        13: Toggle BswM_State to pass states 0 and 2
        14: Send a security event with No Count nor Context data
        15: Event is expected to be sent with No count nor context data
        16: Fourth Main Function Call
        17: Toggle BswM_State to block state 4, this state isn't passed to any filter, So it mustn't be blocked
        18: Send a security event with with count 8 and no Context data
        19: Event is expected to be sent with No count nor context data
        20: Fifth Main Function Call
        21: VP: Check for all added frames transmission
        22: Toggle BswM_State to pass state 4 and block state 7, those states aren't passed to any filter, So they mustn't be blocked
        23: Send a security event with count 4 and context data A with size 7
        24: Event is expected to be sent with count 4 and context data A with size 7
        25: Sixth Main Function Call
        26: VP: Check for all added frames transmission
        27: Toggle BswM_State to block states 0 and 2
        28: Send a security event with count 3 and context data B with size 9
        29: Seventh Main Function Call
        30: Sending a success message
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>779</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Sampling</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_02_Filtering/source/application/IdsM_Test.c</sourcefile>
      <sourceline>291</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      This test verifies the behavior of the IdsM Forward Every Nth filter, it takes
      an event with context data, tries to send it over several Main Function calls before
      it sends it finally when the Nth parameter matches the right function call, then it
      checks that the right data was sent successfully.
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace
        02: Initialize IdsM
        03: Setting 2 security events
        04: event is expected to be sent with count 1 and context data A as the first event for Sampling Filter
        05: First Main Function Call
        06: VP: check for all added frames transmission
        07: Setting 4 secruity events
        08: event is expected to be sent with count 2 and NO data as the 6th event for Sampling Filter
        09: Second Main Function Call
        10: VP: check for all added frames transmission
        11: Setting 2 security events
        12: Third Main Function Call
        13: VP: check for all added frames transmission, Nothing should be sent yet
        14: Setting 4 secruity events
        15: event is expected to be sent with count 2 and context data C as the 11th event for Sampling Filter
        16: Fourth Main Function Call
        17: VP: check for all added frames transmission
        18: Setting 4 security events
        19: event is expected to be sent with the same EXTeventID and different sensor instance ID
        20: Fourth Main Function Call
        21: VP: check for all added frames transmission
        22: Setting 2 security events
        23: event is expected to be sent with the same EXTeventID and different sensor instance ID
        24: Fourth Main Function Call
        25: VP: check for all added frames transmission
        26: even "EV05_OFF_Sample_5" event passes the sampling interval, it won't be sent since it has a reporting mode OFF
        27: Fourth Main Function Call
        28: VP: check nothing was sent
  
Test Input: 
  
Test Output: 
      Test passing if the sent data matches the context data given, failing otherwise
  </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00605</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01031</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Switch.Support</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Qualification.OnSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Forwarding.QSEV.ToServer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.ReportingSEV.onSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.ReportingSEV.withCD.onSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.PreCompile.Select.Target</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>780</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Aggregtion01</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_02_Filtering/source/application/IdsM_Test.c</sourcefile>
      <sourceline>574</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test verifies the behavior of the IdsM aggregation filter
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: AGGR01__Empty the stack trace
        02: AGGR01__Initialize IdsM
        03: AGGR01__Setting TWO Security Events
        05: AGGR01__First Main Function Call
        06: VP: AGGR01__check for all added frames transmission
        07: AGGR01__Setting TWO Security Events
        08: AGGR01__expect to SEND EV02_Detail_Aggr_4 with Context Data A and count 9
        09: AGGR01__Second Main Function Call
        10: VP: AGGR01__check for all added frames transmission
        11: AGGR01__Finalizing Test
        12: Calling 4 Main functions to fullfill Aggregation Interval
        13: VP: AGGR01__check no transmission occured
  
Test Input: 
  
Test Output: 
      Test passing if the sent data matches the context data given, failing otherwise
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00402</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00906</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01043</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Switch.Support</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Qualification.OnSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Forwarding.QSEV.ToServer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.ReportingSEV.onSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.ReportingSEV.withCD.onSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.PreCompile.Select.Target</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>781</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Threshold01</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_02_Filtering/source/application/IdsM_Test.c</sourcefile>
      <sourceline>760</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test verifies the behavior of the IdsM SEV with Thresholds Filter of 3 Events
      every 4 Main Functions, and the behavior of Breif and Breif_ByPass events with Context Data.
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
      01: Initialize tests stubs.
      02: Initialize IdsM.
      03: THRES01__Setting 1 ByPass Event
      04: THRES01__expect EVENT would be sent since the event is with a ByPass Filter
      05: THRES01__First Main Function Call
      06: VP: THRES01__check for all added frames transmission
      07: THRES01__Settinng 3 Security Events
      08: THRES01__expect event will be sent since it's within the time interval and evnt threshold
      09: THRES01__Second Main Function Call
      10: VP: THRES01__check for all added frames transmission
      11: THRES__Setting ONE Event
      12: THRES__expect to send event since it's within the time interval and event threshold
      13: THRES01__Third Main Function Call
      14: VP: THRES01__check for all added frames transmission
      15: THRES__Setting One Event
      16: THRES__expect to send event since it's within the time interval and the event threshold
      17: THRES01__Fourth Main Function Call
      18: VP: THRES01__check for all added frames transmission
      19: THRES__Setting Two Events
      20: THRES01__Fourth Main Function Call
      21: VP: THRES01__check for all added frames transmission
      22: THRES__Finalizing Test
  
Test Input: 
  
Test Output: 
      Test passing if the sent data matches the context data given, failing otherwise
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Switch.Support</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Qualification.OnSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Forwarding.QSEV.ToServer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.ReportingSEV.onSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.ReportingSEV.withCD.onSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.PreCompile.Select.Target</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>782</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_Filters_MIX01</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_03_Filtering_MIX/source/application/IdsM_Test.c</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test verifies the behavior of the Filter mix (Sampling - Aggregation - Threshold) on an Event,
      the filter is as follows:
    Block = State_0, Sample = 2, Aggr = 0.04, Thres = 5, 0.08
    ----- 1 2 3 4 5 6 7 8----------------------
    block n y y y y y y y
    sampl n y n y n y n y
    agg   n n n y n n n y
    thres n n n n n n n y
    ----------------------------------------
    send  n n n n n Y
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: MIX01__Empty the stack trace
        02: MIX01__Initialize IdsM
        03: Toggle BswM_State to block state 0
        04: MIX01__Setting 1 Event Detail
        05: No SEv will be sent since it didn't pass The Blocking Filter
        06: MIX01__First Main Function Call (Event 08)
        07: VP: check for all added frames transmission
        08: Toggle BswM_State to enable state 0
		09: MIX01__Setting 1 Event Detail
        10: No SEV will be sent since it didn't pass The Aggregation Interval
        11: MIX01__Second Main Function Call (Event 08)
        12: VP: check for all added frames transmission
        13: MIX01__Setting 1 Event Detail
        14: No SEV will be sent since it didn't pass The Sampling Filter
        15: MIX01__Third Main Function Call (Event 08)
        16: VP: check for all added frames transmission
        17: MIX01__Setting 1 Event Detail Context Data A
        18: No SEV will be sent since it didn't pass The Event Threshold
        19: MIX01__Forth Main Function Call (Event 08)
        20: VP: check for all added frames transmission
        21: MIX01__Setting 1 Event Detail Context Data B
        22: No SEV will be sent since it didn't pass The Sampling Filter
        23: MIX01__Fifth Main Function Call (Event 08)
        24: VP: check for all added frames transmission
        25: MIX01__Setting 1 Event Detail Context Data C
        26: No SEV will be sent since it didn't pass The Aggregation Interval
        27: MIX01__Sixth Main Function Call (Event 08)
        28: VP: check for all added frames transmission
        29: MIX01__Setting 1 Event Detail Context Data D
        30: No SEV will be sent since it didn't pass The Sampling Filter
        31: MIX01__Seventh Main Function Call (Event 08)
        32: VP: check for all added frames transmission
        33: MIX01__Setting 1 Event Detail Context Data E
        34: expect event to be sent with count=5 ,Timestamp = 1345 and context data E
        35: MIX01__Eighth Main Function Call (Event 08)
        36: VP: check for all added frames transmission
        37: Setting the Timestamp
        38: MIX01__expect to send SEV since it's a has ByPass Reporting Mode
        39: MIX01__ninth Main Function Call (Event 06)
        40: VP: check for all added frames transmission
        41: Send a success message
  
Test Input: 
  
Test Output: 
      Test passing if the sent data matches the context data given, failing otherwise
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00403</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00404</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00502</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00600</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00601</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00901</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00902</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00903</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00904</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00905</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01498</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Switch.Support</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Qualification.OnSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Forwarding.QSEV.ToServer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.ReportingSEV.onSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.ReportingSEV.withCD.onSwitch</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.PreCompile.Select.Target</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>783</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Filters_Limitation</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_03_Filtering_MIX/source/application/IdsM_Test.c</sourcefile>
      <sourceline>509</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        This test verifies the behavior Event Rate Limitation
        Filter and Traffic Rate Limitation Filter and timestamp.

        01-06: Test StbM and Custom timestamp in Detailed_Bypass event, and external event with timestamp.
        07-10: When event is reported with timestamp, it will be used instead of StbM/Custom timestamp.
        11-18: Send many events to trigger Event Rate Limitation.
        19-22: Event Rate limitation is triggered and will drop internal events in this in this interval.
        23-26: Traffic limitation is triggered and internal error event Traffic_exceeded should be sent when traffic exceed the configured amount.
        27-31: Test that internal error events are not filtered with instance specific filters.
        32-35: Test that event with no configured sinks will not be propagated.
        36-39: Test that event with no filters reference configured is propagated.
        40-48: Test StbM and Custom Timestamp with return value of E_NOT_OK.

    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: MIX01__Empty the stack trace
        02: MIX01__Initialize IdsM
        03: MIX01__Setting 1 ByPass Event
        04: MIX01__expect to send SEV since it's a has ByPass Reporting Mode
        05: First Main Function Call
        06: VP: check for all added frames transmission
        07: MIX01__Setting 1 Bypass Event
        08: MIX01__expect to send SEV since it's a has ByPass Reporting Mode
        09: MIX01__Second Main Function Call
        10: VP: check for all added frames transmission
        11: MIX01__Setting 1 ByPass Event
        12: MIX01__expect to send SEV since it's a has ByPass Reporting Mode
        13: Third Main Function Call
        14: VP: check for all added frames transmission
        15: MIX01__Setting 1 Bypass Event
        16: MIX01__expect to send SEV since it's a has ByPass Reporting Mode
        17: MIX01__Fourth Main Function Call
        18: VP: check for all added frames transmission
        19: MIX01__Setting 1 Bypass Event
        20: MIX01__expect NO send since it reached event rate limitation
        21: MIX01__Fifth Main Function Call
        22: VP: check for all added frames transmission
        23: MIX01__Setting 1 Bypass Event
        24: MIX01__expect event to be sent
        25: MIX01__Sixth and Seventh Main Function Call, traffic limitation filter will be raised in the first MainFunction and sent in the second one
        26: VP: check for all added frames transmission
        27: MIX01__Setting maximum number of buffers with event that has no filter
        28: MIX01__Setting one event with context data will raise internal event no context data buffer found and no event buffer found
        29: MIX01__expect internal event no event buffer and no context data buffer because internal buffers are not filtered with instance specific filters
        30: MIX01__Eights Main Function Call
        31: VP: check for all added frames transmission
        32: MIX01__Setting 1 Bypass Event with NO IdsR Sink
        33: MIX01__expect No event will be sent since the event has IdsR forwarding option OFF
        34: MIX01__Ninth Main Function Call
        35: Check that nothing was sent
        36: Setting "1" security event
        37: expect event to be sent since it has NO filter chain reference
        38: MIX01__Tenth Main Function Call
        39: Setting "1" security event
        40: Set the return value for GetCurrentTime to E_NOT_OK
        41: Set the return value for Rte_Call_IdsM_CustomTimestamp_Get to E_NOT_OK
        42: MIX01__eleventh Main Function Call
        43: Setting "1" security event
        44: MIX01__expect to send SEV since it's a has ByPass Reporting Mode but with zero timestamp
        45: MIX01__twelfth Main Function Call
        46: Set the return value for GetCurrentTime to E_OK
        47: Set the return value for Rte_Call_IdsM_CustomTimestamp_Get to E_OK
        48: VP: check for all added frames transmission
    
Test Input: 
    
Test Output: 
        Test passing if the sent data matches the context data given, failing otherwise
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01080</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>201</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Server.Acess.OfBSW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.PreCompile.Select.Target</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>784</internalId></specobject>
    <specobject>
      <id>IdsM_Test_External_Event_Timestamp</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_03_Filtering_MIX/source/application/IdsM_Test.c</sourcefile>
      <sourceline>970</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test verifies the behavior of adding timestamp for
      external QSE when passed with "0" timestamp.
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: MIX01__Empty the stack trace
        02: MIX01__Initialize IdsM
        03: MIX01__Setting 1 ByPass Event ,external events are qualified
        04: MIX01__expect to send SEV since it's a has ByPass Reporting Mode
        05: First Main Function Call
        06: VP: check for all added frames transmission
        07: MIX01__Setting 1 Bypass Event
        08: Main Function Call to update the local timestamp
        09: MIX01__Setting 1 ByPass Event
        10: MIX01__expect to send SEV since having the timestamp we set earlier
        11: check processing is asynchronous, i.e. nothing gets propagated before main function
        12: Third Main Function Call
        13: VP: check for all added frames transmission
  
Test Input: 
  
Test Output: 
      Test passing if the sent data matches the context data given, failing otherwise
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.TimeStamp.ExternalDevice.Events</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>785</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_Tp</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_04_Tp/source/application/IdsM_Test.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Tests transmission in TP Pdu (Only configured TP Pdu) in different scenarios.

        Procedure:
            - 01-06: Test simple Tp transmission using one call of CopyTxData.
            - 07-14: Test segmented Tp transmission using multiple call of CopyTxData
            - 15-24: Test that TpTxConfirmation blocks other Tp Transmissions.
            - 25-34: Test CopyTxData with zero length
            - 35:43: Test TpTxConfirmation with E_NOT_OK
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module.
        02: Set security event with context data and expect it. TotalFrameLength is 19
        03: MainFunction call - PduR_TpTransmit for EV01 should be called here
        04: Copy all data in one call, then send confirmation
        05: VP: Check for all added frames transmission
        06: Flushing All saved buffers and empty stack trace
        07: Set security event with context data and expect it. TotalFrameLength is 19
        08: MainFunction call - PduR_TpTransmit for EV01 should be called here
        09: Copy part of frame, then call MainFunction
        10: Copy another part of frame, then call MainFunction
        11: Copy last part of frame, then call MainFunction
        12: Send TpTxConfirmation, then call MainFunction
        13: VP: Check for all added frames transmission
        14: Flushing All saved buffers and empty stack trace
        15: Set two security event with context data and expect them, the first should block further TP transmissions
        16: MainFunction call - PduR_TpTransmit for EV01 should be called here
        17: Copy part of data for EV01, then call MainFunction
        18: Copy remaining data for EV01, then call MainFunction
        19: Call TpTxConfirmation for EV01
        20: MainFunction call - PduR_TpTransmit for EV02 should be called here
        21: Copy all data of EV02 in one call, then send confirmation
        22: MainFunction call
        23: VP: Check for all added frames transmission
        24: Flushing All saved buffers and empty stack trace
        25: Set security event with context data and expect it. TotalFrameLength is 19
        26: MainFunction call - PduR_TpTransmit for EV01 should be called here
        27: CopyTxData with zero length, then call MainFUnction
        28: Copy part of frame, then CopyTxData with zero length, then call MainFunction
        29: CopyTxData with zero length, then call MainFUnction
        30: Copy last part of frame, then call MainFunction
        31: CopyTxData with zero length, then call MainFUnction
        32: Send TpTxConfirmation, then call MainFunction
        33: VP: Check for all added frames transmission
        34: Flushing All saved buffers and empty stack trace
        35: Set two security event with context data and expect only the second, as the first will return E_NOT_OK
        36: MainFunction call - PduR_TpTransmit for EV01 should be called here
        37: Copy part of data for EV01, then call MainFunction
        38: Call TpTxConfirmation for EV01
        39: MainFunction call - PduR_TpTransmit for EV02 should be called here
        40: Copy all data of EV02 in one call, then send confirmation
        41: MainFunction call
        42: VP: Check for all added frames transmission
        43: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01501</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01502</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>786</internalId></specobject>
    <specobject>
      <id>IdsM_Test_TpRetry</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_04_Tp/source/application/IdsM_Test.c</sourcefile>
      <sourceline>307</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Tests retry in Tp Transmission.

        Procedure:
            - 03-09: Test simple Tp transmission using one call of CopyTxData.
            - 10-18: Test segmented Tp transmission using multiple call of CopyTxData
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module.
        02: Test calling CopyTxData and TpConfirmation without any ongoing Tp Transmissions.
        03: Set security event with context data and expect it. TotalFrameLength is 19
        04: MainFunction call - PduR_TpTransmit for EV01 should be called here
        05: Set Retry TP_CONFPENDING (Keep Data) and Copy part of frame, then call MainFunction
        06: Set Retry TP_DATACONF (Remove Previous Data) and Copy another part of frame, then call MainFunction
        07: Copy last part of frame, then call MainFunction
        08: Send TpTxConfirmation, then call MainFunction
        09: VP: Check for all added frames transmission
        10: Flushing All saved buffers and empty stack trace
        11: Set security event with context data and expect it. TotalFrameLength is 19
        12: MainFunction call - PduR_TpTransmit for EV02 should be called here
        13: Set Retry TP_CONFPENDING (Keep Data) and Copy part of frame, then call MainFunction
        14: Retry previous data, then Copy another part of frame, then call MainFunction
        15: Copy zero bytes, then call MainFunction
        16: Copy last part of frame, then call MainFunction
        17: Send TpTxConfirmation, then call MainFunction
        18: VP: Check for all added frames transmission
        19: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01501</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01502</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>787</internalId></specobject>
    <specobject>
      <id>IdsM_Test_TpTrafficLimitation</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_04_Tp/source/application/IdsM_Test.c</sourcefile>
      <sourceline>470</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Tests that instance filters are applied to Tp Pdu for Security Events.

    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module.
        02: Set security event with long context data and expect it. TotalFrameLength is 162
        03: Set security event with long context data. It will be dropped because in TrafficLimitation Filter
        04: Expect InternalErrorEvent TrafficLimitationExceeded
        05: MainFunction call - PduR_TpTransmit for EV01 should be called here
        06: Set two more security events. They should be dropped as there are no buffer available
        07: Copy all data in one call, then send confirmation
        08: MainFunction call - InternalErrorEvent TrafficLimitationExceeded should be raised here
        09: MainFunction call - PduR_TpTransmit for InternalErrorEvent TrafficLimitationExceeded should be called here
        10: Copy all data in one call, then send confirmation
        11: VP: Check for all added frames transmission
        12: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01501</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01502</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00801</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00804</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>788</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_DemSink_Synchronus</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_05_Dem/source/application/IdsM_Test.c</sourcefile>
      <sourceline>37</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      This test verifies the behavior of the IdsM Dem Sink with Synchronus approach:
      - First we define one Dem Event with Dem Sink and Synchronus approach using IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback):
      - DemEventId: Dem event id with 0x200 offset from internal event ID.
	  - CallBack: DemCallBack_ReadDataElement_0 is the call back pointer to function that points to the callBack buffer.
	  - Then we define the approach status as SYNCHRONOUS.
      - We report a SEv, then we check the frame, after main function.
      - Note: In this case SEv must be called back inside main function, as this is SYNCHRONOUS Event.
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace.
        02: Initialize IdsM.
        03: Defining IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback).
        04: Defining approach of event.
        05: Send a security event with Count 1 and ContextDataA with size 7.
        06: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK with count 1 and ContextDataA with size 7.
        07: First Main Function Call.
        08: VP: Check for all added frames transmission,  as callback type is Synchronuse and a frame is expected to be sent .
        09: Sending a success message.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01600</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01601</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01602</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Config.DemEventParameterRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Dem.Callback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>789</internalId></specobject>
    <specobject>
      <id>IdsM_Test_DemSink_ASynchronus</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_05_Dem/source/application/IdsM_Test.c</sourcefile>
      <sourceline>148</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      This test verifies the behavior of the IdsM Dem Sink with ASynchronus approach:
      - First we define one Dem Event with Dem Sink and ASynchronus approach using IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback):
      - DemEventId: Dem event id with 0x200 offset from internal event ID.
	  - CallBack: DemCallBack_ReadDataElement_1 is the call back pointer to function that points to the callBack buffer.
	  - Then we define the approach status as ASYNCHRONOUS.
      - We report a SEv, then we check the frame, Not after main function directly.
      - Note: In this case SEv will be called back outside main function, as this is ASYNCHRONOUS Event and nothing is expected
      to be sent unless we callback by ourselves.
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace.
        02: Initialize IdsM.
        03: Defining IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback).
        04: Defining approach of event
        05: Send a security event with count 1 and contextDataB with size 5.
        06: Event is expected to be sent with count 1 and context data A with size 5.
        07: First Main Function Call, in this call [Dem will be transmitted no call back is expected to
            happen as this is ASYNCHRONOUS DemEvent]
        08: Second Main Function Call, Nothing will happen just called to make sure that nothing will get propagated.
        09: Third Main Function Call, as previous.
        10: Fourth Main Function Call, as previous.
        11: Copy callback for ASynchronus Event.
        12: Processed callback for ASynchronus Event.
        13: VP: Check for all added frames transmission, as callback type is ASynchronuse and must return frame after CallBack.
        14: Sending a success message.
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01600</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01601</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01602</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Config.DemEventParameterRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Dem.Callback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>790</internalId></specobject>
    <specobject>
      <id>IdsM_Test_DemSink_MIX</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_05_Dem/source/application/IdsM_Test.c</sourcefile>
      <sourceline>287</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      This test verifies the behavior of the IdsM Dem Sink with Mix approaches Synchronus and ASynchronus:
      - First we define three Dem Events with Dem Sink two of them with ASynchronus approach and the third one is Synchronus using IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback):
      - DemEventId: Dem event id with 0x200 offset from internal event ID.
	  - CallBack: DemCallBack_ReadDataElement_x is the call back pointer to function that points to the callBack buffer.
	  - Then we define the approach status (Synchronus - ASynchronus) as for appropriate event.
      - We report a SEv before main functions then check for each frame with its case alone.
      - Note: In first two testcases SEvs will be called back outside main function as they are ASynchronus processing, then nothing is expected to be sent unless
        we call CallBack function by ourselves after main function, but the third testcase is Synchronus so there is a frame expected to be sent inside main function.
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace
        02: Initialize IdsM
        03: Defining Event_0: IdsMTest_DemEventType{DemCallBack_ReadDataElement, EventId, DemEventBuffer}
        04: Defining approach of event
        05: Send a security event with Count 7 and no Context Data
        06: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK with count 7 and No context data
        07: First Main Function Call
        08: Defining Event_1: IdsMTest_DemEventType{DemCallBack_ReadDataElement, EventId, DemEventBuffer}
        09: Defining approach of event
        10: Send a security event with Count 4 and no Context Data
        11: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK with Context Data B and count 4
        12: Second Main Function Call
        13: Defining Event_2: IdsMTest_DemEventType{DemCallBack_ReadDataElement, EventId, DemEventBuffer}
        14: Defining approach of event
        15: Send a security event with no Count and no Context Data
        16: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK with No count and No context data
        17: Third Main Function Call
        18: Copy callback for ASynchronus Event
        19: processed callback for ASynchronus Event
        20: Copy callback for ASynchronus Event
        21: processed callback for ASynchronus Event
        22: Fourth Main Function Call, dummy call
        23: VP: Check for all added frames transmission,  as callback type is Synchronuse and must return frame
        24: Sending a success message
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01600</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01601</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01602</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Config.DemEventParameterRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Dem.Callback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>791</internalId></specobject>
    <specobject>
      <id>IdsM_Test_DemSink_MultipleSync</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_05_Dem/source/application/IdsM_Test.c</sourcefile>
      <sourceline>484</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      This test verifies the behavior of the IdsM Dem Sink with Synchronus approach:
      - First we define the IdsMTest_DemEventType array with its parameters:
      - DemCallBack_ReadDataElement as this is the call back pointer from dem to IdsM, EventId, and also an EventBuffer.
      - Then we define the approach status as SYNCHRONOUS.
      - Note: In this testcase we send the same SEv 3 times, then we check the frame.
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace
        02: Initialize IdsM
        03: Defining IdsMTest_DemEventType{DemCallBack_ReadDataElement, EventId, DemEventBuffer}
        04: Defining approach of event
        05: Send a security event with Count 4 and no Context Data
        06: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK with count 4 and No context data
        07: Defining approach of event, Not Necessary as there is no change in approach happened
        08: Send a security event with Count 4 and no Context Data
        09: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK with count 4 and No context data
        10: First Main Function Call
        11: VP: Check for all added frames transmission, Expect there are two frames
        12: Defining approach of event, Not Necessary as there is no change in approach happened
        13: Send a security event with Count 4 and no Context Data
        14: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK with count 4 and No context data
        15: First Main Function Call
        16: VP: Check for all added frames transmission
        17: Sending a success message
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01600</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01601</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01602</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Dem.Callback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>792</internalId></specobject>
    <specobject>
      <id>IdsM_Test_DemSink_MultipleASync</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_05_Dem/source/application/IdsM_Test.c</sourcefile>
      <sourceline>627</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      This test verifies the behavior of the IdsM Dem Sink with Synchronus approach:
      - First we define the IdsMTest_DemEventType array with its parameters:
      - DemCallBack_ReadDataElement as this is the call back pointer from dem to IdsM, EventId, and also an EventBuffer.
      - Then we define the approach status as ASYNCHRONOUS.
      - Then we send a SEv twice, then we check for the frames.
      - Note: In this testcase we
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace
        02: Initialize IdsM
        03: Defining IdsMTest_DemEventType{DemCallBack_ReadDataElement, EventId, DemEventBuffer}
        04: Defining approach of event
        05: Send a security event with Count 4 and no Context Data
        06: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK with count 4 and No context data
        07: Defining approach of event
        08: Send a security event with Count 4 and no Context Data
        09: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK with count 4 and No context data
        10: First Main Function Call, Dem transmit should happen in this function and return as Event is ASYNCHRONOUS
        11: Second Main Function Call, Nothing will be transmitted in this function as the callback hadn't been called
        12: Copy callback for ASynchronus Event
        13: precessed callback for ASynchronus Event
        14: VP: Check that one event is transmitted
        15: Third Main Function Call, DemEvent will be transmitted at this function as the callback had been called
        16: Fourth Main Function Call, Nothing will happen at this function
        17: Copy callback for ASynchronus Event
        18: precessed callback for ASynchronus Event
        19: VP: Check for all added frames transmission
        20: Sending a success message
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01600</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01601</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01602</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Config.DemEventParameterRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Dem.Callback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>793</internalId></specobject>
    <specobject>
      <id>IdsM_Test_DemSink_Unordered_ASynchronus</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_05_Dem/source/application/IdsM_Test.c</sourcefile>
      <sourceline>777</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      This test verifies the behavior of the IdsM Dem Sink with ASynchronus approach in reporting in ordered sequence
      and the callbacks will be in unordered sequence
      -Report a security event IdsMConf_EV01_DETAILED_BYPASSING_DemSink_ASynchronus
      -Report a security event IdsMConf_EV02_DETAILED_BYPASSING_DemSink_ASynchronus
      -Report a security event IdsMConf_EV03_DETAILED_BYPASSING_DemSink_ASynchronus
      -Callback for event IdsMConf_EV02_DETAILED_BYPASSING_DemSink_ASynchronus
      -Callback for event IdsMConf_EV01_DETAILED_BYPASSING_DemSink_ASynchronus
      -Callback for event IdsMConf_EV03_DETAILED_BYPASSING_DemSink_ASynchronus
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace
        02: Initialize IdsM
        03: Defining IdsMTest_DemEventType{DemCallBack_ReadDataElement, EventId, DemEventBuffer}
        04: Defining approach of event
        05: Send a security event with Count 1 and ContextDataA with size 2
        06: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK with count 1 and contextDataA with size 2
        07: First Main Function Call, nothing is expected to be Called back inside this function (Async processing)
        08: Defining second IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback)
        09: Defining approach of event
        10: Send a security event with Count 1 and  Context Data size 5
        11: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK with Context Data B and count 1
        12: Second Main Function Call
        13: Defining IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback)
        14: Defining approach of event
        15: Send a security event with 1 Count and Context Data size 5
        16: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK with 1 count and  context data size 5
        17: Third Main Function Call
        18: Copy callback for ASynchronus Event
        19: processed callback for ASynchronus Event
        20: Copy callback for ASynchronus Event
        21: processed callback for ASynchronus Event
        22: Copy buffer of first event
        23: processed callback for ASynchronus Event
        24: Fourth Main Function Call
        25: fifth Main Function Call
        26: VP: Check for all added frames transmission,  as callback type is Synchronuse and must return frame
        27: Sending a success message
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01600</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01601</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01602</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Dem.Callback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>794</internalId></specobject>
    <specobject>
      <id>IdsM_Test_DemSink_Delayed_ProcessedCallback_ASynchronus</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_05_Dem/source/application/IdsM_Test.c</sourcefile>
      <sourceline>992</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test verifies the behavior of the IdsM Dem Sink with ASynchronus where the copy callback is called first
      and before the processed callbacks is called the same event is reported.
      The second reporting will not propagate till the first processed callback is made
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace
        02: Init the IdsM
        03: Defining IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback)
        04: Defining IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback)
        05: Defining approach of event
        06: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK
        07: Send a security event with 1 Count and Context Data size 5
        08: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK
        09: Send a security event with 1 Count and Context Data size 5
        10: Check processing is asynchronous, i.e. nothing gets propagated before main function
        11: Main Function Call
        12: Copy callback for ASynchronus Event
        13: Copy callback for ASynchronus Event
        14: Send a security event with 1 Count and Context Data size 2
        15: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK
        16: Send a security event with 1 Count and Context Data size 5
        17: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK
        18: Main Function Call
        19: Check processing is asynchronous, 2 frames been propagated
        20: Defining approach of event
        21: Main Function Call
        22: processed callback for ASynchronus Event
        23: Main Function Call
        24: Check processing is asynchronous, 3 frames been propagated
        25: processed callback for ASynchronus Event
        26: Main Function Call
        27: Check processing is asynchronous, 4 frames been propagated
        28: VP: Check for all added frames transmission
        29: Sending a success message
  
Test Input: 
  
Test Output: 
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01600</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01601</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01602</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Config.DemEventParameterRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Dem.Callback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>795</internalId></specobject>
    <specobject>
      <id>IdsM_Test_DemSink_ProcessedCallback_No_pervious_CopyCallback</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_05_Dem/source/application/IdsM_Test.c</sourcefile>
      <sourceline>1194</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      This test verifies the behavior of the IdsM Dem Sink with ASynchronus approach if the processed callback is called without a
      pervious copy callback is made, and also verifies the behavior when the Dem module by mistake made a callback for an event which is
      already freed and processed.
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace
        02: Initialize IdsM
        03: Defining IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback)
        04: Defining approach of event
        05: Send a security event with 1 Count and Context Data size 2
        06: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK
        07: Send a security event with 1 Count and Context Data size 5
        08: Main Function Call
        09: Check processing is asynchronous, 2 frames been propagated
        10: processed callback for ASynchronus Event
        11: Main Function Call
        12: Copy callback for ASynchronus Event
        13: Check processing is asynchronous, a frame been propagated
        14: Main Function Call
        15: Defining approach of event
        16: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK
        17: Send a security event with 1 Count and Context Data size 7
        18: Check processing is asynchronous, a frame been propagated
        19: Main Function Call
        20: Check processing is asynchronous, a frame been propagated
        21: Main Function Call
        22: processed callback for ASynchronus Event
        23: Check processing is asynchronous, a frame been propagated
        24: Main Function Call
        25: Check processing is asynchronous, 2 frames been propagated
        26: processed callback for ASynchronus Event
        27: Copy callback for ASynchronus Event
        28: Main Function Call
        29: Check processing is asynchronous, 2 frames been propagated
        30: VP: Check for all added frames transmission
        31: Sending a success message
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01600</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01601</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01602</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Config.DemEventParameterRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Dem.Callback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>796</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_IdsRSink</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_06_AllSinks/source/application/IdsM_Test.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      This test Verifies the functionality of TxConfirmation, the Module shall not Propagate any frames unless the Previous Frame was Confirmed
        to be sent successfully, without caring about IdsMTxConfirmationTimeout Value.
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace.
        02: Initialize IdsM.
        03: Send a security event with Count 1 and ContextDataA with size 7
        04: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK with count 1 and ContextDataA with size 7
        05: Confirm that past frame was sent successfully
        06: First Main Function Call
        07: VP: Check for all added frames transmission
        08: Sending a success message
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01499</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>797</internalId></specobject>
    <specobject>
      <id>IdsM_Test_DemSink_Synchronus_IdsRSink_NotDelayed</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_06_AllSinks/source/application/IdsM_Test.c</sourcefile>
      <sourceline>148</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      This test verifies the behavior of the IdsM IdsR sink Not delayed and also Dem Sink with Synchronus approach:
      - First we define one Dem Event with Dem Sink and Synchronus approach using IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback):
      - DemEventId: Dem event id with 0x200 offset from internal event ID.
	  - CallBack: DemCallBack_ReadDataElement_1 is the call back pointer to function that points to the callBack buffer.
	  - Then we define the approach status as SYNCHRONOUS.
      - We report a SEv, then we add the frame twice one for Dem sink and the other for IdsR sink.
      - Note: In this case SEv for Dem will be called back inside main function, as this is a SYNCHRONOUS Event and two frames are expected to
        be received.
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace.
        02: Initialize IdsM.
        03: Defining IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback).
        04: Defining approach of event
        05: Send a security event with count 1 and contextDataB with size 5.
        06: Event is expected to be sent with count 1 and context data A with size 5 for all sinks (IdsR-Dem).
        07: First Main Function Call, Dem will be transmitted and call backed at this function as it is SYNCHRONOUS
        08: Confirm the duplicated IdsR frame was sent successfully
        09: VP: Check for all added frames transmission, must receive two frames (one from Dem callback - another from TxConfirmation)
        10: Sending a success message
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01499</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>798</internalId></specobject>
    <specobject>
      <id>IdsM_Test_DemSink_Synchronus_IdsRSink_Delayed</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_06_AllSinks/source/application/IdsM_Test.c</sourcefile>
      <sourceline>269</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      This test verifies the behavior of the IdsM IdsR sink with a delay of TxConfirmation and also Dem Sink with Synchronus approach:
      - First we define one Dem Event with Dem Sink and Synchronus approach using IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback):
      - DemEventId: Dem event id with 0x200 offset from internal event ID.
	  - CallBack: DemCallBack_ReadDataElement_1 is the call back pointer to function that points to the callBack buffer.
	  - Then we define the approach status as SYNCHRONOUS.
      - We report a SEv, then we add the frame twice one for Dem sink and the other for IdsR sink.
      - Note: TxConfirmation will be delayed in this function.
      - Note: In this case SEv for Dem will be called back inside main function, as this is a SYNCHRONOUS Event and two frames are expected to
        be received.
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace.
        02: Initialize IdsM.
        03: Defining IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback)
        04: Defining approach of dem event
        05: Send a security event with IdsR Sink only count 1 and contextDataB with size 5
        06: Event is expected to be sent with count 1 and context data A with size 5
        07: First Main function call
        08: Send a security event with count 1 and contextDataB with size 5
        09: Event is expected to be sent with count 1 and context data A with size 5 for all sinks (IdsR-Dem)
        10: First Main Function Call, Dem will be transmitted and call backed at this function as it is SYNCHRONOUS
        11: Confirm the IdsR frame was sent successfully
        12: VP: Check for all added frames transmission, must receive two frames (one from Dem callback - another from TxConfirmation)
        13: Sending a success message
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01499</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>799</internalId></specobject>
    <specobject>
      <id>IdsM_Test_DemSink_ASynchronus_IdsRSink_NotDelayed</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_06_AllSinks/source/application/IdsM_Test.c</sourcefile>
      <sourceline>413</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      This test verifies the behavior of the IdsM IdsR sink and also Dem Sink with Synchronus approach:
      - First we define one Dem Event with Dem Sink and Synchronus approach using IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback):
      - DemEventId: Dem event id with 0x200 offset from internal event ID.
	  - CallBack: DemCallBack_ReadDataElement_1 is the call back pointer to function that points to the callBack buffer.
	  - Then we define the approach status as ASYNCHRONOUS.
      - We report a SEv, then we add the frame twice one for Dem sink and the other for IdsR sink.
      - Note: In this case SEv for Dem will be called back outside main function, as this is a ASYNCHRONOUS Event and two frames are expected to
        be received.
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace.
        02: Initialize IdsM.
        03: Defining IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback).
        04: Defining approach of event
        05: Send a security event with count 1 and contextDataB with size 5.
        06: Event is expected to be sent with count 1 and context data A with size 5.
        07: Just Resending the Frame because there are both sinks (IdsR - Dem) included in configuration
        08: First Main Function Call, Dem will be transmitted and call backed at this function as it is ASYNCHRONOUS
        09: Confirm the IdsR frame was sent successfully
        10: Copy callback for ASynchronus Event
        11: Processed callback for ASynchronus Event
        12: VP: Check for all added frames transmission, must receive two frames (one from Dem callback - another from TxConfirmation)
        13: Sending a success message
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01499</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>800</internalId></specobject>
    <specobject>
      <id>IdsM_Test_DemSink_ASynchronus_IdsRSink_Delayed</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_06_AllSinks/source/application/IdsM_Test.c</sourcefile>
      <sourceline>545</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
      This test verifies the behavior of the IdsM IdsR sink and also Dem Sink with ASynchronus approach:
      - First we define one Dem Event with Dem Sink and ASynchronus approach using IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback):
      - DemEventId: Dem event id with 0x200 offset from internal event ID.
	  - CallBack: DemCallBack_ReadDataElement_1 is the call back pointer to function that points to the callBack buffer.
	  - Then we define the approach status as ASYNCHRONOUS.
      - Then we report a SEv with PduR sink to invaidate TxConfirmation.
      - We report another SEv with IdsR and Dem sinks configured, then we add the frame twice one for Dem sink and
        the other for IdsR sink.
      - Note: In this case SEv for Dem will be called back outside main function, as this is a ASYNCHRONOUS Event
        and two frames are expected to be received.
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace
        02: Initialize IdsM
        03: Defining IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback)
        04: Defining approach of dem event
        05: Send a security event with IdsR Sink only count 1 and contextDataB with size 5
        06: Event is expected to be sent with count 1 and context data A with size 5
        07: First Main function call
        08: Send a security event with Both IdsR and Dem sinks and count 1 and contextDataB with size 5
        09: Just Resending the Frame because there are both sinks (IdsR - Dem) included in configuration
        10: Just Resending the Frame because there are both sinks (IdsR - Dem) included in configuration
        11: Calling main function twice
        12: Copy callback for ASynchronus Event
        13: Processed callback for ASynchronus Event
        14: Another main function call
        15: Confirm the duplicated IdsR frame was sent successfully
        16: Another main function call: PduR transmission happens here
        17: VP: Check for all added frames transmission, must receive two frames (one from Dem callback - another from TxConfirmation)
        18: Sending a success message
  
Test Input: 
  
Test Output: 
  </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.ECUC_IdsM_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01499</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>801</internalId></specobject>
    <specobject>
      <id>IdsM_Test_IdsRSink_IF_TP</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_06_AllSinks/source/application/IdsM_Test.c</sourcefile>
      <sourceline>720</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Tests both If and Tp enabled in same time.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module.
        02: Set security event with context data and expect it. It should be sent on If Pdu
        03: Set security event with context data and expect it. It should be sent on Tp Pdu with TotalFrameLength of 89
        04: MainFunction call - PduR_Transmit and PduR_TpTransmit should be called here for both events
        05: Send If confirmation
        06: Copy all data in one call, then send confirmation
        07: VP: Check for all added frames transmission
        08: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>802</internalId></specobject>
    <specobject>
      <id>IdsM_Test_DemSink_Sync_IdsRSink_IF_TP</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_06_AllSinks/source/application/IdsM_Test.c</sourcefile>
      <sourceline>794</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        Tests both If, Tp, and Dem enabled in same time.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module.
        02: Defining IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback)
        03: Defining approach of dem event
        04: Set security event with context data and expect it twice for IdsR and Dem. It should be sent on If Pdu
        05: Set security event with context data and expect it twice for IdsR and Dem. It should be sent on Tp Pdu with TotalFrameLength of 89
        06: MainFunction call - PduR_Transmit, PduR_TpTransmit, and DemFreezeFrame for both frames should be called here for both events
        07: Send If confirmation
        08: Copy all data in one call, then send confirmation
        09: VP: Check for all added frames transmission
        10: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>803</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_CsmSyncSimple</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_07_CsmSync/source/application/IdsM_Test.c.m4</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        Test a simple configuration with signature enabled in synchronous Csm Processing mode by sending
        two events with and without context data. Expect that both of them are propagated correctly with signature.
        Verify that IdsM will retry signing when CsmSignatureGenerate or return anything other than E_OK.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module
        02: Define Dem events in synchronous Dem mode
        03: Set signature length in TestFramework and report security event with one sink, then expect it
        04: Csm_SignatureGenerate will be called, and frame is transmitted
        05: VP: Check for all added frames transmission
        06: Set signature length in TestFramework and report security event with all sinks, then expect it
        07: Csm_SignatureGenerate will be called, and frame is transmitted
        08: VP: Check for all added frames transmission
        09: Set maximum signature length, and report security event with context data to all sinks, then expect it
        10: Csm_SignatureGenerate will be called, and frame is transmitted
        11: VP: Check for all added frames transmission
        12: Set signature, and report security event with long context data that fits only on Tp Pdu to all sinks, then expect it
        13: Csm_SignatureGenerate will be called, and PduRTpTransmit is called
        14: Copy all data in one call, then send Tp confirmation
        15: VP: Check for all added frames transmission
        16: Set security event and make CsmSignatureGenerate return E_NOT_OK
        17: IdsM should keep trying to call CsmSignatureGenerate until it return E_OK
        18: Change CsmSignatureGenerate return value to E_OK, and frame will be transmitted
        19: VP: Check for all added frames transmission
        20: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Mac</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>804</internalId></specobject>
    <specobject>
      <id>IdsM_Test_CsmSyncMultipleEvents</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_07_CsmSync/source/application/IdsM_Test.c.m4</sourcefile>
      <sourceline>249</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Test multiple events to be reported while signature is enabled in synchronous Csm process mode.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module
        02: Define Dem events in synchronous Dem mode
        03: Report two security events
        04: Both events are expected to be sent with the same signature
        05: VP: Check for all added frames transmission
        06: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Mac</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>805</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_CsmAsync</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_08_CsmAsync/source/application/IdsM_Test.c.m4</sourcefile>
      <sourceline>61</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        Test a simple configuration with signature enabled in asynchronous Csm Processing mode by sending
        two events with and without context data. Expect that both of them are propagated correctly with signature.
        Verify that IdsM will retry signing when CsmSignatureGenerate or CsmNotificationCallback return anything
        other than E_OK.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module
        02: Define Dem events in synchronous Dem mode
        03: Set signature length in TestFramework and report security event with one sink, then expect it
        04: Csm_SignatureGenerate will be called, but it will wait for CsmCallback
        05: Call CsmCallback, then frame will be transmitted in the next MainFunction
        06: VP: Check for all added frames transmission
        07: Set signature length in TestFramework and report security event with all sinks, then expect it
        08: Csm_SignatureGenerate will be called, but it will wait for CsmCallback
        09: Call CsmCallback, then frame will be transmitted in the next MainFunction
        10: VP: Check for all added frames transmission
        11: Set maximum signature length, and report security event with context data to all sinks, then expect it
        12: Csm_SignatureGenerate will be called, but it will wait for CsmCallback
        13: Call CsmCallback, then frame will be transmitted in the next MainFunction
        14: VP: Check for all added frames transmission
        15: Set signature, and report security event with long context data that fits only on Tp Pdu to all sinks, then expect it
        16: Csm_SignatureGenerate will be called, but it will wait for CsmCallback
        17: Call CsmCallback, then PduRTpTransmit will be called in the next MainFunction
        18: Copy all data in one call, then send Tp confirmation
        19: VP: Check for all added frames transmission
        20: Set security event and make CsmSignatureGenerate return E_NOT_OK
        21: IdsM should keep trying to call CsmSignatureGenerate until it return E_OK
        22: Change CsmSignatureGenerate return value to E_OK
        23: Call CsmNotificationCallback with E_NOT_OK, IdsM should retry signing process
        24: Call CsmNotificationCallback with E_OK, event should be propagated now
        25: VP: Check for all added frames transmission
        26: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Mac</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>806</internalId></specobject>
    <specobject>
      <id>IdsM_Test_CsmAsyncMultipleEvents</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_08_CsmAsync/source/application/IdsM_Test.c.m4</sourcefile>
      <sourceline>286</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Test multiple events to be reported while signature is enabled in asynchronous Csm process mode.
        These events should block each other will signing through Csm.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module
        02: Define Dem events in synchronous Dem mode
        03: Invalid Csm callback call to make sure it will not affect IdsM
        04: Set two events, and expect that they will block each other in Csm
        05: Csm_SignatureGenerate will be called for first event
        06: Csm will be blocked until the callback for first event is called
        07: Change signature for second event in async Csm processing mode
        08: Expect that first event is transmitted, and Csm_SignatureGenerate will be called for second event
        09: Csm Callback for second event
        10: Expect that second event is transmitted
        11: Csm Callback for second event
        12: Expect that second event is transmitted to PduR and blocked on Dem
        13: Call Dem callbacks for first event
        14: Expect that second event is transmitted to all sinks
        15: VP: Check for all added frames transmission
        16: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Mac</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>807</internalId></specobject>
    <specobject>
      <id>IdsM_Test_CsmDet</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_08_CsmAsync/source/application/IdsM_Test.c.m4</sourcefile>
      <sourceline>422</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Test uninit Det error for Csm callback.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework
        02: Clear DET error count
        03: Call IdsMTest_CsmNotificationCallback()
        04: VP: Check for Error msg IDSM_E_PARAM_UNINT
        05: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>808</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_InternalError</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_09_InternalError/source/application/IdsM_Test.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        This test verifies the behaviour of internal events in different sinks with filters.
        Configurations:
            - Buffers:
                - 2 Event Buffers
                - 1 Context Data Buffer with size = 10
            - Events:
                - Normal Event "EV00_No_Filter_IdsRSink" with IdsR sink and no filters.
                - InternalErrorEvent NoEventBufferAvailable with Dem Sink and filters:
                    block=1, aggregation (interval=3), threshold (interval=6, number=3).
                - InternalErrorEvent NoContextDataBufferAvailable with IdsR Sink and filters:
                    sampl=2.
                - InternalErrorEvent TrafficLimitationExceeded with IdsR and Dem sink and no filters.
            - Traffic Filter (max_bytes=145, interval=11) (Note: InternalEventsError bytes are not calculated in traffic filter)

        Procedure:
            - 01-33: Test InternalErrorEvent NoEventBufferAvailable with filters and Dem sink.
            - 34-42: Test InternalErrorEvent NoContextDataBufferAvailable with filters and IdsR sink.
            - 43-47: Test InternalErrorEvent TrafficLimitationExceeded with both sinks IdsR and Dem sink.
            - 48-53: Test that events are dropped when TrafficLimitation Filter is raised, but InternalErrorEvents
                        are passed (InternalErrorEvents is not filtered with instance filter)
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module.
        02: Define Dem events for IdsM TestFramework.
        03: Set Dem behaviour to Synchronous.
        04: Set maximum number of Security Events to make IdsM buffers full and expect them.
        05: Report one more security event to raise no event buffers Internal error event with count=1. It should pass block state and wait in aggregation
        06: First Main Function Call.
        07: Check that only two frames are transmitted for IdsMConf_EV00_No_Filter_IdsRSink, IdsMInternalError NoEventBuffer is still on filtering
        08: Set maximum number of Security Events to make IdsM buffers full and expect them.
        09: Change BswM State to block IdsMInternalError NoEventBuffer
        10: Report two more security event to raise no event buffers Internal error event. It should be dropped in block state filter
        11: Second Main Function Call
        12: Check that only four frames are transmitted so far for IdsMConf_EV00_No_Filter_IdsRSink, IdsMInternalError NoEventBuffer is still on filtering
        13: Set maximum number of Security Events to make IdsM buffers full and expect them
        14: Change BswM State to pass IdsMInternalError NoEventBuffer
        15: Report one more security event to raise no event buffers Internal error event with count=1. It should pass block state and wait in aggregation with count = 2
        16: Third Main Function Call
        17: Check that only six frames are transmitted so far, IdsMInternalError NoEventBuffer should pass aggregation filter, but still didn't pass threshold filter
        18: Set maximum number of Security Events to make IdsM buffers full and expect them.
        19: Report two more security event to raise no event buffers Internal error event with count=2. It should pass block state and wait in aggregation filter with count=2
        20: Fourth Main Function Call
        21: Check that only eight frames are transmitted so far
        22: Set maximum number of Security Events to make IdsM buffers full and expect them
        23: Report one more security event to raise no event buffers Internal error event with count=1. It should pass block state and wait in aggregation filter with count=3
        24: Fifth Main Function Call
        25: Check that only ten frames are transmitted so far
        26: Set maximum number of Security Events to make IdsM buffers full and expect them
        27: Change BswM State to block IdsMInternalError NoEventBuffer
        28: Report two more security event to raise no event buffers Internal error event. It should be dropped in block state filter
        29: Internal event should pass aggregation with count=3 and it should pass threshold filter and be transmitted in next MainFunction
        30: Sixth Main Function Call
        31: Check that only thirteen frames are transmitted so far (12 for EV00_No_Filter_IdsRSink and one internal error event NoEventBuffer)
        32: VP: Check for all added frames transmission
        33: Flushing All saved buffers and empty stack trace
        34: Set maximum number of Context data buffers to make it full and expect them
        35: Report one more event with context data, expect context data to be dropped (frame will be sent without context data) and IdsMInternalError NoContextDataBuffer to be raised and pass sampling filter than transmitted
        36: Seventh Main Function Call
        37: VP: Check for all added frames transmission
        38: Set maximum number of Context data buffers to make it full and expect them
        39: Report one more event with context data, expect context data to be dropped (frame will be sent without context data) and IdsMInternalError NoContextDataBuffer to be dropped in sampling filter
        40: Eighth Main Function Call
        41: VP: Check for all added frames transmission
        42: Flushing All saved buffers and empty stack trace
        43: Set one Security Event to trigger traffic limitation exceeded. It will be dropped
        44: Expect IdsMInternalEvent TrafficExceeded will be raised and sent on the second MainFunction on both IdsR and Dem
        45: Ninth and Tenth Main Function Call
        46: VP: Check for all added frames transmission
        47: Flushing All saved buffers and empty stack trace
        48: Set maximum number of Context data buffers to make it full and expect it will be dropped in TrafficLimitation filter
        49: Report one more event with context data, expect frame to be dropped and IdsMInternalError NoContextDataBuffer to be raised
        50: Set external error event No Context Data Buffer with count=3
        51: Expect IdsMInternalError NoContextDataBuffer to be sent even when TrafficLimitation is not passed since IdsMInternalErrorEvents are not filtered with instance filter
        52: Eleventh MainFunction Call
        53: VP: Check for all added frames transmission
        54: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00801</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00804</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>809</internalId></specobject>
    <specobject>
      <id>IdsM_Test_InternalErrorBusy</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_09_InternalError/source/application/IdsM_Test.c</sourcefile>
      <sourceline>373</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Test reporting internal error event while there are previous one in
        propagation (busy) state
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module.
        02: Define Dem events for IdsM TestFramework.
        03: Set Dem behaviour to Asynchronous.
        04: Set external error event No Event Buffer with count=5 to pass threshold filter, and expect it
        05: Three Main Function Call to pass aggregation filter, Dem_Transmit should be called at last one
        06: Set external error event No Event Buffer with count=3 while the pervious one is being propagated
        07: MainFunction Call
        08: Copy callback for Asynchronous Event
        09: Processed callback for Asynchronous Event
        10: VP: Check for all added frames transmission
        11: Expect second error event No Event Buffer with count=3
        12: Two MainFunction Call to pass aggregation filter, Dem_Transmit should be called at last one
        13: Copy callback for Asynchronous Event
        14: Processed callback for Asynchronous Event
        15: VP: Check for all added frames transmission
        16: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00801</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00804</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>810</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_InternalErrorSignature</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_10_InternalErrorSignature/source/application/IdsM_Test.c</sourcefile>
      <sourceline>51</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        This test verifies the behaviour of internal events in different sinks with filters when signature is enabled.
        Configurations:
            - Buffers:
                - 2 Event Buffers
                - 1 Context Data Buffer with size = 100
            - Events:
                - Normal Event "EV00_No_Filter_IdsRSink" with IdsR sink and no filters.
                - InternalErrorEvent NoContextDataBufferAvailable with IdsR and Dem sink and no filters.
                - InternalErrorEvent TrafficLimitationExceeded with IdsR and Dem sink and no filters.
            - Traffic Filter (max_bytes=125, interval=11) (Note: InternalEventsError bytes are not calculated in traffic filter)

        Procedure:
            - 01-09: Test InternalErrorEvent NoContextDataBufferAvailable both IdsR, Dem sink, and signature
            - 10-15: Test InternalErrorEvent TrafficLimitationExceeded with both IdsR, Dem sink, and signature
            - 16-22: Test InternalErrorEvents with signature will not be filtered with instance filter

    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module.
        02: Define Dem events for IdsM TestFramework.
        03: Set Dem behaviour to Synchronous.
        04: Set signature in TestFramework
        05: Set maximum number of Context data buffers to make it full and expect them with signature
        06: Report one more event with context data, expect context data to be dropped (frame will be sent without context data) and IdsMInternalError NoContextDataBuffer to be raised and sent
        07: First, second, and third Main Function Call to transmit all frames with confirmation
        08: VP: Check for all added frames transmission
        09: Flushing All saved buffers and empty stack trace
        10: Set signature in TestFramework
        11: Set one Security Event to trigger traffic limitation exceeded. Expect it to be signed, then dropped on traffic limitation filter
        12: Expect IdsMInternalEvent TrafficExceeded will be raised and sent on the second MainFunction on both IdsR and Dem with signature
        13: Fourth and Fifth Main Function Call, and confirm If PduR transmission
        14: VP: Check for all added frames transmission
        15: Flushing All saved buffers and empty stack trace
        16: Set signature in TestFramework
        17: Set maximum number of Context data buffers to make it full and expect it to be signed, then dropped in TrafficLimitation filter
        18: Report one more event with context data, expect context data will be dropped, IdsMInternalError NoContextDataBuffer to be raised, frame will be signed, then dropped in traffic limitation filter
        19: Expect IdsMInternalError NoContextDataBuffer to be sent even when TrafficLimitation is not passed since IdsMInternalErrorEvents are not filtered with instance filter
        20: Sixth MainFunction Call, and confirm If PduR transmission
        21: VP: Check for all added frames transmission
        22: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00801</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00804</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>811</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_TxConf_TimerOFF</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_11_TxConf_TimerOFF/source/application/IdsM_Test.c</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test Verifies the functionality of TxConfirmation, the Module
    shall not Propagate any frames unless the Previous Frame was Confirmed
    to be sent successfully, without caring about
     IdsMTxConfirmationTimeout Value.
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace
        02: Initialize IdsM
        03: Setting 5 security events
        04: event is expected to be sent with count 1 (Default) and NO data as the 1st event for Sampling Filter
        05: First Main Function Call
        06: VP: check for all added frames transmission
        07: expect event to be sent EV01 with count=1 (Default)
        08: Confirm that past frame was sent successfully
        09: Second Main Function Call
        10: VP: Check that the frame was sent successfully AFTER Confirmation
        11: expect event to be sent EV01 with
        12: VP: Check that NO Frame Was sent since NO Confirmation
        13: Confirm that past frame was sent successfully
        14: Main Function Call
        15: Check that the frame was Sent Successfully
  
Test Input: 
  
Test Output: 
      Test passing if the sent data matches the context data given, failing otherwise
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01499</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>812</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_TxConf_TimerON</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_12_TxConf_TimerON/source/application/IdsM_Test.c</sourcefile>
      <sourceline>36</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test Verifies the functionality of TxConfirmation, the Module
    shall not Propagate any frames unless the Previous Frame was Confirmed
    to be sent successfully, OR it reaches the IdsMTxConfirmationTimeout Limit.
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace
        02: Initialize IdsM
        03: Setting 5 security events
        04: event is expected to be sent with count 1 (Default) and NO data as the 1st event for Sampling Filter
        05: First Main Function Call
        06: VP: check for all added frames transmission
        07: expect event to be sent EV01 with count=1 (Default)
        08: Confirm that past frame was sent successfully
        09: Second Main Function Call
        10: VP: Check that the frame was sent successfully AFTER Confirmation
        11: expect event to be sent EV01 with
        12: VP: Check that NO Frame Was sent since NO Confirmation
        13: Main Function Call
        14: Check that the frame was Sent Successfully
  
Test Input: 
  
Test Output: 
      Test passing if the sent data matches the context data given, failing otherwise
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01499</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01500</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>813</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_DET_ALREADY_INITIALIZED</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_13_DET/source/application/IdsM_Test.c</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test verifies the behavior IdsM module when initialized
      more than one time, it shall produce error msg "IDSM_E_ALREADY_INITIALIZED "
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
    01: Clear DET error count
    02: Initialize the IdsM
    03: ReInitialize the IdsM
    04: VP: Check for Error message IDSM_E_ALREADY_INITIALIZED
  
Test Input: 
  
Test Output: 
      Test passing if the sent data matches the context data given, failing otherwise
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00202</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Server.Acess.OfBSW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>814</internalId></specobject>
    <specobject>
      <id>IdsM_Test_DET_UNINIT</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_13_DET/source/application/IdsM_Test.c</sourcefile>
      <sourceline>118</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test verifies the behavior IdsM module when calling any
      API - Other than IdsM_Init() or IdsM_GetVersionInfo() - before
      initializing the module
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
    01: Clear DET error count
    02: Call IdsM_GetVersionInfo()
    03: VP: Check that no DET was set
    04: Call IdsM_SetSecurityEvent()
    05: VP: Check for Error msg IDSM_E_PARAM_UNINT
    06: Clear DET error count
    07: Call IdsM_SetSecurityEventWithContextData()
    08: VP: Check for Error msg IDSM_E_PARAM_UNINT
    10: Clear DET error count
    11: Call IdsM_SetSecurityEventWithCount()
    12: VP: Check for Error msg IDSM_E_PARAM_UNINT
    13: Clear DET error count
    14: Call IdsM_SetSecurityEventWithCountContextData()
    15: VP: Check for Error msg IDSM_E_PARAM_UNINT
    16: Clear DET error count
    17: Call IdsM_SetSecurityEventWithTimestampCount()
    18: VP: Check for Error msg IDSM_E_PARAM_UNINT
    19: Clear DET error count
    20: Call IdsM_SetSecurityEventWithTimestampCountContextData()
    21: VP: Check for Error msg IDSM_E_PARAM_UNINT
    22: Clear DET error count
    23: Call IdsM_SetExtSecurityEventWithTimestampCount()
    24: VP: Check for Error msg IDSM_E_PARAM_UNINT
    25: Clear DET error count
    26: Call IdsM_SetExtSecurityEventWithTimestampCount() with internal error event
    27: VP: Check for Error msg IDSM_E_PARAM_UNINT
    28: Clear DET error count
    29: Call IdsM_SetExtSecurityEventWithTimestampCountContextData()
    30: VP: Check for Error msg IDSM_E_PARAM_UNINT
    31: Clear DET error count
    32: Call IdsM_MainFunction()
    33: VP: Check for Error msg IDSM_E_PARAM_UNINT
    34: Clear DET error count
    35: Call IdsM_CopyTxData()
    36: VP: Check for Error msg IDSM_E_PARAM_UNINT
    37: Clear DET error count
    38: Call IdsM_TpTxConfirmation()
    39: VP: Check for Error msg IDSM_E_PARAM_UNINT
    40: Clear DET error count
    41: Call IdsM_RequestTransmission()
    42: VP: Check for Error msg IDSM_E_PARAM_UNINT
    43: Clear DET error count
    44: Call IdsM_TxConfirmation()
    45: VP: Check for Error msg IDSM_E_PARAM_UNINT
    46: Clear DET error count
    47: Call IdsM_DemCopyData()
    48: VP: Check for Error msg IDSM_E_PARAM_UNINT
    49: Clear DET error count
    50: Call IdsM_DemReleaseBuffer()
    51: VP: Check for Error msg IDSM_E_PARAM_UNINT
    52: Clear DET error count
    53: Call IdsM_Dcm_SetReportingMode_Start()
    54: VP: Check for Error msg IDSM_E_PARAM_UNINT
    55: Clear DET error count
    56: Call IdsM_Dcm_GetReportingMode_Start()
    57: VP: Check for Error msg IDSM_E_PARAM_UNINT
    58: Clear DET error count
    59: Call IdsM_Dcm_GetReportingMode_RequestResults()
    60: VP: Check for Error msg IDSM_E_PARAM_UNINT
    61: Clear DET error count
    62: Call IdsM_NvM_ReportingMode_Callback()
    63: VP: Check for Error msg IDSM_E_PARAM_UNINT
  
Test Input: 
  
Test Output: 
      Test passing if the sent data matches the context data given, failing otherwise
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Server.Acess.OfBSW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>815</internalId></specobject>
    <specobject>
      <id>IdsM_Test_DET_PARAM_INVALID</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_13_DET/source/application/IdsM_Test.c</sourcefile>
      <sourceline>466</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test verifies the behaviour of IdsM_SetSecurityEvent APIs
      when passed Invalid paramater (Event ID or Count = 0), it shall
      produce IDSM_E_PARAM_INVALID error message.
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
        01: Initialize the IdsM
        02: Clear DET error count
        03: Call IdsM_setSecurityEvent()
        04: VP: Check for Error msg IDSM_E_PARAM_INVALID
        05: Clear DET error count
        06: Call IdsM_SetSecurityEventWithContextData()
        07: VP: Check for Error msg IDSM_E_PARAM_INVALID
        08: Clear DET error count
        09: Call IdsM_SetSecurityEventWithCount()
        10: VP: Check for Error msg IDSM_E_PARAM_INVALID
        07: Clear DET error count
        08: Call IdsM_SetSecurityEventWithCountContextData()
        09: VP: Check for Error msg IDSM_E_PARAM_INVALID
        10: Clear DET error count
        11: Call IdsM_SetSecurityEventWithTimestampCount()
        12: VP: Check for Error msg IDSM_E_PARAM_INVALID
        13: Clear DET error count
        14: Call IdsM_SetSecurityEventWithTimestampCountContextData()
        15: VP: Check for Error msg IDSM_E_PARAM_INVALID
        16: Clear DET error count
        17: Call IdsM_SetExtSecurityEventWithTimestampCount_API()
        18: VP: Check for Error msg IDSM_E_PARAM_INVALID
        19: Clear DET error count
        20: Call IdsM_SetExtSecurityEventWithTimestampCountContextData()
        21: VP: Check for Error msg IDSM_E_PARAM_INVALID
        22: Clear DET error count
        23: Call IdsM_SetSecurityEventWithCount()
        24: VP: Check for Error msg IDSM_E_PARAM_INVALID
        25: Clear DET error count
        26: Call IdsM_SetSecurityEventWithCountContextData()
        27: VP: Check for Error msg IDSM_E_PARAM_INVALID
        28: Clear DET error count
        29: Call IdsM_SetSecurityEventWithTimestampCount()
        30: VP: Check for Error msg IDSM_E_PARAM_INVALID
        31: Clear DET error count
        32: Call IdsM_SetSecurityEventWithTimestampCountContextData()
        33: VP: Check for Error msg IDSM_E_PARAM_INVALID
        34: Clear DET error count
        35: Call IdsM_SetExtSecurityEventWithTimestampCount_API()
        36: VP: Check for Error msg IDSM_E_PARAM_INVALID
        37: Clear DET error count
        38: Call IdsM_SetExtSecurityEventWithTimestampCountContextData_API()
        39: VP: Check for Error msg IDSM_E_PARAM_INVALID
        40: Clear DET error count
        41: Call IdsM_RequestTransmission()
        42: VP: Check for Error msg IDSM_E_PARAM_INVALID
  
Test Input: 
  
Test Output: 
      Test passing if the sent data matches the context data given, failing otherwise
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00604</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Server.Acess.OfBSW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.WrongParameters</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>816</internalId></specobject>
    <specobject>
      <id>IdsM_Test_DET_PARAM_POINTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_13_DET/source/application/IdsM_Test.c</sourcefile>
      <sourceline>771</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
      This test verifies the behavoir of IdsM_SetSecurityEvent APIs
      when passed NULL_PTR instead of context data, it shall produce
      IDSM_E_PARAM_POINTER error message.
  
Test Object: 
  
Test Precondition: None.
Test Execution: 
    01: Initialize the IdsM
    02: Clear DET error count
    03: Call IdsM_setSecurityEventWithContextData()
    04: VP: Check for Error msg IDSM_E_PARAM_POINTER
    05: Clear DET error count
    06: Call IdsM_SetSecurityEventWithCountContextData
    07: VP: Check for Error msg IDSM_E_PARAM_POINTER
    08: Clear DET error count
    09: Call IdsM_SetSecurityEventWithTimestampCountContextData
    10: VP: Check for Error msg IDSM_E_PARAM_POINTER
    11: Clear DET error count
    12: Call IdsM_SetExtSecurityEventWithTimestampCountContextData_API
    13: VP: Check for Error msg IDSM_E_PARAM_POINTER
    14: Clear DET error count
    15: Call IdsM_setSecurityEventWithContextData()
    16: VP: Check for Error msg IDSM_E_PARAM_POINTER
    17: Clear DET error count
    18: Call IdsM_CopyTxData() with pduInfoPtr NULL_PTR
    19: VP: Check for Error msg IDSM_E_PARAM_POINTER
    20: Clear DET error count
    21: Call IdsM_CopyTxData() with availableDataPtr NULL_PTR
    22: VP: Check for Error msg IDSM_E_PARAM_POINTER
    23: Clear DET error count
    24: Call IdsM_DemCopyData() with demBufferPtr NULL_PTR
    25: VP: Check for Error msg IDSM_E_PARAM_POINTER
    26: Clear DET error count
    27: Call IdsM_Dcm_SetReportingMode_Start() with errorCode NULL_PTR
    28: VP: Check for Error msg IDSM_E_PARAM_POINTER
    29: Clear DET error count
    30: Call IdsM_Dcm_GetReportingMode_Start() with errorCode NULL_PTR
    31: VP: Check for Error msg IDSM_E_PARAM_POINTER
    32: Clear DET error count
    33: Call IdsM_Dcm_GetReportingMode_RequestResults() with errorCode NULL_PTR
    34: VP: Check for Error msg IDSM_E_PARAM_POINTER
    35: Clear DET error count
    36: Call IdsM_Dcm_GetReportingMode_RequestResults() with outReportingMode NULL_PTR
    37: VP: Check for Error msg IDSM_E_PARAM_POINTER
  
Test Input: 
  
Test Output: 
      Test passing if the sent data matches the context data given, failing otherwise
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Server.Acess.OfBSW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>817</internalId></specobject>
    <specobject>
      <id>IdsM_Test_DET_PARAM_LENGTH</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_13_DET/source/application/IdsM_Test.c</sourcefile>
      <sourceline>993</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: None.
Test Object: 
  
Test Precondition: None.
Test Execution: 
    01: Initialize the IdsM
    02: Clear DET error count
    03: Call IdsM_setSecurityEventWithContextData()
    04: VP: Check for Error msg IDSM_E_PARAM_POINTER
    05: Clear DET error count
    06: Call IdsM_SetSecurityEventWithCountContextData
    07: VP: Check for Error msg IDSM_E_PARAM_POINTER
    08: Clear DET error count
    09: Call IdsM_SetSecurityEventWithTimestampCountContextData
    10: VP: Check for Error msg IDSM_E_PARAM_POINTER
    11: Clear DET error count
    12: Call IdsM_SetExtSecurityEventWithTimestampCountContextData_API
    13: VP: Check for Error msg IDSM_E_PARAM_POINTER
  
Test Input: 
  
Test Output: 
      Test passing if the sent data matches the context data given, failing otherwise
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>176</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>177</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Server.Acess.OfBSW</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>818</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_GetVersionInfo</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_14_Basic/source/application/IdsM_Test.c</sourcefile>
      <sourceline>35</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
		This test verifies the behavior of IdsM_GetVersionInfo, it should return
        correct version.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module
        02: Call IdsM_GetVersionInfo()
        03: Expect IdsM_GetVersionInfo() to return correct version
        04: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>819</internalId></specobject>
    <specobject>
      <id>IdsM_Test_BulkTransmission</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_14_Basic/source/application/IdsM_Test.c</sourcefile>
      <sourceline>95</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
		This test verifies the behavior that IdsM can transmit more than one frame in MainFunction without waiting
        for TxConfirmation when BulkTransmission is enabled.
        When the limit of BulkTransmission is reached, the remaining frames are sent in the subsequent MainFunctions.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module
        02: Report 5 security events and expect all of them to be transmitted
        03: First MainFunction call
        04: Expect only 3 events to be propagated in the first MainFunction because BulkTransmission = 3
        05: Second MainFunction call
        06: Expect remaining 2 frames to be propagated
        07: VP: Check for all added frames transmission
        08: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.IfBulkTransmission</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>820</internalId></specobject>
    <specobject>
      <id>IdsM_Test_NegativeInternalErrorEvents</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_14_Basic/source/application/IdsM_Test.c</sourcefile>
      <sourceline>171</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
		This test verifies that InternalErrorEvents are not propagated if they are not configured, even when they occur.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module
        02: Set security event with context data and expect it
        03: Set four more security events to use all configured buffers. Don't expect any of them since they will be dropped in Traffic Limitation Filter. No InternalErrorEvent TrafficLimitationExceeded since it is not configured
        04: Set security event with context data (There are no buffers). InternalErrorEvents NoEventBufferAvailable and NoContextDataBufferAvailable shouldn't be raised since they are not configured
        05: Call many MainFunction to make sure InternalErrorEvents are not transmitted
        06: VP: Check for all added frames transmission
        07: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00802</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>821</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_Long_ContextData</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_15_LongCD/source/application/IdsM_Test.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        This test verifies the behavior of the IdsM long context data frames.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace
        02: Initialize IdsM
        03: Send a security event with Count 1 and ContextDataA with size 140
        04: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK with count 1 and ContextDataA with size 140
        05: First Main Function Call
        06: VP: Check for all added frames transmission
        07: Send a security event with Count 1 and ContextDataA with size 5
        08: Event is expected to be added in to the global array for IDSM TEST FRAMEWORK with count 1 and ContextDataA with size 5
        09: First Main Function Call
        10: VP: Check for all added frames transmission
        11: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>822</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Long_ContextDataModifier</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_15_LongCD/source/application/IdsM_Test.c</sourcefile>
      <sourceline>149</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        This test verifies the behavior of the IdsM long context data frames with context data modifier.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace
        02: Initialize IdsM
        03: Report SEv with CD size = 117, expect modified CD should be 127 and encoded in CD length is encoded in 1 byte
        04: Call Mainfunction to transmit QSEv
        05: VP: Check for all added frames transmission
        06: Report SEv with CD size = 125, expect modified CD should be 130 and encoded in CD length is encoded in 4 byte
        07: Call Mainfunction to transmit QSEv
        08: VP: Check for all added frames transmission
        09: Report SEv with CD size = 130, expect modified CD should be 135 and encoded in CD length is encoded in 4 byte
        10: Report SEv with CD size = 140, expect SEv to not be saved in buffers as there are no Event Buffer available neither nor CD buffer
        11: Expect two internal Event buffers to be triggered (NO_EVENT_BUFFER_AVAILABLE and NO_CONTEXT_DATA_BUFFER_AVAILABLE)
        12: First Expect (NO_EVENT_BUFFER_AVAILABLE)
        13: Second Expect (NO_CONTEXT_DATA_BUFFER_AVAILABLE) with CD size = 145U
        14: Call Mainfunction to transmit QSEv
        15: VP: Check for all added frames transmission.
        16: Report SEv with CD size = 70, expect modified CD should be 72 and encoded in CD length is encoded in 4 byte
        17: Report SEv with CD size = 100, expect SEv to not be saved in buffers as there are no Event Buffer available neither nor CD buffer
        18: Expect two internal Event buffers to be triggered (NO_EVENT_BUFFER_AVAILABLE and NO_CONTEXT_DATA_BUFFER_AVAILABLE)
        19: First Expect (NO_EVENT_BUFFER_AVAILABLE)
        20: Second Expect (NO_CONTEXT_DATA_BUFFER_AVAILABLE) with no CD, as the CD is removed in the CDM callout
        21: Call Mainfunction to transmit QSEv
        22: VP: Check for all added frames transmission
        23: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00750</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00751</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00752</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_91033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>823</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_Error_Hook_Reporting</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_16_ReportingHook/source/application/IdsM_Test.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        This test verifies the behaviour of reporting SEV from System error hooks , it runs in single core.
        The test uses the Os_Stubs and and changes in return value of GetApplicationID() to return OsApplication Id (-1)
        to be treated as Invalid OsApplication_Id in both types of OS (safety_Os and Autocore_Os).
        The reported SVE from Error Hook should be propagated from the Master.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module.
        02: Send a security event with contextDataD with size 3
        03: Event is expected to be sent with count 1 and context data D with size 3 from the master
        04: Change the current application_Id to be invalid to simulate hook
        05: Send a security event from invalid Os App (Os Hook), and expect it
        06: return the current application_Id to be 0
        07: Main Function Call
        08: VP: Check for all added frames transmission
        09: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions.OsHooks</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>824</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_BootConnect</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_17_BootConnect/source/application/IdsM_Test.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        Tests IdsMBootConnect in bootloader project for events with Dem sink that qualified events
        should be saved as records in NvRam. It also tests maxRecords to be saved per event, and
        dropping of QSEvs when NvRam is full.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module.
        02: Set security event and expect it to be written in NvRam.
        03: Event should be written in NvRam inside this MainFunction
        04: Set security event EV01 and expect it to be written in NvRam
        05: Set security event EV00 and expect it to be written in NvRam
        06: Set security event EV00 but max records is reached, so event will be dropped
        07: Events should be written in NvRam inside this MainFunction
        08: Set security event EV00 to make sure that event will still drop in a new MainFunction due to max records is reached
        09: Set security event EV02 and it should go to aggregation filter
        10: Third MainFunction call
        11: Set security event EV02 and expect it to be written in NvRam in the end of aggregation cycle
        12: Event should be written in NvRam inside this MainFunction
        13: Set security event EV01 and expect it to be dropped as NvRam don't have enough size
        14: MainFunction call
        15: VP: Check for all added frames to be written in NvRam
        16: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.BootNvMBlockValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnectMaxRecords</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Check.BootNvMBlockName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>825</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_Changing_Reporting_Mode_Simple</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_18_ReportingModeDcm/source/application/IdsM_Test.c</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        The Dcm calls IdsM_Dcm_SetReportingMode_Start() for ev_00 with IDSM_REPORTING_MODE_OFF and repeats
        the call with Opstatus DCM_E_PENDING till Nv block is written successfully.
        The Dcm calls IdsM_Dcm_GetReportingMode_Start() for ev_00 , E_OK is returned.
        The Dcm calls IdsM_Dcm_GetReportingMode_RequestResults() for ev_00 , E_OK is returned and IDSM_REPORTING_MODE_OFF is returned.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module
        02: Clear test framework Ram Block
        03: Initialize the test framework Ram Block and IdsM_NvMRamBlockData
        04: Set the return value for NvM_GetErrorStatus to E_OK
        05: Set the NvM_GetErrorStatus RequestResultPtr to NVM_REQ_OK, NvM_Readall() will call the callback function for IdsM_NvMDataBlock
        06: Initialize IdsM module
        07: Report SEv IdsMConf_EV00 with count 3
        08: Expect a frame to be propagated as Reporting_Mode = IDSM_REPORTING_MODE_DETAILED_BYPASSING_FILTERS
        09: Call IdsM_MainFunction
        10: VP: Check for all added frames transmission
        11: Queue the NvM write request and return E_OK
        12: Update test framework Ram Block
        13: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_OFF and Opstatus equals DCM_INITIAL
        14: Expect IdsM_Dcm_SetReportingMode_Start to return DCM_E_PENDING
        15: Check the Ram Block has been updated
        16: Report SEv IdsMConf_EV00 with count 4 ,expect to be dropped
        17: Call IdsM_MainFunction
        18: VP: Check for all added frames transmission
        19: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_OFF and Opstatus equals DCM_PENDING
        20: Expect IdsM_Dcm_SetReportingMode_Start to return DCM_E_PENDING
        21: Nv block callBack function notifies that write request is finished successfully
        22: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_OFF and Opstatus equals DCM_PENDING
        23: Expect IdsM_Dcm_SetReportingMode_Start to return E_OK
        24: Dcm calls IdsM_Dcm_GetReportingMode_Start for IdsMConf_EV00 with Opstatus equals DCM_INITIAL
        25: Expect IdsM_Dcm_GetReportingMode_Start to return E_OK
        26: Dcm calls IdsM_Dcm_GetReportingMode_RequestResults for IdsMConf_EV01 with Opstatus equals DCM_INITIAL
        27: Expect IdsM_Dcm_GetReportingMode_RequestResults to return E_OK
        28: Expect IdsM_Dcm_GetReportingMode_RequestResults to return ReportingMode_Out EQUALS IDSM_REPORTING_MODE_OFF
        29: Report SEv IdsMConf_EV00 with count 3
        30: Call IdsM_MainFunction
        31: Check all Ram block
        32: VP: Check for all added frames transmission
        33: Flushing All saved buffers and empty stack trace
        34: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01700</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01701</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01703</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01705</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01706</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01800</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01900</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01901</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02000</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>166</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_02002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>826</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Changing_Reporting_Mode_success</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_18_ReportingModeDcm/source/application/IdsM_Test.c</sourcefile>
      <sourceline>349</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        This test verifies the behavior of the Changing of reporting mode :
        where IdsM_Dcm_SetReportingMode_Start is called for Ev_0 and the Dcm
        continue repeating this call and also request the same routine for Ev_1
        and calls IdsM_Dcm_GetReportingMode_Start and IdsM_Dcm_GetReportingMode_RequestResults for
        both events before the NvM Callback is called.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module
        02: Clear test framework Ram Block
        03: Initialize the test framework Ram Block and IdsM_NvMRamBlockData
        04: Set the return value for NvM_GetErrorStatus to E_OK
        05: Set the NvM_GetErrorStatus RequestResultPtr to NVM_REQ_OK
        06: Initialize IdsM module
        07: Report SEv IdsMConf_EV00 with count 3
        08: Expect a frame to be propagated as Reporting_Mode = IDSM_REPORTING_MODE_DETAILED_BYPASSING_FILTERS
        09: Call IdsM_MainFunction
        10: VP: Check for all added frames transmission
        11: Queue the NvM write request and return E_OK
        12: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_OFF and Opstatus equals DCM_INITIAL
        13: Expect IdsM_Dcm_SetReportingMode_Start to return DCM_E_PENDING
        14: Update test framework Ram Block
        15: Check the Ram Block has been updated
        16: Report SEv IdsMConf_EV00 with count 4 ,expect to be dropped
        17: Call IdsM_MainFunction
        18: VP: Check for all added frames transmission
        19: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_OFF and Opstatus equals DCM_PENDING
        20: Expect IdsM_Dcm_SetReportingMode_Start to return DCM_E_PENDING
        21: Send a security event IdsMConf_EV01 with count 4 and context data A with size 4
        22: Expect a frame to be propagated as Reporting_Mode = IDSM_REPORTING_MODE_DETAILED_BYPASSING_FILTERS
        23: Call IdsM_MainFunction
        24: VP: Check for all added frames transmission
        25: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_OFF and Opstatus equals DCM_PENDING
        26: Expect IdsM_Dcm_SetReportingMode_Start to return DCM_E_PENDING
        27: Dcm calls IdsM_Dcm_GetReportingMode_Start for IdsMConf_EV00 with Opstatus equals DCM_INITIAL
        28: Expect IdsM_Dcm_GetReportingMode_Start to return E_NOT_OK as SetReportingMode_Start still pending
        29: Expect IdsM_Dcm_GetReportingMode_RequestResults to set error code to DCM_E_GENERALPROGRAMMINGFAILURE
        30: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with Opstatus equals DCM_INITIAL
        31: Expect IdsM_Dcm_SetReportingMode_Start to return E_NOT_OK as there is SetReportingMode_Start routine still pending
        32: Expect IdsM_Dcm_SetReportingMode_Start to set error code to DCM_E_GENERALPROGRAMMINGFAILURE
        33: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with Opstatus equals DCM_CANCEL but with incorrect reporting mode
        34: Expect IdsM_Dcm_SetReportingMode_Start to return E_NOT_OK as there is reporting mode is not similar to initial request
        35: Expect IdsM_Dcm_SetReportingMode_Start to set error code to DCM_E_GENERALPROGRAMMINGFAILURE
        36: Expect no change in Ram block
        37: Dcm calls IdsM_Dcm_GetReportingMode_RequestResults for IdsMConf_EV00 with Opstatus equals DCM_INITIAL
        38: Expect IdsM_Dcm_GetReportingMode_RequestResults to return E_NOT_OK as SetReportingMode_Start still pending
        39: Expect IdsM_Dcm_GetReportingMode_RequestResults to set error code to DCM_E_GENERALPROGRAMMINGFAILURE
        40: Call IdsM_MainFunction
        41: Dcm calls IdsM_Dcm_GetReportingMode_Start for IdsMConf_EV01 with Opstatus equals DCM_INITIAL
        42: Expect IdsM_Dcm_GetReportingMode_Start to return E_OK
        43: Call IdsM_MainFunction
        44: VP: Check for all added frames transmission
        45: Dcm calls IdsM_Dcm_GetReportingMode_RequestResults for IdsMConf_EV01 with Opstatus equals DCM_INITIAL
        46: Expect IdsM_Dcm_GetReportingMode_RequestResults to return ReportingMode_Out equals IDSM_REPORTING_MODE_DETAILED_BYPASSING_FILTERS
        47: Expect IdsM_Dcm_GetReportingMode_RequestResults to return E_OK
        48: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV01 with Opstatus equals DCM_INITIAL
        49: Expect IdsM_Dcm_SetReportingMode_Start to return E_NOT_OK
        50: Expect IdsM_Dcm_SetReportingMode_Start to set error code to DCM_E_GENERALPROGRAMMINGFAILURE
        51: Expect no change in Ram block
        52: Nv block callBack function notifies that write request is finished successfully
        53: Report SEv IdsMConf_EV00 with count 3 and should be dropped
        54: Call IdsM_MainFunction
        55: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_OFF and Opstatus equals DCM_PENDING
        56: Expect IdsM_Dcm_SetReportingMode_Start to return E_OK , as NvM Block write request is finished successfully
        57: Dcm calls IdsM_Dcm_GetReportingMode_Start for IdsMConf_EV00 with Opstatus equals DCM_INITIAL
        58: Expect IdsM_Dcm_GetReportingMode_Start to return E_OK
        59: Dcm calls IdsM_Dcm_GetReportingMode_RequestResults for IdsMConf_EV00 with Opstatus equals DCM_INITIAL
        60: Expect IdsM_Dcm_GetReportingMode_RequestResults to return ReportingMode_Out EQUALS IDSM_REPORTING_MODE_OFF
        61: Expect IdsM_Dcm_GetReportingMode_RequestResults to return E_OK
        62: Send a security event IdsMConf_EV01 with count 5 and context data A with size 5
        63: Expect a frame to be propagated as Reporting_Mode = IDSM_REPORTING_MODE_DETAILED_BYPASSING_FILTERS
        64: Call IdsM_MainFunction
        65: VP: Check for all added frames transmission
        66: Check all Ram block
        67: Flushing All saved buffers and empty stack trace
        68: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01700</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01701</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01703</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01705</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01706</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01800</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01904</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01901</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>827</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Changing_Reporting_Mode_NvM_Failure</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_18_ReportingModeDcm/source/application/IdsM_Test.c</sourcefile>
      <sourceline>705</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        This test verifies the behavior of changing the reporting mode when the Nvm fails in
        writing and when Nvm reject the request when its internal queue is full.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module
        02: Clear test framework Ram Block
        03: Set the return value for NvM_GetErrorStatus to E_OK
        04: Set the NvM_GetErrorStatus RequestResultPtr to NVM_REQ_NOT_OK, NvM_Readall() will fails in reading IdsM_NvMDataBlock , so the values will be invalid
        05: Initialize IdsM module
        06: Initialize the NvM Block to be loaded from ROM, and change FLS accordingly to be able to compare it with Ram contents
        07: Send a security event with count 4 and context data A with size 4
        08: Expect a frame to be propagated as Reporting_Mode = IDSM_REPORTING_MODE_DETAILED_BYPASSING_FILTERS
        09: Send a security event with count 5 and context data B with size 5
        10: Expect a frame to be propagated as Reporting_Mode = IDSM_REPORTING_MODE_DETAILED_BYPASSING_FILTERS
        11: Call IdsM_MainFunction
        12: VP: Check for all added frames transmission
        13: Update test framework Ram Block
        14: Queue the NvM write request and return E_OK
        15: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_BRIEF_BYPASSING_FILTERS and Opstatus equals DCM_INITIAL
        16: Expect IdsM_Dcm_SetReportingMode_Start to return DCM_E_PENDING
        17: Check the Ram Block has been updated
        18: Send a security event with count 4 and context data A with size 4
        19: Expect a frame to be propagated as Reporting_Mode = IDSM_REPORTING_MODE_BRIEF_BYPASSING_FILTERS
        20: Call IdsM_MainFunction
        21: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_BRIEF_BYPASSING_FILTERS and Opstatus equals DCM_PENDING
        22: Expect IdsM_Dcm_SetReportingMode_Start to return DCM_E_PENDING
        23: Update test framework Ram Block
        24: Nv block callBack function notifies that write request is finished unsuccessfully
        25: Check the Ram Block to be Reverted
        26: Send a security event with count 2 and context data A with size 2
        27: Expect a frame to be propagated as Reporting_Mode = IDSM_REPORTING_MODE_DETAILED_BYPASSING_FILTERS
        28: Call IdsM_MainFunction
        29: Dcm calls IdsM_Dcm_GetReportingMode_Start for IdsMConf_EV00 with Opstatus equals DCM_INITIAL
        30: Expect IdsM_Dcm_GetReportingMode_Start to return E_NOT_OK as SetReportingMode_Start still pending
        31: Expect IdsM_Dcm_GetReportingMode_RequestResults to set error code to DCM_E_GENERALPROGRAMMINGFAILURE
        32: Expect no change in Ram block
        33: Dcm calls IdsM_Dcm_GetReportingMode_RequestResults for IdsMConf_EV00 with Opstatus equals DCM_INITIAL
        34: Expect IdsM_Dcm_GetReportingMode_RequestResults to return E_NOT_OK as SetReportingMode_Start still pending
        35: Expect IdsM_Dcm_GetReportingMode_RequestResults to return DCM_E_GENERALPROGRAMMINGFAILURE as SetReportingMode_Start still pending
        36: Dcm calls IdsM_Dcm_GetReportingMode_Start for IdsMConf_EV01 with Opstatus equals DCM_INITIAL
        37: Expect IdsM_Dcm_GetReportingMode_Start to return E_OK
        38: Dcm calls IdsM_Dcm_GetReportingMode_RequestResults for IdsMConf_EV01 with Opstatus equals DCM_INITIAL
        39: Expect IdsM_Dcm_GetReportingMode_RequestResults to return ReportingMode_Out equals IDSM_REPORTING_MODE_DETAILED_BYPASSING_FILTERS
        40: Expect IdsM_Dcm_GetReportingMode_RequestResults to return E_OK
        41: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV01 with Opstatus equals DCM_INITIAL
        42: Expect IdsM_Dcm_SetReportingMode_Start to return E_NOT_OK as there is SetReportingMode_Start routine still pending
        43: Expect IdsM_Dcm_SetReportingMode_Start to set error code to DCM_E_GENERALPROGRAMMINGFAILURE
        44: Expect no change in Ram block
        45: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_BRIEF_BYPASSING_FILTERS and Opstatus equals DCM_PENDING
        46: Expect IdsM_Dcm_SetReportingMode_Start to return  E_NOT_OK , as NvM Block write request is finished unsuccessfully
        47: Expect IdsM_Dcm_SetReportingMode_Start to set error code to DCM_E_GENERALPROGRAMMINGFAILURE
        48: Expect no change in Ram block
        49: Sending another setReportingMode request after Failed request and expecting it to be accepted and processed
        50: Queue the NvM write request and return E_OK
        51: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_BRIEF_BYPASSING_FILTERS and Opstatus equals DCM_INITIAL
        52: Update test framework Ram Block
        53: Expect IdsM_Dcm_SetReportingMode_Start to return DCM_E_PENDING
        54: Check the Ram Block has been updated
        55: Nv block callBack function notifies that write request is finished Successfully
        56: Send a security event with count 6 and context data A with size 6
        57: Expect a frame to be propagated but without context data as Reporting_Mode = IDSM_REPORTING_MODE_BRIEF_BYPASSING_FILTERS
        58: Call IdsM_MainFunction, and don't expect any frame as reporting mode has been changed Successfully
        59: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_BRIEF_BYPASSING_FILTERS and Opstatus equals DCM_PENDING
        60: Expect IdsM_Dcm_SetReportingMode_Start to return E_OK
        61: VP: Check for all added frames transmission
        62: Check all Ram block
        63: NvM will reject the write request and return E_NOT_OK
        64: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with Opstatus equals DCM_INITIAL
        65: Expect IdsM_Dcm_SetReportingMode_Start to return E_NOT_OK as NvM rejected the write request
        66: Expect IdsM_Dcm_SetReportingMode_Start to set error code to DCM_E_GENERALPROGRAMMINGFAILURE
        67: Expect no change in Ram block
        68: Send a security event with count 6 and context data A with size 6
        69: Expect a frame to be propagated as Reporting_Mode = IDSM_REPORTING_MODE_BRIEF_BYPASSING_FILTERS
        70: Call IdsM_MainFunction
        71: VP: Check for all added frames transmission
        72: Check all Ram block
        73: Flushing All saved buffers and empty stack trace
        74: Sending a success message
        73: Update test framework Ram Block
        74: Queue the NvM write request and return E_OK
        75: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV01 with IDSM_REPORTING_MODE_OFF and Opstatus equals DCM_INITIAL
        76: Expect IdsM_Dcm_SetReportingMode_Start to return DCM_E_PENDING
        77: Check the Ram Block has been updated
        78: Send a security event with count 4 and context data A with size 4 and expect it to be dropped
        79: Call IdsM_MainFunction
        80: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV01 with IDSM_REPORTING_MODE_OFF and Opstatus equals DCM_PENDING
        81: Expect IdsM_Dcm_SetReportingMode_Start to return DCM_E_PENDING
        82: Nv block callBack function notifies that write request is finished successfully
        83: Check the Ram Block and Flash block
        84: Send a security event with count 2 and context data A with size 2 and expect it to be dropped
        85: Call IdsM_MainFunction
        86: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV01 with IDSM_REPORTING_MODE_OFF and Opstatus equals DCM_PENDING
        87: Expect IdsM_Dcm_SetReportingMode_Start to return E_OK
        88: VP: Check for all added frames transmission
        89: Check all Ram block
        90: Resetting module and initializing it again, Flushing All saved buffers and empty stack trace
        91: Set the return value for NvM_GetErrorStatus to E_OK
        92: Set the NvM_GetErrorStatus RequestResultPtr to NVM_REQ_OK, NvM_Readall() will call the callback function for IdsM_NvMDataBlock
        93: Initialize IdsM module
        94: Report SEv IdsMConf_EV00 with count 3 and context data
        95: Expect a frame to be propagated without context data as Reporting_Mode = IDSM_REPORTING_MODE_BRIEF_BYPASSING_FILTERS
        96: Call IdsM_MainFunction
        97: VP: Check for all added frames transmission
        98: Flushing All saved buffers and empty stack trace
        99: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01700</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01701</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01702</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01706</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01704</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01900</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01901</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>828</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Changing_Reporting_Mode_Cancel_Routine</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_18_ReportingModeDcm/source/application/IdsM_Test.c</sourcefile>
      <sourceline>1200</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        The Dcm calls IdsM_Dcm_SetReportingMode_Start() for ev_00 then cancel the routine and
        also Nvm succeeded in writing the block the Ram shouldn't be changed.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module
        02: Clear test framework Ram Block
        03: Initialize the test framework Ram Block and IdsM_NvMRamBlockData
        04: Set the return value for NvM_GetErrorStatus to E_OK
        05: Set the NvM_GetErrorStatus RequestResultPtr to NVM_REQ_OK, NvM_Readall() will success for IdsM_NvMDataBlock
        06: Initialize IdsM module
        07: Queue the NvM write request and return E_OK
        08: Update test framework Ram Block
        09: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_BRIEF and Opstatus equals DCM_INITIAL
        10: Expect IdsM_Dcm_SetReportingMode_Start to return DCM_E_PENDING
        11: Check the Ram Block has been updated
        12: Send a security event with count 6 and context data A with size 2
        13: Expect a frame to be propagated as Reporting_Mode = IDSM_REPORTING_MODE_BRIEF
        14: Call IdsM_MainFunction
        15: VP: Check for all added frames transmission
        16: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_BRIEF and Opstatus equals DCM_PENDING
        17: Expect IdsM_Dcm_SetReportingMode_Start to return DCM_E_PENDING
        18: Call IdsM_MainFunction
        19: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_BRIEF and Opstatus equals DCM_CANCEL
        20: Expect IdsM_Dcm_SetReportingMode_Start to return E_OK
        21: Check the Ram Block not changed
        22: Send a security event with count 7 and context data A with size 2
        23: Expect a frame to be propagated as Reporting_Mode = IDSM_REPORTING_MODE_BRIEF
        24: Call IdsM_MainFunction
        25: VP: Check for all added frames transmission
        26: Dcm calls IdsM_Dcm_GetReportingMode_Start for IdsMConf_EV00 with Opstatus equals DCM_INITIAL
        27: Expect IdsM_Dcm_GetReportingMode_Start to return E_NOT_OK and DCM_E_GENERALPROGRAMMINGFAILURE , as NvM hasn't finished processing
        28: Dcm calls IdsM_Dcm_GetReportingMode_RequestResults for IdsMConf_EV00 with Opstatus equals DCM_INITIAL
        29: Expect IdsM_Dcm_GetReportingMode_RequestResults to return E_NOT_OK and DCM_E_GENERALPROGRAMMINGFAILURE
        30: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_BRIEF and Opstatus equals DCM_INITIAL
        31: Expect IdsM_Dcm_SetReportingMode_Start to return E_NOT_OK and DCM_E_GENERALPROGRAMMINGFAILURE ,as NvM hasn't finished processing
        32: Expect no change in Ram block
        33: Send a security event with count 9 and context data A with size 2
        34: Expect a frame to be propagated as Reporting_Mode = IDSM_REPORTING_MODE_BRIEF
        35: Call IdsM_MainFunction
        36: VP: Check for all added frames transmission
        37: Dcm calls IdsM_Dcm_GetReportingMode_Start for IdsMConf_EV01 with Opstatus equals DCM_INITIAL
        38: Expect IdsM_Dcm_GetReportingMode_Start to return E_OK
        39: Dcm calls IdsM_Dcm_GetReportingMode_RequestResults for IdsMConf_EV01 with Opstatus equals DCM_INITIAL
        40: Expect IdsM_Dcm_GetReportingMode_RequestResults to return E_OK
        41: Expect IdsM_Dcm_GetReportingMode_RequestResults to return ReportingMode_Out EQUALS IDSM_REPORTING_MODE_DETAILED_BYPASSING_FILTERS
        42: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV01 with IDSM_REPORTING_MODE_BRIEF and Opstatus equals DCM_INITIAL
        43: Expect IdsM_Dcm_SetReportingMode_Start to return E_NOT_OK and DCM_E_GENERALPROGRAMMINGFAILURE ,as NvM hasn't finished processing
        44: Call IdsM_MainFunction
        45: Expect no change in Ram block
        46: Nv block callBack function notifies that write request is finished successfully
        47: Dcm calls IdsM_Dcm_GetReportingMode_Start for IdsMConf_EV00 with Opstatus equals DCM_INITIAL
        48: Expect IdsM_Dcm_GetReportingMode_Start to return E_OK
        49: Dcm calls IdsM_Dcm_GetReportingMode_RequestResults for IdsMConf_EV01 with Opstatus equals DCM_INITIAL
        50: Expect IdsM_Dcm_GetReportingMode_RequestResults to return E_OK
        51: Expect IdsM_Dcm_GetReportingMode_RequestResults to return ReportingMode_Out EQUALS IDSM_REPORTING_MODE_BRIEF
        52: Send a security event with count 9 and context data A with size 2
        53: Expect a frame to be propagated as Reporting_Mode = IDSM_REPORTING_MODE_BRIEF
        54: Call IdsM_MainFunction
        55: VP: Check for all added frames transmission
        56: Dcm calls IdsM_Dcm_GetReportingMode_Start for IdsMConf_EV00 with Opstatus equals DCM_INITIAL
        57: Dcm calls IdsM_Dcm_GetReportingMode_Start for IdsMConf_EV00 with Opstatus equals DCM_CANCEL
        58: Expect IdsM_Dcm_GetReportingMode_Start to return E_OK
        59: Flushing All saved buffers and empty stack trace
        60: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01702</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01905</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01706</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01800</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01900</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01901</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>829</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Changing_Reporting_Mode_Cancel_Routine_NVM_Failure</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_18_ReportingModeDcm/source/application/IdsM_Test.c</sourcefile>
      <sourceline>1517</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        The Dcm calls IdsM_Dcm_SetReportingMode_Start() for ev_00 then cancel the routine and
        also Nvm fails in writing the block and Ram should be reverted.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module
        02: Clear test framework Ram Block
        03: Initialize the test framework Ram Block and IdsM_NvMRamBlockData
        04: Set the return value for NvM_GetErrorStatus to E_OK
        05: Set the NvM_GetErrorStatus RequestResultPtr to NVM_REQ_OK, NvM_Readall() will success for IdsM_NvMDataBlock
        06: Initialize IdsM module
        07: Queue the NvM write request and return E_OK
        08: Update test framework Ram Block
        09: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_BRIEF and Opstatus equals DCM_INITIAL
        10: Expect IdsM_Dcm_SetReportingMode_Start to return DCM_E_PENDING
        11: Check the Ram Block has been updated
        12: Send a security event with count 6 and context data A with size 2
        13: Expect a frame to be propagated as Reporting_Mode = IDSM_REPORTING_MODE_BRIEF
        14: Call IdsM_MainFunction
        15: VP: Check for all added frames transmission
        16: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_BRIEF and Opstatus equals DCM_PENDING
        17: Expect IdsM_Dcm_SetReportingMode_Start to return DCM_E_PENDING
        18: Call IdsM_MainFunction
        19: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_BRIEF and Opstatus equals DCM_CANCEL
        20: Expect IdsM_Dcm_SetReportingMode_Start to return E_OK
        21: Expect no change in Ram block
        22: Call IdsM_MainFunction
        23: Update test framework Ram Block
        24: Nv block callBack function notifies that write request is finished unsuccessfully
        25: Send a security event with count 6 and context data A with size 3
        26: Expect a frame to be propagated as Reporting_Mode = IDSM_REPORTING_MODE_DETAILED_BYPASSING_FILTERS
        27: Call IdsM_MainFunction
        28: VP: Check for all added frames transmission
        29: Dcm calls IdsM_Dcm_GetReportingMode_Start for IdsMConf_EV00 with Opstatus equals DCM_INITIAL
        30: Expect IdsM_Dcm_GetReportingMode_Start to return E_OK
        31: Dcm calls IdsM_Dcm_GetReportingMode_RequestResults for IdsMConf_EV01 with Opstatus equals DCM_INITIAL
        32: Expect IdsM_Dcm_GetReportingMode_RequestResults to return E_OK
        33: Expect IdsM_Dcm_GetReportingMode_RequestResults to return ReportingMode_Out EQUALS IDSM_REPORTING_MODE_DETAILED_BYPASSING_FILTERS
        34: Check all Ram block
        35: VP: Check for all added frames transmission
        36: Flushing All saved buffers and empty stack trace
        37: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01700</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01701</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01705</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01706</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01800</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01901</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>161</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>830</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Changing_Reporting_Wrong_Parameters</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_18_ReportingModeDcm/source/application/IdsM_Test.c</sourcefile>
      <sourceline>1732</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        This test verifies the behavior of the Changing of reporting mode
        while passing Wrong Parameters for the APIs
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module
        02: Clear test framework Ram Block
        03: Initialize the test framework Ram Block and IdsM_NvMRamBlockData
        04: Initialize IdsM module
        05: Dcm calls IdsM_Dcm_SetReportingMode_Start with Invalid Sensor ID
        06: Expect IdsM_Dcm_SetReportingMode_Start to return E_NOT_OK and DCM_E_REQUESTOUTOFRANGE
        07: Dcm calls IdsM_Dcm_SetReportingMode_Start with Invalid Event ID
        08: Expect IdsM_Dcm_GetReportingMode_Start to return E_NOT_OK and DCM_E_REQUESTOUTOFRANGE
        09: Dcm calls IdsM_Dcm_SetReportingMode_Start with Invalid Reporting mode
        10: Expect IdsM_Dcm_SetReportingMode_Start to return E_NOT_OK and DCM_E_REQUESTOUTOFRANGE
        11: Dcm calls IdsM_Dcm_SetReportingMode_Start with Invalid Opstatus equals DCM_PENDING
        12: Expect IdsM_Dcm_SetReportingMode_Start to return E_NOT_OK and DCM_E_GENERALPROGRAMMINGFAILURE
        13: Dcm calls IdsM_Dcm_SetReportingMode_Start with Invalid Opstatus
        14: Expect IdsM_Dcm_SetReportingMode_Start to return E_NOT_OK and DCM_E_GENERALPROGRAMMINGFAILURE
        15: Dcm calls IdsM_Dcm_GetReportingMode_Start with Invalid Sensor ID
        16: Expect IdsM_Dcm_GetReportingMode_Start to return E_NOT_OK and DCM_E_REQUESTOUTOFRANGE
        17: Dcm calls IdsM_Dcm_GetReportingMode_Start with Invalid Event ID
        18: Expect IdsM_Dcm_GetReportingMode_Start to return E_NOT_OK and DCM_E_REQUESTOUTOFRANGE
        19: Dcm calls IdsM_Dcm_GetReportingMode_Start with Invalid Opstatus equals DCM_PENDING
        20: Expect IdsM_Dcm_GetReportingMode_Start to return E_NOT_OK and DCM_E_GENERALPROGRAMMINGFAILURE
        21: Dcm calls IdsM_Dcm_GetReportingMode_Start with Opstaus DCM_INITIAL
        22: Expect IdsM_Dcm_GetReportingMode_Start to return E_OK
        23: Dcm calls IdsM_Dcm_GetReportingMode_Start with Opstaus DCM_INITIAL for IdsMConf_EV01
        24: Expect IdsM_Dcm_GetReportingMode_Start to return E_NOT_OK and DCM_E_GENERALPROGRAMMINGFAILURE
        25: Dcm calls IdsM_Dcm_GetReportingMode_RequestResults with DCM_PENDING
        26: Expect IdsM_Dcm_GetReportingMode_RequestResults to return E_NOT_OK and DCM_E_GENERALPROGRAMMINGFAILURE
        27: Invalid NvM callback
        28: Dcm calls IdsM_Dcm_GetReportingMode_RequestResults for IdsMConf_EV00 with Opstatus equals DCM_INITIAL
        29: VP: Check for all added frames transmission
        30: Flushing All saved buffers and empty stack trace
        31: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01700</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01902</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01903</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>831</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Changing_Reporting_Cancel_After_Successful_NVM_Write</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_18_ReportingModeDcm/source/application/IdsM_Test.c</sourcefile>
      <sourceline>1924</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        The Dcm calls IdsM_Dcm_SetReportingMode_Start() for ev_00 then cancel the routine and
        after Nvm writes the block.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module
        02: Clear test framework Ram Block
        03: Initialize the test framework Ram Block and IdsM_NvMRamBlockData
        04: Set the return value for NvM_GetErrorStatus to E_OK
        05: Set the NvM_GetErrorStatus RequestResultPtr to NVM_REQ_OK,
        06: Initialize IdsM module
        07: Queue the NvM write request and return E_OK
        08: Update test framework Ram Block
        09: 09: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_BRIEF and Opstatus equals DCM_INITIAL
        10: Expect IdsM_Dcm_SetReportingMode_Start to return DCM_E_PENDING
        11: Nv block callBack function notifies that write request is finished successfully
        12: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with IDSM_REPORTING_MODE_BRIEF and Opstatus equals DCM_INITIAL
        13: Expect IdsM_Dcm_SetReportingMode_Start to return E_OK
        14: Send a security event IdsMConf_EV00 with count 4 and context data A with size 4
        15: Expect a frame to be propagated as Reporting_Mode = IDSM_REPORTING_MODE_BRIEF
        16: Call IdsM_MainFunction
        17: Update test framework Ram Block
        18: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with Opstatus equals DCM_INITIAL
        19: Expect IdsM_Dcm_SetReportingMode_Start to return DCM_E_PENDING
        20: Nv block callBack function notifies that write request is finished successfully
        21: Dcm calls IdsM_Dcm_SetReportingMode_Start for IdsMConf_EV00 with Opstatus equals DCM_PENDING
        22: Expect IdsM_Dcm_SetReportingMode_Start to return E_OK
        23: Send a security event IdsMConf_EV00 with count 4 and context data A with size 4
        24: Call IdsM_MainFunction
        25: Check all Ram block
        26: VP: Check for all added frames transmission
        27: Flushing All saved buffers and empty stack trace
        28: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01700</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01701</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01706</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>832</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_CDM_Addition</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_19_Cdm/source/application/IdsM_Test.c</sourcefile>
      <sourceline>82</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Test global and specific context data modifier when modified size is configured with
        positive value.
        Test CDM when SEvs is reported with/without context data
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module.
        02: Set security event EV00, global CDM should be called, and frame is sent with modified data
        03: VP: Check that global CDM is called with correct parameters
        04: Call Mainfunction to transmit QSEv
        05: VP: Check for all added frames transmission
        06: Set security event EV01 with CD, specific CDM should be called, and frame is sent with modified data
        07: VP: Check that specific CDM is called with correct parameters
        08: Call Mainfunction to transmit QSEv
        09: VP: Check for all added frames transmission
        10: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00750</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00751</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00752</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_91033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>833</internalId></specobject>
    <specobject>
      <id>IdsM_Test_CDM_Subtraction</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_19_Cdm/source/application/IdsM_Test.c</sourcefile>
      <sourceline>191</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        Test global and specific context data modifier when modified size is configured with
        negative value.
        Test CDM when SEvs is reported with/without context data
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module.
        02: Set security event EV02, CDM will not be called as maximum modified length is less than 0
        03: VP: Check that CDM is not called
        04: Call Mainfunction to transmit QSEv
        05: VP: Check for all added frames transmission
        06: Set security event EV02 with CD, specific CDM should be called, and frame is sent with modified data
        07: VP: Check that specific CDM is called with correct parameters
        08: Call Mainfunction to transmit QSEv
        09: VP: Check for all added frames transmission
        10: Set security event EV02 with CD bigger than any buffer, specific CDM should be called, and frame is sent with modified data
        11: VP: Check that specific CDM is called with correct parameters
        12: Call Mainfunction to transmit QSEv
        13: VP: Check for all added frames transmission
        14: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00750</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00751</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00752</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_91033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>834</internalId></specobject>
    <specobject>
      <id>IdsM_Test_CDM_Dropping</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_19_Cdm/source/application/IdsM_Test.c</sourcefile>
      <sourceline>321</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        Test that context data will be dropped without calling ContextDataModifier callout when
        calculated modified size is 0 or less.
        Test that when CDM callout set modified size to 0, the QSEv will be sent without CD.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module.
        02: Set security event EV02 with CD, CDM will not be called as maximum modified length is 0, and CD is discarded
        03: VP: Check that CDM is not called
        04: Call Mainfunction to transmit QSEv
        05: VP: Check for all added frames transmission
        06: Set security event EV02 with CD, CDM will not be called as maximum modified length is less than 0, and CD is discarded
        07: VP: Check that CDM is not called
        08: Call Mainfunction to transmit QSEv
        09: VP: Check for all added frames transmission
        10: Set security event EV01 with CD, specific CDM should be called, modified data is 0, frame is sent without CD
        11: VP: Check that specific CDM is called with correct parameters
        12: Call Mainfunction to transmit QSEv
        13: VP: Check for all added frames transmission
        14: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00750</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00751</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00752</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_91033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>835</internalId></specobject>
    <specobject>
      <id>IdsM_Test_CDM_Brief</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_19_Cdm/source/application/IdsM_Test.c</sourcefile>
      <sourceline>441</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Test that ContextDataModifier callout will not be called with reported security event
        has Brief reporting mode.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module.
        02: Set security event EV03 with CD, CDM will not be called as event is Brief, and CD is discarded
        03: VP: Check that CDM is not called
        04: Call Mainfunction to transmit QSEv
        05: VP: Check for all added frames transmission
        06: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00750</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>836</internalId></specobject>
    <specobject>
      <id>IdsM_Test_CDM_NoCdBuffer</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_19_Cdm/source/application/IdsM_Test.c</sourcefile>
      <sourceline>501</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        Test internal error events are raised after callout is invoked and there are no buffer
        available.
        Test CDM for internal error events.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module.
        02: Set security event EV00 with CD, modified CD is bigger than max CD, it will be dropped
        03: VP: Check that CDM is not called
        04: MainFunction shall raise internal error and transmit all QSEv
        05: VP: Check for all added frames transmission
        06: Set security event EV00 with CD, global CDM should be called, and frame is sent with modified data
        07: VP: Check that global CDM is called with correct parameters
        08: Set security event EV02 with CD. Cd will be dropped as there is no CD buffer available, and internal error is raised
        09: Expect internal error event with cdm, as cdm is enabled for this Event
        10: 10: MainFunction shall raise internal error and transmit all QSEv
        11: VP: Check that CDM is called within internal Error Event and expected frame is existing
        12: VP: Check for all added frames transmission
        13: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00750</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00751</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00752</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_91033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>837</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_ApplConnectTimestamp</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_20_ApplConnectTimestamp/source/application/IdsM_Test.c</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Tests BootConnect in application when IdsMApplicationConnectTimestamp is enabled. It should
        add timestamp to boot records.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework.
        02: Write header in NvRam
        03: Set StbM timestamp
        04: Write frame_1 length and frame_1 in NvRam and expect it
        05: Write frame_2 length and frame_2 in NvRam and expect it
        06: Write frame_3 length and frame_3 in NvRam and expect it
        07: Initialize IdsM module
        08: Set security event and expect it to be propagated
        09: All NvRam records should be written in IdsM buffers in this MainFunction and propagated
        10: VP: Check for all added frames to be propagated
        11: VP: Check that magic number has been cleared after first MainFunction
        12: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnectTimestamp</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>838</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_ContextDataModifier_With_InternalEvents</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_21_Cdm_InternalError/source/application/IdsM_Test.c</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        This test verifies the behavior of the IdsM long context data frames with context data modifier and internal events.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Empty the stack trace
        02: Initialize IdsM
        03: Report SEv with CD size = 130, expect modified CD should be 135 and encoded in CD length is encoded in 4 byte
        04: Report SEv with CD size = 140, expect SEv to not be saved in buffers as there are no Event Buffer available neither nor CD buffer
        05: Expect two internal Event buffers to be triggered (NO_EVENT_BUFFER_AVAILABLE and NO_CONTEXT_DATA_BUFFER_AVAILABLE)
        06: First Expect (NO_EVENT_BUFFER_AVAILABLE) but this frame will only be triggered after Four Main function calls, as it has an aggregation filter
        07: Second Expect (NO_CONTEXT_DATA_BUFFER_AVAILABLE) without CD, as the internal event is BRIEF
        08: Call Main function four times to transmit QSEvs
        09: VP: Check for all added frames transmission
        10: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00750</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00751</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00752</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_91033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>839</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_ComError</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_22_InternalComError/source/application/IdsM_Test.c</sourcefile>
      <sourceline>22</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        Test IdsM internal event Com error when Pdu transmission fails in both IF and TP interfaces.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module.
        02: Set security event and expect it
        03: MainFunction call - EV00 is transmitted via IF Pdu, and confirmed
        04: VP: Check for all added frames transmission
        05: Set security event and expect it
        06: MainFunction call - EV00 is transmitted via IF Pdu, and TxConfirmation return E_NOT_OK
        07: Expect ComError internal IdsM event
        08: MainFunction call - ComError event is transmitted, and confirmed
        09: VP: Check for all added frames transmission
        10: Set security event and expect it
        11: MainFunction call - EV00 is transmitted via TP Pdu
        12: Copy all data in one call, then send confirmation
        13: VP: Check for all added frames transmission
        14: MainFunction call - to free long buffer
        15: Set security event, it will not be completely transmitted as TpTxConfirmation will fail in the middle of copying
        16: MainFunction call - EV00 is transmitted via TP Pdu
        17: Copy part of data, then TpTxConfirmation return E_NOT_OK
        18: Expect ComError internal IdsM event
        19: MainFunction call - ComError event is transmitted, and confirmed
        20: VP: Check for all added frames transmission
        21: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00801</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>840</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_TransmissionStart</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_23_CoordinateTransmission/source/application/IdsM_Test.c</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Test Sync Transmission feature in initialization and after first transmission
        state start.
    
Test Object: 
    
Test Precondition: 
    
Test Execution: 
        01: Initialize TestFramework and IdsM Module.
        02: Set SEv and expect it. It should be transmitted after Start transmission state is requested
        03: MainFunction call
        04: Check that IdsM didn't transmit QSEvs
        05: Request transmission state start
        06: MainFunction call. EV00 should be transmitted now
        07: VP: Check for all added frames transmission
        08: Set SEv and expect it. It should be transmitted in next main function
        09: MainFunction call. EV01 should be transmitted now
        10: VP: Check for all added frames transmission
        11: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.BswMRequest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.Initialization</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.Start</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>841</internalId></specobject>
    <specobject>
      <id>IdsM_Test_TransmissionStop</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_23_CoordinateTransmission/source/application/IdsM_Test.c</sourcefile>
      <sourceline>122</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Test Sync Transmission feature during shutdown and stop states, after IdsM is
        triggered with Stop transmission request.
    
Test Object: 
    
Test Precondition: 
        IdsM transmission state has been started.
    
Test Execution: 
        01: Set SEv EV00 and expect it. It should be transmitted even if stop state is requested later.
        02: Set SEv EV01 and expect it. It should be transmitted even if stop state is requested later.
        03: Request transmission state stop
        04: Set SEv EV02. It shall be dropped as transmission state stop is requested
        05: MainFunction call. EV00 should be transmitted now
        06: Check that BswM_RequestMode_Stub is not called as there are remaining QSEvs in IdsM
        07: MainFunction call. EV01 should be transmitted now
        08: Check that BswM_RequestMode_Stub is called with correct parameters as all QSEvs are propagated
        09: VP: Check for all added frames transmission
        10: Set SEv EV02. It shall be dropped as transmission is stopped
        11: MainFunction call
        12: VP: Check for all added frames transmission
        13: Request transmission state stop again, no change is expected
        14: Check that BswM_RequestMode_Stub is called with correct parameters state is already stop
        15: Set SEv EV02. It shall be dropped as transmission is stopped
        16: MainFunction call
        17: VP: Check for all added frames transmission
        18: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.Stop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.NotifyStopped</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>842</internalId></specobject>
    <specobject>
      <id>IdsM_Test_TransmissionRestart</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_23_CoordinateTransmission/source/application/IdsM_Test.c</sourcefile>
      <sourceline>240</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Test Sync Transmission feature when transmission state start after stop state is
        reached.
    
Test Object: 
    
Test Precondition: 
        IdsM transmission state has been stopped.
    
Test Execution: 
        01: Request transmission state start.
        02: Set SEv EV02 and expect it
        03: MainFunction call. EV02 should be transmitted now
        04: VP: Check for all added frames transmission
        05: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.Restart</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.RestartWithoutNotify</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>843</internalId></specobject>
    <specobject>
      <id>IdsM_Test_TransmissionStartWithDemSink</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_23_CoordinateTransmission/source/application/IdsM_Test.c</sourcefile>
      <sourceline>311</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Test Sync Transmission feature in initialization and after first transmission
        state start with both IdsR and Dem sink.
    
Test Object: 
    
Test Precondition: 
    
Test Execution: 
        01: Reset IdsM module.
        02: Register Dem events in test framework
        03: Set SEv EV03 and expect it to be sent to Dem Sink
        04: Set SEv EV04 and expect it to be sent to Dem Sink directly, but IdsR sink will wait until tx is started
        05: MainFunction call
        06: Check that IdsM has sent QSEvs with Dem sink only
        07: Request transmission state start
        08: MainFunction call. EV04 IdsR sink should be transmitted now
        09: VP: Check for all added frames transmission
        10: Set SEv EV03 and expect it
        11: Set SEv EV04 and expect it
        12: MainFunction call
        13: VP: Check for all added frames transmission
        14: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.IdsRSink</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>844</internalId></specobject>
    <specobject>
      <id>IdsM_Test_TransmissionStopWithDemSink</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_23_CoordinateTransmission/source/application/IdsM_Test.c</sourcefile>
      <sourceline>410</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Test Sync Transmission feature during shutdown and stop states, after IdsM is
        triggered with Stop transmission request with both IdsR and Dem sink
    
Test Object: 
    
Test Precondition: 
        IdsM transmission state has been started.
    
Test Execution: 
        01: Set Dem behaviour to async for coverage
        02: Set SEv EV00 and expect it.
        03: Request transmission state stop.
        04: Set SEv EV03 and expect it
        05: Set SEv EV04 and expect it only Dem sink
        06: MainFunction call, TxConfirmation, and Dem Callbacks
        07: Check that BswM_RequestMode_Stub is called with correct parameters as all QSEvs are propagated
        08: VP: Check for all added frames transmission
        09: Set Dem behaviour to sync
        10: Set SEv EV03 and expect it
        11: Set SEv EV04 and expect it only Dem sink
        12: MainFunction call
        13: VP: Check for all added frames transmission
        14: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.IdsRSink</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>845</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_RteMinimal</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_30_RteMinimal/source/application/IdsM_Test.c</sourcefile>
      <sourceline>43</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        This test enables RteUsage in configuration without using any Rte functionality.
        It tests that the module will still compile and work in this case.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize test framework
        02: Set Instance Id for test case
        03: Initialize IdsM module
        04: First Main Function Call
        05: Setting security event
        06: event is expected to be sent with count 1 and context data A
        07: check processing is asynchronous, i.e. nothing gets propagated before main function
        08: Second Main Function Call
        09: VP: check for all added frames transmission
    
Test Input: 
    
Test Output: 
        Test passing if the security event is sent to sink.
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Config.IdsMRteUsage</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>846</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_RteReportingAPIs</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_31_RteReportingAPIs/source/application/IdsM_Test.c</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        This test implement integration test with Swc through RTE to Test
        IdsMService and IdsMSmartSensorService interfaces.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize test framework
        02: Set Instance Id for test case
        03: Initialize IdsM module
        04: First MainFunction call
        05: Setting security event with operation SetSecurityEvent and expect it will be sent
        06: Setting security event with operation SetSecurityEventWithContextData and expect it will be sent
        07: Setting security event with operation SetSecurityEventWithCount and expect it will be sent
        08: Setting security event with operation SetSecurityEventWithCountContextData and expect it will be sent
        09: Setting security event with operation SetSecurityEventWithTimestampCount and expect it will be sent
        10: Setting security event with operation SetSecurityEventWithTimestampCountContextData and expect it will be sent
        11: check processing is asynchronous, i.e. nothing gets propagated before main function
        12: Second MainFunction call
        13: VP: check for all added frames transmission
    
Test Input: 
    
Test Output: 
        Test passing if all calls through Rte were successfull and sent to PduR
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01301</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01302</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>847</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_CustomTimestamp_Get</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_32_RteCustomTimestamp/source/application/IdsM_Test.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        This test implement integration test with Swc through RTE to Test IdsM_CustomTimestamp interface.
        Configuration has Timestamp selected as Custom, and Swc is created to implement
        IdsM_CustomTimestamp_Get()
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize test framework
        02: Set Instance Id for test case
        03: Initialize IdsM module
        04: First Main Function Call
        05: Setting security event
        06: event is expected to be sent with count 1 and context data A with timestamp returned from custom interface
        07: check processing is asynchronous, i.e. nothing gets propagated before main function
        08: Second Main Function Call
        09: VP: check for all added frames transmission
    
Test Input: 
    
Test Output: 
        Test passing if the security event is sent to sink with the correct timestamp
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00605</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>848</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_RteAll</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_33_RteAll/source/application/IdsM_Test.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        This test implement integration test with Swc through RTE to Test mix of reporting
        security events from Rte and from direct API calls while custom timestamp is enabled.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize test framework
        02: Set Instance Id for test case
        03: Initialize IdsM module
        04: First MainFunction call
        05: Set custom timestamp value in Swc
        06: Setting security event for Ev01 Swc through Rte and expect it will be sent as first frame for sampling
        07: Setting security event for Ev03 through direct call and expect it will be dropped as threshold number less than configured
        08: check processing is asynchronous, i.e. nothing gets propagated before main function
        09: Second MainFunction Call
        10: VP: check for all added frames transmission
        11: Flushing All saved buffers and empty stack trace
        12: Set new custom timestamp value in Swc
        13: Setting security event for Ev01 Swc through Rte and expect it will be dropped because of sampling filter
        14: Setting security event for Ev03 through direct call and expect it will be sent as threshold filter is passed
        15: Setting security event for Ev02 Swc through Rte and expect it will be sent without context data as it has reporting mode brief bypass filters
        16: check processing is asynchronous, i.e. nothing gets propagated before main function
        17: Third MainFunction Call
        18: VP: check for all added frames transmission
        19: Flushing All saved buffers and empty stack trace
        20: Set new custom timestamp value in Swc
        21: Setting security event for Ev01 Swc through Rte and expect it will be sent because of sampling filter
        22: Setting security event for Ev03 through direct call and expect it will be sent as threshold filter is passed
        23: Setting security event for Ev03 through direct call with unused API from Rte and expect it will be sent as threshold filter is passed
        24: Setting security event for Ev02 Swc through Rte and expect it will be sent without context data as it has reporting mode brief bypass filters
        25: check processing is asynchronous, i.e. nothing gets propagated before main function
        26: Fourth MainFunction Call
        27: VP: check for all added frames transmission
    
Test Input: 
    
Test Output: 
        Test passing if all expected security events from Rte and direct call are sent
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01301</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01303</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>849</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_Partitions_Simple</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_40_Partitions/source/application/IdsM_Test.c</sourcefile>
      <sourceline>507</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        - This test is running in Multi partition environment, and it tests that security event reported
        on satellite partitions are sent to Master partition and propagated to its designated sinks
        - It is the Simplest test for multi partition.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Flushing All saved buffers and empty stack trace
        02: Activate Satellite1Task1_SingleIdsREvent which initialize Satellite1 and sends security event then wait for it
        03: Expect event EV01_IdsRSink_DETAILED_BYPASSING from Satellite 1 to be sent to Master partition and propagated to IdsR
        04: Main Function Call
        05: VP: Check for all added frames transmission
        06: Flushing All saved buffers and empty stack trace
        07: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions.Isolation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions.SharedConfiguration</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.MasterPartition.SingleInstance</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.SatellitePartitions.Unlimited</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.MasterPartition.Propagation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.MasterPartition.RelaySatellitePropagation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.SatellitePartitions.SchM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>850</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Partitions_Filtering</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_40_Partitions/source/application/IdsM_Test.c</sourcefile>
      <sourceline>600</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        - This test is running in Multi partition environment, and it tests that security event reported
        on satellite partitions are sent to Master partition and propagated to its designated sinks
        - This test is testing Filtering with Multi partition.
        Here we use sampling filter with nth value 2, and Bulk transmission enabled
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Flushing All saved buffers and empty stack trace
        02: Report two security event in Master partition with sampling filter = 2, to ensure that only one is sent
        03: Expect event EV00_IdsRSink_Detail_Smpl_2 to be propagated to IdsR
        04: Main Function Call
        05: Activate Satellite1Task2_SingleIdsREventWithFilter which initialize Satellite1 and sends security event then wait for it
        06: Expect event EV00_IdsRSink_Detail_Smpl_2 from Satellite 1 to be sent to Master partition and propagated to IdsR
        07: Call Main Function Several times
        08: VP: Check for all added frames transmission
        09: Flushing All saved buffers and empty stack trace
        10: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>851</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Partitions_Sinks</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_40_Partitions/source/application/IdsM_Test.c</sourcefile>
      <sourceline>685</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        - This test is running in Multi partition environment, and it tests that security event reported
        on satellite partitions are sent to Master partition and propagated to its designated sinks
        - This test is testing all sinks IdsR and Dem (SYNC) from many satellite with other transmissions in master partition,
        Events in this test are all Detailed bypassing with Bulk transmission enabled.
        - Queue length and core buffers equal 2, that means we couldn't send more than two frames from another partition to master
        for propagation at the same time without freeing buffers correctly.
        - In this test we also test Long context data send with Tp enabled.
        - Then we will repeat a specific number of processes again to make sure of buffer free.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Declare long contextData
        02: Flushing All saved buffers and empty stack trace
        03: Report a security event with contextDataA EV01_IdsRSink_DETAILED_BYPASSING in master partition
        04: Expect event EV01_IdsRSink_DETAILED_BYPASSING to be sent to IdsR
        05: Main Function Call
        06: Check for transmitted frames
        07: Activate Satellite1Task3_SingleIdsREvent which initialize Satellite1 and sends security event then wait for it
        08: Expect event EV03_IdsRSink_DETAILED_BYPASSING to be sent to IdsR from satellite 1
        09: Main Function Call
        10: Check for transmitted frames
        11: Activate Satellite2Task1_SingleIdsRAndDemEventContextLong which initialize Satellite2 and sends security event then wait for it
        12: Defining approach of event as it is Dem Sink
        13: Defining IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback)
        14: Expect event EV02_IdsRAndDemSinks_DETAILED_BYPASSING with contextDataLong from Satellite 1 to be sent to Master partition
            and propagated to IdsR and Dem
        15: MainFunction call - PduR_TpTransmit should be called here
        16: Copy all data in one call, then send confirmation
        17: MainFunction call
        18: Check for transmitted frames
        19: Repeat Previous steps to make sure, that core buffers are freed correctly
        20: Report a security event with contextDataA EV01_IdsRSink_DETAILED_BYPASSING in master partition
        21: Expect event EV01_IdsRSink_DETAILED_BYPASSING to be sent to IdsR
        22: Main Function Call
        23: Check for transmitted frames
        24: Activate Satellite1Task3_SingleIdsREvent which initialize Satellite1 and sends security event then wait for it
        25: Expect event EV03_IdsRSink_DETAILED_BYPASSING to be sent to IdsR from satellite 1
        26: Main Function Call
        27: Check for transmitted frames
        28: Activate Satellite2Task1_SingleIdsRAndDemEventContextLong which initialize Satellite2 and sends security event then wait for it
        29: Defining approach of event as it is Dem Sink
        30: Defining IdsMTest_AddDemEvent(DemEventId, Copy_CallBack, ProcessedCallback)
        31: Expect event EV02_IdsRAndDemSinks_DETAILED_BYPASSING with contextDataLong from Satellite 1 to be sent to Master partition
            and propagated to IdsR and Dem
        32: MainFunction call - PduR_TpTransmit should be called here
        33: Copy all data in one call, then send confirmation
        34: MainFunction call
        35: Check for transmitted frames
        36: Activate Satellite1Task3_SingleIdsREvent which initialize Satellite1 and sends security event then wait for it
        37: Expect event EV03_IdsRSink_DETAILED_BYPASSING to be sent to IdsR from satellite 1
        38: Main Function Call
        39: Check for transmitted frames
        40: Report a security event EV01_IdsRSink_DETAILED_BYPASSING with contextDataA
        41: Expect event EV01_IdsRSink_DETAILED_BYPASSING to be sent to IdsR in master partition
        42: Main Function Call
        43: Check for transmitted frames
        44: Main Function Call
        45: VP: Check for all added frames transmission
        46: Flushing All saved buffers and empty stack trace
        47: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MasterPartition.Propagation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.MasterPartition.RelaySatellitePropagation</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>852</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Partitions_Queue_Full</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_40_Partitions/source/application/IdsM_Test.c</sourcefile>
      <sourceline>935</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        - This test is running in Multipartition environment, and it tests that security event reported
        on satellite partitions are sent to Master partition and propagated to its designated sinks
        - This Test that satellite will retry transmission when queue is full with core buffer and Queue length equal 2.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Flushing All saved buffers and empty stack trace
        02: Activate Satellite1Task4_MultipleIdsREvents which initializes Satellite1 and send Multiple security
            events (max queue length + n) times where (n &gt; 0), then wait for them.
        03: Expect event EV01_IdsRSink_DETAILED_BYPASSING from Satellite 1 to be sent to Master partition with 4 different frames
            as it is sent 4 times, but queue length is 2, So it won't be sent at the same time
        04: Main Function Call
        05: Main function call again, Nothing will happen in this call
        06: Check for transmitted frames
        07: Activate Satellite1Task2_SingleIdsREventWithFilter which initialize Satellite1 and sends a single security event then wait for it
        08: Expect event EV00_IdsRSink_Detail_Smpl_2 from Satellite 1 to be sent to Master partition and propagated to IdsR
        09: Call Main Function - In this call there are two other frames the frame from task 2 and one reminded frame from task 4,
            then now we only have another one last frame reminded from task 4 needs to be sent to master partition whenever buffer is free
        10: Check for transmitted frames
        11: Activate Satellite1Task1_SingleIdsREvent which initialize Satellite1 and sends a single security event then wait for it
        12: Expect event EV01_IdsRSink_DETAILED_BYPASSING from Satellite 1 to be sent to Master partition and propagated to IdsR
        13: Call Main function - In this call there are two other frames the frame from task 2 and the last reminded frame from task 4,
            then now there is no other frames to be sent
        14: Calling main function several times - Nothing will happen on those calls as there is no frames there
        15: Check for transmitted frames
        16: VP: Check for all added frames transmission
        17: Flushing All saved buffers and empty stack trace
        18: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SatellitePartitions.SchM</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>853</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Partitions_Det</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_40_Partitions/source/application/IdsM_Test.c</sourcefile>
      <sourceline>1059</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        - This test is running in Multipartition environment, and it tests that security event reported
        on satellite partitions are sent to Master partition and propagated to its designated sinks
        - Here we Test that Det error is reported when IdsM is called from wrong partition.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Flushing All saved buffers and empty stack trace
        02: Activate PartitionNoIdsMTask1_DetReporting which initialize Satellite3 then try to call IdsM Main APIs
        03: Flushing All saved buffers and empty stack trace
        04: If Det_GlobalFlag is E_OK: Send a success message
        05: Else: Send a failure message
        06: Returning result
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.InvalidPartitionContext</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>854</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Partitions_ExternalDevice</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_40_Partitions/source/application/IdsM_Test.c</sourcefile>
      <sourceline>1127</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        - This test is running in Multipartition environment, and it tests that security event reported
        on satellite partitions are sent to Master partition and propagated to its designated sinks
        - Here we Test external device can report to master and satellite partitions.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Flushing All saved buffers and empty stack trace
        02: Report a security event in Master partition through external device APIs, and expect it
        03: Activate Satellite2Task3_ExternalDevice which initialize Satellite2 and sends security event through external device APIs
        04: Expect event EV01_IdsRSink_DETAILED_BYPASSING from Satellite 2 to be sent to Master partition and propagated to IdsR
        05: Main Function Call
        06: VP: Check for all added frames transmission
        07: Flushing All saved buffers and empty stack trace
        08: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.TimeStamp.ExternalDevice.Events</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>855</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Partitions_BlockState</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_40_Partitions/source/application/IdsM_Test.c</sourcefile>
      <sourceline>1196</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        - This test is running in Multipartition environment, and tests the distribution of BswM states
        - Master partition should sync reported bswm states with satellites.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Flushing All saved buffers and empty stack trace
        02: Enable the functionality of the Syncing function to receives from the queue
        03: Toggle BswM_State to block state 2, and wait until sync is done in all satellites
        04: Report SEv EV04_IdsRSink_Detail_Block_2 in master partition. It should be blocked
        05: Report SEv IdsMConf_EV05_IdsRSink_Detail_Block_6 in master partition, and expect it
        06: Main Function Call
        07: Activate Satellite2Task4_BlockState which sends two SEvs EV04_IdsRSink_Detail_Block_2 and IdsMConf_EV05_IdsRSink_Detail_Block_6
        08: Expect IdsMConf_EV05_IdsRSink_Detail_Block_6 from Satellite2Task4_BlockState
        09: Main Function Call
        10: VP: Check for all added frames transmission
        11: Toggle BswM_State to block state 6. Now, both state 2 and 6 are blocked, and wait until sync is done in all satellites
        12: Report SEv EV04_IdsRSink_Detail_Block_2, and IdsMConf_EV05_IdsRSink_Detail_Block_6 in master partition. Both should be blocked
        13: Main Function Call
        14: Activate Satellite2Task4_BlockState which sends two SEvs EV04_IdsRSink_Detail_Block_2 and IdsMConf_EV05_IdsRSink_Detail_Block_6
        15: Main Function Call
        16: VP: Check for all added frames transmission
        17: Toggle BswM_State to un-block state 2. Now, only state 6 are blocked, and wait until sync is done in all satellites
        18: Report SEv IdsMConf_EV04_IdsRSink_Detail_Block_2 in master partition, and expect it
        19: Report SEv IdsMConf_EV05_IdsRSink_Detail_Block_6 in master partition. It should be blocked
        20: Main Function Call
        21: Activate Satellite2Task4_BlockState which sends two SEvs EV04_IdsRSink_Detail_Block_2 and IdsMConf_EV05_IdsRSink_Detail_Block_6
        22: Expect IdsMConf_EV04_IdsRSink_Detail_Block_2 from Satellite2Task4_BlockState
        23: Main Function Call
        24: Change the state to clear all the states
        25: VP: Check for all added frames transmission
        26: Flushing All saved buffers and empty stack trace
        27: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MasterPartition.BlockStateSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>856</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Partitions_BlockStateDet</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_40_Partitions/source/application/IdsM_Test.c</sourcefile>
      <sourceline>1352</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        - This test is running in Multipartition environment, and tests reporting of Det errors when
        BswM is distributed and Master syncs the state to satellites RP
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Flushing All saved buffers and empty stack trace
        02: Disable the functionality of the Syncing function to emulate as if the Ostask is preempted or delayed to allow the sender cause overflow in the queue
        03: Trigger multiple BswM_StateChanged to cause limit while syncing block state from master
        04: Enable the functionality of the Syncing function to emulate as if the Ostask is now executed and it receives from the queue
        05: Activate Satellite1Task7_SyncBlockState to read data in the queue
        06: Activate Satellite2Task7_SyncBlockState to read data in the queue
        07: Wait till the other partitions successfully receive
        08: Check Det error E_LIMIT
        09: Activate Satellite2Task4_BlockState which sends two SEvs EV04_IdsRSink_Detail_Block_2 and IdsMConf_EV05_IdsRSink_Detail_Block_6 to make sure that states are synchronized when E_LIMIT is reached
        10: Expect IdsMConf_EV05_IdsRSink_Detail_Block_6 from Satellite2Task4_BlockState
        11: Main Function Call
        12: VP: Check for all added frames transmission
        13: Call IdsM_BswM_StateChanged from satellite RP, it should report Det error wrong context
        14: If Det_GlobalFlag is E_OK: Send a success message
        15: Else: Send a failure message
        16: Returning result
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MasterPartition.BlockStateSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions.BswMStateChanged</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.MasterPartition.BlockStateSync.QueueLimit</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>857</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Partitions_TrustedFunction</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_40_Partitions/source/application/IdsM_Test.c</sourcefile>
      <sourceline>1477</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        - This test is running in Multipartition environment, and tests reporting of SEV from RO-satellites through using the
            trusted functions provided by the neighbour (Master or RP-Satellite) Partition on the same core.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Flushing All saved buffers and empty stack trace
        02: Expect IdsMConf_EV01_IdsRSink_DETAILED_BYPASSING from Satellite3
        03: Activate Satellite3Task1_TrustedFunction to call the trusted function provided by the RP satellite
        04: Expect IdsMConf_EV01_IdsRSink_DETAILED_BYPASSING from Satellite1Task1_SingleIdsREvent
        05: Activate Satellite1Task1_SingleIdsREvent to propagate the SEVs reported, one from the Satellite1 and one from Satellite3 to Master
        06: Main Function Call
        07: VP: Check for all added frames transmission
        08: Expect IdsMConf_EV01_IdsRSink_DETAILED_BYPASSING from Satellite4
        09: Activate Satellite4Task1_TrustedFunction to call the trusted function provided by the Master
        10: Expect IdsMConf_EV01_IdsRSink_DETAILED_BYPASSING from Master with count 5
        11: Report SEv IdsMConf_EV01_IdsRSink_DETAILED_BYPASSING with count 5
        12: Main Function Call
        13: VP: Check for all added frames transmission
        14: 14: Flushing All saved buffers and empty stack trace
        15: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SatellitePartitions.ReportingOnly</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Check.NoRpWithMaster</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Check.RoWithRpOrMaster</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>858</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Partitions_Cdm</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_40_Partitions/source/application/IdsM_Test.c</sourcefile>
      <sourceline>1595</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        - Test context data modifier in multicore for all IdsM partition types.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Flushing All saved buffers and empty stack trace
        02: Report SEv, specific CDM should be called, and frame is sent with modified data
        03: Call Mainfunction to transmit QSEv
        04: VP: Check for all added frames transmission
        05: Report SEv from RP partition, specific CDM should be called, and frame is sent with modified data
        06: Call Mainfunction to transmit QSEv
        07: VP: Check for all added frames transmission
        08: Report SEv from RO partition, specific CDM should be called, and frame is sent with modified data
        09: Call Mainfunction to transmit QSEv
        10: VP: Check for all added frames transmission
        11: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00750</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00751</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_00752</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR22-11.SWS_IdsM_91033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>859</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Partitions_SyncTransmission</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_40_Partitions/source/application/IdsM_Test.c</sourcefile>
      <sourceline>1713</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        - This test is running in Multipartition environment, and tests reporting of SEV from RO-satellites through using the
            trusted functions provided by the neighbour (Master or RP-Satellite) Partition on the same core.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Flushing All saved buffers and empty stack trace
        02: Report SEv and expect it
        03: Activate task to report 4 SEvs, and send 2 of them during MainFunction to Master due to SchM queue length
        04: Expect all task events to be propagated
        05: Request transmission state stop
        06: Main Function Call
        07: Check that IdsM propagated 3 QSEvs. 2 from satellite and 1 from its internal buffer
        08: Check that BswM_RequestMode_Stub is not called as timeout is 0 due to IdsR event in core buffers
        09: Activate task to report 4 SEvs again, they should be dropped, but the old 2 QSEvs will be sent to master
        10: Main Function Call
        11: Check that remaining QSEvs are transmitted
        12: Check that BswM_RequestMode_Stub is not called as timeout is 0 due to IdsR event in core buffers
        13: Main Function Call
        14: Check that BswM_RequestMode_Stub is not called as timeout is increased to 1 due to no IdsR events are received
        15: Dummy activation of task to report 4 SEvs, they should be dropped
        16: Main Function Call
        17: Check that BswM_RequestMode_Stub is called with correct parameters as timeout is reached
        18: VP: Check for all added frames transmission
        19: Request transmission state start
        20: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.SyncTransmission.MultiPartitions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>860</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_Partitions_TimestampSignature</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_41_Partitions_TimeStampSignature/source/application/IdsM_Test.c</sourcefile>
      <sourceline>161</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        This test is running in Multipartition environment, and it tests that security event reported
        on satellite partitions are sent to Master partition and propagated to its designated sinks
        with Timestamp and signature added , and each partition calls the local StbM and sets its
        local Timestamp separately.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize SchM on Master partition
        02: Initialize TestFramework and IdsM Module
        03: Set signature length in TestFramework and then expect it
        04: Set Stbm timestamp value to be used in Satellite 1
        05: Activate Satellite1 Task1, and expect events sent from it
        06: Set Stbm timestamp value to be used in Master
        07: IdsM should keep trying to call CsmSignatureGenerate until it return E_OK
        08: Call Main function expect no QSEV is signed
        09: Report a security event IdsMConf_EV00, and expect it
        10: Change CsmSignatureGenerate return value to E_OK, and frame will be transmitted
        11: Call Main function expect the frame sent from sat1 to be propagated to its IdsR with confirmation and expect it
        12: Call Main function expect the frame sent from sat1 to be propagated to its IdsR with confirmation and expect it
        13: Set Stbm timestamp value to be used in Satellite 2
        14: Activate Satellite2 Task1
        15: Call Main function expect the frame reported from Master partition itself to be propagated to its IdsR with confirmation and expect it
        16: Call Main function expect the frame sent from sat2 to be propagated to its IdsR with confirmation and expect it
        17: VP: Check for all added frames transmission
        18: Flushing All saved buffers and empty stack trace
        19: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>861</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Partitions_Signature_Invalid_IdsMInstance</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_41_Partitions_TimeStampSignature/source/application/IdsM_Test.c</sourcefile>
      <sourceline>303</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        This test is running in Multipartition environment, and it calls CsmCallbackNotification
        form a partition which doesn't have an IdsM Instance , and a Det error should be triggered
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize SchM on Master partition
        02: Initialize TestFramework and IdsM Module
        03: Set the initialize of Det_ReportError to 0
        04: Activate Satellite2 Task1
        05: Flushing All saved buffers and empty stack trace
        06: If Det_GlobalFlag is E_OK: Send a success message
        07: Else: Send a failure message
        08: Returning result
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.InvalidPartitionContext</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>862</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_Partitions_Mac</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_42_Partitions_Mac/source/application/IdsM_Test.c</sourcefile>
      <sourceline>179</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        This test is running in Multipartition environment, and it tests the distribution of Mac
        generation that it is done in both Master and Satellite independent of each others.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize SchM on Master partition
        02: Initialize TestFramework and IdsM Module
        03: Activate Satellite1 Task1, and expect events sent from it
        04: Activate Satellite2 Task1, and expect events sent from it
        05: Set signature length in TestFramework for IdsMConf_EV01 in Master
        06: Report SEv in Master and expect it
        07: Call Mainfunction to propagate three events coming from satellites
        08: Csm Callback for IdsMConf_EV01 in Master and call MainFunction for its propagation
        09: VP: Check for all added frames transmission
        10: Flushing All saved buffers and empty stack trace
        11: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Mac</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>863</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Partitions_Mac_Invalid_IdsMInstance</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_42_Partitions_Mac/source/application/IdsM_Test.c</sourcefile>
      <sourceline>276</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        This test is running in Multipartition environment, and it calls CsmCallbackNotification
        when Mac is enabled from a partition which doesn't have an IdsM Instance. Det error is
        expected to be triggered
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize SchM on Master partition
        02: Initialize TestFramework and IdsM Module
        03: Set the initialize of Det_ReportError to 0
        04: Activate PartitionWithoutIdsM_Task1
        05: Flushing All saved buffers and empty stack trace
        06: If Det_GlobalFlag is E_OK: Send a success message
        07: Else: Send a failure message
        08: Returning result
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.InvalidPartitionContext</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>864</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_Partitions_InternalError</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_43_Partitions_InternalError/source/application/IdsM_Test.c</sourcefile>
      <sourceline>206</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        This test verifies the behaviour of internal events in MultiPartition environment.
        Trigger InternalErrorEvent NoEventBufferAvailable from satellite partition and check their propagation from the master partition.
        Trigger InternalErrorEvent NoContextDataBufferAvailable from master and satellite partition and check their propagation from the master partition.
        verify that InternalErrorEvents buffers send from satellites partitions to master will not be dropped within instance filter.
        verify reporting InternalErrorEvent and security events externally from RO partition.
        Configurations:
            - Partitions:
                - Master: CoreBuffers=7 and SchMQueue=7
                - Satellite_1 of type Reporting_and_Processing
                - Satellite_2 of type Reporting_and_Processing
            - Buffers:
                - Master
                    - 2 Event Buffers
                    - 1 Context Data Buffer of size 10
                - Satellite_1
                    - 3 Event Buffers
                    - 1 Context Data Buffer of size 5
                - Satellite_2
                    - 2 Event Buffers
                    - 1 Context Data Buffer of size 10
            - Events:
                - Normal Event "EV00_No_Filter_IdsRSink" with IdsR sink and no filters.
                - InternalErrorEvent NoEventBufferAvailable with IdsR and filters:aggregation (interval=3), threshold (interval=6, number=3).
                - InternalErrorEvent NoContextDataBufferAvailable with IdsR Sink and no filters.
                - InternalErrorEvent TrafficLimitationExceeded with IdsR and no filters.
            - Traffic Filter (max_bytes=130, interval=7) (Note: InternalEventsError bytes are not calculated in traffic filter)
        Procedure:
            - 01-12: Trigger InternalErrorEvent NoEventBufferAvailable from satellite partition and check their propagation from the master partition.
            - 13-21: Trigger InternalErrorEvent NoContextDataBufferAvailable from master and satellite partition and check their propagation from the master partition.
            - 22-26: Verify InternalErrorEvent TrafficLimitationExceeded can be triggered when satellite exceed max bytes.
            - 27-30: Verify that events from satellite are dropped when TrafficLimitation Filter is raised, but InternalErrorEvents
                        are passed (InternalErrorEvents is not filtered with instance filter)
            - 31-34: Verify that satellite transmission is resumed when traffic limitation interval end.
            - 35-41: verify reporting InternalErrorEvent and security events externally from RO partitions.

    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize SchM on Master partition
        02: Initialize TestFramework and IdsM Module
        03: 6 Events are expected to be added in to the global array for IDSM TEST FRAMEWORK with count 1
        04: Activate Satellite1 Task1 which initialize Satellite1 and sends 6 security events and wait for them
        05: 1th Main Function Call.
        06: VP: Check for all added frames transmission
        07: 6 Events are expected to be added in to the TEST FRAMEWORK with count 1
        08: Internal event Event is expected to be added in to the TEST FRAMEWORK with count 3
        09: Activate Satellite2 Task1 which sends 4 security events , 1 Internal event Event and wait for them
        10: 2nd Main Function Call.
        11: VP: Check for all added frames transmission.
        12: Flushing All saved buffers and empty stack trace
        13: expect IdsMConf_EV00_No_Filter_IdsRSink with Context data and anther one with dropped Context data buffers from sat1
        14: Internal event Event is expected to be added in to the TEST FRAMEWORK with count 1
        15: Activate Satellite1 Task2 which sends 6 security events , 1 Internal event Event and wait for them
        16: Report event with context data to make context data buffers full
        17: Report one more event with context data, expect context data to be dropped (frame will be sent without context data) and IdsMInternalError NoContextDataBuffer to be transmitted
        18: expect IdsMConf_EV00_No_Filter_IdsRSink with Context data and anther one with dropped Context data buffers from master
        19: Internal event Event is expected to be added in to the TEST FRAMEWORK with count 1
        20: 3rd Main Function Call.
        21: Check that same internal error NoContextDataBuffer events are transmitted separately from master and sat1 partitions
        22: 4th Main Function Call.
        23: Activate Satellite1 Task3 which sends 1 security event which will be dropped due to traffic limitation exceeded
        24: expect INTERNAL_ERROR_EVENT_TRAFFIC_LIMITATION_EXCEEDED to be sent
        25: 5th adn 6th Main Function Call.
        26: Check all frame transmission - IdsMInternalError traffic_limitation_exceeded frame are transmitted and other events will be dropped
        27: Activate Satellite1 Task4 which sends 2 security event which will be dropped due to traffic limitation exceeded and raise internal error event noContextDataBuffer
        28: Internal event Event is expected to be added in to the TEST FRAMEWORK with count 1 even when traffic limitation is raised
        29: 7th Main Function Call
        30: Check all frame transmission
        31: Activate Satellite2 Task2 after Traffic interval is ended which sends 2 security event which raise internal error event noContextDataBuffer
        32: Expect InternalErrorEvent NoContextDataBuffer and two security events
        33: 8th Main Function Call
        34: Check all frame transmission
        35: Flushing All saved buffers and empty stack trace
        36: Sending a success message.
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00801</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.SatellitePartitions.ReportingOnly</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>865</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_Rte_MultiPartition</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_44_Partitions_Rte/source/application/IdsM_Test.c</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        This test implement integration test to verify that 2 points
        1:  verifies the reporting of Security events from SWCs from different partitions through RTE , and the Rte should map the event to the BSW which resides with the same SWC
            on the same partition, and finally each satellite partition propagates the QSEVs to the Master partition and the propagation is checked inside the master partition while the Custom time stamp is enabled.
        2:  verifies that the each partition will retrieve the correct custom time stamp value from the test SWC which resides with the current BSW in the same partition.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize SchM and Rte on Master partition
        02: Initialize TestFramework and IdsM Module
        03: Expect event EV01 from Satellite 1 to be sent to Master partition and propagated to IdsR
        04: Expect event EV02 from Satellite 1 to be sent to Master partition and propagated to IdsR
        05: Activate Satellite1 Task1 which initialize Satellite1 and sends security events and wait for them
        06: Expect event EV01 from Satellite 2 to be sent to Master partition and propagated to IdsR
        07: Expect event EV02 from Satellite 2 to be sent to Master partition and propagated to IdsR
        08: Activate Satellite2 Task1 which initialize Satellite2 and sends security events and wait for it
        09: Expect event EV01 from Master partition and propagated to IdsR
        10: Expect event EV02 from Master partition and propagated to IdsR
        11: Trigger Client/server operation for reporting EV2 through port-prototype EV02_SetSecurityEventWithTimestampCountContextData from IdsM_Master test SWC
        12: Trigger Client/server operation for reporting EV1 through port-prototype EV01_SetSecurityEvent from IdsM_Master test SWC
        13: Main Function Call
        14: VP: Check for all added frames transmission
        15: Flushing All saved buffers and empty stack trace
        16: Sending a success message
    
Test Input: 
    
Test Output: 
        Test passing if all expected security events from Rte are sent
    </description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>866</internalId></specobject>
    <specobject>
      <id>IdsM_Test_Rte_MultiPartition_TrustedFunction</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_44_Partitions_Rte/source/application/IdsM_Test.c</sourcefile>
      <sourceline>172</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        This test implement integration test to verify that 2 points
        1:  verifies the reporting of Security events from SWCs from different partitions through RTE , and the Rte should map the event to the BSW which resides with the same SWC
            on the same partition, and finally each satellite partition propagates the QSEVs to the Master partition and the propagation is checked inside the master partition while the Custom time stamp is enabled.
        2:  verifies that the each partition will retrieve the correct custom time stamp value from the test SWC which resides with the current BSW in the same partition.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize SchM and Rte on Master partition
        02: Initialize TestFramework and IdsM Module
        03: Expect event EV01 from Satellite 1 to be sent to Master partition and propagated to IdsR
        04: Expect event EV02 from Satellite 1 to be sent to Master partition and propagated to IdsR
        05: Activate Satellite1 Task1 which initialize Satellite1 and sends security events and wait for them
        06: Expect event EV01 from Satellite 2 to be sent to Master partition and propagated to IdsR
        07: Expect event EV02 from Satellite 2 to be sent to Master partition and propagated to IdsR
        08: Activate Satellite2 Task1 which initialize Satellite2 and sends security events and wait for it
        09: Expect event EV01 from Master partition and propagated to IdsR
        10: Expect event EV02 from Master partition and propagated to IdsR
        11: Trigger Client/server operation for reporting EV2 through port-prototype EV02_SetSecurityEventWithTimestampCountContextData from IdsM_Master test SWC
        12: Trigger Client/server operation for reporting EV1 through port-prototype EV01_SetSecurityEvent from IdsM_Master test SWC
        13: Main Function Call
        14: VP: Check for all added frames transmission
        15: Flushing All saved buffers and empty stack trace
        16: Sending a success message
    
Test Input: 
    
Test Output: 
        Test passing if all expected security events from Rte are sent
    </description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.MultiplePartitions</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.SatellitePartitions.ReportingOnly</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Check.MaxRpPerCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_91028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>867</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_Hook</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_45_Partitions_Hook/source/application/IdsM_Test.c</sourcefile>
      <sourceline>427</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        Test hook that changes IDS message format after qualification with both
        Mac and Signature and in MultiCore environment.

        Procedure:
            - 02-04: Test Qsev hook feature with PduR sink returning same length.
            - 05-08: Test Qsev hook feature with Dem sink returning same length.
            - 09-12: Test Qsev hook feature with different length.
            - 13-16: Test Qsev hook feature with zero length.
            - 17-21: Test Qsev hook feature in Satellite partition.
            - 22-25: Test Qsev hook feature with length bigger than allowed.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework and IdsM Module
        02: Set security event with PduR sink and expect frame with different values but with same length due to hook change
        03: Hook, and Csm_MacGenerate will be called, and frame is propagated
        04: VP: Check that frame is propagated with correct values
        05: Reset test data
        06: Set security event with Dem sink and expect frame with different values but with same length due to hook change
        07: Hook, and Csm_MacGenerate will be called, and frame is propagated
        08: VP: Check that frame is propagated with correct values
        09: Reset test data
        10: Set security event and expect hook to change it to smaller length with different values
        11: Hook, and Csm_MacGenerate will be called, and frame is propagated
        12: VP: Check that frame is propagated with correct values
        13: Reset test data
        14: Set security event and expect hook to change it to smaller length with different values
        15: Hook will be called, but frame will be dropped due to zero length returned in hook
        16: VP: Check that frame is propagated with correct values
        17: Reset test data
        18: Satellite1Task1 will report SEv, expect hook to change it to smaller length with different values
        19: Activate Satellite1Task1 and wait for it to finish
        20: Master partition will get satellite qualified event and propagate it
        21: VP: Check that frame is propagated with correct values
        22: Reset test data
        23: Set security event and expect hook to change it to length too big that exceeds buffer size
        24: Hook will be called, and raise det error
        25: VP: Check for Error msg IDSM_E_PARAM_UNINT
        26: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.CustomFormatHook</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>868</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_ApplConnect</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_46_Partitions_ApplConnect/source/application/IdsM_Test.c</sourcefile>
      <sourceline>114</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
        Tests IdsMApplConnect behaviour when there are NvRam records with different scenarios.
        Configuration:
            - ContextData Buffers: 2
            - Event Buffers: 6
        Scenario #1:
            - Add six records to NvRam area, where there will be three records with context data,
            one of context data will be dropped.
            - Report security event between initialization and first MainFunction, so that available
            buffers will be reduced to five.
            - The sixth NvRam record will be dropped due to not available buffers.
            - All records will be propagated in same MainFunction, because both Csm and Dem processing
            is synchronous.
        Scenario #2:
            - Write some records but the header contains zero nrOfRecords, expect nothing will be
            propagated from NvRam
        Scenario #3:
            - Write some records but add wrong magic number in header, expect nothing will be
            propagated from NvRam.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework.
        02: Register Dem events in test framework
        03: Write header in NvRam
        04: Write frame_1 length and frame_1 in NvRam and expect it
        05: Write frame_2 length and frame_2 in NvRam and expect it
        06: Write frame_3 length and frame_3 in NvRam and expect it
        07: Write frame_4 length and frame_4 in NvRam and expect it
        09: Write frame_6 length and frame_6 in NvRam and expect it without context data as it will be dropped due to no context data buffers
        10: Write frame_7 length and frame_7 in NvRam and expect it to be dropped as there are no available buffers
        11: Initialize IdsM module
        12: Set security event and expect it to be propagated
        13: Set signature length in TestFramework
        14: Activate Satellite1Task1 and expect EV02 from it
        15: All NvRam records should be written in IdsM buffers in this MainFunction, signed and propagated
        16: VP: Check for all added frames to be propagated
        17: VP: Check that magic number has been cleared after first MainFunction
        18: Rest IdsM module and flush frames
        19: Write empty records header in NvRam
        20: Write frame_1 in NvRam, it will not be propagated due to zero number of records
        21: Initialize IdsM module
        22: Set security event and expect it to be propagated
        23: MainFunction call, event should be propagated
        24: VP: Check for all added frames to be propagated
        25: Rest IdsM module and flush frames
        26: Write wrong magic number header in NvRam
        27: Write frame_1 in NvRam, it will not be propagated due to incorrect magic number
        28: Initialize IdsM module
        29: Set security event and expect it to be propagated
        30: MainFunction call, event should be propagated
        31: VP: Check for all added frames to be propagated
        32: Sending a success message
    
Test Input: 
    
Test Output: 
    </description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.BootNvMBlockValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnectApplicationContext</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Check.BootNvMBlockName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnectSharedEvents</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnectFirstMainFunction</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>869</internalId></specobject>
    <specobject>
      <id>IdsM_Test_ApplConnectInvalidLength</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_46_Partitions_ApplConnect/source/application/IdsM_Test.c</sourcefile>
      <sourceline>349</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Tests IdsMApplConnect behaviour with corrupted records lengths or corrupted context data lengths.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Reset IdsM module and flush frames.
        02: Write header in NvRam
        03: Write frame_1 length and frame_1 in NvRam and expect it
        04: Write frame with invalid record length. It shall be dropped
        05: Write frame_2 length and frame_2 in NvRam. it will not be accepted as ApplConnect has exited
        06: Initialize IdsM module
        07: Set signature length in TestFramework
        09: Valid NvRam records should be written in IdsM buffers in this MainFunction, signed and propagated
        10: VP: Check for all added frames to be propagated
        11: VP: Check that magic number has been cleared after first MainFunction
        12: Rest IdsM module and flush frames
        13: Write header in NvRam
        14: Write frame_1 length and frame_1 in NvRam and expect it
        15: Write frame_8 length and frame_8 in NvRam. It shall be dropped. cd flag is raised without context data
        16: Write frame_2 length and frame_2 in NvRam. it will not be accepted as ApplConnect has exited
        17: Initialize IdsM module
        18: Valid NvRam records should be written in IdsM buffers in this MainFunction, signed and propagated
        19: VP: Check for all added frames to be propagated
        20: VP: Check that magic number has been cleared after first MainFunction
        21: Rest IdsM module and flush frames
        22: Write header in NvRam
        23: Write frame_1 length and frame_1 in NvRam and expect it
        24: Write frame_9 length and frame_9 in NvRam. It shall be dropped. cd length in frame is corrupted
        25: Write frame_2 length and frame_2 in NvRam. it will not be accepted as ApplConnect has exited
        26: Initialize IdsM module
        27: Valid NvRam records should be written in IdsM buffers in this MainFunction, signed and propagated
        28: VP: Check for all added frames to be propagated
        29: VP: Check that magic number has been cleared after first MainFunction
        30: Rest IdsM module and flush frames
        31: Write header in NvRam
        32: Write frame_1 length and frame_1 in NvRam and expect it
        33: Write frame_10 length and frame_10 in NvRam. It shall be dropped. cd length is less than record length
        34: Write frame_2 length and frame_2 in NvRam. it will not be accepted as ApplConnect has exited
        35: Initialize IdsM module
        36: Valid NvRam records should be written in IdsM buffers in this MainFunction, signed and propagated
        37: VP: Check for all added frames to be propagated
        38: VP: Check that magic number has been cleared after first MainFunction
        39: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnectApplicationContext</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>870</internalId></specobject>
    <specobject>
      <id>IdsM_Test_ApplConnectNvmError</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Conformance/IN/IdsM_ConTest_46_Partitions_ApplConnect/source/application/IdsM_Test.c</sourcefile>
      <sourceline>577</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Tests IdsMApplConnect behaviour when Nvm fail to read block.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: Initialize TestFramework.
        02: Register Dem events in test framework
        03: Write header in NvRam
        04: Write frame_1 length and frame_1 in NvRam and expect it
        05: Set the return value for NvM_GetErrorStatus to E_NOT_OK
        06: Initialize IdsM module
        07: Set security event and expect it to be propagated
        08: MainFunction call, event should be propagated
        09: VP: Check for all added frames to be propagated
        10: Reset the return value for NvM_GetErrorStatus to E_OK
        11: Rest IdsM module and flush frames
        12: Set NvM_GetErrorStatus RequestResultPtr to NVM_REQ_NOT_OK
        13: Initialize IdsM module
        14: Set security event and expect it to be propagated
        15: MainFunction call, event should be propagated
        16: VP: Check for all added frames to be propagated
        17: Reset the NvM_GetErrorStatus RequestResultPtr to NVM_REQ_OK
        18: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.BootNvMBlockValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnect</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnectApplicationContext</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.Check.BootNvMBlockName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnectFirstMainFunction</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>eb.custom.IdsM.BootConnectMasterEcu</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>871</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_IDSM_GEN_01001_PDU_IF_LENGTH_TOO_SHORT</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of
    Configured If PDU length is too short to fit all needed content of
    IdsM protocol + timestamp + user data max size
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * IdsMIfTxPdu is configured.

Test Execution: 
    VP: IdsM generator shall notify user that If PDU length is not enough

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01400</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>872</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01002_EVENT_EXTERNAL_IDS_COMBINATION_MUST_BE_UNIQUE</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case there exists events with identical external id and sensor instance id combination
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * 2 events or more are configured.

Test Execution: 
    VP: IdsM generator shall notify user that there exists events with identical external id and sensor instance id combination.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00606</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00608</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>873</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01003_STBM_REFERENCE_NOT_FOUND</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the IdsM generator notifies user when IdsMTimestampOption is set to AUTOSAR but there is no valid reference configured to an StbM timeBase.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * IdsMTimestampOption is set to AUTOSAR.

Test Execution: 
    VP: IdsM generator shall notify user that IdsMTimestampOption is set to AUTOSAR but there is no valid reference configured to an StbM timeBase.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.StbM.Reference</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>874</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01004_INTERNAL_IDS_NOT_CONSECUTIVE</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user when Events IdsMInternalEventId parameters are not 0 based consecutive integers.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * 2 events or more are configured.

Test Execution: 
    VP: IdsM generator shall notify user that Events IdsMInternalEventId parameters are not 0 based consecutive integers.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.Consecutive.Internal.IDs</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>875</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01005_PDU_IF_REFERENCE_NOT_FOUND_IN_PDUR</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>128</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user when IdsMIfTxPduRef is enabled but containing invalid reference.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * IdsMIfTxPduRef is enabled.

Test Execution: 
    VP: IdsM generator shall notify user that IdsMIfTxPduRef is enabled but containing invalid reference.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.IfPdu.Reference</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>876</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01006_MORE_CONTEXT_BUFFERS_THAN_EVENT_BUFFERS</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>152</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user when number of context data buffers are greater than number of configured event buffers.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * none.

Test Execution: 
    VP: IdsM generator shall notify user that number of context data buffers are greater than number of configured event buffers.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.Context.Buffers.Count</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>877</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01007_ALLOCATED_MAX_RAM_TOO_SMALL</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>175</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user when calculated postbuild RAM needs is exceeding the configured precompile IdsMMaxAllocatedRAM value.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * none.

Test Execution: 
    VP: IdsM generator shall notify user that calculated postbuild RAM needs is exceeding the configured precompile IdsMMaxAllocatedRAM value.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.RAM.Size</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>878</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01008_RTE_USAGE_ENABLED_BUT_RTE_NOT_FOUND</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>197</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user when IdsMRteUsage is enabled, but the Rte is not part of the configuration.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * none.

Test Execution: 
    VP: IdsM generator shall notify user that Rte is not configured when IdsMRteUsage is enabled.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.No.Rte.Found</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>879</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01009_CUSTOM_TIMESTAMP_BUT_RTE_DISABLED</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>219</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of
    IdsMTimestampOptions is Custom but IdsMRteUsage is disabled.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    VP: IdsM generator shall notify user that IdsMRteUsage is disabled

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.Custom.Timestamp.And.RteUsage.Disabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>880</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01010_INVALID_DEM_REFERENCE</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>242</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of
    IdsMSinkDem in enabled but DemEventRef is invalid.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    VP: IdsM generator shall notify user that DemEventRef is invalid

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.DemEventParameterRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>881</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01011_DEM_REFERENCE_UNIQUENESS</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>265</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of
    DemEventRef is not unique reference across IdsM events.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    VP: IdsM generator shall notify user that DemEventRef is not unique

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Dem.Event.Unique</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>882</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01012_DEM_CALLBACK_NAME_UNIQUENESS</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>288</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of
    Dem callback name for event with Dem sink are not unique.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    VP: IdsM generator shall notify user that Dem callback name is not unique

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.Dem.Callback.Unique</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>883</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01013_DEM_NO_PROCESSED_CALLBACK</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>311</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of
    Dem processed callback node is not valid.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    VP: IdsM generator shall notify user that Dem processed callback name is not valid

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Config.DemEventParameterRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>884</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01014_DEM_NO_COPY_CALLBACK</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>334</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of
    Dem copy callback node is not valid.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    VP: IdsM generator shall notify user that Dem copy callback name is not valid

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Config.DemEventParameterRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>885</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01015_DEM_PROCESSED_CALLBACK_NAME_UNIQUENESS</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>357</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of
    Dem copy processed name for a specific event is not unique.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    VP: IdsM generator shall notify user that Dem processed callback name is not unique

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.Dem.Callback.Unique</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>886</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01016_PDU_TP_LENGTH_TOO_SHORT</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>380</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of
    Configured TP PDU length is too short to fit all needed content of
    IdsM protocol + timestamp + user data max size
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * IdsMTpTxPdu is configured.

Test Execution: 
    VP: IdsM generator shall notify user that Tp PDU length is not enough

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_01401</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>887</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01017_PDU_TP_REFERENCE_NOT_FOUND_IN_PDUR</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>405</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user when IdsMTpTxPduRef is enabled but containing invalid reference.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * IdsMTpTxPduRef is enabled.

Test Execution: 
    VP: IdsM generator shall notify user that IdsMIfTxPduRef is enabled but containing invalid reference.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.TpPdu.Reference</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>888</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01018_INTERNAL_ERROR_EVENT_UNIQUENESS</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>428</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of
    internal error event is not unique.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    VP: IdsM generator shall notify user that internal error event is not unique

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.InternalEvent.Unique</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>889</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01019_INTERNAL_ERROR_EVENT_FILTER_CHAIN_AGGREGATION_SAMPLING</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>451</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of
    internal error event is referencing a filter chain has aggregation and sampling filter enabled together.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    VP: IdsM generator shall notify user that internal error event is referencing wrong configured filter chain.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00803</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>890</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01020_SATELLITE_RP_WITH_MASTER</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>474</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of
    Satellite Reporting_and_Processing is configured in same core as
    Master partition.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    VP: IdsM generator shall notify user that Satellite Reporting_and_Processing
    is in wrong core.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.NoRpWithMaster</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>891</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01021_TWO_SATELLITE_RP_IN_SAME_CORE</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>499</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of
    two Satellites Reporting_and_Processing is configured in same core.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    VP: IdsM generator shall notify user that Satellite Reporting_and_Processing
    is in wrong core.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.MaxRpPerCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>892</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01022_SATELLITE_RP_ALONE_IN_CORE</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>523</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of
    Satellite Reporting_Only is configured in core that don't include
    other IdsM instance of type Master or Reporting_and_Processing.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    VP: IdsM generator shall notify user that Satellite Reporting_Only
    is in wrong core.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.RoWithRpOrMaster</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>893</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01023_SATELLITE_RO_WITH_MASTER_INVALID_TF_REF</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>548</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of Satellite
    Reporting_Only is configured with Master core with invalid TrustedFunctionRef.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    VP: IdsM generator shall notify user that Satellite Master have invalid
    TrustedFunctionRef.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.TrustedFunctionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>894</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01024_SATELLITE_RO_WITH_SATELLITE_RP_INVALID_TF_REF</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>572</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user in case of Satellite
    Reporting_Only is configured with Satellite Reporting_and_Processing type
    core with invalid TrustedFunctionRef.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    VP: IdsM generator shall notify user that Satellite Reporting_and_Processing
    have invalid TrustedFunctionRef.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.TrustedFunctionRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>895</internalId></specobject>
    <specobject>
      <id>TS_IDSM_GEN_01025_MAX_MSG_LENGTH_EXCEEDED</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Generic/IN/IdsM_GenTest_01_InvalidCfg/source/application/testspec.h</sourcefile>
      <sourceline>597</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the generator notifies user if message length has exceeded
    its max value (0xFFFF).
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    VP: IdsM generator shall notify user that Max message length has exceeded its max value (0xFFFF).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>eb.custom.IdsM.Check.MaxIDSMessageLength</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>896</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>IdsM_Test_RemoveFromStateList</id>
      <status>approved</status>
      <source>EB test case specification (asc_IdsM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_IdsM/test/ts5/Implementation/IN/IdsM_ImpTest_01_Basic/source/application/IdsM_Test.c</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
        Check corner cases for IdsM_RemoveFromStateList when state list is empty, code will not crash.
    
Test Object: 
    
Test Precondition: None.
Test Execution: 
        01: intialize the IdsMTest_EmptyList with IDSM_EMPTY_STATE_LIST
        02: pass IdsMTest_EmptyList
        03: pass 30 as buffer index which will is not found so the function will loop through all segments
        04: Calling IdsM_PduRIfRxIndication dummy interface to be covered in the test coverage
        05: Calling IdsM_PduRTpStartOfReception dummy interface to be covered in the test coverage
        06: Calling IdsM_PduRTpCopyRxData dummy interface to be covered in the test coverage
        07: Calling IdsM_PduRTpRxIndication dummy interface to be covered in the test coverage
        08: Sending a success message
    
Test Input: 
    
Test Output: 
    &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>IdsM.ASR20-11.SWS_IdsM_00300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>897</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
