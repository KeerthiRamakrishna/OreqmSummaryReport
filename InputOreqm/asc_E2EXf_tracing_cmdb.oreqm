<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_E2EXf_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2EXf_public_modulereference_integration_req.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2EXf_requirements_AUTOSAR_SWS_E2ETransformer.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2EXf_requirements_AUTOSAR_SWS_TransformerGeneral.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2EXf_requirements_AUTOSAR_TPS_SoftwareComponentTemplate.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2EXf_requirements_AUTOSAR_TPS_SystemTemplate.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2EXf_requirements_E2EXf_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2EXf_requirements_E2EXf_EB_Extension_ConfigChecks.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2EXf_requirements_E2EXf_TL_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_NoPxx_AUTOSAR_SWS_E2ETransformer_NoPXX.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_NoPxx_DummyCoverage_E2EXf_NoPxx_DummyCoverage.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_Pxx_AUTOSAR_SWS_E2ETransformer_PXX.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_Pxx_DummyCoverage_E2EXf_Pxx_DummyCoverage.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/common_req/E2EXf_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/common_req/E2EXf_Xfrm_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_DocBookImporter/reqm_DSN.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_GenericImporter/reqm_LIM.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_GenericImporter/reqm_SRCXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_GenericImporter/reqm_TCS.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 22:17:54 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_E2EXf_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2EXf_public_modulereference_integration_req.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2EXf_requirements_AUTOSAR_SWS_E2ETransformer.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2EXf_requirements_AUTOSAR_SWS_TransformerGeneral.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2EXf_requirements_AUTOSAR_TPS_SoftwareComponentTemplate.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2EXf_requirements_AUTOSAR_TPS_SystemTemplate.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2EXf_requirements_E2EXf_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2EXf_requirements_E2EXf_EB_Extension_ConfigChecks.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2EXf_requirements_E2EXf_TL_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_NoPxx_AUTOSAR_SWS_E2ETransformer_NoPXX.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_NoPxx_DummyCoverage_E2EXf_NoPxx_DummyCoverage.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_Pxx_AUTOSAR_SWS_E2ETransformer_PXX.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_Native/asc_E2E_requirements_E2EXf_Pxx_DummyCoverage_E2EXf_Pxx_DummyCoverage.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/common_req/E2EXf_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/common_req/E2EXf_Xfrm_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_DocBookImporter/reqm_DSN.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_GenericImporter/reqm_LIM.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_GenericImporter/reqm_SRCXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_GenericImporter/reqm_TCS.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/ReqM2_OldCImporter/reqm_TCS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/2018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>feavc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swpad</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swts</regex>
      <regex>pdoc</regex>       <!-- since 10/2018: introduced for updated tracing model-->
      <regex>dev</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swadvc</regex>     <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swuvc</regex>      <!-- since 10/2018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/2020: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>
      <regex>doc</regex>

      <!-- legacy items -->
      <regex>req</regex>        <!-- deprecated 10/2017: old swrs type -->
      <regex>dsn</regex>        <!-- deprecated 10/2017: old swdd -->
      <regex>src</regex>        <!-- deprecated 10/2017: old impl type -->
      <regex>tcs</regex>        <!-- deprecated 10/2017: replaced by swintts and swuts -->
      <regex>dsn_arch</regex>   <!-- deprecated 10/2017: old swad type -->
      <regex>man</regex>
      <regex>tso</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='req') and (../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.rejected</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.count</name>
      <description>Requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='req') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.req.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='req') or (../@doctype='swrs')) and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[((../@doctype='swdd') or (../@doctype='dsn')) and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.req.needscoverage.doctypes</name>
      <description>Requirements can be covered only by req, dsn_arch, dev, lim, dsn, src, tcs, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='req')]</applyto>
          <condition>(./needscoverage/needsobj="req" or ./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swad, dev, lim, swurs, swdd, src, swuts, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dsn.needscoverage.doctypes</name>
      <description>Design elements can only be covered by dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn')]</applyto>
          <condition>(./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.src.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='src')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="tsc" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes") )</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="dsn_arch" or ./fulfilledby/ffbObj/ffbType="dsn_arch" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>



    <rule>
      <name>ERR.dsn_arch.needscoverage.doctypes</name>
      <description>Architectural design objects can only be covered by dsn_arch, dsn, src, tcs, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dsn_arch')]</applyto>
          <condition>(./needscoverage/needsobj="dsn_arch" or ./needscoverage/needsobj="dsn" or ./needscoverage/needsobj="src" or ./needscoverage/needsobj="tcs" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, req, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
         </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.tcs.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>
  </rules>
    <oreqmRules>
          <rule>
            <name>WRN.tsc.needscoverage.count</name>
            <description>Violated if there are more than 10 tsc specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='tcs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='tsc'])) &gt; 10]/furtherinfo</applyto>
                    <regex>tsc.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.req.needscoverage.count</name>
            <description>Violated if there are more than 10 req specobjects covering one specobject and no appropriate information is provided in furtherinfo, refinement on req to req are excluded. Refinements of requirements Req to Req and Req to Fea are excluded from this rule since this is tracing on the same level. The justification in furtherinfo must contain the rule name.</description>
           <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(../@doctype != 'req') and (../@doctype != 'fea') and ((count(./needscoverage/needscov[needsobj='req']/coveredby/linkedfrom)) &gt; 10)]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='req'])) &gt; 10]/furtherinfo</applyto>
                    <regex>req.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
     </rule>

        <rule>
            <name>WRN.src.needscoverage.count</name>
            <description>Violated if there are more than 10 src specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='src']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>

        <rule>
            <name>WRN.dsn_arch.needscoverage.count</name>
            <description>Violated if there are more than 10 dsn_arch specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='dsn_arch']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
            <regexchecks>
                <regexcheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='dsn_arch'])) &gt; 10]/furtherinfo</applyto>
                    <regex>dsn_arch.needscoverage.count</regex>
                </regexcheck>
            </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="lim">
    <specobject>
      <id>E2EXf.EB.IntReq.CyclicCallByRte01</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
      Cyclical call of Function E2EXf_"transformerId"
      </description>
      <rationale>
      This represents use case requirement UC_E2EXf_00007 which is considered
      as integration requirement.
      </rationale>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.UC_E2EXf_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.IntReq.CyclicCallByRte02</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
      Cyclical call of Function E2EXf_Inv_"transformerId"
      </description>
      <rationale>
        This represents use case requirement UC_E2EXf_00008 which is considered
        as integration requirement.
      </rationale>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.UC_E2EXf_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>

    <specobject>
      <id>E2EXf.EB_IntReq.InitRoutines</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        <!-- class: major, long-term -->
        <!-- class-reason: important to be known by customer during integration  -->
        <!-- Affected AUTOSAR releases: all -->
        <code>E2EXf_Init()</code> and <code>E2EXf_DeInit()</code> do not exist.
        Each partition shall invoke its individual de-/initialization routine
        namely <code>E2EXf[_&lt;PartitionNameInfix&gt;]_PartitionInit</code> respectively
        <code>E2EXf[_&lt;PartitionNameInfix&gt;]_PartitionDeInit</code>.
      </description>
      <rationale>
        Different transformations might be mapped to different partitions.
        Every partition must provide their own initialization routine
        in order to support multi-core systems.
      </rationale>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>


  </specobjects>
    <specobjects doctype="req">
    <specobject>
      <id>E2EXf.UC_E2EXf_00007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 4.2.1</source>
      <version>1</version>
      <description>
        The function E2EXf_&lt;transformerId&gt; shall be called cyclically by RTE.
        (SRS_E2E_08538)
      </description>
      <comment>
        This requirement is deleted in R22-11.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>lim</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.IntReq.CyclicCallByRte01</srcid><srcstatus/><internalId>0</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <specobject>
      <id>E2EXf.UC_E2EXf_00008</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 4.2.1</source>
      <version>1</version>
      <description>
        The function E2EXf_Inv_&lt;transformerId&gt; shall be called cyclically by RTE,
        regardless if new data is available or not (e.g. regardless of result
        reported by Rte_IsUpdated).(SRS_E2E_08538)
      </description>
      <comment>
        This requirement is deleted in R22-11.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>lim</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.IntReq.CyclicCallByRte02</srcid><srcstatus/><internalId>1</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 4.2.1</source>
      <version>1</version>
      <description>
        The E2E transformer module shall provide at least the following code files:
        - E2EXf.c(SRS_E2E_08538)
      </description>
      <comment>
        Configuration variants 'Link Time' and 'Post Build' are not supported,
        i.e. files E2EXf_Lcfg.c and E2EXf_PBcfg.c are not provided.
        This requirement is deleted in R22-11.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01008_Files</srcid><srcstatus/><internalId>656</internalId></linkedfrom></coveredby></needscov>
        <!-- Unsupported link time and post build, solely pre compile -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedLinkTimeAndPostBuild</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 4.2.1</source>
      <version>1</version>
      <description>
        The E2E transformer module shall provide at least the following include files:
        - E2EXf_Cfg.h
        - E2EXf.h.(SRS_E2E_08538)
      </description>
      <comment>
        Configuration variants 'Link Time' and 'Post Build' are not supported,
        i.e. files E2EXf_Lcfg.h and E2EXf_PBcfg.h are not provided.
        This requirement is deleted in R22-11.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01008_Files</srcid><srcstatus/><internalId>656</internalId></linkedfrom></coveredby></needscov>
        <!-- Unsupported link time and post build, solely pre compile -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedLinkTimeAndPostBuild</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 4.2.1</source>
      <version>1</version>
      <description>
        The contents of E2EXf files shall be as follows:
        File          Contents
        E2EXf.c       Definitions of config-independent functions
        E2EXf.h       Declarations of config-independent functions
        E2EXf_Cfg.h   Pre-compile settings, if any (e.g. #defines). No standard pre-compile
                      settings are defined in SWS E2E Transformer, but in case some custom
                      pre-compile time settings are defined, then this file is used for them.
        (SRS_E2E_08538)
      </description>
      <comment>
        Configuration variants 'Link Time' and 'Post Build' are not supported,
        i.e. related files E2EXf_Lcfg.c/h and E2EXf_PBcfg.c/h are not provided.
        This requirement is deleted in R22-11.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <!-- EB specific include file structure is defined in design,
                                   Unsupported link time and post build, solely pre compile -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedLinkTimeAndPostBuild</srcid><srcstatus/><internalId>516</internalId></linkedfrom><linkedfrom><srcid>dev.E2EXf.IncludeFileStructure</srcid><srcstatus/><internalId>520</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>E2EXf.top.001</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 4.2.1</source>
      <version>1</version>
      <description>
        The file structure and include-dependencies in E2E Transformer shall be as follows:
        For details, see figure within given source.
        (SRS_E2E_08538)
      </description>
      <comment>
        Incorporated RfC 69476 'Incomplete include file structure',
        see https://jira.autosar.org/browse/AR-15126
        This requirement is deleted in R22-11.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedLinkTimeAndPostBuild</srcid><srcstatus/><internalId>516</internalId></linkedfrom><linkedfrom><srcid>dev.E2EXf.IncludeFileStructure</srcid><srcstatus/><internalId>520</internalId></linkedfrom></coveredby></needscov>
        <!-- EB specific include file structure is defined in design,
                                   Unsupported link time and post build, solely pre compile -->
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.Design.IncludeFileStructure</srcid><srcstatus/><internalId>533</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00161</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The E2E transformer defined in this document shall be used as a transformer if:
          - the attribute protocol of the TransformationTechnology is set to E2E
          - and the attribute version of the TransformationTechnology is set to 1.0.0
          - and the attribute transformerClass of the TransformationTechnology is set to safety
        (RS_E2E_08538)
      </description>
      <comment>
        This requirement does not exist in ASR421 but for other two transformers it does. Note
        that there are multiple inconsistencies for the requirements of attributes of
        TransformationTechnology in the AUTOSAR SWS:
          - version number of TransformationTechnology for ComXf
              in ASR421 is 1 but in ASR430 is 1.0.0
          - version number of TransformationTechnology for SomeIpXf
              in both ASR versions is 1
      </comment>
      <releases>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.TransformationTechnology.GeneratedCodeCheck</srcid><srcstatus/><internalId>267</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_W_00002</srcid><srcstatus/><internalId>288</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.Xfrm_MCG_E_00018</srcid><srcstatus/><internalId>295</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00134</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The configuration options in EndToEndTransformationComSpecProps shall have precedence
        over the options in EndToEndTransformationDescription and
        EndToEndTransformationISignalProps. (RS_E2E_08538)
      </description>
      <comment>
        That means:
        Configuration options in EndToEndTransformationComSpecProps override the
        configuration options in EndToEndTransformationDescription and
        EndToEndTransformationISignalProps.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_31_P01ComXf_MultipleRec</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_32_P04SomeIpXf_MultipleRec</srcid><srcstatus/><internalId>613</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00154</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If configuration option EndToEndTransformationComSpecProps.disableEndToEndCheck is set
        for a given &lt;transformerId&gt;, then E2E Transformer shall skip the invocation
        of the E2E Library - it shall only perform buffer processing (e.g. copying from
        inputBuffer to buffer). Return value shall be E_OK.(RS_E2E_08538)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00154</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>346</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.EndToEndTransformationComSpecProps</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00090</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        In case of post-build-selectable configuration, the variants shall be named according
        to the configuration attribute PredefinedVariant.shortName. This means: &lt;v&gt; =
        PredefinedVariant.shortName.(RS_E2E_08538)
      </description>
      <comment>
        Configuration variant 'Post Build' is not supported.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- Unsupported Post Build -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedLinkTimeAndPostBuild</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00089</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        In case of link-time configuration, there is just one variant, this means:
        &lt;v&gt; = emtpy (NULL string).(RS_E2E_08538)
      </description>
      <comment>
        Configuration variant 'Link Time' is not supported.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- Unsupported Link Time, solely pre compile -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedLinkTimeAndPostBuild</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The E2E Transformer shall generate the following data structure, to store the
        configuration of E2E Transformer module:
        E2EXf_ConfigStruct_&lt;v&gt; (of type E2EXf_ConfigType)
        (RS_E2E_08538)
      </description>
      <comment>
        Only configuration variant 'Precompile Time' is supported, therefore no
        configuration data structure exits.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedLinkTimeAndPostBuild</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00125</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The E2E Transformer shall derive the required number of independent state data resources
        of types E2E_PXXProtectStateType, E2E_PXXCheckStateType, and E2E_SMCheckStateType to
        perform E2E Protection within the E2E Transformer module from the number of
        E2E-protected data uniquely identified with &lt;transformerId&gt;, protected by profile
        PXX.(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_34_P01_P04_P05_Indep_Vars</srcid><srcstatus/><internalId>615</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00126</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The E2E Transformer shall derive the required number of independent statically
        initialized configuration objects of types E2E_PXXConfigType and E2E_SMConfigType and
        (if required) additional information (e.g. the Source ID on client side for profiles
        P04m, P07m, P08m, P44m) to perform E2E Protection within the E2E Transformer, from:
          1. the number of E2E-protected data uniquely identified with &lt;transformerId&gt;,
             protected by profile PXX, and
          2. the number of configuration variants (post-build selectable only).(RS_E2E_08538)
      </description>
      <comment>
        Only configuration variant pre compile time is supported, i.e. the second point
        is not considered.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_34_P01_P04_P05_Indep_Vars</srcid><srcstatus/><internalId>615</internalId></linkedfrom></coveredby></needscov>
        <!-- Variant Post Build not supported-->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedLinkTimeAndPostBuild</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The generated configuration object of type E2E_P01ConfigType shall be initialized
        according to the following:
          - DataID = EndToEndTransformationISignalProps.dataID
          - DataLength = EndToEndTransformationISignalProps.dataLength
          - CounterOffset = EndToEndTransformationDescription.counterOffset
          - CRCOffset = EndToEndTransformationDescription.crcOffset
          - DataIDNibbleOffset = EndToEndTransformationDescription.dataIdNibbleOffset
          - DataIDMode shall be set to
            - E2E_P01_DATAID_BOTH if EndToEndTransformationDescription.dataIDMode == all16Bit
            - E2E_P01_DATAID_ALT if EndToEndTransformationDescription.dataIDMode ==
              alternating8Bit
            - E2E_P01_DATAID_LOW if EndToEndTransformationDescription.dataIDMode == lower8Bit
            - E2E_P01_DATAID_NIBBLE if EndToEndTransformationDescription.dataIDMode == nibble
          - MaxDeltaCounterInit = EndToEndTransformationComSpecProps.maxDeltaCounter-1 or
            EndToEndTransformationDescription.maxDeltaCounter-1
          - MaxNoNewOrRepeatedData = EndToEndTransformationComSpecProps.maxNoNewOrRepeatedData
            or EndToEndTransformationDescription.maxNoNewOrRepeatedData
          - SyncCounterInit = EndToEndTransformationComSpecProps.syncCounterInit or
            EndToEndTransformationDescription.syncCounterInit.(RS_E2E_08538)
      </description>
      <!-- This requirement is also applicable for profile PRN and linked within PRN tests -->
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_05_P01_InP_ComXf</srcid><srcstatus/><internalId>586</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_06_P01_OoP_ComXf</srcid><srcstatus/><internalId>587</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_09_P01_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_36_P01A_OoP_ComXf_ASCE2EXF516</srcid><srcstatus/><internalId>617</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00010</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00118</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The generated configuration object of type E2E_P02ConfigType shall be initialized
        according to the following:
          - DataIDList = EndToEndTransformationISignalProps.dataID (array)
          - DataLength = EndToEndTransformationISignalProps.dataLength
          - Offset = EndToEndTransformationDescription.offset
          - MaxDeltaCounterInit = EndToEndTransformationComSpecProps.maxDeltaCounter-1 or
            EndToEndTransformationDescription.maxDeltaCounter-1
          - MaxNoNewOrRepeatedData = EndToEndTransformationComSpecProps.maxNoNewOrRepeatedData
            or EndToEndTransformationDescription.maxNoNewOrRepeatedData
          - SyncCounterInit = EndToEndTransformationComSpecProps.syncCounterInit or
            EndToEndTransformationDescription.syncCounterInit.(RS_E2E_08538)
      </description>
      <comment>
        This requirement falsely contained EndToEndTransformationDescription.dataLength,
        it was removed and a RFC was created: AR-68269.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_10_P02_InP_ComXf</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_11_P02_OoP_ComXf</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_14_P02_InP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>595</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00011</srcid><srcstatus/><internalId>315</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00087</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The generated configuration object of type E2E_P04ConfigType shall be initialized
        according to the following (one-to-one mapping):
          - DataID = EndToEndTransformationISignalProps.dataID
          - MinDataLength = EndToEndTransformationISignalProps.minDataLength
          - MaxDataLength = EndToEndTransformationISignalProps.maxDataLength
          - Offset = EndToEndTransformationDescription.offset
          - MaxDeltaCounter = EndToEndTransformationComSpecProps.maxDeltaCounter or
            EndToEndTransformationDescription.maxDeltaCounter(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_01_P04_InP_SomeIpXf</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_02_P04_OoP_SomeIpXf</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_04_P04_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>585</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00010</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00119</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The generated configuration object of type E2E_P05ConfigType shall be initialized
        according to the following (one-to-one mapping):
          - DataID = EndToEndTransformationISignalProps.dataID
          - DataLength = EndToEndTransformationISignalProps.dataLength
          - Offset = EndToEndTransformationDescription.offset
          - MaxDeltaCounter = EndToEndTransformationComSpecProps.maxDeltaCounter or
            EndToEndTransformationDescription.maxDeltaCounter (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_15_P05_InP_SomeIpXf</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_16_P05_OoP_SomeIpXf</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_18_P05_InP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>599</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00010</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00120</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The generated configuration object of type E2E_P06ConfigType shall be initialized
        according to the following (one-to-one mapping):
          - DataID = EndToEndTransformationISignalProps.dataID
          - MinDataLength = EndToEndTransformationISignalProps.minDataLength
          - MaxDataLength = EndToEndTransformationISignalProps.maxDataLength
          - Offset = EndToEndTransformationDescription.offset
          - MaxDeltaCounter = EndToEndTransformationComSpecProps.maxDeltaCounter or
            EndToEndTransformationDescription.maxDeltaCounter(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_19_P06_InP_SomeIpXf</srcid><srcstatus/><internalId>600</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_20_P06_OoP_SomeIpXf</srcid><srcstatus/><internalId>601</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_22_P06_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>603</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00010</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00163</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The generated configuration object of type E2E_P07ConfigType shall be initialized
        according to the following (one-to-one mapping):
          - DataID = EndToEndTransformationISignalProps.dataID
          - MinDataLength = EndToEndTransformationISignalProps.minDataLength
          - MaxDataLength = EndToEndTransformationISignalProps.maxDataLength
          - Offset = EndToEndTransformationDescription.offset
          - MaxDeltaCounter = EndToEndTransformationComSpecProps.maxDeltaCounter or
            EndToEndTransformationDescription.maxDeltaCounter(RS_E2E_08538)
      </description>
      <comment>
        This requirement was taken from SWS Release 4.3.0.
      </comment>
      <releases>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00010</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_23_P07_InP_SomeIpXf</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_24_P07_OoP_SomeIpXf</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_26_P07_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00177</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The generated configuration object of type E2E_P08ConfigType shall be initialized
        according to the following (one-to-one mapping):
          - DataID = EndToEndTransformationISignalProps.dataID
          - MinDataLength = EndToEndTransformationISignalProps.minDataLength
          - MaxDataLength = EndToEndTransformationISignalProps.maxDataLength
          - Offset = EndToEndTransformationDescription.offset
          - MaxDeltaCounter = EndToEndTransformationComSpecProps.maxDeltaCounter or
            EndToEndTransformationDescription.maxDeltaCounter(RS_E2E_08538)
      </description>
      <comment>
        This requirement was taken from SWS Release R22-11.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.E2E_PXXConfigType</srcid><srcstatus/><internalId>526</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00162</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The generated configuration object of type E2E_P11ConfigType shall be initialized
        according to the following (one-to-one mapping):
          - DataID = EndToEndTransformationISignalProps.dataID
          - DataLength = EndToEndTransformationISignalProps.dataLength
          - CounterOffset = EndToEndTransformationDescription.counterOffset
          - CRCOffset = EndToEndTransformationDescription.crcOffset
          - DataIDNibbleOffset = EndToEndTransformationDescription.dataIdNibbleOffset
          - DataIDMode shall be set to
            - E2E_P11_DATAID_BOTH if
              EndToEndTransformationDescription.dataIDMode == all16Bit
            - E2E_P11_DATAID_NIBBLE if
              EndToEndTransformationDescription.dataIDMode == nibble
          - MaxDeltaCounter = EndToEndTransformationComSpecProps.maxDeltaCounter or
            EndToEndTransformationDescription.maxDeltaCounter (RS_E2E_08538)
      </description>
      <comment>
        This requirement is applicable for E2EP11 and also customer specific profiles,
        which are based on E2EP11. Furthermore, it is linked within those profile tests.
      </comment>
      <releases>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_50_P11_InP_SomeIpXf</srcid><srcstatus/><internalId>631</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_51_P11_OoP_SomeIpXf</srcid><srcstatus/><internalId>632</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00010</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00164</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The generated configuration object of type E2E_P22ConfigType shall be initialized
        according to the following:
          - DataIDList = EndToEndTransformationISignalProps.dataID (array)
          - DataLength = EndToEndTransformationISignalProps.dataLength
          - Offset = EndToEndTransformationDescription.offset
          - MaxDeltaCounter = EndToEndTransformationComSpecProps.maxDeltaCounter or
            EndToEndTransformationDescription.maxDeltaCounter(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.E2E_PXXConfigType</srcid><srcstatus/><internalId>526</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00178</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The generated configuration object of type E2E_P04mConfigType shall be initialized
        according to the following (one-to-one mapping):
          - DataID = EndToEndTransformationISignalProps.dataID
          - MinDataLength = EndToEndTransformationISignalProps.minDataLength
          - MaxDataLength = EndToEndTransformationISignalProps.maxDataLength
          - Offset = EndToEndTransformationDescription.offset
          - MaxDeltaCounter = EndToEndTransformationComSpecProps.maxDeltaCounter or
            EndToEndTransformationDescription.maxDeltaCounter(RS_E2E_08538)
      </description>
      <comment>
        This requirement was taken from SWS Release R22-11.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.CSInterface.Support</srcid><srcstatus/><internalId>523</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00179</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The generated configuration object of type E2E_P07mConfigType shall be initialized
        according to the following (one-to-one mapping):
          - DataID = EndToEndTransformationISignalProps.dataID
          - MinDataLength = EndToEndTransformationISignalProps.minDataLength
          - MaxDataLength = EndToEndTransformationISignalProps.maxDataLength
          - Offset = EndToEndTransformationDescription.offset
          - MaxDeltaCounter = EndToEndTransformationComSpecProps.maxDeltaCounter or
            EndToEndTransformationDescription.maxDeltaCounter(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.E2E_PXXConfigType</srcid><srcstatus/><internalId>526</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00204</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The generated configuration object of type E2E_P08mConfigType shall be initialized
        according to the following (one-to-one mapping):
          - DataID = EndToEndTransformationISignalProps.dataID
          - MinDataLength = EndToEndTransformationISignalProps.minDataLength
          - MaxDataLength = EndToEndTransformationISignalProps.maxDataLength
          - Offset = EndToEndTransformationDescription.offset
          - MaxDeltaCounter = EndToEndTransformationComSpecProps.maxDeltaCounter or
            EndToEndTransformationDescription.maxDeltaCounter(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.E2E_PXXConfigType</srcid><srcstatus/><internalId>526</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00205</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The generated configuration object of type E2E_P44mConfigType shall be initialized
        according to the following (one-to-one mapping):
          - DataID = EndToEndTransformationISignalProps.dataID
          - MinDataLength = EndToEndTransformationISignalProps.minDataLength
          - MaxDataLength = EndToEndTransformationISignalProps.maxDataLength
          - Offset = EndToEndTransformationDescription.offset
          - MaxDeltaCounter = EndToEndTransformationComSpecProps.maxDeltaCounter or
            EndToEndTransformationDescription.maxDeltaCounter(RS_E2E_08538)
      </description>
      <comment>
        This requirement was taken from SWS Release R22-11.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_54_P44m_InP_Client_SomeIpXf</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_55_P44m_OoP_Client_SomeIpXf</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_56_P44m_InP_Server_SomeIpXf</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_57_P44m_OoP_Server_SomeIpXf</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
           <linksto>E2EXf.top.014</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
           <linksto>E2EXf.top.015</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00176</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The generated configuration object of type E2E_P44ConfigType shall be initialized
        according to the following (one-to-one mapping):
          - DataID = EndToEndTransformationISignalProps.dataID
          - MinDataLength = EndToEndTransformationISignalProps.minDataLength
          - MaxDataLength = EndToEndTransformationISignalProps.maxDataLength
          - Offset = EndToEndTransformationDescription.offset
          - MaxDeltaCounter = EndToEndTransformationComSpecProps.maxDeltaCounter or
            EndToEndTransformationDescription.maxDeltaCounter(RS_E2E_08538)
      </description>
      <comment>
        This requirement was taken from SWS Release R22-11.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_52_P44_InP_SomeIpXf</srcid><srcstatus/><internalId>633</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_53_P44_OoP_SomeIpXf</srcid><srcstatus/><internalId>634</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00088</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The generated config structure of type E2E_SMConfigType, shall be initialized
        according to the following (one-to-one mapping):
          - WindowSize = EndToEndTransformationComSpecProps.windowSize or
            EndToEndTransformationDescription.windowSize
          - MinOkStateInit = EndToEndTransformationComSpecProps.minOkStateInit or
            EndToEndTransformationDescription.minOkStateInit
          - MaxErrorStateInit = EndToEndTransformationComSpecProps.maxErrorStateInit or
            EndToEndTransformationDescription.maxErrorStateInit
          - MinOkStateValid = EndToEndTransformationComSpecProps.minOkStateValid or
            EndToEndTransformationDescription.minOkStateValid
          - MaxErrorStateValid = EndToEndTransformationComSpecProps.maxErrorStateValid or
            EndToEndTransformationDescription.maxErrorStateValid
          - MinOkStateInvalid = EndToEndTransformationComSpecProps.minOkStateInvalid
            or EndToEndTransformationDescription.minOkStateInvalid
          - MaxErrorStateInvalid = EndToEndTransformationComSpecProps.maxErrorStateInvalid or
            EndToEndTransformationDescription.maxErrorStateInvalid
        (RS_E2E_08538)
      </description>
      <furtherinfo>
        Justifying rule: WRN.tsc.needscoverage.count violation.
        This tcs is covered by more than 10 EB tcs.
      </furtherinfo>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_01_P04_InP_SomeIpXf</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_02_P04_OoP_SomeIpXf</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_04_P04_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_05_P01_InP_ComXf</srcid><srcstatus/><internalId>586</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_06_P01_OoP_ComXf</srcid><srcstatus/><internalId>587</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_09_P01_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_10_P02_InP_ComXf</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_11_P02_OoP_ComXf</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_14_P02_InP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_15_P05_InP_SomeIpXf</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_16_P05_OoP_SomeIpXf</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_18_P05_InP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_19_P06_InP_SomeIpXf</srcid><srcstatus/><internalId>600</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_20_P06_OoP_SomeIpXf</srcid><srcstatus/><internalId>601</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_22_P06_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_23_P07_InP_SomeIpXf</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_24_P07_OoP_SomeIpXf</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_26_P07_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_41_PJLR_InP_SomeIpXf</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_42_PJLR_OoP_SomeIpXf</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_45_PRN_InP_SomeIpXf</srcid><srcstatus/><internalId>626</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_46_PRN_OoP_SomeIpXf</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_50_P11_InP_SomeIpXf</srcid><srcstatus/><internalId>631</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_51_P11_OoP_SomeIpXf</srcid><srcstatus/><internalId>632</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_52_P44_InP_SomeIpXf</srcid><srcstatus/><internalId>633</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_53_P44_OoP_SomeIpXf</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_54_P44m_InP_Client_SomeIpXf</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_55_P44m_OoP_Client_SomeIpXf</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_56_P44m_InP_Server_SomeIpXf</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_57_P44m_OoP_Server_SomeIpXf</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00096</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The configuration object E2EXf_ConfigStruct_&lt;v&gt; (see SWS_E2EXf_00011) shall
        be initialized to contain or to reference the config structures that were instantiated
        in above requirements of this section.(RS_E2E_08538)
      </description>
      <comment>
        Only configuration variant 'Precompile Time' is supported, therefore no
        configuration data structure exits.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedLinkTimeAndPostBuild</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00097</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 4.2.1</source>
      <version>1</version>
      <description>
      In link-time variant, the E2EXf_Config pointer shall be initialized to
      reference E2EXf_ConfigStruct_0.(SRS_E2E_08538)
      </description>
      <comment>
        Configuration variant 'Link Time' is not supported.
        Deleted in R22-11
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedLinkTimeAndPostBuild</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00023</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        In all E2E Transformer variants, the generated state objects may be left uninitialized
        (i.e. without providing explicit initialization values).
        (RS_E2E_08538)
      </description>
      <comment>
        This requirement is informational only. This requirement is optional, see the "may" in
        the description.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00024</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        In post-build-selectable variant, E2EXf_Init() shall check that Config pointer
        (received as function parameter) points to one of the configuration variants
        E2EXf_ConfigStruct_&lt;v&gt;. If it is equal, then E2EXf_Init() shall select the passed
        configuration variant, and it shall set the module initialization state to TRUE
        according to SWS_E2EXf_00130.(RS_E2E_08538)
      </description>
      <comment>
        E2EXf_Init() is replaced with E2EXf_PartitionInit().
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- API function does not exist -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedLinkTimeAndPostBuild</srcid><srcstatus/><internalId>516</internalId></linkedfrom><linkedfrom><srcid>dev.E2EXf.InitializationRoutines</srcid><srcstatus/><internalId>521</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The E2EXf_Init() function shall initialize the following external state data resources
        managed by E2E transformer (see SWS_E2EXf_00125) as follows:
          - Initialization of state data resources of type E2E_PXXProtectStateType by
            calling corresponding E2E_PXXProtectInit() methods,
          - Initialization of state data resources of type E2E_PXXCheckStateType by
            calling corresponding E2E_PXXCheckInit() methods,
          - Initialization of state data resources of type E2E_SMCheckStateType by calling
            corresponding E2E_SMCheckInit() methods.(RS_E2E_08538)
      </description>
      <comment>
        E2EXf_Init() is replaced with E2EXf_PartitionInit().
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- API function does not exist -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.InitializationRoutines</srcid><srcstatus/><internalId>521</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ffbObj>
           <ffbId>E2E.EB.SWS_E2EXf_00021</ffbId>
           <ffbType>req</ffbType>
           <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>417</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
           <linksto>E2EXf.top.015</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00158</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The E2EXf_Init() function shall initialize the internal state data resources of E2E
        functions forward, protect check and state machine of E2E transformer.(RS_E2E_08538)
      </description>
      <comment>
        E2EXf_Init() is replaced with E2EXf_PartitionInit().
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- API function does not exist -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.E2EXf_InitInitialization</srcid><srcstatus/><internalId>527</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00159</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        In case of post-build configuration, E2EXf_Init() function shall initialize the E2E
        transformer for a driving cycle.(RS_E2E_08538)
      </description>
      <comment>
        E2EXf_Init() is replaced with E2EXf_PartitionInit().
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- API function does not exist -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.E2EXf_InitConfig</srcid><srcstatus/><internalId>528</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00130</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The E2E Transformer shall maintain a boolean information (Initialization state) that is
        only set to TRUE, if the module has been successfully initialized via a call to
        E2EXf_Init(). Otherwise, it is set to FALSE.
        (RS_E2E_08538)
      </description>
      <comment>
        E2EXf_Init() is replaced with E2EXf_PartitionInit().
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- API function does not exist -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.InitializationRoutines</srcid><srcstatus/><internalId>521</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00132</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        In case of deinitialization (invocation of E2EXf_DeInit()), the module initialization
        state shall be set to FALSE.(RS_E2E_08538)
      </description>
      <comment>
        E2EXf_DeInit() is replaced with E2EXf_PartitionDeInit().
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- API does not exist -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.InitializationRoutines</srcid><srcstatus/><internalId>521</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00133</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If the E2E Transformer has not been correctly initialized (which means that E2EXf_Init()
        was not successfully called before), then all generated E2E Transformer APIs shall
        immediately return E_SAFETY_HARD_RUNTIMEERROR.
        (RS_E2E_08538)
      </description>
      <comment>
        E2EXf_Init() is replaced with E2EXf_PartitionInit().
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- API function does not exist -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.InitializationRoutines</srcid><srcstatus/><internalId>521</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.SWS_E2EXf_00133</srcid><srcstatus/><internalId>258</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.EB.SWS_E2EXf_00133</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>415</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>2</version>
      <description>
        The function E2EXf_&lt;transformerId&gt; shall be generated for each sent
        E2E-protected data element and each protected C/S operation (&lt;transformerId&gt;).
        (RS_E2E_08538)
      </description>
      <furtherinfo>
        Justifying rule: WRN.tsc.needscoverage.count violation.
        This tcs is covered by more than 10 EB tcs.
      </furtherinfo>
      <comment>
        This requirement was adapted according to SWS Release R22-11.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_01_P04_InP_SomeIpXf</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_02_P04_OoP_SomeIpXf</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_03_P04_OoP_ComXf</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_04_P04_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_05_P01_InP_ComXf</srcid><srcstatus/><internalId>586</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_06_P01_OoP_ComXf</srcid><srcstatus/><internalId>587</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_07_P01_InP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>588</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_08_P01_OoP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>589</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_09_P01_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_10_P02_InP_ComXf</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_11_P02_OoP_ComXf</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_12_P02_InP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>593</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_13_P02_OoP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>594</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_14_P02_InP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_15_P05_InP_SomeIpXf</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_16_P05_OoP_SomeIpXf</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_17_P05_OoP_ComXf</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_18_P05_InP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_19_P06_InP_SomeIpXf</srcid><srcstatus/><internalId>600</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_20_P06_OoP_SomeIpXf</srcid><srcstatus/><internalId>601</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_21_P06_OoP_ComXf</srcid><srcstatus/><internalId>602</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_22_P06_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_23_P07_InP_SomeIpXf</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_24_P07_OoP_SomeIpXf</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_25_P07_OoP_ComXf</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_26_P07_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_35_P05_InP_ComXf</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_39_PJLR_InP_ComXf</srcid><srcstatus/><internalId>620</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_40_PJLR_OoP_ComXf</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_41_PJLR_InP_SomeIpXf</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_42_PJLR_OoP_SomeIpXf</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_43_PRN_InP_ComXf</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_44_PRN_OoP_ComXf</srcid><srcstatus/><internalId>625</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_45_PRN_InP_SomeIpXf</srcid><srcstatus/><internalId>626</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_46_PRN_OoP_SomeIpXf</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_48_P11_InP_ComXf</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_49_P11_OoP_ComXf</srcid><srcstatus/><internalId>630</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_50_P11_InP_SomeIpXf</srcid><srcstatus/><internalId>631</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_51_P11_OoP_SomeIpXf</srcid><srcstatus/><internalId>632</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_52_P44_InP_SomeIpXf</srcid><srcstatus/><internalId>633</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_53_P44_OoP_SomeIpXf</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_54_P44m_InP_Client_SomeIpXf</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_55_P44m_OoP_Client_SomeIpXf</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_56_P44m_InP_Server_SomeIpXf</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_57_P44m_OoP_Server_SomeIpXf</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00102</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        In-place E2EXf_&lt;transformerId&gt; shall perform the following two precondition
        checks, without continuing further processing:
         1.  (buffer == NULL)
             ||
             (buffer != NULL &amp;&amp; inputBufferLength  &lt;
              EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
         2.  bufferLength == NULL.
        If any of above conditions is TRUE, then the function shall return
        E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
      </description>
      <comment>
        Incorporated RfC 75163:
        Rewrite '(buffer == NULL &amp;&amp; inputBufferLength != 0)' to '(buffer == NULL)'
        in point 1, see https://jira.autosar.org/browse/AR-11367
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00102</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>350</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00106</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        Out-of-place E2EXf_&lt;transformerId&gt; shall perform the
        following three precondition checks, without continuing further processing:
         1.  (inputBuffer == NULL)
             ||
             (inputBuffer != NULL &amp;&amp; inputBufferLength  &lt;
             EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
         2.  bufferLength == NULL
         3.  buffer == NULL
        If any of above conditions is TRUE, then the function shall return
        E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
      </description>
      <comment>
        Incorporated RfC 75163:
        Rewrite '(inputBuffer == NULL &amp;&amp; inputBufferLength != 0)' to '(inputBuffer == NULL)'
        in point 1, see https://jira.autosar.org/browse/AR-11367
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00106</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>351</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00180</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m both the in-place and
        the out-of-place E2EXf_&lt;transformerId&gt; shall perform the following
        additional precondition checks, without continuing further processing:
         1. extractProtocolHeaderFields == NULL
         2. csTransactionHandle == NULL.
        If any of above conditions is TRUE, then the function shall
        return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00180</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>412</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00108</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If (EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0), in-place
        E2EXf_&lt;transformerId&gt; shall copy the amount upperHeaderBitsToShift bits,
        in parameter buffer, with starting offset of BufferProperties.headerLength, in
        direction left by 'distance' of BufferProperties.headerLength. (RS_E2E_08538)
      </description>
      <comment>
        Incorporated RfC 75163:
        Rewrite '(buffer != NULL &amp;&amp; EndToEndTransformationDescription.upperHeaderBitsToShift
        &gt; 0)' to '(EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)',
        see https://jira.autosar.org/browse/AR-11367
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedSomeIpHeaderProtectionWithP01AndP02</srcid><srcstatus/><internalId>519</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00108</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>352</internalId></ffbObj>
        <ffbObj>
          <ffbId>E2E.EB.Transformer.InPlace.NoCopying</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>416</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00107</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00109</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If (EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0), out-of-place
        E2EXf_&lt;transformerId&gt; shall copy the first upperHeaderBitsToShift bits from
        inputBuffer to buffer, and then copy the remaining part of inputBuffer (i.e. starting
        with offset upperHeaderBitsToShift) to parameter buffer starting with the destination
        offset of (upperHeaderBitsToShift+ BufferProperties.headerLength). (RS_E2E_08538)
      </description>
      <comment>
        Incorporated RfC 75163:
        Rewrite '(inputBuffer != NULL &amp;&amp;
        EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)' to
        '(EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)',
        see https://jira.autosar.org/browse/AR-11367
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedSomeIpHeaderProtectionWithP01AndP02</srcid><srcstatus/><internalId>519</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00109</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>353</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00107</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00115</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), out-of-place
        E2EXf_&lt;transformerId&gt; shall copy inputBuffer to buffer starting with the
        destination offset of BufferProperties.headerLength. (RS_E2E_08538)
      </description>
      <comment>
        Incorporated RfC 75163:
        Rewrite '(inputBuffer != NULL &amp;&amp;
        EndToEndTransformationDescription.upperHeaderBitsToShift == 0)' to
        '(EndToEndTransformationDescription.upperHeaderBitsToShift == 0)',
        see https://jira.autosar.org/browse/AR-11367
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00115</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>354</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00107</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00111</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        E2EXf_&lt;transformerId&gt; shall set
        *bufferLength = inputBufferLength + BufferProperties.headerLength/8.
        (RS_E2E_08538)
      </description>
      <comment>
        Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
        BufferProperties.headerLength'.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00111</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>355</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00107</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00139</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For PXX = 01 or 02, the function E2EXf_&lt;transformerId&gt;
        shall perform a check of the *bufferLength (after the computation of *bufferLength):
        If (*bufferLength != config-&gt;DataLength / 8), then the function shall return
        immediately E_SAFETY_HARD_RUNTIMEERROR, i.e. without calling an E2E Library function.
        (RS_E2E_08538)
      </description>
      <comment>
        Incorporated RfC 70503 'DataLength comparison for Profile 1 and Profile 2',
        see https://jira.autosar.org/browse/AR-12923.
        Configuration parameter DataLength is provided in bits, not bytes.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00139</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>356</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00155</id>
      <status>approved</status>
      <!-- status is draft in R22-11 -->
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>2</version>
      <description>
        If (((PXX = 01 &amp;&amp; dataIDMode != nibble) || (PXX == 02) ||
        (PXX = 11 &amp;&amp; dataIDMode != nibble) || (PXX == 22))
        &amp;&amp; BufferProperties.headerLength == 16 [bits]),
        the function E2EXf_&lt;transformerId&gt;()  shall, before calling
        E2E_PXXProtect() or E2E_PXXForward(), set 0xF in buffer at the bit offset
        (EndToEndTransformationDescription.crcOffset+12 for
        profiles P01 and P11 and EndToEndTransformationDescription.offset+12 for profiles
        P02 and P22).
        (RS_E2E_08538)
      </description>
      <comment>
        This requirement was adapted according to SWS Release 22-11.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedSomeIpHeaderProtectionWithP01AndP02</srcid><srcstatus/><internalId>519</internalId></linkedfrom><linkedfrom><srcid>dev.E2EXf.ForwardStatus.Support.CS</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00170</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If E2EXf_&lt;transformerId&gt; is used in a Client-Server Communication on the
        client-side and Profile is P02 or P22, state-&gt;Counter shall be stored to as
        requestCounter to be accessed by the E2EXf_Inv_&lt;transformerId&gt; for checking
        the response.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.CSInterface.Support</srcid><srcstatus/><internalId>523</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00171</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If E2EXf_&lt;transformerId&gt; is used in a Client-Server Communication on the
        client-side and Profile is P01, P04, P05, P06, P07, P08, P11 or P44, state-&gt;Counter - 1
        shall be stored as requestCounter to be accessed by the E2EXf_Inv_&lt;transformerId&gt;
        for checking the response.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
        <needscoverage>
          <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00019</srcid><srcstatus/><internalId>316</internalId></linkedfrom></coveredby></needscov>
        <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00171</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>410</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00181</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m the in-place E2EXf_&lt;transformerId&gt;
        on the client-side shall call the extractProtocolHeaderFields() function passing
        the buffer, the bufferLength, the address of local messageType variable, and
        the address of a local messageResult variable as parameters.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00181</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>408</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00182</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_&lt;transformerId&gt; on
        the client-side shall call the extractProtocolHeaderFields() function passing
        the inputBuffer, the inputBufferLength, the address of a local variable
        named messageType, and the address of a local variable named messageResult as
        parameters.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00182</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>409</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00183</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If extractProtocolHeaderFields() returns something different from E_OK,
        E2EXf_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00183</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>407</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00184</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m both the in-place and the out-of-place
        E2EXf_&lt;transformerId&gt; on the client-side shall set a local variable sourceID
        to the sourceID stored in the configuration (see SWS_E2EXf_00126). (RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00184</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>406</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00185</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m the in-place E2EXf_&lt;transformerId&gt; on
        the server-side shall call the extractProtocolHeaderFields() function passing the buffer,
        the bufferLength, the address of local messageType variable, and the address of a local
        messageResult variable as parameters.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00185</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>405</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00186</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_&lt;transformerId&gt;
        on the server-side shall call the extractProtocolHeaderFields() function passing the
        inputBuffer, the inputBufferLength, the address of local messageType variable,
        and the address of a local messageResult variable as parameters.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00186</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>404</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00187</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If extractProtocolHeaderFields() returns something different from E_OK,
        E2EXf_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00187</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>403</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00188</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m both the in-place and the out-of-place
        E2EXf_&lt;transformerId&gt; on the server-side shall set a local variable sourceID to
        the value of the e2eSourceId element of the csTransactionHandle. (RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
         <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00188</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>402</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00189</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m both the in-place and the out-of-place
        E2EXf_&lt;transformerId&gt; on the server-side shall set a local variable named
        requestCounter to the value of the e2eCounter element of the csTransactionHandle.
        (RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00189</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>401</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00165</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If E2E-Transformer is used for a response in a Client-Server Communication and Profile
        is P02 or P22 the sequence counter used for protecting the response shall be set to
        requestCounter -1.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.CSInterface.Support</srcid><srcstatus/><internalId>523</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00165</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>400</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00166</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If E2E-Transformer is used in a Client-Server Communication and
        Profile is P01, P04, P04m, P05, P06, P07, P07m, P08, P08m, P11, P44 or P44m
        the sequence counter for protecting the response shall be set to requestCounter.
        (RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00166</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>398</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00208</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The function E2EXf_MapCodeToStatus shall return the values
        depending on the value of forwardedCode:c(RS_E2E_08538)
        forwardedCode CheckStatus
          E_OK E2E_P_OK
          E_SAFETY_INVALID_REP E2E_P_REPEATED
          E_SAFETY_INVALID_SEQ E2E_P_WRONGSEQUENCE
          E_SAFETY_INVALID_CRC E2E_P_ERROR
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_61_P05_InP_SomeIpXf_FWCode</srcid><srcstatus/><internalId>645</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_62_P05_Oop_SomeIpXf_FWCode</srcid><srcstatus/><internalId>646</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_63_P02_InP_ComXf_FWCode</srcid><srcstatus/><internalId>647</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_64_P02_OoP_ComXf_FWCode</srcid><srcstatus/><internalId>648</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00208</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>399</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00107</id>
      <status>approved</status>
      <!-- Status is draft in R22-11 -->
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>2</version>
      <description>
        If DataTransformationStatusForwarding is set to noTransformerStatusForwarding and
        PXX is P01 ,P02 ,P04 ,P05 ,P06 ,P07 ,P08 ,P11 ,P22 or P44,
        the function E2EXf_&lt;transformerId&gt;() shall invoke E2E_PXXProtect(),
        passing to that function the appropriate Config and State structures
        (see [SWS_E2EXf_00125] and [SWS_E2EXf_00126]) that are associated with
        &lt;transformerId&gt;, as well as buffer and bufferLength (only for P04, P05, P06, P07,
        P08 ,P11 ,P22 and P44) that were updated in above requirements SWS_E2EXf_00108,
        SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.(RS_E2E_08538)
      </description>
      <comment>
        This requirement was adapted according to SWS Release 22-11.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_10_P02_InP_ComXf</srcid><srcstatus/><internalId>591</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00108</srcid><srcstatus/><internalId>46</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00109</srcid><srcstatus/><internalId>47</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00115</srcid><srcstatus/><internalId>48</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00111</srcid><srcstatus/><internalId>49</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00107</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>2</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>357</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00190</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If DataTransformationStatusForwarding is set to noTransformerStatusForwarding
        and PXX = P04m, P07m, P08m or P44m the function E2EXf_&lt;transformerId&gt;()
        shall invoke E2E_PXXProtect(), passing to that function:
          - the appropriate Config structure (see [SWS_E2EXf_00125]),
          - the appropriate State structure (see [SWS_E2EXf_00126]),
          - the local variables sourceID, messageType, and messageResult
          - buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
          - bufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
        Hereby buffer and bufferLength were updated according to the requirements
        SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.
        (RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.ForwardStatus.Support.CS</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00168</id>
      <status>approved</status>
      <!-- status is draft in R22-11 -->
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If DataTransformationStatusForwarding is set to transformerStatusForwarding and
        PXX is P01, P02, P04, P05, P06, P07, P08, P11, P22 or P44 the function
        E2EXf_&lt;transformerId&gt;() shall invoke E2E_PXXForward(), passing to that function
        the appropriate Config and State structures (see [SWS_E2EXf_00125] and
        [SWS_E2EXf_00126]) that are associated with &lt;transformerId&gt;, as well as buffer
        and bufferLength (only for P04, P05, P06, P07, P08, P11, P22 and P44)
        that were updated above in requirements SWS_E2EXf_00108, SWS_E2EXf_00109,
        SWS_E2EXf_00115, SWS_E2EXf_00111.
        In addition the parameter ForwardStatus shall be passed to the E2E_PXXForward()
        function, which is provided by the RTE.
        This parameter is associated with the optional IN parameter ForwardStatus from
        Rte_Write (SWS_Rte_01071), Rte_Send (SWS_Rte_01072), Rte_IWrite (SWS_Rte_03744)
        and Rte_IWriteRef (SWS_Rte_05509)
        (RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_61_P05_InP_SomeIpXf_FWCode</srcid><srcstatus/><internalId>645</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_62_P05_Oop_SomeIpXf_FWCode</srcid><srcstatus/><internalId>646</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_63_P02_InP_ComXf_FWCode</srcid><srcstatus/><internalId>647</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_64_P02_OoP_ComXf_FWCode</srcid><srcstatus/><internalId>648</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00168</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>396</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00191</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If DataTransformationStatusForwarding is set to transformerStatusForwarding and
        PXX = P04m, P07m, P08m or P44m: The function E2EXf_&lt;transformerId&gt;()
        shall invoke E2E_PXXForward(), passing to that function:
          - the appropriate Config structure (see [SWS_E2EXf_00125]),
          - the appropriate State structure (see [SWS_E2EXf_00126]),
          - the local variables sourceID, messageType, and messageResult
          - buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
          - bufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
        Hereby buffer and bufferLength were updated according to the above requirements
        SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
        <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.ForwardStatus.Support.CS</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00018</id>
      <status>approved</status>
      <!-- status is draft in R22-11 -->
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>2</version>
      <description>
        In case E2E_PXXProtect() or E2E_PXXForward() returns E2E_E_OK, then
        E2EXf_&lt;transformerId&gt; shall return E_OK, otherwise E2EXf_&lt;transformerId&gt;
        shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
      </description>
      <comment>
        This requirement was adapted according to SWS Release 22-11.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00018</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>2</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>358</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>2</version>
      <description>
        The function E2EXf_Inv_&lt;transformerId&gt; shall be generated for each received
        E2E-protected data element and each protected C/S operation (&lt;transformerId&gt;).
        (RS_E2E_08538)
      </description>
      <furtherinfo>
        Justifying rule: WRN.tsc.needscoverage.count violation.
        This tcs is covered by more than 10 EB tcs.
      </furtherinfo>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_01_P04_InP_SomeIpXf</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_02_P04_OoP_SomeIpXf</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_03_P04_OoP_ComXf</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_04_P04_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_05_P01_InP_ComXf</srcid><srcstatus/><internalId>586</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_06_P01_OoP_ComXf</srcid><srcstatus/><internalId>587</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_07_P01_InP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>588</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_08_P01_OoP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>589</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_09_P01_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_10_P02_InP_ComXf</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_11_P02_OoP_ComXf</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_12_P02_InP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>593</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_13_P02_OoP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>594</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_14_P02_InP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_15_P05_InP_SomeIpXf</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_16_P05_OoP_SomeIpXf</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_17_P05_OoP_ComXf</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_18_P05_InP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_19_P06_InP_SomeIpXf</srcid><srcstatus/><internalId>600</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_20_P06_OoP_SomeIpXf</srcid><srcstatus/><internalId>601</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_21_P06_OoP_ComXf</srcid><srcstatus/><internalId>602</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_22_P06_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_23_P07_InP_SomeIpXf</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_24_P07_OoP_SomeIpXf</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_25_P07_OoP_ComXf</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_26_P07_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_27_NoCheck_InP_SomeIpXf</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_28_NoCheck_OoP_SomeIpXf</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_29_NoCheck_InP_ComXf</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_30_NoCheck_OoP_ComXf</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_31_P01ComXf_MultipleRec</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_32_P04SomeIpXf_MultipleRec</srcid><srcstatus/><internalId>613</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_35_P05_InP_ComXf</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_39_PJLR_InP_ComXf</srcid><srcstatus/><internalId>620</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_40_PJLR_OoP_ComXf</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_41_PJLR_InP_SomeIpXf</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_42_PJLR_OoP_SomeIpXf</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_43_PRN_InP_ComXf</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_44_PRN_OoP_ComXf</srcid><srcstatus/><internalId>625</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_45_PRN_InP_SomeIpXf</srcid><srcstatus/><internalId>626</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_46_PRN_OoP_SomeIpXf</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_48_P11_InP_ComXf</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_49_P11_OoP_ComXf</srcid><srcstatus/><internalId>630</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_50_P11_InP_SomeIpXf</srcid><srcstatus/><internalId>631</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_51_P11_OoP_SomeIpXf</srcid><srcstatus/><internalId>632</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_52_P44_InP_SomeIpXf</srcid><srcstatus/><internalId>633</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_53_P44_OoP_SomeIpXf</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_54_P44m_InP_Client_SomeIpXf</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_55_P44m_OoP_Client_SomeIpXf</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_56_P44m_InP_Server_SomeIpXf</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_57_P44m_OoP_Server_SomeIpXf</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00105</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        In-place E2EXf_Inv_&lt;transformerId&gt; shall perform the
        following two precondition checks, without continuing further processing:
          1.  (buffer == NULL &amp;&amp; inputBufferLength != 0)
              ||
              (buffer != NULL &amp;&amp; inputBufferLength &lt; BufferProperties.headerLength/8u
               + EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
          2.  bufferLength == NULL.
        If any of above conditions is TRUE, then the function shall return
        E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00105</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>359</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00103</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        Out-of-place E2EXf_Inv_&lt;transformerId&gt; shall perform the
        following three precondition checks, without continuing further processing:
         1.  (inputBuffer == NULL &amp;&amp; inputBufferLength != 0)
             ||
             (inputBuffer != NULL &amp;&amp; inputBufferLength &lt;
             BufferProperties.headerLength/8u +
             EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
         2.  If (bufferLength == NULL)
         3.  If (buffer == NULL).
        If any of above conditions is TRUE, then the function shall return
        E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00103</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>360</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

    <!-- E2EXf_Inv_&lt;transformerId&gt;(check-function) -->
    <specobject>
      <id>E2EXf.SWS_E2EXf_00192</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m both the in-place and the out-of-place
        E2EXf_Inv_&lt;transformerId&gt; shall perform the following additional
        precondition checks, without continuing further processing:
          1. extractProtocolHeaderFields == NULL
          2. csTransactionHandle == NULL.
        If any of above conditions is TRUE, then the function shall return
        E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00192</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>394</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00140</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For PXX = 01 or 02 (i.e. for profile 1 and 2), the out-of-place function
        E2EXf_Inv_&lt;transformerId&gt; shall
         1.  if(inputBuffer == NULL and inputBufferLength == 0), then
              -  variable NewDataAvailable of state object of type
                 E2E_PXXCheckStateType (see [SWS_E2EXf_00125]) associated with
                 &lt;transformerId&gt; shall be set to FALSE
         2.  else if (inputBufferLength == config-&gt;DataLength / 8), then
              -  variable NewDataAvailable of state object of type
                 E2E_PXXCheckState Type (see [SWS_E2EXf_00125]) associated with
                 &lt;transformerId&gt; shall be set to TRUE.
         3   else return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
      </description>
      <comment>
        Incorporated RfC 70503 'DataLength comparison for Profile 1 and Profile 2',
        see https://jira.autosar.org/browse/AR-12923.
        Configuration parameter DataLength is provided in bits, not bytes.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00140</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>2</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>361</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00123</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For PXX = 01 or 02 (i.e. for profiles 1 and 2), the out-of-place function
        E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that
        function:
          -  config,
          -  state,
          -  Data
        Concerning pointer to data: if(inputBuffer == NULL and inputBufferLength == 0), then it
        shall pass a pointer to a 1-byte variable of E2E transformer, otherwise it shall pass
        inputBuffer.(RS_E2E_08538)
      </description>
      <comment>
        Incorporated RfC 70069
        'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
        see https://jira.autosar.org/browse/AR-13944.
        For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient to
        have a valid pointer to data. From the dummy variable where it points to is never read.
        The size of the variable where it points to is considered as an implementation detail
        and thus not important for the fulfillment of this requirement.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00123</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>362</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00141</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For PXX = 01 or 02 (i.e. for profiles 1 and 2), the in-place
        function E2EXf_Inv_&lt;transformerId&gt; shall
         1.  If(buffer == NULL and inputBufferLength == 0), then
              - variable NewDataAvailable of state object of type
                E2E_PXXCheckStateType (see [SWS_E2EXf_00125]) associated with
                &lt;transformerId&gt; shall be set to FALSE.
         2.  Else if (inputBufferLength == config-&gt;DataLength / 8), then
              - variable NewDataAvailable of state object of type      E2E_PXXCheckState
                Type (see [SWS_E2EXf_00125]) associated with &lt;transformerId&gt; shall be
                set to TRUE.
         3.  Else return E_SAFETY_HARD_RUNTIMEERROR.
        (RS_E2E_08538)
      </description>
      <comment>
        Incorporated RfC 70503 'DataLength comparison for Profile 1 and Profile 2',
        see https://jira.autosar.org/browse/AR-12923.
        Configuration parameter DataLength is provided in bits, not bytes.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00141</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>363</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00124</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For PXX = 01 or 02 (i.e. for profiles 1 and 2), the in-place function
        E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that
        function:
          -  config,
          -  state,
          -  Data
        pointer to data: if(buffer == NULL and inputBufferLength == 0), then it shall pass a
        pointer to a 1-byte variable of E2E transformer, otherwise it shall pass buffer.
        (RS_E2E_08538)
      </description>
      <comment>
        Incorporated RfC 70069
        'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
        see https://jira.autosar.org/browse/AR-13944.
        For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient to
        have a valid pointer to data. From the dummy variable where it points to is never read.
        The size of the variable where it points to is considered as an implementation detail
        and thus not important for the fulfillment of this requirement.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00124</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>364</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
           <linksto>E2EXf.top.016</linksto>
           <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00142</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If configuration parameter profileBehavior is PRE_R4_2, then
        for PXX = 01 or 02, E2EXf_Inv_&lt;transformerId&gt;() shall set the variable
        MaxDeltaCounter of the state object to the value of variable MaxDeltaCounterInit of
        the corresponding configuration object. (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00142</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>365</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00104</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For PXX = 04, 05, 06, 07, 11, 22: the function
        E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that function:
          -  config,
          -  state,
          -  data length: inputBufferLength
        pointer to data: inputBuffer (out-of-place version) or buffer (in-place
        version). (RS_E2E_08538)
      </description>
      <comment>
        This requirement was adapted for Profile 07 and Profile 11 according to SWS
        Release 4.3.0.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00104</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>366</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

    <!-- E2EXf_Inv_handling_PXXm -->
    <specobject>
      <id>E2EXf.SWS_E2EXf_00193</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m the in-place E2EXf_Inv_&lt;transformerId&gt; on
        the client-side shall call the extractProtocolHeaderFields() function passing
        the buffer, the bufferLength, the address of local messageType variable, and
        the address of a local messageResult variable as parameters.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00193</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>393</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00194</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_Inv_&lt;transformerId&gt;
        on the client-side shall call the extractProtocolHeaderFields() function passing the
        inputBuffer, the inputBufferLength, the address of a local variable named messageType,
        and the address of a local variable named messageResult as parameters.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00194</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>392</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00196</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m both the in-place and the out-of-place
        E2EXf_Inv_&lt;transformerId&gt; on the client-side shall set a local variable sourceID
        to the sourceID stored in the configuration.
        (RS_E2E_08538)
      </description>
      <comment>
        Incorporated autosar jira AR-112427 'Incorrect transformer call in
        SWS_E2EXf_00195 and SWS_E2EXf_00196',
        see https://jira.autosar.org/browse/AR-112427.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00196</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>391</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00197</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m the in-place E2EXf_Inv_&lt;transformerId&gt;
        on the server-side shall call the extractProtocolHeaderFields() function
        passing the buffer, the bufferLength, the address of local messageType variable,
        and the address of a local messageResult variable as parameters.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00197</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>390</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00198</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_Inv_&lt;transformerId&gt;
        on the server-side shall call the extractProtocolHeaderFields() function passing the
        inputBuffer, the inputBufferLength, the address of local messageType variable, and the
        address of a local messageResult variable as parameters.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00198</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>389</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00199</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If extractProtocolHeaderFields() returns something different from E_OK,
        E2EXf_Inv_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00199</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>388</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00200</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For PXX = P04m, P07m, P08m and P44m: the function E2EXf_Inv_&lt;transformerId&gt; on the
        client-side shall invoke E2E_PXXSourceCheck(), passing to that function:
          - config,
          - state,
          - the local variables messageType, messageResult, and the local variable sourceID
          - data length:
                inputBufferLength – EndToEndTransformationDescription.upperHeaderBitsToShift
          - pointer to data:
              . inputBuffer + EndToEndTransformationDescription.upperHeaderBitsToShift (
                out-of-place version) or
              . buffer + EndToEndTransformationDescription.upperHeaderBitsToShift (
                in-place version).
        (RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00200</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>387</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00201</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For PXX = P04m, P07m, P08m and P44m: the function E2EXf_Inv_&lt;transformerId&gt; on the
        server-side shall invoke E2E_PXXSinkCheck(), passing to that function:
          - config,
          - state,
          - the local variables messageType, messageResult, and the address of the local
            variable sourceID
          - data length:
            inputBufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
          - pointer to data:
            . inputBuffer + EndToEndTransformationDescription.upperHeaderBitsToShift
              (out-of-place version) or
            . buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
              (in-place version).(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00201</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>386</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00202</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For profile P04m, P07m, P08m and P44m both the in-place and the out-of-place
        E2EXf_Inv_&lt;transformerId&gt; on the server-side shall set the e2eSourceId element
        of the csTransactionHandle to the value of the local variable sourceID.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00202</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>385</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00203</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For profile P04m, P07m, P08m and P44m both the in-place and the out-of-place
        E2EXf_Inv_&lt;transformerId&gt; on the server-side shall set the e2eCounter element
        of the csTransactionHandle to the value of the local variable receivedRequestCounter.
        (RS_E2E_08538)
      </description>
      <comment>
        Incorporated RfC AR-112723 'incorrect transformer call in SWS_E2EXf_00203',
        see https://jira.autosar.org/browse/AR-112723.
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00203</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>384</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

    <!-- E2EXf_Inv_set_check_counter -->
    <specobject>
      <id>E2EXf.SWS_E2EXf_00172</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        In case of Client/Server Communication on the client side and Profile is P01 or P02,
        state-&gt;LastValidCounter of E2EXf_Inv_&lt;transformerId&gt; shall be set to the
        requestCounter-1.(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.CSInterface.Support</srcid><srcstatus/><internalId>523</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00173</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        In case of Client/Server Communication on the client side and Profile is P04, P05, P06,
        P07, P08, P11, P22 or P44, state-&gt;Counter of E2EXf_Inv_&lt;transformerId&gt; shall be
        set to the requestCounter - 1. Also set state-&gt;Counter of
        E2EXf_Inv_&lt;transformerId&gt; shall be set to the requestCounter - 1 for profiles
        P04m, P07m, P44m, and P08m.(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
           <ffbId>E2E.SWS_E2EXf_00173</ffbId>
           <ffbType>req</ffbType>
           <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>382</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00206</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        In case of Client/Server Communication on the client side
        and Profile is P01 or P02, the receivedRequestCounter shall be set to state-&gt;
        LastValidCounter of E2EXf_Inv_&lt;transformerId&gt;.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXfreceivedRequestCounter</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00206</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>413</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00207</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        In case of Client/Server Communication on the client side
        and Profile is P04, P05, P06, P07, P08, P11, P22, P44, P04m, P07m,
        P08m or P44m the receivedRequestCounter shall be set to state-&gt;Counter of
        E2EXf_Inv_&lt;transformerId&gt;.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXfreceivedRequestCounter</srcid><srcstatus/><internalId>530</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00207</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>414</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00174</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R21-11</source>
      <version>1</version>
      <description>
        In case of Client/Server Communication on the client side, MaxDeltaCounter shall be
        set to 1.(RS_E2E_08538)
      </description>
      <comment>
        This requirement is not applicable for the serializing transformer. On the sender side
        the counter is only written into the buffer and incremented.
        This requirement is deleted in R22-11
      </comment>
      <releases>
        <release>AUTOSAR CP R21-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_54_P44m_InP_Client_SomeIpXf</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_55_P44m_OoP_Client_SomeIpXf</srcid><srcstatus/><internalId>636</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_W_00023</srcid><srcstatus/><internalId>322</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The function E2EXf_Inv_&lt;transformerId&gt; shall invoke
        E2E_PXXMapStatusToSM(), passing to that function the return value of E2E_PXXCheck
        and the profiles check Status (variable Status of state object of type
        E2E_PXXCheckStateType, see [SWS_E2EXf_00125]), to obtain the profile-
        independent check status. For P1/P2 mapping functions, there is an additional call
        parameter profileBehavior:
          -  if configuration parameter profileBehavior is R4_2, then E2E_PXXMapStatusToSM()
             shall be invoked with the call parameter profileBehavior = 1
          -  if configuration parameter profileBehavior is PRE_R4_2, then
             E2E_PXXMapStatusToSM()  shall be invoked with call parameter profileBehavior = 0
        (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00029</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>367</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The function E2EXf_Inv_&lt;transformerId&gt; shall invoke the
        E2E_SMCheck() function, passing to that function the configuration object of type
        E2E_SMConfigType (see [SWS_E2EXf_00126] and [SWS_E2EXf_00088]) and state
        object of type E2E_SMCheckStateType (see [SWS_E2EXf_00125]) that are
        associated with &lt;transformerId&gt;, plus the profile-independent check status that
        was computed by E2E_PXXMapStatusToSM() in SWS_E2EXf_00029. (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00028</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>368</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00169</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If disableEndToEndStateMachine is to TRUE,
          - The high nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt; shall
            be set to 0x6.
          - The low nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt; shall
            be set to the low nibble of the profile-independent check status of type
            E2E_PCheckStatusType.(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00169</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>373</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>2</version>
      <description>
        If E2E_SMCheck() returns E2E_E_OK and disableEndToEndStateMachine is FALSE, then:
          - the high nibble of the return
            of the function E2EXf_Inv_&lt;transformerId&gt; shall be set to the low nibble
            of the state of the state machine (member SMState of object of type
            E2E_SMStateType that is associated with &lt;transformerId&gt;, see
            [SWS_E2EXf_00125]).
          - The low nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt;
            shall  be set to the low nibble of the profile-independent check status
            of type E2E_PCheckStatusType.
            If E2E_SMCheck() does not return E2E_E_OK, the return value shall be
            E_SAFETY_SOFT_RUNTIMEERROR. (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00027</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>2</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>369</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00112</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If (buffer != NULL &amp;&amp;
        EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0), in-place
        E2EXf_Inv_&lt;transformerId&gt; shall copy the first upperHeaderBitsToShift
        bits, in parameter buffer, in direction right by 'distance' of
        BufferProperties.headerLength.(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedSomeIpHeaderProtectionWithP01AndP02</srcid><srcstatus/><internalId>519</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00112</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>370</internalId></ffbObj>
        <ffbObj>
          <ffbId>E2E.EB.InvTransformer.InPlace.NoCopying</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>418</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00113</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If (inputBuffer != NULL &amp;&amp;
        EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0),
        out-of-place E2EXf_Inv_&lt;transformerId&gt; shall copy the first
        upperHeaderBitsToShift bits from inputBuffer to buffer, and then copy the
        remaining part of inputBuffer skipping E2E header (i.e. starting with
        offset upperHeaderBitsToShift+BufferProperties.headerLength) to parameter
        buffer starting with the destination offset of
        (upperHeaderBitsToShift).(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedSomeIpHeaderProtectionWithP01AndP02</srcid><srcstatus/><internalId>519</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00113</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>371</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00116</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If (inputBuffer != NULL &amp;&amp;
        EndToEndTransformationDescription.upperHeaderBitsToShift == 0),
        out-of-place E2EXf_Inv_&lt;transformerId&gt; shall copy inputBuffer starting
        with the offset of BufferProperties.headerLength, to
        buffer.(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00116</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>372</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00114</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If inputBufferLength == 0, then E2EXf_Inv_&lt;transformerId&gt; shall set
        *bufferLength = 0, otherwise it shall set
        *bufferLength = inputBufferLength - BufferProperties.headerLength/8.
        (RS_E2E_08538)
      </description>
      <comment>
        Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
        BufferProperties.headerLength' and
        RfC 69321 'Correction of calculation of bufferLength'.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00114</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>374</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00167</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        In case of Client/Server-Communication on the server side, if the return value ret
        equals to E_SAFETY_*_ERR, the value shall be overwritten to E_E2E_HARD_SAFETY_ERR.
        (RS_E2E_08538)
      </description>
      <comment>
        The handling of E_SAFETY_*_ERR errors as hard errors creates a TransformerHardErrorEvent.
        The intended use of this event is to inform the called SWC, that there was a failed
        Server-Client Call and possible some Error Handling has to be done.
        An error response can be created by adding a autonomous error reaction to this
        TransformerHardErrorEvent.
        The error response is then created by the RTE and the configured transformer chain
        without invoking the server application.
        The return value of the transformer is then used as error code of the response.
        The client can determine if a E2E error occurred at the transmission of the request,
        by checking the return value. The chosen return value E_E2E_HARD_SAFETY_ERR aligns with
        the SOME/IP error code for a general E2E error, for more information see SOME/IP
        Protocol [3].
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.AutonomousResponse.Support</srcid><srcstatus/><internalId>524</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00175</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        In case of Client/Server Communication on the client side,
        if the E2E_PXXCheck function returns a value different from E2E_P_OK,
        the status shall be set to E2E_P_ERR.(RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00175</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>381</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00148</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        E2EXf_DeInit() shall check shall set the module initialization state to
        FALSE.(RS_E2E_08538)
      </description>
      <comment>
        E2EXf_DeInit() is replaced with E2EXf_PartitionDeInit().
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- API does not exist -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.InitializationRoutines</srcid><srcstatus/><internalId>521</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00137</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The E2E Transformer shall be able to detect the following development errors:
        Type of error                       Related error code     Value [hex]
        Error code if any other API         E2EXF_E_UNINIT         0x01
        service, except GetVersionInfo
        is called before the
        transformer module was initialized
        with Init or after a call to DeInit

        Error code if an invalid            E2EXF_E_INIT_FAILED    0x02
        configuration set was selected

        API service called with wrong       E2EXF_E_PARAM          0x03
        parameter

        API service called with invalid     E2EXF_E_PARAM_POINTER  0x04
        pointer
        (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- Development errors are not supported -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedDevelopmentErrors</srcid><srcstatus/><internalId>518</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00144</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If the XfrmDevErrorDetect switch is enabled and the configuration variant is
        VARIANT-POST-BUILD, the function E2EXf_Init shall check if a NULL pointer
        is passed for the ConfigPtr parameter. In case of an error the remaining
        function shall not be executed and the function E2EXf_Init shall report
        development error code E2EXF_E_PARAM_POINTER to the Det_ReportError
        service of the Development Error.(RS_E2E_08538)
      </description>
      <comment>
        E2EXf_Init() is replaced with E2EXf_PartitionInit().
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- Variant Post Build not supported, Development errors are not supported
             API does not exist -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedLinkTimeAndPostBuild</srcid><srcstatus/><internalId>516</internalId></linkedfrom><linkedfrom><srcid>dev.E2EXf.UnsupportedDevelopmentErrors</srcid><srcstatus/><internalId>518</internalId></linkedfrom><linkedfrom><srcid>dev.E2EXf.InitializationRoutines</srcid><srcstatus/><internalId>521</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00145</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If the XfrmDevErrorDetect switch is enabled and the configuration variant
        is VARIANT-POST-BUILD, the function E2EXf_Init shall check the contents
        of the given configuration set for being within the allowed boundaries.
        If the function E2EXf_Init detects an error, then it shall skip the
        initialization of the E2E Transformer, keep the module internal state as
        uninitialized and it shall report development error code
        E2EXF_E_INIT_FAILED to the Det_ReportError service of the Development
        Error Tracer. (RS_E2E_08538)
      </description>
      <comment>
        E2EXf_Init() is replaced with E2EXf_PartitionInit().
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- Variant Post Build not supported, Development errors are not supported
             API does not exist -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedLinkTimeAndPostBuild</srcid><srcstatus/><internalId>516</internalId></linkedfrom><linkedfrom><srcid>dev.E2EXf.UnsupportedDevelopmentErrors</srcid><srcstatus/><internalId>518</internalId></linkedfrom><linkedfrom><srcid>dev.E2EXf.InitializationRoutines</srcid><srcstatus/><internalId>521</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00146</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If the configuration parameter XfrmDevErrorDetect is enabled, the function
        E2EXf_DeInit shall check if the E2E transformer is initialized. In case
        of an error, the function E2EXf_DeInit shall return without any effect
        and shall report the error to the Development Error Tracer with the error
        code E2EXF_E_UNINIT. (RS_E2E_08538)
      </description>
      <comment>
        E2EXf_DeInit() is replaced with E2EXf_PartitionDeInit().
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- Development errors are not supported API does not exist -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedDevelopmentErrors</srcid><srcstatus/><internalId>518</internalId></linkedfrom><linkedfrom><srcid>dev.E2EXf.InitializationRoutines</srcid><srcstatus/><internalId>521</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00149</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If the XfrmDevErrorDetect switch is enabled, the function
        E2EXf_GetVersionInfo shall check if a NULL pointer is passed for the
        VersionInfo parameter. In case of an error the remaining function
        E2EXf_GetVersionInfo shall not be executed and the function
        E2EXf_GetVersionInfo shall report development error code
        E2EXF_E_PARAM_POINTER to the Det_ReportError service of the Development
        Error Tracer. (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- Development errors are not supported -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedDevelopmentErrors</srcid><srcstatus/><internalId>518</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00150</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If the configuration parameter XfrmDevErrorDetect is enabled, all parameters
        of API E2EXf_&lt;transformerId&gt; (see SWS_E2EXf_00032) shall be checked for
        being in the allowed range. In case of an error the mode switch shall not
        be executed, the error shall be reported to the Development Error Tracer
        with the value E2EXF_E_PARAM resp. E2EXF_E_PARAM_POINTER in
        case of a pointer argument and the routine shall return the value
        E_SAFETY_HARD_RUNTIMEERROR.
        (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- Development errors are not supported -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedDevelopmentErrors</srcid><srcstatus/><internalId>518</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00151</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If the configuration parameter XfrmDevErrorDetect is enabled, the API
        E2EXf_&lt;transformerId&gt; (see SWS_E2EXf_00032) shall check if the E2E
        Transformer is initialized. In case of an error the routine shall not be
        executed, the error shall be reported to the Development Error Tracer
        with the error code E2EXF_E_UNINIT and the routine shall return the value
        E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- Development errors are not supported -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedDevelopmentErrors</srcid><srcstatus/><internalId>518</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00152</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If the configuration parameter XfrmDevErrorDetect is enabled, all parameters
        of API E2EXf_Inv_&lt;transformerId&gt; (see SWS_E2EXf_00034) shall be checked
        for being in the allowed range. In case of an error the mode switch shall
        not be executed, the error shall be reported to the Development Error
        Tracer with the value E2EXF_E_PARAM resp. E2EXF_E_PARAM_POINTER in case
        of a pointer argument and the routine shall return the value
        E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- Development errors are not supported -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedDevelopmentErrors</srcid><srcstatus/><internalId>518</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00153</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        If the configuration parameter XfrmDevErrorDetect is enabled, the API
        E2EXf_Inv_&lt;transformerId&gt; (see SWS_E2EXf_00034) shall check if the E2E
        Transformer is initialized. In case of an error the routine shall not be
        executed, the error shall be reported to the Development Error Tracer
        with the error code E2EXF_E_UNINIT and the routine shall return the value
        E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- Development errors are not supported -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedDevelopmentErrors</srcid><srcstatus/><internalId>518</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00122</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The runtime errors detected by the E2EXf_&lt;transformerId&gt; function shall be
        reported as return value to the caller (i.e. to RTE).(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01005_ReturnProtectSafetyErrorCodes</srcid><srcstatus/><internalId>653</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The runtime errors detected by E2EXf_Inv_&lt;transformerId&gt; function and errors
        in the protected E2E communication shall be reported as return value to
        the caller (i.e. to RTE).(RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>2</version>
      <description>
        Imported Types
        Module : Imported Type
        E2E    : E2E_P01CheckStateType
                 E2E_P01CheckStatusType
                 E2E_P01ConfigType
                 E2E_P01DataIDMode
                 E2E_P01ProtectStateType
                 E2E_P02CheckStateType
                 E2E_P02CheckStatusType
                 E2E_P02ConfigType
                 E2E_P02ProtectStateType
                 E2E_P04CheckStateType
                 E2E_P04CheckStatusType
                 E2E_P04ConfigType
                 E2E_P04ProtectStateType
                 E2E_P04mCheckStateType
                 E2E_P04mCheckStatusType
                 E2E_P04mConfigType
                 E2E_P04mProtectStateType
                 E2E_P05CheckStateType
                 E2E_P05CheckStatusType
                 E2E_P05ConfigType
                 E2E_P05ProtectStateType
                 E2E_P06CheckStateType
                 E2E_P06CheckStatusType
                 E2E_P06ConfigType
                 E2E_P06ProtectStateType
                 E2E_P07CheckStateType
                 E2E_P07CheckStatusType
                 E2E_P07ConfigType
                 E2E_P07ProtectStateType
                 E2E_P07mCheckStateType
                 E2E_P07mCheckStatusType
                 E2E_P07mConfigType
                 E2E_P07mProtectStateType
                 E2E_P08CheckStateType
                 E2E_P08CheckStatusType
                 E2E_P08ConfigType
                 E2E_P08ProtectStateType
                 E2E_P08mCheckStateType
                 E2E_P08mCheckStatusType
                 E2E_P08mConfigType
                 E2E_P08mProtectStateType
                 E2E_P11CheckStateType
                 E2E_P11CheckStatusType
                 E2E_P11ConfigType
                 E2E_P11DataIDMode
                 E2E_P11ProtectStateType
                 E2E_P22CheckStateType
                 E2E_P22CheckStatusType
                 E2E_P22ConfigType
                 E2E_P22ProtectStateType
                 E2E_P44CheckStateType
                 E2E_P44CheckStatusType
                 E2E_P44ConfigType
                 E2E_P44ProtectStateType
                 E2E_P44mCheckStateType
                 E2E_P44mCheckStatusType
                 E2E_P44mConfigType
                 E2E_P44mProtectStateType
                 E2E_PCheckStatusType
                 E2E_SMCheckStateType
                 E2E_SMConfigType
                 E2E_SMStateType
        Std    : Std_ExtractProtocolHeaderFieldsType
                 Std_MessageResultType
                 Std_MessageTypeType
                 Std_ReturnType
                 Std_TransformerForwardCode (draft)
                 Std_VersionInfoType
        (RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_34_P01_P04_P05_Indep_Vars</srcid><srcstatus/><internalId>615</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf_ProfileTypes</srcid><srcstatus/><internalId>529</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        E2EXf_ConfigType
        Name          E2EXf_ConfigType
        Kind          Structure
        Elements      implementation specific
                      Type --
                      Comment --
        Description   Parent container for the configuration of E2E Transformer. The content is
                      implementation-specific.
        Available via E2EXf.h
        (RS_E2E_08538)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedLinkTimeAndPostBuild</srcid><srcstatus/><internalId>516</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00030</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>347</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00060</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        E2EXf_CSTransactionHandleType
        Name          E2EXf_CSTransactionHandleType
        Kind          Structure
        Elements      e2eCounter
                      Type        uint32
                      Comment     E2E Counter
                      e2eSourceId
                      Type        uint32
                      Comment     E2E Source ID
        Description   Transaction handle for the C/S method call. - Used to tunnel the E2E
                      Source ID and the E2E Counter from the request to the response at the
                      server side via the RTE.
        Available via E2EXf.h
        (RS_E2E_08538)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_54_P44m_InP_Client_SomeIpXf</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_55_P44m_OoP_Client_SomeIpXf</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_56_P44m_InP_Server_SomeIpXf</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_57_P44m_OoP_Server_SomeIpXf</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_CSTransactionHandleType</srcid><srcstatus/><internalId>275</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_XDM_E_00001</srcid><srcstatus/><internalId>327</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>3</version>
      <description>
        Service name   : E2EXf_&lt;transformerId&gt;
        Syntax:          uint8 E2EXf_&lt;transformerId&gt;(
                         [Std_TransformerForwardCode forwardedCode],
                         [Std_ExtractProtocolHeaderFieldsType extractProtocolHeaderFields],
                         [const E2EXf_CSTransactionHandleType* csTransactionHandle],
                         uint8* buffer,
                         uint32* bufferLength,
                         const uint8* inputBuffer,
                         uint32 inputBufferLength)
        Service ID[hex]: 0x03
        Sync/Async:      Synchronous
        Reentrancy:      Reentrant

        Parameters (in): forwardedCode
                            Optional parameter of E2E status forwarded to transformer chain
                            and provided by the RTE. The presence of this parameter
                            depends solely on the PortAPIOption transformerStatus
                            Forwarding. The parameter must always be provided by the RTE
                            if the corresponding PortPrototype is referenced by a Port
                            APIOption which has the attribute transformerStatusForwarding
                            set to transformerStatusForwarding.
                         extractProtocolHeaderFields
                            Optional pointer to the function that shall be used to
                            extract relevant protocol header fields of the serializing
                            transformer in the transformer chain.
                            Used for profiles PXXm.
                         csTransactionHandle
                            Optional pointer to the E2E transaction handle for the C/S
                            method call.
                            - Used to tunnel the relevant information i.e. E2E Source ID
                            and E2E Counter from the request to the response at the
                            server side via the RTE.
                            Used for profiles PXXm.
                         inputBuffer
                            This argument only exists for E2E transformers configured for
                            out-of-place transformation. It holds the input data for the
                            transformer.
                         inputBufferLength
                            This argument holds the length of the E2E transformer's
                            input data (in the inputBuffer argument).
        Parameters
        (inout)        : buffer
                            This argument is only an INOUT argument for E2E transformers
                            which are configured for in-place transformation. This is
                            the buffer where the E2E
                            transformer places its output data.
                            If the E2E transformer is configured for in-place
                            transformation, it also contains its input data.
                            If the E2E transformer uses in-place transformation and has
                            a headerLength different from 0, the output data of the
                            previous transformer begin at
                            position headerLength.
                            This argument is only an OUT argument for E2E transformers
                            configured for out-of-place transformation. It is the buffer
                            allocated by the RTE,
                            where the transformed data has to be stored by the
                            transformer.
        Parameters
        (out)          : bufferLength
                            Used length of the buffer

        Return value   : uint8
                            0x00 (E_OK):
                            Function performed  successfully.
                            0xFF (E_SAFETY_HARD_RUNTIMEERROR):  A runtime error occured, safety
                            properties could not be checked and no output data could be produced.
        Description    : Protects the array/buffer to be transmitted, using the in-place
                         transformation.
        Available via    E2EXf.h
        (RS_E2E_08538)
      </description>
      <furtherinfo>
        Justifying rule: WRN.tsc.needscoverage.count violation.
        This tcs is covered by more than 10 EB tcs.
      </furtherinfo>
      <comment>
        Incorporated RfC 75163:
        Remove 'If  executeDespiteDataUnavailability  is  set  to  true  and  the transformer is
        executed without valid input data, the length will be equal to 0.' from the descriptions
        of inputBufferLength and inputBuffer,
        see https://jira.autosar.org/browse/AR-11367
        Requirement SWS_Xfrm_00062 is replaced by requirement E2EXf.EB.transformerId.
        Following optional input parameter added in autosar release 22-11:
          - extractProtocolHeaderFields
          - csTransactionHandle
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_XDM_E_00001</srcid><srcstatus/><internalId>327</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_XDM_E_00002</srcid><srcstatus/><internalId>328</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_XDM_E_00003</srcid><srcstatus/><internalId>329</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_XDM_E_00004</srcid><srcstatus/><internalId>330</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_01_P04_InP_SomeIpXf</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_02_P04_OoP_SomeIpXf</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_03_P04_OoP_ComXf</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_04_P04_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_05_P01_InP_ComXf</srcid><srcstatus/><internalId>586</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_06_P01_OoP_ComXf</srcid><srcstatus/><internalId>587</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_07_P01_InP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>588</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_08_P01_OoP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>589</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_09_P01_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_10_P02_InP_ComXf</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_11_P02_OoP_ComXf</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_12_P02_InP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>593</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_13_P02_OoP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>594</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_14_P02_InP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_15_P05_InP_SomeIpXf</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_16_P05_OoP_SomeIpXf</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_17_P05_OoP_ComXf</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_18_P05_InP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_19_P06_InP_SomeIpXf</srcid><srcstatus/><internalId>600</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_20_P06_OoP_SomeIpXf</srcid><srcstatus/><internalId>601</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_21_P06_OoP_ComXf</srcid><srcstatus/><internalId>602</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_22_P06_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_23_P07_InP_SomeIpXf</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_24_P07_OoP_SomeIpXf</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_25_P07_OoP_ComXf</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_26_P07_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_35_P05_InP_ComXf</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_39_PJLR_InP_ComXf</srcid><srcstatus/><internalId>620</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_40_PJLR_OoP_ComXf</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_41_PJLR_InP_SomeIpXf</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_42_PJLR_OoP_SomeIpXf</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_43_PRN_InP_ComXf</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_44_PRN_OoP_ComXf</srcid><srcstatus/><internalId>625</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_45_PRN_InP_SomeIpXf</srcid><srcstatus/><internalId>626</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_46_PRN_OoP_SomeIpXf</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_48_P11_InP_ComXf</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_49_P11_OoP_ComXf</srcid><srcstatus/><internalId>630</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_50_P11_InP_SomeIpXf</srcid><srcstatus/><internalId>631</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_51_P11_OoP_SomeIpXf</srcid><srcstatus/><internalId>632</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_52_P44_InP_SomeIpXf</srcid><srcstatus/><internalId>633</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_53_P44_OoP_SomeIpXf</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_54_P44m_InP_Client_SomeIpXf</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_55_P44m_OoP_Client_SomeIpXf</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_56_P44m_InP_Server_SomeIpXf</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_57_P44m_OoP_Server_SomeIpXf</srcid><srcstatus/><internalId>638</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXF_IMP_01001_ServiceIDs</srcid><srcstatus/><internalId>711</internalId></linkedfrom></coveredby></needscov>
        <!-- reentracy -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.NonReentrantTransformerFunctions</srcid><srcstatus/><internalId>522</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00009</linksto>
          <!-- reentracy -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00010</linksto>
          <!-- in-place buffer -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00011</linksto>
          <!-- out-of-place buffer -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00012</linksto>
          <!-- no altering of input buffer -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00019</linksto>
          <!-- functionality: protect communication -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00020</linksto>
          <!-- functionality: ensure correct data order -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00021</linksto>
          <!-- functionality: ensure correct data content -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00027</linksto>
          <!-- return hard error -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00028</linksto>
          <!-- return soft error -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00030</linksto>
          <!-- returns err from subset of defined error codes -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00040</linksto>
          <!-- general transformer function -->
          <dstversion>4</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00041</linksto>
          <!-- shall be non-first transformer in chain -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_91001.Std_ExtractProtocolHeaderFieldsType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.transformerId</linksto>
          <!-- name pattern transformerId -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00034</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>3</version>
      <description>
        Service name   : E2EXf_Inv_&lt;transformerId&gt;
        Syntax         : uint8 E2EXf_Inv_&lt;transformerId&gt;(
                         [Std_ExtractProtocolHeaderFieldsType extractProtocolHeaderFields],
                         [const E2EXf_CSTransactionHandleType* csTransactionHandle],
                         uint8* buffer,
                         uint32* bufferLength,
                         const uint8* inputBuffer,
                         uint32 inputBufferLength)
        Service ID[hex]: 0x04
        Sync/Async     : Synchronous
        Reentrancy     : Reentrant

        Parameters (in): extractProtocolHeaderFields Optional pointer to the function that
                           shall be used to extract relevant protocol header fields of the
                           serializing transformer in the transformer chain. Used for profiles
                           PXXm.
                         inputBuffer
                           This argument only exists for E2E transformers configured
                           for out-of-place transformation. It holds the input data for
                           the transformer. If executeDespiteDataUnavailability is set
                           to true and RTE cannot provide data as input to the transformer,
                           it will hand over a NULL pointer to the transformer.
                         inputBufferLength
                           This argument holds the length of the transformer's input
                           data (in the inputBuffer argument). If
                           executeDespiteDataUnavailability is set to true, and the RTE cannot
                           provide data as input to the transfoermer the length will be equal to 0.

        Parameters
        (inout)        : buffer
                           This argument is only an INOUT argument for E2E transformers,
                           which are configured for in-place transformation. It is the
                           buffer where the input data are placed by the RTE and which
                           is filled by the transformer with its output. If executeDespiteData
                           Unavailability is set to true and the RTE cannot provide data as input
                           to the transformer, it will hand over a NULL pointer to the transformer.
                           This argument is only an OUT argument for E2E transformers
                           configured for out-of-place transformation. It is the buffer
                           allocated by the RTE, where the
                           transformed data has to be stored by the transformer.

        Parameters
        (out)          : csTransactionHandle
                           Optional pointer to the E2E transaction handle for the C/S
                           method call.
                           - Used to tunnel the relevant information i.e. E2E Source ID
                           and E2E Counter from the request to the response at the
                           server side via the RTE.
                           Used for profiles PXXm.
                         bufferLength
                           Used length of the output buffer.

        Return value   : uint8
                           The high nibble represents the state of the E2E state machine,
                           the low nibble represents the status of the last E2E check.
                           For the following return codes, please see SWS TransformerGeneral:
                           0x00 (E_OK) This means VALID_OK
                           0x01 (E_SAFETY_VALID_REP)
                           0x02 (E_SAFETY_VALID_SEQ)
                           0x03 (E_SAFETY_VALID_ERR)
                           0x05 (E_SAFETY_VALID_NND)
                           0x20 (E_SAFETY_NODATA_OK)
                           0x21 (E_SAFETY_NODATA_REP)
                           0x22 (E_SAFETY_NODATA_SEQ)
                           0x23 (E_SAFETY_NODATA_ERR)
                           0x25 (E_SAFETY_NODATA_NND)
                           0x30 (E_SAFETY_INIT_OK)
                           0x31 (E_SAFETY_INIT_REP)
                           0x32 (E_SAFETY_INIT_SEQ)
                           0x33 (E_SAFETY_INIT_ERR)
                           0x35 (E_SAFETY_INIT_NND)
                           0x40 (E_SAFETY_INVALID_OK)
                           0x41 (E_SAFETY_INVALID_REP)
                           0x42 (E_SAFETY_INVALID_SEQ)
                           0x43 (E_SAFETY_INVALID_ERR)
                           0x45 (E_SAFETY_INVALID_NND)
                           0x77 (E_SAFETY_SOFT_RUNTIMEERROR)
                           A runtime error occured, safety properties could not be checked
                           (state or status cannot be determined) but non-protected output data
                           could be produced nonetheless. 0xFF (E_SAFETY_HARD_RUNTIMEERROR):
                           A runtime error occured, safety properties could not
                           be checked and no output data could be produced.
                           E_E2E_HARD_SAFETY_ERR
        Description    : Checks the received data. If the data can be used by the caller,
                         then the function returns E_OK.
        Available via    E2EXf.h
        (RS_E2E_08538)
      </description>
      <furtherinfo>
        Justifying rule: WRN.tsc.needscoverage.count violation.
        This tcs is covered by more than 10 EB tcs.
      </furtherinfo>
      <comment>
        Requirement SWS_Xfrm_00062 is replaced by requirement E2EXf.EB.transformerId.
        Following optional input parameter added in autosar release 22-11:
          - extractProtocolHeaderFields
          - csTransactionHandle
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032</srcid><srcstatus/><internalId>151</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_XDM_E_00001</srcid><srcstatus/><internalId>327</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_XDM_E_00002</srcid><srcstatus/><internalId>328</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_XDM_E_00003</srcid><srcstatus/><internalId>329</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_XDM_E_00004</srcid><srcstatus/><internalId>330</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_01_P04_InP_SomeIpXf</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_02_P04_OoP_SomeIpXf</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_03_P04_OoP_ComXf</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_04_P04_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_05_P01_InP_ComXf</srcid><srcstatus/><internalId>586</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_06_P01_OoP_ComXf</srcid><srcstatus/><internalId>587</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_07_P01_InP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>588</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_08_P01_OoP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>589</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_09_P01_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_10_P02_InP_ComXf</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_11_P02_OoP_ComXf</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_12_P02_InP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>593</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_13_P02_OoP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>594</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_14_P02_InP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_15_P05_InP_SomeIpXf</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_16_P05_OoP_SomeIpXf</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_17_P05_OoP_ComXf</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_18_P05_InP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_19_P06_InP_SomeIpXf</srcid><srcstatus/><internalId>600</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_20_P06_OoP_SomeIpXf</srcid><srcstatus/><internalId>601</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_21_P06_OoP_ComXf</srcid><srcstatus/><internalId>602</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_22_P06_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_23_P07_InP_SomeIpXf</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_24_P07_OoP_SomeIpXf</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_25_P07_OoP_ComXf</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_26_P07_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_27_NoCheck_InP_SomeIpXf</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_28_NoCheck_OoP_SomeIpXf</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_29_NoCheck_InP_ComXf</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_30_NoCheck_OoP_ComXf</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_35_P05_InP_ComXf</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_39_PJLR_InP_ComXf</srcid><srcstatus/><internalId>620</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_40_PJLR_OoP_ComXf</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_41_PJLR_InP_SomeIpXf</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_42_PJLR_OoP_SomeIpXf</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_43_PRN_InP_ComXf</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_44_PRN_OoP_ComXf</srcid><srcstatus/><internalId>625</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_45_PRN_InP_SomeIpXf</srcid><srcstatus/><internalId>626</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_46_PRN_OoP_SomeIpXf</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_48_P11_InP_ComXf</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_49_P11_OoP_ComXf</srcid><srcstatus/><internalId>630</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_50_P11_InP_SomeIpXf</srcid><srcstatus/><internalId>631</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_51_P11_OoP_SomeIpXf</srcid><srcstatus/><internalId>632</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_52_P44_InP_SomeIpXf</srcid><srcstatus/><internalId>633</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_53_P44_OoP_SomeIpXf</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_54_P44m_InP_Client_SomeIpXf</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_55_P44m_OoP_Client_SomeIpXf</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_56_P44m_InP_Server_SomeIpXf</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_57_P44m_OoP_Server_SomeIpXf</srcid><srcstatus/><internalId>638</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXF_IMP_01001_ServiceIDs</srcid><srcstatus/><internalId>711</internalId></linkedfrom></coveredby></needscov>
        <!-- reentracy -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.NonReentrantTransformerFunctions</srcid><srcstatus/><internalId>522</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00009</linksto>
          <!-- reentracy -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00010</linksto>
          <!-- in-place buffer -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00011</linksto>
          <!-- out-of-place buffer -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00012</linksto>
          <!-- no altering of input buffer -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00019</linksto>
          <!-- functionality: protect communication -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00020</linksto>
          <!-- functionality: ensure correct data order -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00021</linksto>
          <!-- functionality: ensure correct data content -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00027</linksto>
          <!-- return hard error -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00028</linksto>
          <!-- return soft error -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00030</linksto>
          <!-- returns err from subset of defined error codes -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>150</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00046</linksto>
          <!-- general inv transformer function -->
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00047</linksto>
          <!-- shall be non-first transformer in chain -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.transformerId</linksto>
          <!-- name pattern transformerId -->
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        Service name   : E2EXf_Init
        Syntax:          void E2EXf_Init( const E2EXf_ConfigType* config )
        Service ID[hex]: 0x01
        Sync/Async:      Synchronous
        Reentrancy:      Reentrant

        Parameters (in): config
                           Pointer to a selected configuration structure, in the
                           post-build-selectable variant. NULL in link-time variant.
        Parameters     : None
        (inout)
        Parameters     : None
        (out)
        Return value   : None
        Description    : Initializes the state of the E2E Transformer. The main part
                         of it is the initialization  of the E2E library state structures, which
                         is done by calling all init-functions from  E2E library.
        Available via  : E2EXf.h
        (RS_E2E_08538)
      </description>
      <comment>
        Incorporated RfC 69477 'Missing const qualifier for E2EXf_Init',
        see https://jira.autosar.org/browse/AR-56356.
        Configuration variants 'Link Time' and 'Post Build' are not supported,
        i.e. calling E2EXf_Init() with NULL refers only to precompile time
        configuration variant.
        Therefore no configuration can be provided to E2EXf_Init(), consequently
        the Init function has to be called with NULL.
        E2EXf_Init() is replaced with E2EXf_PartitionInit().
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- Unsupported post build and link time, solely pre compile -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedLinkTimeAndPostBuild</srcid><srcstatus/><internalId>516</internalId></linkedfrom><linkedfrom><srcid>dev.E2EXf.InitializationRoutines</srcid><srcstatus/><internalId>521</internalId></linkedfrom></coveredby></needscov>
        <!-- API does not exist -->
        <needscov><needsobj>lim</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB_IntReq.InitRoutines</srcid><srcstatus/><internalId>2</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00058</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00138</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        Service name   : E2EXf_DeInit
        Syntax         : void E2EXf_DeInit(  void  )
        Service ID[hex]: 0x02
        Sync/Async     : Synchronous
        Reentrancy     : Reentrant
        Parameters     : None
        (in)
        Parameters     : None
        (inout)
        Parameters     : None
        (out)
        Return value   : None
        Description    : Deinitializes the E2E transformer.
        Available via  : E2EXf.h
        (RS_E2E_08538)
      </description>
      <comment>
        E2EXf_DeInit() is replaced with E2EXf_PartitionDeInit().
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- API does not exist -->
        <needscov><needsobj>lim</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB_IntReq.InitRoutines</srcid><srcstatus/><internalId>2</internalId></linkedfrom></coveredby></needscov>
        <!-- API does not exist -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.InitializationRoutines</srcid><srcstatus/><internalId>521</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00059</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        Service name   : E2EXf_ GetVersionInfo
        Syntax         : void E2EXf_ GetVersionInfo(  Std_VersionInfoType* VersionInfo  )
        Service ID[hex]: 0x00
        Sync/Async     : Synchronous
        Reentrancy     : Reentrant
        Parameters     : None
        (in)
        Parameters     : None
        (inout)
        Parameters     : VersionInfo
        (out)            Pointer to where to store the version information of this module.
        Return value   : None
        Description    : Returns the version information of this module.
        Available via  : E2EXf.h
        (RS_E2E_08538)
      </description>
      <furtherinfo>
        Justifying rule: WRN.tsc.needscoverage.count violation.
        This tcs is covered by more than 10 EB tcs.
      </furtherinfo>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_01_P04_InP_SomeIpXf</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_02_P04_OoP_SomeIpXf</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_03_P04_OoP_ComXf</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_04_P04_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_05_P01_InP_ComXf</srcid><srcstatus/><internalId>586</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_06_P01_OoP_ComXf</srcid><srcstatus/><internalId>587</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_07_P01_InP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>588</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_08_P01_OoP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>589</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_09_P01_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_10_P02_InP_ComXf</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_11_P02_OoP_ComXf</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_12_P02_InP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>593</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_13_P02_OoP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>594</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_14_P02_InP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_15_P05_InP_SomeIpXf</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_16_P05_OoP_SomeIpXf</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_17_P05_OoP_ComXf</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_18_P05_InP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_19_P06_InP_SomeIpXf</srcid><srcstatus/><internalId>600</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_20_P06_OoP_SomeIpXf</srcid><srcstatus/><internalId>601</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_21_P06_OoP_ComXf</srcid><srcstatus/><internalId>602</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_22_P06_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_23_P07_InP_SomeIpXf</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_24_P07_OoP_SomeIpXf</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_25_P07_OoP_ComXf</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_26_P07_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_27_NoCheck_InP_SomeIpXf</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_28_NoCheck_OoP_SomeIpXf</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_29_NoCheck_InP_ComXf</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_30_NoCheck_OoP_ComXf</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_35_P05_InP_ComXf</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_39_PJLR_InP_ComXf</srcid><srcstatus/><internalId>620</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_40_PJLR_OoP_ComXf</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_41_PJLR_InP_SomeIpXf</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_42_PJLR_OoP_SomeIpXf</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_43_PRN_InP_ComXf</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_44_PRN_OoP_ComXf</srcid><srcstatus/><internalId>625</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_45_PRN_InP_SomeIpXf</srcid><srcstatus/><internalId>626</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_46_PRN_OoP_SomeIpXf</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_48_P11_InP_ComXf</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_49_P11_OoP_ComXf</srcid><srcstatus/><internalId>630</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_50_P11_InP_SomeIpXf</srcid><srcstatus/><internalId>631</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_51_P11_OoP_SomeIpXf</srcid><srcstatus/><internalId>632</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_52_P44_InP_SomeIpXf</srcid><srcstatus/><internalId>633</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_53_P44_OoP_SomeIpXf</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_54_P44m_InP_Client_SomeIpXf</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_55_P44m_OoP_Client_SomeIpXf</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_56_P44m_InP_Server_SomeIpXf</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_57_P44m_OoP_Server_SomeIpXf</srcid><srcstatus/><internalId>638</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXF_CON_01001_GetVersionInfo</srcid><srcstatus/><internalId>649</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXF_CON_01002_PublishedInformation</srcid><srcstatus/><internalId>650</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXF_IMP_01001_ServiceIDs</srcid><srcstatus/><internalId>711</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00057</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_91001.Std_VersionInfoType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00037</id>
      <status>approved</status>
      <!-- Forward function status is draft in R22-11 -->
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>2</version>
      <description>
        Mandatory Interfaces
        API function           Description
        E2E_P01Check           Checks the Data received using the E2E profile 1. This includes
                               CRC calculation, handling of Counter and Data ID.
        E2E_P01CheckInit       Initializes the check state
        E2E_P01Forward (draft) Protects data which is forwarded by using the E2E profile 01.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P01MapStatusToSM   The function maps the check status of Profile 1 to a generic
                               check status, which can be used by E2E state machine check
                               function.The E2E Profile 1 delivers a more fine-granular status,
                               but this is not relevant for the E2E state machine.
        E2E_P01Protect         Protects the array/buffer to be transmitted using the E2E
                               profile 1. This includes checksum calculation, handling of
                               counter and Data ID.
        E2E_P01ProtectInit     Initializes the protection state.
        E2E_P02Check           Check the array/buffer using the E2E profile 2. This includes
                               checksum calculation, handling of sequence counter and Data ID.
        E2E_P02CheckInit       Initializes the check state
        E2E_P02Forward (draft) Protects data which is forwarded by using the E2E profile 02.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P02MapStatusToSM   The function maps the check status of Profile 2 to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 2 delivers a more fine-granular status,
                               but this is not relevant for the E2E state machine.
        E2E_P02Protect         Protects the array/buffer to be transmitted using the E2E
                               profile 2. This includes checksum calculation, handling of
                               sequence counter and Data ID.
        E2E_P02ProtectInit     Initializes the protection state.
        E2E_P04Check           Checks the Data received using the E2E profile 4. This includes
                               CRC calculation, handling of Counter and Data ID.
        E2E_P04CheckInit       Initializes the check state
        E2E_P04Forward (draft) Protects data which is forwarded by using the E2E profile 04.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P04MapStatusToSM   The function maps the check status of Profile 4 to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 4 delivers a more fine-granular status,
                               but this is not relevant for the E2E state machine.
        E2E_P04Protect         Protects the array/buffer to  be transmitted using the E2E
                               profile 4. This includes checksum calculation, handling of
                               counter and Data ID.
        E2E_P04ProtectInit     Initializes the protection state.
        E2E_P04mCheckInit      Initializes the check state
        E2E_P04mForward (draft)Protects data which is forwarded by using the E2E profile 04m.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P04mMapStatusToSM  The function maps the check status of Profile 4m to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 4m delivers a more fine-granular
                               status, but this is not relevant for the E2E state machine.
        E2E_P04mProtect        Protects the array/buffer to  be transmitted using the E2E
                               profile 4. This includes checksum calculation, handling of
                               counter and Data ID.
        E2E_P04mProtectInit    Initializes the protection state.
        E2E_P04mSinkCheck      Checks the Data received using the E2E profile 4m.
                               This includes CRC calculation, handling of Counter, Data ID,
                               Message Type, Message Result, and Source ID.
        E2E_P04mSourceCheck    Checks the Data received using the E2E profile 4m.
                               This includes CRC calculation, handling of Counter, Data ID,
                               Message Type, Message Result, and Source ID.
        E2E_P05Check           Checks the Data received using the E2E profile 5. This includes
                               CRC calculation, handling of Counter. The function checks only
                               one single data in one cycle, it does not determine/compute the
                               accumulated state of the communication link.
        E2E_P05CheckInit       Initializes the check state
        E2E_P05Forward (draft) Protects data which is forwarded by using the E2E profile 05.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P05MapStatusToSM   The function maps the check status of Profile 5 to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 5 delivers a more fine-granular status,
                               but this is not relevant for the E2E state machine.
        E2E_P05Protect         Protects the array/buffer to be transmitted using the E2E
                               profile 5. This includes checksum calculation, handling of
                               counter.
        E2E_P05ProtectInit     Initializes the protection state.
        E2E_P06Check           Checks the Data received using the E2E profile 6. This includes
                               CRC calculation, handling of Counter. The function checks only
                               one single data in one cycle, it does not determine/compute the
                               accumulated state of the communication link.
        E2E_P06CheckInit       Initializes the check state
        E2E_P06Forward (draft) Protects data which is forwarded by using the E2E profile 06.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P06MapStatusToSM   The function maps the check status of Profile 6 to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 6 delivers a more fine-granular status,
                               but this is not relevant for the E2E state machine.
        E2E_P06Protect         Protects the array/buffer to be transmitted using the E2E
                               profile 6. This includes checksum calculation, handling of
                               counter.
        E2E_P06ProtectInit     Initializes the protection state.
        E2E_P07Check           Checks the Data received using the E2E profile 7. This includes
                               CRC calculation, handling of Counter and Data ID. The function
                               checks only one single data in one cycle, it does not determine/
                               compute the accumulated state of the communication link.
        E2E_P07CheckInit       Initializes the check state
        E2E_P07Forward (draft) Protects data which is forwarded by using the E2E profile 07.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P07MapStatusToSM   The function maps the check status of Profile 7 to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 7 delivers a more fine-granular status,
                               but this is not relevant for the E2E state machine.
        E2E_P07Protect         Protects the array/buffer to be transmitted using the E2E
                               profile 7. This includes checksum calculation, handling of
                               counter and Data ID.
        E2E_P07ProtectInit     Initializes the protection state.
        E2E_P07mCheckInit      Initializes the check state
        E2E_P07mForward (draft)Protects data which is forwarded by using the E2E profile 07m.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P07mMapStatusToSM  The function maps the check status of Profile 7m to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 7m delivers a more fine-granular
                               status, but this is not relevant for the E2E state machine.
        E2E_P07mProtect        Protects the array/buffer to  be transmitted using the E2E
                               profile 7m. This includes checksum calculation, handling of
                               counter and Data ID.
        E2E_P07mProtectInit    Initializes the protection state.
        E2E_P07mSinkCheck      Checks the Data received using the E2E profile 7m.
                               This includes CRC calculation, handling of Counter, Data ID,
                               Message Type, Message Result, and Source ID.
                               The function checks only one single data in one cycle, it does
                               not determine/compute the accumulated state of the communication
                               link. This function is intended for usage at the data sink
                               (i.e., in case of C/S communication at the server)
        E2E_P07mSourceCheck    Checks the Data received using the E2E profile 7m.
                               This includes CRC calculation, handling of Counter, Data ID,
                               Message Type, Message Result, and Source ID.
                               The function checks only one single data in one cycle, it does
                               not determine/compute the accumulated state of the communication
                               link. This function is intended for usage at the data source
                               (i.e., in case of C/S communication at the client).
        E2E_P07Check           Checks the Data received using the E2E profile 7. This includes
                               CRC calculation, handling of Counter and Data ID. The function
                               checks only one single data in one cycle, it does not determine/
                               compute the accumulated state of the communication link.
        E2E_P07CheckInit       Initializes the check state
        E2E_P07Forward (draft) Protects data which is forwarded by using the E2E profile 07.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P07MapStatusToSM   The function maps the check status of Profile 7 to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 7 delivers a more fine-granular status,
                               but this is not relevant for the E2E state machine.
        E2E_P07Protect         Protects the array/buffer to be transmitted using the E2E
                               profile 7. This includes checksum calculation, handling of
                               counter and Data ID.
        E2E_P07ProtectInit     Initializes the protection state.
        E2E_P07mCheckInit      Initializes the check state
        E2E_P07mForward (draft)Protects data which is forwarded by using the E2E profile 07m.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P07mMapStatusToSM  The function maps the check status of Profile 7m to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 7m delivers a more fine-granular
                               status, but this is not relevant for the E2E state machine.
        E2E_P07mProtect        Protects the array/buffer to  be transmitted using the E2E
                               profile 7m. This includes checksum calculation, handling of
                               counter and Data ID.
        E2E_P07mProtectInit    Initializes the protection state.
        E2E_P07mSinkCheck      Checks the Data received using the E2E profile 7m.
                               This includes CRC calculation, handling of Counter, Data ID,
                               Message Type, Message Result, and Source ID.
                               The function checks only one single data in one cycle, it does
                               not determine/compute the accumulated state of the communication
                               link. This function is intended for usage at the data sink
                               (i.e., in case of C/S communication at the server)
        E2E_P07mSourceCheck    Checks the Data received using the E2E profile 7m.
                               This includes CRC calculation, handling of Counter, Data ID,
                               Message Type, Message Result, and Source ID.
                               The function checks only one single data in one cycle, it does
                               not determine/compute the accumulated state of the communication
                               link. This function is intended for usage at the data source
                               (i.e., in case of C/S communication at the client).
        E2E_P08Check           Checks the Data received using the E2E profile 8. This includes
                               CRC calculation, handling of Counter and Data ID. The function
                               checks only one single data in one cycle, it does not determine/
                               compute the accumulated state of the communication link.
        E2E_P08CheckInit       Initializes the check state
        E2E_P08Forward (draft) Protects data which is forwarded by using the E2E profile 08.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P08MapStatusToSM   The function maps the check status of Profile 8 to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 8 delivers a more fine-granular status,
                               but this is not relevant for the E2E state machine.
        E2E_P08mCheckInit      Initializes the check state
        E2E_P08mForward (draft)Protects data which is forwarded by using the E2E profile 08m.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P08mMapStatusToSM  The function maps the check status of Profile 8m to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 8m delivers a more fine-granular
                               status, but this is not relevant for the E2E state machine.
        E2E_P08mProtect        Protects the array/buffer to  be transmitted using the E2E
                               profile 8m. This includes checksum calculation, handling of
                               counter and Data ID.
        E2E_P08mProtectInit    Initializes the protection state.
        E2E_P08mSinkCheck      Checks the Data received using the E2E profile 8m.
                               This includes CRC calculation, handling of Counter, Data ID,
                               Message Type, Message Result, and Source ID.
                               The function checks only one single data in one cycle, it does
                               not determine/compute the accumulated state of the communication
                               link. This function is intended for usage at the data sink
                               (i.e., in case of C/S communication at the server)
        E2E_P08mSourceCheck    Checks the Data received using the E2E profile 8m.
                               This includes CRC calculation, handling of Counter, Data ID,
                               Message Type, Message Result, and Source ID.
                               The function checks only one single data in one cycle, it does
                               not determine/compute the accumulated state of the communication
                               link. This function is intended for usage at the data source
                               (i.e., in case of C/S communication at the client).
        E2E_P08Check           Checks the Data received using the E2E profile 8. This includes
                               CRC calculation, handling of Counter and Data ID. The function
                               checks only one single data in one cycle, it does not determine/
                               compute the accumulated state of the communication link.
        E2E_P08CheckInit       Initializes the check state
        E2E_P08Forward (draft) Protects data which is forwarded by using the E2E profile 08.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P08MapStatusToSM   The function maps the check status of Profile 8 to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 8 delivers a more fine-granular status,
                               but this is not relevant for the E2E state machine.
        E2E_P08Protect         Protects the array/buffer to be transmitted using the E2E profile
                               8. This includes checksum calculation, handling of counter and
                               Data ID.
        E2E_P08ProtectInit     Initializes the protection state.
        E2E_P08mCheckInit      Initializes the check state
        E2E_P08mForward (draft)Protects data which is forwarded by using the E2E profile 08m.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P08mMapStatusToSM  The function maps the check status of Profile 8m to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 8m delivers a more fine-granular
                               status, but this is not relevant for the E2E state machine.
        E2E_P08mProtect        Protects the array/buffer to  be transmitted using the E2E
                               profile 8m. This includes checksum calculation, handling of
                               counter and Data ID.
        E2E_P08mProtectInit    Initializes the protection state.
        E2E_P08mSinkCheck      Checks the Data received using the E2E profile 8m.
                               This includes CRC calculation, handling of Counter, Data ID,
                               Message Type, Message Result, and Source ID.
                               The function checks only one single data in one cycle, it does
                               not determine/compute the accumulated state of the communication
                               link. This function is intended for usage at the data sink
                               (i.e., in case of C/S communication at the server)
        E2E_P08mSourceCheck    Checks the Data received using the E2E profile 8m.
                               This includes CRC calculation, handling of Counter, Data ID,
                               Message Type, Message Result, and Source ID.
                               The function checks only one single data in one cycle, it does
                               not determine/compute the accumulated state of the communication
                               link. This function is intended for usage at the data source
                               (i.e., in case of C/S communication at the client).
        E2E_P08Protect         Protects the array/buffer to be transmitted using the E2E profile
                               8. This includes checksum calculation, handling of counter and
                               Data ID.
        E2E_P08ProtectInit     Initializes the protection state.
        E2E_P11Check           Checks the Data received using the E2E profile 11. This includes
                               CRC calculation, handling of Counter and Data ID. The function
                               checks only one single data in one cycle, it does not determine/
                               compute the accumulated state of the communication link.
        E2E_P11CheckInit       Initializes the check state
        E2E_P11Forward (draft) Protects data which is forwarded by using the E2E profile 11.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P11MapStatusToSM   The function maps the check status of Profile 11 to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 11 delivers a more fine-granular
                               status, but this is not relevant for the E2E state machine.
        E2E_P11Protect         Protects the array/buffer to be transmitted using the E2E profile
                               11. This includes checksum calculation, handling of counter and
                               Data ID.
        E2E_P11ProtectInit     Initializes the protection state.
        E2E_P22Check           Checks the Data received using the E2E profile 22. This includes
                               CRC calculation, handling of Counter and Data ID. The function
                               checks only one single data in one cycle, it does not determine/
                               compute the accumulated state of the communication link.
        E2E_P22CheckInit       Initializes the check state
        E2E_P22Forward (draft) Protects data which is forwarded by using the E2E profile 22.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P22MapStatusToSM   The function maps the check status of Profile 22 to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 22 delivers a more fine-granular
                               status, but this is not relevant for the E2E state machine.
        E2E_P22Protect         Protects the array/buffer to be transmitted using the E2E profile
                               22. This includes checksum calculation, handling of counter and
                               Data ID.
        E2E_P22ProtectInit     Initializes the protection state.
        E2E_P44Check           Checks the Data received using the E2E profile 44. This includes
                               CRC calculation, handling of Counter and Data ID. The function
                               checks only one single data in one cycle, it does not determine/
                               compute the accumulated state of the communication link.
        E2E_P44CheckInit       Initializes the check state
        E2E_P44Forward (draft) Protects data which is forwarded by using the E2E profile 44.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P44MapStatusToSM   The function maps the check status of Profile 44 to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 44 delivers a more fine-granular
                               status, but this is not relevant for the E2E state machine.
        E2E_P44mCheckInit      Initializes the check state
        E2E_P44mForward (draft)Protects data which is forwarded by using the E2E profile 44m.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P44mMapStatusToSM  The function maps the check status of Profile 44m to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 44m delivers a more fine-granular
                               status, but this is not relevant for the E2E state machine.
        E2E_P44mProtect        Protects the array/buffer to  be transmitted using the E2E
                               profile 44m. This includes checksum calculation, handling of
                               counter and Data ID.
        E2E_P44mProtectInit    Initializes the protection state.
        E2E_P44mSinkCheck      Checks the Data received using the E2E profile 44m.
                               This includes CRC calculation, handling of Counter, Data ID,
                               Message Type, Message Result, and Source ID.
                               The function checks only one single data in one cycle, it does
                               not determine/compute the accumulated state of the communication
                               link. This function is intended for usage at the data sink
                               (i.e., in case of C/S communication at the server)
        E2E_P44mSourceCheck    Checks the Data received using the E2E profile 44m.
                               This includes CRC calculation, handling of Counter, Data ID,
                               Message Type, Message Result, and Source ID.
                               The function checks only one single data in one cycle, it does
                               not determine/compute the accumulated state of the communication
                               link. This function is intended for usage at the data source
                               (i.e., in case of C/S communication at the client).
        E2E_P44Check           Checks the Data received using the E2E profile 44. This includes
                               CRC calculation, handling of Counter and Data ID. The function
                               checks only one single data in one cycle, it does not determine/
                               compute the accumulated state of the communication link.
        E2E_P44CheckInit       Initializes the check state
        E2E_P44Forward (draft) Protects data which is forwarded by using the E2E profile 44.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P44MapStatusToSM   The function maps the check status of Profile 44 to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 44 delivers a more fine-granular
                               status, but this is not relevant for the E2E state machine.
        E2E_P44Protect         Protects the array/buffer to be transmitted using the E2E profile
                               44. This includes checksum calculation, handling of counter and
                               Data ID.
        E2E_P44ProtectInit     Initializes the protection state.
        E2E_P44mCheckInit      Initializes the check state
        E2E_P44mForward (draft)Protects data which is forwarded by using the E2E profile 44m.
                               This includes checksum calculation, handling of counter and Data
                               ID. Detected Errors of received message will be reconstruct on
                               output data.
        E2E_P44mMapStatusToSM  The function maps the check status of Profile 44m to a generic
                               check status, which can be used by E2E state machine check
                               function. The E2E Profile 44m delivers a more fine-granular
                               status, but this is not relevant for the E2E state machine.
        E2E_P44mProtect        Protects the array/buffer to  be transmitted using the E2E
                               profile 44m. This includes checksum calculation, handling of
                               counter and Data ID.
        E2E_P44mProtectInit    Initializes the protection state.
        E2E_P44mSinkCheck      Checks the Data received using the E2E profile 44m.
                               This includes CRC calculation, handling of Counter, Data ID,
                               Message Type, Message Result, and Source ID.
                               The function checks only one single data in one cycle, it does
                               not determine/compute the accumulated state of the communication
                               link. This function is intended for usage at the data sink
                               (i.e., in case of C/S communication at the server)
        E2E_P44mSourceCheck    Checks the Data received using the E2E profile 44m.
                               This includes CRC calculation, handling of Counter, Data ID,
                               Message Type, Message Result, and Source ID.
                               The function checks only one single data in one cycle, it does
                               not determine/compute the accumulated state of the communication
                               link. This function is intended for usage at the data source
                               (i.e., in case of C/S communication at the client).
        E2E_P44Protect         Protects the array/buffer to be transmitted using the E2E profile
                               44. This includes checksum calculation, handling of counter and
                               Data ID.
        E2E_P44ProtectInit     Initializes the protection state.
        E2E_SMCheck            Checks the communication channel. It determines if the data can
                               be used for safety-related application, based on history of
                               checks performed by a corresponding E2E_P0XCheck() function.
        E2E_SMCheckInit        Initializes the state machine.
        (RS_E2E_08538)
      </description>
      <comment>
        Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
        This applies to all profiles.
        ForwardStatus feature added in R22-11.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_01_P04_InP_SomeIpXf</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_05_P01_InP_ComXf</srcid><srcstatus/><internalId>586</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.ForwardStatus.Support.CS</srcid><srcstatus/><internalId>525</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_E2EXf_00037</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>2</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>376</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_E2EXf_00156</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_E2ETransformer.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        The apiServicePrefix of the E2E Transformer’s EcuC shall be set to
        E2EXf. (SRS_BSW_00159)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_33</srcid><srcstatus/><internalId>542</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>

    <specobject>
      <id>E2EXf.PRS_E2E_CONSTR_06300</id>
      <status>approved</status>
      <source>AUTOSAR_PRS_E2EProtocol.pdf, Release R22-11</source>
      <version>1</version>
      <description>
        For Client-Server Communication the MaxDeltaCounter on server-side shall be set
        to the maximum of the value range of the sequence counter.
      </description>
      <comment>
        This requirement is not applicable for the serializing transformer. On the sender side
        the counter is only written into the buffer and incremented.
      </comment>
      <releases>
        <release>AUTOSAR FO R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_56_P44m_InP_Server_SomeIpXf</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_57_P44m_OoP_Server_SomeIpXf</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_W_00024</srcid><srcstatus/><internalId>323</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>E2EXf.SWS_Xfrm_00001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        Transformers shall be stateful only, if the dedicated transformer functionality
        requires maintaining a transformer state. (SRS_Xfrm_00006)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00125</srcid><srcstatus/><internalId>15</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00130</srcid><srcstatus/><internalId>39</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00132</srcid><srcstatus/><internalId>40</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.SWS_E2EXf_00130</srcid><srcstatus/><internalId>256</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.SWS_E2EXf_00132</srcid><srcstatus/><internalId>257</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A transformer shall consider that the target ECU might have a different architecture
        than the sender ECU (e.g. 8/16/32bit, little/big endian, etc.) so the on-wire format
        shall be fixed.(SRS_Xfrm_00008)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00108</srcid><srcstatus/><internalId>46</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00109</srcid><srcstatus/><internalId>47</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00115</srcid><srcstatus/><internalId>48</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00112</srcid><srcstatus/><internalId>100</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00113</srcid><srcstatus/><internalId>101</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00116</srcid><srcstatus/><internalId>102</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00003</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A transformer shall clearly define endianness of multi-byte words.(SRS_Xfrm_00008)
      </description>
      <comment>
        This requirement is not applicable, because the End-to-End transformer
        does not define data structure but only provides the number of bytes
        for the header and the position where it shall be inserted.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00005</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A transformer shall clearly define the data semantics.(SRS_Xfrm_00008)
      </description>
      <comment>
        This requirement is not applicable, because the End-to-End transformer
        does not define data semantics but only provides the number of bytes
        for the header and the position where it shall be inserted.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00008</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
       The ways to deal with unexpected data shall be specified by the transformer
       specific SWS. In general the transformer shall discard the unexpected data
       but shall tolerate the expected fraction.(SRS_Xfrm_00005)
      </description>
      <comment>
        This requirement is not applicable. The End-to-End transformer does not
        define data semantics. This implies that only the length of the data
        is related to the term "unexpected data".
        The serializer transformer, which must be referenced ensures that only
        expected data will be forwarded to be protected by the End-to-End transformer.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00049</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        An implementation of a transformer shall be able to cope with NULL_PTR as
        input data. The detailed behavior shall be specified in the specific
        transformer SWS.(SRS_Xfrm_00005)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00102</srcid><srcstatus/><internalId>43</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00106</srcid><srcstatus/><internalId>44</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00105</srcid><srcstatus/><internalId>72</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00103</srcid><srcstatus/><internalId>73</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00137</srcid><srcstatus/><internalId>107</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00108</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A transformer which is called with NULL_PTR as input data shall
        not change the output buffer unless the transformer invocation shall trigger an autonomous
        error reaction.(SRS_Xfrm_00005)
      </description>
      <comment>
         Incorporated RfC 69896 'Execution of Transformer chain in case of unqueued
         communication when no data is available', see https://jira.autosar.org/browse/AR-13599.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_Xfrm_00108</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>377</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A transformer shall be implemented re-entrant because there exist valid
        configurations which can lead to a concurrent execution of a transformer.(SRS_Xfrm_00006)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00032</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00034</srcid><srcstatus/><internalId>122</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00035</srcid><srcstatus/><internalId>123</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00138</srcid><srcstatus/><internalId>124</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00036</srcid><srcstatus/><internalId>125</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00054</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
       If a VariableDataPrototype is mapped to multiple ISignals which refer to
       DataTransformations and if those DataTransformations refer to the same
       TransformationTechnologys at the beginning of their list of ordered
       references transformer and no XfrmVariableDataPrototypeInstanceRef
       is specified for that TransformationTechnology and no ComBasedTransformer
       is included in the transformer chains, the execution should be optimzed.

       As optimization those first transformers should be executed only once
       and the result should be taken as input for the further transformers
       for those ISignals.(SRS_Xfrm_00006)
      </description>
      <comment>
        This requirement is not applicable! No optimization for the E2E transformer
        is supported in order to be conform with the RTE. Furthermore, the
        implementation of the requirement is optional (see the "should be" within
        the requirement).
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00055</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        If the transformer execution is optimized, the XfrmImplementationMapping shall
        map all transformers which execution can be optimized to the
        same BswModuleEntry.(SRS_Xfrm_00006)
      </description>
      <comment>
        This requirement is not applicable! No optimization for the E2E transformer
        is supported in order to be conform with the RTE. Furthermore, the
        implementation of the requirement is optional (see the "should be" within
        the requirement SWS_Xfrm_00054).
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A transformer which uses in-place buffering shall use the input buffer also
        as output buffer.(See [SWS_Xfrm_00040] and [SWS_Xfrm_00045]) (SRS_Xfrm_00003)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00032</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00034</srcid><srcstatus/><internalId>122</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A transformer which uses out-of-place buffering shall work with two buffers:
        One for the input to the transformer and one for its output.(SWS_Xfrm_00003)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00032</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00034</srcid><srcstatus/><internalId>122</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A transformer which uses out-of-place buffering shall not alter the data
        of the input buffer.(SWS_Xfrm_00003)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00032</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00034</srcid><srcstatus/><internalId>122</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall protect the inter-ECU communication of safety
        related SWCs.(SWS_Xfrm_00001)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00032</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00034</srcid><srcstatus/><internalId>122</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall ensure the correct order of data transmissions.(SWS_Xfrm_00001)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00032</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00034</srcid><srcstatus/><internalId>122</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall ensure the correct content of data transmissions.(SWS_Xfrm_00001)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00032</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00034</srcid><srcstatus/><internalId>122</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00037</srcid><srcstatus/><internalId>126</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        Transformers shall return errors to the RTE as return codes.(SWS_Xfrm_00004)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032</srcid><srcstatus/><internalId>151</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        If a transformer cannot generate a valid output, it shall return a hard error.
        (SWS_Xfrm_00004)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00032</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00034</srcid><srcstatus/><internalId>122</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00051</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        If a transformer returns a hard error, it shall leave the output buffer unchanged.
        (SWS_Xfrm_00004)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_Xfrm_00051</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>379</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>334</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        If a transformer produces an output but wants to signal warning to the SWC,
        it shall return a soft error.(SWS_Xfrm_00004)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00032</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00034</srcid><srcstatus/><internalId>122</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        Each transformer class shall have its own set of abstract errors.
        (SWS_Xfrm_00004, SWS_Xfrm_00010)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032</srcid><srcstatus/><internalId>151</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        Each transformer shall return only errors which are a subset of the errors
        defined for the transforme's transformer class.(SWS_Xfrm_00004, SWS_Xfrm_00010,
        SWS_Xfrm_00011)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00032</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00034</srcid><srcstatus/><internalId>122</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>3</version>
      <description>
        A safety transformer shall return one of the following errors:(SWS_Xfrm_00010)
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_OK                       | 0x00       | -          | The communication is safe.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_REP         | 0x01       | Soft       | The data are valid according to
                                                               safety, although data with a re-
                                                               peated counter were received.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_SEQ         | 0x02       | Soft       | The data are valid according to
                                                               safety, although a counter jump
                                                               occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_ERR         | 0x03       | Soft       | The data are valid according to
                                                               safety, although the check itself
                                                               failed.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_NND         | 0x05       | Soft       | Communication is valid according to
                                                               safety, but no new data received.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_OK         | 0x20       | Soft       | No data are available since ini-
                                                               tialization of transformer.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_REP        | 0x21       | Soft       | No data are available since
                                                               initialization of transformer be-
                                                               cause a repeated counter was
                                                               received.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_SEQ        | 0x22       | Soft       | No data are available since ini-
                                                               tialization of transformer and a
                                                               counter jump occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_ERR        | 0x23       | Soft       | No data are available since ini-
                                                               tialization of transformer. There-
                                                               fore the check failed.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_NND        | 0x25       | Soft       | No data are available since
                                                               initialization of transformer.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_OK           | 0x30       | Soft       | Not enough data were received
                                                               to use them.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_REP          | 0x31       | Soft       | Not enough data were received
                                                               to use them but some with a re-
                                                               peated counter were received.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_SEQ          | 0x32       | Soft       | Not enough data were received
                                                               to use them, additionally a
                                                               counter jump occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_ERR          | 0x33       | Soft       | Not enough data were received
                                                               to use them, additionally a check
                                                               failed.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_NND          | 0x35       | Soft       | Not enough data were received to use
                                                               them, additionally no new data
                                                               received.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_OK        | 0x40       | Soft       | The data are invalid and cannot
                                                               be used.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_REP       | 0x41       | Soft       | The data are invalid and can-
                                                               not be used because a repeated
                                                               counter was received.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_SEQ       | 0x42       | Soft       | The data are invalid and cannot
                                                               be used due to a counter jump.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_ERR       | 0x43       | Soft       | The data are invalid and cannot
                                                               be used because a check failed.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_NND       | 0x45       | Soft       | Communication is invalid according to
                                                                safety and no new data received
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_OK           | 0x60       | Soft       | Communication is safe, Statemachine
                                                               is not active.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_REP          | 0x61       | Soft       | Data with a repeated counter were
                                                               received. E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_SEQ          | 0x62       | Soft       | A counter jump occurred.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_ERR          | 0x63       | Soft       | The data are invalid and cannot
                                                               be used because a check failed.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_NND          | 0x65       | Soft       | No new data available.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_DEC          | 0x66       | Soft       | Disabled E2E State machine and
                                                               disabled E2E check.
        -----------------------------------------------------------------------------
        E_SAFETY_SOFT_RUNTIMEERROR | 0x77       | Soft       | A runtime error occured, safety
                                                               properties could not be checked
                                                               (state or status cannot be deter-
                                                               mined) but non-protected output
                                                               data could be produced nonethe-
                                                               less.
        -----------------------------------------------------------------------------
        E_E2E_HARD_SAFETY_ERR      | 0x8d       | Hard       | Not further specified E2E error
        -----------------------------------------------------------------------------
        E_SAFETY_HARD_RUNTIMEERROR | 0xFF       | Hard       | A runtime error occured, safety
                                                               properties could not be checked
                                                               and NO output data could be pro-
                                                               duced.
        -----------------------------------------------------------------------------
      </description>
      <comment>
        The requirement is refined to separate the checking of the error codes by the APIs.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.E_OK</srcid><srcstatus/><internalId>152</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.VALID_REP</srcid><srcstatus/><internalId>153</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.VALID_SEQ</srcid><srcstatus/><internalId>154</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.VALID_ERR</srcid><srcstatus/><internalId>155</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.VALID_NND</srcid><srcstatus/><internalId>156</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.NODATA_OK</srcid><srcstatus/><internalId>157</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.NODATA_REP</srcid><srcstatus/><internalId>158</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.NODATA_SEQ</srcid><srcstatus/><internalId>159</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.NODATA_ERR</srcid><srcstatus/><internalId>160</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.NODATA_NND</srcid><srcstatus/><internalId>161</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.INIT_OK</srcid><srcstatus/><internalId>162</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.INIT_REP</srcid><srcstatus/><internalId>163</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.INIT_SEQ</srcid><srcstatus/><internalId>164</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.INIT_ERR</srcid><srcstatus/><internalId>165</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.INIT_NND</srcid><srcstatus/><internalId>166</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.INVALID_OK</srcid><srcstatus/><internalId>167</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.INVALID_REP</srcid><srcstatus/><internalId>168</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.INVALID_SEQ</srcid><srcstatus/><internalId>169</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.INVALID_ERR</srcid><srcstatus/><internalId>170</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.INVALID_NND</srcid><srcstatus/><internalId>171</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.NOSM_OK</srcid><srcstatus/><internalId>172</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.NOSM_REP</srcid><srcstatus/><internalId>173</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.NOSM_SEQ</srcid><srcstatus/><internalId>174</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.NOSM_ERR</srcid><srcstatus/><internalId>175</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.NOSM_NND</srcid><srcstatus/><internalId>176</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.NOSM_DEC</srcid><srcstatus/><internalId>177</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.SOFT_RUNTIMEERROR</srcid><srcstatus/><internalId>178</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.SAFETY_ERR</srcid><srcstatus/><internalId>179</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032.HARD_RUNTIMEERROR</srcid><srcstatus/><internalId>180</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01003_SafetyErrorCodeMacros</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <!-- only for 0x00, 0x77 and 0xFF -->
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.E_OK</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_OK                       | 0x00       | -          | The communication is safe.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01005_ReturnProtectSafetyErrorCodes</srcid><srcstatus/><internalId>653</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.VALID_REP</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_REP         | 0x01       | Soft       | The data are valid according to
                                                               safety, although data with a re-
                                                               peated counter were received.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.VALID_SEQ</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_SEQ         | 0x02       | Soft       | The data are valid according to
                                                               safety, although a counter jump
                                                               occurred.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.VALID_ERR</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_ERR         | 0x03       | Soft       | The data are valid according to
                                                               safety, although the check itself
                                                               failed.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.VALID_NND</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_NND         | 0x05       | Soft       | Communication is valid according to
                                                               safety, but no new data received.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_Xfrm_00032</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>378</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.NODATA_OK</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_OK         | 0x20       | Soft       | No data are available since ini-
                                                               tialization of transformer.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.NODATA_REP</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_REP        | 0x21       | Soft       | No data are available since
                                                               initialization of transformer be-
                                                               cause a repeated counter was
                                                               received.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.NODATA_SEQ</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_SEQ        | 0x22       | Soft       | No data are available since ini-
                                                               tialization of transformer and a
                                                               counter jump occurred.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.NODATA_ERR</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_ERR        | 0x23       | Soft       | No data are available since ini-
                                                               tialization of transformer. There-
                                                               fore the check failed.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.NODATA_NND</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_NND        | 0x25       | Soft       | No data are available since
                                                               initialization of transformer.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_Xfrm_00032</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>378</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.INIT_OK</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_OK           | 0x30       | Soft       | Not enough data were received
                                                               to use them.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.INIT_REP</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_REP          | 0x31       | Soft       | Not enough data were received
                                                               to use them but some with a re-
                                                               peated counter were received.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.INIT_SEQ</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_SEQ          | 0x32       | Soft       | Not enough data were received
                                                               to use them, additionally a
                                                               counter jump occurred.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.INIT_ERR</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_ERR          | 0x33       | Soft       | Not enough data were received
                                                               to use them, additionally a check
                                                               failed.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.INIT_NND</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_NND          | 0x35       | Soft       | Not enough data were received to use
                                                               them, additionally no new data
                                                               received.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_Xfrm_00032</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>378</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.INVALID_OK</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_OK        | 0x40       | Soft       | The data are invalid and cannot
                                                               be used.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.INVALID_REP</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_REP       | 0x41       | Soft       | The data are invalid and can-
                                                               not be used because a repeated
                                                               counter was received.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.INVALID_SEQ</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_SEQ       | 0x42       | Soft       | The data are invalid and cannot
                                                               be used due to a counter jump.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.INVALID_ERR</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_ERR       | 0x43       | Soft       | The data are invalid and cannot
                                                               be used because a check failed.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.INVALID_NND</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_NND       | 0x45       | Soft       | Communication is invalid according to
                                                                safety and no new data received
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_Xfrm_00032</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>378</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.NOSM_OK</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_OK           | 0x60       | Soft       | Communication is safe, Statemachine
                                                               is not active.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_Xfrm_00032</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>378</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.NOSM_REP</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_REP          | 0x61       | Soft       | Data with a repeated counter were
                                                               received. E2EStateMachine disabled.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_Xfrm_00032</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>378</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.NOSM_SEQ</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_SEQ          | 0x62       | Soft       | A counter jump occurred.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_Xfrm_00032</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>378</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.NOSM_ERR</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_ERR          | 0x63       | Soft       | The data are invalid and cannot
                                                               be used because a check failed.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_Xfrm_00032</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>378</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.NOSM_NND</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_NND          | 0x65       | Soft       | No new data available.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_Xfrm_00032</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>378</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.NOSM_DEC</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_DEC          | 0x66       | Soft       | Disabled E2E State machine and
                                                               disabled E2E check.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_Xfrm_00032</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>378</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.SOFT_RUNTIMEERROR</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_SOFT_RUNTIMEERROR | 0x77       | Soft       | A runtime error occured, safety
                                                               properties could not be checked
                                                               (state or status cannot be deter-
                                                               mined) but non-protected output
                                                               data could be produced nonethe-
                                                               less.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.SAFETY_ERR</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_E2E_HARD_SAFETY_ERR      | 0x8d       | Hard       | Not further specified E2E error
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <fulfilledby>
        <ffbObj>
          <ffbId>E2E.SWS_Xfrm_00032</ffbId>
          <ffbType>req</ffbType>
          <ffbVersion>1</ffbVersion>
        <ffbLinkstatus>linked</ffbLinkstatus><ffbLinkerror/><ffbObjcovstatus>covered</ffbObjcovstatus><internalId>378</internalId></ffbObj>
      <containerCovstatus>covered</containerCovstatus></fulfilledby>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00032.HARD_RUNTIMEERROR</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A safety transformer shall return this error as described:
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_SAFETY_HARD_RUNTIMEERROR | 0xFF       | Hard       | A runtime error occured, safety
                                                               properties could not be checked
                                                               and NO output data could be pro-
                                                               duced.
        -----------------------------------------------------------------------------
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01005_ReturnProtectSafetyErrorCodes</srcid><srcstatus/><internalId>653</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00061</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        ------------------------------------------------------------------------------------
        Type of error                                | Related error code          | Value
        ------------------------------------------------------------------------------------
        Error code if any other API service,
        except GetVersionInfo is called before the
        transformer module was initialized with Init
        or after a call to DeInit                    | &lt;MIP&gt;_E_UNINIT        | 0x01
        ------------------------------------------------------------------------------------
        Error code if an invalid configuration set
        was selected                                 | &lt;MIP&gt;_E_INIT_FAILED   | 0x02
        ------------------------------------------------------------------------------------
        API service called with wrong parameter      | &lt;MIP&gt;_E_PARAM         | 0x03
        ------------------------------------------------------------------------------------
        API service called with invalid pointer      | &lt;MIP&gt;_E_PARAM_POINTER | 0x04
        ------------------------------------------------------------------------------------
        (SRS_BSW_00337)

        where MIP is the Module Implementation Prefix of the transformer as defined in
        [SWS_BSW_00102] totally written in uppercase.
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00137</srcid><srcstatus/><internalId>107</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00070</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A transformer shall support the Extended Production Errors shown in Table.
        (SRS_BSW_00466, SRS_BSW_00469)
        -----------------------------------------------------------------------------
        Error Name:        | XFRM_E_MALFORMED_MESSAGE
        -----------------------------------------------------------------------------
        Short Description: | Transformer not able to produce output due to malformed
                             message content.
        -----------------------------------------------------------------------------
        Long Description:  | The data handed over to the transformer was malformed.
                             The transformer was not able to produce an output based on
                             the input because it was malformed.
        -----------------------------------------------------------------------------
        Detection Criteria:| Fail   The format of the transformer's input doesn't
                                    conform to the specification of the specific transformer.
                             PASS   The format of the transformer's input conforms to
                                    the specification of the specific transformer.
        -----------------------------------------------------------------------------
        Secondary Parameters: | N/A
        -----------------------------------------------------------------------------
        Time Required:     | N/A
        -----------------------------------------------------------------------------
        Monitor Frequency: | On every execution of transformer.
        -----------------------------------------------------------------------------
      </description>
      <comment>
        All extended production errors of the E2EXf module are specified by this source.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedExtendedProductionErrors</srcid><srcstatus/><internalId>517</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00071</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        The Extended Production Error XFRM_E_MALFORMED_MESSAGE shall exist for every transformer which has
        XFRM_E_MALFORMED_MESSAGE set.(SRS_BSW_00466, SRS_BSW_00469)
      </description>
      <comment>
        All extended production errors of the E2EXf module are specified by this source.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedExtendedProductionErrors</srcid><srcstatus/><internalId>517</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00034</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
       A transformer shall use the ImplementationDataTypes defined by RTE in the
       transformer"s Module Interlink Types Header file.(SRS_Xfrm_00002)
      </description>
      <comment>
        This requirement is not applicable. The E2E transformer handles serialized
        data only. This implies that the usage of the ImplementationDataTypes defined
        by the RTE is not necessary because the byte array consists out of basic data type
        uint8.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_91001.Rte_Cs_TransactionHandleType</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A transformer shall use the type Rte_Cs_TransactionHandleType defined in file Rte.h of module Rte.
      </description>
      <comment>
        This requirement is informational only. Refinement of requirement SWS_Xfrm_91001. The E2E transformer
        does not make use of this type.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_91001</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_91001.Std_ExtractProtocolHeaderFieldsType</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A transformer shall use the type Std_ExtractProtocolHeaderFieldsType defined in file Std_Types.h of module Std.
      </description>
      <comment>
        Refinement of requirement SWS_Xfrm_91001.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00032</srcid><srcstatus/><internalId>121</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_91001</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_91001.Std_MessageResultType</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A transformer shall use the type Std_MessageResultType defined in file Std_Types.h of module Std.
      </description>
      <comment>
        This requirement is informational only. Refinement of requirement SWS_Xfrm_91001. The E2E transformer
        does not make use of this type.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_91001</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_91001.Std_MessageTypeType</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A transformer shall use the type Std_MessageTypeType defined in file Std_Types.h of module Std.
      </description>
      <comment>
        This requirement is informational only. Refinement of requirement SWS_Xfrm_91001. The E2E transformer
        does not make use of this type.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_91001</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_91001.Std_ReturnType</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A transformer shall use the type Std_ReturnType defined in file Std_Types.h of module Std.
      </description>
      <comment>
        This requirement is informational only. Refinement of requirement SWS_Xfrm_91001. The E2E transformer
        uses uint8 as a return type, see SWS_E2EXf_00034.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_91001</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_91001.Std_TransformerForwardCode</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A transformer shall use the type Std_TransformerForwardCode defined in file Std_Types.h of module Std.
      </description>
      <comment>
        Refinement of requirement SWS_Xfrm_91001.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_61_P05_InP_SomeIpXf_FWCode</srcid><srcstatus/><internalId>645</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_62_P05_Oop_SomeIpXf_FWCode</srcid><srcstatus/><internalId>646</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_63_P02_InP_ComXf_FWCode</srcid><srcstatus/><internalId>647</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_64_P02_OoP_ComXf_FWCode</srcid><srcstatus/><internalId>648</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_91001</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_91001.Std_VersionInfoType</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        A transformer shall use the type Std_VersionInfoType defined in file Std_Types.h of module Std.
      </description>
      <comment>
        Refinement of requirement SWS_Xfrm_91001.
      </comment>
      <releases>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00036</srcid><srcstatus/><internalId>125</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_91001</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00060</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>2</version>
      <description>
        Name     &lt;Mip&gt;_ConfigType
        Type     Structure
        Element  void  | implementation specific | --
        Description This is the type of the data structure containing the initialization data for
                 the transformer.
        Available via &lt;Mip&gt;.h
        (SRS_BSW_00404, SRS_BSW_00441)
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00030</srcid><srcstatus/><internalId>119</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00062</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        The name pattern transformerId should be used for the APIs
        which belong to the BswModuleEntry referenced from a XfrmImplementation-
        Mapping:
        - Com_&lt;ComSignalName&gt; if no XfrmVariableDataPrototypeInstanceRef
          exists in the XfrmImplementationMapping and XfrmISignalRef is used in
          XfrmSignal and the data are sent/received using Com module.
        - Com_&lt;ComSignalGroupName&gt; if no XfrmVariableDataPrototypeIn-
          stanceRef exists in the XfrmImplementationMapping and XfrmISignal-
          Ref is used in XfrmSignal and the data are sent/received using Com module.
        - LdCom_&lt;LdComIpduName&gt; if no XfrmVariableDataPrototypeIn-
          stanceRef exists in the XfrmImplementationMapping and the data
          are sent/received using LdCom module.
        - &lt;ComponentName&gt;_&lt;p&gt;_&lt;o&gt; if XfrmVariableDataPrototypeIn-
          stanceRef exists.
        where
        - &lt;ComponentName&gt; is the shortName of the SwComponentPrototype which
          describes the context of XfrmVariableDataPrototypeInstanceRef.
        - &lt;p&gt; is the shortName of the PortPrototype which describes the context of
          XfrmVariableDataPrototypeInstanceRef. (This is comparable to p used
          in the RTE APIs.)
        - &lt;o&gt; is the shortName of the VariableDataPrototype referenced by Xfrm-
          VariableDataPrototypeInstanceRef. (This is comparable to o used in the
          RTE APIs.)
        - &lt;ComSignalName&gt; is the shortName of ComSignal which references the
          ISignal (using ComSystemTemplateSystemSignalRef that references
          ISignalToIPduMapping which references the ISignal) that references the
          DataTransformation.
        - &lt;ComSignalGroupName&gt; is the shortName of ComSignalGroup which ref-
          erences the ISignalGroup (using ComSystemTemplateSystemSignal-
          GroupRef that references ISignalToIPduMapping which references the
          ISignalGroup) that references the DataTransformation.
        - &lt;LdComIpduName&gt; is the shortName of LdComIPdu which references
          the ISignal (using LdComSystemTemplateSignalRef that references
          ISignalToIPduMapping which references the ISignal) that references the
          DataTransformation.(SRS_Xfrm_00002)
      </description>
      <comment>
        This requirement is informational only.
        E2EXf.SWS_Xfrm_00062 is replaced by requirement E2EXf.EB.transformerId.
        This is done because E2EXf.SWS_Xfrm_00062 is handled differently as it is
        specified. Furthermore, the implementation of the requirement is optional
        (see the "should be" within the requirement).
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_91002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        Service name:       &lt;Mip&gt;_ExtractProtocolHeaderFields
        Syntax:             Std_ReturnType &lt;Mip&gt;_ExtractProtocolHeaderFields(
                                        const uint8 *buffer,
                                        uint32 bufferLength,
                                        Std_MessageTypeType *messageType,
                                        Std_MessageResultType *messageResult
                                        )
        Service ID[hex]:    0x05
        Sync/Async:         Synchronous
        Reentrancy:         Reentrant
        Parameters (in):    buffer          Buffer allocated by the RTE, where the transformed data
                                            has to be stored by the transformer
                            bufferLength    Length of the buffer
        Parameters
        (inout):            None
        Parameters (out):   messageType     Canonical representation of the message type
                                            (extracted from the transformers protocol header).
                            messageResult   Canonical representation of the message result type
                                            (extracted from the transformers protocol header).
        Return value:       Std_ReturnType  E_OK: Relevant protocol header fields have been
                                            extracted successfully.
                                            E_NOT_OK: An error occurred during parsing of the
                                            protocol header.
        Description:        Function to extract the relevant protocol header fields of the message
                            and the type of the message result of a transformer.
                            - At the time being, this is limited to the types used for C/S
                            communication (i.e., REQUEST and RESPONSE and OK and ERROR).
        Available via:      &lt;Mip&gt;.h
        (SRS_Xfrm_00002)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXfExtractProtocolHeaderFields</srcid><srcstatus/><internalId>531</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00112</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        The function &lt;Mip&gt;_ExtractProtocolHeaderFields specified in [SWS_Xfrm_91002] shall
        exist in case the respective transformer processes relevant protocol header fields related
        to the type of a message and the type of the message result. This function shall extract
        this information and provide it in a canonical representation via its output arguments.
        (SRS_Xfrm_00002)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXfExtractProtocolHeaderFields</srcid><srcstatus/><internalId>531</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00113</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        The function &lt;Mip&gt;_ExtractProtocolHeaderFields specified in [SWS_Xfrm_91002]
        shall return E_NOT_OK in case of an error (e.g., parsing error) during extraction.
        Neither messageType nor messageResult shall be modified in this case.(SRS_Xfrm_00002)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXfExtractProtocolHeaderFields</srcid><srcstatus/><internalId>531</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00114</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        The function &lt;Mip&gt;_ExtractProtocolHeaderFields specified in [SWS_Xfrm_91002]
        shall return E_OK otherwise.(SRS_Xfrm_00002)
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXfExtractProtocolHeaderFields</srcid><srcstatus/><internalId>531</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>4</version>
      <description>
        Service name:         &lt;Mip&gt;_&lt;transformerId&gt;
        Syntax:               uint8 &lt;Mip&gt;_&lt;transformerId&gt;(
                                    [Std_TransformerForwardCode forwardedCode],
                                    [Std_ExtractProtocolHeaderFieldsType extractProtocolHeaderFields],
                                    [const &lt;datatype&gt;* csTransactionHandle],
                                    uint8 *buffer,
                                    uint32 *bufferLength,
                                    [const uint8 *inputBuffer,]
                                    uint32 inputBufferLength,
                                    [&lt;paramtype&gt; originalData1]
                                    )
        Service ID[hex]:      0x03
        Sync/Async:           Synchronous
        Reentrancy:           Non Reentrant Depends on specific transformer
        Parameters (in):      forwardedCode         Optional forwarded transformer code. This argument
                                                    only exists if the corresponding PortPrototype is
                                                    referenced by PortAPIOption with
                                                    transformerStatusForwarding set to
                                                    transformerStatus Forwarding.
                              extractProtocolHeader Optional pointer to the function that shall be
                              Fields                used to extract relevant protocol header fields
                                                    of a previous transformer in the transformer
                                                    chain. This argument only exists if the
                                                    corresponding XfrmImplementationMapping has a
                                                    XfrmTransformerClassExtractProtocolHeaderFields.
                              csTransactionHandle   Optional pointer to the transaction handle for
                                                    the C/S method call.
                                                    - Used to tunnel the relevant information from
                                                    the request to the response at the server side
                                                    via the RTE. This argument only exists if the
                                                    corresponding XfrmImplementationMapping has a
                                                    XfrmCSTansactionHandleImplementationDataTypeRef
                                                    which references an ImplementationDataType.
                              inputBuffer           This argument only exists for transformers
                                                    configured for out-of-place transformation. It holds
                                                    the input data for the transformer.
                              inputBufferLength     This argument holds the length of the
                                                    transformer"s input data (in the inputBuffer
                                                    argument).
                              originalData          These arguments only exists for transformers on
                                                    the sending side that are configured for access
                                                    to the original data.
                                                  - This denotes the data element represented
                                                    by the VariableDataPrototype if a
                                                    Sender/Receiver communication is
                                                    transformed.
                                                  - This denotes all arguments of the
                                                    ClientServerOperation if a
                                                    Client/Server communication is
                                                    transformed.
        Parameters
        (inout):              buffer                This argument is only an INOUT argument for
                                                    transformers which are not configured for
                                                    out-of-place transformation. It is the buffer
                                                    where the input data are placed by the RTE and
                                                    which is filled by the transformer with its
                                                    output. This parameter points to the buffer with
                                                    the output of the previous transformer. If the
                                                    current transformer has a headerLength different
                                                    from 0, the output data of the previous
                                                    transformer begin at position headerLength.
        Parameters (out):     buffer                This argument is only an OUT argument for
                                                    transformers configured for out-of-place
                                                    transformation. It is the buffer allocated by
                                                    the RTE, where the transformed data has to be
                                                    stored by the transformer.
                              bufferLength          Used length of the buffer
        Return value:         uint8                 0x00 (E_OK): Transformation successful
                                                    0x01 - 0xff: Specific errors
        Description:  This function is the interface of the first transformer in a transformer chain
                      of Sender/Receiver communication.
                      The length of the transformed data shall be calculated by the transformer
                      during runtime and returned in the OUT parameter bufferLength. It may be
                      smaller than the maximum buffer size used by the RTE for buffer allocation.
        Available via: &lt;Mip&gt;.h
        (SRS_Xfrm_00002)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00032</srcid><srcstatus/><internalId>121</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        The function &lt;Mip&gt;_&lt;transformerId&gt; specified in SWS_Xfrm_00040
        shall exist for the non-first reference in the list of ordered references
        transformer from a DataTransformation to a TransformationTechnology if the
        DataTransformation is referenced by an ISignal in the role dataTransformation.
        (SRS_Xfrm_00002)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00032</srcid><srcstatus/><internalId>121</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00052</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        Each function that satisfies the name pattern &lt;Mip&gt;_&lt;transformerId&gt;
        (independent from the position in the transformer chain) shall implement its
        BswModuleEntry which has the same shortName and is referenced by
        XfmTransformationBswModuleEntryRef.(SRS_Xfrm_00002)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.Xfrm_MCG_E_00005</srcid><srcstatus/><internalId>296</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00056</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        If the transformer execution is optimized and one function transforms data
        (independent from the position in the transformer chain) for multiple ISignals,
        the &lt;sigName&gt; of the functions name pattern
        (&lt;Mip&gt;_&lt;transformerId&gt;) may be any shortName of any ISignal which
        is transformed by that BswModuleEntry.(SRS_Xfrm_00006)
      </description>
      <comment>
        This requirement is not applicable! No optimization for the E2E transformer
        is supported in order to be conform with the RTE. Furthermore, the
        implementation of the requirement is optional (see the "should be" within
        the requirement SWS_Xfrm_00054).
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        The function &lt;Mip&gt;_Inv_&lt;transformerId&gt; specified in SWS_Xfrm_00046
        shall exist for the non-first reference in the list of ordered references transformer
        from a DataTransformation to a TransformationTechnology if the DataTransformation is
        referenced by an ISignal in the role dataTransformation.(SRS_Xfrm_00002)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00034</srcid><srcstatus/><internalId>122</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00046</srcid><srcstatus/><internalId>499</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00053</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        Each function that satisfies the name pattern &lt;Mip&gt;_Inv_&lt;transformerId&gt;
        (independent from the position in the transformer chain) shall implement its
        BswModuleEntry which has the same shortName and is referenced by
        XfmInvTransformationBswModuleEntryRef.(SRS_Xfrm_00002)
      </description>
      <comment>
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.Xfrm_MCG_E_00005</srcid><srcstatus/><internalId>296</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00058</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>2</version>
      <description>
        Service name:         &lt;Mip&gt;_Init
        Syntax:               void &lt;Mip&gt;_Init(
                                 const &lt;Mip&gt;_ConfigType* config)
        Service ID[hex]:      0x01
        Sync/Async:           Synchronous
        Reentrancy:           Reentrant
        Parameters (in):      config        Pointer to the transformer"s configuration data.
        Parameters
        (inout):              None
        Parameters (out):     None
        Return value:         None
        Description: This service initializes the transformer for the further processing.
        Available via &lt;Mip&gt;.h
        (SRS_BSW_00407, SRS_BSW_00411)
        where
          - Mip is the Module Implementation Prefix of the transformer as defined in
            [SWS_BSW_00102]
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00035</srcid><srcstatus/><internalId>123</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00059</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>2</version>
      <description>
        Service name:         &lt;Mip&gt;_DeInit
        Syntax:               void &lt;Mip&gt;_DeInit(void)
        Service ID[hex]:      0x02
        Sync/Async:           Synchronous
        Reentrancy:           Reentrant
        Parameters (in):      None
        Parameters
        (inout):              None
        Parameters (out):     None
        Return value:         None
        Description: This service deinitializes the transformer.
        Available via &lt;Mip&gt;.h
        (SRS_BSW_00407, SRS_BSW_00411)
        where
        - Mip is the Module Implementation Prefix of the transformer as defined in
          [SWS_BSW_00102]
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00138</srcid><srcstatus/><internalId>124</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_00057</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>2</version>
      <description>
        Service name:         &lt;Mip&gt;_GetVersionInfo
        Syntax:               void &lt;Mip&gt;_GetVersionInfo(
                                        Std_VersionInfoType* VersionInfo)
        Service ID[hex]:      0x00
        Sync/Async:           Synchronous
        Reentrancy:           Reentrant
        Parameters (in):      None
        Parameters
        (inout):              None
        Parameters (out):     VersionInfo     Pointer to where to store the version information of
                                              this module.
        Return value:         None
        Description: This service returns the version information of the called transformer module.
        Available via &lt;Mip&gt;.h
        (SRS_BSW_00407, SRS_BSW_00411)
        where
          - Mip is the Module Implementation Prefix of the transformer as defined in
          [SWS_BSW_00102]
      </description>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00036</srcid><srcstatus/><internalId>125</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>

    <specobject>
      <id>E2EXf.ECUC_Xfrm_00013_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        SWS Item         [ECUC_Xfrm_00013]
        Container Name   XfrmDevErrorDetect
        Parent Container XfrmGeneral
        Description      Switches the Development Error Detection and Notification ON or OFF.
                         true: detection and notification is enabled.
                         false: detection and notification is disabled.
        Multiplicity     1
        Type             EcucBooleanParamDef
        Default Value    false
        Post-Build Variant false
        Value
        Value Configuration Pre-compile time X All Variants
        Class               Link time        no
                            Post-build time  no
        Scope / Dependency scope: local
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <!-- Development errors are not supported -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedDevelopmentErrors</srcid><srcstatus/><internalId>518</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>

    <specobject>
      <id>E2EXf.ECUC_Xfrm_00019_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        SWS Item         [ECUC_Xfrm_00019]
        Parameter Name   XfrmVersionInfoApi
        Parent Container XfrmGeneral
        Description      Activate/Deactivate the version information API.
                         true: Activated
                         false: Deactivated
        Multiplicity     1
        Type             EcucBooleanParamDef
        Default Value    false
        Post-Build Variant false
        Value
        Value Configuration Pre-compile time X All Variants
        Class               Link time        no
                            Post-build time  no
        Scope / Dependency scope: local
      </description>
      <comment>
        This is a configuration parameter requirement with some functional specification
        (partly checked by VSMD checker).
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_IMP_01002_PreswitchVersionInfoApiOn</srcid><srcstatus/><internalId>712</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.VERSION_INFO_API</srcid><srcstatus/><internalId>226</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>

    <specobject>
      <id>E2EXf.ECUC_Xfrm_00016_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        SWS Item         [ECUC_Xfrm_00016]
        Container Name   XfrmDemEventParameterRefs
        Parent Container XfrmImplementationMapping
        Description      Container for the references to DemEventParameter elements which
                         shall be invoked using the API Dem_ReportErrorStatus API in case the
                         corresponding error occurs. The EventId is taken from the referenced
                         DemEventParameter's DemEventId value. The standardized errors are
                         provided in the container and can be extended by vendor specific error
                         references.
        Configuration Parameters
      </description>
      <comment>
        Extended production errors are not supported
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedExtendedProductionErrors</srcid><srcstatus/><internalId>517</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>

    <specobject>
      <id>E2EXf.ECUC_Xfrm_00015_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        SWS Item         [ECUC_Xfrm_00015]
        Name             XFRM_E_MALFORMED_MESSAGE
        Parent Container XfrmDemEventParameterRefs
        Description      Reference to configured DEM event to report if malformed messages
                         were received by the transformer.
        Multiplicity     0..1
        Type             Symbolic name reference to DemEventParameter
        Post-Build Variant false
        Multiplicity
        Post-Build Variant false
        Value
        Multiplicity        Pre-compile time X All Variants
        Configuration Class Link time        no
                            Post-build time  no
        Value Configuration Pre-compile time X All Variants
        Class               Link time        no
                            Post-build time  no
        Scope / Dependency  scope: local
                            dependency: Dem
      </description>
      <comment>
        Extended production errors are not supported
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedExtendedProductionErrors</srcid><srcstatus/><internalId>517</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_CONSTR_09094</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        If there exists a XfrmImplementationMapping which references an ISignal or ISignalGroup
        sig1 and contains the optional parameter XfrmVariableDataPrototypeInstanceRef, all
        XfrmImplementationMappings which reference the same ISignal or ISignalGroup sig1 shall
        contain a XfrmVariableDataPrototypeInstanceRef.
      </description>
      <comment>
        This is a configuration parameter requirement with some functional specification
        (partly checked by VSMD checker).
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_31_P01ComXf_MultipleRec</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_32_P04SomeIpXf_MultipleRec</srcid><srcstatus/><internalId>613</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_CONSTR_09096</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        If no XfrmSignal exists and hence no ISignal or ISignalGroup is referenced,
        XfrmVariableDataPrototypeInstanceRef shall be used to reference the instance of the
        VariableDataPrototype which data shall be transformed.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXfXfrmVariableDataPrototypeInstanceRef</srcid><srcstatus/><internalId>532</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>

    <specobject>
      <id>E2EXf.SWS_Xfrm_CONSTR_09095</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_TransformerGeneral.pdf, ASR R22-11</source>
      <version>1</version>
      <description>
        The XfrmVariableDataPrototypeInstanceRef shall refer to the instance of a
        VariableDataPrototype which belongs to a subclass of an AtomicSwComponentType.
      </description>
      <comment>
        This is a configuration parameter requirement with some functional specification
        (partly checked by VSMD checker).
      </comment>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_31_P01ComXf_MultipleRec</srcid><srcstatus/><internalId>612</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_32_P04SomeIpXf_MultipleRec</srcid><srcstatus/><internalId>613</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.MemPartitioning.XfrmOsApplicationRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name         XfrmOsApplicationRef
        Description  Reference to an Os application to which the BSW belongs.
                     Enabled: Map global variables of transformer or inverted transformer function
                     to dedicated memory partition.
                     Disabled: No dedicated memory partition assigned
        Multiplicity 0..1
        Type         Reference to [ OsApplication ]
        Post-Build Variant false
        Value
        Value Configuration Pre-compile time  X  All Variants
        Class               Link time        no
                            Post-build time  no
        Scope / Dependency scope: local
        Position     /AUTOSAR/../XfrmImplementationMapping/XfrmImplementationMapping
      </description>
      <comment/>
      <needscoverage>
        <!--
            src obj is covered indirectly by the tests, please refer to Memory Partitioning test.

            (Normally src is covered by linking to the configuration parameter in xdm schema file.
            However, if source coverage here is set to required it causes additional dependencies in the
            asc_E2ESEXfmgmt requirements tracing, which we want to avoid.)
            -->
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.Design.MemPartitioning.XfrmOsApplicationRef</srcid><srcstatus/><internalId>539</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.MemPartitioning.UniquePartitionId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        A unique ID PartitionId shall exist for each individual Os application referenced by parameter
        XfrmOsApplicationRef.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.Design.MemPartitioning.UniquePartitionId</srcid><srcstatus/><internalId>538</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.MemPartitioning.DefaultPartitionId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        All transformers with no Os application referenced by parameter XfrmOsApplicationRef
        (parameter is empty or disabled), shall be assigned to the default partition.
      </description>
      <comment>
        It shall be possible to configure a system composed of transformers assigned to
        specific partitions and to the default partition side by side.
        Rationale: This behaviour is facilitated for development only.
      </comment>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.Design.MemPartitioning.DefaultPartitionId</srcid><srcstatus/><internalId>534</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.MemPartitioning.PartitionHoldingInitStatus</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The initialization status variable of a transformer shall be assigned to the referenced PartitionId.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.Design.MemPartitioning.PartitionHoldingInitStatus</srcid><srcstatus/><internalId>537</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.MemPartitioning.InitByPartitionId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Each partition shall have a separate Init-function to initialize all transformers of this partition.
        The Init function shall be entitled &lt;Mip&gt;[_&lt;PartitionId&gt;]_PartitionInit(). The
        PartitionId infix and the preceding underscore shall be ommited completely in case of the default
        partition.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.Design.MemPartitioning.InitByPartitionId</srcid><srcstatus/><internalId>536</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.SWS_E2EXf_00035</srcid><srcstatus/><internalId>253</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.MemPartitioning.DeInitByPartitionId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Each partition shall have a separate Init-function to de-initialize all transformers of this partition.
        The Init function shall be entitled &lt;Mip&gt;[_&lt;PartitionId&gt;]_PartitionDeInit(). The
        PartitionId infix and the preceding underscore shall be ommited completely in case of the default
        partition.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.SWS_E2EXf_00138</srcid><srcstatus/><internalId>254</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.Design.MemPartitioning.DeInitByPartitionId</srcid><srcstatus/><internalId>535</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.MemPartitioning.FileName</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The files &lt;Mip&gt;_&lt;PartitionId&gt;_PartitionApi.c/.h shall hold the
        global data of the transformer functions &lt;Mip&gt;_&lt;transformerId&gt; and
        &lt;Mip&gt;_Inv_&lt;transformerId&gt; for a PartitionId.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.MemPartitioning.DefaultFileName</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The files &lt;Mip&gt;_PartitionApi.c/.h shall hold the global data
        of the transformer functions &lt;Mip&gt;_&lt;transformerId&gt; and
        &lt;Mip&gt;_Inv_&lt;transformerId&gt; for the default partition.
      </description>
      <comment/>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.MemPartitioning.MemorySectionByPartitionId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
            Memory sections that hold the global data of a transformer and are mapped to
            specific partitions shall include the partitionID in their names in the form:
        </para>
        <itemizedlist>
          <listitem>
              {PREFIX}[_{partitionID}]_START_SEC_VAR_{INIT_POLICY}[_{safety}]_{ALIGNMENT} and
          </listitem>
          <listitem>
              {PREFIX}[_{partitionID}]_STOP_SEC_VAR_{INIT_POLICY}[_{safety}]_{ALIGNMENT} respectively.
          </listitem>
        </itemizedlist>
          In case of the default partition the _{partitionID} infix shall be omitted.
          The _{safety} tag is optional and indicates the maximum possible safety level, if no
          _{safety} tag is added the default QM level is assumed.
      </description>
      <comment>This requirement is based on SWS_MemMap_00022 from AUTOSAR_SWS_MemoryMapping.pdf.</comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.MemPartitioning.SafetyPartition</id>
      <status>rejected</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
         If a XfrmTransformerBswModuleEntry or XfrmInvTransformerBswModuleEntry shall be
         within a safe partition depends on the following conditions:
        </para>
        <itemizedlist>
          <listitem>
            If the Xfrm configuration parameter XfrmIsSafetyTransformer is disabled
            and a safety transformer is configured within the transformer chain
            of the referenced transformer technology (through the configuration parameter
            XfrmTransformationTechnologyRef) the XfrmTransformerBswModuleEntry or
            XfrmInvTransformerBswModuleEntry shall be within a safety related partition.
          </listitem>
          <listitem>
            If the Xfrm configuration parameter XfrmIsSafetyTransformer is enabled
            and set to true the XfrmTransformerBswModuleEntry or
            XfrmInvTransformerBswModuleEntry shall be within a safety related partition
            without further considerations if a safety transformer is configured within the
            transformer chain of the referenced transformer technology (through the configuration
            parameter XfrmTransformationTechnologyRef) or not.
          </listitem>
        </itemizedlist>
        In all other cases the XfrmTransformerBswModuleEntry or XfrmInvTransformerBswModuleEntry
        shall be within a non safety related partition.
      </description>
      <comment>
        This requirement is not applicable. The E2E transformer is always considered as a
        safety transformer and consequently always within a safety related partition.
      </comment>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.MemPartitioning.RAMbyTransformerId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The global data of the transformer functions &lt;Mip&gt;_&lt;transformerId&gt;
        and &lt;Mip&gt;_Inv_&lt;transformerId&gt; shall be assigned to dedicated
        memory partitions by the PartitionId.
      </description>
      <comment>
        The global data used affects only the RAM data of the E2E library functions called.
        The initialization status variable is handled by a separate requirement.
      </comment>
      <needscoverage>
        <needscov><needsobj>dsn</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.Design.MemPartitioning.RAMbyTransformerId</srcid><srcstatus/><internalId>540</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.DEV_ERROR_DETECT</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
       Macro Name: E2EXF_DEV_ERROR_DETECT
       Description: Enables/Disables the Development Error Detection and Notification.
       Value Source: XfrmGeneral/XfrmDevErrorDetect
       Value Formula:
       true:  STD_ON
       false: STD_OFF
      </description>
      <needscoverage>
        <!-- Development errors are not supported -->
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.E2EXf.UnsupportedDevelopmentErrors</srcid><srcstatus/><internalId>518</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.VERSION_INFO_API</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
       Macro Name: E2EXF_VERSION_INFO_API
       Description: Activate/Deactivate the version information API.
       Value Source: XfrmGeneral/XfrmVersionInfoApi
       Value Formula:
       true:  STD_ON
       false: STD_OFF
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_IMP_01002_PreswitchVersionInfoApiOn</srcid><srcstatus/><internalId>712</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXF_IMP_02001_PreswitchVersionInfoApiOff</srcid><srcstatus/><internalId>713</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.ECUC_Xfrm_00019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.XFRMBUFFERLENGTHTYPE_ISUINT32</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Description  Macro Name: .&lt;MIP&gt;_XFRMBUFFERLENGTHTYPE_ISUINT32
                     Description: Enables usage of uint32 type for API parameter bufferLength
                     Value Source: XfrmGeneral/XfrmBufferLengthType
                     Value Formula:
                     UINT32: STD_ON
                     UINT16: STD_OFF
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_05_P01_InP_ComXf</srcid><srcstatus/><internalId>586</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_06_P01_OoP_ComXf</srcid><srcstatus/><internalId>587</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_37_P07_OoP_SomeIpXf_BufLen32</srcid><srcstatus/><internalId>618</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_38_P07_InP_SomeIpXf_BufLen32</srcid><srcstatus/><internalId>619</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.Xfrm_XDM_constr_09094</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the number of XfrmImplementationMappings which reference the same ISignal or ISignalGroup
        is not the same as the number of XfrmImplementationMappings which reference the same
        VariableDataPrototype then TRUE
      </description>
      <comment>
        There is at least one further transformer which references the same ISignal or ISignalGroup
        as this XfrmImplementationMapping, but has not configured an
        XfrmVariableDataPrototypeInstanceRef.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_474</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_01014_TwoTransformersWithSameSignalGroupRefButNoXfrmVariableDataPrototypeInstanceRef</srcid><srcstatus/><internalId>671</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.Xfrm_XDM_E_00001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the name of the referenced XfrmImplementationMapping is different than the name of the
        referenced  BswModuleEntry then TRUE
      </description>
      <comment>
        The name of the XfrmImplementationMapping has to be identical to the short name of
        the enabled BswModuleEntryRef.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_348</srcid><srcstatus/><internalId>549</internalId></linkedfrom><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_378</srcid><srcstatus/><internalId>550</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_01001_WrongTransformerBswmRef</srcid><srcstatus/><internalId>658</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXF_GEN_01002_WrongInvTransformerBswmRef</srcid><srcstatus/><internalId>659</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.Xfrm_XDM_E_00002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the name of the XfrmImplementationMapping is not a valid C identifier
        then FALSE
      </description>
      <comment>
        The short name of the XfrmImplementationMapping must be a valid C programming
        language function name.
      </comment>
      <needscoverage>
       <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_213</srcid><srcstatus/><internalId>547</internalId></linkedfrom></coveredby></needscov>
       <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_01007_WrongContainerName</srcid><srcstatus/><internalId>664</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.Xfrm_XDM_E_00003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the XfrmTransformerBswModuleEntryRef parameter exist in the XfrmImplementationMapping AND
        name of the mapping does not start with the ComXf_ prefix
        then TRUE
      </description>
      <comment>
        The name of the XfrmImplementationMapping of a serializing transformer must
        start with the ComXf_ prefix.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_201</srcid><srcstatus/><internalId>544</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_01004_WrongSerializerPrefix</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.Xfrm_XDM_E_00004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the XfrmInvTransformerBswModuleEntryRef parameter exist in the XfrmImplementationMapping
        AND the mappings name does not start with the ComXf_Inv_ prefix then TRUE
      </description>
      <comment>
        The name of the XfrmImplementationMapping of a deserializing transformer must start
        with the ComXf_Inv_ prefix.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_205</srcid><srcstatus/><internalId>545</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_01005_WrongDeserializerPrefix</srcid><srcstatus/><internalId>662</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXF_GEN_01006_WrongDeserializerInfix</srcid><srcstatus/><internalId>663</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.Xfrm_XDM_E_00005</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the number of enabled XfrmTransformerBswModuleEntryRef AND
        XfrmInvTransformerBswModuleEntryRef nodes in an XfrmImplementationMapping is not exactly one
        then TRUE
      </description>
      <comment>
        Exactly one of the parameters must be enabled, either XfrmInvTransformerBswModuleEntryRef
        or XfrmTransformerBswModuleEntryRef.
      </comment>
      <needscoverage>
       <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_209</srcid><srcstatus/><internalId>546</internalId></linkedfrom></coveredby></needscov>
       <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_01003_NoEnabledBswmRef</srcid><srcstatus/><internalId>660</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.Xfrm_XDM_E_00006</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the referenced VariableDataPrototype is valid AND it references a dataElement
        then FALSE
      </description>
      <comment>
        The VariableDataPrototype parameter of the XfrmImplementationMapping container must
        reference a valid VariableDataPrototype from the system mode
      </comment>
      <needscoverage>
       <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_510</srcid><srcstatus/><internalId>554</internalId></linkedfrom></coveredby></needscov>
       <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_01011_WrongDataElementRef</srcid><srcstatus/><internalId>668</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.Xfrm_XDM_E_00007</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the number of XfrmImplementationMappings which reference the same VariableDataPrototype,
        SwComponentPrototype and PortPrototype is greater than one
        then TRUE
      </description>
      <comment>
        Multiple XfrmImplementationMapping containers of the inverse transformers must not use
        the same combination of the references to VariableDataPrototype, SwComponentPrototype and
        PortPrototype.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_480</srcid><srcstatus/><internalId>552</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_01013_IdenticalXfrmVariableDataPrototypeInstanceRefUsedByTwoInvTransformers</srcid><srcstatus/><internalId>670</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.Xfrm_XDM_E_00008</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If there exist exactly 2 context references in the XfrmVariableDataPrototypeInstanceRef AND
        the index of the context reference is equal to 1 AND
        the context reference points to an invalid node OR
        the context reference points to a node which is not a of SwComponentPrototype type
        then TRUE
      </description>
      <comment>
        The first context reference of the XfrmVariableDataPrototypeInstanceRef container must
        refer to a valid SwComponentPrototype.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_542</srcid><srcstatus/><internalId>555</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_01009_WrongSwComponentPrototypeRef</srcid><srcstatus/><internalId>666</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.Xfrm_XDM_E_00009</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If there exist exactly 2 context references in the XfrmVariableDataPrototypeInstanceRef AND
        the index of the context reference is equal to 2 AND
        the context reference points to an invalid node OR
        the context reference points to a node which is not a of PortPrototype type
        then TRUE
      </description>
      <comment>
        The second context reference of the XfrmVariableDataPrototypeInstanceRef container must
        refer to a valid PortPrototype.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_546</srcid><srcstatus/><internalId>556</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_01010_WrongPortPrototypeRef</srcid><srcstatus/><internalId>667</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.Xfrm_XDM_E_00010</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If XfrmImplementationMapping has configured the XfrmVariableDataPrototypeInstanceRef AND
        XfrmTransformerBswModuleEntryRef parameter exists
        then TRUE
      </description>
      <comment>
        The configuration of multiple receivers shall be allowed only for inverse transformers.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_488</srcid><srcstatus/><internalId>553</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_01008_SameISignalGroupRefForMultipleSerializers</srcid><srcstatus/><internalId>665</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.Xfrm_XDM_E_00011</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the number of configured value of the XfrmBufferLengthType is not equal to the
        number of transformer modules
        then FALSE
      </description>
      <comment>
        The XfrmBufferLengthType parameter value of the ComXf module must be configured
        with the identical value as in other transformer modules.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_121</srcid><srcstatus/><internalId>543</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_01012_WrongXfrmBufferLengthType</srcid><srcstatus/><internalId>669</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>E2EXf.TPS_SWCT_01812</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_SoftwareComponentTemplate.pdf</source>
      <version>1</version>
      <description>
        If EndToEndTransformationComSpecProps.disableEndToEndCheck is set to true then the value
        EndToEndTransformationComSpecProps.disableEndToEndStateMachine shall be ignored.
      </description>
      <releases>
        <release>AUTOSAR CP R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.disableEndToEndStateMachine.TRUE.SR</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_W_00028</srcid><srcstatus/><internalId>326</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>E2EXf.constr_3151</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_SystemTemplate.pdf</source>
      <version>1</version>
      <description>
                The BufferProperties.headerLength for an E2E transformer
                located in a transformer chain with a SOME/IP transformer
                shall be configured with the following values depending on
                the value of the EndToEndTransformationDescription.profileName
                attribute:
                  1. PROFILE_01: BufferProperties.headerLength = 16 bits
                  2. PROFILE_02: BufferProperties.headerLength = 16 bits
                  3. PROFILE_04: BufferProperties.headerLength = 96 bits
                  4. PROFILE_05: BufferProperties.headerLength = 24 bits
                  5. PROFILE_06: BufferProperties.headerLength = 40 bits
                  6. PROFILE_07: BufferProperties.headerLength = 160 bits
                  7. PROFILE_08: BufferProperties.headerLength = 128 bits
                  8. PROFILE_11: BufferProperties.headerLength = 16 bits
                  9. PROFILE_22: BufferProperties.headerLength = 16 bits
                  10. PROFILE_04m: BufferProperties.headerLength = 128 bits
                  11. PROFILE_07m: BufferProperties.headerLength = 192 bits
                  12. PROFILE_08m: BufferProperties.headerLength = 160 bits
                  13. PROFILE_44: BufferProperties.headerLength = 96 bits
                  14. PROFILE_44m: BufferProperties.headerLength = 128 bits
      </description>
      <comment>
                PROFILE_22, PROFILE_04m, PROFILE_07m, PROFILE_08m  is mentioned for sake of
                completeness and is not implemented by EB.

                Since EB specific profiles PROFILE_PRN and PROFILE_JLR are derived
                from PROFILE_01 and PROFILE_11 the BufferProperties.headerLength
                value shall be configured the same as in profile they are derived
                from.
      </comment>
      <releases>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00006.2</srcid><srcstatus/><internalId>303</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00006.3</srcid><srcstatus/><internalId>304</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00006.4</srcid><srcstatus/><internalId>305</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00006.5</srcid><srcstatus/><internalId>306</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00006.6</srcid><srcstatus/><internalId>307</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00006.7</srcid><srcstatus/><internalId>308</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00006.10</srcid><srcstatus/><internalId>309</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00006.8</srcid><srcstatus/><internalId>310</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00006.9</srcid><srcstatus/><internalId>311</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>

    <specobject>
      <id>E2EXf.constr_3152</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_SystemTemplate.pdf</source>
      <version>1</version>
      <description>
                An E2E transformer used in a transformer chain with a
                COM Based transformer shall be configured with the following
                values:
                  - BufferProperties.headerLength = 0
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00006.1</srcid><srcstatus/><internalId>302</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>

    <specobject>
      <id>E2EXf.constr_3155</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_SystemTemplate.pdf</source>
      <version>1</version>
      <description>
                The value of the EndToEndTransformationDescription.upperHeaderBitsToShift
                attribute depends on the used serializing transformer:
                  - COM based transformer: 0 (no bits are shifted)
                  - SOME/IP transformer: 64 (to support the header shift of SOME/IP).
                  - Custom transformer: no restriction (depends on header length and placement of custom transformer)
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.TransformerChain.SingleSerializer</srcid><srcstatus/><internalId>268</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00005</srcid><srcstatus/><internalId>299</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>

    <specobject>
      <id>E2EXf.constr_3158</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_SystemTemplate.pdf</source>
      <version>1</version>
      <description>
                If the EndToEndTransformationDescription.profileName
                attribute has a value of PROFILE_01 or PROFILE_11 then
                the attribute maxDeltaCounter shall be in the range 1-14.
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.Properties.Check.Integer</srcid><srcstatus/><internalId>277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>

    <specobject>
      <id>E2EXf.constr_3195</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_SystemTemplate.pdf</source>
      <version>1</version>
      <description>
                If the EndToEndTransformationDescription.profileName
                attribute has a value of PROFILE_02 then the attribute
                maxDeltaCounter shall be in the range 1-15.
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.Properties.Check.Integer</srcid><srcstatus/><internalId>277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>

    <specobject>
      <id>E2EXf.constr_3159</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_SystemTemplate.pdf</source>
      <version>1</version>
      <description>
                If the EndToEndTransformationDescription.profileName
                attribute has a value of PROFILE_04, PROFILE_04m, PROFILE_44, or PROFILE_44m then
                the attribute maxDeltaCounter shall be in the range 1-65535.
      </description>
      <comment>
                PROFILE_04m is mentioned for sake of completeness and is not implemented by EB.
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.Properties.Check.Integer</srcid><srcstatus/><internalId>277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>

    <specobject>
      <id>E2EXf.constr_3196</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_SystemTemplate.pdf</source>
      <version>1</version>
      <description>
                If the EndToEndTransformationDescription.profileName
                attribute has a value of PROFILE_05 then the attribute
                maxDeltaCounter shall be in the range 1-255.
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.Properties.Check.Integer</srcid><srcstatus/><internalId>277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>

    <specobject>
      <id>E2EXf.constr_3197</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_SystemTemplate.pdf</source>
      <version>1</version>
      <description>
                If the EndToEndTransformationDescription.profileName
                attribute has a value of PROFILE_06 then the attribute
                maxDeltaCounter shall be in the range 1-255.
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.Properties.Check.Integer</srcid><srcstatus/><internalId>277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>

    <specobject>
      <id>E2EXf.constr_3316</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_SystemTemplate.pdf</source>
      <version>1</version>
      <description>
                If the EndToEndTransformationDescription.profileName
                attribute has a value of PROFILE_07, PROFILE_08, PROFILE_07m, or PROFILE_08m
                the value maxDeltaCounter shall be in the range 1-4294967295.
      </description>
      <comment>
                PROFILE_08, PROFILE_07m, PROFILE_08m  is mentioned for sake of completeness
                and is not implemented by EB.
      </comment>
      <releases>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.Properties.Check.Integer</srcid><srcstatus/><internalId>277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>

    <specobject>
      <id>E2EXf.constr_3364</id>
      <status>approved</status>
      <source>AUTOSAR_TPS_SystemTemplate.pdf</source>
      <version>1</version>
      <description>
                 The header length in bits specified by headerLength shall be a
                 multiple of 8.
      </description>
      <comment/>
      <releases>
        <release>AUTOSAR 4.3.1</release>
        <release>AUTOSAR R22-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00008</srcid><srcstatus/><internalId>312</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <!--
  Naming schema of requirements: "<Moduleprefix>.EB.<RequirementID>".
-->

    <specobject>
      <id>E2EXf.EB.MCG.UnitTests</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        There may be unit tests for the MCG, but these are not required.
      </description>
      <furtherinfo>
        Justifying rule: WRN.swurs.needscoverage.count violation.
        This swurs is covered by more than 10 EB swurs.
      </furtherinfo>
      <comment>
        Rationale:
        Unit tests are helpful with implementing software; however, since they test only
        small units, they cannot guarantee the correctness of the tested code in the greater
        context.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.e2exf.test.generator.input.properties.E2EPropertiesRetrieverTest.test01_getProfileShortNameShallReturnAnEmptyOptionalWhenAutosarProfileNameMappingIsNotDefined</srcid><srcstatus/><internalId>562</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.e2exf.test.generator.input.properties.E2EPropertiesRetrieverTest.test02_getProfileShortNameShallReturnShortNameOfTheHighestConsecutiveVersion</srcid><srcstatus/><internalId>563</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.e2exf.test.generator.input.properties.E2EPropertiesRetrieverTest.test03_getIsMethodProfileShallReturnFalseAsDefaultValue</srcid><srcstatus/><internalId>564</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.e2exf.test.generator.input.properties.E2EPropertiesRetrieverTest.test04_getIsMethodProfileShallReturnFalseForInvalidValue</srcid><srcstatus/><internalId>565</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.e2exf.test.generator.input.properties.E2EPropertiesRetrieverTest.test05_getIsMethodProfileShallReturnTrue</srcid><srcstatus/><internalId>566</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.e2exf.test.generator.input.properties.E2EPropertiesRetrieverTest.test06_getE2EPropertiesShallReturnPropertyOfTheHighesVersion</srcid><srcstatus/><internalId>567</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.e2exf.test.generator.intermediate.ProfileTest.test01_Equals</srcid><srcstatus/><internalId>570</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.e2exf.test.generator.intermediate.ProfileTest.test02_HashCode</srcid><srcstatus/><internalId>571</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.e2exf.test.generator.intermediate.ProfileTest.test03_MappedName</srcid><srcstatus/><internalId>572</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.e2exf.test.generator.intermediate.profileconfig.SystemDescriptionParameterReaderTest.test01_defaultValuesForIEndToEndTransformationComSpecPropsMustBeInitialized</srcid><srcstatus/><internalId>573</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.e2exf.test.generator.intermediate.profileconfig.SystemDescriptionParameterReaderTest.test02_defaultPropertiesInConfig</srcid><srcstatus/><internalId>574</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.e2exf.test.generator.intermediate.profileconfig.SystemDescriptionParameterReaderTest.test06_defaultValueOfTransitionToInvalidExtendedInComSpecPropsShallBeTrue</srcid><srcstatus/><internalId>578</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.e2exf.test.generator.intermediate.profileconfig.SystemDescriptionParameterReaderTest.test07_noValueOfTransitionToInvalidExtendedInComSpecProps</srcid><srcstatus/><internalId>579</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.e2exf.test.generator.intermediate.profileconfig.SystemDescriptionParameterReaderTest.test08_defaultValueOfTransitionToInvalidExtendedInTransformationDescriptionShallBeTrue</srcid><srcstatus/><internalId>580</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.transformerId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
       The name pattern transformerId shall be used for the APIs which belong to the
       BswModuleEntry referenced from a XfrmImplementationMapping by the
       XfrmTransformerBswModuleEntryRef or XfrmInvTransformerBswModuleEntryRef.
       This shall be applied for the &lt;Mip&gt; APIs:
       &lt;Mip&gt;_&lt;transformerId&gt;
       &lt;Mip&gt;_Inv_&lt;transformerId&gt;
      </description>
      <comment>
        replaces requirement E2EXf.ASR421.SWS_Xfrm_00062
      </comment>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00032</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00034</srcid><srcstatus/><internalId>122</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>

    <!-- EB requirements for Partition Init/DeInit routines -->

    <specobject>
      <id>E2EXf.EB.SWS_E2EXf_00035</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service name: E2EXf_[_&lt;PartitionId&gt;]_PartitionInit
      Syntax: void E2EXf_[_&lt;PartitionId&gt;]_PartitionInit( void )
      Service ID[hex]: --
      Sync/Async: Synchronous
      Reentrancy: Non-Reentrant
      Parameters (in): None
      Parameters (inout): None
      Parameters (out): None
      Return value: None
      Description: Initializes the state of a particular partition and all
      corresponding XfrmImplementationMappings. The main part
      of it is the initialization of the E2E library state structures, which
      is done by calling all init-functions from E2E library.
      </description>
      <furtherinfo>
        Justifying rule: WRN.swurs.needscoverage.count violation.
        This swurs is covered by more than 10 EB swurs.
      </furtherinfo>
      <comment>
        This requirement replaces E2EXf.SWS_E2EXf_00035
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_01_P04_InP_SomeIpXf</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_02_P04_OoP_SomeIpXf</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_03_P04_OoP_ComXf</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_04_P04_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_05_P01_InP_ComXf</srcid><srcstatus/><internalId>586</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_06_P01_OoP_ComXf</srcid><srcstatus/><internalId>587</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_07_P01_InP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>588</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_08_P01_OoP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>589</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_09_P01_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_10_P02_InP_ComXf</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_11_P02_OoP_ComXf</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_12_P02_InP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>593</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_13_P02_OoP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>594</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_14_P02_InP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_15_P05_InP_SomeIpXf</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_16_P05_OoP_SomeIpXf</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_17_P05_OoP_ComXf</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_18_P05_InP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_19_P06_InP_SomeIpXf</srcid><srcstatus/><internalId>600</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_20_P06_OoP_SomeIpXf</srcid><srcstatus/><internalId>601</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_21_P06_OoP_ComXf</srcid><srcstatus/><internalId>602</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_22_P06_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_23_P07_InP_SomeIpXf</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_24_P07_OoP_SomeIpXf</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_25_P07_OoP_ComXf</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_26_P07_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_27_NoCheck_InP_SomeIpXf</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_28_NoCheck_OoP_SomeIpXf</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_29_NoCheck_InP_ComXf</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_30_NoCheck_OoP_ComXf</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_35_P05_InP_ComXf</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_39_PJLR_InP_ComXf</srcid><srcstatus/><internalId>620</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_40_PJLR_OoP_ComXf</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_41_PJLR_InP_SomeIpXf</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_42_PJLR_OoP_SomeIpXf</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_43_PRN_InP_ComXf</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_44_PRN_OoP_ComXf</srcid><srcstatus/><internalId>625</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_45_PRN_InP_SomeIpXf</srcid><srcstatus/><internalId>626</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_46_PRN_OoP_SomeIpXf</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_48_P11_InP_ComXf</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_49_P11_OoP_ComXf</srcid><srcstatus/><internalId>630</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_50_P11_InP_SomeIpXf</srcid><srcstatus/><internalId>631</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_51_P11_OoP_SomeIpXf</srcid><srcstatus/><internalId>632</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_52_P44_InP_SomeIpXf</srcid><srcstatus/><internalId>633</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_53_P44_OoP_SomeIpXf</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_54_P44m_InP_Client_SomeIpXf</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_55_P44m_OoP_Client_SomeIpXf</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_56_P44m_InP_Server_SomeIpXf</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_57_P44m_OoP_Server_SomeIpXf</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MemPartitioning.InitByPartitionId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.SWS_E2EXf_00138</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      Service name: E2EXf_[_&lt;PartitionId&gt;]_PartitionDeInit
      Syntax: void E2EXf__[_&lt;PartitionId&gt;]_PartitionDeInit( void )
      Service ID[hex]: --
      Sync/Async: Synchronous
      Reentrancy: Non-Reentrant
      Parameters (in): None
      Parameters (inout): None
      Parameters (out): None
      Return value: None
      Description: Deinitializes the E2E transformer.
      </description>
      <furtherinfo>
        Justifying rule: WRN.swurs.needscoverage.count violation.
        This swurs is covered by more than 10 EB swurs.
      </furtherinfo>
      <comment>
        This requirement replaces E2EXf.SWS_E2EXf_00138
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_01_P04_InP_SomeIpXf</srcid><srcstatus/><internalId>582</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_02_P04_OoP_SomeIpXf</srcid><srcstatus/><internalId>583</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_03_P04_OoP_ComXf</srcid><srcstatus/><internalId>584</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_04_P04_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_05_P01_InP_ComXf</srcid><srcstatus/><internalId>586</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_06_P01_OoP_ComXf</srcid><srcstatus/><internalId>587</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_07_P01_InP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>588</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_08_P01_OoP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>589</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_09_P01_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_10_P02_InP_ComXf</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_11_P02_OoP_ComXf</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_12_P02_InP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>593</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_13_P02_OoP_ComXf_PRE_R4_2</srcid><srcstatus/><internalId>594</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_14_P02_InP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_15_P05_InP_SomeIpXf</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_16_P05_OoP_SomeIpXf</srcid><srcstatus/><internalId>597</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_17_P05_OoP_ComXf</srcid><srcstatus/><internalId>598</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_18_P05_InP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_19_P06_InP_SomeIpXf</srcid><srcstatus/><internalId>600</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_20_P06_OoP_SomeIpXf</srcid><srcstatus/><internalId>601</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_21_P06_OoP_ComXf</srcid><srcstatus/><internalId>602</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_22_P06_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>603</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_23_P07_InP_SomeIpXf</srcid><srcstatus/><internalId>604</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_24_P07_OoP_SomeIpXf</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_25_P07_OoP_ComXf</srcid><srcstatus/><internalId>606</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_26_P07_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>607</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_27_NoCheck_InP_SomeIpXf</srcid><srcstatus/><internalId>608</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_28_NoCheck_OoP_SomeIpXf</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_29_NoCheck_InP_ComXf</srcid><srcstatus/><internalId>610</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_30_NoCheck_OoP_ComXf</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_35_P05_InP_ComXf</srcid><srcstatus/><internalId>616</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_39_PJLR_InP_ComXf</srcid><srcstatus/><internalId>620</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_40_PJLR_OoP_ComXf</srcid><srcstatus/><internalId>621</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_41_PJLR_InP_SomeIpXf</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_42_PJLR_OoP_SomeIpXf</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_43_PRN_InP_ComXf</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_44_PRN_OoP_ComXf</srcid><srcstatus/><internalId>625</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_45_PRN_InP_SomeIpXf</srcid><srcstatus/><internalId>626</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_46_PRN_OoP_SomeIpXf</srcid><srcstatus/><internalId>627</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_48_P11_InP_ComXf</srcid><srcstatus/><internalId>629</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_49_P11_OoP_ComXf</srcid><srcstatus/><internalId>630</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_50_P11_InP_SomeIpXf</srcid><srcstatus/><internalId>631</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_51_P11_OoP_SomeIpXf</srcid><srcstatus/><internalId>632</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_52_P44_InP_SomeIpXf</srcid><srcstatus/><internalId>633</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_53_P44_OoP_SomeIpXf</srcid><srcstatus/><internalId>634</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_54_P44m_InP_Client_SomeIpXf</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_55_P44m_OoP_Client_SomeIpXf</srcid><srcstatus/><internalId>636</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_56_P44m_InP_Server_SomeIpXf</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_57_P44m_OoP_Server_SomeIpXf</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MemPartitioning.DeInitByPartitionId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.SWS_E2EXf_00148</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      E2EXf_[_&lt;PartitionId&gt;]_PartitionDeInit() shall set the module initialization
      state to FALSE.
      </description>
      <comment>
        This requirement replaces E2EXf.SWS_E2EXf_00148
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01004_DeInitialization</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.SWS_E2EXf_00130</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      The E2E Transformer shall maintain a boolean information (Initialization
      state) that is only set to TRUE, if the module has been successfully
      initialized via a call to E2EXf_[_&lt;PartitionId&gt;]_PartitionInit().
      Otherwise, it is set to FALSE.
      </description>
      <comment>
        This requirement replaces E2EXf.SWS_E2EXf_00130
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01004_DeInitialization</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.SWS_E2EXf_00132</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      In case of deinitialization (invocation of
      E2EXf_[_&lt;PartitionId&gt;]_PartitionDeInit()), the module
      initialization state shall be set to FALSE.
      </description>
      <comment>
        This requirement replaces E2EXf.SWS_E2EXf_00132.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01004_DeInitialization</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.SWS_E2EXf_00133</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
      If the E2E Transformer has not been correctly initialized (which means that
      E2EXf_[_&lt;PartitionId&gt;]_PartitionDeInit() was not successfully
      called before), then all generated E2E Transformer APIs shall immediately
      return E_SAFETY_HARD_RUNTIMEERROR.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01004_DeInitialization</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.Init_WaitForFirstData_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        Name         WaitForFirstData [UC_E2E_00208]
        Description  Sets the initial value of the WaitForFirstData
                     parameter to TRUE or FALSE.
                     true: WaitForFirstData = TRUE
                     false: WaitForFirstData = FALSE
        Multiplicity 1
        Type         EcucBooleanParamDef
        Default Value true
        Post-Build Variant false
        Value
        Value Configuration Pre-compile time X All Variants
        Class               Link time        no
                            Post-build time  no
        Scope / Dependency scope: local
      </description>
      <comment>
        The ASR 4.2.1 implementation for P01 and P02 sets the initial value of the WaitForFirstData to FALSE.
        In the ASR 4.3.0 (Rfc 70382) is specified that the initial value of the WaitForFirstData must be set to TRUE.
        The E2E Transformer MCG shall be able to configure the initial value of the WaitForFirstData parameter
        in the E2E Profiles in order to be backwards compatible.
      </comment>
      <releases>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf_EBParameters.xdm_19</srcid><srcstatus/><internalId>557</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_02001_WaitForFirstData</srcid><srcstatus/><internalId>657</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.CalculateMaxWindowSize</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        <para>
            The E2E Transformer shall generate the E2ESM_MAX_WINDOW_SIZE_VALID
            macro into the E2EXf_Cfg.h file. The value of E2ESM_MAX_WINDOW_SIZE_VALID
            shall be calculated as the maximum value of all WindowSizeValid
            parameters used by a transformer.
        </para>
      </description>
      <comment>
        Default equals to the minimum generated value.
      </comment>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.CalculateMaxWindowSize.MinValue</srcid><srcstatus/><internalId>261</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.CalculateMaxWindowSize.MaxValue</srcid><srcstatus/><internalId>262</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_IMP_03003_E2ESM_MaxWindowSizeValid_Max_Of_Multiple</srcid><srcstatus/><internalId>716</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.CalculateMaxWindowSize.MinValue</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        <para>
            The generated value of the E2ESM_MAX_WINDOW_SIZE_VALID macro
            shall not be less than 1U.
        </para>
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_IMP_03001_E2ESM_MaxWindowSizeValid_Min_Boundary</srcid><srcstatus/><internalId>714</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.CalculateMaxWindowSize</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.CalculateMaxWindowSize.MaxValue</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        <para>
            The generated value of the E2ESM_MAX_WINDOW_SIZE_VALID macro
            shall not be greater than 254U.
        </para>
      </description>
      <comment>
            In case the maximum boundary is exceeded the macro will be
            generated with the maximum allowed value.
      </comment>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_W_00001</srcid><srcstatus/><internalId>287</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_IMP_03002_E2ESM_MaxWindowSizeValid_Max_Boundary</srcid><srcstatus/><internalId>715</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.CalculateMaxWindowSize</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.EndToEndTransformationComSpecProps</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Configuration container EndToEndTransformationComSpecProps shall be considered only for inverse
        transformers that are associated with a SenderReceiverToSignalMapping or
        SenderReceiverToSignalGroupMapping that references via ContextPortRef an RPortPrototype.
      </description>
      <comment>
        <para>
          It is nowhere explicitly stated that configuration container EndToEndTransformationComSpecProps
          is applicable only for inverse transformers. This constraint is implied
          by the system model configuration schema. The container can be configured (indirectly) only for
          RPortPrototype (receiver port).
        </para>
        <para>
          This requirement was created to prevent generation of an incorrect configuration where
          SenderReceiverToSignalMapping or SenderReceiverToSignalGroupMapping of an
          inverse transformer references an RPortPrototype with
          EndToEndTransformationComSpecProps.disableEndToEndCheck set to TRUE.
        </para>
        <para>
          From the code generator perspective it does not make sense to refine this requirement for
          SenderReceiverToSignalMapping and SenderReceiverToSignalGroupMapping. The check
          that verifies if it is an inverse transformer is applied before the method which retrieves
          configuration container EndToEndTransformationComSpecProps.
        </para>
        <!--
          The only valid parent of the ReceiverComSpec is RPortComSpec and RPortComSpec
          can only be a child of RPortPrototype.
          SenderComSpec can not have TransformationComSpecProps as a child element.


                Receiver Port                         |    Sender Port
        =======================================================================================
          RPortPrototype                              |   PPortPrototype
            RPortComSpec                              |     PPortComSpec
              (Nonqueued/Queued)ReceiverComSpec       |       (Nonqueued/Queued)SenderComSpec
                TransformationComSpecProps            |
                  EndToEndTransformationComSpecProps  |
                    disableEndToEndCheck              |

        source: AUTOSAR_TPS_SoftwareComponentTemplate
        -->
      </comment>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00154</srcid><srcstatus/><internalId>11</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.DisableEndToEndCheck</srcid><srcstatus/><internalId>264</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.disableEndToEndStateMachine</srcid><srcstatus/><internalId>280</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_09_P01_OoP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>590</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.DisableEndToEndCheck</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        <para>
            In case when the inverse Transformer does not have configured XfrmVariableDataPrototypeInstanceRef in the
            XfrmImplementationMapping then the value of the disableEndToEndCheck parameter shall be obtained
            by means of the SenderReceiverToSignalMapping/SenderReceiverToSignalGroupMapping.
        </para>
        <para>
            Default value of the disableEndToEndCheck parameter: FALSE.
        </para>
      </description>
      <comment>
        <para>
          The E2E header is removed from the payload independent from the setting of this attribute.
        </para>
        <para>
          Covers a valid use case of having only one QM receiver on an ECU that needs to receive
          data which is end-to-end protected and thus needs to use the E2EXf with disabled end-to-end check
          to just remove the end-to-end protection header.
        </para>
      </comment>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.DisableEndToEndCheck.XfrmISignalRef</srcid><srcstatus/><internalId>265</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.DisableEndToEndCheck.XfrmISignalGroupRef</srcid><srcstatus/><internalId>266</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.EndToEndTransformationComSpecProps</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.DisableEndToEndCheck.XfrmISignalRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        <para>
            In case when the inverse Transformer does not have configured XfrmVariableDataPrototypeInstanceRef
            AND XfrmSignalChoice is set to XfrmISignalRef in the XfrmImplementationMapping then
            the value of the disableEndToEndCheck parameter shall be obtained by means of the
            SenderReceiverToSignalMapping.
        </para>
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_58_P05_InP_SomeIpXf_disableEndToEndCheck_NO_CHECK</srcid><srcstatus/><internalId>639</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_58_P05_InP_SomeIpXf_disableEndToEndCheck_CHECK</srcid><srcstatus/><internalId>640</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.DisableEndToEndCheck</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.DisableEndToEndCheck.XfrmISignalGroupRef</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        <para>
            In case when the inverse Transformer does not have configured XfrmVariableDataPrototypeInstanceRef
            AND XfrmSignalChoice is set to XfrmISignalGroupRef in the XfrmImplementationMapping then
            the value of the disableEndToEndCheck parameter shall be obtained by means of the
            SenderReceiverToSignalGroupMapping.
        </para>
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_59_P02_InP_ComXf_disableEndToEndCheck_NO_CHECK</srcid><srcstatus/><internalId>641</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_59_P02_InP_ComXf_disableEndToEndCheck_CHECK</srcid><srcstatus/><internalId>642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.DisableEndToEndCheck</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.TransformationTechnology.GeneratedCodeCheck</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        <para>
            In case when the attributes protocol, version and transformerClass
            of the TransformationTechnology are not set to the required
            values no transformer function shall be generated for that
            transformer.
        </para>
      </description>
      <comment>
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_47_InvalidTransformationTechnology</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.TransformerChain.SingleSerializer</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Exactly one transformer (TransformationTechnology) of transformer
        class 'SERIALIZER' shall be present in the transformer chain
        (DataTransformation) which is applied to an ISignal respectively
        to an ISignalGroup.
      </description>
      <comment>
        Hierarchically above requirement E2EXf.constr_3155 implies already,
        that serializing transformers are in use by the transformer chain,
        i.e. using no serializing transformer is not considered at this
        requirement level
      </comment>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00003</srcid><srcstatus/><internalId>297</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.constr_3155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.UpperHeaderBitsToShift.MultipleOfEight</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The specified value of upperHeaderBitsToShift parameter in bits shall be
        a multiple of 8.
      </description>
      <comment>
        The E2E library makes a bit to bytes conversion required by the E2E_MemCpy
        function.
        Specification items SWS_E2EXf_00102 and SWS_E2EXf_00106 implicitly
        require the same.
      </comment>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00009</srcid><srcstatus/><internalId>313</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.SWS_E2EXf_00048.PRN</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The generated configuration object of type E2E_PRNConfigType shall be
        initialized according to the following:
        - DataID = EndToEndTransformationISignalProps.dataID
        - DataLength = EndToEndTransformationISignalProps.dataLength
        - CounterOffset = EndToEndTransformationDescription.counterOffset
        - CRCOffset = EndToEndTransformationDescription.crcOffset
        - DataIDNibbleOffset = EndToEndTransformationDescription.dataIdNibbleOffset
        - DataIDMode shall be set to
          - E2E_PRN_DATAID_BOTH if EndToEndTransformationDescription.dataIDMode == all16Bit
          - E2E_PRN_DATAID_ALT if EndToEndTransformationDescription.dataIDMode == alternating8Bit
          - E2E_PRN_DATAID_LOW if EndToEndTransformationDescription.dataIDMode == lower8Bit
          - E2E_PRN_DATAID_NIBBLE if EndToEndTransformationDescription.dataIDMode == nibble
        - MaxDeltaCounterInit = EndToEndTransformationComSpecProps.maxDeltaCounter-1 or
          EndToEndTransformationDescription.maxDeltaCounter-1
        - MaxNoNewOrRepeatedData = EndToEndTransformationComSpecProps.maxNoNewOrRepeatedData or
          EndToEndTransformationDescription.maxNoNewOrRepeatedData
        - SyncCounterInit = EndToEndTransformationComSpecProps.syncCounterInit or
          EndToEndTransformationDescription.syncCounterInit.(SRS_E2E_08538)
      </description>
      <!-- This requirement is derived from SWS_E2EXf_00048 (E2E Profile 01)-->
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00010</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_45_PRN_InP_SomeIpXf</srcid><srcstatus/><internalId>626</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_46_PRN_OoP_SomeIpXf</srcid><srcstatus/><internalId>627</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.SWS_E2EXf_00162.PJLR</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The generated configuration object of type E2E_PJLRConfigType
        shall be initialized according to the following (one-to-one mapping):
        - DataID = EndToEndTransformationISignalProps.dataID
        - DataLength = EndToEndTransformationISignalProps.dataLength
        - CounterOffset = EndToEndTransformationDescription.counterOffset
        - CRCOffset = EndToEndTransformationDescription.crcOffset
        - DataIDNibbleOffset = EndToEndTransformationDescription.dataIdNibbleOffset
        - DataIDMode shall be set to
          - E2E_PJLR_DATAID_BOTH if
            EndToEndTransformationDescription.dataIDMode == all16Bit
          - E2E_PJLR_DATAID_NIBBLE if
            EndToEndTransformationDescription.dataIDMode == nibble
        - MaxDeltaCounter = EndToEndTransformationComSpecProps.maxDeltaCounter or
          EndToEndTransformationDescription.maxDeltaCounter
      </description>
      <!-- This requirement is derived from SWS_E2EXf_00162 (E2E Profile 11)-->
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00010</srcid><srcstatus/><internalId>314</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_41_PJLR_InP_SomeIpXf</srcid><srcstatus/><internalId>622</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_42_PJLR_OoP_SomeIpXf</srcid><srcstatus/><internalId>623</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>E2EXf.top.015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.DisableEndToEndCheck.CS</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf MCG shall generate the same API for client/server communication independently of what
        configuration parameter EndToEndTransformationComSpecProps.disableEndToEndCheck is configured to.
      </description>
      <comment>
        Refined requirement to distinguish between client and server side.
      </comment>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.DisableEndToEndCheck.CS.Client</srcid><srcstatus/><internalId>273</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.DisableEndToEndCheck.CS.Server</srcid><srcstatus/><internalId>274</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_W_00022</srcid><srcstatus/><internalId>319</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.DisableEndToEndCheck.CS.Client</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf MCG shall generate the same API for client communication independently of what configuration
        parameter EndToEndTransformationComSpecProps.disableEndToEndCheck is configured to.
      </description>
      <comment>
        E2EXf.EB.DisableEndToEndCheck.CS applied to client side.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_54_P44m_InP_Client_SomeIpXf</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_55_P44m_OoP_Client_SomeIpXf</srcid><srcstatus/><internalId>636</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.DisableEndToEndCheck.CS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.DisableEndToEndCheck.CS.Server</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf MCG shall generate the same API for server communication independently of what configuration
        parameter EndToEndTransformationComSpecProps.disableEndToEndCheck is configured to.
      </description>
      <comment>
        E2EXf.EB.DisableEndToEndCheck.CS applied to server side.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_56_P44m_InP_Server_SomeIpXf</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_57_P44m_OoP_Server_SomeIpXf</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.DisableEndToEndCheck.CS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_CSTransactionHandleType</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        File E2EXf_Bswmd.arxml shall define the following ImplementationDataType:
          Name:  E2EXf_CSTransactionHandleType
          Category:  STRUCTURE
          With Sub-Elements e2eCounter and e2eSourceId of Category TYPE_REFERENCE that
          shall reference the uint32 base type.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.Properties</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Each profile (e.g. E2EP01) and the state machine (E2ESM) shall be able to relay its relevant
        configuration parameters via .properties files to E2EXf MCG. Namespace shall start in the
        following way: E2E&lt; PROFILE_NAME | SM &gt;. Where 'PROFILE_NAME' represents the long name of an E2E profile,
        e.g. PROFILE_02.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.Properties.Check.Integer</srcid><srcstatus/><internalId>277</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.Properties.Check.Integer</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        E2EXf MCG shall be able to perform boundary checks for system model configuration parameter of Integer type.
        The MIN and MAX values shall be defined in .properties files.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>eb.tresos.e2exf.test.generator.input.properties.E2EPropertiesRetrieverTest.test07_ConfiguredMinAndMaxValuesShallBeReadFromPropertiesFile</srcid><srcstatus/><internalId>568</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.e2exf.test.generator.input.properties.E2EPropertiesRetrieverTest.test08_ExpectedDefaultValuesForMinAndMaxBoundary</srcid><srcstatus/><internalId>569</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.e2exf.test.generator.intermediate.profileconfig.SystemDescriptionParameterReaderTest.test03_AnErrorShallBeReportedIfValueOfParameterExceededsMaxBoundary</srcid><srcstatus/><internalId>575</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.e2exf.test.generator.intermediate.profileconfig.SystemDescriptionParameterReaderTest.test04_AnErrorShallBeReportedIfValueOfParameterIsBelowMinBoundary</srcid><srcstatus/><internalId>576</internalId></linkedfrom><linkedfrom><srcid>eb.tresos.e2exf.test.generator.intermediate.profileconfig.SystemDescriptionParameterReaderTest.test05_ADefaultValueShallBeReturnedIfParameterValueIsOutOfBounds</srcid><srcstatus/><internalId>577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Properties</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>276</internalId></provcov>
        <provcov>
          <linksto>E2EXf.constr_3158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>E2EXf.constr_3195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>E2EXf.constr_3159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>E2EXf.constr_3196</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>E2EXf.constr_3197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
        <provcov>
          <linksto>E2EXf.constr_3316</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.SWS_E2EXf_00032.TriggerCommunication</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The function E2EXf_&lt;transformerId&gt; specified in
        [SWS_E2EXf_00032] shall exist for the first referenced TransformationTechnology
        in the ordered transformerChain of a DataTransformation if the
        DataTransformation is referenced by an ISignal in the role dataTransformation
        where the ISignal references a SystemSignal which is referenced by a
        TriggerToSignalMapping.(SRS_Xfrm_00002)
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_60_P05_InP_ET</srcid><srcstatus/><internalId>643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.SWS_E2EXf_00034.TriggerCommunication</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The function E2EXf_Inv_&lt;transformerId&gt; specified
        in [SWS_E2EXf_00034] shall exist for the first referenced Transformation-
        Technology in the ordered transformerChain of a DataTransformation if the
        DataTransformation is referenced by an ISignal in the role dataTransformation
        where the ISignal references a SystemSignal which is referenced by a
        TriggerToSignalMapping.(SRS_Xfrm_00002)
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_60_P05_InP_INV_ET</srcid><srcstatus/><internalId>644</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.disableEndToEndStateMachine</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf MCG shall generate the configured value of system model configuration parameter
        EndToEndTransformationComSpecProps.disableEndToEndStateMachine as the fourth member of E2E_PXXConfig type.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.disableEndToEndStateMachine.TRUE.SR</srcid><srcstatus/><internalId>281</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.disableEndToEndStateMachine.TRUE.CS.Client</srcid><srcstatus/><internalId>282</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.disableEndToEndStateMachine.TRUE.CS.Server</srcid><srcstatus/><internalId>283</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.disableEndToEndStateMachine.FALSE.SR</srcid><srcstatus/><internalId>284</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.disableEndToEndStateMachine.FALSE.CS.Client</srcid><srcstatus/><internalId>285</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.disableEndToEndStateMachine.FALSE.CS.Server</srcid><srcstatus/><internalId>286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.EndToEndTransformationComSpecProps</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.disableEndToEndStateMachine.TRUE.SR</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf MCG shall generate the fourth member of E2E_PXXConfig type for a transformer that is used
        in sender/recevier type of communication with the value 'TRUE' if one of the following conditions is fulfilled:
        - If transformer is a deserializing transformer (Rx side) and the value of system model configuration parameter
            EndToEndTransformationComSpecProps.disableEndToEndStateMachine is set to 'TRUE' or
        - If transformer is a deserializing transformer (Rx side) and the value of system model configuration parameter
            EndToEndTransformationComSpecProps.disableEndToEndCheck is set to 'TRUE'.
      </description>
      <comment>
        Refined requirement to distinguish between sender/receiver and client/server communication.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_04_P04_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_14_P02_InP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_58_P05_InP_SomeIpXf_disableEndToEndCheck_NO_CHECK</srcid><srcstatus/><internalId>639</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_59_P02_InP_ComXf_disableEndToEndCheck_NO_CHECK</srcid><srcstatus/><internalId>641</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
        <provcov>
          <linksto>E2EXf.TPS_SWCT_01812</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.disableEndToEndStateMachine.TRUE.CS.Client</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf MCG shall generate the fourth member of E2E_PXXConfig type for a transformer that is used
        in client/server type of communication on the client side with the value 'TRUE' if transformer
        is a deserializing transformer (Rx side) and the value of system model configuration parameter
        EndToEndTransformationComSpecProps.disableEndToEndStateMachine is set to 'TRUE'.
      </description>
      <comment>
        Refined requirement to distinguish between sender/receiver and client/server communication.

        In the current implementation even if parameter disableEndToEndCheck is set to 'TRUE'
        for a deserializing transformer on the client side its API is generated with enabled
        end-to-end check.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_54_P44m_InP_Client_SomeIpXf</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_55_P44m_OoP_Client_SomeIpXf</srcid><srcstatus/><internalId>636</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.disableEndToEndStateMachine.TRUE.CS.Server</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf MCG shall generate the fourth member of E2E_PXXConfig type for a transformer that is used
        in client/server type of communication on the server side with the value 'TRUE' if transformer
        is a deserializing transformer (Rx side) and the value of system model configuration parameter
        EndToEndTransformationComSpecProps.disableEndToEndStateMachine is set to 'TRUE'.
      </description>
      <comment>
        Refined requirement to distinguish between sender/receiver and client/server communication.

        In the current implementation even if parameter disableEndToEndCheck is set to 'TRUE'
        for a deserializing transformer on the server side its API is generated with enabled
        end-to-end check.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_56_P44m_InP_Server_SomeIpXf</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_57_P44m_OoP_Server_SomeIpXf</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.disableEndToEndStateMachine.FALSE.SR</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf MCG shall generate the fourth member of E2E_PXXConfig type with the value 'FALSE' for a
        transformer that is used in sender/receiver type of communication under the following
        circumstances:
          - If transformer is a serializing transformer (Tx side) or
          - If transformer is a deserializing transformer (Rx side) and the value of system model configuration parameter
              EndToEndTransformationComSpecProps.disableEndToEndCheck is set to 'FALSE' and
              system model configuration parameter EndToEndTransformationComSpecProps.disableEndToEndStateMachine
              is not configured or set to 'FALSE'.
      </description>
      <comment>
        Refined requirement to distinguish between sender/receiver and client/server communication.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_04_P04_OoP_SomeIpXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>585</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_14_P02_InP_ComXf_MRec_ComSpecProps</srcid><srcstatus/><internalId>595</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.disableEndToEndStateMachine.FALSE.CS.Client</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf MCG shall generate the fourth member of E2E_PXXConfig type with the value 'FALSE' for a
        transformer that is used in client/server type of communication on the client side
        under the following circumstances:
          - If transformer is a serializing transformer (Tx side) or
          - If transformer is a deserializing transformer (Rx side) and the value of system model configuration parameter
              EndToEndTransformationComSpecProps.disableEndToEndStateMachine is not configured or set to 'FALSE'.
      </description>
      <comment>
        Refined requirement to distinguish between sender/receiver and client/server communication.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_54_P44m_InP_Client_SomeIpXf</srcid><srcstatus/><internalId>635</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_55_P44m_OoP_Client_SomeIpXf</srcid><srcstatus/><internalId>636</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.disableEndToEndStateMachine.FALSE.CS.Server</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf MCG shall generate the fourth member of E2E_PXXConfig type with the value 'FALSE' for a
        deserializing transformer that is used in client/server type of communication on the server side
        under the following circumstances:
          - If transformer is a serializing transformer (Tx side) or
          - If transformer is a deserializing transformer (Rx side) and the value of system model configuration parameter
              EndToEndTransformationComSpecProps.disableEndToEndStateMachine is not configured or set to 'FALSE'.
      </description>
      <comment>
        Refined requirement to distinguish between sender/receiver and client/server communication.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_56_P44m_InP_Server_SomeIpXf</srcid><srcstatus/><internalId>637</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXf_ComTest_57_P44m_OoP_Server_SomeIpXf</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">
    <!--
        Basically checks that are implemented shall have a requirement and be tested.

        Requirements which do not originate directly from the SWS (e.g. source: EB) shall have the ID
        structured in the following way:
        <Module>.<source>.<Module>_<Location>_<Type>_<Code>

        Module Name: E2EXf
        Source: source for the required check: EB | ASR430 | ASR421 | ASR22-11 | ...
        Location: XDM | MCG
        Type: W | E (W for warning, E for error)
        Code: 5 digit number, same code as is used in the operation_status-....txt resource file
    -->

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_W_00001</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
              The E2EXf MCG shall issue a warning if the maximum value
              of WindowSizeValid parameters used by transformers exceeds the maximum
              allowed value of E2ESM_MAX_WINDOW_SIZE_VALID macro.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03001_MAX_WINDOW_SIZE_VALID_ABOVE_MAXIMUM</srcid><srcstatus/><internalId>676</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.CalculateMaxWindowSize.MaxValue</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_W_00002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue a warning if the attributes protocol
              version or transformerClass of the TransformationTechnology
              are configured incorrectly.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_W_00002.1</srcid><srcstatus/><internalId>289</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_W_00002.2</srcid><srcstatus/><internalId>290</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_W_00002.3</srcid><srcstatus/><internalId>291</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_W_00002.4</srcid><srcstatus/><internalId>292</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_W_00002.5</srcid><srcstatus/><internalId>293</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_W_00002.6</srcid><srcstatus/><internalId>294</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_W_00002.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue a warning if the configured value of
              attribute protocol of the TransformationTechnology differs
              from 'E2E'.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_02001_WrongProtocol</srcid><srcstatus/><internalId>672</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_W_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_W_00002.2</id>
      <status>rejected</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue a warning if the attribute protocol
              of the TransformationTechnology is missing.
      </description>
      <comment>
        This requirement is informational only. The validity of the non-optional parameter
        is checked by tresos Studio API during its getter invocation (i.e. getValidProtocol()).
      </comment>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_W_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_W_00002.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue a warning if the configured value of
              attribute version of the TransformationTechnology differs
              from '1.0.0'.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_02002_WrongVersion</srcid><srcstatus/><internalId>673</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_W_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_W_00002.4</id>
      <status>rejected</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue a warning if the attribute version
              of the TransformationTechnology is missing.
      </description>
      <comment>
        This requirement is informational only. The validity of the non-optional parameter
        is checked by tresos Studio API during its getter invocation (i.e. getValidVersion()).
      </comment>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_W_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_W_00002.5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue a warning if the configured value of
              attribute transformerClass of the TransformationTechnology differs
              from 'SAFETY'.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_02003_WrongTransformerClass</srcid><srcstatus/><internalId>674</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_W_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_W_00002.6</id>
      <status>rejected</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue a warning if the attribute
              transformerClass of the TransformationTechnology is missing.
      </description>
      <comment>
        This requirement is informational only. The validity of the non-optional parameter
        is checked by tresos Studio API during its getter invocation (i.e. getValidTransformerClass()).
      </comment>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_W_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.Xfrm_MCG_E_00018</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if TransformationTechnology
              referenced by the XfrmTransformationTechnologyRef parameter does
              not exist in the system model.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_02004_MissingTransformationTechnology</srcid><srcstatus/><internalId>675</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00161</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.Xfrm_MCG_E_00005</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if Bswm referenced by
              the BswModuleEntryRef parameter does not exist in the system
              model.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03028_INVALID_BSWM_REF</srcid><srcstatus/><internalId>703</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the number of Transformers
              of transformer class 'SERIALIZER' in the transformer chain is
              not equal to one.
      </description>
      <comment>
              Exactly one of the referenced TransformationTechnology in
              the DataTransformation shall have the TransformerClass set
              to 'SERIALIZER'.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03002_TOO_MANY_SERIALIZERS_IN_TRANSFORMER_CHAIN</srcid><srcstatus/><internalId>677</internalId></linkedfrom><linkedfrom><srcid>TS_E2EXF_GEN_03003_INSUFFICIENT_SERIALIZERS_IN_TRANSFORMER_CHAIN</srcid><srcstatus/><internalId>678</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.TransformerChain.SingleSerializer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the protected ISignal
              respectively ISignalGroup references a DataTransformation which
              does not contain the same TransformationTechnology in the
              transformer chain which is configured for the XfrmTransformationTechnologyRef
              in the XfrmImplementationMapping.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03004_MISSING_TRANSFORMATION_TECHNOLOGY_IN_TRANSFORMER_CHAIN</srcid><srcstatus/><internalId>679</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.top.014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00005</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the value of the
              EndToEndTransformationDescription.upperHeaderBitsToShift attribute
              is not configured in correspondence with the used protocol of the
              serializing transformer in the transformer chain:
                - If 'COMBased' protocol is configured: 0 (no bits are shifted)
                - If 'SOMEIP' protocol is configured: 64 (to support the header shift of SOME/IP)
                - If any other protocol is configured: no restrictions.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00005.1</srcid><srcstatus/><internalId>300</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00005.2</srcid><srcstatus/><internalId>301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.constr_3155</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00005.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the value of the
              EndToEndTransformationDescription.upperHeaderBitsToShift
              attribute is not equal to '0' in case when the serializing
              transformer with protocol 'COMBased' is configured in the
              transformer chain.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03005_INVALID_UPPER_HEADER_BITS_TO_SHIFT_COMXF</srcid><srcstatus/><internalId>680</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00005.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the value of the
              EndToEndTransformationDescription.upperHeaderBitsToShift
              attribute is not equal to '64' in case when the serializing
              transformer with protocol 'SOMEIP' is configured in the
              transformer chain.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03006_INVALID_UPPER_HEADER_BITS_TO_SHIFT_SOMEIPXF</srcid><srcstatus/><internalId>681</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00006.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the COM Based transformer
              is configured as a serializing transformer in the transformer chain
              and BufferProperties.headerLength parameter is set to a different
              value than '0' bits.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03007_INVALID_HEADER_LENGTH_COMXF</srcid><srcstatus/><internalId>682</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.constr_3152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00006.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the SOME/IP transformer
              is configured as a serializing transformer in the transformer chain
              and the value of EndToEndTransformationDescription.profileName
              attribute is set to 'PROFILE_01' and BufferProperties.headerLength
              is configured to a different value than '16' bits.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03008_INVALID_HEADER_LENGTH_SOMEIPXF_P01</srcid><srcstatus/><internalId>683</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.constr_3151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00006.3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the SOME/IP transformer
              is configured as a serializing transformer in the transformer chain
              and the value of EndToEndTransformationDescription.profileName
              attribute is set to 'PROFILE_02' and BufferProperties.headerLength
              is configured to a different value than '16' bits.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03009_INVALID_HEADER_LENGTH_SOMEIPXF_P02</srcid><srcstatus/><internalId>684</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.constr_3151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00006.4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the SOME/IP transformer
              is configured as a serializing transformer in the transformer chain
              and the value of EndToEndTransformationDescription.profileName
              attribute is set to 'PROFILE_04' and BufferProperties.headerLength
              is configured to a different value than '96' bits.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03010_INVALID_HEADER_LENGTH_SOMEIPXF_P04</srcid><srcstatus/><internalId>685</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.constr_3151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00006.5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the SOME/IP transformer
              is configured as a serializing transformer in the transformer chain
              and the value of EndToEndTransformationDescription.profileName
              attribute is set to 'PROFILE_05' and BufferProperties.headerLength
              is configured to a different value than '24' bits.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03011_INVALID_HEADER_LENGTH_SOMEIPXF_P05</srcid><srcstatus/><internalId>686</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.constr_3151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00006.6</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the SOME/IP transformer
              is configured as a serializing transformer in the transformer chain
              and the value of EndToEndTransformationDescription.profileName
              attribute is set to 'PROFILE_06' and BufferProperties.headerLength
              is configured to a different value than '40' bits.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03012_INVALID_HEADER_LENGTH_SOMEIPXF_P06</srcid><srcstatus/><internalId>687</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.constr_3151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00006.7</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the SOME/IP transformer
              is configured as a serializing transformer in the transformer chain
              and the value of EndToEndTransformationDescription.profileName
              attribute is set to 'PROFILE_07' and BufferProperties.headerLength
              is configured to a different value than '160' bits.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03013_INVALID_HEADER_LENGTH_SOMEIPXF_P07</srcid><srcstatus/><internalId>688</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.constr_3151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00006.10</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the SOME/IP transformer
              is configured as a serializing transformer in the transformer chain
              and the value of EndToEndTransformationDescription.profileName
              attribute is set to 'PROFILE_11' and BufferProperties.headerLength
              is configured to a different value than '16' bits.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03014_INVALID_HEADER_LENGTH_SOMEIPXF_P11</srcid><srcstatus/><internalId>689</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.constr_3151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00006.8</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the SOME/IP transformer
              is configured as a serializing transformer in the transformer chain
              and the value of EndToEndTransformationDescription.profileName
              attribute is set to 'PROFILE_JLR' and BufferProperties.headerLength
              is configured to a different value than '16' bits.
      </description>
      <comment>
              Since the JLR profile is similar to P11 profile the check shall be
              identical.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03015_INVALID_HEADER_LENGTH_SOMEIPXF_PJLR</srcid><srcstatus/><internalId>690</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.constr_3151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00006.9</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the SOME/IP transformer
              is configured as a serializing transformer in the transformer chain
              and the value of EndToEndTransformationDescription.profileName
              attribute is set to 'PROFILE_PRN' and BufferProperties.headerLength
              is configured to a different value than '16' bits.
      </description>
      <comment>
              Since the PRN profile is similar to P01 profile the check shall be
              identical.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03016_INVALID_HEADER_LENGTH_SOMEIPXF_PRN</srcid><srcstatus/><internalId>691</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.constr_3151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00008</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the value of
              headerLength parameter in bits is not a multiple of 8.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03017_HEADER_LENGTH_MULTIPLE_OF_EIGHT</srcid><srcstatus/><internalId>692</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.constr_3364</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00009</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the value of
              upperHeaderBitsToShift parameter in bits is not a multiple of 8.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03018_UPPER_HEADER_BITS_TO_SHIFT_MULTIPLE_OF_EIGHT</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.UpperHeaderBitsToShift.MultipleOfEight</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00010</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the following conditions are fulfilled:
                -  Profile in use by the transformer that is configured in EndToEndTransformationDescription.ProfileName
                   has property 'DataID' in file AdjacentLayer.properties set to type 'integer' AND
                -  no value is configured in EndToEndTransformationISignalProps.DataIds.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03019_MISSING_DATA_ID_P01</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <!-- PROFILE_01 -->
          <linksto>E2EXf.SWS_E2EXf_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <!-- PROFILE_04 -->
          <linksto>E2EXf.SWS_E2EXf_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <!-- PROFILE_05 -->
          <linksto>E2EXf.SWS_E2EXf_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <!-- PROFILE_06 -->
          <linksto>E2EXf.SWS_E2EXf_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <!-- PROFILE_07 -->
          <linksto>E2EXf.SWS_E2EXf_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <!-- PROFILE_11 -->
          <linksto>E2EXf.SWS_E2EXf_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <!-- PROFILE_JLR -->
          <linksto>E2EXf.EB.SWS_E2EXf_00162.PJLR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <!-- PROFILE_PRN -->
          <linksto>E2EXf.EB.SWS_E2EXf_00048.PRN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00011</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if the following conditions are fulfilled:
                -  Profile in use by the transformer that is configured in EndToEndTransformationDescription.ProfileName
                   has property 'DataID' in file AdjacentLayer.properties set to type 'integerlist' AND
                -  no value is configured in EndToEndTransformationISignalProps.DataIds.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03020_MISSING_DATA_ID_P02</srcid><srcstatus/><internalId>695</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <!-- PROFILE_02 -->
          <linksto>E2EXf.SWS_E2EXf_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00019</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if two XfrmImplementationMappings that transform ISignals
              of which their SystemSignal counter parts are part of the same ClientServerToSignalMapping
              in the role of CallSignalRef and ReturnSignalRef are assigned to different memory partitions
              via configuration parameter XfrmOsApplicationRef.
      </description>
      <comment>
              This check prevents C runtime error because deserializer accesses the state counter variable
              of the serializer.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03027_CS_TREANSFORMER_PAIR_ASSIGNED_TO_DIFFERENT_PARTITIONS</srcid><srcstatus/><internalId>702</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00020</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if two XfrmImplementationMappings that transform ISignals
              of which their SystemSignal counter parts are part of the same ClientServerToSignalMapping
              in the role of CallSignalRef and ReturnSignalRef have configured a different profileName in their
              EndToEndTransformationDescription.
      </description>
      <comment>
              Paired serializer and deserializer shall use the same E2E profile.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03029_MISMATCHING_PROFILE</srcid><srcstatus/><internalId>704</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00021</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if two XfrmImplementationMappings that transform ISignals
              of which their SystemSignal counter parts are part of the same ClientServerToSignalMapping
              in the role of CallSignalRef and ReturnSignalRef have configured a different sourceId in their
              EndToEndTransformationISignalProps.
      </description>
      <comment>
              Paired serializer and deserializer shall use the same sourceId.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03021_MISMATCHING_SOURCE_ID</srcid><srcstatus/><internalId>696</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_W_00022</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue a warning if system model configuration parameter disableEndToEndCheck
              is set to TRUE for an XfrmImplementationMapping that deserializes an ISignal used in client/server
              communication.
      </description>
      <comment>
              Refined requirement to distinguish client and server side communication.
      </comment>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_W_00022.1</srcid><srcstatus/><internalId>320</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_W_00022.2</srcid><srcstatus/><internalId>321</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.DisableEndToEndCheck.CS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_W_00022.1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue a warning if system model configuration parameter disableEndToEndCheck
              is set to TRUE for an XfrmImplementationMapping that deserializes an ISignal on the client side.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03022_DISABLED_END_TO_END_CHECK_CLIENT</srcid><srcstatus/><internalId>697</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_W_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_W_00022.2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue a warning if system model configuration parameter disableEndToEndCheck
              is set to TRUE for an XfrmImplementationMapping that deserializes an ISignal on the server side.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03023_DISABLED_END_TO_END_CHECK_SERVER</srcid><srcstatus/><internalId>698</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_W_00022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_W_00023</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue a warning if deserializing transformer is used in client/server
              communication on the client side and its maxDeltaCounter parameter is set to a different
              value than one.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03024_INVALID_MAX_DELTA_COUNTER_CLIENT</srcid><srcstatus/><internalId>699</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_W_00024</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue a warning if deserializing transformer is used in client/server
              communication on the server side and its maxDeltaCounter parameter is set to a different
              value than the maximum of the value range of the sequence counter.
      </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03025_INVALID_MAX_DELTA_COUNTER_SERVER</srcid><srcstatus/><internalId>700</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.PRS_E2E_CONSTR_06300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00025</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if two different ISignals that reference the same
              SystemSignal used in client/server communication are being transformed.
      </description>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>lim.E2EXf.CS.FanInOut</srcid><srcstatus/><internalId>541</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03030_CS_FAN_IN</srcid><srcstatus/><internalId>705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_E_00027</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue an error if two XfrmImplementationMappings transform the same ISignal
              of which their SystemSignal counter part is part of a ClientServerToSignalMapping in the role of
              CallSignalRef or ReturnSignalRef.
      </description>
      <comment>
              The paragraph under constraint SWS_Xfrm_CONSTR_09094 mentions that parameter XfrmVariableDataPrototypeInstanceRef
              is applicable only for sender/receiver communication.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03031_MULTIPLE_CS_TRANSFORMERS_MAP_TO_THE_SAME_ISIGNAL</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_MCG_W_00028</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
              The E2EXf MCG shall issue a warning if parameter disableEndToEndCheck is set to TRUE and 
              parameter disableEndToEndStateMachine is set to FALSE.
      </description>
      <comment>
              If E2E check is disabled then E2E state machine is implicitly disabled as well.
      </comment>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_03026_INVALID_DISABLE_END_TO_END_STATE_MACHINE_SIGNAL</srcid><srcstatus/><internalId>701</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.TPS_SWCT_01812</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_XDM_E_00001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If parameter XfrmCSTransactionHandleImplementationDataTypeRef is enabled and
        references anything else than ImplementationDataType E2EXf_CSTransactionHandleType
        then the E2EXf should report an error.
      </description>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf_Extension.xdm_80</srcid><srcstatus/><internalId>560</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_04003_InvalidCSTransactionHandleType</srcid><srcstatus/><internalId>709</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_XDM_E_00002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf should report an error if parameter XfrmCSTransactionHandleImplementationDataTypeRef is enabled and parameter
        XfrmTransformerClassExtractProtocolHeaderFields is disabled.
      </description>
      <comment>
        Consistency check. If XfrmImplementationMapping serializers/deserializes an ISignal that is associated
        with ClientServerToSignalMapping then both parameters XfrmCSTransactionHandleImplementationDataTypeRef
        and XfrmTransformerClassExtractProtocolHeaderFields should be enabled.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf_Extension.xdm_84</srcid><srcstatus/><internalId>561</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_04001_TransactionHandleTypeRef_Enabled_TransformerClassExtractProtocolHeaderFields_Disabled</srcid><srcstatus/><internalId>707</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_XDM_E_00003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf should report an error if parameter XfrmTransformerClassExtractProtocolHeaderFields is enabled and parameter
        XfrmCSTransactionHandleImplementationDataTypeRef is disabled.
      </description>
      <comment>
        Consistency check. If XfrmImplementationMapping serializers/deserializes an ISignal that is associated
        with ClientServerToSignalMapping then both parameters XfrmTransformerClassExtractProtocolHeaderFields
        and XfrmCSTransactionHandleImplementationDataTypeRef should be enabled.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf_Extension.xdm_65</srcid><srcstatus/><internalId>558</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_04002_TransformerClassExtractProtocolHeaderFields_Enabled_TransactionHandleTypeRef_Disabled</srcid><srcstatus/><internalId>708</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>

    <specobject>
      <id>E2EXf.EB.E2EXf_XDM_E_00004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf should report an error if parameter XfrmTransformerClassExtractProtocolHeaderFields is enabled and
        its value is not configured to SERIALIZER.
      </description>
      <comment>
        The description of parameter extractProtocolHeaderFields in SWS_E2EXf_00032 and SWS_E2EXf_00034 clearly states that
        its a pointer to the function that extracts relevant protocol header fields of the serializing transformer in
        the transformer chain.
      </comment>
      <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf_Extension.xdm_69</srcid><srcstatus/><internalId>559</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_GEN_04004_Invalid_XfrmTransformerClassExtractProtocolHeaderFields</srcid><srcstatus/><internalId>710</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">


    <specobject>
      <id>E2EXf.top.001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf module shall modularly structure static implementation files and data types.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00001</srcid><srcstatus/><internalId>5</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00002</srcid><srcstatus/><internalId>6</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00040</srcid><srcstatus/><internalId>7</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00003</srcid><srcstatus/><internalId>8</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00011</srcid><srcstatus/><internalId>14</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00047</srcid><srcstatus/><internalId>118</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00030</srcid><srcstatus/><internalId>119</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00026</srcid><srcstatus/><internalId>120</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00034</srcid><srcstatus/><internalId>184</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00060</srcid><srcstatus/><internalId>192</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00112</srcid><srcstatus/><internalId>195</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00113</srcid><srcstatus/><internalId>196</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00114</srcid><srcstatus/><internalId>197</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.MemPartitioning.FileName</srcid><srcstatus/><internalId>220</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.MemPartitioning.DefaultFileName</srcid><srcstatus/><internalId>221</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>

    <specobject>
      <id>E2EXf.top.002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf module shall check input parameter for validity.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00102</srcid><srcstatus/><internalId>43</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00106</srcid><srcstatus/><internalId>44</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00139</srcid><srcstatus/><internalId>50</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00140</srcid><srcstatus/><internalId>75</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00141</srcid><srcstatus/><internalId>77</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00114</srcid><srcstatus/><internalId>103</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00144</srcid><srcstatus/><internalId>108</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00145</srcid><srcstatus/><internalId>109</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00146</srcid><srcstatus/><internalId>110</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00149</srcid><srcstatus/><internalId>111</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00150</srcid><srcstatus/><internalId>112</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00151</srcid><srcstatus/><internalId>113</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00152</srcid><srcstatus/><internalId>114</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00153</srcid><srcstatus/><internalId>115</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00049</srcid><srcstatus/><internalId>134</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00108</srcid><srcstatus/><internalId>135</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00061</srcid><srcstatus/><internalId>181</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00070</srcid><srcstatus/><internalId>182</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00071</srcid><srcstatus/><internalId>183</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>

    <specobject>
      <id>E2EXf.top.003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf module shall provide a mechanism to read the version number.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00036</srcid><srcstatus/><internalId>125</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00057</srcid><srcstatus/><internalId>206</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>

    <specobject>
      <id>E2EXf.top.004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf module shall support in-place and out-of-place processing of data.
      </description>
      <comment>
        In-place means that one buffer is used by a transformer both as input and as output.
        In-place processing has a performance advantage (less copying, less buffers).
        Out-of-place means that there is one input buffer and a separate output buffer.
      </comment>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00180</srcid><srcstatus/><internalId>45</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00181</srcid><srcstatus/><internalId>54</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00182</srcid><srcstatus/><internalId>55</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00184</srcid><srcstatus/><internalId>57</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00185</srcid><srcstatus/><internalId>58</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00186</srcid><srcstatus/><internalId>59</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00188</srcid><srcstatus/><internalId>61</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00189</srcid><srcstatus/><internalId>62</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00192</srcid><srcstatus/><internalId>74</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00140</srcid><srcstatus/><internalId>75</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00123</srcid><srcstatus/><internalId>76</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00141</srcid><srcstatus/><internalId>77</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00124</srcid><srcstatus/><internalId>78</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00104</srcid><srcstatus/><internalId>80</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00193</srcid><srcstatus/><internalId>81</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00194</srcid><srcstatus/><internalId>82</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00196</srcid><srcstatus/><internalId>83</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00197</srcid><srcstatus/><internalId>84</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00198</srcid><srcstatus/><internalId>85</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00112</srcid><srcstatus/><internalId>100</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00113</srcid><srcstatus/><internalId>101</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00116</srcid><srcstatus/><internalId>102</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00032</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00034</srcid><srcstatus/><internalId>122</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00010</srcid><srcstatus/><internalId>139</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00011</srcid><srcstatus/><internalId>140</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00012</srcid><srcstatus/><internalId>141</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00051</srcid><srcstatus/><internalId>147</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>

    <specobject>
      <id>E2EXf.top.005</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf module shall protect and validate signals subject to End-to-End
        Protection using the Protect and Check interface of the End-to-End-Library.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.UC_E2EXf_00007</srcid><srcstatus/><internalId>3</internalId></linkedfrom><linkedfrom><srcid>E2EXf.UC_E2EXf_00008</srcid><srcstatus/><internalId>4</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00024</srcid><srcstatus/><internalId>35</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00020</srcid><srcstatus/><internalId>42</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00025</srcid><srcstatus/><internalId>71</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00148</srcid><srcstatus/><internalId>106</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00032</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00034</srcid><srcstatus/><internalId>122</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00002</srcid><srcstatus/><internalId>130</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00003</srcid><srcstatus/><internalId>131</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00005</srcid><srcstatus/><internalId>132</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00008</srcid><srcstatus/><internalId>133</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00009</srcid><srcstatus/><internalId>136</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00019</srcid><srcstatus/><internalId>142</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00020</srcid><srcstatus/><internalId>143</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00021</srcid><srcstatus/><internalId>144</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_91002</srcid><srcstatus/><internalId>194</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00040</srcid><srcstatus/><internalId>198</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00041</srcid><srcstatus/><internalId>199</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00047</srcid><srcstatus/><internalId>202</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00058</srcid><srcstatus/><internalId>204</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00059</srcid><srcstatus/><internalId>205</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.SWS_E2EXf_00148</srcid><srcstatus/><internalId>255</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>

    <specobject>
      <id>E2EXf.top.010</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf module shall identify signals subject to End-to-End protection
        on system level by means of the system configuration based upon
        the AUTOSAR meta model.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00161</srcid><srcstatus/><internalId>9</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00054</srcid><srcstatus/><internalId>137</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00062</srcid><srcstatus/><internalId>193</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00052</srcid><srcstatus/><internalId>200</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00056</srcid><srcstatus/><internalId>201</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00047</srcid><srcstatus/><internalId>202</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00053</srcid><srcstatus/><internalId>203</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.Xfrm_XDM_constr_09094</srcid><srcstatus/><internalId>228</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>

    <specobject>
      <id>E2EXf.top.011</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf module shall allow to parameterize module specific,
        ECU dependent configuration and store it in a defined XML format.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00156</srcid><srcstatus/><internalId>127</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00055</srcid><srcstatus/><internalId>138</internalId></linkedfrom><linkedfrom><srcid>E2EXf.ECUC_Xfrm_00013_Conf</srcid><srcstatus/><internalId>207</internalId></linkedfrom><linkedfrom><srcid>E2EXf.ECUC_Xfrm_00019_Conf</srcid><srcstatus/><internalId>208</internalId></linkedfrom><linkedfrom><srcid>E2EXf.ECUC_Xfrm_00016_Conf</srcid><srcstatus/><internalId>209</internalId></linkedfrom><linkedfrom><srcid>E2EXf.ECUC_Xfrm_00015_Conf</srcid><srcstatus/><internalId>210</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_CONSTR_09094</srcid><srcstatus/><internalId>211</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_CONSTR_09096</srcid><srcstatus/><internalId>212</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_CONSTR_09095</srcid><srcstatus/><internalId>213</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.DEV_ERROR_DETECT</srcid><srcstatus/><internalId>225</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.XFRMBUFFERLENGTHTYPE_ISUINT32</srcid><srcstatus/><internalId>227</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.Xfrm_XDM_E_00001</srcid><srcstatus/><internalId>229</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.Xfrm_XDM_E_00002</srcid><srcstatus/><internalId>230</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.Xfrm_XDM_E_00003</srcid><srcstatus/><internalId>231</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.Xfrm_XDM_E_00004</srcid><srcstatus/><internalId>232</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.Xfrm_XDM_E_00005</srcid><srcstatus/><internalId>233</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.Xfrm_XDM_E_00006</srcid><srcstatus/><internalId>234</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.Xfrm_XDM_E_00008</srcid><srcstatus/><internalId>236</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.Xfrm_XDM_E_00009</srcid><srcstatus/><internalId>237</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.transformerId</srcid><srcstatus/><internalId>252</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.Init_WaitForFirstData_Conf</srcid><srcstatus/><internalId>259</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>

    <specobject>
      <id>E2EXf.top.012</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf module shall implement error indication and error states
        to indicate malfunction to the RTE.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00133</srcid><srcstatus/><internalId>41</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00102</srcid><srcstatus/><internalId>43</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00106</srcid><srcstatus/><internalId>44</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00180</srcid><srcstatus/><internalId>45</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00139</srcid><srcstatus/><internalId>50</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00183</srcid><srcstatus/><internalId>56</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00208</srcid><srcstatus/><internalId>65</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00018</srcid><srcstatus/><internalId>70</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00105</srcid><srcstatus/><internalId>72</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00103</srcid><srcstatus/><internalId>73</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00192</srcid><srcstatus/><internalId>74</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00140</srcid><srcstatus/><internalId>75</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00141</srcid><srcstatus/><internalId>77</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00199</srcid><srcstatus/><internalId>86</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00027</srcid><srcstatus/><internalId>99</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00167</srcid><srcstatus/><internalId>104</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00175</srcid><srcstatus/><internalId>105</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00137</srcid><srcstatus/><internalId>107</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00144</srcid><srcstatus/><internalId>108</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00145</srcid><srcstatus/><internalId>109</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00146</srcid><srcstatus/><internalId>110</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00149</srcid><srcstatus/><internalId>111</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00150</srcid><srcstatus/><internalId>112</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00151</srcid><srcstatus/><internalId>113</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00152</srcid><srcstatus/><internalId>114</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00153</srcid><srcstatus/><internalId>115</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00122</srcid><srcstatus/><internalId>116</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00009</srcid><srcstatus/><internalId>117</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00026</srcid><srcstatus/><internalId>145</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00027</srcid><srcstatus/><internalId>146</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00028</srcid><srcstatus/><internalId>148</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00029</srcid><srcstatus/><internalId>149</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00030</srcid><srcstatus/><internalId>150</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00032</srcid><srcstatus/><internalId>151</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>

    <specobject>
      <id>E2EXf.top.013</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf module shall support memory partitions.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.MemPartitioning.XfrmOsApplicationRef</srcid><srcstatus/><internalId>214</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.MemPartitioning.UniquePartitionId</srcid><srcstatus/><internalId>215</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.MemPartitioning.DefaultPartitionId</srcid><srcstatus/><internalId>216</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.MemPartitioning.PartitionHoldingInitStatus</srcid><srcstatus/><internalId>217</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.MemPartitioning.InitByPartitionId</srcid><srcstatus/><internalId>218</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.MemPartitioning.DeInitByPartitionId</srcid><srcstatus/><internalId>219</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.MemPartitioning.FileName</srcid><srcstatus/><internalId>220</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.MemPartitioning.DefaultFileName</srcid><srcstatus/><internalId>221</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.MemPartitioning.MemorySectionByPartitionId</srcid><srcstatus/><internalId>222</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.MemPartitioning.RAMbyTransformerId</srcid><srcstatus/><internalId>224</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>

    <specobject>
      <id>E2EXf.top.014</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf module shall support configuration options on system level
        by means of the system configuration based upon the AUTOSAR meta model.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00134</srcid><srcstatus/><internalId>10</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00090</srcid><srcstatus/><internalId>12</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00089</srcid><srcstatus/><internalId>13</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00048</srcid><srcstatus/><internalId>17</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00118</srcid><srcstatus/><internalId>18</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00087</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00119</srcid><srcstatus/><internalId>20</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00120</srcid><srcstatus/><internalId>21</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00163</srcid><srcstatus/><internalId>22</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00177</srcid><srcstatus/><internalId>23</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00162</srcid><srcstatus/><internalId>24</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00164</srcid><srcstatus/><internalId>25</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00178</srcid><srcstatus/><internalId>26</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00179</srcid><srcstatus/><internalId>27</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00204</srcid><srcstatus/><internalId>28</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00205</srcid><srcstatus/><internalId>29</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00176</srcid><srcstatus/><internalId>30</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00088</srcid><srcstatus/><internalId>31</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00107</srcid><srcstatus/><internalId>66</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00190</srcid><srcstatus/><internalId>67</internalId></linkedfrom><linkedfrom><srcid>E2EXf.TPS_SWCT_01812</srcid><srcstatus/><internalId>240</internalId></linkedfrom><linkedfrom><srcid>E2EXf.constr_3152</srcid><srcstatus/><internalId>242</internalId></linkedfrom><linkedfrom><srcid>E2EXf.constr_3155</srcid><srcstatus/><internalId>243</internalId></linkedfrom><linkedfrom><srcid>E2EXf.constr_3364</srcid><srcstatus/><internalId>250</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.EndToEndTransformationComSpecProps</srcid><srcstatus/><internalId>263</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.UpperHeaderBitsToShift.MultipleOfEight</srcid><srcstatus/><internalId>269</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.SWS_E2EXf_00048.PRN</srcid><srcstatus/><internalId>270</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.SWS_E2EXf_00162.PJLR</srcid><srcstatus/><internalId>271</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.E2EXf_MCG_E_00004</srcid><srcstatus/><internalId>298</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>

    <specobject>
      <id>E2EXf.top.015</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf module shall maintain static (configuration) and dynamic (status)
        data and pass the data to the End-To-End-Library interface to allow a
        stateless implementation of the End-To-End-Library.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00125</srcid><srcstatus/><internalId>15</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00126</srcid><srcstatus/><internalId>16</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00048</srcid><srcstatus/><internalId>17</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00118</srcid><srcstatus/><internalId>18</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00087</srcid><srcstatus/><internalId>19</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00119</srcid><srcstatus/><internalId>20</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00120</srcid><srcstatus/><internalId>21</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00163</srcid><srcstatus/><internalId>22</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00177</srcid><srcstatus/><internalId>23</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00162</srcid><srcstatus/><internalId>24</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00164</srcid><srcstatus/><internalId>25</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00178</srcid><srcstatus/><internalId>26</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00179</srcid><srcstatus/><internalId>27</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00204</srcid><srcstatus/><internalId>28</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00205</srcid><srcstatus/><internalId>29</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00176</srcid><srcstatus/><internalId>30</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00088</srcid><srcstatus/><internalId>31</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00096</srcid><srcstatus/><internalId>32</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00097</srcid><srcstatus/><internalId>33</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00023</srcid><srcstatus/><internalId>34</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00024</srcid><srcstatus/><internalId>35</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00021</srcid><srcstatus/><internalId>36</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00139</srcid><srcstatus/><internalId>50</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00107</srcid><srcstatus/><internalId>66</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00190</srcid><srcstatus/><internalId>67</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00168</srcid><srcstatus/><internalId>68</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00191</srcid><srcstatus/><internalId>69</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00140</srcid><srcstatus/><internalId>75</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00123</srcid><srcstatus/><internalId>76</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00141</srcid><srcstatus/><internalId>77</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00124</srcid><srcstatus/><internalId>78</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00142</srcid><srcstatus/><internalId>79</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00104</srcid><srcstatus/><internalId>80</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00200</srcid><srcstatus/><internalId>87</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00201</srcid><srcstatus/><internalId>88</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00202</srcid><srcstatus/><internalId>89</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00203</srcid><srcstatus/><internalId>90</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00029</srcid><srcstatus/><internalId>96</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00028</srcid><srcstatus/><internalId>97</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00001</srcid><srcstatus/><internalId>129</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_00009</srcid><srcstatus/><internalId>136</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.SWS_E2EXf_00048.PRN</srcid><srcstatus/><internalId>270</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.SWS_E2EXf_00162.PJLR</srcid><srcstatus/><internalId>271</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>

    <specobject>
      <id>E2EXf.top.016</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf module shall support customization of End-to-End protections via
        profiles.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00126</srcid><srcstatus/><internalId>16</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00139</srcid><srcstatus/><internalId>50</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00155</srcid><srcstatus/><internalId>51</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00107</srcid><srcstatus/><internalId>66</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00190</srcid><srcstatus/><internalId>67</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00168</srcid><srcstatus/><internalId>68</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00191</srcid><srcstatus/><internalId>69</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00018</srcid><srcstatus/><internalId>70</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00140</srcid><srcstatus/><internalId>75</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00123</srcid><srcstatus/><internalId>76</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00141</srcid><srcstatus/><internalId>77</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00124</srcid><srcstatus/><internalId>78</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00142</srcid><srcstatus/><internalId>79</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00104</srcid><srcstatus/><internalId>80</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00029</srcid><srcstatus/><internalId>96</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00028</srcid><srcstatus/><internalId>97</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00169</srcid><srcstatus/><internalId>98</internalId></linkedfrom><linkedfrom><srcid>E2EXf.constr_3151</srcid><srcstatus/><internalId>241</internalId></linkedfrom><linkedfrom><srcid>E2EXf.constr_3158</srcid><srcstatus/><internalId>244</internalId></linkedfrom><linkedfrom><srcid>E2EXf.constr_3195</srcid><srcstatus/><internalId>245</internalId></linkedfrom><linkedfrom><srcid>E2EXf.constr_3159</srcid><srcstatus/><internalId>246</internalId></linkedfrom><linkedfrom><srcid>E2EXf.constr_3196</srcid><srcstatus/><internalId>247</internalId></linkedfrom><linkedfrom><srcid>E2EXf.constr_3197</srcid><srcstatus/><internalId>248</internalId></linkedfrom><linkedfrom><srcid>E2EXf.constr_3316</srcid><srcstatus/><internalId>249</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>

    <specobject>
      <id>E2EXf.top.017</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf module shall provide a MCG to generate configuration dependent
        code parts using the defined XML format as input.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.Xfrm_XDM_E_00007</srcid><srcstatus/><internalId>235</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.Xfrm_XDM_E_00010</srcid><srcstatus/><internalId>238</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.Xfrm_XDM_E_00011</srcid><srcstatus/><internalId>239</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.MCG.UnitTests</srcid><srcstatus/><internalId>251</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.Properties</srcid><srcstatus/><internalId>276</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>

    <specobject>
      <id>E2EXf.top.018</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf module shall support client-server communication.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00020</srcid><srcstatus/><internalId>42</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00180</srcid><srcstatus/><internalId>45</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00170</srcid><srcstatus/><internalId>52</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00171</srcid><srcstatus/><internalId>53</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00181</srcid><srcstatus/><internalId>54</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00182</srcid><srcstatus/><internalId>55</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00183</srcid><srcstatus/><internalId>56</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00184</srcid><srcstatus/><internalId>57</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00185</srcid><srcstatus/><internalId>58</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00186</srcid><srcstatus/><internalId>59</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00187</srcid><srcstatus/><internalId>60</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00188</srcid><srcstatus/><internalId>61</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00189</srcid><srcstatus/><internalId>62</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00165</srcid><srcstatus/><internalId>63</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00166</srcid><srcstatus/><internalId>64</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00190</srcid><srcstatus/><internalId>67</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00168</srcid><srcstatus/><internalId>68</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00191</srcid><srcstatus/><internalId>69</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00025</srcid><srcstatus/><internalId>71</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00192</srcid><srcstatus/><internalId>74</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00193</srcid><srcstatus/><internalId>81</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00194</srcid><srcstatus/><internalId>82</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00196</srcid><srcstatus/><internalId>83</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00197</srcid><srcstatus/><internalId>84</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00198</srcid><srcstatus/><internalId>85</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00199</srcid><srcstatus/><internalId>86</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00200</srcid><srcstatus/><internalId>87</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00201</srcid><srcstatus/><internalId>88</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00202</srcid><srcstatus/><internalId>89</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00203</srcid><srcstatus/><internalId>90</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00172</srcid><srcstatus/><internalId>91</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00173</srcid><srcstatus/><internalId>92</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00206</srcid><srcstatus/><internalId>93</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00207</srcid><srcstatus/><internalId>94</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00174</srcid><srcstatus/><internalId>95</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00167</srcid><srcstatus/><internalId>104</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00175</srcid><srcstatus/><internalId>105</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00026</srcid><srcstatus/><internalId>120</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00032</srcid><srcstatus/><internalId>121</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_E2EXf_00034</srcid><srcstatus/><internalId>122</internalId></linkedfrom><linkedfrom><srcid>E2EXf.PRS_E2E_CONSTR_06300</srcid><srcstatus/><internalId>128</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.DisableEndToEndCheck.CS</srcid><srcstatus/><internalId>272</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>

    <specobject>
      <id>E2EXf.top.019</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The E2EXf module shall support Trigger communication.
      </description>
      <needscoverage>
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.EB.SWS_E2EXf_00032.TriggerCommunication</srcid><srcstatus/><internalId>278</internalId></linkedfrom><linkedfrom><srcid>E2EXf.EB.SWS_E2EXf_00034.TriggerCommunication</srcid><srcstatus/><internalId>279</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

    <!--
        duplicated placeholder from AUTOSAR_SWS_TransformerGeneral.reqm
        and AUTOSAR_SWS_E2ETransformer.reqm
    -->

      <specobject>
         <id>E2E.SWS_E2EXf_00154</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If configuration option EndToEndTransformationComSpecProps.disableEndToEndCheck is set
            for a given &lt;transformerId&gt;, then E2E Transformer shall skip the invocation
            of the E2E Library - it shall only perform buffer processing (e.g. copying from inputBuffer
            to buffer).(RS_E2E_08538)
         </description>
         <comment>
            This requirement duplicates a requirement from the E2EXf module.
            In order to make the requirement tracing for E2EXf independent from the
            profiles a duplicate of the original requirement which can be linked from
            E2EXf and the profiles is necessary.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00154.NoPxx</srcid><srcstatus/><internalId>348</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00154</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>11</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00030</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            E2EXf_ConfigType
            Name:  E2EXf_ConfigType
            Type:  Structure
            Element:  void  implementation-specific
            Description:  Parent container for the configuration of E2E Transformer. The content is
            implementation-specific.
            (RS_E2E_08538)
         </description>
         <comment>
            This requirement duplicates a requirement from the E2EXf module.
            In order to make the requirement tracing for E2EXf independent from the
            profiles a duplicate of the original requirement which can be linked from
            E2EXf and the profiles is necessary.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00030.NoPxx</srcid><srcstatus/><internalId>349</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00030</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>119</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

      <specobject>
         <id>E2E.SWS_E2EXf_00154.NoPxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00154</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00030.NoPxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00030</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

      <specobject>
         <id>E2E.SWS_E2EXf_00102</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            In-place E2EXf_&lt;transformerId&gt; shall perform the following
            two precondition checks, without continuing further processing:
             1.  (buffer == NULL)
                 ||
                 (buffer != NULL &amp;&amp; inputBufferLength &lt;
                  EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  bufferLength == NULL.
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(buffer == NULL &amp;&amp; inputBufferLength != 0)' to '(buffer == NULL)'
            in point 1, see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00102.Pxx</srcid><srcstatus/><internalId>424</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00102</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>43</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00106</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            Out-of-place E2EXf_&lt;transformerId&gt; shall perform the
            following three precondition checks, without continuing further processing:
             1.  (inputBuffer == NULL)
                 ||
                 (inputBuffer != NULL &amp;&amp; inputBufferLength &lt;
                 EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  bufferLength == NULL
             3.  buffer == NULL
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer == NULL &amp;&amp; inputBufferLength != 0)' to '(inputBuffer == NULL)'
            in point 1, see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00106.Pxx</srcid><srcstatus/><internalId>425</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00106</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>44</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00108</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0),
            in-place E2EXf_&lt;transformerId&gt; shall copy the amount upper HeaderBitsToShiftbits,
            in parameter buffer, with starting offset of BufferProperties.headerLength,
            in direction left by "distance" of BufferProperties.headerLength.(RS_E2E_08538)
         </description>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
            Incorporated Bugzilla RfC 75163:
            Rewrite '(buffer != NULL &amp;&amp; EndToEndTransformationDescription.upperHeaderBitsToShift
            &gt; 0)' to '(EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00108.Pxx</srcid><srcstatus/><internalId>426</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00108</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>46</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00109</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0), out-of-place
            E2EXf_&lt;transformerId&gt; shall copy the first upperHeaderBitsToShift bits from
            inputBuffer to buffer, and then copy the remaining part of inputBuffer (i.e. starting with
            offset upperHeaderBitsToShift) to parameter buffer starting with the destination offset
            of (upperHeaderBitsToShift+ BufferProperties.headerLength). (RS_E2E_08538)
         </description>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)' to
            '(EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00109.Pxx</srcid><srcstatus/><internalId>427</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00109</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>47</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00115</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), out-of-place
            E2EXf_&lt;transformerId&gt; shall copy inputBuffer to buffer starting with the
            destination offset of BufferProperties.headerLength. (RS_E2E_08538)
         </description>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift == 0)' to
            '(EndToEndTransformationDescription.upperHeaderBitsToShift == 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00115.Pxx</srcid><srcstatus/><internalId>428</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00115</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>48</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00111</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            E2EXf_&lt;transformerId&gt; shall set
            *bufferLength = inputBufferLength + BufferProperties.headerLength/8.
            (RS_E2E_08538)
         </description>
         <comment>
            Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
            BufferProperties.headerLength'.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00111.Pxx</srcid><srcstatus/><internalId>429</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00111</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>49</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00139</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02, the function E2EXf_&lt;transformerId&gt; shall perform a check of
            the *bufferLength (after the computation of *bufferLength):
            If (*bufferLength != config-&gt;DataLength/8), then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR, i.e. without calling an E2E Library function.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00139.Pxx</srcid><srcstatus/><internalId>430</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00139</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>50</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00107</id>
         <status>approved</status> <!-- draft in R22-11 -->
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            If DataTransformationStatusForwarding is set to no TransformerStatusForwarding and PXX
            is P01, P02, P04, P05, P06, P07, P08, P11, P22 or P44,
            The function E2EXf_&lt;transformerId&gt;() shall invoke
            E2E_PXXProtect(), passing to that function the appropriate Config and State
            structures (see [SWS_E2EXf_00125] and [SWS_E2EXf_00126]) that are associated
            with &lt;transformerId&gt;, as well as buffer and bufferLength
            (only for P04, P05, P06, P07, P08 ,P11 ,P22 and P44) that were updated in above
            requirements SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.
            (RS_E2E_08538)
         </description>
         <comment>
            ForwardStatus feature added in R22-11.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00107.Pxx</srcid><srcstatus/><internalId>431</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00107</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>66</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00018</id>
         <status>approved</status> <!-- draft in R22-11 -->
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            In case E2E_PXXProtect() and E2E_PXXForward() returns E2E_E_OK, then E2EXf_&lt;transformerId&gt; shall
            return E_OK, otherwise E2EXf_&lt;transformerId&gt; shall return
            E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <comment>
            ForwardStatus feature added in R22-11.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00018.Pxx</srcid><srcstatus/><internalId>432</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00018</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>70</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00105</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            In-place E2EXf_Inv_&lt;transformerId&gt; shall perform the
            following two precondition checks, without continuing further processing:
             1.  (buffer == NULL &amp;&amp; inputBufferLength != 0)
                 ||
                 (buffer != NULL &amp;&amp; inputBufferLength &lt; BufferProperties.headerLength/8u +
                 EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  bufferLength == NULL.
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00105.Pxx</srcid><srcstatus/><internalId>433</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00105</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>72</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00103</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            Out-of-place E2EXf_Inv_&lt;transformerId&gt; shall perform the
            following three precondition checks, without continuing further processing:
             1.  (inputBuffer == NULL &amp;&amp; inputBufferLength != 0)
                 ||
                 (inputBuffer != NULL &amp;&amp; inputBufferLength &lt;
                 BufferProperties.headerLength/8u +
                 EndToEndTransformationDescription.upperHeaderBitsToShift/8u)
             2.  If (bufferLength == NULL)
             3.  If (buffer == NULL).
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00103.Pxx</srcid><srcstatus/><internalId>434</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00103</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>73</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00140</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            For PXX = 01 or 02 (i.e. for profile 1 and 2), the out-of-place
            function E2EXf_Inv_&lt;transformerId&gt; shall
             1.  if(inputBuffer == NULL and inputBufferLength == 0), then
                 -  variable NewDataAvailable of state object of type
                    E2E_PXXCheckStateType (see [SWS_E2EXf_00125]) associated with
                    &lt;transformerId&gt; shall be set to FALSE
             2.  else if (inputBufferLength == config-&gt;DataLength/8), then
                 -  variable NewDataAvailable of state object of type
                    E2E_PXXCheckState Type (see [SWS_E2EXf_00125]) associated with
                    &lt;transformerId&gt; shall be set to TRUE.
             3.  else return E_SAFETY_HARD_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00140.Pxx</srcid><srcstatus/><internalId>435</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00140</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>75</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00123</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02 (i.e. for profiles 1 and 2), the out-of-place function
            E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that
            function:
              -  config,
              -  state,
              -  data
            Concerning pointer to data: if(inputBuffer == NULL and inputBufferLength == 0), then
            it shall pass a pointer to a 1-byte variable of E2E transformer, otherwise it shall pass
            inputBuffer.(RS_E2E_08538)
          </description>
          <comment>
            Incorporated RfC 70069
            'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=70069.
            For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient to
            have a valid pointer to data. From the dummy variable where it points to is never read. The
            size of the variable where it points to is considered as an implementation detail and thus
            not important for the fulfillment of this requirement.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00123.Pxx</srcid><srcstatus/><internalId>436</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00123</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>76</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00141</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02 (i.e. for profiles 1 and 2), the in-place
            function E2EXf_Inv_&lt;transformerId&gt; shall
            1.  If(buffer == NULL and inputBufferLength == 0), then
                - variable NewDataAvailable of state object of type
                   E2E_PXXCheckStateType (see [SWS_E2EXf_00125]) associated with
                   &lt;transformerId&gt; shall be set to FALSE.
            2.  Else if (inputBufferLength == config-&gt;DataLength/8), then
                - variable NewDataAvailable of state object of type E2E_PXXCheckState
                  Type (see [SWS_E2EXf_00125]) associated with &lt;transformerId&gt; shall
                  be set to TRUE.
            3.  Else return E_SAFETY_HARD_RUNTIMEERROR.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00141.Pxx</srcid><srcstatus/><internalId>437</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00141</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>77</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00124</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 01 or 02 (i.e. for profiles 1 and 2), the in-place function
            E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that
            function:
              -  Config,
              -  State,
              -  Data
            Concerning pointer to Data: if(buffer == NULL and inputBufferLength == 0), then it shall
            pass a pointer to a 1-byte variable of E2E transformer, otherwise it shall pass buffer.
            (RS_E2E_08538)
         </description>
         <comment>
            Incorporated RfC 70069
            'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=70069.
            For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient to
            have a valid pointer to data. From the dummy variable where it points to is never read. The
            size of the variable where it points to is considered as an implementation detail and thus
            not important for the fulfillment of this requirement.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00124.Pxx</srcid><srcstatus/><internalId>438</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00124</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>78</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00142</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If configuration parameter profileBehavior is PRE_R4_2, then
            for PXX = 01 or 02, E2EXf_Inv_&lt;transformerId&gt;() shall set the variable
            MaxDeltaCounter of the state object to the value of variable MaxDeltaCounterInit of
            the corresponding configuration object. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00142.Pxx</srcid><srcstatus/><internalId>439</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00142</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>79</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00104</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            For PXX = 04, 05, 06, 07, 11, 22: the function
            E2EXf_Inv_&lt;transformerId&gt; shall invoke E2E_PXXCheck(), passing to that function:
              -  config,
              -  state,
              -  data length: inputBufferLength
            pointer to data: inputBuffer (out-of-place version) or buffer (in-place
            version). (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00104.Pxx</srcid><srcstatus/><internalId>440</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00104</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>80</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00029</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            The function E2EXf_Inv_&lt;transformerId&gt; shall invoke
            E2E_PXXMapStatusToSM(), passing to that function the return value of E2E_PXXCheck
            and the profiles check Status (variable Status of state object of type
            E2E_PXXCheckStateType, see [SWS_E2EXf_00125]), to obtain the profile-
            independent check status. For P1/P2 mapping functions, there is an additional call
            parameter profileBehavior:
            -  if configuration parameter profileBehavior is R4_2, then E2E_PXXMapStatusToSM()
               shall be invoked with the call parameter profileBehavior = 1
            -  if configuration parameter profileBehavior is PRE_R4_2, then
               E2E_PXXMapStatusToSM() shall be invoked with call parameter profileBehavior = 0
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00029.Pxx</srcid><srcstatus/><internalId>441</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00029</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>96</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00028</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            The function E2EXf_Inv_&lt;transformerId&gt; shall invoke the
            E2E_SMCheck() function, passing to that function the configuration object of type
            E2E_SMConfigType (see [SWS_E2EXf_00126] and [SWS_E2EXf_00088])and state
            object of type E2E_SMCheckStateType (see [SWS_E2EXf_00125]) that are associated
            with &lt;transformerId&gt;, plus the profile-independent check status that was computed
            by E2E_PXXMapStatusToSM() in SWS_E2EXf_00029.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00028.Pxx</srcid><srcstatus/><internalId>442</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00028</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>97</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00027</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            If E2E_SMCheck() returns E2E_E_OK and disableEndToEndStateMachine is FALSE, then:
            - the high nibble of the return
              of the function E2EXf_Inv_&lt;transformerId&gt; shall be set to the low nibble
              of the state of the state machine (member SMState of object of type
              E2E_SMStateType that is associated with &lt;transformerId&gt;, see
              [SWS_E2EXf_00125]).
            - The low nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt;
              shall  be set to the low nibble of the profile-independent check status
              of type E2E_PCheckStatusType.
              If E2E_SMCheck() does not return E2E_E_OK, the return value shall be
              E_SAFETY_SOFT_RUNTIMEERROR. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00027.Pxx</srcid><srcstatus/><internalId>443</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00027</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>99</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00112</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (buffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0), in-place
            E2EXf_Inv_&lt;transformerId&gt; shall copy the first upperHeaderBitsToShift
            bits, in parameter buffer, in direction right by 'distance' of
            BufferProperties.headerLength.(RS_E2E_08538)
         </description>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00112.Pxx</srcid><srcstatus/><internalId>444</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00112</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>100</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00113</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0),
            out-of-place E2EXf_Inv_&lt;transformerId&gt; shall copy the first
            upperHeaderBitsToShift bits from inputBuffer to buffer, and then copy the
            remaining part of inputBuffer skipping E2E header (i.e. starting with
            offset upperHeaderBitsToShift+BufferProperties.headerLength) to parameter
            buffer starting with the destination offset of
            (upperHeaderBitsToShift).(RS_E2E_08538)
         </description>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00113.Pxx</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00113</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>101</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00116</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If (inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift == 0),
            out-of-place E2EXf_Inv_&lt;transformerId&gt; shall copy inputBuffer starting
            with the offset of BufferProperties.headerLength, to
            buffer.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.ASR421.SWS_E2EXf_00116.Pxx</srcid><srcstatus/><internalId>446</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00116</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>102</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00169</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If disableEndToEndStateMachine is to TRUE,
            - The high nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt; shall
              be set to 0x6.
            - The low nibble of the return of the function E2EXf_Inv_&lt;transformerId&gt; shall
              be set to the low nibble of the profile-independent check status of type
              E2E_PCheckStatusType. (RS_E2E_08538)
         </description>
         <comment>
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00169.Pxx</srcid><srcstatus/><internalId>454</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00169</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>98</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00114</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            If inputBufferLength == 0, then E2EXf_Inv_&lt;transformerId&gt; shall set
            *bufferLength = 0, otherwise it shall set
            *bufferLength = inputBufferLength - BufferProperties.headerLength/8.
            (RS_E2E_08538)
         </description>
         <comment>
            Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
            BufferProperties.headerLength' and
            RfC 69321 'Correction of calculation of bufferLength'.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00114.Pxx</srcid><srcstatus/><internalId>447</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00114</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>103</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00167</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server-Communication on the server side, if the return value ret equals
            to E_SAFETY_*_ERR, the value shall be overwritten to E_E2E_HARD_SAFETY_ERR.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00167.Pxx</srcid><srcstatus/><internalId>448</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00037</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            Mandatory Interfaces
            API function         Description
            E2E_P01Check           Checks the Data received using the E2E profile 1. This includes CRC
                                   calculation, handling of Counter and Data ID.
            E2E_P01CheckInit       Initializes the check state
            E2E_P01Forward (draft) Protects data which is forwarded by using the E2E profile 01.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P01MapStatusToSM   The function maps the check status of Profile 1 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 1 delivers a more fine-granular status, but this is not
                                   relevant for the E2E state machine.
            E2E_P01Protect         Protects the array/buffer to be transmitted using the E2E profile 1.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P01ProtectInit     Initializes the protection state.
            E2E_P02Check           Check the array/buffer using the E2E profile 2. This includes checksum
                                   calculation, handling of sequence counter and Data ID.
            E2E_P02CheckInit       Initializes the check state
            E2E_P02Forward (draft) Protects data which is forwarded by using the E2E profile 02.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P02MapStatusToSM   The function maps the check status of Profile 2 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 2 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P02Protect         Protects the array/buffer to be transmitted using the E2E profile 2.
                                   This includes checksum calculation, handling of sequence counter and
                                   Data ID.
            E2E_P02ProtectInit     Initializes the protection state.
            E2E_P04Check           Checks the Data received using the E2E profile 4. This includes CRC
                                   calculation, handling of Counter and Data ID.
            E2E_P04CheckInit       Initializes the check state
            E2E_P04Forward (draft) Protects data which is forwarded by using the E2E profile 04.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P04MapStatusToSM   The function maps the check status of Profile 4 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 4 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P04Protect         Protects the array/buffer to  be transmitted using the E2E profile 4.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P04ProtectInit     Initializes the protection state.
            E2E_P04mCheckInit      Initializes the check state
            E2E_P04mForward (draft)Protects data which is forwarded by using the E2E profile 04m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P04mMapStatusToSM  The function maps the check status of Profile 4m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 4m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P04mProtect        Protects the array/buffer to  be transmitted using the E2E profile 4.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P04mProtectInit    Initializes the protection state.
            E2E_P04mSinkCheck      Checks the Data received using the E2E profile 4m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
            E2E_P04mSourceCheck    Checks the Data received using the E2E profile 4m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
            E2E_P05Check           Checks the Data received using the E2E profile 5. This includes CRC
                                   calculation, handling of Counter. The function checks only one single
                                   data in one cycle, it does not determine/compute the accumulated state
                                   of the communication link.
            E2E_P05CheckInit       Initializes the check state
            E2E_P05Forward (draft) Protects data which is forwarded by using the E2E profile 05.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P05MapStatusToSM   The function maps the check status of Profile 5 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 5 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P05Protect         Protects the array/buffer to be transmitted using the E2E profile 5. This
                                   includes checksum calculation, handling of counter.
            E2E_P05ProtectInit     Initializes the protection state.
            E2E_P06Check           Checks the Data received using the E2E profile 6. This includes CRC
                                   calculation, handling of Counter. The function checks only one single
                                   data in one cycle, it does not determine/compute the accumulated state
                                   of the communication link.
            E2E_P06CheckInit       Initializes the check state
            E2E_P06Forward (draft) Protects data which is forwarded by using the E2E profile 06.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P06MapStatusToSM   The function maps the check status of Profile 6 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 6 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P06Protect         Protects the array/buffer to be transmitted using the E2E profile 6.
                                   This includes checksum calculation, handling of counter.
            E2E_P06ProtectInit     Initializes the protection state.
            E2E_P07Check           Checks the Data received using the E2E profile 7. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P07CheckInit       Initializes the check state
            E2E_P07Forward (draft) Protects data which is forwarded by using the E2E profile 07.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P07MapStatusToSM   The function maps the check status of Profile 7 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 7 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P07Protect         Protects the array/buffer to be transmitted using the E2E profile 7.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P07ProtectInit     Initializes the protection state.
            E2E_P07mCheckInit      Initializes the check state
            E2E_P07mForward (draft)Protects data which is forwarded by using the E2E profile 07m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P07mMapStatusToSM  The function maps the check status of Profile 7m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 7m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P07mProtect        Protects the array/buffer to  be transmitted using the E2E profile 7m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P07mProtectInit    Initializes the protection state.
            E2E_P07mSinkCheck      Checks the Data received using the E2E profile 7m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P07mSourceCheck    Checks the Data received using the E2E profile 7m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P07Check           Checks the Data received using the E2E profile 7. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P07CheckInit       Initializes the check state
            E2E_P07Forward (draft) Protects data which is forwarded by using the E2E profile 07.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P07MapStatusToSM   The function maps the check status of Profile 7 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 7 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P07Protect         Protects the array/buffer to be transmitted using the E2E profile 7.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P07ProtectInit     Initializes the protection state.
            E2E_P07mCheckInit      Initializes the check state
            E2E_P07mForward (draft)Protects data which is forwarded by using the E2E profile 07m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P07mMapStatusToSM  The function maps the check status of Profile 7m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 7m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P07mProtect        Protects the array/buffer to  be transmitted using the E2E profile 7m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P07mProtectInit    Initializes the protection state.
            E2E_P07mSinkCheck      Checks the Data received using the E2E profile 7m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P07mSourceCheck    Checks the Data received using the E2E profile 7m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P08Check           Checks the Data received using the E2E profile 8. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P08CheckInit       Initializes the check state
            E2E_P08Forward (draft) Protects data which is forwarded by using the E2E profile 08.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P08MapStatusToSM   The function maps the check status of Profile 8 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 8 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P08mCheckInit      Initializes the check state
            E2E_P08mForward (draft)Protects data which is forwarded by using the E2E profile 08m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P08mMapStatusToSM  The function maps the check status of Profile 8m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 8m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P08mProtect        Protects the array/buffer to  be transmitted using the E2E profile 8m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P08mProtectInit    Initializes the protection state.
            E2E_P08mSinkCheck      Checks the Data received using the E2E profile 8m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P08mSourceCheck    Checks the Data received using the E2E profile 8m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P08Check           Checks the Data received using the E2E profile 8. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P08CheckInit       Initializes the check state
            E2E_P08Forward (draft) Protects data which is forwarded by using the E2E profile 08.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P08MapStatusToSM   The function maps the check status of Profile 8 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 8 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P08Protect         Protects the array/buffer to be transmitted using the E2E profile 8.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P08ProtectInit     Initializes the protection state.
            E2E_P08mCheckInit      Initializes the check state
            E2E_P08mForward (draft)Protects data which is forwarded by using the E2E profile 08m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P08mMapStatusToSM  The function maps the check status of Profile 8m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 8m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P08mProtect        Protects the array/buffer to  be transmitted using the E2E profile 8m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P08mProtectInit    Initializes the protection state.
            E2E_P08mSinkCheck      Checks the Data received using the E2E profile 8m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P08mSourceCheck    Checks the Data received using the E2E profile 8m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P08Protect         Protects the array/buffer to be transmitted using the E2E profile 8.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P08ProtectInit     Initializes the protection state.
            E2E_P11Check           Checks the Data received using the E2E profile 11. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P11CheckInit       Initializes the check state
            E2E_P11Forward (draft) Protects data which is forwarded by using the E2E profile 11.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P11MapStatusToSM   The function maps the check status of Profile 11 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 11 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P11Protect         Protects the array/buffer to be transmitted using the E2E profile 11.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P11ProtectInit     Initializes the protection state.
            E2E_P22Check           Checks the Data received using the E2E profile 22. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P22CheckInit       Initializes the check state
            E2E_P22Forward (draft) Protects data which is forwarded by using the E2E profile 22.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P22MapStatusToSM   The function maps the check status of Profile 22 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 22 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P22Protect         Protects the array/buffer to be transmitted using the E2E profile 22.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P22ProtectInit     Initializes the protection state.
            E2E_P44Check           Checks the Data received using the E2E profile 44. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P44CheckInit       Initializes the check state
            E2E_P44Forward (draft) Protects data which is forwarded by using the E2E profile 44.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P44MapStatusToSM   The function maps the check status of Profile 44 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 44 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P44mCheckInit      Initializes the check state
            E2E_P44mForward (draft)Protects data which is forwarded by using the E2E profile 44m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P44mMapStatusToSM  The function maps the check status of Profile 44m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 44m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P44mProtect        Protects the array/buffer to  be transmitted using the E2E profile 44m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P44mProtectInit    Initializes the protection state.
            E2E_P44mSinkCheck      Checks the Data received using the E2E profile 44m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P44mSourceCheck    Checks the Data received using the E2E profile 44m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P44Check           Checks the Data received using the E2E profile 44. This includes CRC
                                   calculation, handling of Counter and Data ID. The function checks only
                                   one single data in one cycle, it does not determine/compute the
                                   accumulated state of the communication link.
            E2E_P44CheckInit       Initializes the check state
            E2E_P44Forward (draft) Protects data which is forwarded by using the E2E profile 44.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P44MapStatusToSM   The function maps the check status of Profile 44 to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 44 delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P44Protect         Protects the array/buffer to be transmitted using the E2E profile 44.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P44ProtectInit     Initializes the protection state.
            E2E_P44mCheckInit      Initializes the check state
            E2E_P44mForward (draft)Protects data which is forwarded by using the E2E profile 44m.
                                   This includes checksum calculation, handling of counter and Data ID.
                                   Detected Errors of received message will be reconstruct on output data.
            E2E_P44mMapStatusToSM  The function maps the check status of Profile 44m to a generic check
                                   status, which can be used by E2E state machine check function. The E2E
                                   Profile 44m delivers a more fine-granular status, but this is not relevant
                                   for the E2E state machine.
            E2E_P44mProtect        Protects the array/buffer to  be transmitted using the E2E profile 44m.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P44mProtectInit    Initializes the protection state.
            E2E_P44mSinkCheck      Checks the Data received using the E2E profile 44m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data sink
                                   (i.e., in case of C/S communication at the server)
            E2E_P44mSourceCheck    Checks the Data received using the E2E profile 44m.
                                   This includes CRC calculation, handling of Counter, Data ID,
                                   Message Type, Message Result, and Source ID.
                                   The function checks only one single data in one cycle, it does not
                                   determine/compute the accumulated state of the communication link.
                                   This function is intended for usage at the data source
                                   (i.e., in case of C/S communication at the client).
            E2E_P44Protect         Protects the array/buffer to be transmitted using the E2E profile 44.
                                   This includes checksum calculation, handling of counter and Data ID.
            E2E_P44ProtectInit     Initializes the protection state.
            E2E_SMCheck            Checks the communication channel. It determines if the data can
                                   be used for safety-related application, based on history of
                                   checks performed by a corresponding E2E_P0XCheck() function.
            E2E_SMCheckInit        Initializes the state machine.
            (RS_E2E_08538)
         </description>
         <comment>
            ForwardStatus feature added in R22-11.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00037.Pxx</srcid><srcstatus/><internalId>449</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00037</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>2</ffbSrcVersion><internalId>126</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>

      <specobject>
         <id>E2E.SWS_Xfrm_00108</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If (EndToEndTransformationDescription.upperHeaderBitsTo
            Shift &gt; 0), in-place E2EXf_&lt;transformerId&gt; shall copy the amount upper HeaderBits
            ToShiftbits, in parameter buffer, with starting offset of BufferProperties.headerLength,
            in direction left by "distance" of BufferProperties.headerLength.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_Xfrm_00108.Pxx</srcid><srcstatus/><internalId>450</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_Xfrm_00108</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>135</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>
      
      <specobject>
         <id>E2E.SWS_Xfrm_00032</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            A safety transformer shall return one of the errors shown in Table below
        -----------------------------------------------------------------------------
        Error Name                 | Error Code | Error Type | Description
        -----------------------------------------------------------------------------
        E_OK                       | 0x00       | -          | The communication is safe.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_REP         | 0x01       | Soft       | The data are valid according to
                                                               safety, although data with a re-
                                                               peated counter were received.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_SEQ         | 0x02       | Soft       | The data are valid according to
                                                               safety, although a counter jump
                                                               occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_ERR         | 0x03       | Soft       | The data are valid according to
                                                               safety, although the check itself
                                                               failed.
        -----------------------------------------------------------------------------
        E_SAFETY_VALID_NND         | 0x05       | Soft       | Communication is valid according to
                                                               safety, but no new data received.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_OK         | 0x20       | Soft       | No data are available since ini-
                                                               tialization of transformer.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_REP        | 0x21       | Soft       | No data are available since
                                                               initialization of transformer be-
                                                               cause a repeated counter was
                                                               received.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_SEQ        | 0x22       | Soft       | No data are available since ini-
                                                               tialization of transformer and a
                                                               counter jump occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_ERR        | 0x23       | Soft       | No data are available since ini-
                                                               tialization of transformer. There-
                                                               fore the check failed.
        -----------------------------------------------------------------------------
        E_SAFETY_NODATA_NND        | 0x25       | Soft       | No data are available since
                                                               initialization of transformer.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_OK           | 0x30       | Soft       | Not enough data were received
                                                               to use them.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_REP          | 0x31       | Soft       | Not enough data were received
                                                               to use them but some with a re-
                                                               peated counter were received.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_SEQ          | 0x32       | Soft       | Not enough data were received
                                                               to use them, additionally a
                                                               counter jump occurred.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_ERR          | 0x33       | Soft       | Not enough data were received
                                                               to use them, additionally a check
                                                               failed.
        -----------------------------------------------------------------------------
        E_SAFETY_INIT_NND          | 0x35       | Soft       | Not enough data were received to use
                                                               them, additionally no new data
                                                               received.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_OK        | 0x40       | Soft       | The data are invalid and cannot
                                                               be used.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_REP       | 0x41       | Soft       | The data are invalid and can-
                                                               not be used because a repeated
                                                               counter was received.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_SEQ       | 0x42       | Soft       | The data are invalid and cannot
                                                               be used due to a counter jump.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_ERR       | 0x43       | Soft       | The data are invalid and cannot
                                                               be used because a check failed.
        -----------------------------------------------------------------------------
        E_SAFETY_INVALID_NND       | 0x45       | Soft       | Communication is invalid according to
                                                               safety and no new data received
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_OK           | 0x60       | Soft       | Communication is safe, Statemachine
                                                               is not active.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_REP          | 0x61       | Soft       | Data with a repeated counter were
                                                               received. E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_SEQ          | 0x62       | Soft       | A counter jump occurred.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_ERR          | 0x63       | Soft       | The data are invalid and cannot
                                                               be used because a check failed.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_NND          | 0x65       | Soft       | No new data available.
                                                               E2EStateMachine disabled.
        -----------------------------------------------------------------------------
        E_SAFETY_NOSM_DEC          | 0x66       | Soft       | Disabled E2E State machine and
                                                               disabled E2E check.
        -----------------------------------------------------------------------------
        E_SAFETY_SOFT_RUNTIMEERROR | 0x77       | Soft       | A runtime error occurred, safety
                                                               properties could not be checked
                                                               (state or status cannot be deter-
                                                               mined) but non-protected output
                                                               data could be produced nonethe-
                                                               less.
        -----------------------------------------------------------------------------
        E_E2E_HARD_SAFETY_ERR      | 0x8d       | Hard       | Not further specified E2E error
        -----------------------------------------------------------------------------
        E_SAFETY_HARD_RUNTIMEERROR | 0xFF       | Hard       | A runtime error occurred, safety
                                                               properties could not be checked
                                                               and NO output data could be pro-
                                                               duced.
        -----------------------------------------------------------------------------
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_Xfrm_00032.Pxx</srcid><srcstatus/><internalId>451</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_Xfrm_00032.VALID_NND</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>156</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2EXf.SWS_Xfrm_00032.NODATA_NND</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>161</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2EXf.SWS_Xfrm_00032.INIT_NND</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>166</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2EXf.SWS_Xfrm_00032.INVALID_NND</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>171</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2EXf.SWS_Xfrm_00032.NOSM_OK</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>172</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2EXf.SWS_Xfrm_00032.NOSM_REP</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>173</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2EXf.SWS_Xfrm_00032.NOSM_SEQ</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>174</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2EXf.SWS_Xfrm_00032.NOSM_ERR</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>175</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2EXf.SWS_Xfrm_00032.NOSM_NND</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>176</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2EXf.SWS_Xfrm_00032.NOSM_DEC</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>177</internalId></incomingFfbLink><incomingFfbLink><ffbSrcId>E2EXf.SWS_Xfrm_00032.SAFETY_ERR</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>179</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>

      <specobject>
         <id>E2E.SWS_Xfrm_00051</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If a transformer returns a hard error, it shall leave the output buffer unchanged
            (SRS_Xfrm_00004)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_Xfrm_00051.Pxx</srcid><srcstatus/><internalId>452</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_Xfrm_00051</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>147</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00047</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>2</version>
         <description>
            Imported Types
            Module:Imported Type
            E2E:
            E2E_P01CheckStateType
            E2E_P01CheckStatusType
            E2E_P01ConfigType
            E2E_P01DataIDMode
            E2E_P01ProtectStateType
            E2E_P02CheckStateType
            E2E_P02CheckStatusType
            E2E_P02ConfigType
            E2E_P02ProtectStateType
            E2E_P04CheckStateType
            E2E_P04CheckStatusType
            E2E_P04ConfigType
            E2E_P04ProtectStateType
            E2E_P04mCheckStateType
            E2E_P04mCheckStatusType
            E2E_P04mConfigType
            E2E_P04mProtectStateType
            E2E_P05CheckStateType
            E2E_P05CheckStatusType
            E2E_P05ConfigType
            E2E_P05ProtectStateType
            E2E_P06CheckStateType
            E2E_P06CheckStatusType
            E2E_P06ConfigType
            E2E_P06ProtectStateType
            E2E_P07CheckStatusType
            E2E_P07CheckStateType
            E2E_P07ConfigType
            E2E_P07ProtectStateType
            E2E_P07mCheckStateType
            E2E_P07mCheckStatusType
            E2E_P07mConfigType
            E2E_P07mProtectStateType
            E2E_P08CheckStateType
            E2E_P08CheckStatusType
            E2E_P08ConfigType
            E2E_P08ProtectStateType
            E2E_P08mCheckStateType
            E2E_P08mCheckStatusType
            E2E_P08mConfigType
            E2E_P08mProtectStateType
            E2E_P11CheckStatusType
            E2E_P11CheckStateType
            E2E_P11ConfigType
            E2E_P11DataIDMode
            E2E_P11ProtectStateType
            E2E_P22CheckStateType
            E2E_P22CheckStatusType
            E2E_P22ConfigType
            E2E_P22ProtectStateType
            E2E_P44CheckStateType
            E2E_P44CheckStatusType
            E2E_P44ConfigType
            E2E_P44ProtectStateType
            E2E_P44mCheckStateType
            E2E_P44mCheckStatusType
            E2E_P44mConfigType
            E2E_P44mProtectStateType
            E2E_PCheckStatusType
            E2E_SMCheckStateType
            E2E_SMConfigType
            E2E_SMStateType
            Std_Types:
            Std_ExtractProtocolHeaderFieldsType
            Std_MessageResultType
            Std_MessageTypeType
            Std_ReturnType
            Std_TransformerForwardCode (draft)
            Std_VersionInfoType
         </description>
         <comment>
            This requirement was adapted for profile E2EP07 and E2EP11 with SWS Release 4.3.0.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00047.Pxx</srcid><srcstatus/><internalId>460</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00175</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side, if the
            E2E_PXXCheck function returns a value different from E2E_P_OK, the status shall be
            set to E2E_P_ERR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00175.Pxx</srcid><srcstatus/><internalId>461</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00175</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>105</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00173</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and
            Profile is P04, P05, P06, P07, P08, P11, P22 or P44, P04m, P07m, P08m, P44m
            state-&gt;Counter of E2EXf_Inv_&lt;transformerId&gt; shall be set to the requestCounter - 1.
            (RS_E2E_08538)
         </description>
         <comment/>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00173.Pxx</srcid><srcstatus/><internalId>462</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00173</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>92</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00172</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and Profile is P01 or P02,
            state-&gt;LastValidCounter of E2EXf_Inv_&lt;transformerId&gt; shall be set to the
            requestCounter-1.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00172.Pxx</srcid><srcstatus/><internalId>463</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00203</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profile P04m, P07m, P08m and P44m both the in-place and the out-of-place
            E2EXf_Inv_&lt;transformerId&gt; on the server-side shall set the e2eCounter element
            of the csTransactionHandle to the value of the local variable receivedRequestCounter.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00203.Pxx</srcid><srcstatus/><internalId>464</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00203</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>90</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00202</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profile P04m, P07m, P08m and P44m both the in-place and the out-of-place
            E2EXf_Inv_&lt;transformerId&gt; on the server-side shall set the e2eSourceId element
            of the csTransactionHandle to the value of the local variable sourceID.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00202.Pxx</srcid><srcstatus/><internalId>465</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00202</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>89</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00201</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For PXX = P04m, P07m, P08m and P44m: the function E2EXf_Inv_&lt;transformerId&gt; on the
            server-side shall invoke E2E_PXXSinkCheck(), passing to that function:
            - config,
            - state,
            - the local variables messageType, messageResult, and the address of the local variable
            sourceID
            - data length:
              inputBufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
            - pointer to data:
              . inputBuffer + EndToEndTransformationDescription.upperHeaderBitsToShift
              (out-of-place version) or
              . buffer + EndToEndTransformationDescription.upperHeaderBitsToShift (in-place version).
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00201.Pxx</srcid><srcstatus/><internalId>466</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00201</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>88</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00200</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For PXX = P04m, P07m, P08m and P44m: the function E2EXf_Inv_&lt;transformerId&gt; on
            the client-side shall invoke E2E_PXXSourceCheck(), passing to that function:
            - config,
            - state,
            - the local variables messageType, messageResult, and the local variable sourceID
            - data length:
              inputBufferLength – EndToEndTransformationDescription.upperHeaderBitsToShift
            - pointer to data:
                . inputBuffer + EndToEndTransformationDescription.upperHeaderBitsToShift
                  (out-of-place version) or
                . buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
                  (in-place version).
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00200.Pxx</srcid><srcstatus/><internalId>467</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00200</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>87</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00199</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If extractProtocolHeaderFields() returns something different from E_OK,
            E2EXf_Inv_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00199.Pxx</srcid><srcstatus/><internalId>468</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00199</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>86</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00198</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_Inv_&lt;transformerId&gt;
            on the server-side shall call the extractProtocolHeaderFields()
            function passing the inputBuffer, the inputBufferLength,
            the address of local messageType variable,
            and the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00198.Pxx</srcid><srcstatus/><internalId>469</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00198</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>85</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00197</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the in-place E2EXf_Inv_&lt;transformerId&gt;
            on the server-side shall call the extractProtocolHeaderFields() function
            passing the buffer, the bufferLength, the address of local messageType variable,
            and the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00197.Pxx</srcid><srcstatus/><internalId>470</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00197</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>84</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00196</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place
            and the out-of-place E2EXf_Inv_&lt;transformerId&gt; on the client-side shall
            set a local variable sourceID to the sourceID stored in the configuration
            (see SWS_E2EXf_00126).(RS_E2E_08538).
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00196.Pxx</srcid><srcstatus/><internalId>471</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00196</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>83</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00194</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_Inv_&lt;transformerId&gt;
            on the client-side shall call the extractProtocolHeaderFields() function passing the
            inputBuffer, the inputBufferLength, the address of a local variable named messageType,
            and the address of a local variable named messageResult as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00194.Pxx</srcid><srcstatus/><internalId>472</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00194</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>82</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00193</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the in-place E2EXf_Inv_&lt;transformerId&gt; on
            the client-side shall call the extractProtocolHeaderFields() function passing
            the buffer, the bufferLength, the address of local messageType variable, and
            the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00193.Pxx</srcid><srcstatus/><internalId>473</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00193</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>81</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00192</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_Inv_&lt;transformerId&gt; shall perform the following additional
            precondition checks, without continuing further processing:
            1. extractProtocolHeaderFields == NULL
            2. csTransactionHandle == NULL.
            If any of above conditions is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00192.Pxx</srcid><srcstatus/><internalId>474</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00192</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>74</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00191</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If DataTransformationStatusForwarding is set to transformerStatusForwarding and
            PXX = P04m, P07m, P08m or P44m: The function E2EXf_&lt;transformerId&gt;()
            shall invoke E2E_PXXForward(), passing to that function:
             - the appropriate Config structure (see [SWS_E2EXf_00125]),
             - the appropriate State structure (see [SWS_E2EXf_00126]),
             - the local variables sourceID, messageType, and messageResult
             - buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
             - bufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
            Hereby buffer and bufferLength were updated according to the above requirements
            SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00191.Pxx</srcid><srcstatus/><internalId>475</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>

      <specobject>
        <id>E2E.SWS_E2EXf_00168</id>
        <status>approved</status> <!-- draft in R22-11 -->
        <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
        <version>1</version>
        <description>
          If DataTransformationStatusForwarding is set to transformerStatusForwarding and
          PXX is P01, P02, P04, P05, P06, P07, P08, P11, P22 or P44 the function
          E2EXf_&lt;transformerId&gt;() shall invoke E2E_PXXForward(), passing to that function
          the appropriate Config and State structures (see [SWS_E2EXf_00125] and [SWS_E2EXf_00126])
          that are associated with &lt;transformerId&gt;, as well as buffer and bufferLength
          (only for P04, P05, P06, P07, P08, P11, P22 and P44) that were updated in requirements
          SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111.
          In addition the parameter ForwardStatus shall be passed to the E2E_PXXForward() function,
          which is provided by the RTE. This parameter is associated with the optional IN parameter
          ForwardStatus from Rte_Write (SWS_Rte_01071), Rte_Send (SWS_Rte_01072),
          Rte_IWrite (SWS_Rte_03744) and Rte_IWriteRef (SWS_Rte_05509)(RS_E2E_08538)
        </description>
        <releases>
          <release>AUTOSAR CP R22-11</release>
        </releases>
        <needscoverage>
          <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00168.Pxx</srcid><srcstatus/><internalId>476</internalId></linkedfrom></coveredby></needscov>
        <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00168</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>68</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00190</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If DataTransformationStatusForwarding is set to noTransformerStatusForwarding
            and PXX = P04m, P07m, P08m or P44m the function E2EXf_&lt;transformerId&gt;()
            shall invoke E2E_PXXProtect(), passing to that function:
             - the appropriate Config structure (see [SWS_E2EXf_00125]),
             - the appropriate State structure (see [SWS_E2EXf_00126]),
             - the local variables sourceID, messageType, and messageResult
             - buffer + EndToEndTransformationDescription.upperHeaderBitsToShift
             - bufferLength - EndToEndTransformationDescription.upperHeaderBitsToShift
            Hereby buffer and bufferLength were updated according to the requirements
            SWS_E2EXf_00108, SWS_E2EXf_00109, SWS_E2EXf_00115, SWS_E2EXf_00111. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00190.Pxx</srcid><srcstatus/><internalId>477</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00166</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2E-Transformer is used in a Client-Server Communication and
            Profile is P01, P04, P04m, P05, P06, P07, P07m, P08, P08m, P11, P44 or P44m
            the sequence counter for protecting the response shall be set to requestCounter.
            (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00166.Pxx</srcid><srcstatus/><internalId>478</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00166</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>64</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00208</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            The function E2EXf_MapCodeToStatus shall return the values depending on the value of
            forwardedCode.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00208.Pxx</srcid><srcstatus/><internalId>479</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00208</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>65</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00165</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2E-Transformer is used for a response in a Client-Server Communication and
            Profile is P02 or P22 the sequence counter used for protecting the response shall
            be set to requestCounter -1. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00165.Pxx</srcid><srcstatus/><internalId>480</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00165</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>63</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00189</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_&lt;transformerId&gt; on the server-side shall
            set a local variable named requestCounter to the value of the e2eCounter element
            of the csTransactionHandle. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00189.Pxx</srcid><srcstatus/><internalId>481</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00189</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>62</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00188</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_&lt;transformerId&gt;
            on the server-side shall set a local variable sourceID to the value of the e2eSourceId
            element of the csTransactionHandle. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00188.Pxx</srcid><srcstatus/><internalId>482</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00188</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>61</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00187</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If extractProtocolHeaderFields() returns something different from E_OK,
            E2EXf_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00187.Pxx</srcid><srcstatus/><internalId>483</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00187</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>60</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00186</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_&lt;transformerId&gt;
            on the server-side shall call the extractProtocolHeaderFields() function passing the
            inputBuffer, the inputBufferLength, the address of local messageType variable,
            and the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00186.Pxx</srcid><srcstatus/><internalId>484</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00186</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>59</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>

      <specobject>
        <id>E2E.SWS_E2EXf_00185</id>
        <status>approved</status>
        <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
        <version>1</version>
        <description>
           For profiles P04m, P07m, P08m and P44m the in-place E2EXf_&lt;transformerId&gt; on
           the server-side shall call the extractProtocolHeaderFields() function passing the buffer,
           the bufferLength, the address of local messageType variable, and the address of a local
           messageResult variable as parameters.
        </description>
        <releases>
           <release>AUTOSAR CP R22-11</release>
        </releases>
        <needscoverage>
           <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00185.Pxx</srcid><srcstatus/><internalId>485</internalId></linkedfrom></coveredby></needscov>
        <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00185</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>58</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00184</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and the out-of-place
            E2EXf_&lt;transformerId&gt; on the client-side shall set a local variable sourceID
            to the sourceID stored in the configuration (see SWS_E2EXf_00126).
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00184.Pxx</srcid><srcstatus/><internalId>486</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00184</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>57</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00183</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If extractProtocolHeaderFields() returns something different from E_OK,
            E2EXf_&lt;transformerId&gt; shall return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00183.Pxx</srcid><srcstatus/><internalId>487</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00183</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>56</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00181</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the in-place E2EXf_&lt;transformerId&gt;
            on the client-side shall call the extractProtocolHeaderFields() function passing
            the buffer, the bufferLength, the address of local messageType variable, and
            the address of a local messageResult variable as parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00181.Pxx</srcid><srcstatus/><internalId>489</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00181</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>54</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00182</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m the out-of-place E2EXf_&lt;transformerId&gt; on
            the client-side shall call the extractProtocolHeaderFields() function passing
            the inputBuffer, the inputBufferLength, the address of a local variable
            named messageType, and the address of a local variable named messageResult as
            parameters.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00182.Pxx</srcid><srcstatus/><internalId>488</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00182</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>55</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00171</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2EXf_&lt;transformerId&gt; is used in a Client-Server Communication on the client-side
            and Profile is P01, P04, P05, P06, P07, P08, P11 or P44, P04m, P07m, P08m, P44m
            state-&gt;Counter - 1 shall be stored as requestCounter to be accessed by the
            E2EXf_Inv_&lt;transformerId&gt; for checking the response. (RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00171.Pxx</srcid><srcstatus/><internalId>490</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00171</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>53</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00170</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            If E2EXf_&lt;transformerId&gt; is used in a Client-Server Communication on the client-side
            and Profile is P02 or P22, state-&gt;Counter shall be stored to as requestCounter to be
            accessed by the E2EXf_Inv_&lt;transformerId&gt; for checking the response.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00170.Pxx</srcid><srcstatus/><internalId>491</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00180</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            For profiles P04m, P07m, P08m and P44m both the in-place and
            the out-of-place E2EXf_&lt;transformerId&gt; shall perform the following
            additional precondition checks, without continuing further processing:
             1. extractProtocolHeaderFields == NULL
             2. csTransactionHandle == NULL.
            If any of above conditions is TRUE, then the function shall
            return E_SAFETY_HARD_RUNTIMEERROR.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00180.Pxx</srcid><srcstatus/><internalId>492</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00180</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>45</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00206</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and Profile is P01 or P02,
            the receivedRequestCounter shall be set to state-&gt;LastValidCounter of
            E2EXf_Inv_&lt;transformerId&gt;.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00206.Pxx</srcid><srcstatus/><internalId>493</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00206</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>93</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00207</id>
         <status>approved</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server Communication on the client side and Profile is P04, P05, P06,
            P07, P08, P11, P22, P44, P04m, P07m, P08m or P44m the receivedRequestCounter shall be
            set to state-&gt;Counter of E2EXf_Inv_&lt;transformerId&gt;.(RS_E2E_08538)
         </description>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.SWS_E2EXf_00207.Pxx</srcid><srcstatus/><internalId>494</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00207</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>94</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>

     <!--
         EB requirements valid for E2E profiles
     -->

      <specobject>
         <id>E2E.EB.SWS_E2EXf_00133</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If the E2E Transformer has not been correctly initialized (which means that
            E2EXf_[_&lt;PartitionId&gt;]_PartitionInit() was not successfully
            called before), then all generated E2E
            Transformer APIs shall immediately return E_SAFETY_HARD_RUNTIMEERROR.
         </description>
         <comment>
            This requirement replaces E2EXf.ASR421.SWS_E2EXf_00133.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.SWS_E2EXf_00133.Pxx</srcid><srcstatus/><internalId>453</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00133</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>41</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.InPlace.NoCopying</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If (buffer != NULL) &amp;&amp;
            (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), in-place
            E2EXf_&lt;transformerId&gt; shall keep buffer unchanged.
         </description>
         <comment>
            This requirement is based on requirement E2EXf.ASR421.SWS_E2EXf_00115
            but applied to in-place buffering for sake of completeness.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.Transformer.InPlace.NoCopying.Pxx</srcid><srcstatus/><internalId>455</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00108</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>46</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>

      <specobject>
         <id>E2E.EB.SWS_E2EXf_00021</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            The E2EXf_[_&lt;PartitionId&gt;]_PartitionInit() function shall initialize
            all state structures managed by E2E transformer, calling the corresponding
            E2E_Init() method on each state variable.
         </description>
         <comment>
            This requirement replaces E2EXf.ASR421.SWS_E2EXf_00021
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.SWS_E2EXf_00021.Pxx</srcid><srcstatus/><internalId>457</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00021</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>36</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>

      <specobject>
         <id>E2E.EB.InvTransformer.InPlace.NoCopying</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            If (buffer != NULL) &amp;&amp;
            (EndToEndTransformationDescription.upperHeaderBitsToShift == 0), in-place
            E2EXf_Inv_&lt;transformerId&gt; shall keep buffer unchanged.
         </description>
         <comment>
            This requirement is based on requirement E2EXf.SWS_E2EXf_00116
            but applied to in-place buffering for sake of completeness.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.InvTransformer.InPlace.NoCopying.Pxx</srcid><srcstatus/><internalId>456</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <incomingFfbLinks><incomingFfbLink><ffbSrcId>E2EXf.SWS_E2EXf_00112</ffbSrcId><ffbSrcType>req</ffbSrcType><ffbSrcVersion>1</ffbSrcVersion><internalId>100</internalId></incomingFfbLink></incomingFfbLinks><violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Server.ProtectStatePtrInputCheck</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In C/S communication, the E2EXf_&lt;transformerId&gt; on server-side shall perform the
            following additional precondition check, without continuing further processing:
            - ProtectStatePtr == NULL_PTR
            If the above condition is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR.
         </description>
         <comment>
            Checking ProtectStatePtr for NULL_PTR is necessary as it is dereferenced
            and set by the RequestCounter of csTransactionHandlePtr-&gt;e2eCounter.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.Transformer.Server.ProtectStatePtrInputCheck.Pxx</srcid><srcstatus/><internalId>458</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>

      <specobject>
         <id>E2E.EB.InvTransformer.Client.ProtectStatePtrInputCheck</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In C/S communication, the E2EXf_Inv_&lt;transformerId&gt; on client-side shall perform the
            following additional precondition check, without continuing further processing:
            - ProtectStatePtr == NULL_PTR
            If the above condition is TRUE, then the function shall return
            E_SAFETY_HARD_RUNTIMEERROR.
         </description>
         <comment>
            Checking ProtectStatePtr for NULL_PTR is necessary as it is dereferenced
            to set the Counter member of CheckStatesPtr-&gt;PXXmCheckState.
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.InvTransformer.Client.ProtectStatePtrInputCheck.Pxx</srcid><srcstatus/><internalId>459</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Init</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In S/R communication each transformer can be initialized individually.
            While in C/S communication, at client end both non-inverse transformer and
            inverse transformer shall be initialized at the time same.
         </description>
         <comment>
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.Transformer.Init.SR</srcid><srcstatus/><internalId>422</internalId></linkedfrom><linkedfrom><srcid>E2E.EB.Transformer.Init.Client</srcid><srcstatus/><internalId>423</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Init.SR</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In S/R communication each transformer can be initialized individually.
            API used is &lt;transformerId&gt;_Init().
         </description>
         <comment>
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.Transformer.Init.SR.Pxx</srcid><srcstatus/><internalId>495</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
         <providescoverage>
          <provcov>
            <linksto>E2E.EB.Transformer.Init</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
        </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Init.Client</id>
         <status>approved</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In C/S communication at client end both non-inverse transformer and
            inverse transformer shall be initialized at the time same.
            API used is &lt;non-inversetransformerId&gt;_&lt;inversetransformerId&gt;_Init().
         </description>
         <comment>
         </comment>
         <needscoverage>
            <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2E.EB.Transformer.Init.Client.Pxx</srcid><srcstatus/><internalId>496</internalId></linkedfrom></coveredby></needscov>
         <containerCovstatus>covered</containerCovstatus></needscoverage>
        <providescoverage>
          <provcov>
            <linksto>E2E.EB.Transformer.Init</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
        </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

      <specobject>
         <id>E2E.SWS_E2EXf_00102.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(buffer == NULL &amp;&amp; inputBufferLength != 0)' to '(buffer == NULL)'
            in point 1, see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00102</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00106.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer == NULL &amp;&amp; inputBufferLength != 0)' to '(inputBuffer == NULL)'
            in point 1, see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00106</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00108.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &amp;gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
            Incorporated Bugzilla RfC 75163:
            Rewrite '(buffer != NULL &amp;&amp; EndToEndTransformationDescription.upperHeaderBitsToShift
            &amp;gt; 0)' to '(EndToEndTransformationDescription.upperHeaderBitsToShift &amp;gt; 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00108</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00109.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &amp;gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift &amp;gt; 0)' to
            '(EndToEndTransformationDescription.upperHeaderBitsToShift &amp;gt; 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00109</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00115.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Incorporated Bugzilla RfC 75163:
            Rewrite '(inputBuffer != NULL &amp;&amp;
            EndToEndTransformationDescription.upperHeaderBitsToShift == 0)' to
            '(EndToEndTransformationDescription.upperHeaderBitsToShift == 0)',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=75163
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00115</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00111.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
            BufferProperties.headerLength'.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00111</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00139.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00139</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00107.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00107</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00018.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00018</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00105.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf,  ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00105</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00103.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00103</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00140.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00140</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00123.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11 </source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Incorporated RfC 70069
            'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=70069.
            For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient to
            have a valid pointer to data. From the dummy variable where it points to is never read. The
            size of the variable where it points to is considered as an implementation detail and thus
            not important for the fulfillment of this requirement.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00123</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00141.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00141</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00124.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Incorporated RfC 70069
            'Incorrect specification of call of E2E_PXXCheck for profile 01 and 02',
            see https://www.autosar.org/bugzilla/show_bug.cgi?id=70069.
            For the case (inputBuffer == NULL and inputBufferLength == 0) it should be sufficient to
            have a valid pointer to data. From the dummy variable where it points to is never read. The
            size of the variable where it points to is considered as an implementation detail and thus
            not important for the fulfillment of this requirement.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00124</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00142.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00142</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00104.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00104</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00029.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00029</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00028.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00028</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00027.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00027</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00112.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &amp;gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00112</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00113.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Note: EndToEndTransformationDescription.upperHeaderBitsToShift &amp;gt; 0 refers to a
            SomeIpXf transformer above E2EXf (see also constr_3155 of System Template).
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00113</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>

      <specobject>
         <id>E2E.ASR421.SWS_E2EXf_00116.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00116</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00114.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Incorporated RfC 69897 'Inconsequent usage of bits and bytes for
            BufferProperties.headerLength' and
            RfC 69321 'Correction of calculation of bufferLength'.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00114</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00167.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>1</version>
         <description>
            In case of Client/Server-Communication on the server side, if the return value ret equals
            to E_SAFETY_*_ERR, the value shall be overwritten to E_E2E_HARD_SAFETY_ERR.
            (RS_E2E_08538)
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00167</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00037.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, ASR R22-11</source>
         <version>2</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
            This applies to all profiles.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00037</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>

      <specobject>
         <id>E2E.SWS_Xfrm_00108.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_Xfrm_00108</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>
      
      <specobject>
         <id>E2E.SWS_Xfrm_00032.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_Xfrm_00032</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>

      <specobject>
         <id>E2E.SWS_Xfrm_00051.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_TransformerGeneral.pdf, Release 22-11</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_Xfrm_00051</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>

      <specobject>
         <id>E2E.EB.SWS_E2EXf_00133.Pxx</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.SWS_E2EXf_00133</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00169.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00169</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.InPlace.NoCopying.Pxx</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.Transformer.InPlace.NoCopying</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>

      <specobject>
         <id>E2E.EB.InvTransformer.InPlace.NoCopying.Pxx</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.InvTransformer.InPlace.NoCopying</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>

      <specobject>
         <id>E2E.EB.SWS_E2EXf_00021.Pxx</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.SWS_E2EXf_00021</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Server.ProtectStatePtrInputCheck.Pxx</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.Transformer.Server.ProtectStatePtrInputCheck</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>

      <specobject>
         <id>E2E.EB.InvTransformer.Client.ProtectStatePtrInputCheck.Pxx</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <providescoverage>
            <provcov>
               <linksto>E2E.EB.InvTransformer.Client.ProtectStatePtrInputCheck</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00047.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>2</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
            This applies to all profiles.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
            <release>AUTOSAR 4.2.1</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00047</linksto>
               <dstversion>2</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00175.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
            This applies to all method profiles.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00175</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00173.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
            This applies to all method profiles.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00173</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00172.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00172</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00203.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00203</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00202.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00202</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00201.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00201</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00200.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00200</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00199.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00199</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00198.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00198</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00197.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00197</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00196.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00196</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00194.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00194</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00193.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00193</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00192.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00192</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00191.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00191</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00168.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00168</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00190.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00190</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00166.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00166</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00208.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00208</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00165.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00165</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00189.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00189</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00188.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00188</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00187.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00187</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00186.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00186</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00185.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00185</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00184.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00184</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00183.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00183</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00182.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00182</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00181.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00181</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00171.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00171</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00170.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00170</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00180.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00180</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00206.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00206</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>

      <specobject>
         <id>E2E.SWS_E2EXf_00207.Pxx</id>
         <status>rejected</status>
         <source>AUTOSAR_SWS_E2ETransformer.pdf, Release 22-11, Initial</source>
         <version>1</version>
         <description>
            This specobject provides a dummy coverage for a  profile specific
            requirement in case the E2E module is built stand-alone (without
            any profile) in order to prevent an incomplete tracing report.
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <releases>
            <release>AUTOSAR CP R22-11</release>
         </releases>
         <providescoverage>
            <provcov>
               <linksto>E2E.SWS_E2EXf_00207</linksto>
               <dstversion>1</dstversion>
            <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
         </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Init.SR.Pxx</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In S/R communication each transformer can be initialized individually.
            API used is &lt;transformerId&gt;_Init().
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
         <providescoverage>
          <provcov>
            <linksto>E2E.EB.Transformer.Init.SR</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
        </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>

      <specobject>
         <id>E2E.EB.Transformer.Init.Client.Pxx</id>
         <status>rejected</status>
         <source>EB</source>
         <version>1</version>
         <description>
            In C/S communication at client end both non-inverse transformer and
            inverse transformer shall be initialized at the time same.
            API used is &lt;non-inversetransformerId&gt;_&lt;inversetransformerId&gt;_Init().
         </description>
         <rationale>
            This requirement is not applicable
         </rationale>
         <comment>
            Only APIs of activated profiles are mandatory. APIs of deactivated profiles are optional.
         </comment>
        <providescoverage>
          <provcov>
            <linksto>E2E.EB.Transformer.Init.Client</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
        </providescoverage>
      <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>

   </specobjects>
    <specobjects doctype="req">

    <specobject>
      <id>E2EXf.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_VerifyCodeStub</srcid><srcstatus/><internalId>581</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>

  </specobjects>
    <specobjects doctype="req">

     <specobject>
       <id>E2EXf.SWS_Xfrm_91001</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>2</version>
       <description>
       A transformer shall further use the types defined in the following table.
       ========|=============|=====================================
        Module | Header File | Imported Type
       ========|=============|=====================================
        Rte    |Rte.h        | Rte_Cs_TransactionHandleType
       --------|-------------|-------------------------------------
        Std    | Std_Types.h | Std_ExtractProtocolHeaderFieldsType
               | Std_Types.h | Std_MessageResultType
               | Std_Types.h | Std_MessageTypeType
               | Std_Types.h | Std_ReturnType
               | Std_Types.h | Std_TransformerForwardCode (draft)
               | Std_Types.h | Std_VersionInfoType
       --------|-------------|-------------------------------------
       (SRS_Xfrm_00002)
       </description>
       <comment/>
       <releases>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       <needscoverage>
        
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_Xfrm_91001.Rte_Cs_TransactionHandleType</srcid><srcstatus/><internalId>185</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_91001.Std_ExtractProtocolHeaderFieldsType</srcid><srcstatus/><internalId>186</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_91001.Std_MessageResultType</srcid><srcstatus/><internalId>187</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_91001.Std_MessageTypeType</srcid><srcstatus/><internalId>188</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_91001.Std_ReturnType</srcid><srcstatus/><internalId>189</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_91001.Std_TransformerForwardCode</srcid><srcstatus/><internalId>190</internalId></linkedfrom><linkedfrom><srcid>E2EXf.SWS_Xfrm_91001.Std_VersionInfoType</srcid><srcstatus/><internalId>191</internalId></linkedfrom></coveredby></needscov>
        
       <containerCovstatus>covered</containerCovstatus></needscoverage>

       
        

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>

     <specobject>
       <id>E2EXf.SWS_Xfrm_00046</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>3</version>
       <description>
        Service name:               &lt;Mip&gt;_Inv_&lt;transformerId&gt;
        Syntax:                     uint8 &lt;Mip&gt;_Inv_&lt;transformerId&gt;(
                                                  [Std_ExtractProtocolHeaderFieldsType extractProtocolHeaderFields],
                                                  [&lt;datatype&gt;* csTransactionHandle],
                                                  uint8 *buffer,
                                                  uint32 *bufferLength,
                                                  [const uint8 *inputBuffer,]
                                                  uint32 inputBufferLength
                                                  )
        Service ID[hex]:            0x04
        Sync/Async:                 Synchronous
        Reentrancy:                 Non Reentrant Depends on specific transformer
        Parameters (in):            extractProtocolHeaderFields   Optional pointer to the function that shall be used to extract
                                                                  relevant protocol header fields of a previous transformer in the
                                                                  transformer chain. This argument only exists if the corresponding
                                                                  XfrmImplementationMapping has a XfrmTransformerClassExtractProtocolHeaderFields.
                                    inputBuffer                   This argument only exists for transformers
                                                                  configured for out-of-place transformation.
                                                                  It holds the input data for the transformer. If
                                                                  executeDespiteDataUnavailability is set to true and
                                                                  the RTE cannot provide data as input to the transformer, it will
                                                                  hand over a NULL pointer to the transformer.
                                    inputBufferLength             This argument holds the length of the
                                                                  transformer"s input data (in the inputBuffer
                                                                  argument). If executeDespiteDataUnavailability is
                                                                  set to true and the RTE cannot provide data as input to the
                                                                  transformer, the length will be equal to 0.
        Parameters
        (inout):                    buffer                        This argument is only an INOUT argument for transformers which
                                                                  are not configured for out-of-place transformation. It is the buffer
                                                                  where the input data are placed by the RTE and which is filled by
                                                                  the transformer with its output. If executeDespiteData
                                                                  Unavailability is set to true and the RTE cannot provide data as
                                                                  input to the transformer, it will hand over a NULL pointer to the
                                                                  transformer.
        Parameters (out):           csTransactionHandle           Optional pointer to the transaction handle for the C/S method call.
                                                                  - Used to tunnel the relevant information from the request to the
                                                                  response at the server side via the RTE. This argument only
                                                                  exists if the corresponding XfrmImplementationMapping has a
                                                                  XfrmCSTansactionHandleImplementationDataTypeRef which
                                                                  references an ImplementationDataType.
                                    buffer                        This argument is only an OUT argument for
                                                                  transformers configured for out-of-place
                                                                  transformation. It is the buffer allocated by the
                                                                  RTE, where the transformed data has to be stored
                                                                  by the transformer
                                    bufferLength                  Here, the transformer informs the Rte how large
                                                                  the output data really were. It is possible that the
                                                                  length of the output is shorter than the maximum
                                                                  buffer size allocated.
        Return value:               uint8                         0x00 (E_OK): Transformation successful
                                                                  0x01 - 0xff: Specific errors
        Description:  This function is the interface of a transformer which is not the first transformer
                      in a transformer chain. It takes the output of an earlier transformer in the
                      chain and transforms the data.

                      The length of the transformed data shall be calculated by the transformer
                      during runtime and returned in the OUT parameter bufferLength. It may be
                      smaller than the maximum buffer size used by the RTE for buffer allocation.
        Available via: &lt;Mip&gt;.h
        (SRS_Xfrm_00002)
        where
          - datatype is data type corresponding to the ImplementationDataType referenced by XfrmCSTansactionHandleImplementationDataTypeRef.
          - type is data type of the data element before all data conversion activities of the RTE
          - Mip is the Module Implementation Prefix of the transformer as defined in
           [SWS_BSW_00102]
          - transformerId is the name pattern for the transformer specified in
           [SWS_Xfrm_00062].
       </description>
       <comment>Only applicable for non-serializing transformers</comment>
       <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       <needscoverage>
        
        <needscov><needsobj>req</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>E2EXf.SWS_E2EXf_00034</srcid><srcstatus/><internalId>122</internalId></linkedfrom></coveredby></needscov>
        
       <containerCovstatus>covered</containerCovstatus></needscoverage>

       
        <providescoverage>
          <provcov>
            <linksto>E2EXf.SWS_Xfrm_00047</linksto>
            <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>202</internalId></provcov>
        </providescoverage>

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>

     <specobject>
       <id>E2EXf.ECUC_Xfrm_00014_Conf</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>1</version>
       <description>
        SWS Item                      [ECUC_Xfrm_00014]
        Module Name                   Xfrm
        Description                   No
        Post-Build Variant Support    false
        Supported Config Variants     VARIANT-LINK-TIME, VARIANT-POST-BUILD, VARIANT-PRE-COMPILE
       </description>
       <comment>This is a configuration parameter requirement without functional specification (checked by VSMD checker).</comment>
       <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       

       
        

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>

     <specobject>
       <id>E2EXf.ECUC_Xfrm_00012_Conf</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>1</version>
       <description>
        SWS Item         [ECUC_Xfrm_00012]
        Container Name   XfrmGeneral
        Parent Container Xfrm
        Description      Contains the general configuration parameters of the module.
        Configuration Parameters
       </description>
       <comment>This is a configuration parameter requirement without functional specification (checked by VSMD checker).</comment>
       <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       

       
        

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>

     <specobject>
       <id>E2EXf.ECUC_Xfrm_00020_Conf</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>1</version>
       <description>
        Name             XfrmInstanceId [ECUC_Xfrm_00020]
        Parent Container XfrmGeneral
        Description      Specifies the InstanceId of this module instance. If only one instance is
                         present it shall have the Id 0.
        Multiplicity     1
        Type             EcucBooleanParamDef
        Range            0 .. 255
        Default Value    no
        Post-Build Variant false
        Value
        Value Configuration Pre-compile time X All Variants
        Class               Link time        no
                            Post-build time  no
        Scope / Dependency scope: local
       </description>
       <comment>This is a configuration parameter requirement without functional specification (checked by VSMD checker).</comment>
       <releases>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       

       
        

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>

     <specobject>
       <id>E2EXf.ECUC_Xfrm_00001_Conf</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>1</version>
       <description>
        SWS Item         [ECUC_Xfrm_00001]
        Container Name   XfrmImplementationMapping
        Parent Container Xfrm
        Description      For each transformer (TransformationTechnology) in a transformer
                         chain (DataTransformation) which is applied to an ISignal it is
                         necessary to specify the BswModuleEntry which implements it. This is
                         the container to hold these mappings.
        Configuration Parameters
       </description>
       <comment>This is a configuration parameter requirement without functional specification (checked by VSMD checker).</comment>
       <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       

       
        

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>

     <specobject>
       <id>E2EXf.ECUC_Xfrm_00022_Conf</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>1</version>
       <description>
        Name         XfrmTransformerClassExtractProtocolHeaderFields [ECUC_Xfrm_00022]
        Parent       XfrmImplementationMapping
        Container
        Description  Defines the transformerClass of the TransformationTechnology
                     containing information in its protocol header that is required to
                     distinguish between requests vs. responses and normal vs. error
                     responses in C/S communication. Usually this shall be the
                     TransformationTechnology with transformerClass equal to "serializer".
                     Setting this parameter basically instructs the RTE to pass a pointer to
                     the Mip_ExtractProtocolHeaderFields() function of the respective
                     transformer as an additional argument to the called transformer
                     function. E.g., if the serializing transformer in the transformer chain is
                     SomeIpXf and this parameter is set to SERIALIZER, then
                     SomeIpXf_ExtractProtocolHeaderFields() will be passed as additional
                     argument.
        Multiplicity 0..1
        Type         EcucEnumerationParamDef
        Range       SAFETY      The Mip_ExtractProtocolHeaderFields
                                function of the safety transformer in the
                                chain shall be called.
                    SECURITY    The Mip_ExtractProtocolHeaderFields
                                function of the security transformer in
                                the chain shall be called.
                    SERIALIZER  The Mip_ExtractProtocolHeaderFields
                                function of the serializing transformer
                                in the chain shall be called
        Post-Build Variant false
        Multiplicity
        Post-Build Variant false
        Value
        Multiplicity        Pre-compile time X All Variants
        Configuration Class Link time        no
                            Post-build time  no
        Value Configuration Pre-compile time X All Variants
        Class               Link time        no
                            Post-build time  no
        Scope / Dependency  scope: local
       </description>
       <comment>This is a configuration parameter requirement without functional specification (checked by VSMD checker).</comment>
       <releases>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       

       
        

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>

     <specobject>
       <id>E2EXf.ECUC_Xfrm_00021_Conf</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>1</version>
       <description>
        Name         XfrmCSTransactionHandleImplementationDataTypeRef [ECUC_Xfrm_00021]
        Parent       XfrmImplementationMapping
        Container
        Description  Reference to the ImplementationDataType with category STRUCTURE
                     which defines the type of the C/S transaction handle. Setting this
                     parameter basically instructs the RTE to pass a reference to a variable
                     of exactly this ImplementationDataType as an additional argument to
                     the called transformer function.
        Multiplicity 0..1
        Type         Foreign reference to IMPLEMENTATION-DATA-TYPE
        Post-Build Variant false
        Multiplicity
        Post-Build Variant false
        Value
        Multiplicity        Pre-compile time X All Variants
        Configuration Class Link time        no
                            Post-build time  no
        Value Configuration Pre-compile time X All Variants
        Class               Link time        no
                            Post-build time  no
        Scope / Dependency  scope: local
       </description>
       <comment>Parameter was introduced in order to fix the typographical mistake in its original AUTOSAR name, see https://jira.autosar.org/browse/AR-112344 .
This requirement shall demand source coverage since the presence of the parameter can not be verified by the VSMD checker.</comment>
       <releases>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       <needscoverage>
        <needscov><needsobj>src</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_265</srcid><srcstatus/><internalId>548</internalId></linkedfrom></coveredby></needscov>
        
        
       <containerCovstatus>covered</containerCovstatus></needscoverage>

       
        

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>

     <specobject>
       <id>E2EXf.ECUC_Xfrm_00005_Conf</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>1</version>
       <description>
        Name         XfrmInvTransformerBswModuleEntryRef [ECUC_Xfrm_00005]
        Parent       XfrmImplementationMapping
        Container
        Description  Reference to the BswModuleEntry which implements the referenced
                     inverse transformer on the receiving/called side.
        Multiplicity 0..1
        Type         Foreign reference to BSW-MODULE-ENTRY
        Post-Build Variant false
        Multiplicity
        Post-Build Variant false
        Value
        Multiplicity        Pre-compile time X All Variants
        Configuration Class Link time        no
                            Post-build time  no
        Value Configuration Pre-compile time X All Variants
        Class               Link time        no
                            Post-build time  no
        Scope / Dependency  scope: local
       </description>
       <comment>This is a configuration parameter requirement without functional specification (checked by VSMD checker).</comment>
       <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       

       
        

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>

     <specobject>
       <id>E2EXf.ECUC_Xfrm_00003_Conf</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>1</version>
       <description>
        Name         XfrmTransformationTechnologyRef [ECUC_Xfrm_00003]
        Parent       XfrmImplementationMapping
        Container
        Description  Reference to the TransformationTechnology in the DataTransformation
                     of the system description for which the implementation
                     (BswModuleEntry) shall be mapped.
        Multiplicity 1
        Type         Foreign reference to TRANSFORMATION-TECHNOLOGY
        Post-Build Variant  false
        Value
        Value Configuration Pre-compile time X All Variants
        Class               Link time        no
                            Post-build time  no
        Scope / Dependency  scope: local
       </description>
       <comment>This is a configuration parameter requirement without functional specification (checked by VSMD checker).</comment>
       <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       

       
        

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>

     <specobject>
       <id>E2EXf.ECUC_Xfrm_00018_Conf</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>1</version>
       <description>
        Name         XfrmTransformerBswModuleEntryRef [ECUC_Xfrm_00018]
        Parent       XfrmImplementationMapping
        Container
        Description  Reference to the BswModuleEntry which implements the referenced
                     transformer on the sending/calling side.
        Multiplicity 0..1
        Type         Foreign reference to BSW-MODULE-ENTRY
        Post-Build Variant false
        Multiplicity
        Post-Build Variant false
        Value
        Multiplicity        Pre-compile time X All Variants
        Configuration Class Link time        no
                            Post-build time  no
        Value Configuration Pre-compile time X All Variants
        Class               Link time        no
                            Post-build time  no
        Scope / Dependency  scope: local
       </description>
       <comment>This is a configuration parameter requirement without functional specification (checked by VSMD checker).</comment>
       <releases>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       

       
        

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>

     <specobject>
       <id>E2EXf.ECUC_Xfrm_00011_Conf</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>1</version>
       <description>
        Name         XfrmVariableDataPrototypeInstanceRef [ECUC_Xfrm_00011]
        Parent       XfrmImplementationMapping
        Container
        Description  Instance Reference to a VariableDataPrototype in case a dedicated
                     transformer BswModuleEntry is required per VariableDataPrototype
                     access.
        Multiplicity 0..1
        Type         Instance reference to VARIABLE-DATA-PROTOTYPE context:
                     SW-COMPONENT-PROTOTYPE PORT-PROTOTYPE
        Post-Build Variant false
        Multiplicity
        Post-Build Variant false
        Value
        Multiplicity        Pre-compile time X All Variants
        Configuration Class Link time        no
                            Post-build time  no
        Value Configuration Pre-compile time X All Variants
        Class               Link time        no
                            Post-build time  no
        Scope / Dependency  scope: local
       </description>
       <comment>This is a configuration parameter requirement without functional specification (checked by VSMD checker).</comment>
       <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       

       
        

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>

     <specobject>
       <id>E2EXf.ECUC_Xfrm_00002_Conf</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>1</version>
       <description>
        SWS Item       [ECUC_Xfrm_00002]
        Container Name XfrmSignal
        Description    Reference to the signal in the system description that transports the
                       transformed data.
        Configuration Parameters
       </description>
       <comment>This is a configuration parameter requirement without functional specification (checked by VSMD checker).</comment>
       <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       

       
        

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>

     <specobject>
       <id>E2EXf.ECUC_Xfrm_00006_Conf</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>1</version>
       <description>
        SWS Item         [ECUC_Xfrm_00006]
        Container Name   XfrmSignalChoice
        Parent Container XfrmSignal
        Description      Choice whether an ISignal or an ISignalGroup shall be referenced.
        Configuration Parameters
       </description>
       <comment>This is a configuration parameter requirement without functional specification (checked by VSMD checker).</comment>
       <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       

       
        

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>

     <specobject>
       <id>E2EXf.ECUC_Xfrm_00009_Conf</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>1</version>
       <description>
        SWS Item         [ECUC_Xfrm_00009]
        Container Name   XfrmISignalGroupRefChoice
        Parent Container XfrmSignalChoice
        Description      Reference to the ISignalGroup in the system description that transports
                         the transformed data.
        Configuration Parameters
       </description>
       <comment>This is a configuration parameter requirement without functional specification (checked by VSMD checker).</comment>
       <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       

       
        

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>

     <specobject>
       <id>E2EXf.ECUC_Xfrm_00010_Conf</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>1</version>
       <description>
        Name         XfrmISignalGroupRef [ECUC_Xfrm_00010]
        Parent       XfrmISignalGroupRefChoice
        Container
        Description  Reference to the ISignalGroup in the system description that transports
                     the transformed data.
        Multiplicity 1
        Type         Foreign reference to I-SIGNAL-GROUP
        Post-Build Variant         false
        Value
        Value Configuration Pre-compile time X All Variants
        Class               Link time        no
                            Post-build time  no
        Scope / Dependency  scope: local
       </description>
       <comment>This is a configuration parameter requirement without functional specification (checked by VSMD checker).</comment>
       <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       

       
        

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>

     <specobject>
       <id>E2EXf.ECUC_Xfrm_00007_Conf</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>1</version>
       <description>
        SWS Item         [ECUC_Xfrm_00007]
        Container Name   XfrmISignalRefChoice
        Parent Container XfrmSignalChoice
        Description      Reference to the ISignal in the system description that transports the
                         transformed data.
       </description>
       <comment>This is a configuration parameter requirement without functional specification (checked by VSMD checker).</comment>
       <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       

       
        

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>

     <specobject>
       <id>E2EXf.ECUC_Xfrm_00008_Conf</id>
       <status>approved</status>
       <source>AUTOSAR_SWS_TransformerGeneral.pdf</source>
       <version>1</version>
       <description>
        Name             XfrmISignalRef [ECUC_Xfrm_00008]
        Parent Container XfrmISignalRefChoice
        Description      Reference to the ISignal in the system description that transports the
                         transformed data.
        Multiplicity     1
        Type             Foreign reference to I-SIGNAL
        Post-Build Variant false
        Value
        Value Configuration Pre-compile time X All Variants
        Class               Link time        no
                            Post-build time  no
        Scope / Dependency  scope: local
       </description>
       <comment>This is a configuration parameter requirement without functional specification (checked by VSMD checker).</comment>
       <releases>
        <release>AUTOSAR 4.2.1</release>
        <release>AUTOSAR R22-11</release>
       </releases>
       
       

       
        

     <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.E2EXf.UnsupportedLinkTimeAndPostBuild</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>130</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00089</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>13</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00090</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00097</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>
    <specobject>
      <id>dev.E2EXf.UnsupportedExtendedProductionErrors</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.ECUC_Xfrm_00016_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
        <provcov>
          <linksto>E2EXf.ECUC_Xfrm_00015_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>
    <specobject>
      <id>dev.E2EXf.UnsupportedDevelopmentErrors</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>184</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.ECUC_Xfrm_00013_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.DEV_ERROR_DETECT</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>
    <specobject>
      <id>dev.E2EXf.UnsupportedSomeIpHeaderProtectionWithP01AndP02</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>216</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00155</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>
    <specobject>
      <id>dev.E2EXf.IncludeFileStructure</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>240</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>7</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>
    <specobject>
      <id>dev.E2EXf.InitializationRoutines</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>266</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>41</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>
    <specobject>
      <id>dev.E2EXf.NonReentrantTransformerFunctions</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>295</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>
    <specobject>
      <id>dev.E2EXf.CSInterface.Support</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>319</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00170</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00178</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>
    <specobject>
      <id>dev.E2EXf.AutonomousResponse.Support</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>342</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>
    <specobject>
      <id>dev.E2EXf.ForwardStatus.Support.CS</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>361</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00037</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00191</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00190</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00155</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>
    <specobject>
      <id>dev.E2EXf.E2E_PXXConfigType</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>384</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00177</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00164</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00179</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>27</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>28</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>
    <specobject>
      <id>dev.E2EXf.E2EXf_InitInitialization</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>403</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00158</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>
    <specobject>
      <id>dev.E2EXf.E2EXf_InitConfig</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>421</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00159</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>
    <specobject>
      <id>dev.E2EXf_ProfileTypes</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>440</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00047</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>
    <specobject>
      <id>dev.E2EXfreceivedRequestCounter</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>465</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>
    <specobject>
      <id>dev.E2EXfExtractProtocolHeaderFields</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>486</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>
    <specobject>
      <id>dev.E2EXfXfrmVariableDataPrototypeInstanceRef</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>504</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_CONSTR_09096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>
  </specobjects>
    <specobjects doctype="dsn">
    <specobject>
      <id>E2EXf.Design.IncludeFileStructure</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/project/design/pdf/EBASCE2EXF-288_Design_Specification-profiled.xml</sourcefile>
      <sourceline>20144</sourceline>
      <version>1</version>
      <description>E2EXf shall implement the following include structure:
- E2EXf.c shall include: E2EXf.h, Std_Types.h, E2EXf_MemMap.h;
- E2EXf.h shall include: E2EXf_Cfg.h, E2EXf_Api.h, E2EXf_Version.h, E2EXf_MemMap.h;
- E2EXf_Cfg.h shall include: Std_Types.h; 
- E2EXf_Api.h shall include: E2EXf[_PartitionId]_PartitionApi.h of all configured partitions;
- E2EXf_PartitionApi.h shall include: Std_Types.h, TransformerTypes.h as well as E2E_&amp;lt;ProfileName&amp;gt;_E2EXf.h for each configured profile, E2E_No_Check_E2EXf.h;
- E2EXf[_PartitionId]_PartitionApi.c shall include: E2E_SM.h, E2E_E2EXf_Stc.h, E2EXf[_PartitionId]_PartitionApi.h as well as E2E_&amp;lt;ProfileName&amp;gt;.h for each configured profile and  E2EXf_MemMap.h;
- E2E_E2EXf_Stc.h shall include: E2EXf_Cfg.h, TransformerTypes.h;
- E2E_&amp;lt;ProfileName&amp;gt;_E2EXf.h shall include: E2E_SM.h, E2E_&amp;lt;ProfileName&amp;gt;.h, E2E_E2EXf_Stc.h, E2E_MemMap.h;
- E2E_No_Check_E2EXf.h shall include: E2E_E2EXf_Stc.h, E2E_MemMap.h;
- E2E_PXX_E2EXf.h shall include: E2E_SM.h, E2E_MemMap.h, E2E.h, E2E_E2EXf_Stc.h;
- E2EXf_Version.h shall include no other files;
- E2E_No_Check_E2EXf.c shall include: E2E_No_Check_E2EXf.h, E2E_PXX_E2EXf.h, E2E_MemMap.h;
- E2E_PXX_E2EXf.c shall include: E2E_No_Check_E2EXf.h, E2E_PXX_E2EXf.h, E2E_MemMap.h, E2E_Mem.h;
- TransformerTypes.h shall include: Std_Types.h;</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXF_CON_01007_IncludeFileStructure</srcid><srcstatus/><internalId>655</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>
    <specobject>
      <id>E2EXf.Design.MemPartitioning.DefaultPartitionId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/project/design/pdf/EBASCE2EXF-288_Design_Specification-profiled.xml</sourcefile>
      <sourceline>20174</sourceline>
      <version>1</version>
      <description>All transformers with no Os application referenced by parameter XfrmOsApplicationRef (parameter is empty or disabled), shall be assigned to the default partition.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MemPartitioning.DefaultPartitionId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>
    <specobject>
      <id>E2EXf.Design.MemPartitioning.DeInitByPartitionId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/project/design/pdf/EBASCE2EXF-288_Design_Specification-profiled.xml</sourcefile>
      <sourceline>20190</sourceline>
      <version>1</version>
      <description>Each partition shall have a separate PartitionDeInit-function to de-initialize all transformers of this partition. The PartitionDeInit function shall be entitled E2EXf[_&amp;lt;PartitionId&amp;gt;]_DeInit(). The PartitionId infix and the preceding underscore shall be ommited completely in case of the default partition.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MemPartitioning.DeInitByPartitionId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>
    <specobject>
      <id>E2EXf.Design.MemPartitioning.InitByPartitionId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/project/design/pdf/EBASCE2EXF-288_Design_Specification-profiled.xml</sourcefile>
      <sourceline>20206</sourceline>
      <version>1</version>
      <description>Each partition shall have a separate PartitionInit-function to initialize all transformers of this partition. The PartitionInit function shall be entitled &amp;lt;Mip&amp;gt;[_&amp;lt;PartitionId&amp;gt;]_Init(). The PartitionId infix and the preceding underscore shall be ommited completely in case of the default partition.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MemPartitioning.InitByPartitionId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>
    <specobject>
      <id>E2EXf.Design.MemPartitioning.PartitionHoldingInitStatus</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/project/design/pdf/EBASCE2EXF-288_Design_Specification-profiled.xml</sourcefile>
      <sourceline>20222</sourceline>
      <version>1</version>
      <description>The initialization status variable of a transformer shall be assigned to the referenced PartitionId.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MemPartitioning.PartitionHoldingInitStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>
    <specobject>
      <id>E2EXf.Design.MemPartitioning.UniquePartitionId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/project/design/pdf/EBASCE2EXF-288_Design_Specification-profiled.xml</sourcefile>
      <sourceline>20238</sourceline>
      <version>1</version>
      <description>A unique ID PartitionId shall exist for each individual Os application referenced by parameter XfrmOsApplicationRef.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MemPartitioning.UniquePartitionId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>
    <specobject>
      <id>E2EXf.Design.MemPartitioning.XfrmOsApplicationRef</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/project/design/pdf/EBASCE2EXF-288_Design_Specification-profiled.xml</sourcefile>
      <sourceline>20254</sourceline>
      <version>1</version>
      <description>Configuration parameter XfrmOsApplicationRef shall reference an Os application to which the BSW belongs.   </description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MemPartitioning.XfrmOsApplicationRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>
    <specobject>
      <id>E2EXf.Design.MemPartitioning.RAMbyTransformerId</id>
      <status>approved</status>
      <source>EB design</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/project/design/pdf/EBASCE2EXF-288_Design_Specification-profiled.xml</sourcefile>
      <sourceline>20270</sourceline>
      <version>1</version>
      <description>The global data of the transformer functions &amp;lt;Mip&amp;gt;_&amp;lt;transformerId&amp;gt;and &amp;lt;Mip&amp;gt;_Inv_&amp;lt;transformerId&amp;gt; shall be assigned to dedicated  memory partitions by the PartitionId.</description>
      <needscoverage>
        <needscov><needsobj>tcs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MemPartitioning.RAMbyTransformerId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>
  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>lim.E2EXf.CS.FanInOut</id>
      <status>approved</status>
      <source>EB limitations</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/doc/public/releasenotes/Limitations.xml</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_33</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_121</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm</sourcefile>
      <sourceline>121</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_201</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm</sourcefile>
      <sourceline>201</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_205</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm</sourcefile>
      <sourceline>205</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_209</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm</sourcefile>
      <sourceline>209</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_213</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm</sourcefile>
      <sourceline>213</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_265</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm</sourcefile>
      <sourceline>265</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.ECUC_Xfrm_00021_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_348</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm</sourcefile>
      <sourceline>348</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_378</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm</sourcefile>
      <sourceline>378</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_474</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm</sourcefile>
      <sourceline>474</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_constr_09094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_480</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm</sourcefile>
      <sourceline>480</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_488</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm</sourcefile>
      <sourceline>488</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_510</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm</sourcefile>
      <sourceline>510</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_542</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm</sourcefile>
      <sourceline>542</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm_546</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf.xdm</sourcefile>
      <sourceline>546</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf_EBParameters.xdm_19</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf_EBParameters.xdm</sourcefile>
      <sourceline>19</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Init_WaitForFirstData_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>
  </specobjects>
    <specobjects doctype="src">
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf_Extension.xdm_65</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf_Extension.xdm</sourcefile>
      <sourceline>65</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_XDM_E_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf_Extension.xdm_69</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf_Extension.xdm</sourcefile>
      <sourceline>69</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_XDM_E_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf_Extension.xdm_80</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf_Extension.xdm</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_XDM_E_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>
    <specobject>
      <id>build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf_Extension.xdm_84</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/cache/E2E-Transformer-E2EXf-9.3.0_E2EXf-2.0.1-B817701/plugins/E2EXf_TS_TxDxM2I0R0/config/E2EXf_Extension.xdm</sourcefile>
      <sourceline>84</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_XDM_E_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.input.properties.E2EPropertiesRetrieverTest.test01_getProfileShortNameShallReturnAnEmptyOptionalWhenAutosarProfileNameMappingIsNotDefined</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/input/properties/E2EPropertiesRetrieverTest.java</sourcefile>
      <sourceline>47</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MCG.UnitTests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.input.properties.E2EPropertiesRetrieverTest.test02_getProfileShortNameShallReturnShortNameOfTheHighestConsecutiveVersion</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/input/properties/E2EPropertiesRetrieverTest.java</sourcefile>
      <sourceline>64</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MCG.UnitTests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.input.properties.E2EPropertiesRetrieverTest.test03_getIsMethodProfileShallReturnFalseAsDefaultValue</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/input/properties/E2EPropertiesRetrieverTest.java</sourcefile>
      <sourceline>82</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MCG.UnitTests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.input.properties.E2EPropertiesRetrieverTest.test04_getIsMethodProfileShallReturnFalseForInvalidValue</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/input/properties/E2EPropertiesRetrieverTest.java</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MCG.UnitTests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.input.properties.E2EPropertiesRetrieverTest.test05_getIsMethodProfileShallReturnTrue</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/input/properties/E2EPropertiesRetrieverTest.java</sourcefile>
      <sourceline>114</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MCG.UnitTests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.input.properties.E2EPropertiesRetrieverTest.test06_getE2EPropertiesShallReturnPropertyOfTheHighesVersion</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/input/properties/E2EPropertiesRetrieverTest.java</sourcefile>
      <sourceline>131</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MCG.UnitTests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.input.properties.E2EPropertiesRetrieverTest.test07_ConfiguredMinAndMaxValuesShallBeReadFromPropertiesFile</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/input/properties/E2EPropertiesRetrieverTest.java</sourcefile>
      <sourceline>167</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Properties.Check.Integer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.input.properties.E2EPropertiesRetrieverTest.test08_ExpectedDefaultValuesForMinAndMaxBoundary</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/input/properties/E2EPropertiesRetrieverTest.java</sourcefile>
      <sourceline>188</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Properties.Check.Integer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.intermediate.ProfileTest.test01_Equals</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/intermediate/ProfileTest.java</sourcefile>
      <sourceline>25</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MCG.UnitTests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.intermediate.ProfileTest.test02_HashCode</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/intermediate/ProfileTest.java</sourcefile>
      <sourceline>63</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MCG.UnitTests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.intermediate.ProfileTest.test03_MappedName</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/intermediate/ProfileTest.java</sourcefile>
      <sourceline>81</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MCG.UnitTests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.intermediate.profileconfig.SystemDescriptionParameterReaderTest.test01_defaultValuesForIEndToEndTransformationComSpecPropsMustBeInitialized</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/intermediate/profileconfig/SystemDescriptionParameterReaderTest.java</sourcefile>
      <sourceline>87</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MCG.UnitTests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.intermediate.profileconfig.SystemDescriptionParameterReaderTest.test02_defaultPropertiesInConfig</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/intermediate/profileconfig/SystemDescriptionParameterReaderTest.java</sourcefile>
      <sourceline>106</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MCG.UnitTests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.intermediate.profileconfig.SystemDescriptionParameterReaderTest.test03_AnErrorShallBeReportedIfValueOfParameterExceededsMaxBoundary</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/intermediate/profileconfig/SystemDescriptionParameterReaderTest.java</sourcefile>
      <sourceline>124</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Properties.Check.Integer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.intermediate.profileconfig.SystemDescriptionParameterReaderTest.test04_AnErrorShallBeReportedIfValueOfParameterIsBelowMinBoundary</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/intermediate/profileconfig/SystemDescriptionParameterReaderTest.java</sourcefile>
      <sourceline>140</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Properties.Check.Integer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.intermediate.profileconfig.SystemDescriptionParameterReaderTest.test05_ADefaultValueShallBeReturnedIfParameterValueIsOutOfBounds</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/intermediate/profileconfig/SystemDescriptionParameterReaderTest.java</sourcefile>
      <sourceline>156</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Properties.Check.Integer</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.intermediate.profileconfig.SystemDescriptionParameterReaderTest.test06_defaultValueOfTransitionToInvalidExtendedInComSpecPropsShallBeTrue</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/intermediate/profileconfig/SystemDescriptionParameterReaderTest.java</sourcefile>
      <sourceline>181</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MCG.UnitTests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.intermediate.profileconfig.SystemDescriptionParameterReaderTest.test07_noValueOfTransitionToInvalidExtendedInComSpecProps</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/intermediate/profileconfig/SystemDescriptionParameterReaderTest.java</sourcefile>
      <sourceline>201</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MCG.UnitTests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>eb.tresos.e2exf.test.generator.intermediate.profileconfig.SystemDescriptionParameterReaderTest.test08_defaultValueOfTransitionToInvalidExtendedInTransformationDescriptionShallBeTrue</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/junit/plugin.Test_E2EXfExt.Autosar/Java/eb/tresos/e2exf/test/generator/intermediate/profileconfig/SystemDescriptionParameterReaderTest.java</sourcefile>
      <sourceline>226</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.MCG.UnitTests</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/build/reqm/common_req/E2EXf_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(E2EXf.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>497</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_01_P04_InP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_01_P04_InP_SomeIpXf/source/application/E2EXf_ComTest_01_P04_InP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for in-place buffering for profile 04:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (enabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignal.

  This test also verifies that if profiles are disabled in the project configuration other than P04,
  the test shall compile without error.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_P04ConfigType and E2E_SMConfigType are initialized with
  values listed below.

    Parameter / transformerId                                |  E2EXf_P04_InP_SomeIpXf_Tx1    | E2EXf_Inv_P04_InP_SomeIpXf_Rx1 |
  -----------------------------------------------------------|--------------------------------|--------------------------------|
  XfrmISignalRef                                             | ISignal_P04_InP_SomeIpXf_Tx1   |  ISignal_P04_InP_SomeIpXf_Rx1  |
  E2E profile                                                |              P04               |               P04              |
  Serializing transformer                                    |            SomeIpXf            |             SomeIpXf           |
  Buffering                                                  |            In-Place            |             In-Place           |
  -------------E2E_P04Config---------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                  |              1U                |               1U               |
  EndToEndTransformationISignalProps.minDataLength           |              96U               |               96U              |
  EndToEndTransformationISignalProps.maxDataLength           |             1120U              |              1120U             |
  EndToEndTransformationDescription.offset                   |              64U               |               64U              |
  EndToEndTransformationDescription.maxDeltaCounter          |              1U                |               1U               |
  -------------E2E_SMConfig----------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.windowSizeValid          |              N/A               |               1U               |
  EndToEndTransformationDescription.minOkStateInit           |              N/A               |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit        |              N/A               |               0U               |
  EndToEndTransformationDescription.minOkStateValid          |              N/A               |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid       |              N/A               |               0U               |
  EndToEndTransformationDescription.minOkStateInvalid        |              N/A               |               1U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     |              N/A               |               0U               |
  EndToEndTransformationDescription.windowSizeInit           |              N/A               |               1U               |
  EndToEndTransformationDescription.windowSizeInvalid        |              N/A               |               1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  |              N/A               |              FALSE             |
  EndToEndTransformationDescription.transitToInvalidExtended |              N/A               |              FALSE             |

  Consequently because of other referenced I-SIGNAL in the XfrmISignalRef parameter of each transformer
  the correct Profile specific information shall be retrieved from the TRANSFORMATION-I-SIGNAL-PROPS
  via the referenced I-SIGNAL from the system model.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  -  VersionInfoApi is enabled
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignal
  (XfrmSignalChoice is configured to XfrmSignalRefChoice)

Pre-conditions on enabling and disabling of functions for the following profile
  - E2E P01 : disable
  - E2E P02 : disable
  - E2E P04 : enable
  - E2E P05 : disable
  - E2E P06 : disable

  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00037</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_02_P04_OoP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_02_P04_OoP_SomeIpXf/source/application/E2EXf_ComTest_02_P04_OoP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 04:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignal.


  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

    Parameter / transformerId                                |  E2EXf_P04_OoP_SomeIpXf_Tx1    | E2EXf_Inv_P04_OoP_SomeIpXf_Rx1 |
  -----------------------------------------------------------|--------------------------------|--------------------------------|
  XfrmISignalRef                                             | ISignal_P04_OoP_SomeIpXf_Tx1   |  ISignal_P04_OoP_SomeIpXf_Rx1  |
  E2E profile                                                |              P04               |               P04              |
  Serializing transformer                                    |            SomeIpXf            |             SomeIpXf           |
  Buffering                                                  |           Out-of-Place         |            Out-of-Place        |
  -------------E2E_P04Config---------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                  |              1U                |               1U               |
  EndToEndTransformationISignalProps.minDataLength           |              96U               |               96U              |
  EndToEndTransformationISignalProps.maxDataLength           |             2512U              |              2512U             |
  EndToEndTransformationDescription.offset                   |              64U               |               64U              |
  EndToEndTransformationDescription.maxDeltaCounter          |              1U                |               1U               |
  -------------E2E_SMConfig----------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid          |              N/A               |               1U               |
  EndToEndTransformationDescription.minOkStateInit           |              N/A               |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit        |              N/A               |               0U               |
  EndToEndTransformationDescription.minOkStateValid          |              N/A               |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid       |              N/A               |               0U               |
  EndToEndTransformationDescription.minOkStateInvalid        |              N/A               |               1U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     |              N/A               |               0U               |
  EndToEndTransformationDescription.windowSizeInit           |              N/A               |               1U               |
  EndToEndTransformationDescription.windowSizeInvalid        |              N/A               |               1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  |              N/A               |              FALSE             |
  EndToEndTransformationDescription.transitToInvalidExtended |              N/A               |              FALSE             |

  Consequently because of other referenced I-SIGNAL in the XfrmISignalRef parameter of each transformer
  the correct Profile specific information shall be retrieved from the TRANSFORMATION-I-SIGNAL-PROPS
  via the referenced I-SIGNAL from the system model.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).
  - Pre-conditions on imported System / Software Component Description:
      Profile specific information is set in TransformationISignalProps as part of an ISignal
      (XfrmSignalChoice is configured to XfrmSignalRefChoice)

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_03_P04_OoP_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_03_P04_OoP_ComXf/source/application/E2EXf_ComTest_03_P04_OoP_ComXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 04:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (disabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

    Parameter / transformerId  |    E2EXf_P04_OoP_ComXf_Tx1     |  E2EXf_Inv_P04_OoP_ComXf_Rx1    |
  -----------------------------|--------------------------------|---------------------------------|
  XfrmISignalGroupRef          | ISignalGroup_P04_OoP_ComXf_Tx1 |  ISignalGroup_P04_OoP_ComXf_Rx1 |
  E2E profile                  |              P04               |               P04               |
  Serializing transformer      |             ComXf              |              ComXf              |
  Buffering                    |           Out-of-Place         |            Out-of-Place         |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  - VersionInfoApi is disabled
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_04_P04_OoP_SomeIpXf_MRec_ComSpecProps</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_04_P04_OoP_SomeIpXf_MRec_ComSpecProps/source/application/E2EXf_ComTest_04_P04_OoP_SomeIpXf_MRec_ComSpecProps.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 04:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that the generated configuration object of type E2E_P04ConfigType is
  initialized by EndToEndTransformationComSpecProps instead of
  EndToEndTransformationDescription.
  
  This test also verifies that the generated member disableEndToEndStateMachine 
  of configuration object of type E2E_PXXConfig is generated with the same value
  that is configured for system model configuration parameter
  EndToEndTransformationComSpecProps.disableEndToEndStateMachine for a deserializing
  transformer that is used in a sender/receiver type communication.
  
  For further information please refer to the
  Equivalence Class Partitioning: At configuration level test strategy description.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  Note that the listed elements shall be initialized from the
  EndToEndTransformationComSpecProps instead of the EndToEndTransformationDescription
  configured in the SimpleData_TestElement:
  - MaxDeltaCounter

  Values in parenthesis, in the below table, are the values configured
  in the EndToEndTransformationDescription.

    Parameter / transformerId                                    |  E2EXf_Inv_Ecu2Receiver1 | E2EXf_Inv_Ecu2Receiver2 |
  ---------------------------------------------------------------|--------------------------|-------------------------|
  XfrmISignalRef                                                 |   ISignal_Ecu1ToEcu2     |    ISignal_Ecu1ToEcu2   |
  E2E profile                                                    |          P04             |        P04              |
  Serializing transformer                                        |        SomeIpXf          |      SomeIpXf           |
  Buffering                                                      |       Out-of-Place       |     Out-of-Place        |
  -------------E2E_P04Config-------------------------------------|--------------------------|-------------------------|
  EndToEndTransformationISignalProps.dataID                      |           4U             |        4U               |
  EndToEndTransformationISignalProps.minDataLength               |          96U             |        96U              |
  EndToEndTransformationISignalProps.maxDataLength               |         1120U            |       1120U             |
  EndToEndTransformationDescription.offset                       |          64U             |        64U              |
  EndToEndTransformationComSpecProps.maxDeltaCounter             |         4U (1U)          |      6U (1U)            |
  -------------E2E_SMConfig--------------------------------------|--------------------------|-------------------------|
  EndToEndTransformationComSpecProps.WindowSizeValid             |          10U             |        1U               |
  EndToEndTransformationComSpecProps.minOkStateInit              |           5U             |        1U               |
  EndToEndTransformationComSpecProps.maxErrorStateInit           |           1U             |        0U               |
  EndToEndTransformationComSpecProps.minOkStateValid             |           7U             |        1U               |
  EndToEndTransformationComSpecProps.maxErrorStateValid          |           3U             |        0U               |
  EndToEndTransformationComSpecProps.minOkStateInvalid           |           6U             |        1U               |
  EndToEndTransformationComSpecProps.maxErrorStateInvalid        |           2U             |        0U               |
  EndToEndTransformationComSpecProps.windowSizeInit              |           1U             |        1U               |
  EndToEndTransformationComSpecProps.windowSizeInvalid           |           1U             |        1U               |
  EndToEndTransformationComSpecProps.clearFromValidToInvalid     |          FALSE           |       FALSE             |
  EndToEndTransformationComSpecProps.transitToInvalidExtended    |          FALSE           |       FALSE             |
  -------------E2E_PXXConfig-------------------------------------|--------------------------|-------------------------|
  EndToEndTransformationComSpecProps.disableEndToEndStateMachine |          TRUE            |       FALSE             |

  Consequently because of other referenced I-SIGNAL in the XfrmISignalRef parameter of each transformer
  the correct Profile specific information shall be retrieved from the TRANSFORMATION-I-SIGNAL-PROPS
  via the referenced I-SIGNAL from the system model.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).

  EndToEndTransformationComSpecProps and EndToEndTransformationDescription associated with
  Ecu2Receiver1 and Ecu2Receiver2 are configured as mentioned in the
  Equivalence Class Partitioning: At configuration level test strategy description above.

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>19</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine.TRUE.SR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine.FALSE.SR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_05_P01_InP_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_05_P01_InP_ComXf/source/application/E2EXf_ComTest_05_P01_InP_ComXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for in-place buffering for profile 01:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test also verifies that if profiles are disabled in the project configurations other than
  P01, the test shall compile without error.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.

  Permutation:
  Please see Equivalence Class Partitioning testing method below.

&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  For each permutation golden reference files are provided for the expected generated
  files in corresponding "reference_pX" folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level:

  The generated value of the E2EXF_XFRMBUFFERLENGTH_TYPE macro depends on the
  XfrmBufferLengthType parameter. It is verified that the functions compile
  when parameter is set with the permutor to the following values:

  Parameter / Permutation |            p0           |          p1          |
  ------------------------|-------------------------|----------------------|
  XfrmBufferLengthType    | UINT16                  | UINT32               |
  -------------------------------------------------------------------------|
  DataIDMode              | LOWER-12-BIT            | ALTERNATING-8-BIT    |
                          | (E2E_P01_DATAID_NIBBLE) | (E2E_P01_DATAID_ALT) |
  -------------------------------------------------------------------------|
  dataIdNibbleOffset      | 12U                     | 0U                   |

  This test verifies that the generated configuration object of
  types E2E_P01ConfigType and E2E_SMConfigType are initialized with
  values listed below, which are configured identically in each permutation:

       Parameter / transformerId                             |     E2EXf_P01_InP_ComXf_Tx1    |  E2EXf_Inv_P01_InP_ComXf_Rx1   |
  -----------------------------------------------------------|--------------------------------|--------------------------------|
  XfrmISignalGroupRef                                        | ISignalGroup_P01_InP_ComXf_Tx1 | ISignalGroup_P01_InP_ComXf_Rx1 |
  E2E profile                                                |                P01             |               P01              |
  Serializing transformer                                    |               ComXf            |              ComXf             |
  Buffering                                                  |              In-Place          |             In-Place           |
  -------------E2E_P01Config---------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                  |                1U              |               1U               |
  EndToEndTransformationISignalProps.dataLength              |               96U              |              96U               |
  EndToEndTransformationDescription.counterOffset            |                8U              |               8U               |
  EndToEndTransformationDescription.crcOffset                |                0U              |               0U               |
  EndToEndTransformationDescription.maxDeltaCounterInit      |                1U              |               1U               |
  EndToEndTransformationDescription.maxNoNewOrRepeatedData   |               14U              |              14U               |
  EndToEndTransformationDescription.syncCounterInit          |                1U              |               1U               |
  -------------E2E_SMConfig----------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid          |                -               |               3U               |
  EndToEndTransformationDescription.minOkStateInit           |                -               |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit        |                -               |               1U               |
  EndToEndTransformationDescription.minOkStateValid          |                -               |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid       |                -               |               1U               |
  EndToEndTransformationDescription.minOkStateInvalid        |                -               |               2U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     |                -               |               1U               |
  EndToEndTransformationDescription.windowSizeInit           |                -               |               1U               |
  EndToEndTransformationDescription.windowSizeInvalid        |                -               |               1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  |                -               |              FALSE             |
  EndToEndTransformationDescription.transitToInvalidExtended |                -               |              FALSE             |

  DataIDMode shall be set to:
      - E2E_P01_DATAID_BOTH if EndToEndTransformationDescription.dataIDMode == all16Bit
      - E2E_P01_DATAID_ALT if EndToEndTransformationDescription.dataIDMode == alternating8Bit
      - E2E_P01_DATAID_LOW if EndToEndTransformationDescription.dataIDMode == lower8Bit
      - E2E_P01_DATAID_NIBBLE if EndToEndTransformationDescription.dataIDMode == nibble

  MaxDeltaCounterInit shall be set to:
      - EndToEndTransformationDescription.maxDeltaCounter-1
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on enabling and disabling of functions for the following profile
  - E2E P01 : enable
  - E2E P04 : disable

  - Golden reference files for expected generated files are provided in the reference folder:
    E2EXf_PartitionApi.c, E2EXf_PartitionApi.h,
    E2EXf_Cfg.h, E2EXf_Api.h.

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00037</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.XFRMBUFFERLENGTHTYPE_ISUINT32</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_06_P01_OoP_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_06_P01_OoP_ComXf/source/application/E2EXf_ComTest_06_P01_OoP_ComXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 01:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignalGroup.

  This test also verifies that if profiles are disabled in the project configurations other than
  P01, the test shall compile without error.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.

  Permutation:
  Please see Equivalence Class Partitioning testing method below.

&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  For each permutation golden reference files are provided for the expected generated
  files in corresponding "reference_pX" folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level:

  The generated value of the E2EXF_XFRMBUFFERLENGTH_TYPE macro depends on the
  XfrmBufferLengthType parameter. It is verified that the functions compile
  when parameter is set with the permutor to the following values:

  Parameter / Permutation |   p0   |   p1   |
  ------------------------|--------|--------|
  XfrmBufferLengthType    | UINT16 | UINT32 |

  This test verifies that the generated configuration object of
  types E2E_P01ConfigType and E2E_SMConfigType are initialized with
  values listed below, which are configured identically in each permutation:

       Parameter / transformerId                             |     E2EXf_P01_OoP_ComXf_Tx1    |  E2EXf_Inv_P01_OoP_ComXf_Rx1   |
  -----------------------------------------------------------|--------------------------------|--------------------------------|
  XfrmISignalGroupRef                                        | ISignalGroup_P01_OoP_ComXf_Tx1 | ISignalGroup_P01_OoP_ComXf_Rx1 |
  E2E profile                                                |                P01             |               P01              |
  Serializing transformer                                    |               ComXf            |              ComXf             |
  Buffering                                                  |           Out-of-Place         |           Out-of-Place         |
  -------------E2E_P01Config---------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                  |                 1U             |               1U               |
  EndToEndTransformationISignalProps.dataLength              |                96U             |              96U               |
  EndToEndTransformationDescription.counterOffset            |                 8U             |               8U               |
  EndToEndTransformationDescription.crcOffset                |                 0U             |               0U               |
  EndToEndTransformationDescription.dataIdNibbleOffset       |                12U             |              12U               |
  EndToEndTransformationDescription.dataIDMode               |      E2E_P01_DATAID_NIBBLE     |      E2E_P01_DATAID_NIBBLE     |
  EndToEndTransformationDescription.maxDeltaCounterInit      |                 1U             |               1U               |
  EndToEndTransformationDescription.maxNoNewOrRepeatedData   |                14U             |              14U               |
  EndToEndTransformationDescription.syncCounterInit          |                 1U             |               1U               |
  -------------E2E_SMConfig----------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid          |                N/A             |               3U               |
  EndToEndTransformationDescription.minOkStateInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit        |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateValid          |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid       |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateInvalid        |                N/A             |               2U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     |                N/A             |               1U               |
  EndToEndTransformationDescription.windowSizeInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.windowSizeInvalid        |                N/A             |               1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  |                N/A             |              FALSE             |
  EndToEndTransformationDescription.transitToInvalidExtended |                N/A             |              FALSE             |

 DataIDMode shall be set to:
      - E2E_P01_DATAID_BOTH if EndToEndTransformationDescription.dataIDMode == all16Bit
      - E2E_P01_DATAID_ALT if EndToEndTransformationDescription.dataIDMode == alternating8Bit
      - E2E_P01_DATAID_LOW if EndToEndTransformationDescription.dataIDMode == lower8Bit
      - E2E_P01_DATAID_NIBBLE if EndToEndTransformationDescription.dataIDMode == nibble

 MaxDeltaCounterInit shall be set to:
      - EndToEndTransformationDescription.maxDeltaCounter-1

&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files for expected generated files are provided in the reference folder:
    E2EXf_PartitionApi.c, E2EXf_PartitionApi.h,
    E2EXf_Cfg.h, E2EXf_Api.h.
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignalGroup
  (XfrmSignalChoice is configured to XfrmSignalGroupRefChoice)

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.XFRMBUFFERLENGTHTYPE_ISUINT32</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_07_P01_InP_ComXf_PRE_R4_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_07_P01_InP_ComXf_PRE_R4_2/source/application/E2EXf_ComTest_07_P01_InP_ComXf_PRE_R4_2.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for in-place buffering for profile 01:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

    Parameter / transformerId  |    E2EXf_P01_InP_ComXf_PRE_R4_2_Tx1     |  E2EXf_Inv_P01_InP_ComXf_PRE_R4_2_Rx1    |
  -----------------------------|-----------------------------------------|------------------------------------------|
  XfrmISignalGroupRef          | ISignalGroup_P01_InP_ComXf_PRE_R4_2_Tx1 |  ISignalGroup_P01_InP_ComXf_PRE_R4_2_Rx1 |
  E2E profile                  |                   P01                   |                   P01                    |
  Serializing transformer      |                  ComXf                  |                  ComXf                   |
  Buffering                    |                 In-Place                |                 In-Place                 |

&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_08_P01_OoP_ComXf_PRE_R4_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_08_P01_OoP_ComXf_PRE_R4_2/source/application/E2EXf_ComTest_08_P01_OoP_ComXf_PRE_R4_2.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 01:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignalGroup.

&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

    Parameter / transformerId |        E2EXf_P04_OoP_ComXf_Tx1          |  E2EXf_Inv_P01_OoP_ComXf_PRE_R4_2_Rx1   |
  ----------------------------|-----------------------------------------|-----------------------------------------|
  XfrmISignalGroupRef         | ISignalGroup_P01_OoP_ComXf_PRE_R4_2_Tx1 | ISignalGroup_P01_OoP_ComXf_PRE_R4_2_Rx1 |
  E2E profile                 |                    P01                  |                   P01                   |
  Serializing transformer     |                   ComXf                 |                  ComXf                  |
  Buffering                   |                Out-of-Place             |                Out-of-Place             |

&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignalGroup
  (XfrmSignalChoice is configured to XfrmSignalGroupRefChoice)

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_09_P01_OoP_ComXf_MRec_ComSpecProps</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_09_P01_OoP_ComXf_MRec_ComSpecProps/source/application/E2EXf_ComTest_09_P01_OoP_ComXf_MRec_ComSpecProps.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 01:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignalGroup.

  This test also verifies that if profiles are disabled in the project configurations other than
  P01, the test shall compile without error.

  This test verifies that the generated configuration object of type E2E_P01ConfigType is
  initialized by EndToEndTransformationComSpecProps instead of
  EndToEndTransformationDescription. For further information please refer to the
  Equivalence Class Partitioning: At configuration level test strategy description.

  This test also verifies that configuration container EndToEndTransformationComSpecProps
  is ignored for sending transformer which is associated with SenderReceiverToSignalGroupMapping
  that references via ContextPortRef an RPortPrototype.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  Note that the listed elements shall be initialized from the
  EndToEndTransformationComSpecProps instead of the EndToEndTransformationDescription
  configured in the SimpleData_TestElement:
  - MaxDeltaCounterInit
  - MaxNoNewOrRepeatedData
  - SyncCounterInit

  Values in parenthesis, in the below table, are the values configured
  in the EndToEndTransformationDescription.

    Parameter / transformerId                                | E2EXf_Inv_Ecu2Receiver1 | E2EXf_Inv_Ecu2Receiver2 |
  -----------------------------------------------------------|-------------------------|-------------------------|
  XfrmISignalGroupRef                                        | ISignalGroup_Ecu1ToEcu2 | ISignalGroup_Ecu1ToEcu2 |
  E2E profile                                                |          P01            |         P01             |
  Serializing transformer                                    |         ComXf           |        ComXf            |
  Buffering                                                  |       Out-of-Place      |     Out-of-Place        |
  EndToEndTransformationComSpecProps.maxDeltaCounter         |         4U (2U)         |         6U (2U)         |
  -------------E2E_P01Config---------------------------------|-------------------------|-------------------------|
  EndToEndTransformationISignalProps.dataID                  |          1U             |          1U             |
  EndToEndTransformationISignalProps.dataLength              |         96U             |         96U             |
  EndToEndTransformationDescription.counterOffset            |          8U             |          8U             |
  EndToEndTransformationDescription.crcOffset                |          0U             |          0U             |
  EndToEndTransformationDescription.dataIdNibbleOffset       |         12U             |         12U             |
  EndToEndTransformationDescription.dataIDMode               |  E2E_P01_DATAID_NIBBLE  | E2E_P01_DATAID_NIBBLE   |
  EndToEndTransformationComSpecProps.maxDeltaCounterInit     |          3U             |          5U             |
  EndToEndTransformationComSpecProps.maxNoNewOrRepeatedData  |        4U (14U)         |    Not set (14U)        |
  EndToEndTransformationComSpecProps.syncCounterInit         |        2U (1U)          |    Not set (1U)         |
  -------------E2E_SMConfig----------------------------------|-------------------------|-------------------------|
  EndToEndTransformationDescription.WindowSizeValid          |         10U             |          3U             |
  EndToEndTransformationDescription.minOkStateInit           |          5U             |          1U             |
  EndToEndTransformationDescription.maxErrorStateInit        |          3U             |          2U             |
  EndToEndTransformationDescription.minOkStateValid          |          7U             |          1U             |
  EndToEndTransformationDescription.maxErrorStateValid       |          3U             |          6U             |
  EndToEndTransformationDescription.minOkStateInvalid        |          6U             |          2U             |
  EndToEndTransformationDescription.maxErrorStateInvalid     |          2U             |          4U             |
  EndToEndTransformationDescription.windowSizeInit           |          1U             |          1U             |
  EndToEndTransformationDescription.windowSizeInvalid        |          1U             |          1U             |
  EndToEndTransformationDescription.clearFromValidToInvalid  |         FALSE           |         FALSE           |
  EndToEndTransformationDescription.transitToInvalidExtended |         FALSE           |         FALSE           |


    Parameter / transformerId                               | E2EXf_Ecu2Sender_AssociatedWithRPort |
  ----------------------------------------------------------|--------------------------------------|
  XfrmISignalGroupRef                                       |       ISignalGroup_Ecu2ToEcu1        |
  E2E profile                                               |                P01                   |
  Serializing transformer                                   |               ComXf                  |
  Buffering                                                 |             Out-of-Place             |
  EndToEndTransformationComSpecProps.maxDeltaCounter        |               9U (2U)                |
  -------------E2E_P01Config--------------------------------|--------------------------------------|
  EndToEndTransformationISignalProps.dataID                 |                1U                    |
  EndToEndTransformationISignalProps.dataLength             |               96U                    |
  EndToEndTransformationDescription.counterOffset           |                8U                    |
  EndToEndTransformationDescription.crcOffset               |                0U                    |
  EndToEndTransformationDescription.dataIdNibbleOffset      |               12U                    |
  EndToEndTransformationDescription.dataIDMode              |        E2E_P01_DATAID_NIBBLE         |
  EndToEndTransformationComSpecProps.maxDeltaCounterInit    |              8U (1U)                 |
  EndToEndTransformationComSpecProps.maxNoNewOrRepeatedData |              4U (14U)                |
  EndToEndTransformationComSpecProps.syncCounterInit        |              2U (1U)                 |


  DataIDMode shall be set to:
    - E2E_P01_DATAID_BOTH if EndToEndTransformationDescription.dataIDMode == all16Bit
    - E2E_P01_DATAID_ALT if EndToEndTransformationDescription.dataIDMode == alternating8Bit
    - E2E_P01_DATAID_LOW if EndToEndTransformationDescription.dataIDMode == lower8Bit
    - E2E_P01_DATAID_NIBBLE if EndToEndTransformationDescription.dataIDMode == nibble

  MaxDeltaCounterInit shall be set to:
    - EndToEndTransformationComSpecProps.maxDeltaCounter-1
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignalGroup
  (XfrmSignalChoice is configured to XfrmSignalGroupRefChoice)

  EndToEndTransformationComSpecProps and EndToEndTransformationDescription associated with
  Ecu2Receiver1 and Ecu2Receiver2 are configured as mentioned in the
  Equivalence Class Partitioning: At configuration level test strategy description above.

  Sending transformer serializes an ISignalGroup that is associated with a SenderReceiverToSignalGroupMapping
  that references via ContextPortRef an RPortPrototype.

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.EndToEndTransformationComSpecProps</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_10_P02_InP_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_10_P02_InP_ComXf/source/application/E2EXf_ComTest_10_P02_InP_ComXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for in-place buffering for profile 02:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (enabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignalGroup.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level:

  This test verifies that the generated configuration object of
  types E2E_P02ConfigType and E2E_SMConfigType are initialized with
  values listed below:

                                                                                       |                              transformerId                      |
                                                                                       |-----------------------------------------------------------------|
  Parameter                                                  | Type parameter name     |    E2EXf_P02_InP_ComXf_Tx1     |  E2EXf_Inv_P02_InP_ComXf_Rx1   |
  -----------------------------------------------------------|-------------------------|--------------------------------|--------------------------------|
  XfrmISignalGroupRef                                        |                         | ISignalGroup_P02_InP_ComXf_Tx1 | ISignalGroup_P02_InP_ComXf_Rx1 |
  E2E profile                                                |                         |                P02             |               P02              |
  Serializing transformer                                    |                         |               ComXf            |              ComXf             |
  Buffering                                                  |                         |              In-Place          |             In-Place           |
  EndToEndTransformationDescription.maxDeltaCounter          |                         |                 2U             |               2U               |
  -------------E2E_P02Config---------------------------------|-------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                  | DataIDList              |        array of length 16      |        array of length 16      |
  EndToEndTransformationISignalProps.dataLength              | DataLength              |                96U             |              96U               |
  EndToEndTransformationDescription.maxDeltaCounterInit      | MaxDeltaCounterInit     |                 1U             |               1U               |
  EndToEndTransformationDescription.maxNoNewOrRepeatedData   | MaxNoNewOrRepeatedData  |                15U             |              15U               |
  EndToEndTransformationDescription.syncCounterInit          | SyncCounterInit         |                 1U             |               1U               |
  -------------E2E_SMConfig----------------------------------|-------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid          | WindowSizeValid         |                N/A             |               3U               |
  EndToEndTransformationDescription.minOkStateInit           | MinOkStateInit          |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit        | MaxErrorStateInit       |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateValid          | MinOkStateValid         |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid       | MaxErrorStateValid      |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateInvalid        | MinOkStateInvalid       |                N/A             |               2U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     | MaxErrorStateInvalid    |                N/A             |               1U               |
  EndToEndTransformationDescription.windowSizeInit           | WindowSizeInit          |                -               |               1U               |
  EndToEndTransformationDescription.windowSizeInvalid        | WindowSizeInvalid       |                -               |               1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  | ClearFromValidToInvalid |                -               |              FALSE             |
  EndToEndTransformationDescription.transitToInvalidExtended | TransitToInvalidExtended|                -               |              FALSE             |

  MaxDeltaCounterInit shall be set to:
    - EndToEndTransformationDescription.maxDeltaCounter-1
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  -  VersionInfoApi is enabled
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignalGroup
  (XfrmSignalChoice is configured to XfrmSignalGroupRefChoice)

  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00107</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_11_P02_OoP_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_11_P02_OoP_ComXf/source/application/E2EXf_ComTest_11_P02_OoP_ComXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 02:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level:

  This test verifies that the generated configuration object of
  types E2E_P02ConfigType and E2E_SMConfigType are initialized with
  values listed below:

                                                                                    |                              transformerId                      |
                                                                                    |-----------------------------------------------------------------|
  Parameter                                                  | Type parameter name    |    E2EXf_P02_OoP_ComXf_Tx1     |  E2EXf_Inv_P02_OoP_ComXf_Rx1   |
  -----------------------------------------------------------|------------------------|--------------------------------|--------------------------------|
  XfrmISignalGroupRef                                        |                        | ISignalGroup_P02_OoP_ComXf_Tx1 | ISignalGroup_P02_OoP_ComXf_Rx1 |
  E2E profile                                                |                        |                P02             |               P02              |
  Serializing transformer                                    |                        |               ComXf            |              ComXf             |
  Buffering                                                  |                        |             Out-of-Place       |            Out-of-Place        |
  EndToEndTransformationDescription.maxDeltaCounter          |                        |                 3U             |               3U               |
  -------------E2E_P02Config---------------------------------|------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                  | DataIDList             |        array of length 16      |        array of length 16      |
  EndToEndTransformationISignalProps.dataLength              | DataLength             |                96U             |              96U               |
  EndToEndTransformationDescription.maxDeltaCounterInit      | MaxDeltaCounterInit    |                 2U             |               2U               |
  EndToEndTransformationDescription.maxNoNewOrRepeatedData   | MaxNoNewOrRepeatedData |                15U             |              15U               |
  EndToEndTransformationDescription.syncCounterInit          | SyncCounterInit        |                 1U             |               1U               |
  -------------E2E_SMConfig----------------------------------|------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid          | WindowSizeValid        |                N/A             |               3U               |
  EndToEndTransformationDescription.minOkStateInit           | MinOkStateInit         |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit        | MaxErrorStateInit      |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateValid          | MinOkStateValid        |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid       | MaxErrorStateValid     |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateInvalid        | MinOkStateInvalid      |                N/A             |               2U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     | MaxErrorStateInvalid   |                N/A             |               1U               |
  EndToEndTransformationDescription.windowSizeInit           | WindowSizeInit          |                -               |               1U               |
  EndToEndTransformationDescription.windowSizeInvalid        | WindowSizeInvalid       |                -               |               1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  | ClearFromValidToInvalid |                -               |              FALSE             |
  EndToEndTransformationDescription.transitToInvalidExtended | TransitToInvalidExtended|                -               |              FALSE             |

  MaxDeltaCounterInit shall be set to:
    - EndToEndTransformationDescription.maxDeltaCounter-1
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_12_P02_InP_ComXf_PRE_R4_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_12_P02_InP_ComXf_PRE_R4_2/source/application/E2EXf_ComTest_12_P02_InP_ComXf_PRE_R4_2.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for in-place buffering for profile 02:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (disabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignalGroup.

&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

    Parameter / transformerId  |    E2EXf_P02_OoP_ComXf_Tx1     |  E2EXf_Inv_P02_OoP_ComXf_Rx1    |
  -----------------------------|--------------------------------|---------------------------------|
  XfrmISignalGroupRef          | ISignalGroup_P02_OoP_ComXf_Tx1 |  ISignalGroup_P02_OoP_ComXf_Rx1 |
  E2E profile                  |              P02               |               P02               |
  Serializing transformer      |             ComXf              |              ComXf              |
  Buffering                    |            In-Place            |             In-Place            |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  - VersionInfoApi is disabled
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignalGroup
  (XfrmSignalChoice is configured to XfrmSignalGroupRefChoice)

  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_13_P02_OoP_ComXf_PRE_R4_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_13_P02_OoP_ComXf_PRE_R4_2/source/application/E2EXf_ComTest_13_P02_OoP_ComXf_PRE_R4_2.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 02:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

    Parameter / transformerId |    E2EXf_P02_OoP_ComXf_PRE_R4_2_Tx1     | E2EXf_Inv_P02_OoP_ComXf_PRE_R4_2_Rx1    |
  ----------------------------|-----------------------------------------|-----------------------------------------|
  XfrmISignalGroupRef         | ISignalGroup_P02_OoP_ComXf_PRE_R4_2_Tx1 | ISignalGroup_P02_OoP_ComXf_PRE_R4_2_Rx1 |
  E2E profile                 |                    P02                  |                    P02                  |
  Serializing transformer     |                   ComXf                 |                   ComXf                 |
  Buffering                   |                Out-of-Place             |                Out-of-Place             |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_14_P02_InP_ComXf_MRec_ComSpecProps</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_14_P02_InP_ComXf_MRec_ComSpecProps/source/application/E2EXf_ComTest_14_P02_InP_ComXf_MRec_ComSpecProps.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for in-place buffering for profile 02:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignalGroup.

  This test verifies that the generated configuration object of type E2E_P02ConfigType
  E2E_SMConfig are initialized by EndToEndTransformationComSpecProps instead of
  EndToEndTransformationDescription.

  This test also verifies that the generated member disableEndToEndStateMachine 
  of configuration object of type E2E_PXXConfig is generated with the same value
  that is configured for system model configuration parameter
  EndToEndTransformationComSpecProps.disableEndToEndStateMachine for a deserializing
  transformer that is used in a sender/receiver type communication.

  For further information please refer to the
  Equivalence Class Partitioning: At configuration level test strategy description.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  Note that the listed elements shall be initialized from the
  EndToEndTransformationComSpecProps instead of the EndToEndTransformationDescription
  configured in the SimpleData_TestElement:
  - MaxDeltaCounterInit
  - MaxNoNewOrRepeatedData
  - SyncCounterInit

  Values in parenthesis, in the below table, are the values configured
  in the EndToEndTransformationDescription.

                                                                                            |                transformerId                      |
                                                                                            |---------------------------------------------------|
    Parameter                                                    | Type parameter name      | E2EXf_Inv_Ecu2Receiver1 | E2EXf_Inv_Ecu2Receiver2 |
  ---------------------------------------------------------------|--------------------------|-------------------------|-------------------------|
  XfrmISignalGroupRef                                            |                          | ISignalGroup_Ecu1ToEcu2 | ISignalGroup_Ecu1ToEcu2 |
  E2E profile                                                    |                          |          P02            |         P02             |
  Serializing transformer                                        |                          |         ComXf           |        ComXf            |
  Buffering                                                      |                          |        In-Place         |       In-Place          |
  EndToEndTransformationComSpecProps.maxDeltaCounter             |                          |         4U (2U)         |         6U (2U)         |
  -------------E2E_P02Config-------------------------------------|--------------------------|-------------------------|-------------------------|
  EndToEndTransformationISignalProps.dataID                      | DataIDList               |   array of length 16    |   array of length 16    |
  EndToEndTransformationISignalProps.dataLength                  | DataLength               |         96U             |         96U             |
  EndToEndTransformationDescription.maxDeltaCounterInit          | MaxDeltaCounterInit      |          3U             |          5U             |
  EndToEndTransformationComSpecProps.maxNoNewOrRepeatedData      | MaxNoNewOrRepeatedData   |        4U (15U)         |    Not set (15U)        |
  EndToEndTransformationComSpecProps.syncCounterInit             | SyncCounterInit          |        2U (1U)          |    Not set (1U)         |
  EndToEndTransformationDescription.offset                       | Offset                   |          0U             |         0U              |
  -------------E2E_SMConfig--------------------------------------|--------------------------|-------------------------|-------------------------|
  EndToEndTransformationComSpecProps.WindowSizeValid             | WindowSizeValid          |         10U (3U)        |          3U (3U)        |
  EndToEndTransformationDescription.minOkStateInit               | MinOkStateInit           |          5U             |          1U             |
  EndToEndTransformationDescription.maxErrorStateInit            | MaxErrorStateInit        |          1U             |          0U             |
  EndToEndTransformationDescription.minOkStateValid              | MinOkStateValid          |          1U             |          1U             |
  EndToEndTransformationDescription.maxErrorStateValid           | MaxErrorStateValid       |          3U             |          0U             |
  EndToEndTransformationDescription.minOkStateInvalid            | MinOkStateInvalid        |          6U             |          2U             |
  EndToEndTransformationDescription.maxErrorStateInvalid         | MaxErrorStateInvalid     |          2U             |          0U             |
  EndToEndTransformationComSpecProps.windowSizeInit              | WindowSizeInit           |          3U (1U)        |          2U (1U)        |
  EndToEndTransformationComSpecProps.windowSizeInvalid           | WindowSizeInvalid        |          3U (1U)        |          2U (1U)        |
  EndToEndTransformationComSpecProps.clearFromValidToInvalid     | ClearFromValidToInvalid  |         FALSE (FALSE)   |         TRUE (FALSE)    |
  EndToEndTransformationComSpecProps.transitToInvalidExtended    | TransitToInvalidExtended |         FALSE (FALSE)   |         TRUE (FALSE)    |
  -------------E2E_PXXConfig-------------------------------------|--------------------------|-------------------------|-------------------------|
  EndToEndTransformationComSpecProps.disableEndToEndStateMachine | DisableEndToEndStateMachine |      TRUE            |      not configured     |

  MaxDeltaCounterInit shall be set to:
    - EndToEndTransformationComSpecProps.maxDeltaCounter-1
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignalGroup
  (XfrmSignalChoice is configured to XfrmSignalGroupRefChoice)

  EndToEndTransformationComSpecProps and EndToEndTransformationDescription associated with
  Ecu2Receiver1 and Ecu2Receiver2 are configured as mentioned in the
  Equivalence Class Partitioning: At configuration level test strategy description above.


Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>18</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine.TRUE.SR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine.FALSE.SR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_15_P05_InP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_15_P05_InP_SomeIpXf/source/application/E2EXf_ComTest_15_P05_InP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for in-place buffering for profile 04:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (enabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignal.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_P05ConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                             |   E2EXf_P05_InP_SomeIpXf_Tx1   | E2EXf_Inv_P05_InP_SomeIpXf_Rx1 | E2EXf_Inv_P05_InP_SomeIpXf_Rx2 |
  -----------------------------------------------------------|--------------------------------|--------------------------------|--------------------------------|
  XfrmISignalRef                                             |  ISignal_P05_InP_SomeIpXf_Tx1  |  ISignal_P05_InP_SomeIpXf_Rx1  | ISignal_P05_InP_SomeIpXf_Rx2   |
  E2E profile                                                |                P05             |               P05              |               P05              |
  Serializing transformer                                    |              SomeIpXf          |             SomeIpXf           |             SomeIpXf           |
  Buffering                                                  |              In-Place          |             In-Place           |             In-Place           |
  -------------E2E_P05Config---------------------------------|--------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                  |                 1U             |               1U               |               1U               |
  EndToEndTransformationISignalProps.dataLength              |                184U            |              184U              |               88U              |
  EndToEndTransformationDescription.offset                   |                 64U            |               64U              |               64U              |
  EndToEndTransformationDescription.maxDeltaCounter          |                 1U             |               1U               |               1U               |
  -------------E2E_SMConfig----------------------------------|--------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.windowSizeValid          |                N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.minOkStateInit           |                N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit        |                N/A             |               0U               |               0U               |
  EndToEndTransformationDescription.minOkStateValid          |                N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid       |                N/A             |               0U               |               0U               |
  EndToEndTransformationDescription.minOkStateInvalid        |                N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     |                N/A             |               0U               |               0U               |
  EndToEndTransformationDescription.windowSizeInit           |              N/A               |               1U               |               1U               |
  EndToEndTransformationDescription.windowSizeInvalid        |              N/A               |               1U               |               1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  |              N/A               |              FALSE             |              FALSE             |
  EndToEndTransformationDescription.transitToInvalidExtended |              N/A               |              FALSE             |              FALSE             |

  Consequently because of other referenced I-SIGNAL in the XfrmISignalRef parameter of each transformer
  the correct Profile specific information shall be retrieved from the TRANSFORMATION-I-SIGNAL-PROPS
  via the referenced I-SIGNAL from the system model.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  -  VersionInfoApi is enabled
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignal
  (XfrmSignalChoice is configured to XfrmSignalRefChoice)
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_16_P05_OoP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_16_P05_OoP_SomeIpXf/source/application/E2EXf_ComTest_16_P05_OoP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 05:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_P05ConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                             |   E2EXf_P05_OoP_SomeIpXf_Tx1   | E2EXf_Inv_P05_OoP_SomeIpXf_Rx1 | E2EXf_Inv_P05_OoP_SomeIpXf_Rx2 |
  -----------------------------------------------------------|--------------------------------|--------------------------------|--------------------------------|
  XfrmISignalRef                                             |  ISignal_P05_OoP_SomeIpXf_Tx1  |  ISignal_P05_OoP_SomeIpXf_Rx1  | ISignal_P05_OoP_SomeIpXf_Rx2   |
  E2E profile                                                |                P05             |               P05              |               P05              |
  Serializing transformer                                    |              SomeIpXf          |             SomeIpXf           |             SomeIpXf           |
  Buffering                                                  |            Out-of-Place        |           Out-of-Place         |           Out-of-Place         |
  -------------E2E_P05Config---------------------------------|--------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                  |                 1U             |               1U               |               1U               |
  EndToEndTransformationISignalProps.dataLength              |                184U            |              184U              |               88U              |
  EndToEndTransformationDescription.offset                   |                 64U            |               64U              |               64U              |
  EndToEndTransformationDescription.maxDeltaCounter          |                 1U             |               1U               |               1U               |
  -------------E2E_SMConfig----------------------------------|--------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.windowSizeValid          |                N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.minOkStateInit           |                N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit        |                N/A             |               0U               |               0U               |
  EndToEndTransformationDescription.minOkStateValid          |                N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid       |                N/A             |               0U               |               0U               |
  EndToEndTransformationDescription.minOkStateInvalid        |                N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     |                N/A             |               0U               |               0U               |
  EndToEndTransformationDescription.windowSizeInit           |                N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.windowSizeInvalid        |                N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  |                N/A             |              FALSE             |              FALSE             |
  EndToEndTransformationDescription.transitToInvalidExtended |                N/A             |              FALSE             |              FALSE             |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_17_P05_OoP_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_17_P05_OoP_ComXf/source/application/E2EXf_ComTest_17_P05_OoP_ComXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 05:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (disabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_P05ConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                             |     E2EXf_P05_OoP_ComXf_Tx1    |  E2EXf_Inv_P05_OoP_ComXf_Rx1   |
  -----------------------------------------------------------|--------------------------------|--------------------------------|
  XfrmISignalRef                                             | ISignalGroup_P05_OoP_ComXf_Tx1 | ISignalGroup_P05_OoP_ComXf_Rx1 |
  E2E profile                                                |                P05             |               P05              |
  Serializing transformer                                    |               ComXf            |              ComXf             |
  Buffering                                                  |            Out-of-Place        |           Out-of-Place         |
  -------------E2E_P05Config---------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                  |                 1U             |               1U               |
  EndToEndTransformationISignalProps.dataLength              |                160U            |              160U              |
  EndToEndTransformationDescription.offset                   |                 0U             |               0U               |
  EndToEndTransformationDescription.maxDeltaCounter          |                 1U             |               1U               |
  -------------E2E_SMConfig----------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.windowSizeValid          |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit        |                N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateValid          |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid       |                N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateInvalid        |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     |                N/A             |               0U               |
  EndToEndTransformationDescription.windowSizeInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.windowSizeInvalid        |                N/A             |               1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  |                N/A             |              FALSE             |
  EndToEndTransformationDescription.transitToInvalidExtended |                N/A             |              FALSE             |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  - VersionInfoApi is disabled
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_18_P05_InP_SomeIpXf_MRec_ComSpecProps</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_18_P05_InP_SomeIpXf_MRec_ComSpecProps/source/application/E2EXf_ComTest_18_P05_InP_SomeIpXf_MRec_ComSpecProps.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 05:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that the generated configuration object of type E2E_P05ConfigType is
  initialized by EndToEndTransformationComSpecProps instead of
  EndToEndTransformationDescription. For further information please refer to the
  Equivalence Class Partitioning: At configuration level test strategy description.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  Note that the listed elements shall be initialized from the
  EndToEndTransformationComSpecProps instead of the EndToEndTransformationDescription
  configured in the SimpleData_TestElement:
  - MaxDeltaCounter

  Values in parenthesis, in the below table, are the values configured
  in the EndToEndTransformationDescription.

    Parameter / transformerId                                |  E2EXf_Inv_Ecu2Receiver1 | E2EXf_Inv_Ecu2Receiver2 |
  -----------------------------------------------------------|--------------------------|-------------------------|
  XfrmISignalRef                                             |   ISignal_Ecu1ToEcu2     |    ISignal_Ecu1ToEcu2   |
  E2E profile                                                |          P05             |        P05              |
  Serializing transformer                                    |        SomeIpXf          |      SomeIpXf           |
  Buffering                                                  |        In-Place          |      In-Place           |
  -------------E2E_P05Config---------------------------------|--------------------------|-------------------------|
  EndToEndTransformationISignalProps.dataID                  |           4U             |        4U               |
  EndToEndTransformationISignalProps.dataLength              |           96U            |        96U              |
  EndToEndTransformationDescription.offset                   |           64U            |        64U              |
  EndToEndTransformationComSpecProps.maxDeltaCounter         |         4U (1U)          |      3U (1U)            |
  -------------E2E_SMConfig----------------------------------|--------------------------|-------------------------|
  EndToEndTransformationDescription.WindowSizeValid          |          10U             |        1U               |
  EndToEndTransformationDescription.minOkStateInit           |           5U             |        1U               |
  EndToEndTransformationDescription.maxErrorStateInit        |           1U             |        0U               |
  EndToEndTransformationDescription.minOkStateValid          |           7U             |        1U               |
  EndToEndTransformationDescription.maxErrorStateValid       |           3U             |        0U               |
  EndToEndTransformationDescription.minOkStateInvalid        |           6U             |        1U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     |           2U             |        0U               |
  EndToEndTransformationDescription.windowSizeInit           |          1U              |        1U               |
  EndToEndTransformationDescription.windowSizeInvalid        |          1U              |        1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  |         FALSE            |        FALSE            |
  EndToEndTransformationDescription.transitToInvalidExtended |         FALSE            |        FALSE            |

  Consequently because of other referenced I-SIGNAL in the XfrmISignalRef parameter of each transformer
  the correct Profile specific information shall be retrieved from the TRANSFORMATION-I-SIGNAL-PROPS
  via the referenced I-SIGNAL from the system model.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).

  EndToEndTransformationComSpecProps and EndToEndTransformationDescription associated with
  Ecu2Receiver1 and Ecu2Receiver2 are configured as mentioned in the
  Equivalence Class Partitioning: At configuration level test strategy description above.


Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>20</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_19_P06_InP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_19_P06_InP_SomeIpXf/source/application/E2EXf_ComTest_19_P06_InP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for in-place buffering for profile 06:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (enabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignal.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_P06ConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                             |   E2EXf_P06_InP_SomeIpXf_Tx1   | E2EXf_Inv_P06_InP_SomeIpXf_Rx1 |
  -----------------------------------------------------------|--------------------------------|--------------------------------|
  XfrmISignalRef                                             |  ISignal_P06_InP_SomeIpXf_Tx1  |  ISignal_P06_InP_SomeIpXf_Rx1  |
  E2E profile                                                |                P06             |               P06              |
  Serializing transformer                                    |              SomeIpXf          |             SomeIpXf           |
  Buffering                                                  |              In-Place          |             In-Place           |
  -------------E2E_P06Config---------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                  |                 1U             |               1U               |
  EndToEndTransformationISignalProps.minDataLength           |                96U             |               96U              |
  EndToEndTransformationISignalProps.maxDataLength           |                1120U           |              1120U             |
  EndToEndTransformationDescription.offset                   |                64U             |              64U               |
  EndToEndTransformationDescription.maxDeltaCounter          |                 1U             |               1U               |
  -------------E2E_SMConfig----------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid          |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit        |                N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateValid          |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid       |                N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateInvalid        |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     |                N/A             |               0U               |
  EndToEndTransformationDescription.windowSizeInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.windowSizeInvalid        |                N/A             |               1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  |                N/A             |              FALSE             |
  EndToEndTransformationDescription.transitToInvalidExtended |                N/A             |              FALSE             |

  Consequently because of other referenced I-SIGNAL in the XfrmISignalRef parameter of each transformer
  the correct Profile specific information shall be retrieved from the TRANSFORMATION-I-SIGNAL-PROPS
  via the referenced I-SIGNAL from the system model.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  -  VersionInfoApi is enabled
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignal
  (XfrmSignalChoice is configured to XfrmSignalRefChoice)

  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_20_P06_OoP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_20_P06_OoP_SomeIpXf/source/application/E2EXf_ComTest_20_P06_OoP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 06:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_P06ConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                             |   E2EXf_P06_OoP_SomeIpXf_Tx1   | E2EXf_Inv_P06_OoP_SomeIpXf_Rx1 |
  -----------------------------------------------------------|--------------------------------|--------------------------------|
  XfrmISignalRef                                             |  ISignal_P06_OoP_SomeIpXf_Tx1  |  ISignal_P06_OoP_SomeIpXf_Rx1  |
  E2E profile                                                |                P06             |               P06              |
  Serializing transformer                                    |              SomeIpXf          |             SomeIpXf           |
  Buffering                                                  |            Out-of-Place        |           Out-of-Place         |
  -------------E2E_P06Config---------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                  |                 1U             |               1U               |
  EndToEndTransformationISignalProps.minDataLength           |                96U             |               96U              |
  EndToEndTransformationISignalProps.maxDataLength           |                1120U           |              1120U             |
  EndToEndTransformationDescription.offset                   |                64U             |              64U               |
  EndToEndTransformationDescription.maxDeltaCounter          |                 1U             |               1U               |
  -------------E2E_SMConfig----------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid          |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit        |                N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateValid          |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid       |                N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateInvalid        |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     |                N/A             |               0U               |
  EndToEndTransformationDescription.windowSizeInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.windowSizeInvalid        |                N/A             |               1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  |                N/A             |              FALSE             |
  EndToEndTransformationDescription.transitToInvalidExtended |                N/A             |              FALSE             |

  Consequently because of other referenced I-SIGNAL in the XfrmISignalRef parameter of each transformer
  the correct Profile specific information shall be retrieved from the TRANSFORMATION-I-SIGNAL-PROPS
  via the referenced I-SIGNAL from the system model.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_21_P06_OoP_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_21_P06_OoP_ComXf/source/application/E2EXf_ComTest_21_P06_OoP_ComXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 06:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (disabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_P06ConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                             |     E2EXf_P06_OoP_ComXf_Tx1    |  E2EXf_Inv_P06_OoP_ComXf_Rx1   |
  -----------------------------------------------------------|--------------------------------|--------------------------------|
  XfrmISignalRef                                             | ISignalGroup_P06_OoP_ComXf_Tx1 | ISignalGroup_P06_OoP_ComXf_Rx1 |
  E2E profile                                                |                P06             |               P06              |
  Serializing transformer                                    |               ComXf            |              ComXf             |
  Buffering                                                  |            Out-of-Place        |           Out-of-Place         |
  -------------E2E_P06Config---------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                  |                 1U             |               1U               |
  EndToEndTransformationISignalProps.minDataLength           |                 96U            |               96U              |
  EndToEndTransformationISignalProps.maxDataLength           |                1120U           |              1120U             |
  EndToEndTransformationDescription.offset                   |                 0U             |               0U               |
  EndToEndTransformationDescription.maxDeltaCounter          |                 1U             |               1U               |
  -------------E2E_SMConfig----------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid          |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit        |                N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateValid          |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid       |                N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateInvalid        |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     |                N/A             |               0U               |
  EndToEndTransformationDescription.windowSizeInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.windowSizeInvalid        |                N/A             |               1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  |                N/A             |              FALSE             |
  EndToEndTransformationDescription.transitToInvalidExtended |                N/A             |              FALSE             |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  - VersionInfoApi is disabled

  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_22_P06_OoP_SomeIpXf_MRec_ComSpecProps</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_22_P06_OoP_ComXf_MRec_ComSpecProps/source/application/E2EXf_ComTest_22_P06_OoP_ComXf_MRec_ComSpecProps.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 04:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that the generated configuration object of type E2E_P06ConfigType is
  initialized by EndToEndTransformationComSpecProps instead of
  EndToEndTransformationDescription. For further information please refer to the
  Equivalence Class Partitioning: At configuration level test strategy description.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  Note that the listed elements shall be initialized from the
  EndToEndTransformationComSpecProps instead of the EndToEndTransformationDescription
  configured in the SimpleData_TestElement:
  - MaxDeltaCounter

  Values in parenthesis, in the below table, are the values configured
  in the EndToEndTransformationDescription.

    Parameter / transformerId                                |  E2EXf_Inv_Ecu2Receiver1 | E2EXf_Inv_Ecu2Receiver2 |
  -----------------------------------------------------------|--------------------------|-------------------------|
  XfrmISignalRef                                             | ISignalGroup_Ecu1ToEcu2  | ISignalGroup_Ecu1ToEcu2 |
  E2E profile                                                |          P06             |        P06              |
  Serializing transformer                                    |         ComXf            |       ComXf             |
  Buffering                                                  |        Out-of-Place      |      Out-of-Place       |
  -------------E2E_P06Config---------------------------------|--------------------------|-------------------------|
  EndToEndTransformationISignalProps.dataID                  |           1U             |        1U               |
  EndToEndTransformationISignalProps.minDataLength           |           96U            |        96U              |
  EndToEndTransformationISignalProps.maxDataLength           |           1120U          |        1120U            |
  EndToEndTransformationDescription.offset                   |           0U             |        0U               |
  EndToEndTransformationComSpecProps.maxDeltaCounter         |         4U (1U)          |      3U (1U)            |
  -------------E2E_SMConfig----------------------------------|--------------------------|-------------------------|
  EndToEndTransformationDescription.WindowSizeValid          |          10U             |        1U               |
  EndToEndTransformationDescription.minOkStateInit           |           5U             |        1U               |
  EndToEndTransformationDescription.maxErrorStateInit        |           1U             |        0U               |
  EndToEndTransformationDescription.minOkStateValid          |           7U             |        1U               |
  EndToEndTransformationDescription.maxErrorStateValid       |           3U             |        0U               |
  EndToEndTransformationDescription.minOkStateInvalid        |           6U             |        1U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     |           2U             |        0U               |
  EndToEndTransformationDescription.windowSizeInit           |           1U             |        1U               |
  EndToEndTransformationDescription.windowSizeInvalid        |           1U             |        1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  |          FALSE           |        FALSE            |
  EndToEndTransformationDescription.transitToInvalidExtended |          FALSE           |        FALSE            |

  Consequently because of other referenced I-SIGNAL in the XfrmISignalRef parameter of each transformer
  the correct Profile specific information shall be retrieved from the TRANSFORMATION-I-SIGNAL-PROPS
  via the referenced I-SIGNAL from the system model.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).

  EndToEndTransformationComSpecProps and EndToEndTransformationDescription associated with
  Ecu2Receiver1 and Ecu2Receiver2 are configured as mentioned in the
  Equivalence Class Partitioning: At configuration level test strategy description above.

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_23_P07_InP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_23_P07_InP_SomeIpXf/source/application/E2EXf_ComTest_23_P07_InP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for in-place buffering for profile 07:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (enabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignal.

  As the configuration structs are initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_P07ConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                             |   E2EXf_P07_InP_SomeIpXf_Tx1   | E2EXf_Inv_P07_InP_SomeIpXf_Rx1 |
  -----------------------------------------------------------|--------------------------------|--------------------------------|
  XfrmISignalRef                                             |  ISignal_P07_InP_SomeIpXf_Tx1  |  ISignal_P07_InP_SomeIpXf_Rx1  |
  E2E profile                                                |                P07             |               P07              |
  Serializing transformer                                    |              SomeIpXf          |             SomeIpXf           |
  Buffering                                                  |              In-Place          |             In-Place           |
  -------------E2E_P07Config---------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                  |                 1U             |               1U               |
  EndToEndTransformationISignalProps.minDataLength           |                168U            |              168U              |
  EndToEndTransformationISignalProps.maxDataLength           |                1120U           |              1120U             |
  EndToEndTransformationDescription.offset                   |                64U             |              64U               |
  EndToEndTransformationDescription.maxDeltaCounter          |                 1U             |               1U               |
  -------------E2E_SMConfig----------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid          |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit        |                N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateValid          |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid       |                N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateInvalid        |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     |                N/A             |               0U               |
  EndToEndTransformationDescription.windowSizeInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.windowSizeInvalid        |                N/A             |               1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  |                N/A             |              FALSE             |
  EndToEndTransformationDescription.transitToInvalidExtended |                N/A             |              FALSE             |

  Consequently because of other referenced I-SIGNAL in the XfrmISignalRef parameter of each transformer
  the correct Profile specific information shall be retrieved from the TRANSFORMATION-I-SIGNAL-PROPS
  via the referenced I-SIGNAL from the system model.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  -  VersionInfoApi is enabled
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignal
  (XfrmSignalChoice is configured to XfrmSignalRefChoice)
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_24_P07_OoP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_24_P07_OoP_SomeIpXf/source/application/E2EXf_ComTest_24_P07_OoP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 07:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_P07ConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                             |   E2EXf_P07_OoP_SomeIpXf_Tx1   | E2EXf_Inv_P07_OoP_SomeIpXf_Rx1 |
  -----------------------------------------------------------|--------------------------------|--------------------------------|
  XfrmISignalRef                                             |  ISignal_P07_OoP_SomeIpXf_Tx1  |  ISignal_P07_OoP_SomeIpXf_Rx1  |
  E2E profile                                                |                P07             |               P07              |
  Serializing transformer                                    |              SomeIpXf          |             SomeIpXf           |
  Buffering                                                  |            Out-of-Place        |           Out-of-Place         |
  -------------E2E_P07Config---------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                  |                 1U             |               1U               |
  EndToEndTransformationISignalProps.minDataLength           |                168U            |              168U              |
  EndToEndTransformationISignalProps.maxDataLength           |                1120U           |              1120U             |
  EndToEndTransformationDescription.offset                   |                64U             |              64U               |
  EndToEndTransformationDescription.maxDeltaCounter          |                 1U             |               1U               |
  -------------E2E_SMConfig----------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid          |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit        |                N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateValid          |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid       |                N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateInvalid        |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     |                N/A             |               0U               |
  EndToEndTransformationDescription.windowSizeInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.windowSizeInvalid        |                N/A             |               1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  |                N/A             |              FALSE             |
  EndToEndTransformationDescription.transitToInvalidExtended |                N/A             |              FALSE             |

  Consequently because of other referenced I-SIGNAL in the XfrmISignalRef parameter of each transformer
  the correct Profile specific information shall be retrieved from the TRANSFORMATION-I-SIGNAL-PROPS
  via the referenced I-SIGNAL from the system model.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_25_P07_OoP_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_25_P07_OoP_ComXf/source/application/E2EXf_ComTest_25_P07_OoP_ComXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 07:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (disabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_P07ConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                             |     E2EXf_P07_OoP_ComXf_Tx1    |  E2EXf_Inv_P07_OoP_ComXf_Rx1   |
  -----------------------------------------------------------|--------------------------------|--------------------------------|
  XfrmISignalRef                                             | ISignalGroup_P07_OoP_ComXf_Tx1 | ISignalGroup_P07_OoP_ComXf_Rx1 |
  E2E profile                                                |                P07             |               P07              |
  Serializing transformer                                    |               ComXf            |              ComXf             |
  Buffering                                                  |            Out-of-Place        |           Out-of-Place         |
  -------------E2E_P07Config---------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                  |                 1U             |               1U               |
  EndToEndTransformationISignalProps.minDataLength           |                168U            |              168U              |
  EndToEndTransformationISignalProps.maxDataLength           |                1120U           |              1120U             |
  EndToEndTransformationDescription.offset                   |                 0U             |               0U               |
  EndToEndTransformationDescription.maxDeltaCounter          |                 1U             |               1U               |
  -------------E2E_SMConfig----------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid          |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit        |                N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateValid          |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid       |                N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateInvalid        |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     |                N/A             |               0U               |
  EndToEndTransformationDescription.windowSizeInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.windowSizeInvalid        |                N/A             |               1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  |                N/A             |              FALSE             |
  EndToEndTransformationDescription.transitToInvalidExtended |                N/A             |              FALSE             |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  - VersionInfoApi is disabled

  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_26_P07_OoP_ComXf_MRec_ComSpecProps</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_26_P07_OoP_ComXf_MRec_ComSpecProps/source/application/E2EXf_ComTest_26_P07_OoP_ComXf_MRec_ComSpecProps.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 07:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that the generated configuration object of type E2E_P07ConfigType is
  initialized by EndToEndTransformationComSpecProps instead of
  EndToEndTransformationDescription. For further information please refer to the
  Equivalence Class Partitioning: At configuration level test strategy description.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  Note that the listed elements shall be initialized from the
  EndToEndTransformationComSpecProps instead of the EndToEndTransformationDescription
  configured in the SimpleData_TestElement:
  - MaxDeltaCounter

  Values in parenthesis, in the below table, are the values configured
  in the EndToEndTransformationDescription.

    Parameter / transformerId                                |  E2EXf_Inv_Ecu2Receiver1 | E2EXf_Inv_Ecu2Receiver2 |
  -----------------------------------------------------------|--------------------------|-------------------------|
  XfrmISignalRef                                             | ISignalGroup_Ecu1ToEcu2  | ISignalGroup_Ecu1ToEcu2 |
  E2E profile                                                |          P07             |        P07              |
  Serializing transformer                                    |         ComXf            |       ComXf             |
  Buffering                                                  |        Out-of-Place      |      Out-of-Place       |
  -------------E2E_P07Config---------------------------------|--------------------------|-------------------------|
  EndToEndTransformationISignalProps.dataID                  |           1U             |        1U               |
  EndToEndTransformationISignalProps.minDataLength           |           168U           |        168U             |
  EndToEndTransformationISignalProps.maxDataLength           |           1120U          |        1120U            |
  EndToEndTransformationDescription.offset                   |           0U             |        0U               |
  EndToEndTransformationComSpecProps.maxDeltaCounter         |         4U (1U)          |      3U (1U)            |
  -------------E2E_SMConfig----------------------------------|--------------------------|-------------------------|
  EndToEndTransformationDescription.WindowSizeValid          |          10U             |        1U               |
  EndToEndTransformationDescription.minOkStateInit           |           5U             |        1U               |
  EndToEndTransformationDescription.maxErrorStateInit        |           1U             |        0U               |
  EndToEndTransformationDescription.minOkStateValid          |           7U             |        1U               |
  EndToEndTransformationDescription.maxErrorStateValid       |           3U             |        0U               |
  EndToEndTransformationDescription.minOkStateInvalid        |           6U             |        1U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     |           2U             |        0U               |
  EndToEndTransformationDescription.windowSizeInit           |           1U             |        1U               |
  EndToEndTransformationDescription.windowSizeInvalid        |           1U             |        1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  |          FALSE           |        FALSE            |
  EndToEndTransformationDescription.transitToInvalidExtended |          FALSE           |        FALSE            |

  Consequently because of other referenced I-SIGNAL in the XfrmISignalRef parameter of each transformer
  the correct Profile specific information shall be retrieved from the TRANSFORMATION-I-SIGNAL-PROPS
  via the referenced I-SIGNAL from the system model.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).

  EndToEndTransformationComSpecProps and EndToEndTransformationDescription associated with
  Ecu2Receiver1 and Ecu2Receiver2 are configured as mentioned in the
  Equivalence Class Partitioning: At configuration level test strategy description above.

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00163</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_27_NoCheck_InP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_27_NoCheck_InP_SomeIpXf/source/application/E2EXf_ComTest_27_NoCheck_InP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for in-place buffering without profile dependency:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (enabled)

  Note: Profile dependecy can only be disabled on receiver side.

  * The following generic services are supported:
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that disableEndToEndCheck is correctly retrieved from
  EndToEndTransformationComSpecProps as part of TransformationComSpecProps
  of a receiver port. Consequently, it overrules the configuration of the
  disabled check-transformer, disables E2E checks and removes profile
  dependency.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

       Parameter / transformerId                          | E2EXf_Inv_NoCheck_InP_SomeIpXf_Rx1 | E2EXf_Inv_NoCheck_InP_SomeIpXf_Rx2 |
  --------------------------------------------------------|------------------------------------|------------------------------------|
  XfrmISignalRef                                          |  ISignal_NoCheck_InP_SomeIpXf_Rx1  |  ISignal_NoCheck_InP_SomeIpXf_Rx1  |
  Serializing transformer                                 |               SomeIpXf             |               SomeIpXf             |
  Buffering                                               |             Out-of-Place           |             Out-of-Place           |
  EndToEndTransformationComSpecProps.disableEndToEndCheck |                false               |                 true               |

  Consequently because of other referenced R-PORT-PROTOTYPE in the
  XfrmVariableDataPrototypeInstanceRef parameter of each transformer
  the correct DISABLE-END-TO-END-CHECK information shall be retrieved from
  the END-TO-END-TRANSFORMATION-COM-SPEC-PROPS from the system model.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  - VersionInfoApi is enabled
Pre-conditions on imported System / Software Component Description:
  disableEndToEndCheck in EndToEndTransformationComSpecProps is enabled for a receiver port.
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_28_NoCheck_OoP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_28_NoCheck_OoP_SomeIpXf/source/application/E2EXf_ComTest_28_NoCheck_OoP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering without profile dependency:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (disabled)

  Note: Profile dependecy can only be disabled on receiver side.

  * The following generic services are supported:
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that disableEndToEndCheck is correctly retrieved from
  EndToEndTransformationComSpecProps as part of TransformationComSpecProps
  of a receiver port. Consequently, it overrules the configuration of the
  disabled check-transformer, disables E2E checks and removes profile
  dependency.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

       Parameter / transformerId                          | E2EXf_Inv_NoCheck_OoP_SomeIpXf_Rx1 | E2EXf_Inv_NoCheck_OoP_SomeIpXf_Rx2 |
  --------------------------------------------------------|------------------------------------|------------------------------------|
  XfrmISignalRef                                          |  ISignal_NoCheck_OoP_SomeIpXf_Rx1  |  ISignal_NoCheck_OoP_SomeIpXf_Rx1  |
  Serializing transformer                                 |               SomeIpXf             |               SomeIpXf             |
  Buffering                                               |               In-Place             |               In-Place             |
  EndToEndTransformationComSpecProps.disableEndToEndCheck |                false               |                 true               |

  Consequently because of other referenced R-PORT-PROTOTYPE in the
  XfrmVariableDataPrototypeInstanceRef parameter of each transformer
  the correct DISABLE-END-TO-END-CHECK information shall be retrieved from
  the END-TO-END-TRANSFORMATION-COM-SPEC-PROPS from the system model.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  - VersionInfoApi is disabled
Pre-conditions on imported System / Software Component Description:
  disableEndToEndCheck in EndToEndTransformationComSpecProps is enabled for a receiver port.
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_29_NoCheck_InP_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_29_NoCheck_InP_ComXf/source/application/E2EXf_ComTest_29_NoCheck_InP_ComXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for in-place buffering without profile dependency:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (enabled)

  Note: Profile dependecy can only be disabled on receiver side.

  * The following generic services are supported:
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that disableEndToEndCheck is correctly retrieved from
  EndToEndTransformationComSpecProps as part of TransformationComSpecProps
  of a receiver port. Consequently, it overrules the configuration of the
  disabled check-transformer, disables E2E checks and removes profile
  dependency.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

       Parameter / transformerId                          |  E2EXf_Inv_NoCheck_InP_ComXf_Rx1   |  E2EXf_Inv_NoCheck_InP_ComXf_Rx2   |
  --------------------------------------------------------|------------------------------------|------------------------------------|
  XfrmISignalRef                                          | ISignalGroup_NoCheck_InP_ComXf_Rx1 | ISignalGroup_NoCheck_InP_ComXf_Rx1 |
  Serializing transformer                                 |               ComXf                |              ComXf                 |
  Buffering                                               |              In-Place              |             In-Place               |
  EndToEndTransformationComSpecProps.disableEndToEndCheck |                false               |               true                 |

  Consequently because of other referenced R-PORT-PROTOTYPE in the
  XfrmVariableDataPrototypeInstanceRef parameter of each transformer
  the correct DISABLE-END-TO-END-CHECK information shall be retrieved from
  the END-TO-END-TRANSFORMATION-COM-SPEC-PROPS from the system model.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  - VersionInfoApi is enabled
Pre-conditions on imported System / Software Component Description:
  disableEndToEndCheck in EndToEndTransformationComSpecProps is enabled for a receiver port.
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_30_NoCheck_OoP_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_30_NoCheck_OoP_ComXf/source/application/E2EXf_ComTest_30_NoCheck_OoP_ComXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering without profile dependency:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (disabled)

  Note: Profile dependecy can only be disabled on receiver side.

  * The following generic services are supported:
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that disableEndToEndCheck is correctly retrieved from
  EndToEndTransformationComSpecProps as part of TransformationComSpecProps
  of a receiver port. Consequently, it overrules the configuration of the
  disabled check-transformer, disables E2E checks and removes profile
  dependency.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

       Parameter / transformerId                          |  E2EXf_Inv_NoCheck_OoP_ComXf_Rx1   |  E2EXf_Inv_NoCheck_OoP_ComXf_Rx2   |
  --------------------------------------------------------|------------------------------------|------------------------------------|
  XfrmISignalRef                                          | ISignalGroup_NoCheck_OoP_ComXf_Rx1 | ISignalGroup_NoCheck_OoP_ComXf_Rx1 |
  Serializing transformer                                 |               ComXf                |              ComXf                 |
  Buffering                                               |             Out-of-Place           |           Out-of-Place             |
  EndToEndTransformationComSpecProps.disableEndToEndCheck |                false               |               true                 |

  Consequently because of other referenced R-PORT-PROTOTYPE in the
  XfrmVariableDataPrototypeInstanceRef parameter of each transformer
  the correct DISABLE-END-TO-END-CHECK information shall be retrieved from
  the END-TO-END-TRANSFORMATION-COM-SPEC-PROPS from the system model.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  - VersionInfoApi is disabled
Pre-conditions on imported System / Software Component Description:
  disableEndToEndCheck in EndToEndTransformationComSpecProps is enabled for a receiver port.
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_31_P01ComXf_MultipleRec</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_31_P01ComXf_MultipleRec/source/application/test.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;

  This test verifies that for multiple receivers of a single ISignal (in combination with ComXf):
  - inverse transformers are generated for multiple receivers of a single ISignal (SWS_E2EXf_00025)
  - the configuration options in EndToEndTransformationComSpecProps have precedence over the
    options in EndToEndTransformationDescription and EndToEndTransformationISignalProps
    (SWS_E2EXf_00134).
  - correct configuration data is generated based on receiver specific specification of
    EndToEndTransformationComSpecProps (part of TransformationComSpecProps) in case of queued
    communication (SWS_E2EXf_00134).
  - the XfrmVariableDataPrototypeInstanceRef refer to the instance of a
    VariableDataPrototype which belongs to a subclass of an AtomicSwComponentType.
    (E2EXf.SWS_Xfrm_CONSTR_09095)

  - If XfrmVariableDataPrototypeInstanceRef is used for one transformer
    in a chain, it also has to be used for all other transformers in that chain.
    (E2EXf.SWS_Xfrm_CONSTR_09094) This test refers to the SomeIpXf test
    SomeIpXf_ComTest_14_SR_MultipleReceivers which has the same multiple receiver
    configuration but with the SomeIpXf in the transformer chain. Both test uses the
    same XfrmVariableDataPrototypeInstanceRef. The reference to the SomeIpXf Test is
    defined as precondition because this requirement does not only affect the E2EXf.

&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files, containing expected generated inverse transformer
  APIs (E2EXf.SWS_Xfrm_CONSTR_09095), for expected generated files are provided in the
  reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on imported System / Software Component Description:

  - Test case SomeIpXf_ComTest_14_SR_MultipleReceivers uses the same
    XfrmVariableDataPrototypeInstanceRef (E2EXf.SWS_Xfrm_CONSTR_09094)
  - Communication via ComSignalGroup by transformer chain ComXf + E2EXf
  - TransformationDescription of E2EXf specifies protection with Profile 01
  - General profile information is set in TransformationISignalProps
    as part of an ISignalGroup mapping to the InPort
  - Receiver specific profile information is set in TransformationComSpecProps
    as part of the queued ReceiverComSpec
  - Golden reference files are provided (see Reference File Tests test method in test description).


Test Execution: 

  01: Include generated diff-files of E2EXf_Cfg.h, E2EXf_PartitionApi.c, E2EXf_PartitionApi.h,
      E2EXf_Api.h
  02: VP (SWS_E2EXf_00134, E2EXf.SWS_Xfrm_CONSTR_09095):
      The generated files of execution step 01 and the reference files are identical.
  03: Call inverted transformer functions
  04: VP (SWS_E2EXf_00025, E2EXf.SWS_Xfrm_CONSTR_09095)
      Successful compilation of E2E transformer using configuration specified above.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_CONSTR_09094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_CONSTR_09095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_32_P04SomeIpXf_MultipleRec</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_32_P04SomeIpXf_MultipleRec/source/application/test.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;

  This test verifies that for multiple receivers of a single ISignal (in combination with SomeIpXf):
  - inverse transformers are generated for multiple receivers of a single ISignal (SWS_E2EXf_00025)
  - the configuration options in EndToEndTransformationComSpecProps have precedence over the
    options in EndToEndTransformationDescription and EndToEndTransformationISignalProps
    (SWS_E2EXf_00134).
  - correct configuration data is generated based on receiver specific specification of
    EndToEndTransformationComSpecProps (part of TransformationComSpecProps) in case of queued
    communication (SWS_E2EXf_00134).
  - the XfrmVariableDataPrototypeInstanceRef refer to the instance of a
    VariableDataPrototype which belongs to a subclass of an AtomicSwComponentType.
    (E2EXf.SWS_Xfrm_CONSTR_09095)

  - If XfrmVariableDataPrototypeInstanceRef is used for one transformer
    in a chain, it also has to be used for all other transformers in that chain.
    (E2EXf.SWS_Xfrm_CONSTR_09094) This test refers to the ComXf test
    ComXf_ComTest_05_MultipleRec which has the same multiple receiver
    configuration but with the ComXf in the transformer chain. Both tests use the
    same XfrmVariableDataPrototypeInstanceRef. The reference to the ComXf test is
    defined as precondition because this requirement does not only affect the E2EXf.

&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files, containing expected generated inverse transformer
  APIs (E2EXf.SWS_Xfrm_CONSTR_09095), for expected generated files are provided in the
  reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on imported System / Software Component Description:

  - Test case ComXf_ComTest_05_MultipleRec uses the same
    XfrmVariableDataPrototypeInstanceRef (E2EXf.SWS_Xfrm_CONSTR_09094)
  - Communication via ComSignal by transformer chain SomeIpXf + E2EXf
  - TransformationDescription of E2EXf specifies protection with Profile 04
  - General profile information is set in TransformationISignalProps
    as part of an ISignal mapping to the InPort
  - Receiver specific profile information is set in TransformationComSpecProps
    as part of the queued ReceiverComSpec
  - Golden reference files are provided (see Reference File Tests test method in test description).


Test Execution: 

  01: Include generated diff-files of E2EXf_Cfg.h, E2EXf_PartitionApi.c, E2EXf_PartitionApi.h,
      E2EXf_Api.h
  02: VP (SWS_E2EXf_00134, E2EXf.SWS_Xfrm_CONSTR_09095):
      The generated files of execution step 01 and the reference files are identical.
  03: Call inverted transformer functions
  04: VP (SWS_E2EXf_00025, E2EXf.SWS_Xfrm_CONSTR_09095)
      Successful compilation of E2E transformer using configuration specified above.


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00134</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>10</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_CONSTR_09094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_CONSTR_09095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_33_P01c_P05_MemPartitioning</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_33_P01c_P05_MemPartitioning/source/application/EbTest.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that transformers are correctly generated and transformer functions and
  data is mapped to the configured memory partitions. Furthermore it is verified that the
  generator provides the correct profile specific parts for each transformer and memory
  partition.

  The defined memory partitions with the assigned transformers are
  listed within test method: Equivalence Class Partitioning: at configuration level.

  This test also verifies that the name pattern transformerId is used for the APIs which belong to the
  BswModuleEntry referenced from a XfrmImplementationMapping by the XfrmTransformerBswModuleEntryRef
  or XfrmInvTransformerBswModuleEntryRef.(E2EXf.EB.transformerId)

  This test also verifies that the APIs that satisfies the name pattern transformerId, implement its
  BswModuleEntry which has the same shortName and is referenced by XfmTransformationBswModuleEntryRef.
  (E2EXf.SWS_Xfrm_00052)

  This test also verifies that the APIs that satisfies the name pattern transformerId, implement its
  BswModuleEntry which has the same shortName and is referenced by XfmInvTransformationBswModuleEntryRef.
  (E2EXf.SWS_Xfrm_00053)

  This test also verifies that the definition of ImplementationDataType E2EXf_CSTransactionHandleType with two sub-elements
  e2eCounter and e2eSourceId that are in the end mapped to a uint32 base type is generated within file E2EXf_Bswmd.arxml.
  (E2EXf.EB.E2EXf_CSTransactionHandleType)

  This test also indirectly covers the source requirements coverage for the XfrmOsApplicationRef parameter.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Equivalence Class Partitioning: at configuration level
  - Reference File Tests
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level:

  The parameter XfrmOsApplicationRef of each XfrmImplementationMapping determines to which memory
  partition the transformer is assigned to.

  XfrmImplementationMapping  | XfrmOsApplicationRef | generated files                        | used profiles |
  -----------------------------------------------------------------------------------------------------------|
  E2EXf_Sender1              | AsilDPartition       | E2EXf_AsilDPartition_PartitionApi.c/.h | PROFILE_01    |
  E2EXf_Sender2              | AsilDPartition       | E2EXf_AsilDPartition_PartitionApi.c/.h | PROFILE_05    |
  E2EXf_Inv_Receiver1        | QMPartition          | E2EXf_QMPartition_PartitionApi.c/.h    | PROFILE_01    |
  E2EXf_Inv_Receiver1A_NoLib | QMPartition          | E2EXf_QMPartition_PartitionApi.c/.h    |               |
  E2EXf_Inv_Receiver2        | disabled (Default    | E2EXf_PartitionApi.c/.h                | PROFILE_05    |
                             |   Memory partition)  |                                        |               |

  The E2EXf_Inv_Receiver1A_NoLib references same ISignalGroup and TransformationTechnology as
  E2EXf_Inv_Receiver1, but has disableEndToEndCheck set to true.
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_AsilDPartition_PartitionApi.c,
    - E2EXf_QMPartition_PartitionApi.c,
    - E2EXf_AsilDPartition_PartitionApi.h,
    - E2EXf_QMPartition_PartitionApi.h,
    - E2EXf_Bswmd.arxml,
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Pre-conditions on imported System / Software Component Description:
  - Transformation technologies PROFILE_01 and PROFILE_05 are defined.
  - At least one transformer has the parameter disableEndToEndCheck enabled (NoLib)
  - Golden reference files are provided (see Reference File Tests test method in test description).


Test Execution: 

  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP (E2EXf.EB.MemPartitioning.XfrmOsApplicationRef,
          E2EXf.EB.MemPartitioning.UniquePartitionId, E2EXf.EB.MemPartitioning.DefaultPartitionId,
          E2EXf.EB.MemPartitioning.RAMbyTransformerId,
          E2EXf.EB.MemPartitioning.PartitionHoldingInitStatus,
          E2EXf.EB.MemPartitioning.InitByPartitionId,
          E2EXf.EB.MemPartitioning.DeInitByPartitionId, E2EXf.EB.MemPartitioning.FileName,
          E2EXf.EB.MemPartitioning.DefaultFileName,
          E2EXf.EB.MemPartitioning.MemorySectionByPartitionId,
          E2EXf.EB.transformerId, E2EXf.SWS_Xfrm_00052,
          E2EXf.SWS_Xfrm_00053, E2EXf.EB.E2EXf_CSTransactionHandleType):
      The generated files of execution step 03 and the reference files are identical.
  05: Call initialization functions of all partitions according to test description
  06: Call de-initialization functions of all partitions according to test description
  07: Call inverted transformer functions
  08: VP (E2EXf.SWS_E2EXf_00020, E2EXf.SWS_E2EXf_00025, E2EXf.EB.transformerId,
          E2EXf.EB.SWS_E2EXf_00035, E2EXf.EB.SWS_E2EXf_00138)
      Successful compilation of E2E transformer using configuration specified above.


Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.Design.MemPartitioning.XfrmOsApplicationRef</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
        <provcov>
          <linksto>E2EXf.Design.MemPartitioning.UniquePartitionId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
        <provcov>
          <linksto>E2EXf.Design.MemPartitioning.DefaultPartitionId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
        <provcov>
          <linksto>E2EXf.Design.MemPartitioning.RAMbyTransformerId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
        <provcov>
          <linksto>E2EXf.Design.MemPartitioning.PartitionHoldingInitStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>E2EXf.Design.MemPartitioning.InitByPartitionId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
        <provcov>
          <linksto>E2EXf.Design.MemPartitioning.DeInitByPartitionId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.MemPartitioning.FileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.MemPartitioning.DefaultFileName</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.MemPartitioning.MemorySectionByPartitionId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.transformerId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>203</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_CSTransactionHandleType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_34_P01_P04_P05_Indep_Vars</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_34_P01_P04_P05_Indep_Vars/source/application/E2EXf_ComTest_34_P01_P04_P05_Indep_Vars.c</sourcefile>
      <sourceline>58</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that the E2E Transformer derives the required number of independent state data
  resources of types E2E_PXXProtectStateType, E2E_PXXCheckStateType, and E2E_SMCheckStateType to
  perform E2E Protection within the E2E Transformer module from the number of E2E-protected data
  uniquely identified with &amp;lttransformerId&amp;gt, protected by profile XX.

  This test verifies that the E2E Transformer shall derive the required number of independent
  statically initialized configuration objects of types E2E_PXXConfigType and E2E_SMConfigType to
  perform E2E Protection within the E2E Transformer, from the number of E2E-protected data uniquely
  identified with &amp;lttransformerId&amp;gt, protected by profile XX.

  In this test the profiles 01, 04 and 05 are used for verification of these requirements.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Instances of the imported types are defined for:
             E2E_P01CheckStateType      E2E_P01CheckState
             E2E_P01CheckStatusType     E2E_P01CheckStatus
             E2E_P01ConfigType          E2E_P01Config
             E2E_P01ProtectStateType    E2E_P01ProtectState
             E2E_P04CheckStateType      E2E_P04CheckState
             E2E_P04CheckStatusType     E2E_P04CheckStatus
             E2E_P04ConfigType          E2E_P04Config
             E2E_P04ProtectStateType    E2E_P04ProtectState
             E2E_P05CheckStateType      E2E_P05CheckState
             E2E_P05CheckStatusType     E2E_P05CheckStatus
             E2E_P05ConfigType          E2E_P05Config
             E2E_P05ProtectStateType    E2E_P05ProtectState
             E2E_PCheckStatusType       E2E_PCheckStatus
             E2E_SMCheckStateType       E2E_SMCheckState
             E2E_SMConfigType           E2E_SMConfig
  06: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00047</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_35_P05_InP_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_35_P05_InP_ComXf/source/application/E2EXf_ComTest_35_P05_InP_ComXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for In-place buffering for profile 05:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (disabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_P05ConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                             |     E2EXf_P05_InP_ComXf_Tx1    |  E2EXf_Inv_P05_InP_ComXf_Rx1   |
  -----------------------------------------------------------|--------------------------------|--------------------------------|
  XfrmISignalRef                                             | ISignalGroup_P05_InP_ComXf_Tx1 | ISignalGroup_P05_InP_ComXf_Rx1 |
  E2E profile                                                |                P05             |               P05              |
  Serializing transformer                                    |               ComXf            |              ComXf             |
  Buffering                                                  |              In-Place          |             In-Place           |
  -------------E2E_P05Config---------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                  |                 1U             |               1U               |
  EndToEndTransformationISignalProps.dataLength              |                120U            |              120U              |
  EndToEndTransformationDescription.offset                   |                 0U             |               0U               |
  EndToEndTransformationDescription.maxDeltaCounter          |                 1U             |               1U               |
  -------------E2E_SMConfig----------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.windowSizeValid          |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit        |                N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateValid          |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid       |                N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateInvalid        |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInvalid     |                N/A             |               0U               |
  EndToEndTransformationDescription.windowSizeInit           |                N/A             |               1U               |
  EndToEndTransformationDescription.windowSizeInvalid        |                N/A             |               1U               |
  EndToEndTransformationDescription.clearFromValidToInvalid  |                N/A             |              FALSE             |
  EndToEndTransformationDescription.transitToInvalidExtended |                N/A             |              FALSE             |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  - VersionInfoApi is disabled
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_36_P01A_OoP_ComXf_ASCE2EXF516</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_36_P01A_OoP_ComXf_ASCE2EXF516/source/application/E2EXf_ComTest_36_P01A_OoP_ComXf_ASCE2EXF516.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that a valid profile configuration is generated if an optional parameter
  is not existent in system description, i.e. system description is valid.
  This test is a regression test for bug fix ASCE2EXF-516.

  It shall be verified that profile configuration parameter DataIDNibbleOffset is initialized with
  0, although it is not configured.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;

Test Object: Generated initialization struct for profile configuration.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).
Pre-conditions on imported System / Software Component Description:
  Transformer is configured with E2E profile 1A:
    - DataIDMode = E2E_P01_DATAID_BOTH
    - DataIDNibbleOffset is not existent

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_37_P07_OoP_SomeIpXf_BufLen32</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_37_P07_OoP_SomeIpXf_BufLen32/source/application/E2EXf_ComTest_37_P07_OoP_SomeIpXf_BufLen32.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  In this test BufferLengthType uint32 is tested for out-of-place buffering for profile 07.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.XFRMBUFFERLENGTHTYPE_ISUINT32</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_38_P07_InP_SomeIpXf_BufLen32</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_38_P07_InP_SomeIpXf_BufLen32/source/application/E2EXf_ComTest_38_P07_InP_SomeIpXf_BufLen32.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
 In this test BufferLengthType uint32 is tested for out-of-place buffering for profile 07:
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignal
  (XfrmSignalChoice is configured to XfrmSignalRefChoice)
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.XFRMBUFFERLENGTHTYPE_ISUINT32</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_39_PJLR_InP_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_39_PJLR_InP_ComXf/source/application/E2EXf_ComTest_39_PJLR_InP_ComXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for In-place buffering for profile JLR:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (disabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_PJLRConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                         |     E2EXf_PJLR_InP_ComXf_Tx1    |  E2EXf_Inv_PJLR_InP_ComXf_Rx1   |
  -------------------------------------------------------|-------------------------------- |---------------------------------|
  XfrmISignalRef                                         | ISignalGroup_PJLR_InP_ComXf_Tx1 | ISignalGroup_PJLR_InP_ComXf_Rx1 |
  E2E profile                                            |                PJLR             |               PJLR              |
  Serializing transformer                                |               ComXf             |              ComXf              |
  Buffering                                              |              In-Place           |             In-Place            |
  -------------E2E_PJRLConfig----------------------------|---------------------------------|---------------------------------|
  EndToEndTransformationISignalProps.dataID              |                 1U              |               1U                |
  EndToEndTransformationISignalProps.dataLength          |                112U             |              112U               |
  EndToEndTransformationISignalProps.counterOffset       |                 8U              |               8U                |
  EndToEndTransformationDescription.crcOffset            |                 0U              |               0U                |
  EndToEndTransformationDescription.maxDeltaCounter      |                 2U              |               2U                |
  EndToEndTransformationDescription.dataIDMode           |       E2E_PJLR_DATAID_NIBBLE    |    E2E_PJLR_DATAID_NIBBLE       |
  EndToEndTransformationDescription.dataIDNibbleOffset   |                 12U             |               12U               |
  -------------E2E_SMConfig------------------------------|---------------------------------|---------------------------------|
  EndToEndTransformationDescription.WindowSizeValid      |                N/A              |               3U                |
  EndToEndTransformationDescription.minOkStateInit       |                N/A              |               1U                |
  EndToEndTransformationDescription.maxErrorStateInit    |                N/A              |               1U                |
  EndToEndTransformationDescription.minOkStateValid      |                N/A              |               1U                |
  EndToEndTransformationDescription.maxErrorStateValid   |                N/A              |               1U                |
  EndToEndTransformationDescription.minOkStateInvalid    |                N/A              |               2U                |
  EndToEndTransformationDescription.maxErrorStateInvalid |                N/A              |               1U                |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  - VersionInfoApi is disabled
  - Golden reference files are provided (see Reference File Tests test method in test description)..

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_40_PJLR_OoP_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_40_PJLR_OoP_ComXf/source/application/E2EXf_ComTest_40_PJLR_OoP_ComXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile JLR:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (disabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_PJLRConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                         |     E2EXf_PJLR_OoP_ComXf_Tx1    |  E2EXf_Inv_PJLR_OoP_ComXf_Rx1   |
  -------------------------------------------------------|-------------------------------- |---------------------------------|
  XfrmISignalRef                                         | ISignalGroup_PJLR_OoP_ComXf_Tx1 | ISignalGroup_PJLR_OoP_ComXf_Rx1 |
  E2E profile                                            |                PJLR             |               PJLR              |
  Serializing transformer                                |               ComXf             |              ComXf              |
  Buffering                                              |            Out-of-Place         |            Out-of-Place         |
  -------------E2E_PJRLConfig----------------------------|---------------------------------|---------------------------------|
  EndToEndTransformationISignalProps.dataID              |                 1U              |               1U                |
  EndToEndTransformationISignalProps.dataLength          |                112U             |              112U               |
  EndToEndTransformationISignalProps.counterOffset       |                 8U              |               8U                |
  EndToEndTransformationDescription.crcOffset            |                 0U              |               0U                |
  EndToEndTransformationDescription.maxDeltaCounter      |                 2U              |               2U                |
  EndToEndTransformationDescription.dataIDMode           |       E2E_PJLR_DATAID_NIBBLE    |    E2E_PJLR_DATAID_NIBBLE       |
  EndToEndTransformationDescription.dataIDNibbleOffset   |                 12U             |               12U               |
  -------------E2E_SMConfig------------------------------|---------------------------------|---------------------------------|
  EndToEndTransformationDescription.WindowSizeValid      |                N/A              |               3U                |
  EndToEndTransformationDescription.minOkStateInit       |                N/A              |               1U                |
  EndToEndTransformationDescription.maxErrorStateInit    |                N/A              |               1U                |
  EndToEndTransformationDescription.minOkStateValid      |                N/A              |               1U                |
  EndToEndTransformationDescription.maxErrorStateValid   |                N/A              |               1U                |
  EndToEndTransformationDescription.minOkStateInvalid    |                N/A              |               2U                |
  EndToEndTransformationDescription.maxErrorStateInvalid |                N/A              |               1U                |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  - VersionInfoApi is disabled
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_41_PJLR_InP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_41_PJLR_InP_SomeIpXf/source/application/E2EXf_ComTest_41_PJLR_InP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for in-place buffering for profile 04:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (enabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignal.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_PJLRConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                         |  E2EXf_PJLR_InP_SomeIpXf_Tx1  | E2EXf_Inv_PJLR_InP_SomeIpXf_Rx1 | E2EXf_Inv_PJLR_InP_SomeIpXf_Rx2 |
  -------------------------------------------------------|-------------------------------|---------------------------------|---------------------------------|
  XfrmISignalRef                                         | ISignal_PJLR_InP_SomeIpXf_Tx1 |  ISignal_PJLR_InP_SomeIpXf_Rx1  |  ISignal_PJLR_InP_SomeIpXf_Rx2  |
  E2E profile                                            |               PJLR            |               PJLR              |               PJLR              |
  Serializing transformer                                |              SomeIpXf         |              SomeIpXf           |              SomeIpXf           |
  Buffering                                              |             In-Place          |             In-Place            |             In-Place            |
  -------------E2E_PJRLConfig----------------------------|-------------------------------|---------------------------------|---------------------------------|
  EndToEndTransformationISignalProps.dataID              |               1U              |               1U                |               1U                |
  EndToEndTransformationISignalProps.dataLength          |              176U             |              176U               |               80U               |
  EndToEndTransformationISignalProps.counterOffset       |               72U             |               72U               |               72U               |
  EndToEndTransformationDescription.crcOffset            |               64U             |               64U               |               64U               |
  EndToEndTransformationDescription.maxDeltaCounter      |               2U              |               2U                |               2U                |
  EndToEndTransformationDescription.dataIDMode           |     E2E_PJLR_DATAID_NIBBLE    |    E2E_PJLR_DATAID_NIBBLE       |    E2E_PJLR_DATAID_NIBBLE       |
  EndToEndTransformationDescription.dataIDNibbleOffset   |                 76U           |               76U               |               76U               |
  -------------E2E_SMConfig------------------------------|-------------------------------|---------------------------------|---------------------------------|
  EndToEndTransformationDescription.WindowSizeValid      |                N/A            |               3U                |               3U                |
  EndToEndTransformationDescription.minOkStateInit       |                N/A            |               1U                |               1U                |
  EndToEndTransformationDescription.maxErrorStateInit    |                N/A            |               1U                |               1U                |
  EndToEndTransformationDescription.minOkStateValid      |                N/A            |               1U                |               1U                |
  EndToEndTransformationDescription.maxErrorStateValid   |                N/A            |               1U                |               1U                |
  EndToEndTransformationDescription.minOkStateInvalid    |                N/A            |               2U                |               2U                |
  EndToEndTransformationDescription.maxErrorStateInvalid |                N/A            |               1U                |               1U                |

  DataIDMode shall be set to:
      - E2E_PJLR_DATAID_BOTH if EndToEndTransformationDescription.dataIDMode == ALL-16-BIT
      - E2E_PJLR_DATAID_NIBBLE if EndToEndTransformationDescription.dataIDMode == LOWER-12-BIT
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  -  VersionInfoApi is enabled
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignal
  (XfrmSignalChoice is configured to XfrmSignalRefChoice)
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00162.PJLR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>622</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_42_PJLR_OoP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_42_PJLR_OoP_SomeIpXf/source/application/E2EXf_ComTest_42_PJLR_OoP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile JLR:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_PJLRConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                         |  E2EXf_PJLR_OoP_SomeIpXf_Tx1  | E2EXf_Inv_PJLR_OoP_SomeIpXf_Rx1 | E2EXf_Inv_PJLR_OoP_SomeIpXf_Rx2 |
  -------------------------------------------------------|-------------------------------|---------------------------------|---------------------------------|
  XfrmISignalRef                                         | ISignal_PJLR_OoP_SomeIpXf_Tx1 |  ISignal_PJLR_OoP_SomeIpXf_Rx1  |  ISignal_PJLR_OoP_SomeIpXf_Rx2  |
  E2E profile                                            |               PJLR            |               PJLR              |               PJLR              |
  Serializing transformer                                |              SomeIpXf         |              SomeIpXf           |              SomeIpXf           |
  Buffering                                              |            Out-of-Place       |             Out-of-Place        |            Out-of-Place         |
  -------------E2E_PJRLConfig----------------------------|-------------------------------|---------------------------------|---------------------------------|
  EndToEndTransformationISignalProps.dataID              |               1U              |               1U                |               1U                |
  EndToEndTransformationISignalProps.dataLength          |              176U             |              176U               |               80U               |
  EndToEndTransformationISignalProps.counterOffset       |               72U             |               72U               |               72U               |
  EndToEndTransformationDescription.crcOffset            |               64U             |               64U               |               64U               |
  EndToEndTransformationDescription.maxDeltaCounter      |               2U              |               2U                |               2U                |
  EndToEndTransformationDescription.dataIDMode           |     E2E_PJLR_DATAID_NIBBLE    |    E2E_PJLR_DATAID_NIBBLE       |    E2E_PJLR_DATAID_NIBBLE       |
  EndToEndTransformationDescription.dataIDNibbleOffset   |                 76U           |               76U               |               76U               |
  -------------E2E_SMConfig------------------------------|-------------------------------|---------------------------------|---------------------------------|
  EndToEndTransformationDescription.WindowSizeValid      |                N/A            |               3U                |               3U                |
  EndToEndTransformationDescription.minOkStateInit       |                N/A            |               1U                |               1U                |
  EndToEndTransformationDescription.maxErrorStateInit    |                N/A            |               1U                |               1U                |
  EndToEndTransformationDescription.minOkStateValid      |                N/A            |               1U                |               1U                |
  EndToEndTransformationDescription.maxErrorStateValid   |                N/A            |               1U                |               1U                |
  EndToEndTransformationDescription.minOkStateInvalid    |                N/A            |               2U                |               2U                |
  EndToEndTransformationDescription.maxErrorStateInvalid |                N/A            |               1U                |               1U                |

  DataIDMode shall be set to:
      - E2E_PJLR_DATAID_BOTH if EndToEndTransformationDescription.dataIDMode == ALL-16-BIT
      - E2E_PJLR_DATAID_NIBBLE if EndToEndTransformationDescription.dataIDMode == LOWER-12-BIT
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00162.PJLR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>623</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_43_PRN_InP_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_43_PRN_InP_ComXf/source/application/E2EXf_ComTest_43_PRN_InP_ComXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for In-place buffering for profile RN:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (disabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level:

  This test verifies that the generated configuration object of
  types E2E_PRNConfigType and E2E_SMConfigType are initialized with
  values listed below, which are configured identically in each permutation:

       Parameter / transformerId                           |     E2EXf_PRN_InP_ComXf_Tx1    |  E2EXf_Inv_PRN_InP_ComXf_Rx1   |
  ---------------------------------------------------------|--------------------------------|--------------------------------|
  XfrmISignalGroupRef                                      | ISignalGroup_PRN_InP_ComXf_Tx1 | ISignalGroup_PRN_InP_ComXf_Rx1 |
  E2E profile                                              |                PRN             |               PRN              |
  Serializing transformer                                  |               ComXf            |              ComXf             |
  Buffering                                                |              In-Place          |             In-Place           |
  -------------E2E_PRNConfig-------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                |                 1U             |               1U               |
  EndToEndTransformationISignalProps.dataLength            |                64U             |              64U               |
  EndToEndTransformationDescription.counterOffset          |                 8U             |               8U               |
  EndToEndTransformationDescription.crcOffset              |                 0U             |               0U               |
  EndToEndTransformationDescription.dataIdNibbleOffset     |                12U             |              12U               |
  EndToEndTransformationDescription.dataIDMode             |      E2E_PRN_DATAID_NIBBLE     |      E2E_PRN_DATAID_NIBBLE     |
  EndToEndTransformationDescription.maxDeltaCounterInit    |                 1U             |               1U               |
  EndToEndTransformationDescription.maxNoNewOrRepeatedData |                14U             |              14U               |
  EndToEndTransformationDescription.syncCounterInit        |                 1U             |               1U               |
  -------------E2E_SMConfig--------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid        |                N/A             |               3U               |
  EndToEndTransformationDescription.minOkStateInit         |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit      |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateValid        |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid     |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateInvalid      |                N/A             |               2U               |
  EndToEndTransformationDescription.maxErrorStateInvalid   |                N/A             |               1U               |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  - VersionInfoApi is disabled

  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_44_PRN_OoP_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_44_PRN_OoP_ComXf/source/application/E2EXf_ComTest_44_PRN_OoP_ComXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile RN:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (disabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level:

  This test verifies that the generated configuration object of
  types E2E_PRNConfigType and E2E_SMConfigType are initialized with
  values listed below, which are configured identically in each permutation:

       Parameter / transformerId                           |     E2EXf_PRN_OoP_ComXf_Tx1    |  E2EXf_Inv_PRN_OoP_ComXf_Rx1   |
  ---------------------------------------------------------|--------------------------------|--------------------------------|
  XfrmISignalGroupRef                                      | ISignalGroup_PRN_OoP_ComXf_Tx1 | ISignalGroup_PRN_OoP_ComXf_Rx1 |
  E2E profile                                              |                PRN             |               PRN              |
  Serializing transformer                                  |               ComXf            |              ComXf             |
  Buffering                                                |             Out-of-Place       |            Out-of-Place        |
  -------------E2E_PRNConfig-------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                |                 1U             |               1U               |
  EndToEndTransformationISignalProps.dataLength            |                64U             |              64U               |
  EndToEndTransformationDescription.counterOffset          |                 8U             |               8U               |
  EndToEndTransformationDescription.crcOffset              |                 0U             |               0U               |
  EndToEndTransformationDescription.dataIdNibbleOffset     |                12U             |              12U               |
  EndToEndTransformationDescription.dataIDMode             |      E2E_PRN_DATAID_NIBBLE     |      E2E_PRN_DATAID_NIBBLE     |
  EndToEndTransformationDescription.maxDeltaCounterInit    |                 1U             |               1U               |
  EndToEndTransformationDescription.maxNoNewOrRepeatedData |                14U             |              14U               |
  EndToEndTransformationDescription.syncCounterInit        |                 1U             |               1U               |
  -------------E2E_SMConfig--------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid        |                N/A             |               3U               |
  EndToEndTransformationDescription.minOkStateInit         |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit      |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateValid        |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid     |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateInvalid      |                N/A             |               2U               |
  EndToEndTransformationDescription.maxErrorStateInvalid   |                N/A             |               1U               |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  - VersionInfoApi is disabled

  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_45_PRN_InP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_45_PRN_InP_SomeIpXf/source/application/E2EXf_ComTest_45_PRN_InP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for in-place buffering for profile 04:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (enabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignal.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level:

  This test verifies that the generated configuration object of
  types E2E_PRNConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                           |  E2EXf_PRN_InP_SomeIpXf_Tx1  | E2EXf_Inv_PRN_InP_SomeIpXf_Rx1 | E2EXf_Inv_PRN_InP_SomeIpXf_Rx2 |
  ---------------------------------------------------------|------------------------------|--------------------------------|--------------------------------|
  XfrmISignalGroupRef                                      | ISignal_PRN_InP_SomeIpXf_Tx1 |  ISignal_PRN_InP_SomeIpXf_Rx1  |  ISignal_PRN_InP_SomeIpXf_Rx2  |
  E2E profile                                              |              PRN             |              PRN               |               PRN              |
  Serializing transformer                                  |            SomeIpXf          |            SomeIpXf            |             SomeIpXf           |
  Buffering                                                |            In-Place          |            In-Place            |             In-Place           |
  EndToEndTransformationDescription.maxDeltaCounter        |               2U             |               2U               |               2U               |
  -------------E2E_PRNConfig-------------------------------|------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                |               1U             |               1U               |               1U               |
  EndToEndTransformationISignalProps.dataLength            |              176U            |              176U              |               80U              |
  EndToEndTransformationDescription.counterOffset          |               72U            |               72U              |               72U              |
  EndToEndTransformationDescription.crcOffset              |               64U            |               64U              |               64U              |
  EndToEndTransformationDescription.dataIdNibbleOffset     |               76U            |               76U              |               76U              |
  EndToEndTransformationDescription.dataIDMode             |    E2E_PRN_DATAID_NIBBLE     |      E2E_PRN_DATAID_NIBBLE     |      E2E_PRN_DATAID_NIBBLE     |
  EndToEndTransformationDescription.maxDeltaCounterInit    |               1U             |               1U               |               1U               |
  EndToEndTransformationDescription.maxNoNewOrRepeatedData |              14U             |              14U               |              14U               |
  EndToEndTransformationDescription.syncCounterInit        |               1U             |               1U               |               1U               |
  -------------E2E_SMConfig--------------------------------|------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid        |              N/A             |               3U               |               3U               |
  EndToEndTransformationDescription.minOkStateInit         |              N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit      |              N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.minOkStateValid        |              N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid     |              N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.minOkStateInvalid      |              N/A             |               2U               |               2U               |
  EndToEndTransformationDescription.maxErrorStateInvalid   |              N/A             |               1U               |               1U               |

  DataIDMode shall be set to:
      - E2E_PRN_DATAID_BOTH if EndToEndTransformationDescription.dataIDMode == ALL-16-BIT
      - E2E_PRN_DATAID_NIBBLE if EndToEndTransformationDescription.dataIDMode == LOWER-12-BIT

  MaxDeltaCounterInit shall be set to:
    - EndToEndTransformationComSpecProps.maxDeltaCounter-1

  Consequently because of other referenced I-SIGNAL in the XfrmISignalRef parameter of each transformer
  the correct Profile specific information shall be retrieved from the TRANSFORMATION-I-SIGNAL-PROPS
  via the referenced I-SIGNAL from the system model.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  -  VersionInfoApi is enabled
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignal
  (XfrmSignalChoice is configured to XfrmSignalRefChoice)
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00048.PRN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_46_PRN_OoP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_46_PRN_OoP_SomeIpXf/source/application/E2EXf_ComTest_46_PRN_OoP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile JLR:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignal.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level:

  This test verifies that the generated configuration object of
  types E2E_PRNConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                           |  E2EXf_PRN_OoP_SomeIpXf_Tx1  | E2EXf_Inv_PRN_OoP_SomeIpXf_Rx1 | E2EXf_Inv_PRN_OoP_SomeIpXf_Rx2 |
  ---------------------------------------------------------|------------------------------|--------------------------------|--------------------------------|
  XfrmISignalGroupRef                                      | ISignal_PRN_OoP_SomeIpXf_Tx1 |  ISignal_PRN_OoP_SomeIpXf_Rx1  |  ISignal_PRN_OoP_SomeIpXf_Rx2  |
  E2E profile                                              |              PRN             |              PRN               |               PRN              |
  Serializing transformer                                  |            SomeIpXf          |            SomeIpXf            |             SomeIpXf           |
  Buffering                                                |          Out-of-Place        |          Out-of-Place          |           Out-of-Place         |
  EndToEndTransformationDescription.maxDeltaCounter        |               2U             |               2U               |               2U               |
  -------------E2E_PRNConfig-------------------------------|------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID                |               1U             |               1U               |               1U               |
  EndToEndTransformationISignalProps.dataLength            |              176U            |              176U              |               80U              |
  EndToEndTransformationDescription.counterOffset          |               72U            |               72U              |               72U              |
  EndToEndTransformationDescription.crcOffset              |               64U            |               64U              |               64U              |
  EndToEndTransformationDescription.dataIdNibbleOffset     |               76U            |               76U              |               76U              |
  EndToEndTransformationDescription.dataIDMode             |    E2E_PRN_DATAID_NIBBLE     |      E2E_PRN_DATAID_NIBBLE     |      E2E_PRN_DATAID_NIBBLE     |
  EndToEndTransformationDescription.maxDeltaCounterInit    |               1U             |               1U               |               1U               |
  EndToEndTransformationDescription.maxNoNewOrRepeatedData |              14U             |              14U               |              14U               |
  EndToEndTransformationDescription.syncCounterInit        |               1U             |               1U               |               1U               |
  -------------E2E_SMConfig--------------------------------|------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid        |              N/A             |               3U               |               3U               |
  EndToEndTransformationDescription.minOkStateInit         |              N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit      |              N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.minOkStateValid        |              N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid     |              N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.minOkStateInvalid      |              N/A             |               2U               |               2U               |
  EndToEndTransformationDescription.maxErrorStateInvalid   |              N/A             |               1U               |               1U               |

  DataIDMode shall be set to:
      - E2E_PRN_DATAID_BOTH if EndToEndTransformationDescription.dataIDMode == ALL-16-BIT
      - E2E_PRN_DATAID_NIBBLE if EndToEndTransformationDescription.dataIDMode == LOWER-12-BIT

  MaxDeltaCounterInit shall be set to:
    - EndToEndTransformationComSpecProps.maxDeltaCounter-1

  Consequently because of other referenced I-SIGNAL in the XfrmISignalRef parameter of each transformer
  the correct Profile specific information shall be retrieved from the TRANSFORMATION-I-SIGNAL-PROPS
  via the referenced I-SIGNAL from the system model.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  -  VersionInfoApi is enabled
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignal
  (XfrmSignalChoice is configured to XfrmSignalRefChoice)
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00048.PRN</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>627</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_47_InvalidTransformationTechnology</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_47_InvalidTransformationTechnology/source/application/E2EXf_ComTest_47_InvalidTransformationTechnology.c</sourcefile>
      <sourceline>31</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that no transformer function is generated by the MCG
  for the transformer when the attribute version or protocol of the
  referenced TransformationTechnology is set to invalid value.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: at configuration level
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level:

    transformerId                  |       referenced TransformationTechnology        |               fault                | is generated |
  ---------------------------------|--------------------------------------------------|------------------------------------|--------------|
  E2EXf_WrongProtocol              | E2EXfTransformationTechnology_WRONG_PROTOCOL     | wrong protocol attribute           |      NO      |
  E2EXf_WrongVersion               | E2EXfTransformationTechnology_WRONG_VERSION      | wrong version attribute            |      NO      |
  E2EXf_WrongTransformerClass      | E2EXfTransformationTechnology_WRONG_TRAN_CLASS   | wrong transformerClass attribute   |      NO      |
  E2EXf_TransformationTechnologyOK | E2EXfTransformationTechnology                    | valid configuration                |      YES     |
  ---------------------------------|--------------------------------------------------|------------------------------------|--------------|

  The case when the TransformationTechnology is missing does not require testing if the
  transformer function is generated or not, because the MCG reports an error
  and the generation is aborted completely (i.e. no files are generated,
  covered by the Generic TransformationTechnology test).
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Schema validation of the system model, when running the importer, is disabled
  - Transformers which reference valid and invalid TransformationTechnologies
      are configured (see Equivalence Class Partitioning: at configuration
      level test strategy description)
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: VP: Include diff-files of reference files generated by diffcheck.
  02: VP: Successful compilation of E2EXf transformer function using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.TransformationTechnology.GeneratedCodeCheck</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>267</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_48_P11_InP_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_48_P11_InP_ComXf/source/application/E2EXf_ComTest_48_P11_InP_ComXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for In-place buffering for profile 11:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (disabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_P11ConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                         |     E2EXf_P11_InP_ComXf_Tx1    |  E2EXf_Inv_P11_InP_ComXf_Rx1   |
  -------------------------------------------------------|------------------------------- |--------------------------------|
  XfrmISignalRef                                         | ISignalGroup_P11_InP_ComXf_Tx1 | ISignalGroup_P11_InP_ComXf_Rx1 |
  E2E profile                                            |                P11             |               P11              |
  Serializing transformer                                |               ComXf            |              ComXf             |
  Buffering                                              |              In-Place          |             In-Place           |
  -------------E2E_PJRLConfig----------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID              |                 1U             |               1U               |
  EndToEndTransformationISignalProps.dataLength          |                112U            |              112U              |
  EndToEndTransformationISignalProps.counterOffset       |                 8U             |               8U               |
  EndToEndTransformationDescription.crcOffset            |                 0U             |               0U               |
  EndToEndTransformationDescription.maxDeltaCounter      |                 2U             |               2U               |
  EndToEndTransformationDescription.dataIDMode           |       E2E_P11_DATAID_NIBBLE    |    E2E_P11_DATAID_NIBBLE       |
  EndToEndTransformationDescription.dataIDNibbleOffset   |                 12U            |               12U              |
  -------------E2E_SMConfig------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid      |                N/A             |               3U               |
  EndToEndTransformationDescription.minOkStateInit       |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit    |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateValid      |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid   |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateInvalid    |                N/A             |               2U               |
  EndToEndTransformationDescription.maxErrorStateInvalid |                N/A             |               1U               |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  - VersionInfoApi is disabled
  - Golden reference files are provided (see Reference File Tests test method in test description)..

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_49_P11_OoP_ComXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_49_P11_OoP_ComXf/source/application/E2EXf_ComTest_49_P11_OoP_ComXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 11:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (disabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_P11ConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                         |     E2EXf_P11_OoP_ComXf_Tx1    |  E2EXf_Inv_P11_OoP_ComXf_Rx1   |
  -------------------------------------------------------|------------------------------- |--------------------------------|
  XfrmISignalRef                                         | ISignalGroup_P11_OoP_ComXf_Tx1 | ISignalGroup_P11_OoP_ComXf_Rx1 |
  E2E profile                                            |                P11             |               P11              |
  Serializing transformer                                |               ComXf            |              ComXf             |
  Buffering                                              |            Out-of-Place        |            Out-of-Place        |
  -------------E2E_PJRLConfig----------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID              |                 1U             |               1U               |
  EndToEndTransformationISignalProps.dataLength          |                112U            |              112U              |
  EndToEndTransformationISignalProps.counterOffset       |                 8U             |               8U               |
  EndToEndTransformationDescription.crcOffset            |                 0U             |               0U               |
  EndToEndTransformationDescription.maxDeltaCounter      |                 2U             |               2U               |
  EndToEndTransformationDescription.dataIDMode           |       E2E_P11_DATAID_NIBBLE    |    E2E_P11_DATAID_NIBBLE       |
  EndToEndTransformationDescription.dataIDNibbleOffset   |                 12U            |               12U              |
  -------------E2E_SMConfig------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid      |                N/A             |               3U               |
  EndToEndTransformationDescription.minOkStateInit       |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit    |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateValid      |                N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid   |                N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateInvalid    |                N/A             |               2U               |
  EndToEndTransformationDescription.maxErrorStateInvalid |                N/A             |               1U               |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  - VersionInfoApi is disabled
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_50_P11_InP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_50_P11_InP_SomeIpXf/source/application/E2EXf_ComTest_50_P11_InP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for in-place buffering for profile 11:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (enabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignal.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_P11ConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                         |  E2EXf_P11_InP_SomeIpXf_Tx1  | E2EXf_Inv_P11_InP_SomeIpXf_Rx1 | E2EXf_Inv_P11_InP_SomeIpXf_Rx2 |
  -------------------------------------------------------|------------------------------|--------------------------------|--------------------------------|
  XfrmISignalRef                                         | ISignal_P11_InP_SomeIpXf_Tx1 |  ISignal_P11_InP_SomeIpXf_Rx1  |  ISignal_P11_InP_SomeIpXf_Rx2  |
  E2E profile                                            |               P11            |               P11              |               P11              |
  Serializing transformer                                |              SomeIpXf        |              SomeIpXf          |              SomeIpXf          |
  Buffering                                              |             In-Place         |             In-Place           |             In-Place           |
  -------------E2E_PJRLConfig----------------------------|------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID              |               1U             |               1U               |               1U               |
  EndToEndTransformationISignalProps.dataLength          |             176U             |             176U               |              80U               |
  EndToEndTransformationISignalProps.counterOffset       |              72U             |              72U               |              72U               |
  EndToEndTransformationDescription.crcOffset            |              64U             |              64U               |              64U               |
  EndToEndTransformationDescription.maxDeltaCounter      |               2U             |               2U               |               2U               |
  EndToEndTransformationDescription.dataIDMode           |     E2E_P11_DATAID_NIBBLE    |    E2E_P11_DATAID_NIBBLE       |      E2E_P11_DATAID_BOTH       |
  EndToEndTransformationDescription.dataIDNibbleOffset   |              76U             |              76U               |               0U               |
  -------------E2E_SMConfig------------------------------|------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid      |              N/A             |               3U               |               3U               |
  EndToEndTransformationDescription.minOkStateInit       |              N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit    |              N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.minOkStateValid      |              N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid   |              N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.minOkStateInvalid    |              N/A             |               2U               |               2U               |
  EndToEndTransformationDescription.maxErrorStateInvalid |              N/A             |               1U               |               1U               |

  DataIDMode shall be set to:
      - E2E_P11_DATAID_BOTH if EndToEndTransformationDescription.dataIDMode == ALL-16-BIT
      - E2E_P11_DATAID_NIBBLE if EndToEndTransformationDescription.dataIDMode == LOWER-12-BIT
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  -  VersionInfoApi is enabled
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignal
  (XfrmSignalChoice is configured to XfrmSignalRefChoice)
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_51_P11_OoP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_51_P11_OoP_SomeIpXf/source/application/E2EXf_ComTest_51_P11_OoP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 11:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_P11ConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                         |  E2EXf_P11_OoP_SomeIpXf_Tx1  | E2EXf_Inv_P11_OoP_SomeIpXf_Rx1 | E2EXf_Inv_P11_OoP_SomeIpXf_Rx2 |
  -------------------------------------------------------|------------------------------|--------------------------------|--------------------------------|
  XfrmISignalRef                                         | ISignal_P11_OoP_SomeIpXf_Tx1 |  ISignal_P11_OoP_SomeIpXf_Rx1  |  ISignal_P11_OoP_SomeIpXf_Rx2  |
  E2E profile                                            |               P11            |               P11              |               P11              |
  Serializing transformer                                |              SomeIpXf        |              SomeIpXf          |              SomeIpXf          |
  Buffering                                              |            Out-of-Place      |             Out-of-Place       |            Out-of-Place        |
  -------------E2E_PJRLConfig----------------------------|------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID              |               1U             |               1U               |               1U               |
  EndToEndTransformationISignalProps.dataLength          |             176U             |             176U               |              80U               |
  EndToEndTransformationISignalProps.counterOffset       |              72U             |              72U               |              72U               |
  EndToEndTransformationDescription.crcOffset            |              64U             |              64U               |              64U               |
  EndToEndTransformationDescription.maxDeltaCounter      |               2U             |               2U               |               2U               |
  EndToEndTransformationDescription.dataIDMode           |     E2E_P11_DATAID_NIBBLE    |    E2E_P11_DATAID_NIBBLE       |      E2E_P11_DATAID_BOTH       |
  EndToEndTransformationDescription.dataIDNibbleOffset   |              76U             |              76U               |               0U               |
  -------------E2E_SMConfig------------------------------|------------------------------|--------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid      |              N/A             |               3U               |               3U               |
  EndToEndTransformationDescription.minOkStateInit       |              N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit    |              N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.minOkStateValid      |              N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.maxErrorStateValid   |              N/A             |               1U               |               1U               |
  EndToEndTransformationDescription.minOkStateInvalid    |              N/A             |               2U               |               2U               |
  EndToEndTransformationDescription.maxErrorStateInvalid |              N/A             |               1U               |               1U               |

  DataIDMode shall be set to:
      - E2E_P11_DATAID_BOTH if EndToEndTransformationDescription.dataIDMode == ALL-16-BIT
      - E2E_P11_DATAID_NIBBLE if EndToEndTransformationDescription.dataIDMode == LOWER-12-BIT
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00162</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>24</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_52_P44_InP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_52_P44_InP_SomeIpXf/source/application/E2EXf_ComTest_52_P44_InP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for in-place buffering for profile 44:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (enabled)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignal.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_P44ConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                         |  E2EXf_P44_InP_SomeIpXf_Tx1  | E2EXf_Inv_P44_InP_SomeIpXf_Rx1 |
  -------------------------------------------------------|------------------------------|--------------------------------|
  XfrmISignalRef                                         | ISignal_P44_InP_SomeIpXf_Tx1 |  ISignal_P44_InP_SomeIpXf_Rx1  |
  E2E profile                                            |               P44            |               P44              |
  Serializing transformer                                |              SomeIpXf        |              SomeIpXf          |
  Buffering                                              |             In-Place         |             In-Place           |
  -------------E2E_P44Config-----------------------------|------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID              |               1U             |               1U               |
  EndToEndTransformationISignalProps.offset              |              64U             |              64U               |
  EndToEndTransformationISignalProps.minDataLength       |             128U             |             128U               |
  EndToEndTransformationDescription.maxDataLength        |            1120U             |            1120U               |
  EndToEndTransformationDescription.maxDeltaCounter      |               1U             |               1U               |
  -------------E2E_SMConfig------------------------------|------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid      |              N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateInit       |              N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit    |              N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateValid      |              N/A             |               0U               |
  EndToEndTransformationDescription.maxErrorStateValid   |              N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateInvalid    |              N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInvalid |              N/A             |               0U               |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  -  VersionInfoApi is enabled
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignal
  (XfrmSignalChoice is configured to XfrmSignalRefChoice)
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_53_P44_OoP_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_53_P44_OoP_SomeIpXf/source/application/E2EXf_ComTest_53_P44_OoP_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 44:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit
     - E2EXf_GetVersionInfo (optionally)

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId').

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignal.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  This test verifies that the generated configuration object of
  types E2E_P44ConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                         |  E2EXf_P44_OoP_SomeIpXf_Tx1  | E2EXf_Inv_P44_OoP_SomeIpXf_Rx1 |
  -------------------------------------------------------|------------------------------|--------------------------------|
  XfrmISignalRef                                         | ISignal_P44_OoP_SomeIpXf_Tx1 |  ISignal_P44_OoP_SomeIpXf_Rx1  |
  E2E profile                                            |               P44            |               P44              |
  Serializing transformer                                |           SomeIpXf           |            SomeIpXf            |
  Buffering                                              |          Out-of-Place        |          Out-of-Place          |
  -------------E2E_P44Config-----------------------------|------------------------------|--------------------------------|
  EndToEndTransformationISignalProps.dataID              |               1U             |               1U               |
  EndToEndTransformationISignalProps.offset              |              64U             |              64U               |
  EndToEndTransformationISignalProps.minDataLength       |             128U             |             128U               |
  EndToEndTransformationDescription.maxDataLength        |            1120U             |            1120U               |
  EndToEndTransformationDescription.maxDeltaCounter      |               1U             |               1U               |
  -------------E2E_SMConfig------------------------------|------------------------------|--------------------------------|
  EndToEndTransformationDescription.WindowSizeValid      |              N/A             |               1U               |
  EndToEndTransformationDescription.minOkStateInit       |              N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInit    |              N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateValid      |              N/A             |               0U               |
  EndToEndTransformationDescription.maxErrorStateValid   |              N/A             |               0U               |
  EndToEndTransformationDescription.minOkStateInvalid    |              N/A             |               1U               |
  EndToEndTransformationDescription.maxErrorStateInvalid |              N/A             |               0U               |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  -  VersionInfoApi is enabled
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignal
  (XfrmSignalChoice is configured to XfrmSignalRefChoice)
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_54_P44m_InP_Client_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_54_P44m_InP_Client_SomeIpXf/source/application/E2EXf_ComTest_54_P44m_InP_Client_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for in-place buffering for profile 44m:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId') on client irrespective of parameter
  disableEndToEndCheck configured value.

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignal.

  This test also verifies that MCG automatically configures parameter MaxDeltaCounter for deserializing
  client transformer to 1 if its value in the system description configuration is not 1.

  This test also verifies that the generated member disableEndToEndStateMachine
  of configuration object of type E2E_PXXConfig is generated with the same value
  that is configured for system model configuration parameter
  EndToEndTransformationComSpecProps.disableEndToEndStateMachine for a deserializing
  transformer with in-place buffer that is used in a client/server type
  communication on the client side.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  Parameter / Permutation        |            p0           |            p1         |            p2         |            p3         |
  -------------------------------|-------------------------|-----------------------|-----------------------|-----------------------|
     disableEndToEndCheck        |          false          |           true        |           false       |           true        |
     disableEndToEndStateMachine |          false          |           false       |           true        |           true        |

  This test verifies that the generated configuration object of
  types E2E_P44mConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                         | E2EXf_P44m_InP_Request_Client_1Ops1 | E2EXf_Inv_P44m_InP_Response_Client_1Ops1 |
  -------------------------------------------------------|-------------------------------------|------------------------------------------|
  XfrmISignalRef                                         |    ISignal_Client3_Unique_Return    |        ISignal_Client3_Unique_Call       |
  E2E profile                                            |                 P44m                |                    P44m                  |
  Serializing transformer                                |               SomeIpXf              |                   SomeIpXf               |
  Buffering                                              |               In-Place              |                   In-Place               |
  -------------E2E_P44mConfig----------------------------|-------------------------------------|------------------------------------------|
  EndToEndTransformationISignalProps.dataID              |                 1U                  |                    1U                    |
  EndToEndTransformationISignalProps.offset              |                64U                  |                   64U                    |
  EndToEndTransformationISignalProps.minDataLength       |               128U                  |                  128U                    |
  EndToEndTransformationDescription.maxDataLength        |              1120U                  |                 1120U                    |
  EndToEndTransformationDescription.maxDeltaCounter      |                 3U                  |                    1U (conf: 3U)         |
  -------------E2E_SMConfig------------------------------|-------------------------------------|------------------------------------------|
  EndToEndTransformationDescription.WindowSizeValid      |                N/A                  |                    1U                    |
  EndToEndTransformationDescription.minOkStateInit       |                N/A                  |                    1U                    |
  EndToEndTransformationDescription.maxErrorStateInit    |                N/A                  |                    0U                    |
  EndToEndTransformationDescription.minOkStateValid      |                N/A                  |                    0U                    |
  EndToEndTransformationDescription.maxErrorStateValid   |                N/A                  |                    0U                    |
  EndToEndTransformationDescription.minOkStateInvalid    |                N/A                  |                    1U                    |
  EndToEndTransformationDescription.maxErrorStateInvalid |                N/A                  |                    0U                    |

  Reference File Test: Both combinations of configuration parameter disableEndToEndCheck shall lead to the same generated files:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  -  VersionInfoApi is enabled
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignal
  (XfrmSignalChoice is configured to XfrmSignalRefChoice)
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.DisableEndToEndCheck.CS.Client</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine.FALSE.CS.Client</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine.TRUE.CS.Client</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_55_P44m_OoP_Client_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_55_P44m_OoP_Client_SomeIpXf/source/application/E2EXf_ComTest_55_P44m_OoP_Client_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 44m:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId') on client irrespective of parameter
  disableEndToEndCheck configured value.

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignal.

  This test also verifies that MCG automatically configures parameter MaxDeltaCounter for deserializing
  client transformer to 1 if its value in the system description configuration is not 1.

  This test also verifies that the generated member disableEndToEndStateMachine
  of configuration object of type E2E_PXXConfig is generated with the same value
  that is configured for system model configuration parameter
  EndToEndTransformationComSpecProps.disableEndToEndStateMachine for a deserializing
  transformer with out-of-place buffer that is used in a client/server type
  communication on the client side.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  Parameter / Permutation        |            p0           |            p1         |            p2         |            p3         |
  -------------------------------|-------------------------|-----------------------|-----------------------|-----------------------|
     disableEndToEndCheck        |          false          |           true        |           false       |           true        |
     disableEndToEndStateMachine |          false          |           false       |           true        |           true        |

  This test verifies that the generated configuration object of
  types E2E_P44mConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                         | E2EXf_P44m_OoP_Request_Client_1Ops1 | E2EXf_Inv_P44m_OoP_Response_Client_1Ops1 |
  -------------------------------------------------------|-------------------------------------|------------------------------------------|
  XfrmISignalRef                                         |    ISignal_Client3_Unique_Return    |        ISignal_Client3_Unique_Call       |
  E2E profile                                            |                 P44m                |                    P44m                  |
  Serializing transformer                                |               SomeIpXf              |                   SomeIpXf               |
  Buffering                                              |              Out-of-Place           |                 Out-of-Place             |
  -------------E2E_P44mConfig----------------------------|-------------------------------------|------------------------------------------|
  EndToEndTransformationISignalProps.dataID              |                 1U                  |                    1U                    |
  EndToEndTransformationISignalProps.offset              |                64U                  |                   64U                    |
  EndToEndTransformationISignalProps.minDataLength       |               128U                  |                  128U                    |
  EndToEndTransformationDescription.maxDataLength        |              1120U                  |                 1120U                    |
  EndToEndTransformationDescription.maxDeltaCounter      |                 5U                  |                    1U (conf: 5U)         |
  -------------E2E_SMConfig------------------------------|-------------------------------------|------------------------------------------|
  EndToEndTransformationDescription.WindowSizeValid      |                N/A                  |                    1U                    |
  EndToEndTransformationDescription.minOkStateInit       |                N/A                  |                    1U                    |
  EndToEndTransformationDescription.maxErrorStateInit    |                N/A                  |                    0U                    |
  EndToEndTransformationDescription.minOkStateValid      |                N/A                  |                    0U                    |
  EndToEndTransformationDescription.maxErrorStateValid   |                N/A                  |                    0U                    |
  EndToEndTransformationDescription.minOkStateInvalid    |                N/A                  |                    1U                    |
  EndToEndTransformationDescription.maxErrorStateInvalid |                N/A                  |                    0U                    |

  Reference File Test: Both combinations of configuration parameter disableEndToEndCheck shall lead to the same generated files:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  -  VersionInfoApi is enabled
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignal
  (XfrmSignalChoice is configured to XfrmSignalRefChoice)
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.DisableEndToEndCheck.CS.Client</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00174</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine.FALSE.CS.Client</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine.TRUE.CS.Client</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_56_P44m_InP_Server_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_56_P44m_InP_Server_SomeIpXf/source/application/E2EXf_ComTest_56_P44m_InP_Server_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for in-place buffering for profile 44m:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId') on server irrespective of parameter 
  disableEndToEndCheck configured value.

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignal.
  
  This test also verifies that MCG automatically configures parameter MaxDeltaCounter for deserializing
  server transformer to the maximum allowed value if its value in the system description
  configuration is not configured to the maximum allowed value for PROFILE_44m. 

  This test also verifies that the generated member disableEndToEndStateMachine
  of configuration object of type E2E_PXXConfig is generated with the same value
  that is configured for system model configuration parameter
  EndToEndTransformationComSpecProps.disableEndToEndStateMachine for a deserializing
  transformer with in-place buffer that is used in a client/server type
  communication on the server side.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  Parameter / Permutation        |            p0           |            p1         |            p2         |            p3         |
  -------------------------------|-------------------------|-----------------------|-----------------------|-----------------------|
     disableEndToEndCheck        |          false          |           true        |           false       |           true        |
     disableEndToEndStateMachine |          false          |           false       |           true        |           true        |

  This test verifies that the generated configuration object of
  types E2E_P44mConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                         | E2EXf_P44m_InP_Response_Server_1Ops1 | E2EXf_Inv_P44m_InP_Request_Server_1Ops1 |
  -------------------------------------------------------|-------------------------------------|------------------------------------------|
  XfrmISignalRef                                         |    ISignal_Client3_Unique_Return    |        ISignal_Client3_Unique_Call       |
  E2E profile                                            |                 P44m                |                    P44m                  |
  Serializing transformer                                |               SomeIpXf              |                   SomeIpXf               |
  Buffering                                              |               In-Place              |                   In-Place               |
  -------------E2E_P44mConfig----------------------------|-------------------------------------|------------------------------------------|
  EndToEndTransformationISignalProps.dataID              |                 1U                  |                    1U                    |
  EndToEndTransformationISignalProps.offset              |                64U                  |                   64U                    |
  EndToEndTransformationISignalProps.minDataLength       |               128U                  |                  128U                    |
  EndToEndTransformationDescription.maxDataLength        |              1120U                  |                 1120U                    |
  EndToEndTransformationDescription.maxDeltaCounter      |                 3U                  |                    65535U (conf: 3U)     |
  -------------E2E_SMConfig------------------------------|-------------------------------------|------------------------------------------|
  EndToEndTransformationDescription.WindowSizeValid      |                N/A                  |                    1U                    |
  EndToEndTransformationDescription.minOkStateInit       |                N/A                  |                    1U                    |
  EndToEndTransformationDescription.maxErrorStateInit    |                N/A                  |                    0U                    |
  EndToEndTransformationDescription.minOkStateValid      |                N/A                  |                    0U                    |
  EndToEndTransformationDescription.maxErrorStateValid   |                N/A                  |                    0U                    |
  EndToEndTransformationDescription.minOkStateInvalid    |                N/A                  |                    1U                    |
  EndToEndTransformationDescription.maxErrorStateInvalid |                N/A                  |                    0U                    |

  Reference File Test: Both combinations of configuration parameter disableEndToEndCheck shall lead to the same generated files:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  -  VersionInfoApi is enabled
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignal
  (XfrmSignalChoice is configured to XfrmSignalRefChoice)
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.DisableEndToEndCheck.CS.Server</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>E2EXf.PRS_E2E_CONSTR_06300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine.FALSE.CS.Server</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine.TRUE.CS.Server</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_57_P44m_OoP_Server_SomeIpXf</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_57_P44m_OoP_Server_SomeIpXf/source/application/E2EXf_ComTest_57_P44m_OoP_Server_SomeIpXf.c</sourcefile>
      <sourceline>34</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that, for out-of-place buffering for profile 44m:
  * The following general services are supported:
     - E2EXf_PartitionInit
     - E2EXf_PartitionDeInit

  * The following generic services are supported:
     - E2EXf_transformerId
     - E2EXf_Inv_transformerId

  The functions 'E2EXf_transformerId' and 'E2EXf_Inv_transformerId' shall be generated
  for each E2E-protected data element ('transformerId') on server irrespective of parameter
  disableEndToEndCheck configured value

  This test verifies that Profile specific information is correctly retrieved from
  TransformationISignalProps as part of an ISignal.

  This test also verifies that MCG automatically configures parameter MaxDeltaCounter for deserializing
  server transformer to the maximum allowed value if its value in the system description
  configuration is not configured to the maximum allowed value for PROFILE_44m.

  This test also verifies that the generated member disableEndToEndStateMachine
  of configuration object of type E2E_PXXConfig is generated with the same value
  that is configured for system model configuration parameter
  EndToEndTransformationComSpecProps.disableEndToEndStateMachine for a deserializing
  transformer with out-of-place buffer that is used in a client/server type
  communication on the server side.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Tests
  - Equivalence Class Partitioning: At configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: At configuration level:

  Parameter / Permutation        |            p0           |            p1         |            p2         |            p3         |
  -------------------------------|-------------------------|-----------------------|-----------------------|-----------------------|
     disableEndToEndCheck        |          false          |           true        |           false       |           true        |
     disableEndToEndStateMachine |          false          |           false       |           true        |           true        |

  This test verifies that the generated configuration object of
  types E2E_P44mConfigType and E2E_SMConfigType are initialized with
  values listed below:

       Parameter / transformerId                         | E2EXf_P44m_OoP_Response_Server_1Ops1 | E2EXf_Inv_P44m_OoP_Request_Server_1Ops1 |
  -------------------------------------------------------|--------------------------------------|-----------------------------------------|
  XfrmISignalRef                                         |     ISignal_Client3_Unique_Return    |       ISignal_Client3_Unique_Call       |
  E2E profile                                            |                  P44m                |                   P44m                  |
  Serializing transformer                                |                SomeIpXf              |                  SomeIpXf               |
  Buffering                                              |               Out-of-Place           |                Out-of-Place             |
  -------------E2E_P44mConfig----------------------------|--------------------------------------|-----------------------------------------|
  EndToEndTransformationISignalProps.dataID              |                  1U                  |                   1U                    |
  EndToEndTransformationISignalProps.offset              |                 64U                  |                  64U                    |
  EndToEndTransformationISignalProps.minDataLength       |                128U                  |                 128U                    |
  EndToEndTransformationDescription.maxDataLength        |               1120U                  |                1120U                    |
  EndToEndTransformationDescription.maxDeltaCounter      |                  5U                  |                   65535U (conf: 5U)     |
  -------------E2E_SMConfig------------------------------|--------------------------------------|-----------------------------------------|
  EndToEndTransformationDescription.WindowSizeValid      |                 N/A                  |                   1U                    |
  EndToEndTransformationDescription.minOkStateInit       |                 N/A                  |                   1U                    |
  EndToEndTransformationDescription.maxErrorStateInit    |                 N/A                  |                   0U                    |
  EndToEndTransformationDescription.minOkStateValid      |                 N/A                  |                   0U                    |
  EndToEndTransformationDescription.maxErrorStateValid   |                 N/A                  |                   0U                    |
  EndToEndTransformationDescription.minOkStateInvalid    |                 N/A                  |                   1U                    |
  EndToEndTransformationDescription.maxErrorStateInvalid |                 N/A                  |                   0U                    |

  Reference File Test: Both combinations of configuration parameter disableEndToEndCheck shall lead to the same generated files:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h
&lt;/para&gt;

Test Object: None.
Test Precondition: 
Pre-conditions on Configuration:
  -  VersionInfoApi is enabled
Pre-conditions on imported System / Software Component Description:
  Profile specific information is set in TransformationISignalProps as part of an ISignal
  (XfrmSignalChoice is configured to XfrmSignalRefChoice)
  - Golden reference files are provided (see Reference File Tests test method in test description).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00020</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00025</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.DisableEndToEndCheck.CS.Server</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>E2EXf.PRS_E2E_CONSTR_06300</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine.FALSE.CS.Server</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine.TRUE.CS.Server</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>283</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>638</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_58_P05_InP_SomeIpXf_disableEndToEndCheck_NO_CHECK</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_58_P05_InP_SomeIpXf_disableEndToEndCheck/source/application/EbTest.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that for each inverse transformer which has the XfrmSignalChoice
  parameter set to XfrmISignalRefChoice and XfrmVariableDataPrototypeInstanceRef is not set
  a correct transformation function is generated according to the value of &amp;lt;DISABLE-END-TO-END-CHECK&amp;gt;
  parameter.

  This test also verifies that the generated member disableEndToEndStateMachine
  of configuration object of type E2E_PXXConfig is generated with TRUE if system model configuration
  parameters EndToEndTransformationComSpecProps.disableEndToEndStateMachine is set to FALSE and
  EndToEndTransformationComSpecProps.disableEndToEndCheck is configured to TRUE for a deserializing
  transformer that is used in a sender/receiver type communication and transforms a signal.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Cause-Effect Graphing
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level

  The inverse transformer under test has parameters listed below set to the following
  values:

  Parameter / Value                    |     set value        |
  ------------------------------------------------------------|
  XfrmSignalChoice                     | XfrmISignalRefChoice |
  XfrmVariableDataPrototypeInstanceRef |        NOT set       |
  disableEndToEndCheck                 |        TRUE          |
  disableEndToEndStateMachine          |        FALSE         |


  Reference File Test: Both combinations of configuration parameter disableEndToEndCheck shall lead to the same generated files:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - parameters of the inverse transformer under test have values set as mentioned
    in the Equivalence Class Partitioning testing method (see test description paragraph).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: Execute the function of the inverse transformer which has the disabled end-to-end check
      parameter set to TRUE.
  06: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.DisableEndToEndCheck.XfrmISignalRef</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine.TRUE.SR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>
    <specobject>
      <id>TS_E2EXf_ComTest_58_P05_InP_SomeIpXf_disableEndToEndCheck_CHECK</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_58_P05_InP_SomeIpXf_disableEndToEndCheck/source/application/EbTest.c</sourcefile>
      <sourceline>146</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that for each inverse transformer which has the XfrmSignalChoice
  parameter set to XfrmISignalRefChoice and XfrmVariableDataPrototypeInstanceRef is not set
  a correct transformation function is generated according to the value of &amp;lt;DISABLE-END-TO-END-CHECK&amp;gt;
  parameter.

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Cause-Effect Graphing
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level

  The inverse transformer under test has parameters listed below set to the following
  values:

  Parameter / Value                    |     set value        |
  ------------------------------------------------------------|
  XfrmSignalChoice                     | XfrmISignalRefChoice |
  XfrmVariableDataPrototypeInstanceRef |        NOT set       |
  disableEndToEndCheck                 |        FALSE         |

  Reference File Test: Both combinations of configuration parameter disableEndToEndCheck shall lead to the same generated files:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - parameters of the inverse transformer under test have values set as mentioned
    in the Equivalence Class Partitioning testing method (see test description paragraph).
  - partition is initialized

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: Execute the function of the inverse transformer which has the disabled end-to-end check
      parameter set to FALSE.
  06: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.DisableEndToEndCheck.XfrmISignalRef</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_59_P02_InP_ComXf_disableEndToEndCheck_NO_CHECK</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_59_P02_InP_ComXf_disableEndToEndCheck/source/application/EbTest.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that for each inverse transformer which has the XfrmSignalChoice 
  parameter set to XfrmISignalGroupRefChoice and XfrmVariableDataPrototypeInstanceRef is not set 
  a correct transformation function is generated according to the value of &amp;lt;DISABLE-END-TO-END-CHECK&amp;gt; 
  parameter.
  
  This test also verifies that the generated member disableEndToEndStateMachine
  of configuration object of type E2E_PXXConfig is generated with TRUE if system model configuration
  parameters EndToEndTransformationComSpecProps.disableEndToEndStateMachine is set to FALSE and
  EndToEndTransformationComSpecProps.disableEndToEndCheck is configured to TRUE for a deserializing
  transformer that is used in a sender/receiver type communication and transforms a signal group.
  
  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Cause-Effect Graphing
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level
  
  The inverse transformer under test has parameters listed below set to the following 
  values:

  Parameter / Value                    |     set value        |
  ------------------------------------------------------------|
  XfrmSignalChoice                     | XfrmISignalRefChoice |
  XfrmVariableDataPrototypeInstanceRef |        NOT set       |
  disableEndToEndCheck                 |        TRUE          |
  disableEndToEndStateMachine          |        FALSE         |
  
  Reference File Test: Both combinations of configuration parameter disableEndToEndCheck shall lead to the same generated files:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - parameters of the inverse transformer under test have values set as mentioned
    in the Equivalence Class Partitioning testing method (see test description paragraph).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: Execute the function of the inverse transformer which has the disabled end-to-end check 
      parameter set to TRUE.
  06: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.DisableEndToEndCheck.XfrmISignalGroupRef</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.disableEndToEndStateMachine.TRUE.SR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>
    <specobject>
      <id>TS_E2EXf_ComTest_59_P02_InP_ComXf_disableEndToEndCheck_CHECK</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_59_P02_InP_ComXf_disableEndToEndCheck/source/application/EbTest.c</sourcefile>
      <sourceline>146</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that for each inverse transformer which has the XfrmSignalChoice 
  parameter set to XfrmISignalGroupRefChoice and XfrmVariableDataPrototypeInstanceRef is not set 
  a correct transformation function is generated according to the value of &amp;lt;DISABLE-END-TO-END-CHECK&amp;gt; 
  parameter.
  
  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Cause-Effect Graphing
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level

  The inverse transformer under test has parameters listed below set to the following 
  values:

  Parameter / Value                    |     set value        |
  ------------------------------------------------------------|
  XfrmSignalChoice                     | XfrmISignalRefChoice |
  XfrmVariableDataPrototypeInstanceRef |        NOT set       |
  disableEndToEndCheck                 |        FALSE         |
  
  Reference File Test: Both combinations of configuration parameter disableEndToEndCheck shall lead to the same generated files:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - parameters of the inverse transformer under test have values set as mentioned
    in the Equivalence Class Partitioning testing method (see test description paragraph).
  - partition is initialized

Test Execution:   
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: Execute the function of the inverse transformer which has the disabled end-to-end check 
      parameter set to FALSE.
  06: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.DisableEndToEndCheck.XfrmISignalGroupRef</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>266</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_60_P05_InP_ET</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_60_P05_InP_ET/source/application/EbTest.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that for each transformer which has the XfrmSignalChoice
  parameter set to XfrmISignalRefChoice references a SystemSignal which is referenced by a
  TriggerToSignalMapping supports "Trigger Communication".

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Cause-Effect Graphing
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level

  The transformer under test has parameters listed below set to the following
  values:

  Parameter / Value                    |     set value        |
  ------------------------------------------------------------|
  XfrmSignalChoice                     | XfrmISignalRefChoice |
  XfrmVariableDataPrototypeInstanceRef |        set           |

  Reference File Test:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - parameters of the transformer under test have values set as mentioned
    in the Equivalence Class Partitioning testing method (see test description paragraph).

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: Execute the function of the transformer which has configured for TRIGGER-TO-SIGNAL-MAPPING.
  06: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00032.TriggerCommunication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>
    <specobject>
      <id>TS_E2EXf_ComTest_60_P05_InP_INV_ET</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_60_P05_InP_ET/source/application/EbTest.c</sourcefile>
      <sourceline>134</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that for each inverse transformer which has the XfrmSignalChoice
  parameter set to XfrmISignalRefChoice references a SystemSignal which is referenced by a
  TriggerToSignalMapping supports "Trigger Communication".

  As the configuration struct is initialized in the generated file E2EXf_PartitionApi.c, it is
  sufficient to compare it with the reference file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Cause-Effect Graphing
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Reference File Tests:

  Golden reference files for expected generated files are provided in the reference folder:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level

  The inverse transformer under test has parameters listed below set to the following
  values:

  Parameter / Value                    |     set value        |
  ------------------------------------------------------------|
  XfrmSignalChoice                     | XfrmISignalRefChoice |
  XfrmVariableDataPrototypeInstanceRef |        set           |

  Reference File Test:
    - E2EXf_PartitionApi.c,
    - E2EXf_PartitionApi.h,
    - E2EXf_Cfg.h,
    - E2EXf_Api.h.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  - parameters of the inverse transformer under test have values set as mentioned
    in the Equivalence Class Partitioning testing method (see test description paragraph).
  - partition is initialized

Test Execution: 
  01: Import SYSD/SWCD that contains the configuration as specified in the precondition
  02: E2EXf MCG generates files
  03: Compare all files generated by the E2EXf MCG with the golden reference files stated in the
      precondition and store the difference in file "filename".diff.
  04: VP: The generated files of execution step 03 and the reference files are identical.
  05: Execute the function of the inverse transformer which has configured for
      TRIGGER-TO-SIGNAL-MAPPING..
  06: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00034.TriggerCommunication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_61_P05_InP_SomeIpXf_FWCode</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_61_P05_InP_SomeIpXf_FWCode/source/application/EbTest.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place transformer 'E2EXf_transformerId' of profile 05
  invokes 'E2E_P05Forward()' with proper parameters.

  This test verifies that the mandatory interfaces for a Forward transformer are called:
      API function         Description
      E2E_P05Forward       Forwards the array/buffer to  be transmitted using the E2E profile 05.
                           This includes checksum calculation, handling of counter and Data ID.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: Call transformer function with valid parameters. Transformer function is called with
      forwardedCode as E_OK(E2EXf_MapCodeToStatus returns Checkstatus = E2E_P_OK).
  02: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_91001.Std_TransformerForwardCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_62_P05_Oop_SomeIpXf_FWCode</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_62_P05_OoP_SomeIpXf_FWCode/source/application/EbTest.c</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out of-place transformer 'E2EXf_transformerId' of profile 05
  invokes 'E2E_P05Forward()' with proper parameters.

  This test verifies that the mandatory interfaces for a Forward transformer are called:
      API function         Description
      E2E_P05Forward       Forwards the array/buffer to  be transmitted using the E2E profile 05.
                           This includes checksum calculation, handling of counter and Data ID.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: Call transformer function with valid parameters. Transformer function is called with
      forwardedCode as E_OK(E2EXf_MapCodeToStatus returns Checkstatus = E2E_P_OK).
  02: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_91001.Std_TransformerForwardCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>646</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_63_P02_InP_ComXf_FWCode</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_63_P02_InP_ComXf_FWCode/source/application/EbTest.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an in-place transformer 'E2EXf_transformerId' of profile 02
  invokes 'E2E_P02Forward()' with proper parameters.

  This test verifies that the mandatory interfaces for a Forward transformer are called:
      API function         Description
      E2E_P02Forward       Forwards the array/buffer to  be transmitted using the E2E profile 02.
                           This includes checksum calculation, handling of counter and Data ID.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: Call transformer function with valid parameters. Transformer function is called with
      forwardedCode as E_OK(E2EXf_MapCodeToStatus returns Checkstatus = E2E_P_OK).
  02: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_91001.Std_TransformerForwardCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXf_ComTest_64_P02_OoP_ComXf_FWCode</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Compile/IN/E2EXf_ComTest_64_P02_OoP_ComXf_FWCode/source/application/EbTest.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that an out-of-place transformer 'E2EXf_transformerId' of profile 02
  invokes 'E2E_P02Forward()' with proper parameters.

  This test verifies that the mandatory interfaces for a Forward transformer are called:
      API function         Description
      E2E_P02Forward       Forwards the array/buffer to  be transmitted using the E2E profile 02.
                           This includes checksum calculation, handling of counter and Data ID.
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: Call transformer function with valid parameters. Transformer function is called with
      forwardedCode as E_OK(E2EXf_MapCodeToStatus returns Checkstatus = E2E_P_OK).
  02: VP: Successful compilation of E2E transformer using configuration specified above.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>65</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_91001.Std_TransformerForwardCode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXF_CON_01001_GetVersionInfo</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Conformance/IN/E2EXf_ConTest_01_General/source/application/EbTest.c</sourcefile>
      <sourceline>136</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that the function E2EXf_GetVersionInfo returns the version information
  of this module in the passed argument *versionInfo.
  The version information includes: Module Id, Vendor Id, Vendor specific version numbers.
  If NULL_PTR is passed to the API, the API shall return immediately.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - State based tests
&lt;/para&gt;
&lt;para&gt;
  State based tests:

  -------------------------------------------------------------------------------------------------------
  Struct of type      | Transition Trigger        | Initial Status  |           Final Status             |
  =======================================================================================================
  Std_VersionInfoType | E2EXf_GetVersionInfo call | NOT INITIALIZED | members of the Std_VersionInfoType |
                      | (execution step 01)       |                 | have expected values               |
  -------------------------------------------------------------------------------------------------------
  Std_VersionInfoType | E2EXf_GetVersionInfo call | NULL_PTR        | called function return immediately |
                      | (execution step 03)       |                 |                                    |
  -------------------------------------------------------------------------------------------------------

&lt;/para&gt;

Test Object: None.
Test Precondition: 
 - Macros E2EXF_VENDOR_ID,.. are defined properly
   (see test case TS_E2EXF_CON_01002_PublishedInformation below)

Test Execution: 
  01: E2EXf_GetVersionInfo() is called with valid versionInfo pointer
  02: VP:
      E2EXF_VENDOR_ID, E2EXF_MODULE_ID, E2EXF_SW_MAJOR_VERSION, E2EXF_SW_MINOR_VERSION
      and E2EXF_SW_PATCH_VERSION are returned by versionInfo.
  03: E2EXf_GetVersionInfo() is called with NULL_PTR

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_CON_01002_PublishedInformation</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Conformance/IN/E2EXf_ConTest_01_General/source/application/EbTest.c</sourcefile>
      <sourceline>208</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks the correct definition of the common published information
  provided in the module header file.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Gray Box Testing
&lt;/para&gt;
&lt;para&gt;
  Gray Box Testing:

  After the post processing step of the M4 preprocessor the macros must be defined with
  the exact same values as defined in the origin file.

  Macro name                        |    Value origin                     |
  ------------------------------------------------------------------------
  E2EXF_VENDOR_ID                   | global tooling environment variable |
  E2EXF_MODULE_ID                   | config.mk                           |
  E2EXF_AR_RELEASE_MAJOR_VERSION    | config.mk                           |
  E2EXF_AR_RELEASE_MINOR_VERSION    | config.mk                           |
  E2EXF_AR_RELEASE_REVISION_VERSION | config.mk                           |
  E2EXF_SW_MAJOR_VERSION            | config.mk                           |
  E2EXF_SW_MINOR_VERSION            | config.mk                           |
  E2EXF_SW_PATCH_VERSION            | config.mk                           |

&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP:
      E2EXF_VENDOR_ID shall be defined with the
      value globally provided by the tooling environment
  02: VP:
      E2EXF_MODULE_ID shall be defined with 176U as specified in 'AUTOSAR_TR_BSWModuleList.pdf'
  03: VP:
      E2EXF_AR_RELEASE_MAJOR_VERSION shall be defined
      with the value specified in config.mk
  04: VP:
      E2EXF_AR_RELEASE_MINOR_VERSION shall be defined
      with the value specified in config.mk
  05: VP:
      E2EXF_AR_RELEASE_REVISION_VERSION shall be defined
      with the value specified in config.mk
  06: VP:
      E2EXF_SW_MAJOR_VERSION shall be defined
      with the value specified in config.mk
  07: VP:
      E2EXF_SW_MINOR_VERSION shall be defined
      with the value specified in config.mk
  08: VP:
      E2EXF_SW_PATCH_VERSION shall be defined
      with the value specified in config.mk

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_CON_01003_SafetyErrorCodeMacros</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Conformance/IN/E2EXf_ConTest_01_General/source/application/EbTest.c</sourcefile>
      <sourceline>325</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test shall verify that error codes of safety transformers are defined according to
  the SWS_Xfrm_00032.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Gray Box Testing
&lt;/para&gt;
&lt;para&gt;
  Gray Box Testing:

  The macros below must be defined with the appropriate values.

  Error code macro name      | Expected value |
  --------------------------------------------
  E_OK                       |      0x00      |
  E_SAFETY_VALID_REP         |      0x01      |
  E_SAFETY_VALID_SEQ         |      0x02      |
  E_SAFETY_VALID_ERR         |      0x03      |
  E_SAFETY_NODATA_OK         |      0x20      |
  E_SAFETY_NODATA_REP        |      0x21      |
  E_SAFETY_NODATA_SEQ        |      0x22      |
  E_SAFETY_NODATA_ERR        |      0x23      |
  E_SAFETY_INIT_OK           |      0x30      |
  E_SAFETY_INIT_REP          |      0x31      |
  E_SAFETY_INIT_SEQ          |      0x32      |
  E_SAFETY_INIT_ERR          |      0x33      |
  E_SAFETY_INVALID_OK        |      0x40      |
  E_SAFETY_INVALID_REP       |      0x41      |
  E_SAFETY_INVALID_SEQ       |      0x42      |
  E_SAFETY_INVALID_ERR       |      0x43      |
  E_SAFETY_SOFT_RUNTIMEERROR |      0x77      |
  E_SAFETY_HARD_RUNTIMEERROR |      0xFF      |
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP: The macro E_OK is defined and set to the expected value (see testing method description).
  02: VP: The macro E_SAFETY_VALID_REP is defined and set to the expected value (see testing method description).
  03: VP: The macro E_SAFETY_VALID_SEQ is defined and set to the expected value (see testing method description).
  04: VP: The macro E_SAFETY_VALID_ERR is defined and set to the expected value (see testing method description).
  05: VP: The macro E_SAFETY_NODATA_OK is defined and set to the expected value (see testing method description).
  06: VP: The macro E_SAFETY_NODATA_REP is defined and set to the expected value (see testing method description).
  07: VP: The macro E_SAFETY_NODATA_SEQ is defined and set to the expected value (see testing method description).
  08: VP: The macro E_SAFETY_NODATA_ERR is defined and set to the expected value (see testing method description).
  09: VP: The macro E_SAFETY_INIT_OK is defined and set to the expected value (see testing method description).
  10: VP: The macro E_SAFETY_INIT_REP is defined and set to the expected value (see testing method description).
  11: VP: The macro E_SAFETY_INIT_SEQ is defined and set to the expected value (see testing method description).
  12: VP: The macro E_SAFETY_INIT_ERR is defined and set to the expected value (see testing method description).
  13: VP: The macro E_SAFETY_INVALID_OK is defined and set to the expected value (see testing method description).
  14: VP: The macro E_SAFETY_INVALID_REP is defined and set to the expected value (see testing method description).
  15: VP: The macro E_SAFETY_INVALID_SEQ is defined and set to the expected value (see testing method description).
  16: VP: The macro E_SAFETY_INVALID_ERR is defined and set to the expected value (see testing method description).
  17: VP: The macro E_SAFETY_SOFT_RUNTIMEERROR is defined and set to the expected value (see testing method description).
  18: VP: The macro E_SAFETY_HARD_RUNTIMEERROR is defined and set to the expected value (see testing method description).

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>651</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_CON_01004_DeInitialization</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Conformance/IN/E2EXf_ConTest_01_General/source/application/EbTest.c</sourcefile>
      <sourceline>525</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that the functions E2EXf_PartitionInit and E2EXf_PartitionDeInit
  maintain a boolean variable about the initialization state. As direct access to the
  state variable is not possible, this functionality is tested with the expected
  behavior of a transformer.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - State based tests
&lt;/para&gt;
&lt;para&gt;
  State based tests:

  The transitions between the states are described in the table below.

  ------------------------------------------------------------------------------------------------------------------------
  Item                  | Transition Trigger            | Initial Status             |           Final Status             |
  =========================================================================================================================
  in place transformer  | call to E2EXf_PartitionDeInit |       N/A                  | returns E_SAFETY_HARD_RUNTIMEERROR |
  function              | function (execution step 02)  |                            | (execution step 05)                |
  ------------------------------------------------------------------------------------------------------------------------
  in place transformer  | call to E2EXf_PartitionInit   | E_SAFETY_HARD_RUNTIMEERROR | returns E_OK                       |
  function              | function (execution step 03)  |                            | (execution step 09)                |
  ------------------------------------------------------------------------------------------------------------------------
  in place transformer  | call to E2EXf_PartitionDeInit | E_OK                       | returns E_SAFETY_HARD_RUNTIMEERROR |
  function              | function (execution step 10)  |                            | (execution step 12)                |
  ------------------------------------------------------------------------------------------------------------------------
  in place transformer  | call to E2E_P01ProtectInit    | E_SAFETY_HARD_RUNTIMEERROR | returns E_SAFETY_HARD_RUNTIMEERROR |
  function              | function (execution step 14)  |                            | (execution step 17)                |
  ------------------------------------------------------------------------------------------------------------------------
  in place transformer  | call to E2EXf_PartitionInit   | E_SAFETY_HARD_RUNTIMEERROR | returns E2E_E_OK                   |
  function              | function (execution step 18)  |                            | (execution step 20)                |
  ------------------------------------------------------------------------------------------------------------------------

&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: Initialize Buffer with values different to 0U.
  02: Deinitialize module.
  |- For some cycles:
  |  03: Initialize Buffer with values different to 0U.
  |  04: call in-place transformer function with valid parameters.
  |  05: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR,
  |          because module is not initialized.
  |  06: call E2EXf_PartitionInit
  |  07: Initialize Buffer with values different to 0U.
  |  08: call in-place transformer function with valid parameters.
  |  09: VP: The function returns E_OK.
  |  10: call E2EXf_PartitionDeInit
  |  11: call in-place transformer function with valid parameters.
  |  12: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR,
             because module is deinitialized.
  13: Deinitialize module.
  14: Call E2E_P01ProtectInit but provoke to return a value different to E2E_E_OK.
      (E2E_P01ProtectInit is the part of E2EXf_PartitionInit to initialize in-place transformer
       state)
  15: Initialize Buffer with values different to 0U.
  16: call in-place transformer function with valid parameters.
  17: VP: The function returns E_SAFETY_HARD_RUNTIMEERROR.
          Buffer is unchanged, Counter in E2E header is still set to initialized value of 0xEBEB.
  18: call E2EXf_PartitionInit
  19: call in-place transformer function with valid parameters.
  20: VP: The function returns E2E_E_OK.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.SWS_E2EXf_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_CON_01005_ReturnProtectSafetyErrorCodes</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Conformance/IN/E2EXf_ConTest_01_General/source/application/EbTest.c</sourcefile>
      <sourceline>728</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test shall verify that error codes of safety protect-transformer are returned according
  to SWS_Xfrm_00032. This mechanism profile independent and therefore has to be tested only with
  one (arbitrary) profile.

  The range 0x00U to 0xFF is set as return values of E2E_P01Protect and checked if the transformer
  returns the expected return value (E_SAFETY_HARD_RUNTIMEERROR).
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - State based tests
&lt;/para&gt;
&lt;para&gt;
  State based tests:

  The transitions between the states are described in the table below.

  -----------------------------------------------------------------------------------------------------------------
  Item                  | Transition Trigger            | Initial Status             |           Final Status     |
  =================================================================================================================
  transformer function  | Set return value of           |       N/A                  | transformer returns E_OK   |
                        | E2E_P01Protect to E2E_E_OK    |                            | (execution step 03)        |
                        | (execution step 01)           |                            |                            |
  -----------------------------------------------------------------------------------------------------------------
  transformer function  | call to internal API          |       E_OK                 | transformer returns        |
                        | with StatePtr set to NULL_PTR |                            | E_SAFETY_HARD_RUNTIMEERROR |
                        | (execution step 04)           |                            | (execution step 05)        |
  -----------------------------------------------------------------------------------------------------------------
  transformer function  | call to internal API          | E_SAFETY_HARD_RUNTIMEERROR | transformer returns        |
                        | with CfgPtr set to invalid    |                            | E_SAFETY_HARD_RUNTIMEERROR |
                        | value (execution step 06)     |                            | (execution step 07)        |
  -----------------------------------------------------------------------------------------------------------------

&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  00: Re-initialize module.
  01: Set return value of E2E_P01Protect to 0x0U (E2E_E_OK).
  02: Call transformer function with valid parameters.
  03: VP: Verify that transformer returned expected value (E2E_E_OK).

  04: Provoke E2E_P01Protect() to return E2E_E_INPUTERR_NULL by calling internal API that is
      wrapped by transformer API with StatePtr set to NULL_PTR.
  05: VP: Verify that transformer returned expected ReturnValue (E_SAFETY_HARD_RUNTIMEERROR).

  06: Provoke E2E_P01Protect() to return E2E_E_INPUTERR_WRONG by calling internal API that is
      wrapped by transformer API with CfgPtr with invalid value.
  07: VP: Verify that transformer returned expected ReturnValue (E_SAFETY_HARD_RUNTIMEERROR).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.E_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.HARD_RUNTIMEERROR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_CON_01006_ReturnCheckSafetyErrorCodes</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Conformance/IN/E2EXf_ConTest_01_General/source/application/EbTest.c</sourcefile>
      <sourceline>839</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test shall verify that error codes of safety check-transformer are returned according
  to SWS_Xfrm_00032. This mechanism is profile independent and therefore has to be tested only with
  one (arbitrary) profile.

  This test checks two settings:
    1) The return value of E2E_SMCheck is E2E_E_OK. Then the expected return value is a combination
       of the return value of E2E_P01MapStatusToSM and SMState. The whole possible range
       (0x00U to 0xFFU) is tested, this way it is not necessary to update the test, if more
       return values are added by the Autosar specification.
    2) The return value of E2E_SMCheck is in the range (0x01U to 0xFFU). Then the expected return
       value of the check-transformer is E_SAFETY_SOFT_RUNTIMEERROR.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - State based tests
&lt;/para&gt;
&lt;para&gt;
  State based tests:

  The transitions between the states are described in the table below.

  ----------------------------------------------------------------------------------------------------------------------------
  Item                   | Transition Trigger            | Initial Status                    |           Final Status        |
  ============================================================================================================================
  inverted               | Set received buffer to        | set SMState to certain value with | inv transformer function      |
  transformer function   | valid values                  | the call to E2E_SMCheckCallout.   | returned the expected value   |
  (RetVal E2E_P_OK)      | (execution step 104)          | (execution step 103)              | which was set in the SM state |
                         |                               |                                   | (execution step 106)          |
  ----------------------------------------------------------------------------------------------------------------------------
  inverted               | Set received buffer to        | set SMState to certain value with | inv transformer function      |
  transformer function   | valid values &amp; set counter    | the call to E2E_SMCheckCallout.   | returned the expected value   |
  (RetVal E2E_P_REPEATED)| field to 0                    | (execution step 203)              | which was set in the SM state |
                         | (execution step 206)          |                                   | (execution step 208)          |
  ----------------------------------------------------------------------------------------------------------------------------
  inverted               | Set received buffer to        | set SMState to certain value with | inv transformer function      |
  transformer function   | valid values except data ID   | the call to E2E_SMCheckCallout.   | returned the expected value   |
  (RetVal E2E_P_ERROR)   | to wrong value                | (execution step 303)              | which was set in the SM state |
                         | (execution step 304)          |                                   | (execution step 306)          |
  ----------------------------------------------------------------------------------------------------------------------------
  inverted               | Call inv. transformer func.   | set buffer and SMState to certain | inv transformer function      |
  transformer function   | with NULL_PTR as BufferPtr and| values                            | returned the expected value   |
  (RetVal                | InputBufferLength = 0         |                                   | which was set in the SM state |
  E2E_P_NONEWDATA)       | (execution step 405)          | (execution step 402 &amp; 403)        | (execution step 406)          |
  ----------------------------------------------------------------------------------------------------------------------------
  inverted               | Set received buffer to valid  | set buffer and SMState to certain | inv transformer function      |
  transformer function   | values except for counter -   | values                            | returned the expected value   |
  (RetVal                | it is set to too high value   |                                   | which was set in the SM state |
  E2E_P_WRONGSEQUENCE)   | (execution step 504)          | (execution step 402 &amp; 403)        | (execution step 506)          |
  ----------------------------------------------------------------------------------------------------------------------------

&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  001: Set ReturnValue of E2E_SMCheck to E2E_E_OK

  Test E2E_P01MapStatusToSM RetVal E2E_P_OK:
  |- Loop over SMState ReturnValue range 0x00U to 0xFFU:
  |  101: Re-initialize module to reset internal state.
  |  102: Set Buffer to defined values.
  |  103: Set SMState. This is the higher nibble of ReturnValue.
  |       Note: This is done in E2E_SMCheckCallout.
  |  104: Provoke return value E2E_P_OK of E2E_P01MapStatusToSM. This is the lower nibble of
  |       ReturnValue. Done by setting received buffer to valid values.
  |  105: Call inverted transformer function with valid parameters.
  |  106: VP: Verify that transformer returned expected ReturnValue set in step 02 and 03
  |           (combination of nibbles).
  |           Note: The return value is a combination of SMState and the return value of
  |                 E2E_P01MapStatusToSM according to SWS_E2EXf_00027.

  Test E2E_P01MapStatusToSM RetVal E2E_P_REPEATED:
  |- Loop over SMState ReturnValue range 0x00U to 0xFFU:
  |  201: Re-initialize module to reset internal state.
  |  202: Set Buffer to defined values.
  |  203: Set SMState. This is the higher nibble of ReturnValue.
  |       Note: This is done in E2E_SMCheckCallout.
  |  204: Set received buffer to valid values. Set Counter field to 0U.
  |  205: Call inverted transformer function with valid parameters.
  |  206: Provoke return value E2E_P_REPEATED of E2E_P01MapStatusToSM. This is the lower nibble of
  |       ReturnValue. Done by setting Counter value in received buffer (again) to 0U.
  |  207: Call inverted transformer function with valid parameters.
  |  208: VP: Verify that transformer returned expected ReturnValue set in step 02 and 03
  |           (combination of nibbles).
  |           Note: The return value is a combination of SMState and the return value of
  |                 E2E_P01MapStatusToSM according to SWS_E2EXf_00027.

  Test E2E_P01MapStatusToSM RetVal E2E_P_ERROR:
  |- Loop over SMState ReturnValue range 0x00U to 0xFFU:
  |  301: Re-initialize module to reset internal state.
  |  302: Set Buffer to defined values.
  |  303: Set SMState. This is the higher nibble of ReturnValue.
  |       Note: This is done in E2E_SMCheckCallout.
  |  304: Provoke return value E2E_P_ERROR of E2E_P01MapStatusToSM. This is the lower nibble of
  |       ReturnValue. Done by setting received buffer to valid values, except DataId, which is set
  |       to a wrong value.
  |  305: Call inverted transformer function with valid parameters.
  |  306: VP: Verify that transformer returned expected ReturnValue set in step 02 and 03
  |           (combination of nibbles).
  |           Note: The return value is a combination of SMState and the return value of
  |                 E2E_P01MapStatusToSM according to SWS_E2EXf_00027.

  Test E2E_P01MapStatusToSM RetVal E2E_P_NONEWDATA:
  |- Loop over SMState ReturnValue range 0x00U to 0xFFU:
  |  401: Re-initialize module to reset internal state.
  |  402: Set Buffer to defined values.
  |  403: Set SMState. This is the higher nibble of ReturnValue.
  |       Note: This is done in E2E_SMCheckCallout.
  |  404: Provoke return value E2E_P_NONEWDATA of E2E_P01MapStatusToSM. This is the lower nibble of
  |       ReturnValue.
  |  405: Call inverted transformer function with NULL_PTR as BufferPtr and InputBufferLength = 0.
  |  406: VP: Verify that transformer returned expected ReturnValue set in step 02 and 03
  |           (combination of nibbles).
  |           Note: The return value is a combination of SMState and the return value of
  |                 E2E_P01MapStatusToSM according to SWS_E2EXf_00027.

  Test E2E_P01MapStatusToSM RetVal E2E_P_WRONGSEQUENCE:
  |- Loop over SMState ReturnValue range 0x00U to 0xFFU:
  |  501: Re-initialize module to reset internal state.
  |  502: Set Buffer to defined values.
  |  503: Set SMState. This is the higher nibble of ReturnValue.
  |       Note: This is done in E2E_SMCheckCallout.
  |  504: Provoke return value E2E_P_WRONGSEQUENCE of E2E_P01MapStatusToSM. This is the lower
  |       nibble of ReturnValue. Done by setting received buffer to valid values, except Counter,
  |       which is set to an unexpected (too high) value.
  |  505: Call inverted transformer function with valid parameters.
  |  506: VP: Verify that transformer returned expected ReturnValue set in step 02 and 03
  |           (combination of nibbles).
  |           Note: The return value is a combination of SMState and the return value of
  |                 E2E_P01MapStatusToSM according to SWS_E2EXf_00027.

  601: Set RetVal of E2E_SMCheck to value different to E2E_E_OK (greater than 0x01U, up to 0xFFU)
  602: Call inverted transformer function with valid parameters.
  603: VP: Verify that transformer returned E_SAFETY_SOFT_RUNTIMEERROR.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.E_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.VALID_REP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.VALID_SEQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>154</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.VALID_ERR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.NODATA_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.NODATA_REP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.NODATA_SEQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.NODATA_ERR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.INIT_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.INIT_REP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.INIT_SEQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>164</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.INIT_ERR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.INVALID_OK</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.INVALID_REP</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.INVALID_SEQ</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.INVALID_ERR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_Xfrm_00032.SOFT_RUNTIMEERROR</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_CON_01007_IncludeFileStructure</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Conformance/IN/E2EXf_ConTest_01_General/source/application/EbTest.c</sourcefile>
      <sourceline>1231</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies the include structure of the E2EXf module
  as described within the Reference File Test testing method.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Reference File Test
&lt;/para&gt;
&lt;para&gt;
  Reference File Test:

  The E2EXf module include structure is verified via golden .txt files
  which provide the file inclusions of the corresponding E2EXf module
  file as listed below:

  -------------------------------------------------------------------------------------
  E2EXf module file    | Golden .txt file                    | Included files         |
  =====================================================================================
  E2EXf.c              | includesOf_E2EXf.c.txt              | Std_Types.h,           |
                       |                                     | E2EXf.h,               |
                       |                                     | E2EXf_MemMap.h         |
  -------------------------------------------------------------------------------------
  E2EXf.h              | includesOf_E2EXf.h.txt              | E2EXf_Cfg.h,           |
                       |                                     | E2EXf_Api.h,           |
                       |                                     | E2EXf_Version.h,       |
                       |                                     | E2EXf_MemMap.h         |
  -------------------------------------------------------------------------------------
  E2EXf_Cfg.h          | includesOf_E2EXf_Cfg.h.txt          | Std_Types.h            |
  -------------------------------------------------------------------------------------
  E2EXf_Api.h          | includesOf_E2EXf_Api.h.txt          | E2EXf_PartitionApi.h   |
  -------------------------------------------------------------------------------------
  E2EXf_PartitionApi.h | includesOf_E2EXf_PartitionApi.h.txt | Std_Types.h,           |
                       |                                     | TransformerTypes.h,    |
                       |                                     | E2E_P01_E2EXf.h,       |
                       |                                     | E2EXf_MemMap.h         |
  -------------------------------------------------------------------------------------
  E2EXf_PartitionApi.c | includesOf_E2EXf_PartitionApi.c.txt | E2E_SM.h,              |
                       |                                     | E2E_P01.h,             |
                       |                                     | E2E_E2EXf_Stc.h,       |
                       |                                     | E2EXf_PartitionApi.h,  |
                       |                                     | E2EXf_MemMap.h         |
  -------------------------------------------------------------------------------------
  E2EXf_P01_Stc.h      | includesOf_E2E_P01_E2EXf.h.txt      | E2E_E2EXf_Stc.h,       |
                       |                                     | E2E_P01.h,             |
                       |                                     | E2E_SM.h,              |
                       |                                     | E2E_MemMap.h           |
  -------------------------------------------------------------------------------------
  E2E_No_Check_E2EXf.h | includesOf_E2E_No_Check_E2EXf.h.txt | E2E_E2EXf_Stc.h,       |
                       |                                     | E2E_MemMap.h           |
  -------------------------------------------------------------------------------------
  E2EXf_Version.h      | includesOf_E2EXf_Version.h.txt      | contains no includes   |
  -------------------------------------------------------------------------------------

&lt;/para&gt;

Test Object: None.
Test Precondition: 

  The "reference" folder golden reference files which list the mandatory include
  directives for each E2EXf module file as described in the test description
  paragraph.


Test Execution: 
  00: Generate this test project with some configuration data
    for the E2EXf module
  01: Extract the includes of all files stated in the test description
    into "filename".txt
  02: Compare the includes of the previous step with the
    golden reference file includesOf_"filename".txt
    and store the difference in file includesOf_"filename".txt.diff.
  03: Include all comparison differences of Step 2
    (i.e. includesOf_"filename".h.txt.diff) within this file
  04: VP (E2EXf.Design.IncludeFileStructure)
    Execute this test case which always returns TS5ATL_RESULT_SUCCESS.
    Note:
      If there are any comparison differences, then
      the compilation process aborts with an error due to the
      inclusion of the diff result which then contains
      not compilable text.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.Design.IncludeFileStructure</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>dsn</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_CON_01008_Files</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Conformance/IN/E2EXf_ConTest_01_General/source/application/EbTest.c</sourcefile>
      <sourceline>1344</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
 &lt;para&gt;
      This test verifies that the E2EXf module consist of the static
      and generated files as described within the the Reference File
      Test testing method.
 &lt;/para&gt;
 &lt;para&gt;
   The testing method used:
   - Reference File Test
 &lt;/para&gt;
 &lt;para&gt;
   Reference File Test:

   The E2EXf module static and generated files existence is verified via golden .txt files
   which contain the list of mandatory E2EXf module files as listed below:

   -------------------------------------------------
   Golden .txt file         | E2EXf module files   |
   =================================================
   E2EXf_SourceFiles.txt    | E2EXf.c              |
   -------------------------------------------------
   E2EXf_HeaderFiles.txt    | E2EXf.h              |
                            | E2EXf_Version.h      |
   -------------------------------------------------
   E2EXf_GeneratedFiles.txt | E2EXf_PartitionApi.c |
                            | E2EXf_Api.h          |
                            | E2EXf_Cfg.h          |
                            | E2EXf_PartitionApi.h |
   -------------------------------------------------

 &lt;/para&gt;
 
Test Object: None.
Test Precondition: 

   The "reference" folder contains golden reference files with the content
   as described in the test description paragraph.

 
Test Execution: 

  00: Generate this test project with some configuration data
      for the E2EXf module
  01: Search for all static header files existing in the
      installed Tresos plugin of E2EXf
  02: Search for all static source files existing in the
      installed Tresos plugin of E2EXf
  03: Search for all files generated by the E2EXf module
  04: Compare the found files of the previous steps with the
      golden reference files listed in the preconditions
  05: Include all comparison differences within this file.
  06: VP (E2EXf.SWS_E2EXf_00001,E2EXf.SWS_E2EXf_00002)
      Execute this test case which always returns TS5ATL_RESULT_SUCCESS.
      Note:
        If there are any comparison differences, then
        the compilation process aborts with an error due to the
        inclusion of the diff result which then contains
        not compilable text.

 
Test Input: 
 
Test Output: 
 &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>6</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXF_CON_02001_WaitForFirstData</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Conformance/IN/E2EXf_ConTest_02_WaitForFirstData/source/application/EbTest.c</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that the value of the generated macro for the initial value of the 
  WaitForFirstData parameter is the same as in the configuration. For the case when the 
  parameter is not configured the default value must be generated.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level:
  
  The following configuration parameter and the expected generated value
  of the macro are permuted:

  Parameter / Permutation   |      p0      |      p1      |             p2            |
  ====================================================================================|
  E2EWaitForFirstData       |     true     |     false    | not present in the config |
  ------------------------------------------------------------------------------------|
  Expected generated value  |              |              |                           |
  of the WaitForFirstData   |     TRUE     |    FALSE     |          TRUE             |
  macro                     |              |              |                           |
  ------------------------------------------------------------------------------------| 
  DataIDMode                | LOWER-12-BIT | LOWER-12-BIT |     ALTERNATING-8-BIT     |
  ------------------------------------------------------------------------------------|
  dataIdNibbleOffset        |      12U     |      12U     |            0U             |

&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  01: It is checked that the appropriate macro is defined and 
      that the value of the macro is equal to the expected value.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Init_WaitForFirstData_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>657</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXF_GEN_01001_WrongTransformerBswmRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_01_XfrmXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the XDM provides an error message in case when the short name of the 
    XfrmImplementationMapping is not identical with the short name of the referenced 
    XfrmTransformerBswModuleEntryRef.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * An valid E2EXf config: XfrmImplementationMapping is identical with the short name of the referenced
                            XfrmTransformerBswModuleEntryRef.
    * An invalid E2EXf config: XfrmImplementationMapping is not identical with the short name of the referenced
                              XfrmTransformerBswModuleEntryRef.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_01002_WrongInvTransformerBswmRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_01_XfrmXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the XDM provides an error message in case when the short name of the 
    XfrmImplementationMapping is not identical with the short name of the referenced 
    XfrmInvTransformerBswModuleEntryRef.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * An valid E2EXf config: XfrmImplementationMapping is identical with the short name of the referenced
                            XfrmInvTransformerBswModuleEntryRef.
    * An invalid E2EXf config: XfrmImplementationMapping is not identical with the short name of the referenced
                              XfrmInvTransformerBswModuleEntryRef.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_01003_NoEnabledBswmRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_01_XfrmXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the XDM provides an error message in case when neither 
    XfrmTransformerBswModuleEntryRef nor XfrmInvTransformerBswModuleEntryRef parameter is enabled.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * An valid E2EXf config: XfrmImplementationMapping with enabled and correctly configured
                            XfrmTransformerBswModuleEntryRef.
    * An invalid E2EXf config: XfrmImplementationMapping with disabled XfrmTransformerBswModuleEntryRef 
                               and XfrmInvTransformerBswModuleEntryRef parameters.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_01004_WrongSerializerPrefix</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_01_XfrmXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>125</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the XDM provides an error message in case when name of the 
    XfrmImplementationMapping which has enabled XfrmTransformerBswModuleEntryRef does not start 
    with the E2EXf_ prefix.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * An valid E2EXf config: Name of the XfrmImplementationMapping starts with the E2EXf_ prefix and 
                             XfrmTransformerBswModuleEntryRef is enabled.
    * An invalid E2EXf config: Name of the XfrmImplementationMapping does not start with the 
                               required prefix and XfrmTransformerBswModuleEntryRef is enabled.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_01005_WrongDeserializerPrefix</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_01_XfrmXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>158</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the XDM provides an error message in case when name of the 
    XfrmImplementationMapping which has enabled XfrmTransformerBswModuleEntryRef does not start 
    with the E2EXf_Inv_ prefix.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * An valid E2EXf config: Name of the XfrmImplementationMapping starts with the E2EXf_Inv_ prefix and 
                             XfrmInvTransformerBswModuleEntryRef is enabled.
    * An invalid E2EXf config: Name of the XfrmImplementationMapping does not start with the 
                               required prefix and XfrmInvTransformerBswModuleEntryRef is enabled.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_01006_WrongDeserializerInfix</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_01_XfrmXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>191</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the XDM provides an error message in case when name of the 
    XfrmImplementationMapping which has enabled XfrmTransformerBswModuleEntryRef does not  
    contain the _Inv_ prefix after the module name prefix.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * An valid E2EXf config: Name of the XfrmImplementationMapping contains the _Inv_ infix and 
                             XfrmInvTransformerBswModuleEntryRef is enabled.
    * An invalid E2EXf config: Name of the XfrmImplementationMapping does not contain the 
                               required infix and XfrmInvTransformerBswModuleEntryRef is enabled.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_01007_WrongContainerName</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_01_XfrmXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>224</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the XDM provides an error message in case when name of the 
    XfrmImplementationMapping is not a valid C identifier.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * An valid E2EXf config: Configured name of the XfrmImplementationMapping is a valid C identifier.
    * An invalid E2EXf config: Configured name of the XfrmImplementationMapping is not a valid C identifier.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_01008_SameISignalGroupRefForMultipleSerializers</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_01_XfrmXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>254</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the XDM provides an error message in case when multiple XfrmImplementationMappings 
    of serializing transformers reference the same ISignalGroup
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * An valid E2EXf config: XfrmISignalGroupRef of different XfrmImplementationMappings reference a different ISignalGroup.
    * An invalid E2EXf config: XfrmISignalGroupRef of different XfrmImplementationMappings reference the same ISignalGroup.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_01009_WrongSwComponentPrototypeRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_01_XfrmXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>284</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the XDM provides an error message in case when the first reference 
    of the XfrmVariableDataPrototypeInstanceRef does not reference a valid SwComponentPrototype.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * An valid E2EXf config: The first reference of the XfrmVariableDataPrototypeInstanceRef 
      refers to a valid SwComponentPrototype.
    * An invalid E2EXf config: The first reference of the XfrmVariableDataPrototypeInstanceRef 
      refers to a non-SwComponentPrototype element.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_01010_WrongPortPrototypeRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_01_XfrmXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>316</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the XDM provides an error message in case when the second reference 
    of the XfrmVariableDataPrototypeInstanceRef does not reference a valid PortPrototype.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * An valid E2EXf config: The second reference of the XfrmVariableDataPrototypeInstanceRef 
      refers to a valid PortPrototype.
    * An invalid E2EXf config: The second reference of the XfrmVariableDataPrototypeInstanceRef 
      refers to a non-PortPrototype element.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_01011_WrongDataElementRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_01_XfrmXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>348</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the XDM provides an error message in case when the 
    XfrmVariableDataPrototypeInstanceRef refers to an invalid dataElement.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * An valid E2EXf config: The XfrmVariableDataPrototypeInstanceRef refers to a valid dataElement.
    * An invalid E2EXf config: The XfrmVariableDataPrototypeInstanceRef refers to a non-dataElement.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_01012_WrongXfrmBufferLengthType</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_01_XfrmXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>378</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the XDM provides an error message in case when transformer modules 
    are configured with a different XfrmBufferLengthType value.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * An valid E2EXf and SomeIpXf (stub) config: The configured value of XfrmBufferLengthType in 
                                                 both transformer modules is UINT16.
    * An invalid E2EXf config: The configured value of XfrmBufferLengthType in the E2EXf module is 
                               different than the configured value of XfrmBufferLengthType in the 
                               SomeIpXf (stub) module.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_01013_IdenticalXfrmVariableDataPrototypeInstanceRefUsedByTwoInvTransformers</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_01_XfrmXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>411</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the XDM provides an error message in case when different transformer modules 
    have configured a XfrmImplementationMapping with identical SwComponentPrototype, PortPrototype 
    and VariableDataPrototype references.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * An valid E2EXf config: The E2EXf configuration does not have configured two XfrmImplementationMappings 
                             which use identical references for SwComponentPrototype, PortPrototype 
                             and VariableDataPrototype.
    * An invalid E2EXf config: The E2EXf configuration has configured two XfrmImplementationMappings 
                               which use identical references for SwComponentPrototype, PortPrototype 
                               and VariableDataPrototype.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_E_00007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_01014_TwoTransformersWithSameSignalGroupRefButNoXfrmVariableDataPrototypeInstanceRef</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_01_XfrmXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>446</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that the XDM provides an error message in case when different transformer modules 
    have configured a XfrmImplementationMapping that reference the same ISignalGroup but one of them 
    does not have configured the XfrmVariableDataPrototypeInstanceRef
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    * An valid E2EXf config: The E2EXf has configured multiple XfrmImplementationMappings which reference 
                             the same ISignalGroup and all mappings have configured VariableDataPrototype.
    * An invalid E2EXf config: The E2EXf has configured multiple XfrmImplementationMappings which reference 
                               the same ISignalGroup but one mapping does not have configured VariableDataPrototype.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_XDM_constr_09094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXF_GEN_02001_WrongProtocol</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_02_TransformationTechnologyChecks/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that the MCG shows a warning when the parameter Protocol of the 
  TransformationTechnology in the system description is set to an incorrect value.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: TransformationTechnology.Protocol
Test Precondition: 
  * A valid system configuration: The parameter PROTOCOL of TRANSFORMATION-TECHNOLOGY is valid.
  * An invalid system configuration: The parameter PROTOCOL of TRANSFORMATION-TECHNOLOGY is set to
                                     an invalid value.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the warning message related to parameter in
          TRANSFORMATION-TECHNOLOGY.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_W_00002.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_02002_WrongVersion</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_02_TransformationTechnologyChecks/source/application/testspec.h</sourcefile>
      <sourceline>59</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that the MCG shows a warning when the parameter Version of the 
  TransformationTechnology in the system description is set to an incorrect value.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: TransformationTechnology.Version
Test Precondition: 
  * A valid system configuration: The parameter VERSION of TRANSFORMATION-TECHNOLOGY is valid.
  * An invalid system configuration: The parameter VERSION of TRANSFORMATION-TECHNOLOGY is set to an
                                     invalid value.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the warning message related to parameter in
          TRANSFORMATION-TECHNOLOGY.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_W_00002.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_02003_WrongTransformerClass</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_02_TransformationTechnologyChecks/source/application/testspec.h</sourcefile>
      <sourceline>91</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that the MCG shows a warning when the parameter TransformerClass of the 
  TransformationTechnology in the system description is set to an incorrect value.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: TransformationTechnology.TransformerClass
Test Precondition: 
  * A valid system configuration: The parameter TREANSFORMER-CLASS of TRANSFORMATION-TECHNOLOGY is valid.
  * An invalid system configuration: The parameter TREANSFORMER-CLASS of TRANSFORMATION-TECHNOLOGY is set to an
                                     invalid value.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the warning message related to parameter in
          TRANSFORMATION-TECHNOLOGY.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_W_00002.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_02004_MissingTransformationTechnology</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_02_TransformationTechnologyChecks/source/application/testspec.h</sourcefile>
      <sourceline>123</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that the MCG shows an error when the container TransformationTechnology in the
  system description is missing.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: TransformationTechnology
Test Precondition: 
  * A valid system configuration: The container TRANSFORMATION-TECHNOLOGY is present.
  * An invalid system configuration: The container TRANSFORMATION-TECHNOLOGY is missing.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces the error message related to missing TRANSFORMATION-TECHNOLOGY.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_MCG_E_00018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXF_GEN_03001_MAX_WINDOW_SIZE_VALID_ABOVE_MAXIMUM</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator warning is raised for the case when
    configured value of WindowSizeValid parameter of EndToEndTransformationDescription
    exceeds the maximum allowed value.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: EndToEndTransformationDescription.WindowSizeValid
Test Precondition: 
    * System model configuration: Value of the WindowSizeValid parameter is set to more
                               than the allowed maximum value.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue a warning which explicitly states
        the currently configured value and the generated value (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_W_00001</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03002_TOO_MANY_SERIALIZERS_IN_TRANSFORMER_CHAIN</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>61</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised for the case when
    the protected ISignal references a DataTransformation which contains
    more than one transformer of class SERIALIZER in the transformer chain.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: DataTransformation.TransformerChainRefs
Test Precondition: 
  * An invalid system model: DataTransformation which is referenced by the
      protected ISignal contains more than one transformer of class SERIALIZER
      in the transformer chain.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator produces an error message related to the invalid
          configuration of the transformer chain (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03003_INSUFFICIENT_SERIALIZERS_IN_TRANSFORMER_CHAIN</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>96</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised for the case when
    the protected ISignal references a DataTransformation which does
    not contain any transformer of class SERIALIZER in the transformer
    chain.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: DataTransformation.TransformerChainRefs
Test Precondition: 
  * An invalid system model: DataTransformation which is referenced by the
      protected ISignal does not contain a transformer of class SERIALIZER
      in the transformer chain.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator produces an error message related to the invalid
          configuration of the transformer chain (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03004_MISSING_TRANSFORMATION_TECHNOLOGY_IN_TRANSFORMER_CHAIN</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>132</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised for the case when
    the protected ISignal references a DataTransformation which does
    not contain the same TransformationTechnology in the Transformer chain
    which is configured for the XfrmTransformationTechnologyRef in the
    XfrmImplementationMapping.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: DataTransformation.TransformerChainRefs
Test Precondition: 
  * An invalid system model: DataTransformation which is referenced by the
      protected ISignal does not contain the same TransformationTechnology
      in the transformer chain which is configured for the
      XfrmTransformationTechnologyRef parameter in the
      XfrmImplementationMapping.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator produces an error message related to the invalid
          configuration of the transformer chain (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03005_INVALID_UPPER_HEADER_BITS_TO_SHIFT_COMXF</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>171</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised for the case when
    a serializing transformer in the transformer chain has protocol configured
    to COMBased and the value of
    EndToEndTransformationDescription.upperHeaderBitsToShift attribute is not
    set to 0.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: EndToEndTransformationDescription.upperHeaderBitsToShift
Test Precondition: 
  An invalid system model configuration:
    * Value of the upperHeaderBitsToShift parameter is set to an invalid value.
    * Serializing transformer in the transformer chain has protocol configured
      to COMBased.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue an error which explicitly states
        the currently configured value of the upperHeaderBitsToShift and an
        expected value (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00005.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03006_INVALID_UPPER_HEADER_BITS_TO_SHIFT_SOMEIPXF</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>210</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised for the case when
    a serializing transformer in the transformer chain has protocol configured
    to SOMEIP and the value of
    EndToEndTransformationDescription.upperHeaderBitsToShift attribute is not
    set to 64.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: EndToEndTransformationDescription.upperHeaderBitsToShift
Test Precondition: 
  An invalid system model configuration:
    * Value of the upperHeaderBitsToShift parameter is set to an invalid value.
    * Serializing transformer in the transformer chain has protocol configured
      to SOMEIP.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue an error which explicitly states
        the currently configured value of the upperHeaderBitsToShift and an
        expected value (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00005.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03007_INVALID_HEADER_LENGTH_COMXF</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>249</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised for the case when
    a serializing transformer in the transformer chain has protocol configured
    to COMBased and the value of headerLength parameter is not set to 0.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: TransformationTechnology.BufferProperties.headerLength
Test Precondition: 
  An invalid system model configuration:
    * Value of the headerLength parameter is set to an invalid value.
    * Serializing transformer in the transformer chain has protocol configured
      to COMBased.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue an error which explicitly states
        the currently configured value of the headerLength parameter and an
        expected value (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00006.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03008_INVALID_HEADER_LENGTH_SOMEIPXF_P01</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>286</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised for the case when
    a serializing transformer in the transformer chain has protocol configured
    to SOMEIP and profileName is set PROFILE_01 and the value of
    headerLength parameter is not set to 16.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: BufferProperties.headerLength
Test Precondition: 
  An invalid system model configuration:
    * Value of the headerLength parameter is set to an invalid value.
    * Serializing transformer in the transformer chain has protocol configured
      to SOMEIP.
    * Value of profileName is set to PROFILE_01.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue an error which explicitly states
        the currently configured value of the headerLength parameter and an
        expected value (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00006.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03009_INVALID_HEADER_LENGTH_SOMEIPXF_P02</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>325</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised for the case when
    a serializing transformer in the transformer chain has protocol configured
    to SOMEIP and profileName is set PROFILE_02 and the value of
    headerLength parameter is not set to 16.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: BufferProperties.headerLength
Test Precondition: 
  An invalid system model configuration:
    * Value of the headerLength parameter is set to an invalid value.
    * Serializing transformer in the transformer chain has protocol configured
      to SOMEIP.
    * Value of profileName is set to PROFILE_02.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue an error which explicitly states
        the currently configured value of the headerLength parameter and an
        expected value (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00006.3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03010_INVALID_HEADER_LENGTH_SOMEIPXF_P04</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>364</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised for the case when
    a serializing transformer in the transformer chain has protocol configured
    to SOMEIP and profileName is set PROFILE_04 and the value of
    headerLength parameter is not set to 96.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: BufferProperties.headerLength
Test Precondition: 
  An invalid system model configuration:
    * Value of the headerLength parameter is set to an invalid value.
    * Serializing transformer in the transformer chain has protocol configured
      to SOMEIP.
    * Value of profileName is set to PROFILE_04.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue an error which explicitly states
        the currently configured value of the headerLength parameter and an
        expected value (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00006.4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03011_INVALID_HEADER_LENGTH_SOMEIPXF_P05</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>403</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised for the case when
    a serializing transformer in the transformer chain has protocol configured
    to SOMEIP and profileName is set PROFILE_05 and the value of
    headerLength parameter is not set to 24.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: BufferProperties.headerLength
Test Precondition: 
  An invalid system model configuration:
    * Value of the headerLength parameter is set to an invalid value.
    * Serializing transformer in the transformer chain has protocol configured
      to SOMEIP.
    * Value of profileName is set to PROFILE_05.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue an error which explicitly states
        the currently configured value of the headerLength parameter and an
        expected value (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00006.5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03012_INVALID_HEADER_LENGTH_SOMEIPXF_P06</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>443</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised for the case when
    a serializing transformer in the transformer chain has protocol configured
    to SOMEIP and profileName is set PROFILE_06 and the value of
    headerLength parameter is not set to 40.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: BufferProperties.headerLength
Test Precondition: 
  An invalid system model configuration:
    * Value of the headerLength parameter is set to an invalid value.
    * Serializing transformer in the transformer chain has protocol configured
      to SOMEIP.
    * Value of profileName is set to PROFILE_06.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue an error which explicitly states
        the currently configured value of the headerLength parameter and an
        expected value (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00006.6</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03013_INVALID_HEADER_LENGTH_SOMEIPXF_P07</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>482</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised for the case when
    a serializing transformer in the transformer chain has protocol configured
    to SOMEIP and profileName is set PROFILE_07 and the value of
    headerLength parameter is not set to 160.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: BufferProperties.headerLength
Test Precondition: 
  An invalid system model configuration:
    * Value of the headerLength parameter is set to an invalid value.
    * Serializing transformer in the transformer chain has protocol configured
      to SOMEIP.
    * Value of profileName is set to PROFILE_07.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue an error which explicitly states
        the currently configured value of the headerLength parameter and an
        expected value (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00006.7</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03014_INVALID_HEADER_LENGTH_SOMEIPXF_P11</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>521</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised for the case when
    a serializing transformer in the transformer chain has protocol configured
    to SOMEIP and profileName is set PROFILE_11 and the value of
    headerLength parameter is not set to 16.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: BufferProperties.headerLength
Test Precondition: 
  An invalid system model configuration:
    * Value of the headerLength parameter is set to an invalid value.
    * Serializing transformer in the transformer chain has protocol configured
      to SOMEIP.
    * Value of profileName is set to PROFILE_11.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue an error which explicitly states
        the currently configured value of the headerLength parameter and an
        expected value (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00006.10</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03015_INVALID_HEADER_LENGTH_SOMEIPXF_PJLR</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>560</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised for the case when
    a serializing transformer in the transformer chain has protocol configured
    to SOMEIP and profileName is set PROFILE_JLR and the value of
    headerLength parameter is not set to 16.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: BufferProperties.headerLength
Test Precondition: 
  An invalid system model configuration:
    * Value of the headerLength parameter is set to an invalid value.
    * Serializing transformer in the transformer chain has protocol configured
      to SOMEIP.
    * Value of profileName is set to PROFILE_JLR.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue an error which explicitly states
        the currently configured value of the headerLength parameter and an
        expected value (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00006.8</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03016_INVALID_HEADER_LENGTH_SOMEIPXF_PRN</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>599</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised for the case when
    a serializing transformer in the transformer chain has protocol configured
    to SOMEIP and profileName is set PROFILE_PRN and the value of
    headerLength parameter is not set to 16.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: BufferProperties.headerLength
Test Precondition: 
  An invalid system model configuration:
    * Value of the headerLength parameter is set to an invalid value.
    * Serializing transformer in the transformer chain has protocol configured
      to SOMEIP.
    * Value of profileName is set to PROFILE_PRN.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue an error which explicitly states
        the currently configured value of the headerLength parameter and an
        expected value (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00006.9</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03017_HEADER_LENGTH_MULTIPLE_OF_EIGHT</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>638</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised for the case when
    the value of headerLength parameter in bits is not a multiple of 8.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: TransformationTechnology.BufferProperties.headerLength
Test Precondition: 
  An invalid system model configuration:
    * Value of the headerLength parameter is not a multiple of 8.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue an error which explicitly states
        the currently configured value of the headerLength parameter and an
        expected value (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00008</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03018_UPPER_HEADER_BITS_TO_SHIFT_MULTIPLE_OF_EIGHT</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>672</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised for the case when
    the value of upperHeaderBitsToShift parameter in bits is not a multiple of 8.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: EndToEndTransformationDescription.upperHeaderBitsToShift
Test Precondition: 
  An invalid system model configuration:
    * Value of the upperHeaderBitsToShift parameter is not a multiple of 8.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue an error which explicitly states
        the currently configured value of the headerLength parameter and an
        expected value (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03019_MISSING_DATA_ID_P01</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>706</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that a generator error is raised for the case if the
  the deserialized ISignal is protected with PROFILE_01 and EndToEndTransformationISignalProps
  container has configured no DataId.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: EndToEndTransformationISignalProps.DataIds
Test Precondition: 
  * A valid E2EXf config: Deserialized ISignal is protected with PROFILE_01 and
                          EndToEndTransformationISignalProps has configured DataId
                          in the system model.
  * An invalid E2EXf config: Deserialized ISignal is protected with PROFILE_01 and
                            EndToEndTransformationISignalProps has configured no DataId
                            in the system model.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces an error message related to missing DataId in
          the system model (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03020_MISSING_DATA_ID_P02</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>744</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that a generator error is raised for the case if the
  the deserialized ISignal is protected with PROFILE_02 and EndToEndTransformationISignalProps
  container has configured no DataIds.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: EndToEndTransformationISignalProps.DataIds
Test Precondition: 
  * A valid E2EXf config: Deserialized ISignal is protected with PROFILE_02 and
                          EndToEndTransformationISignalProps has configured DataId
                          in the system model.
  * An invalid E2EXf config: Deserialized ISignal is protected with PROFILE_02 and
                            EndToEndTransformationISignalProps has configured no DataId
                            in the system model.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces an error message related to missing DataIds in
          the system model (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03021_MISMATCHING_SOURCE_ID</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>782</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised if two ISignals
    of which their SystemSignal counterparts are part of the same ClientServerToSignalMapping
    via CallSignalRef and ReturnSignalRef have their configuration parameter sourceId
    in container EndToEndTransformationISignalProps configured to different value.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: EndToEndTransformationISignalProps.sourceId
Test Precondition: 
  An invalid transformer module configuration:
    * Two ISignals of which their SystemSygnal counterparts are part of the same
      ClientServerToSignalMapping via ReturnSignalRef and CallSignalRef have
      their configuration parameter sourceId configured to different value.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue an error which explicitly lists
        the effected XfrmImplementationMappings and different sourceIds (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03022_DISABLED_END_TO_END_CHECK_CLIENT</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>819</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator warning is raised if parameter disableEndToEndCheck
    is set to TRUE for a deserializing transformer on the client side.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: EndToEndTransformationComSpecProps.disableEndToEndCheck
Test Precondition: 
  An invalid system model configuration:
    * Parameter disableEndToEndCheck is set to TRUE at the respective RPortPrototype.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue a warning which explicitly mentions
        the effected XfrmImplementationMapping and ISignal (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_W_00022.1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03023_DISABLED_END_TO_END_CHECK_SERVER</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>852</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator warning is raised if parameter disableEndToEndCheck
    is set to TRUE for a deserializing transformer on the server side.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: EndToEndTransformationComSpecProps.disableEndToEndCheck
Test Precondition: 
  An invalid system model configuration:
    * Parameter disableEndToEndCheck is set to TRUE at the respective PPortPrototype.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue a warning which explicitly mentions
        the effected XfrmImplementationMapping and ISignal (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_W_00022.2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03024_INVALID_MAX_DELTA_COUNTER_CLIENT</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>885</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator warning is raised if parameter maxDeltaCounter
    is set to a different value than 1 for a deserializing transformer on the client side that uses
    profile P44m.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: EndToEndTransformationComSpecProps.maxDeltaCounter
Test Precondition: 
  An invalid system model configuration:
    * Value of parameter maxDeltaCounter is not set to 1.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue the expected warning (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_W_00023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03025_INVALID_MAX_DELTA_COUNTER_SERVER</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>918</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator warning is raised if parameter maxDeltaCounter
    is set a different value than 65535 for a deserializing transformer on the server side that uses
    profile P44m.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: EndToEndTransformationComSpecProps.maxDeltaCounter
Test Precondition: 
  An invalid system model configuration:
    * Value of parameter maxDeltaCounter is not set to 65535.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue the expected warning (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_W_00024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03026_INVALID_DISABLE_END_TO_END_STATE_MACHINE_SIGNAL</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>951</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator warning is raised if parameter disableEndToEndCheck
    is configured to TRUE but parameter disableEndToEndStateMachine is configured to FALSE
    for a deserializing transformer used in a sender/receiver type communication that deserializes a signal.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: EndToEndTransformationComSpecProps.disableEndToEndStateMachine
Test Precondition: 
  An invalid system model configuration:
    * Parameter disableEndToEndCheck is set to true and parameter disableEndToEndStateMachine is set to false.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue the expected warning (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_W_00028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03027_CS_TREANSFORMER_PAIR_ASSIGNED_TO_DIFFERENT_PARTITIONS</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>984</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test verifies that a generator error is raised if two XfrmImplementationMappings
    of which their transformed SystemSignals are part of the same ClientServerToSignalMapping
    via CallSignalRef and ReturnSignalRef have their local configuration parameter
    XfrmOsApplicationRef configured to different value.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: XfrmOsApplicationRef
Test Precondition: 
  An invalid transformer module configuration:
    * Two XfrmImplementationMappings of which their transformed SystemSygnals
      are part of the same ClientServerToSignalMapping via ReturnSignalRef
      and CallSignalRef have their local configuration parameters XfrmOsApplicationRef
      configured to different value.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: E2EXf generator shall issue an error which explicitly lists
        the effected XfrmImplementationMappings and memory partitions
        to which they are assigned to (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03028_INVALID_BSWM_REF</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>1023</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that a generator error is raised for the case when the
  Bswm referenced by the XfrmTransformerBswModuleEntryRef or
  XfrmInvTransformerBswModuleEntryRef parameter of the XfrmImplementationMapping
  does not exist in the system model.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: XfrmImplementationMapping.XfrmInvTransformerBswModuleEntryRef
Test Precondition: 
  * A valid E2EXf config: The referenced Bswm exists in the system model.
  * An invalid E2EXf config: The referenced Bswm does not exist in the system model.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces an error message related to missing Bswm in
          the system model (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.Xfrm_MCG_E_00005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03029_MISMATCHING_PROFILE</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>1058</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that a generator error is raised if two XfrmImplementationMappings
  of which their transformed SystemSignals are part of the same ClientServerToSignalMapping
  via CallSignalRef and ReturnSignalRef have configured different profileName in their
  EndToEndTransformationDescription container.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: EndToEndTransformationDescription.profileName
Test Precondition: 
  * A valid E2EXf config: Signals referenced by CallSignalRef and ReturnSignalRef of the
                          same ClientServerToSignalMapping have configured the same profileName
                          in their EndToEndTransformationDescription container.
  * An invalid E2EXf config: Signals referenced by CallSignalRef and ReturnSignalRef of the
                             same ClientServerToSignalMapping have configured different profileName
                             in their EndToEndTransformationDescription container.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces an error message related to mismatching
          E2E profileNames (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03030_CS_FAN_IN</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>1097</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that a generator error is raised if two XfrmImplementationMappings
  transform a different ISignal that are mapped to the same SystemSignal and at the same time
  this SystemSignal is used part of a ClientServerToSignalMapping.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: ISignal.systemSignalRef
Test Precondition: 
  * A valid E2EXf config: Exactly one ISignal references a SystemSignal that is part of a
                          ClientServerToSignalMapping.
  * An invalid E2EXf config: Two different ISignals reference the same SystemSignal
                             that is part of a ClientServerToSignalMapping.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces an error message
          stating that multiple ISignals are mapped
          to the same SystemSignal (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_03031_MULTIPLE_CS_TRANSFORMERS_MAP_TO_THE_SAME_ISIGNAL</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_03_MCG_Checks/source/application/testspec.h</sourcefile>
      <sourceline>1134</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that a generator error is raised if two XfrmImplementationMappings
  transform the same ISignal where its SystemSignal counter part is used in a ClientServerToSignalMapping.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: XfrmISignalRef
Test Precondition: 
  * A valid E2EXf config: Exactly one XfrmImplementationMappings references a particular ISignal where its SystemSignal
                          counter part is used in a ClientServerToSignalMapping.
  * An invalid E2EXf config: Two different XfrmImplementationMappings reference the same ISignal where its SystemSignal
                             counter part is used in a ClientServerToSignalMapping.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The generator produces an error message
          stating that multiple XfrmImplementationMappings
          transform the same ISignal (see runTest.cfg).

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_MCG_E_00027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXF_GEN_04001_TransactionHandleTypeRef_Enabled_TransformerClassExtractProtocolHeaderFields_Disabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_04_E2EXfXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that an XDM error is reported if local module configuration parameter
    XfrmCSTransactionHandleImplementationDataTypeRef is enabled and
    XfrmTransformerClassExtractProtocolHeaderFields is disabled.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: XfrmCSTransactionHandleImplementationDataTypeRef
Test Precondition: 
  System model configuration:
    * E2EXf protects an ISignal that uses Client/Server communication.
  E2EXf module configuration:
    * A valid local module configuration where both parameters XfrmCSTransactionHandleImplementationDataTypeRef
      and XfrmTransformerClassExtractProtocolHeaderFields are enabled.
    * An invalid local module configuration where parameter XfrmCSTransactionHandleImplementationDataTypeRef
      is enabled and XfrmTransformerClassExtractProtocolHeaderFields is disabled.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The XDM check produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_XDM_E_00002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_04002_TransformerClassExtractProtocolHeaderFields_Enabled_TransactionHandleTypeRef_Disabled</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_04_E2EXfXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>70</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that an XDM error is reported if local module configuration parameter
    XfrmCSTransactionHandleImplementationDataTypeRef is disabled and
    XfrmTransformerClassExtractProtocolHeaderFields is enabled.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: XfrmTransformerClassExtractProtocolHeaderFields
Test Precondition: 
  System model configuration:
    * E2EXf protects an ISignal that uses Client/Server communication.
  E2EXf module configuration:
    * A valid local module configuration where both parameters XfrmCSTransactionHandleImplementationDataTypeRef
      and XfrmTransformerClassExtractProtocolHeaderFields are enabled.
    * An invalid local module configuration where parameter XfrmCSTransactionHandleImplementationDataTypeRef
      is disabled and XfrmTransformerClassExtractProtocolHeaderFields is enabled.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The XDM check produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_XDM_E_00003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_04003_InvalidCSTransactionHandleType</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_04_E2EXfXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>113</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that an XDM error is reported if local module configuration parameter
    XfrmCSTransactionHandleImplementationDataTypeRef does not reference the E2EXf_CSTransactionHandleType type.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: XfrmCSTransactionHandleImplementationDataTypeRef
Test Precondition: 
  System model configuration:
    * E2EXf protects an ISignal that uses Client/Server communication.
  E2EXf module configuration:
    * A valid local module configuration where parameter XfrmCSTransactionHandleImplementationDataTypeRef
      references E2EXf_CSTransactionHandleType type.
    * An invalid local module configuration where parameter XfrmCSTransactionHandleImplementationDataTypeRef
      is references a different type than E2EXf_CSTransactionHandleType.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The XDM check produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_XDM_E_00001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_GEN_04004_Invalid_XfrmTransformerClassExtractProtocolHeaderFields</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Generic/IN/E2EXf_GenTest_04_E2EXfXdmChecks/source/application/testspec.h</sourcefile>
      <sourceline>155</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
    This test shall verify that an XDM error is reported if value of the local module configuration parameter
    XfrmTransformerClassExtractProtocolHeaderFields is not set to SERIALIZER.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Negative Tests / Fault-injection: at configuration level
&lt;/para&gt;

Test Object: XfrmTransformerClassExtractProtocolHeaderFields
Test Precondition: 
  System model configuration:
    * E2EXf protects an ISignal that uses Client/Server communication.
  E2EXf module configuration:
    * A valid local module configuration where the value of parameter XfrmTransformerClassExtractProtocolHeaderFields
      is set to SERIALIZER.
    * An invalid local module configuration where the value parameter XfrmTransformerClassExtractProtocolHeaderFields
      is not set to SERIALIZER.

Test Execution: 
  01: Generate with a valid configuration.
  02: VP: The generator exits without errors.
  03: Generate with an erroneous configuration.
  04: VP: The XDM check produces the desired error message. (See: runTest.cfg)

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.E2EXf_XDM_E_00004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>710</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXF_IMP_01001_ServiceIDs</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Implementation/IN/E2EXf_ImpTest_01_General/source/application/E2EXf_ImpTest_01_General.c</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test shall verify that Service IDs are defined as specified.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Gray Box Testing
&lt;/para&gt;
&lt;para&gt;
  Gray Box Testing:

  The macros below must be defined with the appropriate values.

  Macro name                | Value |
  -----------------------------------
  E2EXf_SID_GETVERSIONINFO  | 0x00  |
  E2EXf_SID_TRANSFORMER     | 0x03  |
  E2EXf_SID_INV_TRANSFORMER | 0x04  |
&lt;/para&gt;

Test Object: None.
Test Precondition: None.
Test Execution: 
  01: VP: The macro E2EXf_SID_GETVERSIONINFO is defined and set to expected value.
  02: VP: The macro E2EXf_SID_TRANSFORMER is defined and set to expected value.
  03: VP: The macro E2EXf_SID_INV_TRANSFORMER is defined and set to expected value.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00032</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>E2EXf.SWS_E2EXf_00034</linksto>
          <dstversion>3</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>711</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_IMP_01002_PreswitchVersionInfoApiOn</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Implementation/IN/E2EXf_ImpTest_01_General/source/application/E2EXf_ImpTest_01_General.c</sourcefile>
      <sourceline>104</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test shall verify that VERSION_INFO_API is configurable ON at precompile time.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level:

  The macros must be generated with the same value as set in the corresponding 
  parameter in the configuration.

  Parameter          |    Macro name          | Value |
  -----------------------------------------------------
  XfrmVersionInfoApi | E2EXF_VERSION_INFO_API | TRUE  |

&lt;/para&gt;

Test Object: None.
Test Precondition: 
  Configuration parameter XfrmVersionInfoApi is switched on.

Test Execution: 
  01: VP:(E2EXf.EB.VERSION_INFO_API)The macro E2EXf_VERSION_INFO_API is defined and set to 'STD_ON'.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.ECUC_Xfrm_00019_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>E2EXf.EB.VERSION_INFO_API</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>712</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXF_IMP_02001_PreswitchVersionInfoApiOff</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Implementation/IN/E2EXf_ImpTest_02_PreswitchOff/source/application/E2EXf_ImpTest_02_PreswitchOff.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test shall verify that VERSION_INFO_API is configurable OFF at precompile time.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level:

  The macros must be generated with the same value as set in the corresponding 
  parameter in the configuration.

  Parameter          |    Macro name    | Value |
  -----------------------------------------------
  XfrmVersionInfoApi | VERSION_INFO_API | FALSE |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  Configuration parameter XfrmVersionInfoApi is switched off.

Test Execution: 
  01: VP: The macro E2EXf_VERSION_INFO_API is defined and set to 'STD_OFF'.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.VERSION_INFO_API</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>713</internalId></specobject>
  </specobjects>
    <specobjects doctype="tcs">
    <specobject>
      <id>TS_E2EXF_IMP_03001_E2ESM_MaxWindowSizeValid_Min_Boundary</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Implementation/IN/E2EXf_ImpTest_03_E2ESM_MaxWindowSizeValid/source/application/EbTest.c</sourcefile>
      <sourceline>46</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that the value of the generated E2ESM_MAX_WINDOW_SIZE_VALID macro 
  is above or equal to the minimum boundary for the case when the configured 
  WindowSizeValid parameter value is less than the allowed minimum value.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Boundary Value Analysis: at configuration level
  - Equivalence Class Partitioning: at configuration level
  - Gray Box Testing
&lt;/para&gt;
&lt;para&gt;
  Boundary Value Analysis and Equivalence Class Partitioning: at configuration level:

  Parameter / Permutation                                    | p0 |
  -----------------------------------------------------------------
  EndToEndTransformationComSpecProps/WindowSizeValid of Profile A | 0U |
  EndToEndTransformationDescription/WindowSizeValid  of Profile A | 0U |
  EndToEndTransformationComSpecProps/WindowSizeValid of Profile B | 0U |
  EndToEndTransformationDescription/WindowSizeValid  of Profile B | 0U |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
 - Include only E2EXf_Cfg.h in test to ensure that E2ESM_MAX_WINDOW_SIZE_VALID can only be defined there
 - Configured window sizes are smaller than the allowed minimum value (1)

Test Execution: 
  01: It is checked that the E2ESM_MAX_WINDOW_SIZE_VALID macro is defined AND 
      that its value is equal or greater than the allowed minimum value AND
      that its value is equal to the expected generated value.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.CalculateMaxWindowSize.MinValue</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>714</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_IMP_03002_E2ESM_MaxWindowSizeValid_Max_Boundary</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Implementation/IN/E2EXf_ImpTest_03_E2ESM_MaxWindowSizeValid/source/application/EbTest.c</sourcefile>
      <sourceline>100</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that the value of the generated E2ESM_MAX_WINDOW_SIZE_VALID macro 
  is below or equal to the maximum boundary for the case when the configured WindowSizeValid 
  parameter value is greater than the allowed maximum value.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Boundary Value Analysis: at configuration level
  - Equivalence Class Partitioning: at configuration level
  - Gray Box Testing
&lt;/para&gt;
&lt;para&gt;
  Boundary Value Analysis and Equivalence Class Partitioning: at configuration level:

  Parameter / Permutation                                    |  p1  |
  -------------------------------------------------------------------
  EndToEndTransformationComSpecProps/WindowSizeValid of Profile A | 255U |
  EndToEndTransformationDescription/WindowSizeValid  of Profile A | 255U |
  EndToEndTransformationComSpecProps/WindowSizeValid of Profile B | 255U |
  EndToEndTransformationDescription/WindowSizeValid  of Profile B | 255U |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
 - Include only E2EXf_Cfg.h in test to ensure that E2ESM_MAX_WINDOW_SIZE_VALID can only be defined there
 - Configured window sizes are larger than the allowed maximum value (254)

Test Execution: 
  01: It is checked that the E2ESM_MAX_WINDOW_SIZE_VALID macro is defined AND 
      that its value is equal or less than the allowed maximum value AND
      that its value is equal to the expected generated value.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.CalculateMaxWindowSize.MaxValue</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>715</internalId></specobject>
    <specobject>
      <id>TS_E2EXF_IMP_03003_E2ESM_MaxWindowSizeValid_Max_Of_Multiple</id>
      <status>approved</status>
      <source>EB test case specification (asc_E2EXf)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_E2EXf/test/ts5/Implementation/IN/E2EXf_ImpTest_03_E2ESM_MaxWindowSizeValid/source/application/EbTest.c</sourcefile>
      <sourceline>153</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that the value of the generated E2ESM_MAX_WINDOW_SIZE_VALID macro 
  is equal to the maximum of all configured WindowSizeValid parameters of all Profiles.
&lt;/para&gt;
&lt;para&gt;
  The testing method used:
  - Equivalence Class Partitioning: at configuration level
&lt;/para&gt;
&lt;para&gt;
  Equivalence Class Partitioning: at configuration level:

  Parameter / Permutation                                    | p2  |
  ------------------------------------------------------------------
  EndToEndTransformationComSpecProps/WindowSizeValid of Profile A | 90U |
  EndToEndTransformationDescription/WindowSizeValid  of Profile A | 90U |
  EndToEndTransformationComSpecProps/WindowSizeValid of Profile B | 4U  |
  EndToEndTransformationDescription/WindowSizeValid  of Profile B | 4U  |
&lt;/para&gt;

Test Object: None.
Test Precondition: 
 - Include only E2EXf_Cfg.h in test to ensure that E2ESM_MAX_WINDOW_SIZE_VALID can only be defined there
 - The largest configured window size is 90

Test Execution: 
  01: It is checked that the E2ESM_MAX_WINDOW_SIZE_VALID macro is defined AND 
      that its value is equal or greater than the allowed minimum value AND
      that its value is equal or less than the allowed maximum value AND
      that its value is equal to the expected generated value.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>E2EXf.EB.CalculateMaxWindowSize</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>req</linkdestdoctype><linkerror/><internalId>260</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>716</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
