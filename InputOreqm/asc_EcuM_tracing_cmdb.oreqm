<?xml version="1.0" encoding="UTF-8"?>
<tracingresults>
  <environment>
    <toolname>ReqM2</toolname>
    <toolversion>1.30.0 (stable)</toolversion>
    <toolcopyright>Copyright 2010 - 2018 Elektrobit Automotive GmbH</toolcopyright>
    <libxmlversion>2.0207</libxmlversion>
    <libxml2compileversion>2.9.10</libxml2compileversion>
    <libxml2runtimeversion>20912</libxml2runtimeversion>
    <perlversion>v5.32.1</perlversion>
    <perlptrsize>64</perlptrsize>
    <commandline>-t -q -o asc_EcuM_tracing_cmdb.oreqm -O /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements -c /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml -s approved,rejected --wfatal WDUPLICATEID,WDUPLICATEIDANDVER /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_public_modulereference_integration_req.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_requirements_AUTOSAR_SWS_ECUStateManager.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_requirements_AUTOSAR_SWS_ECUStateManager_4_2_1.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_requirements_AUTOSAR_SWS_ECUStateManager_4_3.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_requirements_AUTOSAR_SWS_ECUStateManager_R20-11.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_requirements_EB_Refinements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_requirements_EB_Requirements.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_requirements_EB_RequirementsFixed.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_requirements_EB_Requirements_ASR40_Extensions.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_test_Manual_Verification.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/common_req/EcuM_DbgInst_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/common_req/EcuM_VerifyStub_EB_Extension.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm /cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</commandline>
    <timestamp>Mon Jun 17 21:50:55 2024</timestamp>
  </environment>
  <cmdline>
    <cmdparam>
      <name>I</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>O</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/TestProtocols/LogBase/requirements</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>c</name>
      <values>
        <value>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_PluginBuildEnv/common/config/AutoCoreReqM2Rules_RMP4_0.xml</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>o</name>
      <values>
        <value>asc_EcuM_tracing_cmdb.oreqm</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>q</name>
    </cmdparam>
    <cmdparam>
      <name>s</name>
      <values>
        <value>approved</value>
        <value>rejected</value>
      </values>
    </cmdparam>
    <cmdparam>
      <name>t</name>
    </cmdparam>
    <cmdparam>
      <name>wfatal</name>
      <values>
        <value>WDUPLICATEID</value>
        <value>WDUPLICATEIDANDVER</value>
      </values>
    </cmdparam>
  </cmdline>
  <inputfiles>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_public_modulereference_integration_req.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_requirements_AUTOSAR_SWS_ECUStateManager.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_requirements_AUTOSAR_SWS_ECUStateManager_4_2_1.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_requirements_AUTOSAR_SWS_ECUStateManager_4_3.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_requirements_AUTOSAR_SWS_ECUStateManager_R20-11.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_requirements_EB_Refinements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_requirements_EB_Requirements.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_requirements_EB_RequirementsFixed.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_requirements_EB_Requirements_ASR40_Extensions.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_Native/asc_EcuM_test_Manual_Verification.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/common_req/EcuM_DbgInst_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/common_req/EcuM_VerifyStub_EB_Extension.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_GenericImporter/reqm_DEV.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_GenericImporter/reqm_IMPL.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_GenericImporter/reqm_IMPLXML.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_DocBookImporter/reqm_SWDD.reqm</inputfile>
    <inputfile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/ReqM2_OldCImporter/reqm_SWUTS_LEGACY.reqm</inputfile>
  </inputfiles>
  <configuration>
    <doctypes>
    <regexs>
      <!-- external level -->
      <regex>creq</regex>       <!-- since 10/1018: introduced for updated tracing model-->

      <!-- product line level -->
      <regex>fea</regex>
      <regex>swpad</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swts</regex>

      <!-- bundle level -->
      <regex>swrs</regex>
      <regex>swad</regex>
      <regex>swintts</regex>

      <!-- module level -->
      <regex>swdd</regex>
      <regex>swurs</regex>      <!-- since 10/1018: introduced for updated tracing model-->
      <regex>swmts</regex>      <!-- since 01/1010: introduced for updated tracing model RMP4.0-->
      <regex>swuts</regex>
      <regex>impl</regex>

      <!-- legacy items -->
      <regex>dev</regex>
      <regex>man</regex>
      <regex>lim</regex>
    </regexs>
  </doctypes>
    <rules>
    <!-- The Ruleset for RMP4.0 is currently identical to the previous rule set. This rule is
        intoduce to show that the right file is uses. It will be removed when the RMP4.0 rule set is
    reworked -->
    <rule>
      <name>INFO.Rule set RMP4.0</name>
      <description>This rules indicates that RMP4.0 rule set is used.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>WRN.general.doctypes</name>
      <description>The used doctype is not part of the tracing model</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobjects/@doctype</applyto>
          <condition>((. != 'creq') or (. != 'fea') or (. != 'swpad') or (. != 'swts') or (. != 'swrs') or (. !='swad') or (. != 'swintts') or (.!= 'swdd') or (. != 'swurs') or (. != 'swmts') or (. != 'swuts') or (. != 'impl') or (. != 'dev') or (. != 'man') or (. != 'lim'))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.status</name>
      <description>All specification objects must be either in status=approved or in status=rejected. Other
        statuses are not allowed. How to fix: Set status to rejected or approved.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status!='approved') and (./status!='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected</name>
      <description>Status status=rejected is only allowed for requirements. How to fix: set to approved for specification object that are not requirements.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype!='swrs')  and (../@doctype!='swmrs') and (../@doctype!='swurs') and (./status='rejected')]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.comment</name>
      <description>Specification objects with status=rejected shall have a comment or rationale that
        starts with on of the following texts: "This requirement is informational only", "This requirement is not applicable".
        How to fix: Add some text starting with "This requirement is informational only"
        or "This requirement is not applicable" to either the comment or to the rationale.
        Comment: Implementation of check checks for contains instead of starts-with since there is
        no trim function in the used XPATH engine.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>contains(./comment,"This requirement is informational only") or contains(./rationale,"This requirement is informational only") or contains(./comment,"This requirement is not applicable") or contains(./rationale,"This requirement is not applicable")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.general.rejected.coverage</name>
      <description>Specification objects with status=rejected shall not need coverage. How to fix: remove need for coverage.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(./status='rejected')]</applyto>
          <condition>count(./needscoverage)=0</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.count</name>
      <description>Unit requirements with status=approved need to be covered, exceptions from
      this rule: configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") and requirements with
      a comment starting with "The adherence to this requirement is ensured by the following
      release check (URL to the checklist template plus ID of the check):".
      How to fix: Provide a needsobj element for those specobjects or comment according to the rule.
      </description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and count(./fulfilledby/ffbObj)=0]</applyto>
          <!--This condition is false if the id of a specification object does not end with '_Conf' or '_CONF' or does not start with ECUC_ -->
          <condition>substring-after(./id,"ECUC_")!="" or substring-before(./id,"_Conf")!="" or substring-before(./id,"_CONF")!="" or contains(./comment,"The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):")</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swurs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.rationale</name>
      <description>Requirements with status=approved and without coverage needs that are
        configuration requirements (postfix "_CONF" or "_Conf" or prefix "ECUC_") shall have a comment or rationale
        with the following text: "This is a configuration parameter requirement without functional
        specification.". How to fix: Add some text starting with "This is a configuration parameter
        requirements without functional specification" to either the comment or to the rationale.</description>
      <regexchecks>
        <regexcheck>
          <applyto>//specobject[(../@doctype='swrs') and (./status='approved') and count(./needscoverage/needsobj)=0 and (substring-after(./id,"ECUC_")!="" or substring-before(./id,"_CONF")!="" or substring-before(./id,"_Conf")!="")]</applyto>
          <regex>This is a configuration parameter requirement without functional specification.</regex>
        </regexcheck>
      </regexchecks>
    </rule>

    <rule>
      <name>ERR.swurs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.releases</name>
      <description>Requirements which originates from AUTOSAR (source tag contains term 'AUTOSAR_SWS', 'AUTOSAR_TPS',
        'AUTOSAR_ASWS' or 'AUTOSAR_TR') shall have their release tag set to 'AUTOSAR {major}.{minor}.{patch}' (e.g. 'AUTOSAR 4.3.0').
        Other requirements (including refinements of AUTOSAR requirements) must not contain any of the listed prefixes as
        part of the source tag.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs') and (contains(./source,'AUTOSAR_SWS') or contains(./source,'AUTOSAR_TPS') or contains(./source,'AUTOSAR_ASWS') or contains(./source,'AUTOSAR_TR'))]</applyto>
          <condition>contains(./releases/release,'AUTOSAR')</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.count</name>
      <description>Design elements with status=approved need to be covered.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd') and (./status='approved') and count(./needscoverage/needsobj)=0]</applyto>
          <condition>false()</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swurs.needscoverage.doctypes</name>
      <description>Requirements can be covered only by swurs, swad, dev, lim, swdd, impl, swuts, swmts, or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swurs')]</applyto>
          <condition>(./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="dev" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swrs.needscoverage.doctypes</name>
      <description>Requirements of type swrs can be covered only by swrs, swurs, swad, swintts or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swrs')]</applyto>
          <condition>(./needscoverage/needsobj="swrs" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="swad" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swintts" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swdd.needscoverage.doctypes</name>
      <description>Design elements of type swdd can only be covered by swdd, swurs, impl, swuts, lim or man</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swdd')]</applyto>
          <condition>(./needscoverage/needsobj="swdd" or ./needscoverage/needsobj="swurs" or ./needscoverage/needsobj="impl" or ./needscoverage/needsobj="swuts" or ./needscoverage/needsobj="swmts" or ./needscoverage/needsobj="lim" or ./needscoverage/needsobj="man" or (count(./needscoverage/needsobj)=0))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.dev.needscoverage.count</name>
      <description>Deviations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='dev')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swuts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swmts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swintts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swts.needscoverage.count</name>
      <description>Test case sepecifications shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.needscoverage.count</name>
      <description>Manual test cases shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.impl.needscoverage.count</name>
      <description>Source code shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='impl')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.lim.needscoverage.count</name>
      <description>Limitations shall not need/receive coverage</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='lim')]</applyto>
          <condition>(count(./needscoverage/needsobj)=0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.fea.needscoverage.test</name>
      <description>Features shall be tested by software test ('swts') or manuel test ('man'). If no test is planned a justification shall be given.
                   A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>(
               ./needscoverage/needsobj="swts" or ./needscoverage/needsobj="man" or ./fulfilledby/ffbObj/ffbType="swts" or ./fulfilledby/ffbObj/ffbType="man" or contains(./furtherinfo,"fea.needscoverage.test") or contains(./furtherinfo,"fea.needscoverage.doctypes"))</condition>
        </conditioncheck>
      </conditionchecks>
          </rule>

    <rule>
      <name>WRN.fea.needscoverage.impl</name>
      <description>Features shall be covered by implementation fea, swrs, swad, swpad, swurs, man and swts. For lagacy features a justification is acceppted. A justification can be given in the futherinfo tag. The justification shall start with this rule name.</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='fea')]</applyto>
          <condition>( ./needscoverage/needsobj="swrs" or ./fulfilledby/ffbObj/ffbType="swrs" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swpad" or ./fulfilledby/ffbObj/ffbType="swpad" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="fea" or ./fulfilledby/ffbObj/ffbType="fea" or contains(./furtherinfo,"fea.needscoverage.impl"))</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>


    <rule>
      <name>ERR.swad.fulfilledby.doctypes</name>
      <description>Architectural design objects of type swad can only be covered by swurs, swad, swdd, swintts, man, otherwise they should be refined with swrs</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swad')]</applyto>
          <condition>(./fulfilledby/ffbObj/ffbType="swurs" or ./needscoverage/needsobj="swurs" or ./fulfilledby/ffbObj/ffbType="req" or ./needscoverage/needsobj="req" or ./fulfilledby/ffbObj/ffbType="swad" or ./needscoverage/needsobj="swad" or ./fulfilledby/ffbObj/ffbType="swdd" or ./fulfilledby/ffbObj/ffbType="swintts" or ./needscoverage/needsobj="swintts" or ./fulfilledby/ffbObj/ffbType="man" or ./needscoverage/needsobj="man") </condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.swmts.providescoverage.doctypes</name>
      <description>Test case specifications (tcs) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='tcs')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

    <rule>
      <name>ERR.man.providescoverage.doctypes</name>
      <description>Manual test case specification (man) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='man')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swuts.providescoverage.doctypes</name>
      <description>Software unit test case specification (swuts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swuts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swintts.providescoverage.doctypes</name>
      <description>Software integration test case specification (swintts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swintts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

   <rule>
      <name>ERR.swts.providescoverage.doctypes</name>
      <description>Software test case specification (swts) shall cover at least one other spec object</description>
      <conditionchecks>
        <conditioncheck>
          <applyto>//specobject[(../@doctype='swts')]</applyto>
          <condition>(count(./providescoverage/provcov)&gt;0)</condition>
        </conditioncheck>
      </conditionchecks>
    </rule>

  </rules>
    <oreqmRules>

        <rule>
            <name>WRN.swts.needscoverage.count</name>
            <description>Violated if there are more than 10 swts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.man.needscoverage.count</name>
            <description>Violated if there are more than 10 man specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='man']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>man.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swintts.needscoverage.count</name>
            <description>Violated if there are more than 10 swintts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swintts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swintts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
        <rule>
            <name>WRN.swmts.needscoverage.count</name>
            <description>Violated if there are more than 10 swmts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swmts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swmts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swuts.needscoverage.count</name>
            <description>Violated if there are more than 10 swuts specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swuts']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swuts.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swpad.needscoverage.count</name>
            <description>Violated if there are more than 10 swpad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swpad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swpad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.needscoverage.count</name>
            <description>Violated if there are more than 10 swrs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swrs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.needscoverage.count</name>
            <description>Violated if there are more than 10 swad specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swad']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.needscoverage.count</name>
            <description>Violated if there are more than 10 swurs specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swurs']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.needscoverage.count</name>
            <description>Violated if there are more than 10 swdd specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='swdd']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.impl.needscoverage.count</name>
            <description>Violated if there are more than 10 impl specobjects covering one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./needscoverage/needscov[needsobj='impl']/coveredby/linkedfrom)) &gt; 10]/furtherinfo</applyto>
                                        <regex>impl.needscoverage.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swrs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swrs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swrs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swrs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swad.fulfilledby.count</name>
            <description>Violated if there are more than 10 swad specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swad'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swad.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swurs.fulfilledby.count</name>
            <description>Violated if there are more than 10 swurs specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swurs'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swurs.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>

        <rule>
            <name>WRN.swdd.fulfilledby.count</name>
            <description>Violated if there are more than 10 swdd specobjects as fulfilledby link to one specobject and no appropriate information is provided in furtherinfo. The justification in furtherinfo must contain the rule name.</description>
            <conditionchecks>
                <conditioncheck>
                    <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]</applyto>
                    <condition>false() or (count(./furtherinfo) &gt; 0)</condition>
                </conditioncheck>
            </conditionchecks>
                        <regexchecks>
                                <regexcheck>
                                        <applyto>//specobject[(count(./fulfilledby/ffbObj[ffbType='swdd'])) &gt; 10]/furtherinfo</applyto>
                                        <regex>swdd.fulfilledby.count</regex>
                                </regexcheck>
                        </regexchecks>
        </rule>
  </oreqmRules>
  </configuration>
  <specdocument>
    <specobjects doctype="swurs">
    <specobject>
      <id>intgr.EcuM.EB_INTREQ_EcuM_0001</id>
      <status>approved</status>
      <source>EB integration requirement</source>
      <version>1</version>
      <description>
        In order to ensure the EcuM_GetMostRecentShutdown() and EcuM_GetNextRecentShutdown() APIs
        return valid data, the following call chain shall be used in a shutdown or reset sequence: 
          - EcuM_SelectShutdownTarget()
          - EcuM_SelectShutdownCause()
          - EcuM_GoDown()
      </description>
      <rationale>
        EcuM_GetMostRecentShutdown() and EcuM_GetNextRecentShutdown() return the values of the shutdown target,
        reset mode and shutdown cause. They will not return the expected most recent or next recent shutdown values
        if they are not previously set using the EcuM_SelectShutdownTarget() and EcuM_SelectShutdownCause() APIs.
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_13_prep_WIN32X86</srcid><srcstatus/><internalId>983</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>0</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">

    <defaults>
      <idprefix>EcuM.ASR403.</idprefix>
    </defaults>

    <specobject>
      <id>EcuM.ASR403.ECUM104_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Name    :   EcuMDefaultAppMode {ECUM_DEFAULT_APP_MODE}
        Description : The default application mode loaded when the ECU comes out of reset.
        Multiplicity  : 1
        Type          : Reference to [ OsAppMode ]
        ConfigurationClass
          Pre-compile time  --
          Link time         --
          Post-build time   X   VARIANT-POST-BUILD
        Scope / Dependency
      </description>
      <comment>
        EcuM uses real OS and so cannot be verified the loaded application mode
        using module tests.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.ECUC_EcuM_00104</srcid><srcstatus/><internalId>89</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.ECUM105_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Name: EcuMDefaultShutdownTarget
        Container Type: Sub-Container
        Parent Containers: EcuMCommonConfiguration,
        Description: This container describes the default shutdown target to be selected by EcuM. The
        actual shutdown target may be overridden by the EcuM_SelectShutdownTarget service.
        Lower Multiplicity: 1
        Upper Multiplicity: 1
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.ECUC_EcuM_00105</srcid><srcstatus/><internalId>90</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>2</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.ECUM106_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Name  : EcuMDefaultSleepModeRef
        Description : If EcuMDefaultShutdownTarget is EcuMStateSleep, this parameter
                      selects the default sleep mode. Otherwise this parameter may be ignored.
        Multiplicity :  0..1
        Type         :  Reference to [ EcuMSleepMode ]
        ConfigurationClass
          Pre-compile time    --
          Link time           --
          Post-build time     X   VARIANT-POST-BUILD
        Scope / Dependency
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.ECUC_EcuM_00106</srcid><srcstatus/><internalId>91</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>3</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.ECUM107_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Name  : EcuMDefaultState {ECUM_DEFAULT_SHUTDOWN_TARGET}
        Description : This parameter describes the state part of the default shutdown
                      target selected when the ECU comes out of reset. If EcuMStateSleep
                      is selected, the parameter EcuMDefaultSleepModeRef selects
                      the specific sleep mode.
        Multiplicity  1
        Type          EcucEnumerationParamDef
        Range
            EcuMStateOff    - Corresponds to ECUM_STATE_OFF in EcuM_StateType.
            EcuMStateReset  - Corresponds to ECUM_STATE_RESET in EcuM_StateType.
                              This literal is only be applicable for EcuMFlex.
            EcuMStateSleep  - Corresponds to ECUM_STATE_SLEEP in EcuM_StateType.
        ConfigurationClass
          Pre-compile time    --
          Link time           --
          Post-build time     X   VARIANT-POST-BUILD
        Scope / Dependency
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.Impl.Conf.PBVariant.DefaultState</srcid><srcstatus/><internalId>466</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>4</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.ECUM128_Conf</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Name        : EcuMResetReasonRef {ResetReason}
        Description : This parameter describes the mapping of reset reasons detected
                      by the MCU driver into wakeup sources.
        Multiplicity: 1
        Type        : Reference to [ McuResetReasonConf ]
        ConfigurationClass
          Pre-compile time    X   VARIANT-POST-BUILD
          Link time           --
          Post-build time     --
        Scope / Dependency
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.EB_Ref.ECUC_EcuM_00128</srcid><srcstatus/><internalId>409</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiplOfEcuMResetReasonRef</srcid><srcstatus/><internalId>570</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>5</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM487</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The integrator shall define a unique value for each user at system generation time. See
        EcuM147_Conf
      </description>
      <comment>
        This requirement is not applicable for EcuM. It is a requirement for the
        system integrator.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>6</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM507</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The EcuM_StateType shall encode states and sub-states of the ECU Manager module. States shall
        be encoded in the high-nibble, sub-states in the low-nibble. Hint for EcuM507: The sub-state
        encoded in EcuM_StateType can be determined by applying a bitwise AND to the state value and
        ECUM_SUBSTATE_MASK (first entry in the range section, above)
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>7</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2181</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The ECU Manager module shall call EcuM_SelectShutdownTarget  with the configured default
        shutdown target (see section 7.7 Shutdown Targets and EcuMDefaultShutdownTarget EcuM105_Conf)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_20</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>8</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2188</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        No wakeup event shall be missed after entering the SLEEP phase. If a valid wakeup event occurs
        while the ECU is in transition to SLEEP the ECU Manager module shall proceed as quickly as
        possible to the WakeupReaction Sequence and shall not enter the Halt or Poll Sequences.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.SWS_EcuM_02188</srcid><srcstatus/><internalId>157</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>9</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2563</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        When hardware has been put into a sleep mode during SHUTDOWN then this hardware must be
        restarted by its driver. The ECU Manager module shall invoke in the WakeupRestart Sequence
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>10</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2634</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The ECU Manager module shall not start the DET by default.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_COMP_01</srcid><srcstatus/><internalId>929</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_COMP_02</srcid><srcstatus/><internalId>930</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>11</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2676</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        EcuM.h shall contain API interface declarations for all ECU Manager module services.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_BSW.h_254</srcid><srcstatus/><internalId>679</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>12</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2677</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        EcuM_Cbk.h shall contain all declarations necessary to interact with the callbacks and
        callouts of the ECU Manager module.
      </description>
      <comment>
        The adherence to this requirement is ensured by the following release check (URL to the checklist template plus ID of the check):
      </comment>
      <verifycrit>
        URL:http://subversion.ebgroup.elektrobit.com/svn/autosar/asc_Project/trunk/doc/project/templates/Module_RFI_Checklist_template.xltx
        CHECK: Compiler Warnings
        REMARK: In case of missing declaration of any callback function, then there shall be compiler errors / warnings will be reported.
      </verifycrit>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>13</internalId></specobject>

  <specobject>
      <id>EcuM.ASR403.EcuM2719</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        A configuration tool shall fill the callout EcuM_AL_DriverRestart with
        initialization calls to the listed drivers in the order in which they
        occur in the list.
      </description>
      <verifycrit>
        This can be verified by configuration in Tresos, since the corresponding
        driver restart list is generated as in the config structure. Check the
        function EcuM_DriverRestartList() and EcuM_AL_DriverRestart() in
        "src\Autosar\generate\templates\EcuM_CalloutLists.c"
      </verifycrit>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1032</srcid><srcstatus/><internalId>850</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>14</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2720</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Entries in this list must appear in the same order as in the combined
        list of EcuM_DriverInitListOne and EcuM_DriverInitListTwo. This list may
        be a real subset though. In all other cases, the generation tool shall
        report an error. The included container has the same structure as
        EcuM_DriverInitItem
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_macros/EcuM_Checks.m_32</srcid><srcstatus/><internalId>665</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>15</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2728</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The function EcuM_GetVersionInfo shall return the version information of this module. The
        version information includes: Module Id Vendor Id Vendor-specific version numbers (BSW00407)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_01</srcid><srcstatus/><internalId>937</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>16</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2729</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The EcuM_GetVersionInfo function shall be configurable to ON/OFF at pre compile time through the
        ECUM_VERSION_INFO_API configuration parameter
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_COMP_01</srcid><srcstatus/><internalId>929</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_COMP_02</srcid><srcstatus/><internalId>930</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_01</srcid><srcstatus/><internalId>937</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>17</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2757</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The ECU Manager shall treat all errors immediately as errors.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>18</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2758</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The ECU Manager shall not recover from an error.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>19</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2759</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The ECU Manager Module shall report all errors as events.
      </description>
      <comment>
        This requirement is informational only. Note that EcuM reports the
        (Det) error(s) and actual treatment of this error can be handled
        (as event) by Det.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>20</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2763</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The ECU Manager module shall provide AUTOSAR ports to: Manage sleep and shutdown modalities
        select the shutdown target (mode) and get the current and last sleep targets select and get the
        reset modality get the time and cause of previous resets select and get the boot target set,
        reset and retrieve alarm clock values.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_30040</srcid><srcstatus/><internalId>961</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>21</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2783</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        If at least one module is configured to track development errors, the ECU Manager module shall
        initialize the DET before all other drivers during the StartPreOS sequence
      </description>
      <comment>
        This feature is not supported.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AutomaticDetInitialization</srcid><srcstatus/><internalId>559</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>22</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2790</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        EcuM_ValidateWakeupEvent shall return without effect for all sources except communication
        channels when called while the ECU Manager module is in the UP Phase
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.SWS_EcuM_02790</srcid><srcstatus/><internalId>193</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>23</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2858</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Mandatory Interfaces :
          BswM_Deinit                 - Deinitializes the BSW Mode Manager
          BswM_EcuM_CurrentState      - Function called by EcuM to indicate the current ECU
                                        Operation Mode
          BswM_EcuM_CurrentWakeup     - Function called by EcuM to indicate the current state of
                                        a wakeup source
          BswM_Init                   - Initializes the BSW Mode Manager.
          ComM_EcuM_WakeUpIndication  - Notification of a wake up on the corresponding channel.
          DisableAllInterrupts        - --
          EnableAllInterrupts         - --
          GetResource                 - --
          Mcu_GetResetReason          - The service reads the reset type from the hardware,
                                        if supported.
          Mcu_Init                    - This service initializes the MCU driver.
          Mcu_PerformReset            - The service performs a microcontroller reset.
          Mcu_SetMode                 - This service activates the MCU power modes.
          ReleaseResource             - --
          SchM_Deinit                 - Function for de-initialization of the SchM module.
          SchM_Init                   - Function for initialization of the SchM module.
          ShutdownOS                  - --
          StartOS                     - --
          WdgM_PerformReset           - Instructs the Watchdog Manager to cause a watchdog reset.
      </description>
      <comment>
        This requirement is not applicable. The EcuM mandatory interfaces have been updated
    　   in EcuM2858 of Autosar SWS document V4.2.0.　
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>24</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2862</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The ECU Manager module implementation shall include SchM_EcuM.h and MemMap.h.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/EcuM_Cfg.c_48</srcid><srcstatus/><internalId>624</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM.h_12</srcid><srcstatus/><internalId>666</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_Rte.c_44</srcid><srcstatus/><internalId>822</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MemMap</srcid><srcstatus/><internalId>566</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>25</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2935</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        If source code for caller and callee of EcuM_GetVersionInfo is available, the ECU Manager
        module should realize EcuM_GetVersionInfo as a macro, defined in the module's header file.
      </description>
      <comment>
        EB utilize this interface as a C function since source code of the
        caller is not available at this context.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_01</srcid><srcstatus/><internalId>937</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>26</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2977</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The overall architecture of the ECU Manager module service shall be as depicted in Figure 35:
        Figure 35 - ARPackage of the ECU Manager module
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>27</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2982</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Development error values are of type uint8.
      </description>
      <comment>
        This requirement is informational only since development error
        values are defined as macros.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>28</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2983</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The detection of development errors is configurable (ON / OFF) at pre-compile time. The switch
        ECUM_DEV_ERROR_DETECT  shall activate or deactivate the detection of all development errors.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/EcuM_Cfg.h.m4_101</srcid><srcstatus/><internalId>619</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>29</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2984</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        If the ECUM_DEV_ERROR_DETECT switch is enabled, the ECU Manager module shall check API
        parameters. The detailed description of the detected errors can be found in Section 7.12 Error
        Classification and in Chapter 8.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_63</srcid><srcstatus/><internalId>965</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_64</srcid><srcstatus/><internalId>966</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_InvalidBootTarget</srcid><srcstatus/><internalId>967</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_62</srcid><srcstatus/><internalId>978</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>30</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2986</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        If the pre-processor switch ECUM_DEV_ERROR_DETECT is set , the ECU Manager module shall report
        detected development errors to the Det_ReportError function of the Development Error Tracer (
        DET)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_60</srcid><srcstatus/><internalId>962</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_200</srcid><srcstatus/><internalId>979</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>31</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2988</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The code-file structure shall at least include files named: EcuM_Lcfg.c - for link time
        configurable parameters and EcuM_PBcfg.c - for post build time configurable parameters. These
        files shall contain all link time and post-build time configurable parameters.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/EcuM_PBcfg.c_3</srcid><srcstatus/><internalId>634</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>32</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2989</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The module code for the entire ECU Manager module implementation, or all of its parts, shall
        be contained in one or more C files with names conforming to the pattern EcuM_xxx.c.
      </description>
      <verifycrit>
      Module source file names are verified manually as files are located in
      http://subversion.ebgroup.elektrobit.com/svn/autosar/asc_EcuM/trunk/src/Autosar/
      </verifycrit>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.man.EcuM2989</srcid><srcstatus/><internalId>542</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>33</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2991</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The ECU Manager module implementation shall provide a file named EcuM.h which contains fix type
        declarations, forward declarations to generated types, and function prototypes.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_BSW.h_29</srcid><srcstatus/><internalId>677</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>34</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2992</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The ECU Manager module implementation shall provide a EcuM_Generated_Types.h file which
        contains generated type declarations that fulfill the forward declarations in EcuM.h.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.NoProvisionOf_EcuM_GeneratedTypes.h</srcid><srcstatus/><internalId>556</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>35</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2993</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The ECU Manager module implementation shall provide a EcuM_Cfg.h file which contains the
        configuration parameters.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/EcuM_Cfg.h.m4_3</srcid><srcstatus/><internalId>616</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>36</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM2994</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The ECU Manager module implementation shall provide a EcuM_Cbk.h file which contains the
        callback/callout function prototypes.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_Cbk.h_6</srcid><srcstatus/><internalId>705</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>37</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM3007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The ECU State Manager shall support the configuration variant
        VARIANT-POST-BUILD: This configuration variant contains a mix of
        pre-compile time, link time and post-build time parameters (BSW00344,
        BSW00404,BSW00405,BSW00345)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>38</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM3010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        When operating on a multicore ECU ECUM shall reserve a dedicated resource (RES_AUTOSAR_ECUM)
        for each core, which is allocated during GoSleep.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.SWS_EcuM_03010</srcid><srcstatus/><internalId>263</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>39</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM3013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The ClientServerInterface EcuM_AlarmClock shall look as follows
      </description>
      <comment>
        The EcuM_AlarmClock ClientServerInterface shown in
        graphics/Client_Server_EcuM_AlarmClock.PNG
        DELAYED - No Alarm clock support
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>40</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM3017</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The following pseudo code defines the interface of the ECU Manager Service
        /* This is the definition of the ECU Manager module as a service.
        This is the external view of the ECU Manager module, which is visible
        to the SW-Cs / ECU-integrator */
          Service EcuStateManager
          {
            ProvidePort EcuM_ShutdownTarget shutdownTarget;
            ProvidePort EcuM_BootTarget bootTarget;
            ProvidePort EcuM_AlarmClock alarmClock
          };
      </description>
      <comment>
        This requirement is informational only.
        The EcuM Service interface shown in graphics/EcuM_Service_Interface.PNG
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>41</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM3020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        In the Poll sequence the EcuM shall call the callouts EcuM_SleepActivity()
        and EcuM_CheckWakeup() in a blocking loop until a pending wakeup event is reported
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiCorePollSequence</srcid><srcstatus/><internalId>572</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>42</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM3023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        ECU Manager Module Code File Structure (BSW00300,BSW00346)
      </description>
      <comment>
        Refer the module source files: EcuM.c.m4 and EcuM_BootTarget.c
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_60</srcid><srcstatus/><internalId>715</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_BootTarget.c_3</srcid><srcstatus/><internalId>814</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>43</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM3025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The file EcuM_Types.h shall include Rte_EcuM_Type.h to include the types which are common used
        by BSW Modules and Software Components. EcuM_Types.h and EcuM.h shall only contain types, that
        are not already defined in Rte_EcuM_Type.h.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.FileInclusion</srcid><srcstatus/><internalId>560</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>44</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The EcuM_MainFunction shall only run on the master core
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.SWS_EcuM_04011</srcid><srcstatus/><internalId>286</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>45</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The ECU Manager module shall only process wakeup events on the master core.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.SWS_EcuM_04012</srcid><srcstatus/><internalId>287</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>46</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4013</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        There shall be a single, common EcuMDriveInitListZero  and EcuMDriverInitListOne  for all slave
        cores. EcuMDriverInitListZero_slave and EcuMDriverInitListOne_slave shall be empty.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiCore.DriverInitList</srcid><srcstatus/><internalId>553</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>47</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The ECU Manager module shall not call BswM_Init on slave cores.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.SWS_EcuM_04014</srcid><srcstatus/><internalId>288</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>48</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Figure 19 -Master Core StartPreOS Sequence
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.SWS_EcuM_04015</srcid><srcstatus/><internalId>289</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>49</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4016</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Figure 20 - Master Core StartPostOS Sequence
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.SWS_EcuM_04016</srcid><srcstatus/><internalId>290</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>50</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Figure 21 - Slave Core StartPreOS Sequence
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.SWS_EcuM_04017</srcid><srcstatus/><internalId>291</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>51</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Figure 22 - Slave Core StartPostOS Sequence
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.SWS_EcuM_04018</srcid><srcstatus/><internalId>292</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>52</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Figure 23 - Master Core OffPreOS Sequence
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.ASR42.SWS_EcuM_04019</srcid><srcstatus/><internalId>79</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>53</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Figure 24 - Master Core OffPostOS Sequence
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.SWS_EcuM_04020</srcid><srcstatus/><internalId>293</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>54</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Figure 25 - Slave Core OffPreOS Sequence
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.ASR42.SWS_EcuM_04021</srcid><srcstatus/><internalId>80</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>55</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Figure 26 - Slave Core OffPostOS Sequence
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.SWS_EcuM_04022</srcid><srcstatus/><internalId>294</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>56</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Figure 27 - Master Core GoSleep Sequence
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.ASR43.SWS_EcuM_04023</srcid><srcstatus/><internalId>82</internalId></linkedfrom><linkedfrom><srcid>EcuM.SWS_EcuM_04023</srcid><srcstatus/><internalId>295</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>57</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4024</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Figure 28 - Master Core Halt Sequence
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.SWS_EcuM_04024</srcid><srcstatus/><internalId>296</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>58</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Figure 29 - Master Core Poll Sequence
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.ASR43.SWS_EcuM_04025</srcid><srcstatus/><internalId>83</internalId></linkedfrom><linkedfrom><srcid>EcuM.SWS_EcuM_04025</srcid><srcstatus/><internalId>297</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>59</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Figure 30 - Master Core WakeupRestart Sequence
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.SWS_EcuM_04026</srcid><srcstatus/><internalId>298</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>60</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Figure 31 - Slave Core GoSleep Sequence
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.ASR43.SWS_EcuM_04027</srcid><srcstatus/><internalId>84</internalId></linkedfrom><linkedfrom><srcid>EcuM.SWS_EcuM_04027</srcid><srcstatus/><internalId>299</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>61</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Figure 32 - Slave Core Halt Sequence
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.SWS_EcuM_04028</srcid><srcstatus/><internalId>300</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>62</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Figure 33 - Slave Core Poll Sequence
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.ASR43.SWS_EcuM_04029</srcid><srcstatus/><internalId>85</internalId></linkedfrom><linkedfrom><srcid>EcuM.SWS_EcuM_04029</srcid><srcstatus/><internalId>301</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>63</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Figure 34 - Slave Core WakeupRestart Sequence
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.SWS_EcuM_04030</srcid><srcstatus/><internalId>302</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>64</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4031</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Values for production code Event Ids are assigned externally by the configuration of the Dem.
        They are published in the file Dem_IntErrId.h and included via Dem.h. These values shall be
        different from the values of the development errors specified in Table 7.
      </description>
      <comment>
        This requirement is not applicable for EcuM but applicable for DEM.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>65</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4034</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The ECUM module shall perform Inter Module Checks to avoid integration of
        incompatible files. The imported included files shall be checked by
        preprocessing directives The following version numbers shall be verified:
        - &amp;lt;MODULENAME&amp;gt;_AR_RELEASE_MAJOR_VERSION
        - &amp;lt;MODULENAME&amp;gt;_AR_RELEASE_MINOR_VERSION
        Where &amp;lt;MODULENAME&amp;gt; is the module short name of the other (external) modules
        which provide header files included by the ECUM module. If the values
        are not identical to the expected values, an error shall be
        reported.(BSW004,BSW003,BSW00318,BSW00321)
      </description>
      <comment>
        This requirement is refined specifically for AutoCore and
        is refined to 'EcuM.Version.Check'.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.EB_Ref.Version.Check</srcid><srcstatus/><internalId>401</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>66</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4035</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Each variable that shall be accessible by AUTOSAR Debugging shall be defined as global variable.
      </description>
      <comment>
        DELAYED - no debugging support
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.DebuggingSupport</srcid><srcstatus/><internalId>555</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>67</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4036</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        All type definitions of variables which shall be debugged shall be accessible by the header
        file EcuM.h.
      </description>
      <comment>
        DELAYED - no debugging support
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.DebuggingSupport</srcid><srcstatus/><internalId>555</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>68</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4037</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        The declaration of variables in the header file shall be such that it is possible to calculate
        the size of the variables by C-"sizeof"
      </description>
      <comment>
        DELAYED - no debugging support
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.DebuggingSupport</srcid><srcstatus/><internalId>555</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>69</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4039</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Name  : EcuM_StateType
        Type  : uint8
        Range :
                ECUM_SUBSTATE_MASK            0x0f
                ECUM_STATE_STARTUP            0x10
                ECUM_STATE_STARTUP_ONE        0x11
                ECUM_STATE_STARTUP_TWO        0x12
                ECUM_STATE_WAKEUP             0x20
                ECUM_STATE_WAKEUP_ONE         0x21
                ECUM_STATE_WAKEUP_VALIDATION  0x22
                ECUM_STATE_WAKEUP_REACTION    0x23
                ECUM_STATE_WAKEUP_TWO         0x24
                ECUM_STATE_WAKEUP_WAKESLEEP   0x25
                ECUM_STATE_WAKEUP_TTII        0x26
                ECUM_STATE_RUN                0x30
                ECUM_STATE_APP_RUN            0x32
                ECUM_STATE_APP_POST_RUN       0x33
                ECUM_STATE_SHUTDOWN           0x40
                ECUM_STATE_PREP_SHUTDOWN      0x44
                ECUM_STATE_GO_SLEEP           0x49
                ECUM_STATE_GO_OFF_ONE         0x4d
                ECUM_STATE_GO_OFF_TWO         0x4e
                ECUM_STATE_SLEEP              0x50
                ECUM_STATE_OFF                0x80
                ECUM_STATE_RESET              0x90
        (BSW00331)
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_BSW_Types.h_542</srcid><srcstatus/><internalId>696</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>70</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4042</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Name  : EcuM_BootTargetType
        Type  : uint8
        Range :
                - ECUM_BOOT_TARGET_APP              0   - The ECU will boot into the application
                - ECUM_BOOT_TARGET_OEM_BOOTLOADER   1   - The ECU will boot into the OEM bootloader
                - ECUM_BOOT_TARGET_SYS_BOOTLOADER   2   - The ECU will boot into the system
                                                          supplier bootloader

        Description: This type represents the boot targets the ECU Manager module can be
        configured with. The default boot target is ECUM_BOOT_TARGET_OEM_BOOTLOADER.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_BSW_Types.h_598</srcid><srcstatus/><internalId>702</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>71</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4046</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Service name: EcuM_GoDown
        Syntax: Std_ReturnType EcuM_GoDown( uint16 caller )
        Service ID[hex]:0x1f
        Sync/Async: Synchronous
        Reentrancy:Reentrant
        Parameters (in): caller - Module ID of the calling module. Only special modules are allowed
        to call this function.
        Parameters (inout):None
        Parameters (out):None
        Return value:Std_ReturnType - E_NOT_OK: The shutdown request was not accepted.
        E_OK: This cannot occur because if the request was accepted, this call will not return.
        Description:Instructs the ECU State Manager module to perform a power off or a reset
        depending on the selected shutdown target.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_581</srcid><srcstatus/><internalId>719</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_12_prep_WIN32X86</srcid><srcstatus/><internalId>981</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_13_prep_WIN32X86</srcid><srcstatus/><internalId>983</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>72</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4047</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        If defensive behavior is enabled, the EcuM_GoDown shall check if the given CallerID is in the
        list of allowed CallerIDs. If the check fails, EcuM_GoDown shall report the error status
        ECUM_E_IMPROPER_CALLER to the DEM and return without any effect.
      </description>
      <comment>
        This feature (defensive behavior) is not supported in this release.
      </comment>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.DefensiveBehaviour</srcid><srcstatus/><internalId>552</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>73</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4048</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Service name: EcuM_GoHalt
        Syntax: Std_ReturnType EcuM_GoHalt( void )
        Service ID[hex]:0x20
        Sync/Async: Synchronous
        Reentrancy:Reentrant
        Parameters (in): None
        Parameters (inout):None
        Parameters (out):None
        Return value:Std_ReturnType - E_NOT_OK: The request was not accepted, e.g. due to
        a wrong shutdown target. E_OK: If the call successfully returns, the ECU has
        left the sleep again
        Description:Instructs the ECU State Manager module to go into a sleep mode
        where the microcontroller is halted, depending on the selected shutdown target.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_772</srcid><srcstatus/><internalId>724</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_07</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>74</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4049</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Service name: EcuM_GoPoll
        Syntax: Std_ReturnType EcuM_GoPoll( void )
        Service ID[hex]:0x21
        Sync/Async: Synchronous
        Reentrancy:Reentrant
        Parameters (in): None
        Parameters (inout):None
        Parameters (out):None
        Return value:Std_ReturnType - E_NOT_OK: The request was not accepted, e.g. due to
        a wrong shutdown target. E_OK: If the call successfully returns, the ECU has
        left the sleep again
        Description:Instructs the ECU State Manager module to go into a polling
        sleep mode depending on the selected shutdown target.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_925</srcid><srcstatus/><internalId>730</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>75</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4052</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Service name: EcuM_GetMostRecentShutdown
        Syntax: Std_ReturnType EcuM_GetMostRecentShutdown
        ( EcuM_StateType* target, uint8* mode, EcuM_ShutdownCauseType* cause,uint32* time )
        Service ID[hex]:0x1d
        Sync/Async: Synchronous
        Reentrancy: Reentrant
        Parameters (in):  None
        Parameters (inout):None
        Parameters (out): target  - One of these values is returned:
                                    - ECUM_STATE_SLEEP
                                    - ECUM_STATE_RESET
                                    - ECUM_STATE_OFF
                        mode      - This parameter tells which of the configured sleep modes
                                    (target is ECUM_STATE_SLEEP) or which of the reset
                                    mechanisms (target is ECUM_STATE_RESET) was actually chosen.
                        cause     - The selected shutdown cause
                        time      - Absolute time of the shutdown if supported by hardware.
        Return value: Std_ReturnType E_OK: The service has succeeded E_NOT_OK: The service
        has failed, e.g. due to NULL pointer being passed, or no information is available
        Description:EcuM_GetMostRecentShutdown returns information about the most recent
        shutdown operation. EcuM_GetMostRecentShutdown is part of the ECU
        Manager Module port interface.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1877</srcid><srcstatus/><internalId>760</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_13_WIN32X86</srcid><srcstatus/><internalId>984</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_SdInfoBuffer_WIN32X86</srcid><srcstatus/><internalId>986</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>76</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4053</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Service name: EcuM_GetNextRecentShutdown
        Syntax: Std_ReturnType EcuM_GetNextRecentShutdown
        ( EcuM_StateType* target, uint8* mode, EcuM_ShutdownCauseType* cause, uint32* time )
        Service ID[hex]:0x1e
        Sync/Async: Synchronous
        Reentrancy: Reentrant
        Parameters (in):  None
        Parameters (inout):None
        Parameters (out): target  - One of these values is returned:
                                    - ECUM_STATE_SLEEP
                                    - ECUM_STATE_RESET
                                    - ECUM_STATE_OFF
                        mode      - This parameter tells which of the configured sleep modes
                                    (target is ECUM_STATE_SLEEP) or which of the reset
                                    mechanisms (target is ECUM_STATE_RESET) was actually chosen.
                        cause     - The selected shutdown cause
                        time      - Absolute time of the shutdown if supported by hardware.
        Return value: Std_ReturnType E_OK: The service has succeeded E_NOT_OK: The service
        has failed, e.g. due to NULL pointer being passed, or no information is available
        Description:EcuM_GetNextRecentShutdown returns information about the next recent
        shutdown operation. All stored shutdown information can be read by first calling
        EcuM_GetMostRecentShutdown and then looping over EcuM_GetNextRecentShutdown until
        an error is returned. EcuM_GetNextRecentShutdown is part of the ECU Manager
        Module port interface.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1959</srcid><srcstatus/><internalId>761</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_13_WIN32X86</srcid><srcstatus/><internalId>984</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>77</internalId></specobject>

    <specobject>
      <id>EcuM.ASR403.EcuM4067</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, V3.0.0</source>
      <version>1</version>
      <description>
        Name        : EcuM_UserType
        Type        : uint8
        Description : Unique value for each user.
      </description>
      <releases>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_BSW_Types.h_553</srcid><srcstatus/><internalId>698</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>78</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>EcuM.ASR42.SWS_EcuM_04019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R4.2.1</source>
      <version>1</version>
      <description>
        Figure 24 - Master Core OffPreOS Sequence
      </description>
      <comment>
        &lt;pre&gt;
    The sequence is shown in graphics/Master_Core_OffPreOS_Sequence.PNG
    &lt;/pre&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_655</srcid><srcstatus/><internalId>722</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MulticoreShutdownSynchronization.</srcid><srcstatus/><internalId>562</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_12_prep_WIN32X86</srcid><srcstatus/><internalId>981</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCore_ShutdownPrep</srcid><srcstatus/><internalId>996</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCore_Shutdown</srcid><srcstatus/><internalId>997</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreConfiguredMaster_ShutdownPrep</srcid><srcstatus/><internalId>1017</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreConfiguredMaster_Shutdown</srcid><srcstatus/><internalId>1018</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ASR_R2011_Shutdown</srcid><srcstatus/><internalId>1029</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.Impl.CallingContext.MasterCoreOnly</srcid><srcstatus/><internalId>444</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>53</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>79</internalId></specobject>

    <specobject>
      <id>EcuM.ASR42.SWS_EcuM_04021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R4.2.1</source>
      <version>1</version>
      <description>
        Figure 26 - Slave Core OffPreOS Sequence
      </description>
      <comment>
        &lt;pre&gt;
    The sequence is shown in graphics/Slave_Core_OffPreOS_Sequence.PNG
    &lt;/pre&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_622</srcid><srcstatus/><internalId>721</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MulticoreShutdownSynchronization.</srcid><srcstatus/><internalId>562</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_14_WIN32X86</srcid><srcstatus/><internalId>988</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>55</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>80</internalId></specobject>

    <specobject>
      <id>EcuM.ASR42.SWS_EcuM_04094</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R4.2.1</source>
      <version>1</version>
      <description>
        In the case of a MultiCore ECU, the EcuM AUTOSAR service (Standardized AUTOSAR Interfaces)
        should be offered on the master core only.
      </description>
      <furtherinfo>WRN.impl.needscoverage.count - This requirement is linked
        to each EcuM service limited to run in the context of the master core.
      </furtherinfo>
      <comment>
        &lt;pre&gt;
      In case they are called in a slave core context, these API's shall make no changes and return E_NOT_OK.
    &lt;/pre&gt;
      </comment>
      <releases>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1297</srcid><srcstatus/><internalId>747</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1384</srcid><srcstatus/><internalId>748</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1545</srcid><srcstatus/><internalId>752</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2537</srcid><srcstatus/><internalId>779</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2579</srcid><srcstatus/><internalId>780</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2617</srcid><srcstatus/><internalId>781</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2659</srcid><srcstatus/><internalId>782</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_BootTarget.c_78</srcid><srcstatus/><internalId>817</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_BootTarget.c_139</srcid><srcstatus/><internalId>820</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_786</srcid><srcstatus/><internalId>895</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_866</srcid><srcstatus/><internalId>897</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1035</srcid><srcstatus/><internalId>903</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1285</srcid><srcstatus/><internalId>908</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1400</srcid><srcstatus/><internalId>914</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.Impl.CallingContext.MasterCoreOnly</srcid><srcstatus/><internalId>444</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>81</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <defaults>
      <idprefix>EcuM.ASR43.</idprefix>
    </defaults>

    <specobject>
      <id>EcuM.ASR43.SWS_EcuM_04023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, Classic Platform 4.3.0</source>
      <version>1</version>
      <description>
        Figure 28 - Master Core GoSleep Sequence.
      </description>
      <comment>
        The sequence is shown in graphics/Master_Core_GoSleep_Sequence.png
      </comment>
      <releases>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiCoreGoSleepSequence</srcid><srcstatus/><internalId>571</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>82</internalId></specobject>

    <specobject>
      <id>EcuM.ASR43.SWS_EcuM_04025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, Classic Platform 4.3.0</source>
      <version>1</version>
      <description>
        Figure 30 - Master Core Poll Sequence.
      </description>
      <comment>
        The sequence is shown in graphics/Master_Core_Poll_Sequence.png
      </comment>
      <releases>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiCorePollSequence</srcid><srcstatus/><internalId>572</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>83</internalId></specobject>

    <specobject>
      <id>EcuM.ASR43.SWS_EcuM_04027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, Classic Platform 4.3.0</source>
      <version>1</version>
      <description>
        Figure 31 - Slave Core GoSleep Sequence.
      </description>
      <comment>
        The sequence is shown in graphics/Slave_Core_GoSleep_Sequence.png
      </comment>
      <releases>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiCoreGoSleepSequence</srcid><srcstatus/><internalId>571</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>84</internalId></specobject>

    <specobject>
      <id>EcuM.ASR43.SWS_EcuM_04029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, Classic Platform 4.3.0</source>
      <version>1</version>
      <description>
        Figure 34 - Slave Core Poll Sequence.
      </description>
      <comment>
        The sequence is shown in graphics/Slave_Core_Poll_Sequence.png
      </comment>
      <releases>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiCorePollSequence</srcid><srcstatus/><internalId>572</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>85</internalId></specobject>

    </specobjects>
    <specobjects doctype="swurs">

    <defaults>
      <idprefix>EcuM.</idprefix>
    </defaults>

    <specobject>
      <id>EcuM.ECUC_EcuM_00101</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMComMChannelRef
        Parent Container | EcuMWakeupSource
        Description | This parameter could reference multiple Networks (channels) defined in the
        Communication Manager. No reference indicates that the wakeup source is not a communication
        channel.
        Multiplicity | 0..*
        Type | Symbolic name reference to [ ComMChannel
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.EB_Ref.ECUC_EcuM_00101</srcid><srcstatus/><internalId>410</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiplicityOfEcuMResetReasonRefEcuMComMChannelRef</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>86</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00102</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMConfigConsistencyHash
        Parent Container | EcuMCommonConfiguration
        Description | In the pre-compile and link-time configuration phase a hash value is generated
        across all pre-compile and link-time parameters of all BSW modules. In the post-build phase a
        hash value is generated across all pre-compile and link-time parameters, except for parameters
        located in EcucParamConfContainerDef instances or subContainers which have been introduced at
        post-build configuration time. This hash value is compared against each other and allows
        checking the consistency of the entire configuration. Note: In systems which do not make use of
        post-build configurations this parameter can be omitted.
        Multiplicity | 0..1
        Type | EcucIntegerParamDef
        Range | 0.. 18446744073709551615
        Default value
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
        Link time
        Post-build time | X | VARIANT-POST-BUILD
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.NoHashValueComputation</srcid><srcstatus/><internalId>557</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>87</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00103</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMConfiguration
        Parent Container | EcuM
        Description | This container contains the configuration (parameters) of the ECU State Manager.
        Configuration Parameters
        Included parameters:
        No Included Parameters
        Included containers:
        Included Containers
        Container Name | Multiplicity | Scope / Dependency
        EcuMCommonConfiguration | 1 | This container contains the common configuration (parameters) of
        the ECU State Manager.
        EcuMFlexConfiguration | 0..1 | This container contains the configuration (parameters) of the
        EcuMFlex. Only applicable if EcuMFlex is implemented.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_84</srcid><srcstatus/><internalId>835</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMFixedConfiguration</srcid><srcstatus/><internalId>594</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>88</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00104</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMDefaultAppMode
        Parent Container | EcuMCommonConfiguration
        Description | The default application mode loaded when the ECU comes out of reset.
        Multiplicity | 1
        Type | Reference to [ OsAppMode
        Post-Build Variant Value | true
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
        Link time
        Post-build time | X | VARIANT-POST-BUILD
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ValueClassVariantPreCompile</srcid><srcstatus/><internalId>609</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_151</srcid><srcstatus/><internalId>837</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_168</srcid><srcstatus/><internalId>838</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.ECUM104_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>1</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>89</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00105</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMDefaultShutdownTarget
        Parent Container | EcuMCommonConfiguration
        Description | This container describes the default shutdown target to be selected by EcuM. The
        actual shutdown target may be overridden by the EcuM_SelectShutdownTarget service.
        Configuration Parameters
        Included parameters:
        Parameter Name | SWS Item ID
        EcuMDefaultShutdownTarget | ECUC_EcuM_00107
        EcuMDefaultResetModeRef | ECUC_EcuM_00205
        EcuMDefaultSleepModeRef | ECUC_EcuM_00106
        Included containers:
        No Included Containers
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_202</srcid><srcstatus/><internalId>839</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_20</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.ECUM105_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>2</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>90</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00106</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMDefaultSleepModeRef
        Parent Container | EcuMDefaultShutdownTarget
        Description | If EcuMDefaultShutdownTarget is EcuMShutdownTargetSleep, this parameter selects
        the default sleep mode. Otherwise this parameter may be ignored.
        Multiplicity | 0..1
        Type | Symbolic name reference to [ EcuMSleepMode
        Post-Build Variant Multiplicity | true
        Post-Build Variant Value | true
        Multiplicity Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
        Link time
        Post-build time | X | VARIANT-POST-BUILD
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
        Link time
        Post-build time | X | VARIANT-POST-BUILD
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_337</srcid><srcstatus/><internalId>842</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_PBVARIANT_VARIANT_ONE</srcid><srcstatus/><internalId>1021</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_PBVARIANT_VARIANT_TWO</srcid><srcstatus/><internalId>1022</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ValueClassVariantPreCompile</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassVariantPreCompile</srcid><srcstatus/><internalId>610</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.ECUM106_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>3</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>91</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00107</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMDefaultShutdownTarget
        Parent Container | EcuMDefaultShutdownTarget
        Description | This parameter describes the state part of the default shutdown target selected
        when the ECU comes out of reset. If EcuMShutdownTargetSleep is selected, the parameter
        EcuMDefaultSleepModeRef selects the specific sleep mode.
        Multiplicity | 1
        Type | EcucEnumerationParamDef
        Range | EcuMShutdownTargetOffEcuMDefaultShutdownTarget.EcuMDefaultShutdownTarget.
        EcuMShutdownTargetOff | Corresponds to ECUM_SHUTDOWN_TARGET_OFF in EcuM_ShutdownTargetType.
        EcuMShutdownTargetResetEcuMDefaultShutdownTarget.EcuMDefaultShutdownTarget.
        EcuMShutdownTargetReset | Corresponds to ECUM_SHUTDOWN_TARGET_RESET in EcuM_ShutdownTargetType.
        This literal is only be applicable for EcuMFlex.
        EcuMShutdownTargetSleepEcuMDefaultShutdownTarget.EcuMDefaultShutdownTarget.
        EcuMShutdownTargetSleep | Corresponds to ECUM_SHUTDOWN_TARGET_SLEEP in EcuM_ShutdownTargetType.
        Post-Build Variant Value | true
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
        Link time
        Post-build time | X | VARIANT-POST-BUILD
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_260</srcid><srcstatus/><internalId>840</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ValueClassVariantPreCompile</srcid><srcstatus/><internalId>609</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>92</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00108</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMDevErrorDetect
        Parent Container | EcuMGeneral
        Description | Switches the development error detection and notification on or off.
        true: detection and notification is enabled.
        false: detection and notification is disabled.
        Multiplicity | 1
        Type | EcucBooleanParamDef
        Default value | false
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_2748</srcid><srcstatus/><internalId>877</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_60</srcid><srcstatus/><internalId>962</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_200</srcid><srcstatus/><internalId>979</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>93</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00110</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMDriverInitItem
        Parent Container |
        EcuMDriverInitListOne, EcuMDriverInitListZero, EcuMDriverRestartList, EcuMDriverInitListBswM
        Description | These containers describe the entries in a driver init list. Attributes:
        requiresIndex=true
        Post-Build Variant Multiplicity | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Configuration Parameters
        Included parameters:
        Included Parameters
        Parameter Name | SWS Item ID
        EcuMModuleParameter | ECUC_EcuM_00224
        EcuMModuleService | ECUC_EcuM_00124
        EcuMEcucCoreDefinitionRef | ECUC_EcuM_00229
        EcuMModuleRef | ECUC_EcuM_00223
        Included containers:
        No Included Containers
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_417</srcid><srcstatus/><internalId>844</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ParentDriverInitListBswM</srcid><srcstatus/><internalId>590</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>94</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00111</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMDriverInitListOne
        Parent Container | EcuMCommonConfiguration
        Description | Container for Init Block I. This container holds a list of modules to be
        initialized. Each module in the list will be called for initialization in the list order. All
        modules in this list are initialized before the OS is started and so these modules require no
        OS support.
        Post-Build Variant Multiplicity | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Configuration Parameters
        Included parameters:
        No Included Parameters
        Included containers:
        Included Containers
        Container Name | Multiplicity | Scope / Dependency
        EcuMDriverInitItem | 1..* | These containers describe the entries in a driver init list.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_379</srcid><srcstatus/><internalId>843</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>95</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00114</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMDriverInitListZero
        Parent Container | EcuMCommonConfiguration
        Description | Container for Init Block 0. This container holds a list of modules to be
        initialized. Each module in the list will be called for initialization in the list order. All
        modules in this list are initialized before the post-build configuration has been loaded and
        the OS is initialized. Therefore, these modules may not use post-build configuration.
        Post-Build Variant Multiplicity | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Configuration Parameters
        Included parameters:
        No Included Parameters
        Included containers:
        No Included Containers
        Container Name | Multiplicity | Scope / Dependency
        EcuMDriverInitItem | 1..* | These containers describe the entries in a driver init list.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_718</srcid><srcstatus/><internalId>848</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>96</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00115</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMDriverRestartList
        Parent Container | EcuMCommonConfiguration
        Description | List of modules to be initialized.
        Post-Build Variant Multiplicity | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Configuration Parameters
        Included parameters:
        No Included Parameters
        Included containers:
        No Included Containers
        Container Name | Multiplicity | Scope / Dependency
        EcuMDriverInitItem | 1..* | These containers describe the entries in a driver init list.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1032</srcid><srcstatus/><internalId>850</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>97</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00116</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMGeneral
        Parent Container | EcuM
        Description | This container holds the general, pre-compile configuration parameters.
        Configuration Parameters
        Included parameters:
        Parameter Name | SWS Item ID
        EcuMDevErrorDetect | ECUC_EcuM_00108
        EcuMMainFunctionPeriod | ECUC_EcuM_00121
        EcuMVersionInfoApi | ECUC_EcuM_00149
        Included containers:
        No Included Containers
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_2735</srcid><srcstatus/><internalId>876</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>98</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00121</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMMainFunctionPeriod
        Parent Container | EcuMGeneral
        Description | This parameter defines the schedule period of EcuM_MainFunction. Unit: [s]
        Multiplicity | 1
        Type | EcucFloatParamDef
        Range | ]0.. INF[
        Default value
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: ECU
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.Config.EcuMMainFunctionPeriod</srcid><srcstatus/><internalId>474</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMMainFunctionPeriod</srcid><srcstatus/><internalId>569</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>99</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00124</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMModuleService
        Parent Container | EcuMDriverInitItem
        Description | The service to be called to initialize that module, e.g. Init, PreInit, Start etc.
        If nothing is defined "Init" is taken by default.
        Multiplicity | 0..1
        Type | EcucStringParamDef
        Default value
        maxLength
        minLength
        regularExpression
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_584</srcid><srcstatus/><internalId>845</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiplicityOfEcuMModuleService</srcid><srcstatus/><internalId>592</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.EcuMModuleServiceDefaultValue</srcid><srcstatus/><internalId>596</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>100</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00128</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMResetReasonRef
        Parent Container | EcuMWakeupSource
        Description | This parameter describes the mapping of reset reasons detected by the MCU driver
        into wakeup sources.
        Multiplicity | 0..*
        Type | Symbolic name reference to [ McuResetReasonConf
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.EB_Ref.ECUC_EcuM_00128</srcid><srcstatus/><internalId>409</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiplicityOfEcuMResetReasonRefEcuMComMChannelRef</srcid><srcstatus/><internalId>591</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>101</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00131</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMSleepMode
        Parent Container | EcuMCommonConfiguration
        Description | These containers describe the configured sleep modes. The names of these
        containers specify the symbolic names of the different sleep modes.
        Post-Build Variant Multiplicity | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Configuration Parameters
        Included parameters:
        Included Parameters
        Parameter Name | SWS Item ID
        EcuMSleepModeId | ECUC_EcuM_00132
        EcuMSleepModeSuspend | ECUC_EcuM_00136
        EcuMSleepModeMcuModeRef | ECUC_EcuM_00133
        EcuMWakeupSourceMask | ECUC_EcuM_00152
        Included containers:
        No Included Containers
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1379</srcid><srcstatus/><internalId>853</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>102</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00132</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMSleepModeId
        Parent Container | EcuMSleepMode
        Description | This ID identifies this sleep mode in services like EcuM_SelectShutdownTarget.
        Multiplicity | 1
        Type | EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range | 0.. 255
        Default value
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: ECU
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1415</srcid><srcstatus/><internalId>854</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>103</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00133</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMSleepModeMcuModeRef
        Parent Container | EcuMSleepMode
        Description | This parameter is a reference to the corresponding MCU mode for this sleep mode.
        Multiplicity | 1
        Type | Symbolic name reference to [ McuModeSettingConf
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1476</srcid><srcstatus/><internalId>856</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_11</srcid><srcstatus/><internalId>948</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>104</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00136</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMSleepModeSuspend
        Parent Container | EcuMSleepMode
        Description | Flag, which is set true, if the CPU is suspended, halted, or powered off in the
        sleep mode. If the CPU keeps running in this sleep mode, then this flag must be set to false.
        Multiplicity | 1
        Type | EcucBooleanParamDef
        Default value
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        and also obsolete in EcuM Flex.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1452</srcid><srcstatus/><internalId>855</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMSleepModeSuspend</srcid><srcstatus/><internalId>568</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>105</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00146</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMFlexUser
        Parent Container | EcuMFlexUserConfig
        Description | Parameter used to identify one user.
        Multiplicity | 1
        Type | EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range | 0.. 255
        Default value
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <comment>
        DELAYED - Implementation of this parameter depends on Alarm clock feature which is not
        supported in the current implementation.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>106</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00148</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMValidationTimeout
        Parent Container | EcuMWakeupSource
        Description | The validation timeout (period for which the ECU State Manager will wait for the
        validation of a wakeup event) can be defined for each wakeup source independently. The timeout
        is specified in seconds. When the timeout is not instantiated, there is no validation routine
        and the ECU Manager shall not validate the wakeup source.
        Multiplicity | 0..1
        Type | EcucFloatParamDef
        Range | [0.. INF]
        Default value
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1620</srcid><srcstatus/><internalId>860</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_09</srcid><srcstatus/><internalId>946</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>107</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00149</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMVersionInfoApi
        Parent Container | EcuMGeneral
        Description | Switches the version info API on or off
        Multiplicity | 1
        Type | EcucBooleanParamDef
        Default value | false
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_3076</srcid><srcstatus/><internalId>885</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_01</srcid><srcstatus/><internalId>937</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>108</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00150</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMWakeupSource
        Parent Container | EcuMCommonConfiguration
        Description | These containers describe the configured wakeup sources.
        Post-Build Variant Multiplicity | true
        Multiplicity Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
        Link time
        Post-build time | X | VARIANT-POST-BUILD
        Configuration Parameters
        Included parameters:
        Included Parameters
        Parameter Name | SWS Item ID
        EcuMCheckWakeupTimeout | ECUC_EcuM_00208
        EcuMValidationTimeout | ECUC_EcuM_00148
        EcuMWakeupSourceId | ECUC_EcuM_00151
        EcuMWakeupSourcePolling | ECUC_EcuM_00153
        EcuMComMChannelRef | ECUC_EcuM_00101
        EcuMComMPNCRef | ECUC_EcuM_00228
        EcuMResetReasonRef | ECUC_EcuM_00128
        Included containers:
        No Included Containers
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1555</srcid><srcstatus/><internalId>859</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.PostBuildVariantMultiplicity</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassVariantPreCompile</srcid><srcstatus/><internalId>610</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>109</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00151</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMWakeupSourceId
        Parent Container | EcuMWakeupSource
        Description | This parameter defines the identifier of this wakeup source.The first five bits
        are reserved values from the EcuM_WakeupSourceType.
        Multiplicity | 1
        Type | EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range | 5.. 31
        Default value
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: ECU
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1677</srcid><srcstatus/><internalId>862</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMWakeupSourceIdConfigRange</srcid><srcstatus/><internalId>593</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>110</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00152</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMWakeupSourceMask
        Parent Container | EcuMSleepMode
        Description | These parameters are references to the wakeup sources that shall be enabled for
        this sleep mode.
        Multiplicity | 1..*
        Type | Symbolic name reference to [ EcuMWakeupSource
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1513</srcid><srcstatus/><internalId>858</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>111</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00153</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMWakeupSourcePolling
        Parent Container | EcuMWakeupSource
        Description | This parameter describes if the wakeup source needs polling.
        Multiplicity | 1
        Type | EcucBooleanParamDef
        Default value
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1714</srcid><srcstatus/><internalId>864</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMWakeupSourcePolling</srcid><srcstatus/><internalId>567</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>112</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00167</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMFlexConfiguration
        Parent Container | EcuMConfiguration
        Description | This container contains the configuration (parameters) of the EcuMFlex. Only
        applicable if EcuMFlex is implemented.
        Post-Build Variant Multiplicity | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Configuration Parameters
        Included parameters:
        Parameter Name | SWS Item ID
        EcuMNormalMcuModeRef | ECUC_EcuM_00204
        EcuMPartitionRef | ECUC_EcuM_00217
        Included containers:
        Container Name | Multiplicity | Scope / Dependency
        EcuMAlarmClock | 0..* | These containers describe the configured alarm clocks. The name of
        these conatiners allows giving a symbolic name to one alarm clock.
        EcuMDriverInitListBswM | 0..* | This container holds a list of modules to be initialized by the
        BswM.
        EcuMFlexUserConfig | 1..256 | These containers describe the identifiers that are needed to
        refer to a software component or another appropriate entity in the system which uses the
        EcuMFlex Interfaces.
        EcuMGoDownAllowedUsers | 0..1 | This container describes the collection of allowed users which
        are allowed to call the EcuM_GoDownHaltPoll API (only applies in the case that the previously
        set shutdown target is TARGET_RESET or TARGET_OFF)
        EcuMResetMode | 1..256 | These containers describe the configured reset modes.The name of these
        containers allows one of the following symbolic names to be given to the different reset modes:
        ECUM_RESET_MCU
        ECUM_RESET_WDG
        ECUM_RESET_IO.
        EcuMSetClockAllowedUsers | 0..1 | This container describes the collection of allowed users
        which are allowed to call the EcuM_SetClock API.
        EcuMShutdownCause | 1..256 | These containers describe the configured shut down or reset causes.
        The name of these containers allows to give one of the following symbolic names to the
        different shut down causes:
        ECUM_CAUSE_ECU_STATE - ECU state machine entered a state for shutdown,
        ECUM_CAUSE_WDGM - WdgM detected failure,
        ECUM_CAUSE_DCM - Dcm requests shutdown (split into UDS services?
        and values from configuration.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1941</srcid><srcstatus/><internalId>868</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>113</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00168</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMFlexGeneral
        Parent Container | EcuM
        Description | This container holds the general, pre-compile configuration parameters for the
        EcuMFlex. Only applicable if EcuMFlex is implemented.
        Post-Build Variant Multiplicity | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Configuration Parameters
        Included parameters:
        Parameter Name | SWS Item ID
        EcuMAlarmClockPresent | ECUC_EcuM_00199
        EcuMModeHandling | ECUC_EcuM_00221
        EcuMResetLoopDetection | ECUC_EcuM_00171
        EcuMSetProgrammableInterrupts | ECUC_EcuM_00210
        EcuMAlarmWakeupSource | ECUC_EcuM_00200
        Included containers:
        No Included Containers
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_2570</srcid><srcstatus/><internalId>875</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>114</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00171</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMResetLoopDetection
        Parent Container | EcuMFlexGeneral
        Description | If false, no reset loop detection is performed. If this configuration parameter
        exists and is set to true, the callout "EcuM_LoopDetection" is called during startup of EcuM (
        during StartPreOS)
        Multiplicity | 0..1
        Type | EcucBooleanParamDef
        Default value
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        DELAYED - No support for Reset loop Detection
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuM_LoopDetection</srcid><srcstatus/><internalId>605</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>115</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00172</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMResetMode
        Parent Container | EcuMFlexConfiguration
        Description | These containers describe the configured reset modes.The name of these containers
        allows one of the following symbolic names to be given to the different reset modes:
        ECUM_RESET_MCU
        ECUM_RESET_WDG
        ECUM_RESET_IO.
        Post-Build Variant Multiplicity | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Configuration Parameters
        Included parameters:
        Included Parameters
        Parameter Name | SWS Item ID
        EcuMResetModeId | ECUC_EcuM_00173
        Included containers:
        No Included Containers
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_2388</srcid><srcstatus/><internalId>871</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_13_WIN32X86</srcid><srcstatus/><internalId>984</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>116</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00173</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMResetModeId
        Parent Container | EcuMResetMode
        Description | This ID identifies this reset mode in services like EcuM_SelectShutdownTarget.
        Multiplicity | 1
        Type | EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range | 0.. 255
        Default value
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_2416</srcid><srcstatus/><internalId>872</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_13_WIN32X86</srcid><srcstatus/><internalId>984</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>117</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00175</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMShutdownCause
        Parent Container | EcuMFlexConfiguration
        Description | These containers describe the configured shut down or reset causes.The name of
        these containers allows to give one of the following symbolic names to the different shut down
        causes:
        ECUM_CAUSE_ECU_STATE - ECU state machine entered a state for shutdown,
        ECUM_CAUSE_WDGM - WdgM detected failure,
        ECUM_CAUSE_DCM - Dcm requests shutdown (split into UDS services?
        and values from configuration.
        Post-Build Variant Multiplicity | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Configuration Parameters
        Included parameters:
        Included Parameters
        Parameter Name | SWS Item ID
        EcuMShutdownCauseId | ECUC_EcuM_00176
        Included containers:
        No Included Containers
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_2502</srcid><srcstatus/><internalId>873</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_13_WIN32X86</srcid><srcstatus/><internalId>984</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>118</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00176</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMShutdownCauseId
        Parent Container | EcuMShutdownCause
        Description | This ID identifies this shut down cause.
        Multiplicity | 1
        Type | EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range | 0.. 255
        Default value
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_2527</srcid><srcstatus/><internalId>874</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_13_WIN32X86</srcid><srcstatus/><internalId>984</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>119</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00181</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMCommonConfiguration
        Parent Container | EcuMConfiguration
        Description | This container contains the common configuration (parameters) of the ECU State
        Manager.
        Configuration Parameters
        Included parameters:
        Parameter Name | SWS Item ID
        EcuMConfigConsistencyHash | ECUC_EcuM_00102
        EcuMDefaultAppMode | ECUC_EcuM_00104
        EcuMOSResource | ECUC_EcuM_00183
        Included containers:
        Container Name | Multiplicity | Scope / Dependency
        EcuMDefaultShutdownTarget | 1 | This container describes the default shutdown target to be
        selected by EcuM. The actual shutdown target may be overridden by the EcuM_SelectShutdownTarget
        service.
        EcuMDriverInitListOne | 0..1 | Container for Init Block I. This container holds a list of
        modules to be initialized. Each module in the list will be called for initialization in the
        list order. All modules in this list are initialized before the OS is started and so these
        modules require no OS support.
        EcuMDriverInitListZero | 0..1 | Container for Init Block 0. This container holds a list of
        modules to be initialized. Each module in the list will be called for initialization in the
        list order. All modules in this list are initialized before the post-build configuration has
        been loaded and the OS is initialized. Therefore, these modules may not use post-build
        configuration.
        EcuMDriverRestartList | 0..1 | List of modules to be initialized.
        EcuMSleepMode | 1..256 | These containers describe the configured sleep modes. The names of
        these containers specify the symbolic names of the different sleep modes.
        EcuMWakeupSource | 1..32 | These containers describe the configured wakeup sources.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_98</srcid><srcstatus/><internalId>836</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>120</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00183</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMOSResource
        Parent Container | EcuMCommonConfiguration
        Description | This parameter is a reference to a OS resource which is used to bring the ECU
        into sleep mode. In case of multi core each core shall have an own OsResource.
        Multiplicity | 1..*
        Type | Reference to [ OsResource
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <comment>
        The functionality related to this parameter is not supported by the current implementation.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMOSResource</srcid><srcstatus/><internalId>565</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>121</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00184</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMAlarmClock
        Parent Container | EcuMFlexConfiguration
        Description | These containers describe the configured alarm clocks. The name of these
        conatiners allows giving a symbolic name to one alarm clock.
        Post-Build Variant Multiplicity | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Configuration Parameters
        Included parameters:
        Parameter Name | SWS Item ID
        EcuMAlarmClockId | ECUC_EcuM_00186
        EcuMAlarmClockTimeOut | ECUC_EcuM_00188
        EcuMAlarmClockUser | ECUC_EcuM_00195
        Included containers:
      </description>
      <comment>
        DELAYED - No Alarm clock support
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>122</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00186</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMAlarmClockId
        Parent Container | EcuMAlarmClock
        Description | This ID identifies this alarmclock.
        Multiplicity | 1
        Type | EcucIntegerParamDef (Symbolic Name generated for this parameter)
        Range | 0.. 255
        Default value
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <comment>
        DELAYED - No Alarm clock support
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>123</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00188</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMAlarmClockTimeOut
        Parent Container | EcuMAlarmClock
        Description | This parameter allows to define a timeout for this alarm clock.
        Multiplicity | 1
        Type | EcucFloatParamDef
        Range | [0.. INF]
        Default value
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <comment>
        DELAYED - No Alarm clock support
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>124</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00195</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMAlarmClockUser
        Parent Container | EcuMAlarmClock
        Description | This parameter allows an alarm to be assigned to a user.
        Multiplicity | 1
        Type | Symbolic name reference to [ EcuMFlexUserConfig
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <comment>
        DELAYED - No Alarm clock support
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>125</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00197</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMSetClockAllowedUsers
        Parent Container | EcuMFlexConfiguration
        Description | This container describes the collection of allowed users which are allowed to
        call the EcuM_SetClock API.
        Post-Build Variant Multiplicity | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Configuration Parameters
        Included parameters:
        Included Parameters
        Parameter Name | SWS Item ID
        EcuMSetClockAllowedUserRef | ECUC_EcuM_00198
        Included containers:
        No Included Containers
      </description>
      <comment>
        DELAYED - No Alarm clock support
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>126</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00198</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMSetClockAllowedUserRef
        Parent Container | EcuMSetClockAllowedUsers
        Description | These parameters describe the references to the users which are allowed to call
        the EcuM_SetClock API.
        Multiplicity | 1..*
        Type | Symbolic name reference to [ EcuMFlexUserConfig
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <comment>
        DELAYED - No Alarm clock support
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>127</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00199</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMAlarmClockPresent
        Parent Container | EcuMFlexGeneral
        Description | This flag indicates whether the optional AlarmClock feature is present.
        Multiplicity | 1
        Type | EcucBooleanParamDef
        Default value
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <comment>
        DELAYED - No Alarm clock support
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>128</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00200</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMAlarmWakeupSource
        Parent Container | EcuMFlexGeneral
        Description | This parameter describes the reference to the EcuMWakeupSource being used for the
        EcuM AlarmClock.
        Multiplicity | 0..1
        Type | Symbolic name reference to [ EcuMWakeupSource
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <comment>
        DELAYED - No Alarm clock support
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>129</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00201</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMFlexUserConfig
        Parent Container | EcuMFlexConfiguration
        Description | These containers describe the identifiers that are needed to refer to a software
        component or another appropriate entity in the system which uses the EcuMFlex Interfaces.
        Post-Build Variant Multiplicity | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Configuration Parameters
        Included parameters:
        Included Parameters
        Parameter Name | SWS Item ID
        EcuMFlexUser | ECUC_EcuM_00146
        EcuMFlexEcucPartitionRef | ECUC_EcuM_00203
        Included containers:
        No Included Containers
      </description>
      <comment>
        DELAYED - Implementation of this parameter depends on Alarm clock feature which is not
        supported in the current implementation.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>130</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00203</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMFlexEcucPartitionRef
        Parent Container | EcuMFlexUserConfig
        Description | Denotes in which "EcucPartition" the user of the EcuM is executed.
        Multiplicity | 0..1
        Type | Reference to [ EcucPartition
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_2310</srcid><srcstatus/><internalId>870</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>131</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00204</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMNormalMcuModeRef
        Parent Container | EcuMFlexConfiguration
        Description | This parameter is a reference to the normal MCU mode to be restored after a sleep.
        Multiplicity | 1
        Type | Symbolic name reference to [ McuModeSettingConf
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1954</srcid><srcstatus/><internalId>869</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>132</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00205</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMDefaultResetModeRef
        Parent Container | EcuMDefaultShutdownTarget
        Description | If EcuMDefaultShutdownTarget is EcuMShutdownTargetReset, this parameter selects
        the default reset mode. Otherwise this parameter may be ignored.
        Multiplicity | 0..1
        Type | Symbolic name reference to [ EcuMResetMode
        Post-Build Variant Multiplicity | true
        Post-Build Variant Value | true
        Multiplicity Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
        Link time
        Post-build time | X | VARIANT-POST-BUILD
        Value Configuration Class | Pre-compile time | X | VARIANT-PRE-COMPILE
        Link time
        Post-build time | X | VARIANT-POST-BUILD
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_298</srcid><srcstatus/><internalId>841</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_PBVARIANT_VARIANT_ONE</srcid><srcstatus/><internalId>1021</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_PBVARIANT_VARIANT_TWO</srcid><srcstatus/><internalId>1022</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ValueClassVariantPreCompile</srcid><srcstatus/><internalId>609</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassVariantPreCompile</srcid><srcstatus/><internalId>610</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>133</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00206</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMGoDownAllowedUsers
        Parent Container | EcuMFlexConfiguration
        Description | This container describes the collection of allowed users which are allowed to
        call the EcuM_GoDownHaltPoll API (only applies in the case that the previously set shutdown
        target is TARGET_RESET or TARGET_OFF)
        Post-Build Variant Multiplicity | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Configuration Parameters
        Included parameters:
        Included Parameters
        Parameter Name | SWS Item ID
        EcuMGoDownAllowedUserRef | ECUC_EcuM_00207
        Included containers:
        No Included Containers
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Also DELAYED since this feature is not supported for this release.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.DefensiveBehaviour</srcid><srcstatus/><internalId>552</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>134</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00207</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMGoDownAllowedUserRef
        Parent Container | EcuMGoDownAllowedUsers
        Description | This references an allowed user.
        Multiplicity | 1..*
        Type | Symbolic name reference to [ EcuMFlexUserConfig
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <comment>
        This is a configuration parameter requirement without functional specification.
        Also DELAYED since this feature is not supported for this release.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.DefensiveBehaviour</srcid><srcstatus/><internalId>552</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>135</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00208</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMCheckWakeupTimeout
        Parent Container | EcuMWakeupSource
        Description | This Parameter is the initial Value for the Time of the EcuM to delay shut down
        of the ECU if the check of the Wakeup Source is done asynchronously (CheckWakeupTimer). The
        unit is in seconds.
        Multiplicity | 0..1
        Type | EcucFloatParamDef
        Range | [0.. 10]
        Default value | 0
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMCheckWakeupTimeout</srcid><srcstatus/><internalId>583</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>136</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00210</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMSetProgrammableInterrupts
        Parent Container | EcuMFlexGeneral
        Description | If this configuration parameter exists and is to true, the callout "
        EcuM_AL_SetProgrammableInterrupts" is called during startup of EcuM (during StartPreOS)
        Multiplicity | 0..1
        Type | EcucBooleanParamDef
        Default value
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMSetProgrammableInterrupts</srcid><srcstatus/><internalId>584</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>137</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00217</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMPartitionRef
        Parent Container | EcuMFlexConfiguration
        Description | Reference denotes the partition a EcuM shall run inside. Please note that in case
        of a multicore ECU this reference is mandatory.
        Multiplicity | 0..*
        Type | Reference to [ EcucPartition
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMPartitionRef</srcid><srcstatus/><internalId>585</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>138</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00221</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMModeHandling
        Parent Container | EcuMFlexGeneral
        Description | If false, Run Request Protocol is not performed.
        Multiplicity | 0..1
        Type | EcucBooleanParamDef
        Default value
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>139</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00224</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMModuleParameter
        Parent Container | EcuMDriverInitItem
        Description | Definition of the function prototype and the parameter passed to the function.
        Multiplicity | 1
        Type | EcucEnumerationParamDef
        Range | NULL_PTREcuMDriverInitItem.EcuMModuleParameter.NULL_PTR | If NULL_PTR is configured
        EcuM expects as prototype: void &lt;Mip&gt;_&lt;EcuMModuleService&gt;(const &lt;Mip&gt;_ConfigType* &lt;Mip&gt;_Config)
        EcuM shall call this function with NULL Pointer: &lt;Mip&gt;_&lt;EcuMModuleService&gt;(NULL)
        POSTBUILD_PTREcuMDriverInitItem.EcuMModuleParameter.POSTBUILD_PTR | If POSTBUILD_PTR is
        configured EcuM expects as prototype: void &lt;Mip&gt;_&lt;EcuMModuleService&gt;(const &lt;Mip&gt;_ConfigType* &lt;
        Mip&gt;_Config). EcuM shall call this function with a valid pointer: &lt;Mip&gt;_&lt;EcuMModuleService&gt; (&amp;&lt;
        Mip&gt;_Config [Predefinedvariant.shortName]
        VOIDEcuMDriverInitItem.EcuMModuleParameter.VOID | If VOID is configured EcuM expects as
        prototype: void &lt;Mip&gt;_&lt;EcuMModuleService&gt;(void). EcuM will call &lt;Mip&gt;_&lt;EcuMModuleService&gt;
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMModuleParameter</srcid><srcstatus/><internalId>586</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>140</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00226</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Container Name | EcuMDriverInitListBswM
        Parent Container | EcuMFlexConfiguration
        Description | This container holds a list of modules to be initialized by the BswM.
        Post-Build Variant Multiplicity | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Configuration Parameters
        Included parameters:
        No Included Parameters
        Included containers:
        Container Name | Multiplicity | Scope / Dependency
        EcuMDriverInitItem | 1..* | These containers describe the entries in a driver init list.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMDriverInitListBswM</srcid><srcstatus/><internalId>587</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>141</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00228</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMComMPNCRef
        Parent Container | EcuMWakeupSource
        Description | This is a reference to a one or more PNC's defined in the Communication Manager.
        No reference indicates that the wakeup source is not assigned to a partial network.
        Multiplicity | 0.
        Type | Symbolic name reference to [ ComMPnc
        Post-Build Variant Multiplicity | true
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1766</srcid><srcstatus/><internalId>866</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_NotifyComMPnc</srcid><srcstatus/><internalId>955</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.PostBuildVariantMultiplicity</srcid><srcstatus/><internalId>595</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.ValueClassPreCompileAllVariants</srcid><srcstatus/><internalId>611</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.MultiplicityClassPreCompileAllVariants</srcid><srcstatus/><internalId>612</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>142</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00223</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMModuleRef
        Parent Container | EcuMDriverInitItem
        Description | Foreign reference to the configuration of a module instance which shall be
        initialized by EcuM
        Multiplicity | 1
        Type | Foreign reference to [ ECUC-MODULE-CONFIGURATION-VALUES
        Post-Build Variant Value | false
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMModuleRef</srcid><srcstatus/><internalId>588</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>143</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00225</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Module Name | EcuM
        Module Description | Configuration of the EcuM (ECU State Manager) module.
        Post-Build Variant Support | true
        Supported Config Variants | VARIANT-POST-BUILD, VARIANT-PRE-COMPILE
        Included containers:
        Container Name | Multiplicity | Scope / Dependency
        EcuMConfiguration | 1 | This container contains the configuration (parameters) of the ECU State
        Manager.
        EcuMFlexGeneral | 0..1 | This container holds the general, pre-compile configuration parameters
        for the EcuMFlex. Only applicable if EcuMFlex is implemented.
        EcuMGeneral | 1 | This container holds the general, pre-compile configuration parameters.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_17</srcid><srcstatus/><internalId>834</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ConfigVariantPreCompile</srcid><srcstatus/><internalId>608</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>144</internalId></specobject>

    <specobject>
      <id>EcuM.ECUC_EcuM_00229</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuMEcucCoreDefinitionRef
        Parent Container | EcuMDriverInitItem
        Description | Reference denotes the core the EcuM AUTOSAR services shall be offered on.
        Multiplicity | 0..1
        Type | Reference to [ EcucCoreDefinition
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMEcucCoreDefinitionRef</srcid><srcstatus/><internalId>589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>145</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_00624</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The EcuM_SelectShutdownTarget function shall set the shutdown target to the value of the
        shutdownTarget parameter.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_WakeupSource_NotExpired</srcid><srcstatus/><internalId>960</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_64</srcid><srcstatus/><internalId>966</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ASR_R2011_ShutdownTarget</srcid><srcstatus/><internalId>1026</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>146</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_01117</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_SetWakeupEvent sets (OR-operation) all events passed as a bit set in the sources in
        parameter (EcuM_WakeupSourceType bitmask) in the internal pending wakeup events variable.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_24</srcid><srcstatus/><internalId>950</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>147</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_01156</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_GetPendingWakeupEvents shall return wakeup events which have been set to pending but not
        yet validated as bits set in a EcuM_WakeupSourceType bitmask.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_25</srcid><srcstatus/><internalId>952</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>148</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02156</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_GetLastShutdownTarget shall return the ECU state from which the last wakeup or power up
        occurred in the shutdownTarget parameter. EcuM_GetLastShutdownTarget shall always return the
        same value until the next shutdown.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_27</srcid><srcstatus/><internalId>954</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>149</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02157</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_GetLastShutdownTarget may return a shutdown target in a STARTUP phase that set late in a
        previous SHUTDOWN phase. If so, implementation specific limitations shall be clearly documented.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>150</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02165</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Additional wakeup sources (to the pre-defined sources) shall be assigned individually to
        bitfield positions 5 to 31 by configuration. The bit assignment shall be done by the
        configuration tool.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1700</srcid><srcstatus/><internalId>863</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>151</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02166</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The EcuMWakeupSourceId  field in the EcuMWakeupSource container shall define the position
        corresponding to that wakeup source in all instances the EcuM_WakeupSourceType bitfield.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/EcuM_Cfg.c_244</srcid><srcstatus/><internalId>626</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>152</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02171</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_SetWakeupEvent must be callable from interrupt context, from OS context and an OS-free
        context.
      </description>
      <comment>
        This requirement is applicable for other modules. However, it is used by EcuM upon
        initialization, before the Os is started, only if there is a wakeup source associated
        with the MCU reset reason.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1064</srcid><srcstatus/><internalId>732</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>153</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02172</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_GetPendingWakeupEvents shall be callable from interrupt context, from OS context and an OS-
        free context.
      </description>
      <comment>
        This requirement is not applicable for EcuM. Since it is a requirement for
        other modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>154</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02181</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall call EcuM_GetValidatedWakeupEvents with the configured default
        shutdown target (EcuMDefaultShutdownTarget)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.GetValidatedWakeupEvents</srcid><srcstatus/><internalId>598</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>155</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02185</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The parameter mode of the function EcuM_SelectShutdownTarget shall be the identifier of a sleep
        or reset mode. The mode parameter shall only be used if the target parameter equals
        ECUM_SHUTDOWN_TARGET_SLEEP or ECUM_SHUTDOWN_TARGET_RESET. In all other cases, it shall be
        ignored. Only sleep or reset modes that are defined at configuration time and are stored in the
        EcuMCommonConfiguration container  are allowed as parameters.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_WakeupSource_NotExpired</srcid><srcstatus/><internalId>960</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ASR_R2011_ShutdownTarget</srcid><srcstatus/><internalId>1026</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>156</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02188</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        No wakeup event shall be missed in the SLEEP phase. The Halt or Poll Sequences shall not be
        entered if a wakeup event has occurred in the GoSleep sequence.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_26</srcid><srcstatus/><internalId>953</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_WakeupEventsOnPollingEntry</srcid><srcstatus/><internalId>1014</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_WakeupEventsOnHaltEntry</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>9</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>157</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02247</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The service EcuM_SelectBootTarget shall store the selected target in a way that is compatible
        with the boot loader.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM_BootTarget.c_103</srcid><srcstatus/><internalId>818</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>158</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02336</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the call of GetLastShutdownTarget() passes ECU_STATE_SLEEP in the parameter shutdownTarget,
        in the parameter shutdownMode it returns which of the configured sleep modes was actually
        chosen. If the call of GetLastShutdownTarget() passes ECU_STATE_RESET in the parameter
        shutdownTarget, in the parameter sleepMode it returns which of the configured reset modes was
        actually chosen.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.EB_Ref.SWS_EcuM_02336_1</srcid><srcstatus/><internalId>411</internalId></linkedfrom><linkedfrom><srcid>EcuM.EB_Ref.SWS_EcuM_02336_2</srcid><srcstatus/><internalId>412</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.GetLastShutdownTargetStates</srcid><srcstatus/><internalId>613</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>159</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02337</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the pointer to the shutdownMode parameter is NULL, EcuM_GetLastShutdownTarget shall simply
        ignore the shutdownMode parameter and return the last shutdown target regardless of whether it
        was SLEEP or not. If Development Error Detection is activated, EcuM_GetShutdownTarget shall
        send the ECUM_E_PARAM_POINTER development error to the DET module.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_62</srcid><srcstatus/><internalId>978</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>160</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02345</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_ValidateWakeupEvent shall be callable from interrupt context and task context.
      </description>
      <comment>
        This requirement is not applicable for EcuM. Since it is a requirement for
        other modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>161</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02389</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        To set the wakeup sources up for the next sleep mode, the ECU Manager module shall execute the
        EcuM_EnableWakeupSources callout  for each wakeup source that is configured in EcuMSleepMode.
        EcuMWakeupSourceMask for the target sleep mode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>162</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02411</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Table StartPreOS Sequence shows the activities in StartPreOS Sequence and the order in which
        they shall be executed in EcuM_Init
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_20</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuM_LoopDetection</srcid><srcstatus/><internalId>605</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>163</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02479</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall execute the Wakeup Validation Protocol upon the
        EcuM_SetWakeupEvent function call according to Interaction of Wakeup Sources and the ECU
        Manager later in this chapter.
      </description>
      <comment>
        This requirement is informational only. Since this is a general
        requirement for wake up validation protocol.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>164</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02496</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the wakeup event is validated (either immediately or by the wakeup validation protocol), the
        ECU Manager module shall make the information that it is a source of the current ECU wakeup
        through the EcuM_GetValidatedWakeupEvents  function.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_08</srcid><srcstatus/><internalId>945</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_24</srcid><srcstatus/><internalId>950</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>165</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02532</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_GetValidatedWakeupEvent shall be callable from interrupt context, from OS context and an
        OS-free context.
      </description>
      <comment>
        This requirement is not applicable for EcuM. Since it is a requirement for
        other modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>166</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02533</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_GetValidatedWakeupEvent shall return wakeup events which have been set to validated in the
        internal validated events variable as bits set in a EcuM_WakeupSourceType bitmask.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_08</srcid><srcstatus/><internalId>945</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_24</srcid><srcstatus/><internalId>950</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>167</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02539</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the ECU Manager module has a list of wakeup source candidates when the WakeupRestart
        Sequence has finished, the ECU Manager module shall validate these wakeup source candidates in
        EcuM_MainFunction.
      </description>
      <comment>
        The sequence is shown in graphics/WakeupValidation_Sequence.png
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_06</srcid><srcstatus/><internalId>943</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>168</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02546</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall derive the wakeup sources to be enabled (and used as the
        wakeupSource parameter) from the EcuMWakeupSource  bitfield configured for the current sleep
        mode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2938</srcid><srcstatus/><internalId>785</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2977</srcid><srcstatus/><internalId>788</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>169</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02559</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The configuration of the ECU Manager module shall specify the order of initialization calls
        inside init block 0 and init block 1.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_20</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>170</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02561</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall initialize the drivers in EcuMDriverRestartList in the same order
        as in the combined list of init block 0 and init block 1.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.EB_Ref.DriverRestartList</srcid><srcstatus/><internalId>397</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>171</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02562</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuMDriverRestartList may contain drivers that serve as wakeup sources. EcuM_AL_DriverRestart
        shall re-arm the trigger mechanism of these drivers' 'wakeup detected' callback.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>172</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02565</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall start a validation timeout for each pending wakeup event that
        should be validated. The timeout shall be event-specific
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_08</srcid><srcstatus/><internalId>945</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_SetWakeupEvent_Prolonging</srcid><srcstatus/><internalId>951</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MC_WakeupEventProlonging</srcid><srcstatus/><internalId>1003</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>173</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02566</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall only invoke wakeup validation on those wakeup sources where it is
        required by configuration. If the validation protocol is not configured  then a call to
        EcuM_SetWakeupEvent shall also imply a call to EcuM_ValidateWakeupEvent.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_02</srcid><srcstatus/><internalId>938</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_09</srcid><srcstatus/><internalId>946</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>174</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02572</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall detect wakeups that occurr prior to driver initialization, both
        from Halt/Poll or from OFF.
      </description>
      <comment>
        EcuM doesn't know whether a driver (which causes this wake up) is intialized
        or not, but when EcuM_SetWakeupEvent() is called, EcuM will store this wake
        up event as pending and this event will be processed in the next main function
        cycle. See also http://www.autosar.org/bugzilla/show_bug.cgi?id=42460
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2406</srcid><srcstatus/><internalId>773</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>175</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02585</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_SelectShutdownTarget shall not initiate any setup activities but only store the value for
        later use in the SHUTDOWN or SLEEP phase.
      </description>
      <comment>
        This requirement is informational only. It can't be tested that something
        doesn't do anything.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>176</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02589</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_GetExpiredWakeupEvents shall be callable from interrupt context, from OS context and an OS-
        free context.
      </description>
      <comment>
        This requirement is not applicable for EcuM. Since it is a requirement for
        other modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>177</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02601</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the EcuM cannot determine the reset reason returned by the Mcu driver, then the EcuM set a
        wakeup event for default wakeup source ECUM_WKSOURCE_RESET instead.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.NoDefaultWakeupSourceReporting</srcid><srcstatus/><internalId>558</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>178</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02603</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The StartPreOS Sequence shall initialize all basic software modules that are needed to start
        the OS.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_04</srcid><srcstatus/><internalId>940</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_20</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>179</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02623</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall remember the wakeup source resulting from the reset reason
        translation
      </description>
      <comment>
        The table is shown in graphics/Table_1_Start_PreOS_Sequence.PNG
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_02</srcid><srcstatus/><internalId>938</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_21</srcid><srcstatus/><internalId>957</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>180</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02625</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall never invoke validation for the following wakeup sources:
        ECUM_WKSOURCE_POWER
        ECUM_WKSOURCE_RESET
        ECUM_WKSOURCE_INTERNAL_RESET
        ECUM_WKSOURCE_INTERNAL_WDG
        ECUM_WKSOURCE_EXTERNAL_WDG.
      </description>
      <comment>
        Hint: The above mentioned wake up sources are default wake up sources.
        The requirement is covered by the X-Path check for the parameter
        "EcuMValidationTimeout", as for default wake up sources, the validation
        timeout must be disabled (Thus wake up validation for the above sources
        won't be performed).
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1665</srcid><srcstatus/><internalId>861</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>181</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02645</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_ValidateWakeupEvent shall invoke ComM_EcuM_WakeUpIndication for each wakeup event if the
        EcuMComMChannelRef parameter  in the EcuMWakeupSource configuration container for the
        corresponding wakeup source is configured.
      </description>
      <comment>
       ComM notification is done in EcuM_MainFunction(). This requirement
    　  is replaced with the requirement EcuM.ComMWakeupIndication.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.WkUpNotificationMadeDeferred</srcid><srcstatus/><internalId>554</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>182</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02664</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall define all states as listed in the EcuM_StateType.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_BSW.h_41</srcid><srcstatus/><internalId>678</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>183</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02683</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_ClearWakeupEvent clears all pending events passed as a bit set in the sources in parameter
        EcuM_WakeupSourceType bitmask) from the internal pending wakeup events variable, the internal
        validated events variable and the internal expired events variable.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2099</srcid><srcstatus/><internalId>765</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_08</srcid><srcstatus/><internalId>945</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_25</srcid><srcstatus/><internalId>952</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>184</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02684</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When activated through the EcuM_Init  function, the ECU Manager module shall perform the
        actions in the StartPreOS Sequence
      </description>
      <comment>
        The table is shown in graphics/Table_1_Start_PreOS_Sequence.PNG
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_20</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>185</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02707</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_SetWakeupEvent shall start the wakeup validation timeout timer according to Wakeup
        Validation Timeout.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_08</srcid><srcstatus/><internalId>945</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>186</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02709</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall start the wakeup validation timeout timer when EcuM_SetWakeupEvent
        is called.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2434</srcid><srcstatus/><internalId>775</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>187</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02710</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_ValidateWakeupEvent shall stop the wakeup validation timeout timer
      </description>
      <comment>
        Because a single counter is used for timeout monitoring, the timeout timer
        must not be stopped.  When the function EcuM_ValidateWakeupEvent is
        called for a wakeup source, the corresponding wakeup event will be
        validated and the timeout monitoring will be stopped for that wakeup
        source only.  If other wakeup events are pending, these may still be
        validated or expire.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_06</srcid><srcstatus/><internalId>943</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>188</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02712</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If EcuM_SetWakeupEvent  is called subsequently for the same wakeup source, the ECU Manager
        module shall not restart the wakeup validation timeout.
      </description>
      <comment>
        Setting of wake up event (twice) in the subsequent call is prevented by semaphores.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2421</srcid><srcstatus/><internalId>774</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>189</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02730</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall call each driver's init function with the parameters derived from
        the driver's EcuMModuleService configuration container.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_20</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>190</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02756</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When a wakeup event occurs during the shutdown phase, the ECU Manager module shall complete the
        shutdown and restart immediately thereafter.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_683</srcid><srcstatus/><internalId>723</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>191</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02788</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the pointer to the shutdownMode parameter is NULL, EcuM_GetShutdownTarget shall simply
        ignore the shutdownMode parameter. If Development Error Detection is activated,
        EcuM_GetShutdownTarget shall send the ECUM_E_PARAM_POINTER development error to the DET module.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_WakeupSource_NotExpired</srcid><srcstatus/><internalId>960</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>192</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02790</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_ValidateWakeupEvent shall return without effect for all sources except communication
        channels when called while the ECU Manager module is in the RUN state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.2</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2488</srcid><srcstatus/><internalId>778</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_24</srcid><srcstatus/><internalId>950</internalId></linkedfrom><linkedfrom><srcid>TS_EcuM_WakeupSource_NotExpired</srcid><srcstatus/><internalId>960</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2790</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>23</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>193</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02791</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_ValidateWakeupEvent shall have full effect in any ECU Phase for those sources that
        correspond to a communication channel
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2485</srcid><srcstatus/><internalId>777</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_06</srcid><srcstatus/><internalId>943</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>194</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02794</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The structure defined in the EcuM_ConfigType type shall contain an additional post-build
        configuration variant identifier (uint8/uint16/uint32 depending on algorithm to compute the
        identifier)
      </description>
      <comment>
        Requirement related to hash computation as well as Post-build.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.NoHashValueComputation</srcid><srcstatus/><internalId>557</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>195</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02795</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The structure defined by the EcuM_ConfigType type shall contain an additional hash code that is
        tested against the configuration parameter EcuMCommonConfiguration.EcuMConfigConsistencyHash
        for checking consistency of the configuration data.
      </description>
      <comment>
        Requirement related to hash computation as well as Post-build.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.NoHashValueComputation</srcid><srcstatus/><internalId>557</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>196</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02796</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall not only check the consistency of its own parameters but of all
        post-build configurable BSW modules before initializing the first BSW module.
      </description>
      <comment>
        Requirement related to hash computation
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.NoHashValueComputation</srcid><srcstatus/><internalId>557</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>197</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02798</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall check in EcuM_Init  that the field in the structure is equal to
        the value of ECUM_CONFIGCONSISTENCY_HASH.
      </description>
      <comment>
        Requirement related to hash computation
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.NoHashValueComputation</srcid><srcstatus/><internalId>557</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>198</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02799</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The hash computation algorithm used to compute a hash value over all pre-compile and link-time
        configuration parameters of all BSW modules shall always produce the same hash value for the
        same set of configuration data regardless of the order of configuration parameters in the XML
        files.
      </description>
      <comment>
        Requirement related to hash computation
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.NoHashValueComputation</srcid><srcstatus/><internalId>557</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>199</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02801</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The structure defined by type EcuM_ConfigType shall hold the post-build configuration
        parameters for the ECU Manager module as well as pointers to all ConfigType structures of
        modules that are initialized by the ECU Manager module.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/EcuM.xgen_88</srcid><srcstatus/><internalId>921</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>200</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02806</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Caveats of EcuM_StartupTwo: This function must be called from a task, which is started directly
        as a consequence of StartOS. I.e. either the EcuM_StartupTwo function must be called from an
        autostart task or the EcuM_StartupTwo function must be called from a task, which is explicitly
        started.
      </description>
      <comment>
        This requirement is not applicable for EcuM since it is information about
        the context from which EcuM_StartupTwo is called. It is a requirement to
        the OS service.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>201</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02807</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_ClearWakeupEvent shall be callable from interrupt context, from OS context and an OS-free
        context.
      </description>
      <comment>
        This requirement is not applicable for EcuM. Since it is a requirement for
        other modules.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>202</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02810</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Module | Header File | Imported Type
        Adc | Adc.h | Adc_ConfigType
        BswM | BswM.h | BswM_ConfigType
        Can | Can.h | Can_ConfigType
        CanTrcv | CanTrcv.h | CanTrcv_ConfigType
        ComStack_Types | ComStack_Types.h | NetworkHandleType
        ComStack_Types.h | PNCHandleType
        Dem | Dem.h | Dem_ConfigType
        Det | Det.h | Det_ConfigType
        Eth | Eth.h | Eth_ConfigType
        EthSwt | EthSwt.h | EthSwt_ConfigType
        EthTrcv | EthTrcv.h | EthTrcv_ConfigType
        Fls | Fls.h | Fls_ConfigType
        Fr | Fr.h | Fr_ConfigType
        FrTrcv | FrTrcv.h | FrTrcv_ConfigType
        Gpt | Gpt.h | Gpt_ConfigType
        Icu | Icu.h | Icu_ConfigType
        IoHwAb | IoHwAb.h | IoHwAb_ConfigType
        Lin | Lin.h | Lin_ConfigType
        LinTrcv | LinTrcv.h | LinTrcv_ConfigType
        McOs | Os.h | AppModeType
        Os.h | CoreIdType
        Mcu | Mcu.h | Mcu_ConfigType
        Mcu.h | Mcu_ModeType
        Mcu.h | Mcu_ResetType
        Ocu | Ocu.h | Ocu_ConfigType
        Os | Os.h | StatusType
        Port | Port.h | Port_ConfigType
        Pwm | Pwm.h | Pwm_ConfigType
        SchM | SchM.h | SchM_ConfigType
        Spi | Spi.h | Spi_ConfigType
        Std | Std_Types.h | Std_ReturnType
        Std_Types.h | Std_VersionInfoType
        Wdg | Wdg.h | Wdg_ConfigType
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>203</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02811</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_Init
        Syntax
        void EcuM_Init (void)
        Service ID [hex] | 0x01
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Initializes the ECU state manager and carries out the startup procedure. The
        function will never return (it calls StartOS)
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1149</srcid><srcstatus/><internalId>737</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ASR_R2011_Prep</srcid><srcstatus/><internalId>1024</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>204</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02812</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_Shutdown
        Syntax
        void EcuM_Shutdown (void)
        Service ID [hex] | 0x02
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Typically called from the shutdown hook, this function takes over execution
        control and will carry out GO OFF II activities.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1225</srcid><srcstatus/><internalId>744</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_13_WIN32X86</srcid><srcstatus/><internalId>984</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>205</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02813</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_GetVersionInfo
        Syntax
        void EcuM_GetVersionInfo (Std_VersionInfoType* versioninfo)
        Service ID [hex] | 0x00
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | versioninfo | Pointer to where to store the version information of this
        module.
        Return value | None
        Description | Returns the version information of this module.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_549</srcid><srcstatus/><internalId>718</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_01</srcid><srcstatus/><internalId>937</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>206</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02822</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_SelectShutdownTarget
        Syntax
                       Std_ReturnType EcuM_SelectShutdownTarget (EcuM_ShutdownTargetType shutdownTarget,
                       EcuM_ShutdownModeType shutdownMode)
        Service ID [hex] | 0x06
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | shutdownTarget | The selected shutdown target.
        shutdownMode | The identfier of a sleep mode (if target is ECUM_SHUTDOWN_TARGET_SLEEP) or a
        reset mechanism (if target is ECUM_SHUTDOWN_TARGET_RESET) as defined by configuration.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: The new shutdown target was setE_NOT_OK: The new shutdown
        target was not set
        Description | EcuM_SelectShutdownTarget selects the shutdown target. EcuM_SelectShutdownTarget
        is part of the ECU Manager Module port interface.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1478</srcid><srcstatus/><internalId>750</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_27</srcid><srcstatus/><internalId>954</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_13_prep_WIN32X86</srcid><srcstatus/><internalId>983</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ASR_R2011_ShutdownTarget</srcid><srcstatus/><internalId>1026</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>207</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02824</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_GetShutdownTarget
        Syntax:
                 Std_ReturnType EcuM_GetShutdownTarget (EcuM_ShutdownTargetType* shutdownTarget,
                                                        EcuM_ShutdownModeType* shutdownMode)
        Service ID [hex] | 0x09
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | shutdownTarget | One of these values is returned: ECUM_SHUTDOWN_TARGET_SLEEP
        ECUM_SHUTDOWN_TARGET_RESET ECUM_SHUTDOWN_TARGET_OFF
        shutdownMode | If the out parameter "shutdownTarget" is ECUM_SHUTDOWN_TARGET_SLEEP, sleepMode
        tells which of the configured sleep modes was actually chosen. If "shutdownTarget" is
        ECUM_SHUTDOWN_TARGET_RESET, sleepMode tells which of the configured reset modes was actually
        chosen.
        Return value | Std_ReturnType | E_OK: The service has succeededE_NOT_OK: The service has failed,
        e.g. due to NULL pointer being passed
        Description | EcuM_GetShutdownTarget returns the currently selected shutdown target as set by
        EcuM_SelectShutdownTarget. EcuM_GetShutdownTarget is part of the ECU Manager Module port
        interface.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1525</srcid><srcstatus/><internalId>751</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_27</srcid><srcstatus/><internalId>954</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_13_WIN32X86</srcid><srcstatus/><internalId>984</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>208</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02825</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_GetLastShutdownTarget
        Syntax
                      Std_ReturnType EcuM_GetLastShutdownTarget (EcuM_ShutdownTargetType* shutdownTarget,
                      EcuM_ShutdownModeType* shutdownMode)
        Service ID [hex] | 0x08
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | shutdownTarget | One of these values is returned: ECUM_SHUTDOWN_TARGET_SLEEP
        ECUM_SHUTDOWN_TARGET_RESET ECUM_SHUTDOWN_TARGET_OFF
        shutdownMode | If the out parameter "shutdownTarget" is ECUM_SHUTDOWN_TARGET_SLEEP, sleepMode
        tells which of the configured sleep modes was actually chosen. If "shutdownTarget" is
        ECUM_SHUTDOWN_TARGET_RESET, sleepMode tells which of the configured reset modes was actually
        chosen.
        Return value | Std_ReturnType | E_OK: The service has succeededE_NOT_OK: The service has failed,
        e.g. due to NULL pointer being passed
        Description | EcuM_GetLastShutdownTarget returns the shutdown target of the previous shutdown
        process. EcuM_GetLastShutdownTarget is part of the ECU Manager Module port interface.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1649</srcid><srcstatus/><internalId>753</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_27</srcid><srcstatus/><internalId>954</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>209</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02826</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_SetWakeupEvent
        Syntax
        void EcuM_SetWakeupEvent (EcuM_WakeupSourceType sources)
        Service ID [hex] | 0x0c
        Sync/Async | Synchronous
        Reentrancy | Non-Reentrant, Non-Interruptible
        Parameters (in) | sources | Value to be set
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Sets the wakeup event.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2371</srcid><srcstatus/><internalId>771</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_24</srcid><srcstatus/><internalId>950</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_SetWakeupEvent_Prolonging</srcid><srcstatus/><internalId>951</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MC_WakeupEventProlonging</srcid><srcstatus/><internalId>1003</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>210</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02827</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_GetPendingWakeupEvents
        Syntax
        EcuM_WakeupSourceType EcuM_GetPendingWakeupEvents (void)
        Service ID [hex] | 0x0d
        Sync/Async | Synchronous
        Reentrancy | Non-Reentrant, Non-Interruptible
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | EcuM_WakeupSourceType | All wakeup events
        Description | Gets pending wakeup events.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2051</srcid><srcstatus/><internalId>762</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_25</srcid><srcstatus/><internalId>952</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>211</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02828</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_ClearWakeupEvent
        Syntax
        void EcuM_ClearWakeupEvent (EcuM_WakeupSourceType sources)
        Service ID [hex] | 0x16
        Sync/Async | Synchronous
        Reentrancy | Non-Reentrant, Non-Interruptible
        Parameters (in) | sources | Events to be cleared
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Clears wakeup events.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2080</srcid><srcstatus/><internalId>764</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_25</srcid><srcstatus/><internalId>952</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>212</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02829</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_ValidateWakeupEvent
        Syntax
        void EcuM_ValidateWakeupEvent (EcuM_WakeupSourceType sources)
        Service ID [hex] | 0x14
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | sources | Events that have been validated
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | After wakeup, the ECU State Manager will stop the process during the WAKEUP
        VALIDATION state/sequence to wait for validation of the wakeup event.This API service is used
        to indicate to the ECU Manager module that the wakeup events indicated in the sources parameter
        have been validated.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2455</srcid><srcstatus/><internalId>776</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_24</srcid><srcstatus/><internalId>950</internalId></linkedfrom><linkedfrom><srcid>TS_EcuM_WakeupSource_NotExpired</srcid><srcstatus/><internalId>960</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>213</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02830</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_GetValidatedWakeupEvents
        Syntax
        EcuM_WakeupSourceType EcuM_GetValidatedWakeupEvents (void)
        Service ID [hex] | 0x15
        Sync/Async | Synchronous
        Reentrancy | Non-Reentrant, Non-Interruptible
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | EcuM_WakeupSourceType | All wakeup events
        Description | Gets validated wakeup events.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2121</srcid><srcstatus/><internalId>766</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_24</srcid><srcstatus/><internalId>950</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>214</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02831</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_GetExpiredWakeupEvents
        Syntax
        EcuM_WakeupSourceType EcuM_GetExpiredWakeupEvents (void)
        Service ID [hex] | 0x19
        Sync/Async | Synchronous
        Reentrancy | Non-Reentrant, Non-Interruptible
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | EcuM_WakeupSourceType | All wakeup events: Returns all events that have been set
        and for which validation has failed. Events which do not need validation must never be reported
        by this function.
        Description | Gets expired wakeup events.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2149</srcid><srcstatus/><internalId>767</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_08</srcid><srcstatus/><internalId>945</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_SetWakeupEvent_Prolonging</srcid><srcstatus/><internalId>951</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MC_WakeupEventProlonging</srcid><srcstatus/><internalId>1003</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>215</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02835</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_SelectBootTarget
        Syntax
        Std_ReturnType EcuM_SelectBootTarget (EcuM_BootTargetType target)
        Service ID [hex] | 0x12
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | target | The selected boot target.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: The new boot target was accepted by EcuME_NOT_OK: The new
        boot target was not accepted by EcuM
        Description | EcuM_SelectBootTarget selects a boot target. EcuM_SelectBootTarget is part of the
        ECU Manager Module port interface.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM_BootTarget.c_67</srcid><srcstatus/><internalId>816</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_22</srcid><srcstatus/><internalId>958</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>216</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02836</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_GetBootTarget
        Syntax
        Std_ReturnType EcuM_GetBootTarget (EcuM_BootTargetType * target)
        Service ID [hex] | 0x13
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | target | The currently selected boot target.
        Return value | Std_ReturnType | E_OK: The service always succeeds.
        Description | EcuM_GetBootTarget returns the current boot target - see EcuM_SelectBootTarget.
        EcuM_GetBootTarget is part of the ECU Manager Module port interface.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM_BootTarget.c_128</srcid><srcstatus/><internalId>819</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_22</srcid><srcstatus/><internalId>958</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>217</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02837</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_MainFunction
        Syntax
        void EcuM_MainFunction (void)
        Service ID [hex] | 0x18
        Description | The purpose of this service is to implement all activities of the ECU State
        Manager while the OS is up and running.
        Available via | SchM_EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2182</srcid><srcstatus/><internalId>768</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>218</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02838</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_StartupTwo
        Syntax
        void EcuM_StartupTwo (void)
        Service ID [hex] | 0x1a
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | This function implements the STARTUP II state.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1192</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_04</srcid><srcstatus/><internalId>940</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_20</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>219</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02858</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        API Function | Header File | Description
        BswM_Deinit | BswM.h | Deinitializes the BSW Mode Manager.
        BswM_EcuM_CurrentWakeup | BswM_EcuM.h | Function called by EcuM to indicate the current state
        of a wakeup source.
        BswM_Init | BswM.h | Initializes the BSW Mode Manager.
        CanSM_StartWakeupSource | CanSM.h | This function shall be called by EcuM when a wakeup source
        shall be started.
        CanSM_StopWakeupSource | CanSM.h | This function shall be called by EcuM when a wakeup source
        shall be stopped.
        ComM_EcuM_PNCWakeUpIndication | ComM_EcuM.h | Notification of a wake up on the corresponding
        partial network cluster.
        ComM_EcuM_WakeUpIndication | ComM_EcuM.h | Notification of a wake up on the corresponding
        channel.
        Dem_Init | Dem.h | Initializes or reinitializes this module.
        Dem_PreInit | Dem.h | Initializes the internal states necessary to process events reported by
        BSW-modules.
        Dem_Shutdown | Dem.h | Shuts down this module.
        GetResource | Os.h
        Mcu_GetResetReason | Mcu.h | The service reads the reset type from the hardware, if supported.
        Mcu_Init | Mcu.h | This service initializes the MCU driver.
        Mcu_PerformReset | Mcu.h | The service performs a microcontroller reset.
        Mcu_SetMode | Mcu.h | This service activates the MCU power modes.
        ReleaseResource | Os.h
        SchM_Deinit | SchM.h | SchM_Deinit is used to finalize Basic Software Scheduler part of the RTE
        of the core on which it is called. This service releases all system resources allocated by the
        Basic Software Scheduler part on that core.
        SchM_Init | SchM.h | SchM_Init is intended to allocate and initialize system resources used by
        the Basic Software Scheduler part of the RTE for the core on which it is called.
        ShutdownOS | Os.h
        StartOS | Os.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ExpectedInterfaceCanSM.</srcid><srcstatus/><internalId>563</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.AdditionalExpectedInterfaces.</srcid><srcstatus/><internalId>564</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_24</srcid><srcstatus/><internalId>950</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>220</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02859</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        API Function | Header File | Description
        Adc_Init | Adc.h | Initializes the ADC hardware units and driver.
        Can_Init | Can.h | This function initializes the module.
        CanTrcv_Init | CanTrcv.h | Initializes the CanTrcv module.
        Det_Init | Det.h | Service to initialize the Default Error Tracer.
        Det_ReportError | Det.h | Service to report development errors.
        Eth_Init | Eth.h | Initializes the Ethernet Driver
        EthSwt_Init | EthSwt.h | Initializes the Ethernet Switch Driver
        EthTrcv_Init | EthTrcv.h | Initializes the Ethernet Transceiver Driver
        Fls_Init | Fls.h | Initializes the Flash Driver.
        Fr_Init | Fr.h | Initializes the Fr.
        FrTrcv_Init | FrTrcv.h | This service initializes the FrTrcv.
        GetCoreID | Os.h | The function returns a unique core identifier.
        Gpt_Init | Gpt.h | Initializes the GPT driver.
        Icu_Init | Icu.h | This function initializes the driver.
        IoHwAb_Init | IoHwAb.h | Initializes either all the IO Hardware Abstraction software or is a
        part of the IO Hardware Abstraction.
        Lin_Init | Lin.h | Initializes the LIN module.
        LinTrcv_Init | LinTrcv.h | Initializes the Lin Transceiver Driver module.
        Ocu_Init | Ocu.h | Service for OCU initialization.
        Port_Init | Port.h | Initializes the Port Driver module.
        Pwm_Init | Pwm.h | Service for PWM initialization.
        ShutdownAllCores | Os.h | After this service the OS on all AUTOSAR cores is shut down. Allowed
        at TASK level and ISR level and also internally by the OS. The function will never return. The
        function will force other cores into a shutdown.
        Spi_Init | Spi.h | Service for SPI initialization.
        StartCore | Os.h | It is not supported to call this function after StartOS(). The function
        starts the core specified by the parameter CoreID. The OUT parameter allows the caller to check
        whether the operation was successful or not. If a core is started by means of this function
        StartOS shall be called on the core.
        Wdg_Init | Wdg.h | Initializes the module.
        WdgM_PerformReset | WdgM.h | Instructs the Watchdog Manager to cause a watchdog reset.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>221</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02863</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall invoke the EcuM_GenerateRamHash  callout before halting the
        microcontroller the EcuM_CheckRamHash  callout after the processor returns from halt. In case
        of applied multi core and existence of "slave" EcuM(s) this check should be executed on the "
        master" EcuM only. The "master" EcuM generates the hash out of all data that lie within its
        reach. Private data of "slave" EcuMs are out of scope.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_10</srcid><srcstatus/><internalId>947</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_RamChkFail_PrdErrDisbld</srcid><srcstatus/><internalId>959</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>222</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02867</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If Development Error Reporting is turned on and parameter "sources" contains an unknown (
        unconfigured) wakeup source, EcuM_SetWakeupEvent shall not update its internal variable and
        shall send the ECUM_E_UNKNOWN_WAKEUP_SOURCE error message to the DET module instead.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_63</srcid><srcstatus/><internalId>965</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>223</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02868</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If Development Error Reporting is turned on and the sources parameter contains an unknown (
        unconfigured) wakeup source, EcuM_ValidateWakeupEvent shall ignore the call and send the
        ECUM_E_UNKNOWN_WAKEUP_SOURCE error message to the DET module.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_63</srcid><srcstatus/><internalId>965</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>224</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02904</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_ErrorHook
        Syntax
        void EcuM_ErrorHook (uint16 reason)
        Service ID [hex] | 0x30
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | reason | Reason for calling the error hook
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | The ECU State Manager will call the error hook if the error codes "
        ECUM_E_RAM_CHECK_FAILED" or "ECUM_E_CONFIGURATION_DATA_INCONSISTENT" occur. In this situation
        it is not possible to continue processing and the ECU must be stopped. The integrator may
        choose the modality how the ECU is stopped, i.e. reset, halt, restart, safe state etc.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_150</srcid><srcstatus/><internalId>639</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_10</srcid><srcstatus/><internalId>947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMErrorHookPrototype</srcid><srcstatus/><internalId>599</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.PbConfigDataInconsistent</srcid><srcstatus/><internalId>615</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>225</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02905</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_AL_DriverInitZero
        Syntax
        void EcuM_AL_DriverInitZero (void)
        Service ID [hex] | 0x31
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | This callout shall provide driver initialization and other hardware-related
        startup activities for loading the post-build configuration data. Beware: Here only pre-compile
        and link-time configurable modules may be used.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_71</srcid><srcstatus/><internalId>636</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_20</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>226</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02906</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_DeterminePbConfiguration
        Syntax
        const EcuM_ConfigType* EcuM_DeterminePbConfiguration (void)
        Service ID [hex] | 0x32
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | EcuM_ConfigType | Pointer to the EcuM post-build configuration which contains
        pointers to all other BSW module post-build configurations.
        Description | This callout should evaluate some condition, like port pin or NVRAM value, to
        determine which post-build configuration shall be used in the remainder of the startup process.
        It shall load this configuration data into a piece of memory that is accessible by all BSW
        modules and shall return a pointer to the EcuM post-build configuration as a base for all BSW
        module post-build configurations.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_269</srcid><srcstatus/><internalId>650</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>227</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02907</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_AL_DriverInitOne
        Syntax
        void EcuM_AL_DriverInitOne (void)
        Service ID [hex] | 0x33
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | This callout shall provide driver initialization and other hardware-related
        startup activities in case of a power on reset.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_102</srcid><srcstatus/><internalId>637</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>228</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02916</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_OnGoOffOne
        Syntax
        void EcuM_OnGoOffOne (void)
        Service ID [hex] | 0x3C
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | This call allows the system designer to notify that the GO OFF I state is about
        to be entered.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_288</srcid><srcstatus/><internalId>651</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_12_WIN32X86</srcid><srcstatus/><internalId>982</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>229</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02917</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_OnGoOffTwo
        Syntax
        void EcuM_OnGoOffTwo (void)
        Service ID [hex] | 0x3D
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | This call allows the system designer to notify that the GO OFF II state is about
        to be entered.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_299</srcid><srcstatus/><internalId>652</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_12_WIN32X86</srcid><srcstatus/><internalId>982</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>230</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02918</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_EnableWakeupSources
        Syntax
        void EcuM_EnableWakeupSources (EcuM_WakeupSourceType wakeupSource)
        Service ID [hex] | 0x3F
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | wakeupSource
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | The ECU Manager Module calls EcuM_EnableWakeupSource to allow the system designer
        to notify wakeup sources defined in the wakeupSource bitfield that SLEEP will be entered and to
        adjust their source accordingly.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_310</srcid><srcstatus/><internalId>653</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_07</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>231</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02919</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_GenerateRamHash
        Syntax
        void EcuM_GenerateRamHash (void)
        Service ID [hex] | 0x40
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | see EcuM_CheckRamHash
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_357</srcid><srcstatus/><internalId>654</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_10</srcid><srcstatus/><internalId>947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>232</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02920</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_AL_SwitchOff
        Syntax
        void EcuM_AL_SwitchOff (void)
        Service ID [hex] | 0x3E
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | This callout shall take the code for shutting off the power supply of the ECU. If
        the ECU cannot unpower itself, a reset may be an adequate reaction.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_377</srcid><srcstatus/><internalId>655</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_AL_SwitchOff_WIN32X86</srcid><srcstatus/><internalId>985</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>233</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02921</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_CheckRamHash
        Syntax
        uint8 EcuM_CheckRamHash (void)
        Service ID [hex] | 0x43
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | uint8 | 0: RAM integrity test failedelse: RAM integrity test passed
        Description | This callout is intended to provide a RAM integrity test. The goal of this test
        is to ensure that after a long SLEEP duration, RAM contents is still consistent. The check does
        not need to be exhaustive since this would consume quite some processing time during wakeups. A
        well designed check will execute quickly and detect RAM integrity defects with a sufficient
        probability. This specification does not make any assumption about the algorithm chosen for a
        particular ECU. The areas of RAM which will be checked have to be chosen carefully. It depends
        on the check algorithm itself and the task structure. Stack contents of the task executing the
        RAM check e.g. very likely cannot be checked. It is good practice to have the hash generation
        and checking in the same task and that this task is not preemptible and that there is only
        little activity between hash generation and hash check. The RAM check itself is provided by the
        system designer. In case of applied multi core and existence of Satellite-EcuM(s): this API
        will be called by the Master-EcuM only.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_441</srcid><srcstatus/><internalId>657</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_10</srcid><srcstatus/><internalId>947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>234</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02922</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_DisableWakeupSources
        Syntax
        void EcuM_DisableWakeupSources (EcuM_WakeupSourceType wakeupSource)
        Service ID [hex] | 0x44
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | wakeupSource
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | The ECU Manager Module calls EcuM_DisableWakeupSources to set the wakeup source(s)
        defined in the wakeupSource bitfield so that they are not able to wake the ECU up.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_465</srcid><srcstatus/><internalId>658</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>235</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02923</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_AL_DriverRestart
        Syntax
        void EcuM_AL_DriverRestart (void)
        Service ID [hex] | 0x45
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | This callout shall provide driver initialization and other hardware-related
        startup activities in the wakeup case.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_134</srcid><srcstatus/><internalId>638</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_07</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ALDriverRestartCalloutPrototype</srcid><srcstatus/><internalId>600</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>236</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02924</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_StartWakeupSources
        Syntax
        void EcuM_StartWakeupSources (EcuM_WakeupSourceType wakeupSource)
        Service ID [hex] | 0x46
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | wakeupSource
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | The callout shall start the given wakeup source(s) so that they are ready to
        perform wakeup validation.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_504</srcid><srcstatus/><internalId>659</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_25</srcid><srcstatus/><internalId>952</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ResetWakeupSource_WIN32X86</srcid><srcstatus/><internalId>987</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_StartWakeupSource</srcid><srcstatus/><internalId>994</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>237</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02925</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_CheckValidation
        Syntax
        void EcuM_CheckValidation (EcuM_WakeupSourceType wakeupSource)
        Service ID [hex] | 0x47
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | wakeupSource
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | This callout is called by the EcuM to validate a wakeup source. If a valid wakeup
        has been detected, it shall be reported to EcuM via EcuM_ValidateWakeupEvent(
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_534</srcid><srcstatus/><internalId>660</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_06</srcid><srcstatus/><internalId>943</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>238</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02926</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_StopWakeupSources
        Syntax
        void EcuM_StopWakeupSources (EcuM_WakeupSourceType wakeupSource)
        Service ID [hex] | 0x48
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | wakeupSource
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | The callout shall stop the given wakeup source(s) after unsuccessful wakeup
        validation.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_565</srcid><srcstatus/><internalId>661</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_08</srcid><srcstatus/><internalId>945</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>239</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02927</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_EndCheckWakeup
        Syntax
        void EcuM_EndCheckWakeup (EcuM_WakeupSourceType WakeupSource)
        Service ID [hex] | 0x00
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | WakeupSource | For this wakeup source the corresponding CheckWakeupTimer
        shall be canceled.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | This API is called by any SW Module whose wakeup source is checked asynchronously
        e.g. asynchronous Can Trcv Driver) and the Check of the Wakeup returns a negative Result (no
        Wakeup by this Source). The API cancels the CheckWakeupTimer for the WakeupSource. If the
        correponding CheckWakeupTimer is canceled the check of this wakeup source is finished.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CheckWakeup</srcid><srcstatus/><internalId>606</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>240</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02928</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_SleepActivity
        Syntax
        void EcuM_SleepActivity (void)
        Service ID [hex] | 0x41
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | This callout is invoked periodically in all reduced clock sleep modes. It is
        explicitely allowed to poll wakeup sources from this callout and to call wakeup notification
        functions to indicate the end of the sleep state to the ECU State Manager.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_620</srcid><srcstatus/><internalId>662</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>241</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02929</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_CheckWakeup
        Syntax
        void EcuM_CheckWakeup (EcuM_WakeupSourceType wakeupSource)
        Service ID [hex] | 0x42
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | wakeupSource
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | This callout is called by the EcuM to poll a wakeup source. It shall also be
        called by the ISR of a wakeup source to set up the PLL and check other wakeup sources that may
        be connected to the same interrupt.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_634</srcid><srcstatus/><internalId>663</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>242</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02932</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When activated through the EcuM_StartupTwo  function, the ECU Manager module shall perform the
        actions in StartPostOS Sequence (see table "Table_StartPostOS_Sequence"
        StartPostOS Sequence
        Initialization Activity | Comment | Opt. Start BSW Scheduler | | no
        Init BSW Mode Manager | | no
        Init BSW Scheduler | Initialize the semaphores for critical sections used by BSW modules | no
        Start Scheduler Timing | Start periodical events for BSW/SWCs | no
      </description>
      <comment>
        The table is shown in graphics/Table_2_Start_PostOS_Sequence.PNG
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_04</srcid><srcstatus/><internalId>940</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_20</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.StartPostOsSequence</srcid><srcstatus/><internalId>573</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>243</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02947</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        For re-initialization during WakeupRestart, the integrator shall integrate a restart block into
        the integration code for EcuM_AL_DriverRestart  using the EcuMDriverRestartList.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>244</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02951</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        In contrast to the SHUTDOWN phase, the ECU Manager module shall not shut down the OS when
        entering the SLEEP phase. The sleep mode, i.e. combination of the EcuM SLEEP phase and the Mcu
        Mode, shall be transparent to the OS.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_07</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>245</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02952</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        As its last activity, the ECU Manager module shall call the ShutdownOS function.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_12_prep_WIN32X86</srcid><srcstatus/><internalId>981</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>246</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02953</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The shutdown hook shall call EcuM_Shutdown  to terminate the shutdown process. EcuM_Shutdown
        shall not return but switch off the ECU or issue a reset.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_12_prep_WIN32X86</srcid><srcstatus/><internalId>981</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>247</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02957</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module may define a configurable set of sleep modes  where each mode itself is
        a shutdown target.
      </description>
      <comment>
        This requirement is concerned about configuration (parameter "EcuMSleepMode").
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/EcuM_Cfg.h.m4_292</srcid><srcstatus/><internalId>620</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>248</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02958</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall allow mapping the MCU sleep modes to ECU sleep modes and hence
        allow them to be addressed as shutdown targets.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1502</srcid><srcstatus/><internalId>857</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>249</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02960</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall execute the Halt Sequence in sleep modes that halt the
        microcontroller. In these sleep modes the ECU Manager module does not execute any code.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_07</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>250</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02961</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall invoke the EcuM_GenerateRamHash  where the system designer can
        place a RAM integrity check.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_07</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>251</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02962</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall execute the Poll Sequence in sleep modes that reduce the power
        consumption of the microcontroller but still execute code.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_NotifyComM</srcid><srcstatus/><internalId>949</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_NotifyComMPnc</srcid><srcstatus/><internalId>955</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>252</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02963</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If a wakeup event (e.g. toggling a wakeup line, communication on a CAN bus etc.) occurs while
        the ECU is in Halt or Poll, then the ECU Manager module shall regain control and exit the SLEEP
        phase by executing the WakeupRestart sequence. An ISR may be invoked to handle the wakeup event,
        but this depends on the hardware and the driver implementation.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_07</srcid><srcstatus/><internalId>944</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_NotifyComM</srcid><srcstatus/><internalId>949</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_NotifyComMPnc</srcid><srcstatus/><internalId>955</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>253</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02975</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If a wakeup event requires validation then the ECU Manager module shall invoke the validation
        protocol
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_06</srcid><srcstatus/><internalId>943</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>254</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02976</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If a wakeup event does not require validation, the ECU Manager module shall issue a mode switch
        request to set the event's mode to ECUM_WKSTATUS_VALIDATED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_24</srcid><srcstatus/><internalId>950</internalId></linkedfrom><linkedfrom><srcid>TS_EcuM_WakeupSource_NotExpired</srcid><srcstatus/><internalId>960</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>255</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02979</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The shutdownMode parameter shall determine the specific sleep or reset mode  relevant to
        SelectShutdownTarget, GetShutdownTarget and GetLastShutdownTarget. The ECU Manager module shall
        only use the shutdownMode parameter is if the shutdownTarget parameter is equal to
        ECUM_SHUTDOWN_TARGET_SLEEP or ECUM_SHUTDOWN_TARGET_RESET, otherwise it shall be ignored.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Shutdown_Target_Mode</srcid><srcstatus/><internalId>964</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_62</srcid><srcstatus/><internalId>978</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ASR_R2011_ShutdownTarget</srcid><srcstatus/><internalId>1026</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ASR_R2011_ShutdownPrep</srcid><srcstatus/><internalId>1028</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>256</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02980</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall ignore all types of errors that occur during initialization, e.g.
        values returned by init functions
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1088</srcid><srcstatus/><internalId>733</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>257</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02987</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the RAM check fails on wakeup the ECU Manager module shall invoke EcuM_ErrorHook with the
        parameter ECUM_E_RAM_CHECK_FAILED. It is left integrator's discretion to allow EcuM_ErrorHook
        to relay the error to the DEM when he judges that the DEM will not write damaged NVRAM blocks.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_10</srcid><srcstatus/><internalId>947</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>258</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_02990</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module implementation shall provide a single EcuM_Callout_Stubs.c file which
        contains the stubs of the callouts realized in this implementation.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_18</srcid><srcstatus/><internalId>635</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>259</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_03000</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Caveat for the function EcuM_SelectBootTarget: This service may depend on the boot loader used.
        This service is only intended for use by SW-C's related to diagnostics (boot management)
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>260</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_03003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Caveat of EcuM_GetPendingWakeupEvents: This function only returns the wakeup events with status
        ECUM_WKSTATUS_PENDING.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2068</srcid><srcstatus/><internalId>763</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>261</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_03009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If Development Error Detection is enabled for this module, then all functions shall test input
        parameters and running conditions and use the following error codes in an adequate way:
        ECUM_E_UNINIT
        ECUM_E_SERVICE_DISABLED
        ECUM_E_PARAM_POINTER
        ECUM_E_INVALID_PAR
        Specific development errors are listed in the functions, where they apply.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.DetErrorCodes</srcid><srcstatus/><internalId>578</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.EB_Ref.SWS_EcuM_03009</srcid><srcstatus/><internalId>398</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>262</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_03010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When operating on a multicore ECU ECUM shall reserve a dedicated resource (RES_AUTOSAR_ECUM)
        for each core, which is allocated during GoSleep.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2952</srcid><srcstatus/><internalId>786</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM3010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>39</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>263</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_03011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_ShutdownTarget
        Comment | A SW-C can select a shutdown target using this interface
        IsService | true
        Variation --
        Possible Errors | 0 | E_OK | Operation successful
                          1 | E_NOT_OK | Operation failed

        Operation | GetLastShutdownTarget
        Comment | Returns the shutdown target of the previous shutdown
        Variation --
        Parameters |
        shutdownTarget
          Type | EcuM_ShutdownTargetType
          Direction | OUT
          Comment | The shutdown target of the previous shutdown
          Variation --
        shutdownMode
          Type | EcuM_ShutdownModeType
          Direction | OUT
          Comment | The sleep mode (if target is ECUM_SHUTDOWN_TARGET_SLEEP) or the reset mechanism (if
          target is ECUM_SHUTDOWN_TARGET_RESET) of the shutdown
          Variation --
        Possible Errors | E_OK| E_NOT_OK

        Operation | GetShutdownCause
        Comment | Returns the selected shutdown cause as set by the operation SelectShutdownCause.
        Variation
        Parameters | shutdownCause
          Type | EcuM_ShutdownCauseType
          Direction | OUT
          Comment | The selected cause of the next shutdown
          Variation --
        Possible Errors | E_OK| E_NOT_OK

        Operation | GetShutdownTarget
        Comment | Returns the currently selected shutdown target for the next shutdown as set by the operation SelectShutdownTarget.
        Variation --
        Parameters |
        shutdownTarget
          Type | EcuM_ShutdownTargetType
          Direction | OUT
          Comment | The shutdown target of the next shutdown
          Variation --
        shutdownMode
          Type | EcuM_ShutdownModeType
          Direction | OUT
          Comment | The sleep mode (if target is ECUM_SHUTDOWN_TARGET_SLEEP) or the reset mechanism (if
          target is ECUM_SHUTDOWN_TARGET_RESET) of the shutdown
          Variation --
        Possible Errors | E_OK | E_NOT_OK

        Operation | SelectShutdownCause
          Comment
          Variation
          Parameters | shutdownCause
          Type | EcuM_ShutdownCauseType
          Direction | IN
          Comment | The selected shutdown cause
          Variation --
        Possible Errors | E_OK | E_NOT_OK

        Operation | SelectShutdownTarget
        Comment | The SW-C selects the cause corresponding to the next shutdown target
        Variation --
        Parameters |
        shutdownTarget
          Type | EcuM_ShutdownTargetType
          Direction | IN
          Comment | The selected shutdown cause
          Variation --
        shutdownMode
          Type | EcuM_ShutdownModeType
          Direction | IN
          Comment | The identfier of a sleep mode (if shutdownTarget is ECUM_SHUTDOWN_TARGET_SLEEP) or a
          reset mechanism (if shutdownTarget is ECUM_SHUTDOWN_TARGET_RESET) as defined by configuration.
          Variation --
        Possible Errors | E_OK | E_NOT_OK
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.EB_Ref.SWS_EcuM_03011_1</srcid><srcstatus/><internalId>402</internalId></linkedfrom><linkedfrom><srcid>EcuM.EB_Ref.SWS_EcuM_03011_2</srcid><srcstatus/><internalId>403</internalId></linkedfrom><linkedfrom><srcid>EcuM.EB_Ref.SWS_EcuM_03011_3</srcid><srcstatus/><internalId>404</internalId></linkedfrom><linkedfrom><srcid>EcuM.EB_Ref.SWS_EcuM_03011_4</srcid><srcstatus/><internalId>405</internalId></linkedfrom><linkedfrom><srcid>EcuM.EB_Ref.SWS_EcuM_03011_5</srcid><srcstatus/><internalId>406</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AdditionalShutdownTargetClientServerOperations</srcid><srcstatus/><internalId>603</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>264</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_03012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_BootTarget
        Comment | A SW-C that wants to select a boot target must use the client-server interface EcuM_BootTarget.
        IsService | true
        Variation --
        Possible Errors | 0 | E_OK | Operation successful
                          1 | E_NOT_OK | Operation failed

        Operation | GetBootTarget
        Comment | Returns the current boot target
        Variation --
        Parameters | target
          Type | EcuM_BootTargetType
          Direction | OUT
          Comment | The currently selected boot target
          Variation --
        Possible Errors | E_OK

        Operation | SelectBootTarget
        Comment | Selects a boot target
        Variation --
        Parameters | target
          Type | EcuM_BootTargetType
          Direction | IN
          Comment | The selected boot target
          Variation --
        Possible Errors | E_OK | E_NOT_OK
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.EB_Ref.SWS_EcuM_03012_1</srcid><srcstatus/><internalId>407</internalId></linkedfrom><linkedfrom><srcid>EcuM.EB_Ref.SWS_EcuM_03012_2</srcid><srcstatus/><internalId>408</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>265</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_03017</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | AlarmClock_{UserName}
        Kind | ProvidedPort | Interface | EcuM_AlarmClock
        Description | Provides to SW-Cs an alarm clock. The EcuM_AlarmClock port uses port-defined
        argument values to identify the user that manages its alarm clock.
        Port Defined Argument Value(s) | Type | EcuM_UserType
        Value | {ecuc(EcuM/EcuMConfiguration/EcuMFlexConfiguration/EcuMFlexUserConfig/EcuMFlexUser.
        value)
        Variation | {ecuc(EcuM/EcuMFlexGeneral/EcuMAlarmClockPresent)} == trueUserName = {ecuc(EcuM/
        EcuMConfiguration/EcuMFlexConfiguration/EcuMAlarmClock.SHORT-NAME)
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>266</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_03018</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The definition of the internal behavior of the the ECU Manager module shall be
        as follows. This detailed description is only needed for the
        configuration of the local RTE.
      </description>
      <comment>
        This requirement is informational only.
        The EcuM Service interface shown in graphics/EcuM_Internal_Behaviour.PNG
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>267</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_03019</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        ECUM_E_EARLIER_ACTIVE and ECUM_E_PAST shall be of type Std_ReturnType and represent the
        following values
        ECUM_E_EARLIER_ACTIVE = 3
        ECUM_E_PAST = 4
      </description>
      <comment>
        DELAYED - No Alarm clock support
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>268</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_03020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        In the Poll sequence the EcuM shall call the callouts EcuM_SleepActivity and EcuM_CheckWakeup(
        in a blocking loop until a pending/validated wakeup event is reported.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_960</srcid><srcstatus/><internalId>731</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>269</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_03021</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        OffPreOS Sequence
        Shutdown Activity | Comment | Opt. De-init BSW Mode Manager | | no
        De-init BSW Scheduler | | no
        Check for pending wakeup events | Purpose is to detect wakeup events that occurred during
        shutdown | no
        Set RESET as shutdown target, if wakeup events are pending (default reset mode of
        EcuMDefaultShutdownTarget.EcuMDefaultResetModeRef will be used) | This action shall only be
        carried out when pending wakeup events were detected to allow an immediate startup | no
        ShutdownOS | Last operation in this OS task | no
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_12_WIN32X86</srcid><srcstatus/><internalId>982</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.OffPreOsReset</srcid><srcstatus/><internalId>574</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>270</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_03022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The SHUTDOWN phase handles the controlled shutdown of basic software modules and finally
        results in the selected shutdown target OFF or RESET.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_27</srcid><srcstatus/><internalId>954</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_12_prep_WIN32X86</srcid><srcstatus/><internalId>981</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>271</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_03023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If development error detection is enabled and EcuM_ReleaseRUN did not find a previous matching
        request for the provided user, then the function shall report ECUM_E_MISMATCHED_RUN_RELEASE to
        Det.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>272</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_03024</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If development error detection is enabled and there are multiple requests by the same user
        detected by EcuM_RequestRUN the function shall report ECUM_E_MULTIPLE_RUN_REQUESTS to Det.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>273</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_03025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If development error detection is enabled and there are multiple requests by the same user
        detected by EcuM_RequestPOST_RUN the function shall report ECUM_E_MULTIPLE_RUN_REQUESTS to Det.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>274</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_03026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If development error detection is enabled and EcuM_ReleasePOST_RUN did not find a previous
        matching request for the provided user, then the function shall report
        ECUM_E_MISMATCHED_RUN_RELEASE to Det.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>275</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04001</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If irregular events (a hardware reset or a power cycle) occur while the ECU is in Halt or Poll,
        the ECU Manager module shall restart the ECU in the STARTUP phase.
      </description>
      <comment>
        This requirement is informational only.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>276</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the Alarm Clock service is present  the EcuM_MainFunction shall update the Alarm Clock
        Timer
      </description>
      <comment>
        DELAYED - No Alarm clock support
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>277</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When an ECU Manager action causes the state of a wakeup source to change, the ECU Manager
        module shall issue a mode request to the BswM to change the wakeup source's mode to the new the
        wakeup source state.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_08</srcid><srcstatus/><internalId>945</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_NotifyComM</srcid><srcstatus/><internalId>949</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_24</srcid><srcstatus/><internalId>950</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>278</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager Module shall either provide a single wakeup validation timeout timer or one
        timer per wakeup source.
      </description>
      <comment>
        The EB implementation provides single timer for each wakeup source which
        can be configurable (configuration parameter EcuMValidationTimeout) .
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/EcuM_Cfg.c_223</srcid><srcstatus/><internalId>625</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>279</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall define a configurable set of reset modes  where each mode itself
        is a shutdown target. The set will minimally contain targets for
        Mcu_PerformReset
        WdgM_PerformReset
        Toggle I/O Pin via DIO / SPI
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/EcuM_Cfg.h.m4_340</srcid><srcstatus/><internalId>621</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>280</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04006</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall allow defining aliases for reset targets
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_COMP_01</srcid><srcstatus/><internalId>929</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>281</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04007</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall define a configurable set of reset causes . The set shall
        minimally contain targets for
        ECU state machine entered a shutdown state
        WdgM detected a failure
        DCM requests shutdownI
        and the time of the reset.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/EcuM_Cfg.h.m4_363</srcid><srcstatus/><internalId>622</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>282</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04008</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager Module shall offer facilities to BSW modules and SW-Cs to
        Record a shutdown cause
        Get a set of recent shutdown causes
      </description>
      <comment>
        This requirement is informational only. The corresponding API services
        provided by EcuM are
          1) EcuM_SelectShutdownTarget()
          2) EcuM_GetShutdownTarget()
          3) EcuM_GetLastShutdownTarget()
          4) EcuM_SelectShutdownCause()
          5) EcuM_GetShutdownCause()
          6) EcuM_GetMostRecentShutdown()
          7) EcuM_GetNextRecentShutdown()
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>283</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04009</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When leaving the Sleep state the ECU Manager Module will abort any active user alarm clock and
        the master alarm clock. This means that both clock induced and wakeups due to other events will
        result in clearing all alarms.
      </description>
      <comment>
        DELAYED - No Alarm clock support
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>284</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04010</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        User alarms and the master alarm shall be cancelled during the StartPreOS Sequence, in the
        WakeupRestart Sequence and the OffPreOS Sequence.
      </description>
      <comment>
        DELAYED - No Alarm clock support
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>285</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04011</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The EcuM_MainFunction shall run in all EcuM instances.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2182</srcid><srcstatus/><internalId>768</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.Impl.EcuM_GetCoreInstance</srcid><srcstatus/><internalId>440</internalId></linkedfrom><linkedfrom><srcid>EcuM.Impl.EcuM_GetMasterCoreInstance</srcid><srcstatus/><internalId>441</internalId></linkedfrom><linkedfrom><srcid>EcuM.Impl.DataStructure.EcuM_CoreContextType</srcid><srcstatus/><internalId>442</internalId></linkedfrom><linkedfrom><srcid>EcuM.Impl.MemoryMapping.InstanceData</srcid><srcstatus/><internalId>443</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>45</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>286</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04012</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Each instance of the ECU Manager module shall process the wakeup events of its core.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swdd</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.EB.Dsn.Interaction.EcuMMultiCoreWakeupEventHandling</srcid><srcstatus/><internalId>922</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_63</srcid><srcstatus/><internalId>965</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MC_TestApplicationContext</srcid><srcstatus/><internalId>998</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MC_WakeupEventStatus_Clear</srcid><srcstatus/><internalId>999</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MC_WakeupEventStatus_Set</srcid><srcstatus/><internalId>1000</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MC_WakeupEventStatus_Validate</srcid><srcstatus/><internalId>1001</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MC_WakeupEventStatus_Expire</srcid><srcstatus/><internalId>1002</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MC_WakeupEventProlonging</srcid><srcstatus/><internalId>1003</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.Impl.Bswmd.InternalExclusiveArea</srcid><srcstatus/><internalId>446</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>46</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>287</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04014</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall call BswM_Init for all core local BswMs on the master and all
        slave cores.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1212</srcid><srcstatus/><internalId>742</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>48</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>288</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04015</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Master core startup.
      </description>
      <comment>
        The sequence is shown in graphics/Master_Core_StartPreOS_Sequence.PNG
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1125</srcid><srcstatus/><internalId>734</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.Impl.CallingContext.MasterSlave</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_MultiCore_EcuStartup</srcid><srcstatus/><internalId>995</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreConfiguredMaster_Startup</srcid><srcstatus/><internalId>1016</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuM_LoopDetection</srcid><srcstatus/><internalId>605</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>49</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>289</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04016</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Master Core StartPostOS Sequence
      </description>
      <comment>
        The sequence is shown in graphics/Master_Core_StartPostOS_Sequence.PNG
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1192</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_04</srcid><srcstatus/><internalId>940</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInit_WIN32X86</srcid><srcstatus/><internalId>991</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInitDefaultValues_WIN32X86</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInitDefaultValuesMasterCoreId_WIN32X86</srcid><srcstatus/><internalId>993</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.StartPostOsSequence</srcid><srcstatus/><internalId>573</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>50</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>290</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04017</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Slave Core StartPreOS Sequence
      </description>
      <comment>
        The sequence is shown in graphics/Slave_Core_StartPreOS_Sequence.PNG
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1133</srcid><srcstatus/><internalId>735</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.Impl.CallingContext.MasterSlave</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInit_WIN32X86</srcid><srcstatus/><internalId>991</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInitDefaultValues_WIN32X86</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInitDefaultValuesMasterCoreId_WIN32X86</srcid><srcstatus/><internalId>993</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCore_EcuStartup</srcid><srcstatus/><internalId>995</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreConfiguredMaster_Startup</srcid><srcstatus/><internalId>1016</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.SlaveCorePbConfig</srcid><srcstatus/><internalId>576</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>51</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>291</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04018</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Slave Core StartPostOS Sequence
      </description>
      <comment>
        The sequence is shown in graphics/Slave_Core_StartPostOS_Sequence.PNG
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1192</srcid><srcstatus/><internalId>740</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.StartPostOsSequence</srcid><srcstatus/><internalId>573</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>52</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>292</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04020</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Master Core OffPostOS Sequence
      </description>
      <comment>
        The sequence is shown in graphics/Master_Core_OffPostOS_Sequence.PNG
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1231</srcid><srcstatus/><internalId>745</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_13_prep_WIN32X86</srcid><srcstatus/><internalId>983</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>54</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>293</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04022</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Slave Core OffPreOS Sequence
      </description>
      <comment>
        The sequence is shown in graphics/Slave_Core_OffPostOS_Sequence.PNG
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_13_WIN32X86</srcid><srcstatus/><internalId>984</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1268</srcid><srcstatus/><internalId>746</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>56</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>294</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04023</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Master Core GoSleep Sequence.
      </description>
      <comment>
        The sequence is shown in graphics/Master_Core_GoSleep_Sequence.png
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2916</srcid><srcstatus/><internalId>784</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_WakeupEventsOnPollingEntry</srcid><srcstatus/><internalId>1014</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_WakeupEventsOnHaltEntry</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>57</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>295</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04024</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Master Core Halt Sequence.
      </description>
      <comment>
        The sequence is shown in graphics/Master_Core_Halt_Sequence.PNG
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_793</srcid><srcstatus/><internalId>725</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.DisableEnableInterrupts</srcid><srcstatus/><internalId>561</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_WakeupSource_NotExpired</srcid><srcstatus/><internalId>960</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_WakeupEventsOnHaltEntry</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.Impl.EcuM_SlaveCoreSync</srcid><srcstatus/><internalId>428</internalId></linkedfrom><linkedfrom><srcid>EcuM.Impl.EcuM_SlaveSyncMask</srcid><srcstatus/><internalId>429</internalId></linkedfrom><linkedfrom><srcid>EcuM.Impl.Bswmd.ProvidedDatas.EcuM_MasterCoreReadyPort</srcid><srcstatus/><internalId>434</internalId></linkedfrom><linkedfrom><srcid>EcuM.Impl.Bswmd.RequiredDatas.EcuM_SlaveCoreSyncPort</srcid><srcstatus/><internalId>439</internalId></linkedfrom><linkedfrom><srcid>EcuM.Impl.CallingContext.MasterSlave</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>58</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>296</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04025</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Master Core Poll Sequence
      </description>
      <comment>
        The sequence is shown in graphics/Master_Core_Poll_Sequence.png
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_925</srcid><srcstatus/><internalId>730</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.WkUpNotificationMadeDeferred</srcid><srcstatus/><internalId>554</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.DisableEnableInterrupts</srcid><srcstatus/><internalId>561</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_WakeupEventsOnPollingEntry</srcid><srcstatus/><internalId>1014</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.Impl.Bswmd.ProvidedDatas.EcuM_MasterCoreReadyPort</srcid><srcstatus/><internalId>434</internalId></linkedfrom><linkedfrom><srcid>EcuM.Impl.CallingContext.MasterSlave</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>59</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>297</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04026</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Master Core WakeupRestart Sequence
      </description>
      <comment>
        The sequence is shown in graphics/Master_Core_WakeupRestart_Sequence.PNG
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_3041</srcid><srcstatus/><internalId>791</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.DisableEnableInterrupts</srcid><srcstatus/><internalId>561</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_07</srcid><srcstatus/><internalId>944</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInit_WIN32X86</srcid><srcstatus/><internalId>991</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInitDefaultValues_WIN32X86</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInitDefaultValuesMasterCoreId_WIN32X86</srcid><srcstatus/><internalId>993</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>60</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>298</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04027</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Slave Core GoSleep Sequence
      </description>
      <comment>
        The sequence is shown in graphics/Slave_Core_GoSleep_Sequence.png
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2962</srcid><srcstatus/><internalId>787</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_07</srcid><srcstatus/><internalId>944</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_WakeupEventsOnPollingEntry</srcid><srcstatus/><internalId>1014</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_WakeupEventsOnHaltEntry</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>61</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>299</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04028</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Slave Core Halt Sequence
      </description>
      <comment>
        The sequence is shown in graphics/Slave_Core_Halt_Sequence.PNG
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_798</srcid><srcstatus/><internalId>726</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_07</srcid><srcstatus/><internalId>944</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_190</srcid><srcstatus/><internalId>976</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_WakeupEventsOnHaltEntry</srcid><srcstatus/><internalId>1015</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.Impl.Bswmd.ProvidedDatas.SetSleepMode</srcid><srcstatus/><internalId>433</internalId></linkedfrom><linkedfrom><srcid>EcuM.Impl.Bswmd.ProvidedDatas.EcuM_SlaveCoreReadyPort</srcid><srcstatus/><internalId>435</internalId></linkedfrom><linkedfrom><srcid>EcuM.Impl.Bswmd.RequiredDatas.GetSleepMode</srcid><srcstatus/><internalId>437</internalId></linkedfrom><linkedfrom><srcid>EcuM.Impl.CallingContext.MasterSlave</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.DisableEnableInterrupts</srcid><srcstatus/><internalId>561</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.SlaveCoreHaltSeq</srcid><srcstatus/><internalId>575</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>62</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>300</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04029</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Slave Core Poll Sequence
      </description>
      <comment>
        The sequence is shown in graphics/Slave_Core_Poll_Sequence.png
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.3.0</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.WkUpNotificationMadeDeferred</srcid><srcstatus/><internalId>554</internalId></linkedfrom><linkedfrom><srcid>dev.EcuM.DisableEnableInterrupts</srcid><srcstatus/><internalId>561</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Slave_Poll_Sequence</srcid><srcstatus/><internalId>941</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_WakeupEventsOnPollingEntry</srcid><srcstatus/><internalId>1014</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.Impl.Bswmd.RequiredDatas.GetSleepMode</srcid><srcstatus/><internalId>437</internalId></linkedfrom><linkedfrom><srcid>EcuM.Impl.Bswmd.RequiredDatas.EcuM_MasterCoreSyncPort</srcid><srcstatus/><internalId>438</internalId></linkedfrom><linkedfrom><srcid>EcuM.Impl.CallingContext.MasterSlave</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_925</srcid><srcstatus/><internalId>730</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>63</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>301</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04030</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Slave Core WakeupRestart Sequence
      </description>
      <comment>
        The sequence is shown in graphics/Slave_Core_WakeupRestart_Sequence.PNG
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_3000</srcid><srcstatus/><internalId>790</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Slave_Poll_Sequence</srcid><srcstatus/><internalId>941</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.DisableEnableInterrupts</srcid><srcstatus/><internalId>561</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>64</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>302</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04032</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Type of error | Related error code | Error value
        Multiple requests by the same user were detected | ECUM_E_MULTIPLE_RUN_REQUESTS | Assigned by Implementation
        A function was called which was disabled by configuration | ECUM_E_SERVICE_DISABLED | Assigned by Implementation
        A service was called prior to initialization | ECUM_E_UNINIT | Assigned by Implementation
        An unknown wakeup source was passed as a parameter to an API | ECUM_E_UNKNOWN_WAKEUP_SOURCE | Assigned by Implementation
        The initialization failed | ECUM_E_INIT_FAILED | Assigned by Implementation
        A state, passed as an argument to a service, was out of range (specific parameter test) | ECUM_E_STATE_PAR_OUT_OF_RANGE | Assigned by Implementation
        A parameter was invalid (unspecific) | ECUM_E_INVALID_PAREcuM.ECUM_E_INVALID_PAR | Assigned by Implementation
        A invalid pointer was passed as an argument | ECUM_E_PARAM_POINTER | Assigned by Implementation
        A previous matching request for the provided user was not found | ECUM_E_MISMATCHED_RUN_RELEASE | Assinged by Implementation
      </description>
      <comment>
        The table shown in graphics/Table_7_Error_Classification.PNG
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_60</srcid><srcstatus/><internalId>962</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_64</srcid><srcstatus/><internalId>966</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_InvalidBootTarget</srcid><srcstatus/><internalId>967</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_62</srcid><srcstatus/><internalId>978</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_200</srcid><srcstatus/><internalId>979</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_12_WIN32X86</srcid><srcstatus/><internalId>982</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ASR_R2011_Uninit</srcid><srcstatus/><internalId>1023</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ASR_R2011_Det</srcid><srcstatus/><internalId>1027</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.DevelopmentErrors</srcid><srcstatus/><internalId>580</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>303</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04033</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        In the unrecoverable error situations defined in the first column of Table in SWS_EcuM_04032,
        the ECU Manager module shall call the EcuM_ErrorHook callout with the parameter value set to
        the corresponding related error code.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_10</srcid><srcstatus/><internalId>947</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.DevelopmentErrorsErrorHook</srcid><srcstatus/><internalId>581</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>304</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04038</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_ConfigType
        Kind | Structure
        Elements
        Type
        Comment | The content of this structure depends on the post-build configuration of EcuM.
        Description | A pointer to such a structure shall be provided to the ECU State Manager
        initialization routine for configuration.
        Available via | EcuM.h
      </description>
      <comment>
        Content of this structure is implementation specific. Verify the content
        of this structure by manual code review.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_var/xgen/EcuM.xgen_85</srcid><srcstatus/><internalId>920</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>305</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04040</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_WakeupSourceType
        Kind | Type
        Derived from | uint32
        Range | ECUM_WKSOURCE_POWER | 0x01 | Power cycle (bit 0)
        ECUM_WKSOURCE_RESET (default) | 0x02 | Hardware reset (bit 1). If the Mcu driver cannot
        distinguish between a power cycle and a reset reason, then this shall be the default wakeup
        source.
        ECUM_WKSOURCE_INTERNAL_RESET | 0x04 | Internal reset of µC (bit 2) The internal reset typically
        only resets the µC core but not peripherals or memory controllers. The exact behavior is
        hardware specific. This source may also indicate an unhandled exception.
        ECUM_WKSOURCE_INTERNAL_WDG | 0x08 | Reset by internal watchdog (bit 3)
        ECUM_WKSOURCE_EXTERNAL_WDG | 0x10 | Reset by external watchdog (bit 4), if detection supported
        by hardware
        Description | EcuM_WakeupSourceType defines a bitfield with 5 pre-defined positions . The
        bitfield provides one bit for each wakeup source. In WAKEUP, all bits cleared indicates that no
        wakeup source is known. In STARTUP, all bits cleared indicates that no reason for restart or
        reset is known. In this case, ECUM_WKSOURCE_RESET shall be assumed.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.EB_Ref.SWS_EcuM_04040.Range</srcid><srcstatus/><internalId>399</internalId></linkedfrom><linkedfrom><srcid>EcuM.EB_Ref.SWS_EcuM_04040.Bitfield</srcid><srcstatus/><internalId>400</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>306</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04041</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_WakeupStatusType
        Kind | Type
        Derived from | uint8
        Range | ECUM_WKSTATUS_NONE | 0 | No pending wakeup event was detected
        ECUM_WKSTATUS_PENDING | 1 | The wakeup event was detected but not yet validated
        ECUM_WKSTATUS_VALIDATED | 2 | The wakeup event is valid
        ECUM_WKSTATUS_EXPIRED | 3 | The wakeup event has not been validated and has expired therefore
        Description | The type describes the possible states of a wakeup source.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_BSW_Types.h_510</srcid><srcstatus/><internalId>692</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuM_WakeupStatusType</srcid><srcstatus/><internalId>582</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>307</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04044</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_ResetType
        Kind | Type
        Derived from | uint8
        Range | ECUM_RESET_MCU | 0 | Microcontroller reset via Mcu_PerformReset
        ECUM_RESET_WDG | 1 | Watchdog reset via WdgM_PerformReset
        ECUM_RESET_IO | 2 | Reset by toggeling an I/O line.
        Description | This type describes the reset mechanisms supported by the ECU State Manager. It
        can be extended by configuration.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_BSW_Types.h_524</srcid><srcstatus/><internalId>694</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.EB_Ref.SWS_EcuM_04044_1</srcid><srcstatus/><internalId>413</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuM_ResetType</srcid><srcstatus/><internalId>614</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>308</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04045</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_ShutdownCauseType
        Kind | Type
        Derived from | uint8
        Range | ECUM_CAUSE_UNKNOWN | 0 | No cause was set.
        ECUM_CAUSE_ECU_STATE | 1 | ECU state machine entered a state for shutdown
        ECUM_CAUSE_WDGM | 2 | Watchdog Manager detected a failure
        ECUM_CAUSE_DCM | 3 | Diagnostic Communication Manager requests a shutdown due to a service
        request
        Description | This type describes the cause for a shutdown by the ECU State Manager. It can be
        extended by configuration.
        Variation
        Available via | Rte_EcuM_Type.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_BSW_Types.h_566</srcid><srcstatus/><internalId>700</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>309</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04050</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_SelectShutdownCause
        Syntax
        Std_ReturnType EcuM_SelectShutdownCause (EcuM_ShutdownCauseType target)
        Service ID [hex] | 0x1b
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | target | The selected shutdown cause.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: The new shutdown cause was setE_NOT_OK: The new shutdown
        cause was not set
        Description | EcuM_SelectShutdownCause elects the cause for a shutdown.
        EcuM_SelectShutdownCause is part of the ECU Manager Module port interface.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1754</srcid><srcstatus/><internalId>758</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_13_prep_WIN32X86</srcid><srcstatus/><internalId>983</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_13_WIN32X86</srcid><srcstatus/><internalId>984</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>310</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04051</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_GetShutdownCause
        Syntax
        Std_ReturnType EcuM_GetShutdownCause (EcuM_ShutdownCauseType* shutdownCause)
        Service ID [hex] | 0x1c
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | shutdownCause | The selected cause of the next shutdown.
        Return value | Std_ReturnType | E_OK: The service has succeededE_NOT_OK: The service has failed,
        e.g. due to NULL pointer being passed
        Description | EcuM_GetShutdownCause returns the selected shutdown cause as set by
        EcuM_SelectShutdownCause. EcuM_GetShutdownCause is part of the ECU Manager Module port
        interface.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1829</srcid><srcstatus/><internalId>759</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_13_WIN32X86</srcid><srcstatus/><internalId>984</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>311</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04054</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_SetRelWakeupAlarm
        Syntax
        Std_ReturnType EcuM_SetRelWakeupAlarm (EcuM_UserType user, EcuM_TimeType time)
        Service ID [hex] | 0x22
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | user | The user that wants to set the wakeup alarm.
        time | Relative time from now in seconds.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: The service has succeededE_NOT_OK: The service
        failedECUM_E_EARLIER_ACTIVE: An earlier alarm is already set
        Description | EcuM_SetRelWakeupAlarm sets a user's wakeup alarm relative to the current point
        in time. EcuM_SetRelWakeupAlarm is part of the ECU Manager Module port interface.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>312</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04055</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the relative time from now is earlier than the current wakeup time, EcuM_SetRelWakeupAlarm
        shall update the wakeup time.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>313</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04056</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the relative time from now is later than the current wakeup time, EcuM_SetRelWakeupAlarm
        shall not update the wakeup time and shall return ECUM_E_EARLIER_ACTIVE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>314</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04057</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_SetAbsWakeupAlarm
        Syntax
        Std_ReturnType EcuM_SetAbsWakeupAlarm (EcuM_UserType user, EcuM_TimeType time)
        Service ID [hex] | 0x23
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | user | The user that wants to set the wakeup alarm.
        time | Absolute time in seconds. Note that, absolute alarms use knowledge of the current time.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: The service has succeededE_NOT_OK: The service
        failedECUM_E_EARLIER_ACTIVE: An earlier alarm is already setECUM_E_PAST: The given point in
        time has already passed
        Description | EcuM_SetAbsWakeupAlarm sets the user's wakeup alarm to an absolute point in time.
        EcuM_SetAbsWakeupAlarm is part of the ECU Manager Module port interface.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>315</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04058</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the time parameter is earlier than the current wakeup time, EcuM_SetAbsWakeupAlarm shall
        update the wakeup time.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>316</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04059</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the time parameter is later than the current wakeup time, EcuM_SetAbsWakeupAlarm shall not
        update the wakeup time and shall return ECUM_E_EARLIER_ACTIVE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>317</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04060</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the time parameter is earlier than now, EcuM_SetAbsWakeupAlarm shall not update the wakeup
        time and shall return ECUM_E_PAST.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>318</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04061</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_AbortWakeupAlarm
        Syntax
        Std_ReturnType EcuM_AbortWakeupAlarm (EcuM_UserType user)
        Service ID [hex] | 0x24
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | user | The user that wants to cancel the wakeup alarm.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: The service has succeededE_NOT_OK: The service
        failedECUM_E_NOT_ACTIVE: No owned alarm found
        Description | Ecum_AbortWakeupAlarm aborts the wakeup alarm previously set by this user.
        EcuM_AbortWakeupAlarm is part of the ECU Manager Module port interface.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>319</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04062</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_GetCurrentTime
        Syntax
        Std_ReturnType EcuM_GetCurrentTime (EcuM_TimeType* time)
        Service ID [hex] | 0x25
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | time | Absolute time in seconds since battery connect.
        Return value | Std_ReturnType | E_OK: The service has succeededE_NOT_OK: time points to NULL or
        the module is not initialized
        Description | EcuM_GetCurrentTime returns the current value of the EcuM clock (i.e. the time
        since battery connect). EcuM_GetCurrentTime is part of the ECU Manager Module port interface.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>320</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04063</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_GetWakeupTime
        Syntax
        Std_ReturnType EcuM_GetWakeupTime (EcuM_TimeType* time)
        Service ID [hex] | 0x26
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | time | Absolute time in seconds for next wakeup. 0xFFFFFFFF means no active
        alarm.
        Return value | Std_ReturnType | E_OK: The service has succeededE_NOT_OK: time points to NULL or
        the module is not initialized
        Description | EcuM_GetWakeupTime returns the current value of the master alarm clock (the
        minimum absolute time of all user alarm clocks). EcuM_GetWakeupTime is part of the ECU Manager
        Module port interface.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>321</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04064</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_SetClock
        Syntax
        Std_ReturnType EcuM_SetClock (EcuM_UserType user, EcuM_TimeType time)
        Service ID [hex] | 0x27
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | user | User that wants to set the clock
        time | Absolute time in seconds since battery connect.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: The service has succeededE_NOT_OK: The service failed
        Description | EcuM_SetClock sets the EcuM clock time to the provided value. This API is useful
        for testing the alarm services; Alarms that take days to expire can be tested. EcuM_SetClock is
        part of the ECU Manager Module port interface.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>322</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04065</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_AL_Reset
        Syntax
        void EcuM_AL_Reset (EcuM_ResetType reset)
        Service ID [hex] | 0x4C
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | reset | Type of reset to be performed.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | This callout shall take the code for resetting the ECU.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_397</srcid><srcstatus/><internalId>656</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_12_WIN32X86</srcid><srcstatus/><internalId>982</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>323</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04066</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        WakeupRestart Sequence
      </description>
      <comment>
        The sequence is shown in graphics/WakeupRestart_Sequence.PNG
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_07</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>324</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04069</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the Alarm Clock service is present  the EcuM Manager module shall maintain an EcuM clock
        whose time shall be the time in seconds since battery connect.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>325</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04070</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Each EcuM User shall have at most one user alarm clock.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>326</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04071</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        An EcuM User shall not be able to set the value of another user's alarm clock.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>327</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04072</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall set always the master alarm clock value to the value of the
        earliest user alarm clock value.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>328</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04073</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Only authorized EcuM Users can set the EcuM clock time
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>329</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04074</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the shutdown target is RESET, the ECU Manager module shall call the EcuM_AL_Reset callout.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_12_WIN32X86</srcid><srcstatus/><internalId>982</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>330</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04075</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the shutdown target is OFF, the ECU Manager module shall call the EcuM_AL_SwitchOff
        callout.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_AL_SwitchOff_WIN32X86</srcid><srcstatus/><internalId>985</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>331</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04076</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_GetExpiredWakeupEvents shall return wakeup events which have been set to validated in the
        internal expired events variable as bits set in a EcuM_WakeupSourceType bitmask.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_08</srcid><srcstatus/><internalId>945</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>332</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04078</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_ValidateWakeupEvent sets (OR-operation) all events passed as a bit set in the sources in
        parameter (EcuM_WakeupSourceType bitmask) in the internal validated wakeup events variable.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_24</srcid><srcstatus/><internalId>950</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>333</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04079</id>
      <status>rejected</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuMValidateWakeupEvent shall invoke BswM_EcuM_CurrentWakeup with its sources parameter and
        state value ECUM_WKSTATUS_VALIDATED.
      </description>
      <comment>
        This requirement is not applicable since BswM notification is done in EcuM_MainFunction().
        This requirement is replaced with the requirement EcuM.BswMWakeupIndication.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>334</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04080</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall derive the wakeup sources to be checked (and used as the
        wakeupSource parameter) from the EcuMWakeupSource  bitfield configured for the current sleep
        mode. The integration code used for this callout must determine which wakeup sources must be
        checked.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>335</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04081</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the validation timeout expires for a pending wakeup event, the EcuM_MainFunction sets (OR-
        operation) set the bit in the internal expired wakeup events variable.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_08</srcid><srcstatus/><internalId>945</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>336</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04082</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the validation timeout expires for a pending wakeup event, the EcuM_MainFunction shall
        invoke BswM_EcuM_Current_Wakeup with an EcuM_WakeupSourceType bitmask parameter with the bit
        corresponding to the wakeup event set and state value parameter set to ECUM_WKSTATUS_EXPIRED.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_08</srcid><srcstatus/><internalId>945</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>337</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04084</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall derive the wakeup sources to be disabled (and used as the
        wakeupSource parameter) from the internal pending events variable (NOT operation). The
        integration code used for this callout must determine which wakeup sources must be disabled.
      </description>
      <comment>
        This requirement is related to the API EcuM_DisableWakeupSources()
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>338</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04085</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_AL_SetProgrammableInterrupts
        Syntax
        void EcuM_AL_SetProgrammableInterrupts (void)
        Service ID [hex] | 0x4A
        Sync/Async | Asynchronous
        Reentrancy | Non Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | If the configuration parameter EcuMSetProgrammableInterrupts is set to true, this
        callout EcuM_AL_SetProgrammableInterrupts is executed and shall set the interrupts on ECUs with
        programmable interrupts.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.0.3</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_256</srcid><srcstatus/><internalId>649</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_20</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CalloutServiceIDAndHeader</srcid><srcstatus/><internalId>601</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>339</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04086</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The EcuM clock shall track time in the UP and SLEEP phases.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>340</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04087</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Hardware permitting, the EcuM clock time shall not be reset by an ECU reset.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>341</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04088</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        There shall be one and only one wakeup source assigned to the EcuM Clock
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>342</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04089</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If the underlying hardware mechanism is tick based, the ECUM shall "correct" the time
        accordingly
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>343</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04091</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The wakeup sources can be in the following states: State | Description NONE | No wakeup event
        was detected or has been cleared.
        PENDING | A wakeup event was detected but not yet validated.
        VALIDATED | A wakeup event was detected and succesfully validated.
        EXPIRED | A wakeup event was detected but validation failed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuM_WakeupStatusType</srcid><srcstatus/><internalId>582</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>344</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04092</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ShutdownTarget Sleep shall put the all cores into sleep.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ShutdownTargetSleep</srcid><srcstatus/><internalId>577</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>345</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04093</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall start the SchM and the OS on every core.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1139</srcid><srcstatus/><internalId>736</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1209</srcid><srcstatus/><internalId>741</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_16_WIN32X86</srcid><srcstatus/><internalId>990</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>346</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04094</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        In the case of a MultiCore ECU, the EcuM AUTOSAR service (Standardized AUTOSAR Interfaces) may
        be offered on one or more cores.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ServiceInterfacesOnAllCores</srcid><srcstatus/><internalId>602</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>347</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04095</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        In the case of a MultiCore ECU, the EcuM C-API Interfaces (Standardized Interfaces) which are
        used by other BSW modules shall be offered in every partition a EcuM runs in.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
        <release>AUTOSAR 4.2.1</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.Impl.CallingContext.MasterSlave</srcid><srcstatus/><internalId>445</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>348</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04096</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_StartCheckWakeup
        Syntax
        void EcuM_StartCheckWakeup (EcuM_WakeupSourceType WakeupSource)
        Service ID [hex] | 0x00
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | WakeupSource | For this wakeup source the corresponding CheckWakeupTimer
        shall be started.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | This API is called by the ECU Firmware to start the CheckWakeupTimer for the
        corresponding WakeupSource. If EcuMCheckWakeupTimeout &gt; 0 the CheckWakeupTimer for the
        WakeupSource is started. If EcuMCheckWakeupTimeout &lt;= 0 the API call is ignored by the EcuM.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CheckWakeup</srcid><srcstatus/><internalId>606</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>349</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04098</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If EcuM_SetWakeupEvent is called for the corresponding wakeup source the CheckWakeupTimer is
        cancelled.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.CheckWakeup</srcid><srcstatus/><internalId>606</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>350</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04101</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_ShutdownModeType
        Kind | Type
        Derived from | uint16
        Range | Configured Reset Modes : {ecuc(EcuM/EcuMConfiguration/EcuMFlexConfiguration/EcuMResetMode.SHORT-NAME)} |
                                         {256 + ecuc(EcuM/EcuMConfiguration/EcuMFlexConfiguration/EcuMResetMode.EcuMResetModeId)} |
                Configured Sleep Modes:   ecuc(EcuM/EcuMConfiguration/EcuMCommonConfiguration/EcuMSleepMode.SHORT-NAME)} |
                                         {ecuc(EcuM/EcuMConfiguration/EcuMCommonConfiguration/EcuMSleepMode.EcuMSleepModeId)} |
        Description | This data type represents the modes of the ECU Manager module.
        Variation -
        Available via | Rte_EcuM_Type.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1251</srcid><srcstatus/><internalId>907</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ASR_R2011_ShutdownTarget</srcid><srcstatus/><internalId>1026</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ASR_R2011_Det</srcid><srcstatus/><internalId>1027</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ASR_R2011_ShutdownPrep</srcid><srcstatus/><internalId>1028</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>351</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04102</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_TimeType
        Kind | Type
        Derived from | uint32
        Description | This data type represents the time of the ECU Manager module.
        Variation
        Available via | Rte_EcuM_Type.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClock</srcid><srcstatus/><internalId>551</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>352</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04105</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_AlarmClock
        Comment | A SW-C that wants to use an alarm clock must use the client-server interface
        EcuM_AlarmClock.
        IsService | true
        Variation | {ecuc(EcuM/EcuMFlexGeneral/EcuMAlarmClockPresent)} == True
        Possible Errors | 0 | E_OKEcuM_AlarmClock.E_OK | Operation successful
        1 | E_NOT_OKEcuM_AlarmClock.E_NOT_OK | Operation failed
        3 | ECUM_E_EARLIER_ACTIVEEcuM_AlarmClock.ECUM_E_EARLIER_ACTIVE | An earlier alarm is already set
        4 | ECUM_E_PASTEcuM_AlarmClock.ECUM_E_PAST | The desired point in time has already passed
        5 | ECUM_E_NOT_ACTIVEEcuM_AlarmClock.ECUM_E_NOT_ACTIVE | No active alarm found
        Operation | AbortWakeupAlarmEcuM_AlarmClock.AbortWakeupAlarm
        Comment | Aborts the wakeup alarm previously set by this user
        Variation
        Possible Errors | EcuM_AlarmClock.E_OKEcuM_AlarmClock.E_NOT_OKEcuM_AlarmClock.ECUM_E_NOT_ACTIVE
        Operation | SetAbsWakeupAlarmEcuM_AlarmClock.SetAbsWakeupAlarm
        Comment | Sets the user's wakeup alarm to an absolute point in time
        Variation
        Parameters | timeEcuM_AlarmClock.SetAbsWakeupAlarm.time
        Type | EcuM_TimeType
        Direction | IN
        Comment | Absolute time in seconds. Note that, absolute alarms use knowledge of the current
        time
        Variation
        Possible Errors | EcuM_AlarmClock.E_OKEcuM_AlarmClock.E_NOT_OKEcuM_AlarmClock.
        ECUM_E_EARLIER_ACTIVEEcuM_AlarmClock.ECUM_E_PAST
        Operation | SetClockEcuM_AlarmClock.SetClock
        Comment | Sets the EcuM clock time to the provided value
        Variation
        Parameters | timeEcuM_AlarmClock.SetClock.time
        Type | EcuM_TimeType
        Direction | IN
        Comment | Absolute time in seconds since battery connect
        Variation
        Possible Errors | EcuM_AlarmClock.E_OKEcuM_AlarmClock.E_NOT_OK
        Operation | SetRelWakeupAlarmEcuM_AlarmClock.SetRelWakeupAlarm
        Comment | Sets a user's wakeup alarm relative to the current point in time
        Variation
        Parameters | timeEcuM_AlarmClock.SetRelWakeupAlarm.time
        Type | EcuM_TimeType
        Direction | IN
        Comment | Relative time from now in seconds
        Variation
        Possible Errors | EcuM_AlarmClock.E_OKEcuM_AlarmClock.E_NOT_OKEcuM_AlarmClock.
        ECUM_E_EARLIER_ACTIVE
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClockPortInterface</srcid><srcstatus/><internalId>604</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>353</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04107</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_Mode
        Kind | ModeDeclarationGroup
        Category | ALPHABETIC_ORDER
        Initial mode | EcuM_Mode.STARTUP
        On transition value
        Modes | POST_RUN  EcuM_Mode.POST_RUN
                RUN       EcuM_Mode.RUN
                SHUTDOWN  EcuM_Mode.SHUTDOWN
                SLEEP     EcuM_Mode.SLEEP
                STARTUP   EcuM_Mode.STARTUP
        Description
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>354</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04108</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_CurrentMode
        Comment | Interface to read the current ECU mode
        IsService | true
        Variation
        ModeGroup | currentMode | EcuM_Mode
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>355</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04109</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_Time
        Comment
        IsService | true
        Variation
        Possible Errors | 0 | E_OK | Operation successful
                          1 | E_NOT_OK | Operation failed

        Operation | GetCurrentTime
        Comment | Returns the current value of the EcuM clock (i.e. the time in seconds since battery connect)
        Variation --
        Parameters | time
          Type | EcuM_TimeType
          Direction | OUT
          Comment | Absolute time in seconds since battery connect
          Variation
        Possible Errors | E_OK | E_NOT_OK

        Operation | GetWakeupTime
        Comment | Returns the current value of the master alarm clock (the minimum absolute time of all user alarm clocks)
        Variation --
        Parameters | time
          Type | EcuM_TimeType
          Direction | OUT
          Comment | Absolute time in seconds for next wakeup. 0xFFFFFFFF means no active alarm.
          Variation
        Possible Errors | E_OK | E_NOT_OK
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClockPortInterface</srcid><srcstatus/><internalId>604</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>356</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04110</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | BootTarget_{UserName}
        Kind | ProvidedPort | Interface | EcuM_BootTarget
        Description | Provides an interface to SW-Cs to select a new boot target and query the current
        boot target.
        Variation | UserName = {ecuc(EcuM/EcuMConfiguration/EcuMFlexConfiguration/EcuMFlexUserConfig/
        EcuMFlexUser.SHORT-NAME)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_internal.arxml.m4_75</srcid><srcstatus/><internalId>918</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ASR_R2011_BootTarget</srcid><srcstatus/><internalId>1025</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>357</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04111</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | ShutdownTarget_{UserName}
        Kind | ProvidedPort | Interface | EcuM_ShutdownTarget
        Description | Provides an interface to SW-Cs to select a new shutdown target and query the
                      current shutdown target.
        Variation | UserName = {ecuc(EcuM/EcuMConfiguration/EcuMFlexConfiguration/EcuMFlexUserConfig/EcuMFlexUser.SHORT-NAME)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_internal.arxml.m4_66</srcid><srcstatus/><internalId>917</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ASR_R2011_ShutdownTarget</srcid><srcstatus/><internalId>1026</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ASR_R2011_ShutdownPrep</srcid><srcstatus/><internalId>1028</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>358</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04112</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | currentMode
        Kind | ProvidedPort | Interface | EcuM_CurrentMode
        Description
        Variation
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>359</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04113</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | time
        Kind | ProvidedPort | Interface | EcuM_Time
        Description | Provides the EcuM's time service to SWCs
        Variation
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.AlarmClockPortInterface</srcid><srcstatus/><internalId>604</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>360</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04114</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_AL_DriverInitBswM_&lt;x&gt; is generated for every configured EcuMDriverInitListBswM. The name
        of the generated functions shall be EcuM_AL_DriverInitBswM_&lt;x&gt;, where &lt;x&gt; represents the short
        name of the EcuMDriverInitListBswM container.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMDriverInitListBswM</srcid><srcstatus/><internalId>587</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>361</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04115</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        ECU Mode Handling shall be applied when EcuMFlexGeneral.EcuMModeHandling is configured to true.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>362</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04116</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the BswM sets a state of the EcuM by EcuM_SetState, the EcuM shall indicate the
        corresponding mode to the RTE.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>363</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04117</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the last RUN request has been released, ECU State Manager module shall indicate this to
        BswM using the API BswM_EcuM_RequestedState(ECUM_STATE_APP_RUN, ECUM_RUNSTATUS_RELEASED)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>364</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04118</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the ECU State Manager is not in the state which is requested by a SWC, it shall inform
        BswM about requested states using the BswM_EcuM_RequestedState API.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>365</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04119</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the last POST_RUN request has been released, ECU State Manager module shall indicate this
        to BswM using the API BswM_EcuM_RequestedState(ECUM_STATE_APP_POST_RUN, ECUM_RUNSTATUS_RELEASED)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>366</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04120</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_RunStatusType
        Kind | Type
        Derived from | uint8
        Range | ECUM_RUNSTATUS_UNKNOWN | 0 | Unknown status. Init Value.
        ECUM_RUNSTATUS_REQUESTED | 1 | Status requested from EcuM
        ECUM_RUNSTATUS_RELEASED | 2 | Status released from EcuM.
        Description | Result of the Run Request Protocol sent to BswM
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>367</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04121</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU Manager module shall inform BswM about the state of the Run Request Protocol as listed
        in the EcuM_RunStatusType.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>368</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04122</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_SetState
        Syntax
        void EcuM_SetState (EcuM_StateType state)
        Service ID [hex] | 0x2b
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | state | State indicated by BswM.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | Function called by BswM to notify about State Switch.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>369</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04123</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The EcuM_SetState function shall set the EcuM State to the value of the State parameter. If the
        State parameter is not a valid value, the EcuM_SetState function shall not change the State and
        if Development Error Reporting is turned on, the EcuM_SetState function shall additionally send
        an ECUM_E_STATE_PAR_OUT_OF_RANGE error message to the DET module.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>370</internalId></specobject>

     <specobject>
      <id>EcuM.SWS_EcuM_04124</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_RequestRUN
        Syntax
        Std_ReturnType EcuM_RequestRUN (EcuM_UserType user)
        Service ID [hex] | 0x03
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | user | ID of the entity requesting the RUN state.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: The request was accepted by EcuM.E_NOT_OK: The request
        was not accepted by EcuM
        Description | Places a request for the RUN state. Requests can be placed by every user made
        known to the state manager at configuration time.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>371</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04125</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Requests of EcuM_RequestRUN cannot be nested, i.e. one user can only place one request but not
        more. Additional or duplicate user requests by the same user shall be reported to DET. Of
        course the DET will only be notified under development conditions.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>372</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04126</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        An implementation must track requests for each user known on the ECU. Run requests are specific
        to the user.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>373</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04127</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_ReleaseRUN
        Syntax
        Std_ReturnType EcuM_ReleaseRUN (EcuM_UserType user)
        Service ID [hex] | 0x04
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | user | ID of the entity releasing the RUN state.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: The release request was accepted by EcuM 
                                        E_NOT_OK: The release request was not accepted by EcuM
        Description | Releases a RUN request previously done with a call to EcuM_RequestRUN.
        The service is intended for implementing AUTOSAR ports.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>374</internalId></specobject>


    <specobject>
      <id>EcuM.SWS_EcuM_04128</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_RequestPOST_RUN
        Syntax
        Std_ReturnType EcuM_RequestPOST_RUN (EcuM_UserType user)
        Service ID [hex] | 0x0a
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | user | ID of the entity requesting the POST RUN state.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: The request was accepted by EcuME_NOT_OK: The request was
        not accepted by EcuM
        Description | Places a request for the POST RUN state. Requests can be placed by every user
        made known to the state manager at configuration time. Requests for RUN and POST RUN must be
        tracked independently (in other words: two independent variables). The service is intended for
        implementing AUTOSAR ports.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>375</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04129</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_ReleasePOST_RUN
        Syntax
        Std_ReturnType EcuM_ReleasePOST_RUN (EcuM_UserType user)
        Service ID [hex] | 0x0b
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | user | ID of the entity releasing the POST RUN state.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_OK: The release request was accepted by EcuME_NOT_OK: The
        release request was not accepted by EcuM
        Description | Releases a POST RUN request previously done with a call to EcuM_RequestPOST_RUN.
        The service is intended for implementing AUTOSAR ports.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>376</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04130</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The ECU State Manager module shall provide System Services for the following functionalities
        when the container EcuMModeHandling  is available:
        requesting RUN
        releasing RUN
        requesting POST_RUN
        releasing POST_RUN
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>377</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04131</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_StateRequest
        Comment | Interface to request a specific ECU state
        IsService | true
        Variation
        Possible Errors | 0 | E_OKEcuM_StateRequest.E_OK | Operation successful
        1 | E_NOT_OKEcuM_StateRequest.E_NOT_OK | Operation failed
        Operation | ReleasePOSTRUNEcuM_StateRequest.ReleasePOSTRUN
        Comment
        Variation
        Possible Errors | EcuM_StateRequest.E_OKEcuM_StateRequest.E_NOT_OK
        Operation | ReleaseRUNEcuM_StateRequest.ReleaseRUN
        Comment
        Variation
        Possible Errors | EcuM_StateRequest.E_OKEcuM_StateRequest.E_NOT_OK
        Operation | RequestPOSTRUNEcuM_StateRequest.RequestPOSTRUN
        Comment
        Variation
        Possible Errors | EcuM_StateRequest.E_OKEcuM_StateRequest.E_NOT_OK
        Operation | RequestRUNEcuM_StateRequest.RequestRUN
        Comment
        Variation
        Possible Errors | EcuM_StateRequest.E_OKEcuM_StateRequest.E_NOT_OK
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>378</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04132</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The mode port of the ECU State Manager module shall declare the following modes:
        STARTUP
        RUN
        POST_RUN
        SLEEP
        SHUTDOWN
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>379</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04133</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Mode changes shall be notified to SW-Cs through the RTE mode ports when the mode change occurs.
        This specification assumes that the port name is currentMode and that the direct API of RTE
        will be used. Under these conditions mode changes signaled by invoking Rte_StatusType
        Rte_Switch_currentMode_currentMode(Rte_ModeType_EcuM_Mode mode) where mode is the new mode to
        be notified. The value range is specified by the previous requirement. The return value shall
        be ignored. A SW-C which wants to be notified of mode changes should require the mode switch
        interface EcuM_CurrentMode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>380</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04135</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | StateRequest_{UserName}
        Kind | ProvidedPort | Interface | EcuM_StateRequest
        Description | Provides an interface to SW-Cs to request state changes of the ECU state. The
        port uses port-defined argument values to identify the user.
        Port Defined Argument Value(s) | Type | EcuM_UserType
        Value | {ecuc(EcuM/EcuMConfiguration/EcuMFlexConfiguration/EcuMFlexUserConfig/EcuMFlexUser.
        value)
        Variation | UserName = {ecuc(EcuM/EcuMConfiguration/EcuMFlexConfiguration/EcuMFlexUserConfig/
        EcuMFlexUser.SHORT-NAME)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>381</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04136</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_ShutdownTargetType
        Kind | Type
        Derived from | uint8
        Range | ECUM_SHUTDOWN_TARGET_SLEEP | 0x0
        ECUM_SHUTDOWN_TARGET_RESET | 0x1
        ECUM_SHUTDOWN_TARGET_OFF | 0x2
        Description -
        Variation -
        Available via | Rte_EcuM_Type.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1236</srcid><srcstatus/><internalId>906</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ASR_R2011_ShutdownTarget</srcid><srcstatus/><internalId>1026</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ASR_R2011_Det</srcid><srcstatus/><internalId>1027</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ASR_R2011_ShutdownPrep</srcid><srcstatus/><internalId>1028</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>382</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04137</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_LoopDetection
        Syntax
        void EcuM_LoopDetection (void)
        Service ID [hex] | 0x4B
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | If the configuration parameter EcuMResetLoopDetection is set to true, this
        callout EcuM_LoopDetection is called on every startup.
        Available via | EcuM_Externals.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuM_LoopDetection</srcid><srcstatus/><internalId>605</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>383</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04138</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_SetWakeupEvent shall ignore all events passed in the sources parameter that are not
        associated to the selected sleep mode.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2401</srcid><srcstatus/><internalId>772</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>384</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04139</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If an OS function call fails and no other fault reaction is defined, the EcuM shall not change
        the requested state. In such cases an error reporting via EcuM_ErrorHook shall be performed.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>385</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04140</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM_ValidateWakeupEvent shall invoke ComM_EcuM_PNCWakeUpIndication for each wakeup event and
        for every referenced PNC if at least one EcuMComMPNCRef parameter  in the EcuMWakeupSource
        configuration container for the corresponding wakeup source is configured.
      </description>
      <comment>
        ComM PNC notification is done in EcuM_MainFunction(). This requirement
        is replaced with the requirement EcuM.ComMPNCWakeupIndication.
      </comment>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.WkUpNotificationMadeDeferred</srcid><srcstatus/><internalId>554</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>386</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04142</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The configuration of the ECU Manager module shall specify the order of initialization calls
        inside the BSW initialization
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMDriverInitListBswM</srcid><srcstatus/><internalId>587</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>387</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04143</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        EcuM shall notify BswM about the current State by calling the interface BswM_EcuM_CurrentState(
        EcuM_StateType State). A new state shall be set by EcuM when RTE has given its feedback via the
        acknowledgement port.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>388</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04144</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        When the first RUN or POST_RUN request has been received, ECU State Manager module shall
        indicate this to BswM using BswM_EcuM_RequestedState(ECUM_STATE_APP_RUN,
        ECUM_RUNSTATUS_REQUESTED)
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>389</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04145</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        The EcuM EcuM_AL_DriverInitZero and EcuM_AL_DriverInitOne functions shall be called by the
        EcuM_Init function on each core. The implementation of these callout functions shall ensure
        that only those MCAL modules are initialized that run on the currently active core.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1088</srcid><srcstatus/><internalId>733</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1161</srcid><srcstatus/><internalId>738</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInit_WIN32X86</srcid><srcstatus/><internalId>991</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInitDefaultValues_WIN32X86</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInitDefaultValuesMasterCoreId_WIN32X86</srcid><srcstatus/><internalId>993</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>390</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_04146</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        If EcuMDriverInitItem.EcuMEcucCoreDefinitionRef is missing then the initialization call shall
        only be performed on the master core.
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMEcucCoreDefinitionRef</srcid><srcstatus/><internalId>589</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>391</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_91001</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_AL_DriverInitBswM
        Syntax
        void EcuM_AL_DriverInitBswM (void)
        Service ID [hex] | 0x28
        Sync/Async | Synchronous
        Reentrancy | Non Reentrant
        Parameters (in) | None
        Parameters (inout) | None
        Parameters (out) | None
        Return value | None
        Description | This callback shall provide BSW module initializations to be called by the BSW
        Mode Manager.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuMDriverInitListBswM</srcid><srcstatus/><internalId>587</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>392</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_91002</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Service Name | EcuM_GoDownHaltPoll
        Syntax
        Std_ReturnType EcuM_GoDownHaltPoll (EcuM_UserType UserID)
        Service ID [hex] | 0x2c
        Sync/Async | Synchronous
        Reentrancy | Reentrant
        Parameters (in) | UserID | Id of the user calling this API. Only configured users are allowed
        to call this function.
        Parameters (inout) | None
        Parameters (out) | None
        Return value | Std_ReturnType | E_NOT_OK: The request was not accepted.E_OK: If the
        ShutdownTargetType is SLEEP the call successfully returns, the ECU has left the sleep again. If
        the ShutdownTargetType is RESET or OFF this call will not return.
        Description | Instructs the ECU State Manager module to go into a sleep mode, Reset or OFF
        depending on the previously selected shutdown target.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.EcuM_GoDownHaltPoll</srcid><srcstatus/><internalId>597</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>393</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_91003</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Type of error | Related error code | Error value
        Postbuild configuration data is inconsistent | ECUM_E_CONFIGURATION_DATA_INCONSISTENT | Assigned by Implementation
        The RAM check during wakeup failed | ECUM_E_RAM_CHECK_FAILED | Assigned by Implementation
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.RuntimeErrors</srcid><srcstatus/><internalId>579</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>394</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_91004</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_UserType
        Kind | Type
        Derived from | uint8
        Description | Unique value for each user.
        Variation
        Available via | Rte_EcuM_Type.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>395</internalId></specobject>

    <specobject>
      <id>EcuM.SWS_EcuM_91005</id>
      <status>approved</status>
      <source>AUTOSAR_SWS_ECUStateManager.pdf, R20-11</source>
      <version>1</version>
      <description>
        Name | EcuM_StateType
        Kind | Type
        Derived from | uint8
        Range | ECUM_SUBSTATE_MASK | 0x0f
        ECUM_STATE_STARTUP | 0x10
        ECUM_STATE_RUN | 0x32
        ECUM_STATE_POST_RUN | 0x33
        ECUM_STATE_SHUTDOWN | 0x40
        ECUM_STATE_SLEEP | 0x50
        Description | ECU State Manager states.
        Available via | EcuM.h
      </description>
      <releases>
        <release>AUTOSAR R20-11</release>
      </releases>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.ModeHandlingRunRequestProtocol</srcid><srcstatus/><internalId>607</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>396</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>EcuM.EB_Ref.DriverRestartList</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>;
        Only those entries in the restart list which also have an entry
        in one of the init lists MUST appear in the same order as in the
        init lists.  Entries in the restart list which have no
        corresponding entry in the init lists are allowed to appear at
        any position in the restart list.  In this case a warning SHALL
        indicate if an entry in the restart does not have an
        corresponding entry in one of the init lists.
      </description>
      <rationale>
        The driver restart list may contain entries of drivers which
        cannot use the same routine for restarting a hardware component.
        This may be the case for controllers which allow setting of
        registers only once after a controller reset.  Still, in most
        cases the restart routine is the same as the init routine and a
        warning should indicate to the user that he entered an unusual
        or probably wrong configuration.
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02561</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>171</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>397</internalId></specobject>

    <specobject>
      <id>EcuM.EB_Ref.SWS_EcuM_03009</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>;
        If development error detection is enabled for this module, then all functions
        shall test input parameters and running conditions and use the following
        error codes in an adequate way:
          - ECUM_E_UNINIT
          - ECUM_E_SERVICE_DISABLED
          - ECUM_E_NULL_POINTER
          Specific development errors are listed in the functions, where they apply. (BSW00323)
      </description>
      <rationale>
        Current implementation only supports default  shutdown causes. So, the function
        EcuM_SelectShutdownCause() doesn't report Det error code 'ECUM_E_INVALID_PAR' for
        unspecified/not configured shut down cause.
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_63</srcid><srcstatus/><internalId>965</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_200</srcid><srcstatus/><internalId>979</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>398</internalId></specobject>

    <specobject>
      <id>EcuM.EB_Ref.SWS_EcuM_04040.Range</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>;
        Name  : EcuM_WakeupSourceType
        Type  : uint32
        Range :
              -  ECUM_WKSOURCE_POWER           -  Power cycle (bit 0)
              -  ECUM_WKSOURCE_RESET(default)  -  Hardware reset (bit 1).
                                                  If hardware cannot distinguish between a power
                                                  cycle and a reset reason, then this shall be the
                                                  default wakeup source.
              -  ECUM_WKSOURCE_INTERNAL_RESET  -  Internal reset of uC (bit 2). The internal reset
                                                  typically only resets the uC core but not
                                                  peripherals or memory controllers. The exact
                                                  behavior is hardware specific. This source may
                                                  also indicate an unhandled exception.
              - ECUM_WKSOURCE_INTERNAL_WDG      - Reset by internal watchdog (bit 3)
              - ECUM_WKSOURCE_EXTERNAL_WDG      - Reset by external watchdog (bit 4),
                                                  if detection supported by hardware
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_BSW_Types.h_501</srcid><srcstatus/><internalId>691</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>399</internalId></specobject>

    <specobject>
      <id>EcuM.EB_Ref.SWS_EcuM_04040.Bitfield</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>;
        Description:  EcuM_WakeupSourceType defines a bitfield with 5 pre-defined
        positions (see Range). The bitfield provides one bit for each wakeup source.
        In WAKEUP, all bits cleared indicates that no wakeup source is known.
        In STARTUP, all bits cleared indicates that no reason for restart or reset
        is known. In this case, ECUM_WKSOURCE_RESET shall be assumed.
      </description>
      <comment>;
      "ECUM_WKSOURCE_RESET" is not set as a default wakeup source during
      STARTUP / WAKEUP, if there is no reset/restart reason found.
    </comment>
      <needscoverage>
        <needscov><needsobj>dev</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>dev.EcuM.NoDefaultWakeupSourceReporting</srcid><srcstatus/><internalId>558</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04040</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>306</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>400</internalId></specobject>

    <specobject>
      <id>EcuM.EB_Ref.Version.Check</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>;
        The version check shall be implemented as specified in EB requirements
        [BSWM_CHK_400] and [BSWM_CHK_401].
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_90</srcid><srcstatus/><internalId>716</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4034</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>66</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>401</internalId></specobject>

    <specobject>
      <id>EcuM.EB_Ref.SWS_EcuM_03011_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>;
        Name | EcuM_ShutdownTarget
        Comment | A SW-C can select a shutdown target using this interface
        IsService | true
        Variation --
        Possible Errors | 0 | E_OK | Operation successful
                          1 | E_NOT_OK | Operation failed

        Operation | GetLastShutdownTarget
        Comment | Returns the shutdown target of the previous shutdown
        Variation --
        Parameters |
        shutdownTarget
          Type | EcuM_ShutdownTargetType
          Direction | OUT
          Comment | The shutdown target of the previous shutdown
          Variation --
        shutdownMode
          Type | EcuM_ShutdownModeType
          Direction | OUT
          Comment | The sleep mode (if target is ECUM_SHUTDOWN_TARGET_SLEEP) or the reset mechanism (if
          target is ECUM_SHUTDOWN_TARGET_RESET) of the shutdown
          Variation --
        Possible Errors | E_OK| E_NOT_OK
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_912</srcid><srcstatus/><internalId>900</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1333</srcid><srcstatus/><internalId>911</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ASR_R2011_ShutdownTarget</srcid><srcstatus/><internalId>1026</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>402</internalId></specobject>

    <specobject>
      <id>EcuM.EB_Ref.SWS_EcuM_03011_2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>;
        Name | EcuM_ShutdownTarget
        Comment | A SW-C can select a shutdown target using this interface
        IsService | true
        Variation --
        Possible Errors | 0 | E_OK | Operation successful
                          1 | E_NOT_OK | Operation failed

        Operation | GetShutdownCause
        Comment | Returns the selected shutdown cause as set by the operation SelectShutdownCause.
        Variation
        Parameters | shutdownCause
          Type | EcuM_ShutdownCauseType
          Direction | OUT
          Comment | The selected cause of the next shutdown
          Variation --
        Possible Errors | E_OK| E_NOT_OK
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_948</srcid><srcstatus/><internalId>902</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1371</srcid><srcstatus/><internalId>913</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ASR_R2011_ShutdownTarget</srcid><srcstatus/><internalId>1026</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>403</internalId></specobject>

    <specobject>
      <id>EcuM.EB_Ref.SWS_EcuM_03011_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>;
        Name | EcuM_ShutdownTarget
        Comment | A SW-C can select a shutdown target using this interface
        IsService | true
        Variation --
        Possible Errors | 0 | E_OK | Operation successful
                          1 | E_NOT_OK | Operation failed

        Operation | GetShutdownTarget
        Comment | Returns the currently selected shutdown target for the next shutdown as set by the operation SelectShutdownTarget.
        Variation --
        Parameters |
        shutdownTarget
          Type | EcuM_ShutdownTargetType
          Direction | OUT
          Comment | The shutdown target of the next shutdown
          Variation --
        shutdownMode
          Type | EcuM_ShutdownModeType
          Direction | OUT
          Comment | The sleep mode (if target is ECUM_SHUTDOWN_TARGET_SLEEP) or the reset mechanism (if
          target is ECUM_SHUTDOWN_TARGET_RESET) of the shutdown
          Variation --
        Possible Errors | E_OK | E_NOT_OK
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_892</srcid><srcstatus/><internalId>899</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1312</srcid><srcstatus/><internalId>910</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ASR_R2011_ShutdownTarget</srcid><srcstatus/><internalId>1026</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>404</internalId></specobject>

    <specobject>
      <id>EcuM.EB_Ref.SWS_EcuM_03011_4</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>;
        Name | EcuM_ShutdownTarget
        Comment | A SW-C can select a shutdown target using this interface
        IsService | true
        Variation --
        Possible Errors | 0 | E_OK | Operation successful
                          1 | E_NOT_OK | Operation failed

        Operation | SelectShutdownCause
          Comment
          Variation
          Parameters | shutdownCause
          Type | EcuM_ShutdownCauseType
          Direction | IN
          Comment | The selected shutdown cause
          Variation --
        Possible Errors | E_OK | E_NOT_OK
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_933</srcid><srcstatus/><internalId>901</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1355</srcid><srcstatus/><internalId>912</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ASR_R2011_ShutdownTarget</srcid><srcstatus/><internalId>1026</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>405</internalId></specobject>

    <specobject>
      <id>EcuM.EB_Ref.SWS_EcuM_03011_5</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>;
        Name | EcuM_ShutdownTarget
        Comment | A SW-C can select a shutdown target using this interface
        IsService | true
        Variation --
        Possible Errors | 0 | E_OK | Operation successful
                          1 | E_NOT_OK | Operation failed

        Operation | SelectShutdownTarget
        Comment | The SW-C selects the cause corresponding to the next shutdown target
        Variation --
        Parameters |
        shutdownTarget
          Type | EcuM_ShutdownTargetType
          Direction | IN
          Comment | The selected shutdown cause
          Variation --
        shutdownMode
          Type | EcuM_ShutdownModeType
          Direction | IN
          Comment | The identfier of a sleep mode (if shutdownTarget is ECUM_SHUTDOWN_TARGET_SLEEP) or a
          reset mechanism (if shutdownTarget is ECUM_SHUTDOWN_TARGET_RESET) as defined by configuration.
          Variation --
        Possible Errors | E_OK | E_NOT_OK
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_872</srcid><srcstatus/><internalId>898</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1291</srcid><srcstatus/><internalId>909</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ASR_R2011_ShutdownTarget</srcid><srcstatus/><internalId>1026</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>406</internalId></specobject>

    <specobject>
      <id>EcuM.EB_Ref.SWS_EcuM_03012_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>;
        Name | EcuM_BootTarget
        Comment | A SW-C that wants to select a boot target must use the client-server interface EcuM_BootTarget.
        IsService | true
        Variation --
        Possible Errors | 0 | E_OK | Operation successful
                          1 | E_NOT_OK | Operation failed

        Operation | GetBootTarget
        Comment | Returns the current boot target
        Variation --
        Parameters | target
          Type | EcuM_BootTargetType
          Direction | OUT
          Comment | The currently selected boot target
          Variation --
        Possible Errors | E_OK
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1040</srcid><srcstatus/><internalId>904</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1405</srcid><srcstatus/><internalId>915</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ASR_R2011_BootTarget</srcid><srcstatus/><internalId>1025</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>407</internalId></specobject>

    <specobject>
      <id>EcuM.EB_Ref.SWS_EcuM_03012_2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>;
        Name | EcuM_BootTarget
        Comment | A SW-C that wants to select a boot target must use the client-server interface EcuM_BootTarget.
        IsService | true
        Variation --
        Possible Errors | 0 | E_OK | Operation successful
                          1 | E_NOT_OK | Operation failed

        Operation | SelectBootTarget
        Comment | Selects a boot target
        Variation --
        Parameters | target
          Type | EcuM_BootTargetType
          Direction | IN
          Comment | The selected boot target
          Variation --
        Possible Errors | E_OK | E_NOT_OK
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1054</srcid><srcstatus/><internalId>905</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1420</srcid><srcstatus/><internalId>916</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ASR_R2011_BootTarget</srcid><srcstatus/><internalId>1025</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>265</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>408</internalId></specobject>

    <specobject>
      <id>EcuM.EB_Ref.ECUC_EcuM_00128</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>;
        Name | EcuMResetReasonRef
        Parent Container | EcuMWakeupSource
        Description | This parameter describes the mapping of reset reasons detected by the MCU driver
        into wakeup sources.
        Multiplicity | 0..1
        Type | Symbolic name reference to [ McuResetReasonConf
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1795</srcid><srcstatus/><internalId>867</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.ECUM128_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>409</internalId></specobject>

    <specobject>
      <id>EcuM.EB_Ref.ECUC_EcuM_00101</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>;
        Name | EcuMComMChannelRef
        Parent Container | EcuMWakeupSource
        Description | This parameter could reference multiple Networks (channels) defined in the
        Communication Manager. No reference indicates that the wakeup source is not a communication
        channel.
        Multiplicity | 0..1
        Type | Symbolic name reference to [ ComMChannel
        Post-Build Variant Multiplicity | false
        Post-Build Variant Value | false
        Multiplicity Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Value Configuration Class | Pre-compile time | X | All Variants
        Link time
        Post-build time
        Scope / Dependency | scope: local
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_06</srcid><srcstatus/><internalId>943</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_24</srcid><srcstatus/><internalId>950</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1738</srcid><srcstatus/><internalId>865</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>410</internalId></specobject>

    <specobject>
      <id>EcuM.EB_Ref.SWS_EcuM_02336_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>;
        If Autosar R20-11 service interface is enabled and the call of GetLastShutdownTarget() passes ECUM_SHUTDOWN_TARGET_SLEEP in the parameter shutdownTarget,
        in the parameter shutdownMode it returns which of the configured sleep modes was actually
        chosen. If the call of GetLastShutdownTarget() passes ECUM_SHUTDOWN_TARGET_RESET in the parameter
        shutdownTarget, in the parameter sleepMode it returns which of the configured reset modes was
        actually chosen.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1697</srcid><srcstatus/><internalId>754</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1702</srcid><srcstatus/><internalId>755</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02336</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>411</internalId></specobject>

    <specobject>
      <id>EcuM.EB_Ref.SWS_EcuM_02336_2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>;
        If Autosar R20-11 service interface is disabled and the call of GetLastShutdownTarget() passes ECU_STATE_SLEEP in the parameter shutdownTarget,
        in the parameter shutdownMode it returns which of the configured sleep modes was actually
        chosen. If the call of GetLastShutdownTarget() passes ECU_STATE_RESET in the parameter
        shutdownTarget, in the parameter sleepMode it returns which of the configured reset modes was
        actually chosen.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1710</srcid><srcstatus/><internalId>756</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1715</srcid><srcstatus/><internalId>757</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02336</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>412</internalId></specobject>

    <specobject>
      <id>EcuM.EB_Ref.SWS_EcuM_04044_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>;
        If Autosar R20-11 service interface is enabled the EcuM_ResetType data type shall be represented by EcuM_ShutdownModeType

        Name | EcuM_ResetType
        Kind | Type
        Derived from | EcuM_ShutdownModeType
        Range | ECUM_RESET_MCU | 256 | Microcontroller reset via Mcu_PerformReset
        ECUM_RESET_WDG | 257 | Watchdog reset via WdgM_PerformReset
        ECUM_RESET_IO | 258 | Reset by toggeling an I/O line.
        Description | This type describes the reset mechanisms supported by the ECU State Manager. It
        can be extended by configuration.
        Available via | EcuM.h
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_BSW_Types.h_521</srcid><srcstatus/><internalId>693</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>413</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>EcuM.ShutdownTarget</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        During SHUTDOWN a change of the shutdown target from and to the
        value SLEEP shall be prohibited.
      </description>
      <rationale>
        The shutdown sequences GO OFF (shutdown targets OFF or RESET) and
        GO SLEEP (shutdown target SLEEP) differ fundamentally and must not be
        intermixed. On the other hand it is still allowed to select either OFF or
        RESET during the GO OFF shutdown.
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_27</srcid><srcstatus/><internalId>954</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>414</internalId></specobject>

    <specobject>
      <id>EcuM.Sleep</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Ensure that there are no pending wakeups before ECU is set to halt.
        This shall be done by disabling ISR and checking the pending events.
      </description>
      <rationale>
        The MCU may enter halt state even if wakeup events are pending in
        <function>EcuM_SfOnEntrySleep()</function>. MCU will ignore the pending
        event that had happened in ISR just before setting up the
        MCU mode in to halt.
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_830</srcid><srcstatus/><internalId>727</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>415</internalId></specobject>

    <specobject>
      <id>EcuM.ShutdownHook</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The EcuM shall offer a minimalistic implementation of the Os
        callback function ShutdownHook().  The availability of this
        function definition shall be controlled by the EB specific
        parameter EcuMProvideShutdownHook.  The function definition
        shall consist of the call of EcuM_Shutdown() only.
      </description>
      <rationale>
        If the Os is integrated with the EcuM in a regular fashion, then
        the implementation of the ShutdownHook() is always the same.
        This feature provides a usability improvement by avoiding the
        integration task to provide an own implementation.
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_COMP_01</srcid><srcstatus/><internalId>929</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_COMP_02</srcid><srcstatus/><internalId>930</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>416</internalId></specobject>

    <specobject>
      <id>EcuM.StoredShutdownOperations</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The EcuM shall offer a precompile time integer configuration parameter
        which controls the number of shutdown operations which are
        stored internally.
      </description>
      <rationale>
        EcuM has to store and retrieve a predefined number of previous
        shutdown information using functions
        <function> EcuM_GetMostRecentShutdown()</function> and
        <function> EcuM_GetNextRecentShutdown()</function>. The maximum shutdown
        information to be stored shall be a configurable precompile parameter.
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_13_WIN32X86</srcid><srcstatus/><internalId>984</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_SdInfoBuffer_WIN32X86</srcid><srcstatus/><internalId>986</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>417</internalId></specobject>

    <specobject>
      <id>EcuM.ComMInterface</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Wakeup shall not be indicated to ComM if wakeup sources are not configured
        to any ComM channels.
      </description>
      <rationale>
        Indicating the wakeup to ComM channels required only if there
        is atleast one wakeup source configured to ComM channel. If EcuM doesnot
        need ComM module, then the code related to
        <function>ComM_EcuM_WakeUpIndication()</function> should be optimized.
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_ComTest_NoComM</srcid><srcstatus/><internalId>933</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>418</internalId></specobject>

    <specobject>
      <id>EcuM.DriverInit_MultiInstance</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        EcuM shall differentiate modules which has multiple instance of
        init service from different vendors in initialization and restart lists.
      </description>
      <rationale>
        The initialization service are different for those with single
        instance and multiple instance per Ecu configuration. The initialization
        service of modules which has only one configuration per Ecu shall be
        in the following format:<function> ModuleId_ModuleService()</function>
        For modules with upper multiplicity greater than one, the service
        shall be: <function>ModuleId_VendorId_VendorAPIinfix()</function>
      </rationale>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_20</srcid><srcstatus/><internalId>956</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>419</internalId></specobject>

    <specobject>
      <id>EcuM.ComMWakeupIndication</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        EcuM shall indicate ComM for the validated wakeup event(if ComM
        channel is associated with the wakeup source) in EcuM_MainFunction
        only if ComM has been initialized.
      </description>
      <rationale>
        The wakeup status indication in <function>EcuM_ValidateWakeupEvent()
        </function> may raise Det error(if development error detection is enabled)
        and will cause the wakeup event to be simply ignored by ComM, if
        ComM is not yet initialized and so ComM will not perform the desired
        transition to FULL_COMMUNICATION
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_3331</srcid><srcstatus/><internalId>794</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_NotifyComM</srcid><srcstatus/><internalId>949</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>420</internalId></specobject>

    <specobject>
      <id>EcuM.ComMPNCWakeupIndication</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        EcuM shall indicate the corresponding ComM PNC for the validated
        wakeup event(if the ComM PNC is associated with the wakeup source)
        in EcuM_MainFunction only if ComM has been initialized.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_3404</srcid><srcstatus/><internalId>797</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_ComTest_ComMPncOnly</srcid><srcstatus/><internalId>932</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_NotifyComMPnc</srcid><srcstatus/><internalId>955</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>421</internalId></specobject>

    <specobject>
      <id>EcuM.BswMWakeupIndication</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        EcuM shall indicate the wakeup source status changes to BswM in
        in EcuM_MainFunction
      </description>
      <rationale>
        The BswM indication <function>BswM_EcuM_CurrentWakeup()</function>
        in <function>EcuM_ValidateWakeupEvent()</function> may raise
        Det error(if development error detection is enabled) when
        called before initializing BswM.
      </rationale>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2229</srcid><srcstatus/><internalId>770</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_NotifyComM</srcid><srcstatus/><internalId>949</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>422</internalId></specobject>

    <specobject>
      <id>EcuM.BswMStateIndication</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        EcuM shall indicate its changes to BswM after each state change.
      </description>
      <comment> State changes which are performed in the StartPreOs sequence
       will not be reported to BswM since they are set before the BswM is initialized.
       Also ECUM_STATE_OFF will not be reported to BswM after the OffPreOs sequence is carried out,
       since it is set after the BswM is de-initialized.</comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1217</srcid><srcstatus/><internalId>743</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2225</srcid><srcstatus/><internalId>769</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2912</srcid><srcstatus/><internalId>783</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2994</srcid><srcstatus/><internalId>789</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_3051</srcid><srcstatus/><internalId>792</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_NotifyBswM</srcid><srcstatus/><internalId>1012</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>423</internalId></specobject>

    <specobject>
      <id>EcuM.EB.BSWMDGeneration_1</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The EcuM module's generator shall generate a basic software
        module description (BSWMD) based on the EcuM module's
        configuration containing information on the exclusive areas
        required by the EcuM module's implementation.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_SCHM</srcid><srcstatus/><internalId>936</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>424</internalId></specobject>

    <specobject>
      <id>EcuM.EB.BSWMDGeneration_2</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The EcuM module's generator shall generate a basic software
        module description (BSWMD) based on the EcuM module's
        configuration containing information on the scheduled
        MainFunctions together with the scheduling period.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_SCHM</srcid><srcstatus/><internalId>936</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>425</internalId></specobject>

    <specobject>
      <id>EcuM.EB.BSWMDGeneration_3</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The EcuM module's BSWMD shall be generated using a generator
        mode named "generate_swcd".
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_SCHM</srcid><srcstatus/><internalId>936</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>426</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.EcuM_MasterCoreSync</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Function name: EcuM_MasterCoreSync
        Syntax: static void EcuM_MasterCoreSync(void)
        Sync/Async: Synchronous
        Reentrancy: NonReentrant
        Parameters (in): None
        Parameters (inout):None
        Parameters (out):None
        Return value:None
        Description: Blocks an EcuM slave core until the master core indicates
        that it is ready to continue.
        Notes:
        - This function may only be called on the slave core.
        Rationale: otherwise this function would block forever.
        - This function shall not use any Os resources to implement the blocking mechanism.
        Rationale: scheduling may be halted when this function is called.
      </description>
      <verifycrit>
        Verify requirement by dynamic test execution. Call EcuM_GoHalt() or EcuM_GoPoll()
        on a slave core in a context of transition to the Sleep state. Verify that no further
        actions are performed and the slave core is blocked until the master core signals
        it is ready.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_07</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/EcuM_Cfg.c_749</srcid><srcstatus/><internalId>628</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>427</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.EcuM_SlaveCoreSync</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Function name: EcuM_SlaveCoreSync
        Syntax: static void EcuM_SlaveCoreSync(void)
        Sync/Async: Synchronous
        Reentrancy: NonReentrant
        Parameters (in): None
        Parameters (inout): None
        Parameters (out): None
        Return value: None
        Description: Blocks an EcuM master core until all slave cores indicate
        that they are ready to continue.
        Notes:
        - This function may only be called on the master core.
        Rationale: otherwise this function would block forever.
        - This function shall not use any Os resources to implement the blocking mechanism.
        Rationale: scheduling may be halted when this function is called.
      </description>
      <verifycrit>
        Verify requirement by dynamic test execution. Call EcuM_GoHalt() on a master core
        in a context of transition to the Sleep state or call EcuM_GoDown() on a master core
        in a context of transition to the Shutdown state. Verify that no further
        actions are performed and the master core is blocked until all slave cores signal
        that they are ready.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_07</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_3498</srcid><srcstatus/><internalId>800</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
          <provcov>
              <linksto>EcuM.SWS_EcuM_04024</linksto>
              <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>428</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.EcuM_SlaveSyncMask</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name        : ECUM_SLAVE_SYNC_MASK
        Type        : Macro definition
        Description : Defines a bit mask for the slave core IDs.
                      It is generated based on the number of slave cores configured.
                      It is used in the EcuM_SlaveCoreSync function to determine when
                      all slave cores indicate that they are ready.
      </description>
      <verifycrit>
        Verify the macro is generated correctly based on the configured number of cores.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_07</srcid><srcstatus/><internalId>944</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
          <provcov>
              <linksto>EcuM.SWS_EcuM_04024</linksto>
              <dstversion>1</dstversion>
          <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>429</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.EcuM_CoreIdMaster</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name        : ECUM_CORE_ID_MASTER
        Type        : Macro definition
        Description : Defines the Os core onto which the EcuM master core shall run.
                      It is generated based on the configured value of the EcuMMasterCoreId
                      parameter.
      </description>
      <verifycrit>
        Verify the macro is generated correctly based on the configured core Id.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreConfiguredMaster_Startup</srcid><srcstatus/><internalId>1016</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>430</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.EcuM_CoreIdInitial</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name        : ECUM_CORE_ID_INITIAL
        Type        : Macro definition
        Description : Defines the initial Os core from which the Os starts and will be
                      responsible for starting all other cores.
                      It is based on the value of the Os macro OS_CORE_ID_MASTER.
      </description>
      <verifycrit>
        Verify the macro is correctly mapped to core ID 0.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreConfiguredMaster_Startup</srcid><srcstatus/><internalId>1016</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>431</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Bswmd.ProvidedDatas</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The Basic software module description file shall be enhanced in order for the EcuM to
        be able to write data to variables to determine if the cores are ready, or to pass
        information about the current sleep mode.

        ProvidedDatas
        {
            VariableDataPrototype SetSleepMode (1)
            VariableDataPrototype EcuM_MasterCoreReadyPort (1)
            VariableDataPrototype EcuM_SlaveCoreReadyPort (1)
        }
      </description>
      <verifycrit>
        Verify the data ports are provided in the EcuM's Basic software module description arxml file.
        Also verify if the corresponding data send points are provided.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.Impl.Bswmd.ProvidedDatas.SetSleepMode</srcid><srcstatus/><internalId>433</internalId></linkedfrom><linkedfrom><srcid>EcuM.Impl.Bswmd.ProvidedDatas.EcuM_MasterCoreReadyPort</srcid><srcstatus/><internalId>434</internalId></linkedfrom><linkedfrom><srcid>EcuM.Impl.Bswmd.ProvidedDatas.EcuM_SlaveCoreReadyPort</srcid><srcstatus/><internalId>435</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>432</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Bswmd.ProvidedDatas.SetSleepMode</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        One port shall be provided for the master core to pass information about the
        current sleep mode.

        VariableDataPrototype SetSleepMode
        - Type: /AUTOSAR_Platform/ImplementationDataTypes/uint8
        - Purpose: The master core shall write to the SetSleepMode port to inform the slave
        cores of the currently selected sleep mode.
        The value of EcuM_SleepMode passed to Mcu_SetMode() on the slave core should be the same
        as the EcuM_SleepMode value which is set on the master core.
      </description>
      <verifycrit>
        Verify requirement by dynamic test execution. Trigger a call to EcuM_SelectShutdownTarget()
        with a certain sleep mode provided as argument.
        The EcuM_SetSleepMode port needs to be connected to the EcuM_GetSleepMode port in the Rte configuration
        container: RteBswRequiredSenderReceiverConnection.
        The sent value is verified using the EcuM_GetSleepMode port.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_Bswmd.arxml.m4_295</srcid><srcstatus/><internalId>889</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_Bswmd.arxml.m4_301</srcid><srcstatus/><internalId>890</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_ImpTest_SchMSend_Interface</srcid><srcstatus/><internalId>1040</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Bswmd.ProvidedDatas</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>433</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Bswmd.ProvidedDatas.EcuM_MasterCoreReadyPort</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        One port shall be provided for the master core to pass information about its readiness state.

         VariableDataPrototype EcuM_MasterCoreReadyPort
         - Type: /AUTOSAR_Platform/ImplementationDataTypes/boolean
         - Purpose: The master core shall write to this variable data prototype to signal the
           slave cores that it is ready.
         - Expected Value: TRUE when the master core is ready.  FALSE when the master
           core is not ready.
      </description>
      <verifycrit>
        Verify requirement by dynamic test execution. Trigger a call to EcuM_GoHalt() or EcuM_GoPoll() in a
        master core context which will send the readiness state of the master core in the SchM queue.
        The EcuM_MasterCoreReadyPort port needs to be connected to the EcuM_MasterCoreSyncPort port in the Rte configuration
        container: RteBswRequiredSenderReceiverConnection.
        The sent value is verified using the EcuM_MasterCoreSyncPort port.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_ImpTest_SchMSend_Interface</srcid><srcstatus/><internalId>1040</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Bswmd.ProvidedDatas</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>434</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Bswmd.ProvidedDatas.EcuM_SlaveCoreReadyPort</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        One port shall be provided for the slave cores to pass information about their readiness state.

        VariableDataPrototype EcuM_SlaveCoreReadyPort
        - Type: /AUTOSAR_Platform/ImplementationDataTypes/uint8
        - Purpose: Each slave core shall write to this variable data prototype to signal
          the master core that they are ready.
        - Expected Value: The slave core shall pass their coreId.
      </description>
      <verifycrit>
        Verify requirement by dynamic test execution. Trigger a call to EcuM_GoHalt() in a slave core context which will
        send the readiness state of the slave core in the SchM queue.
        The EcuM_SlaveCoreReadyPort port needs to be connected to the EcuM_SlaveCoreSyncPort port in the Rte configuration
        container: RteBswRequiredSenderReceiverConnection.
        The sent value is verified using the EcuM_SlaveCoreSyncPort port.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_ImpTest_SchMSend_Interface</srcid><srcstatus/><internalId>1040</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Bswmd.ProvidedDatas</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>432</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>435</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Bswmd.RequiredDatas</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The Basic software module description file shall be enhanced in order for the EcuM to
        be able to read data from variables to determine if the cores are ready, or to read
        information about the current sleep mode.

        RequiredDatas
         {
             VariableDataPrototype GetSleepMode_{CoreId} (1..*)
             VariableDataPrototype EcuM_MasterCoreSyncPort_Slave (1..*)
             VariableDataPrototype EcuM_SlaveCoreSyncPort (1)
         }
      </description>
     <verifycrit>
        Verify the required data ports are generated in the EcuM's Basic software module description arxml file.
        Also verify if the corresponding data receive points are provided.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swurs</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.Impl.Bswmd.RequiredDatas.GetSleepMode</srcid><srcstatus/><internalId>437</internalId></linkedfrom><linkedfrom><srcid>EcuM.Impl.Bswmd.RequiredDatas.EcuM_MasterCoreSyncPort</srcid><srcstatus/><internalId>438</internalId></linkedfrom><linkedfrom><srcid>EcuM.Impl.Bswmd.RequiredDatas.EcuM_SlaveCoreSyncPort</srcid><srcstatus/><internalId>439</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>436</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Bswmd.RequiredDatas.GetSleepMode</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        One port shall be provided for the slave cores to read information about the
        current sleep mode.

        VariableDataPrototype GetSleepMode
        - Type: /AUTOSAR_Platform/ImplementationDataTypes/uint8
        - Purpose: Each slave core shall read from their GetSleepMode port to determine the
        current sleep mode.
      </description>
      <verifycrit>
        Verify requirement by dynamic test execution. Trigger a call to EcuM_1_Core_{core-ID}_UpdateSleepMode()
        Verify if the sent sent sleep mode using EcuM_SetSleepMode is correctly received by using the EcuM_GetSleepMode port.
        The EcuM_SetSleepMode port needs to be connected to the EcuM_GetSleepMode port in the Rte configuration
        container: RteBswRequiredSenderReceiverConnection.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_ImpTest_SchMReceive_Interface</srcid><srcstatus/><internalId>1041</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_Bswmd.arxml.m4_323</srcid><srcstatus/><internalId>891</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_Bswmd.arxml.m4_329</srcid><srcstatus/><internalId>892</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Bswmd.RequiredDatas</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>437</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Bswmd.RequiredDatas.EcuM_MasterCoreSyncPort</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        One port shall be provided for the slave cores to read information about the master
        core's readiness state.

        VariableDataPrototype EcuM_MasterCoreSyncPort
        - Type: /AUTOSAR_Platform/ImplementationDataTypes/boolean
        - Purpose: Each slave core shall read from their port to determine if the
          master core is ready.
          The user must connect the EcuM_MasterCoreReadyPort with each EcuM_MasterCoreSyncPort.
        - Expected Value: TRUE when the master core is ready, otherwise FALSE.
      </description>
      <verifycrit>
        Verify requirement by dynamic test execution. Trigger a call to EcuM_GoHalt or GoPoll() in a
        slave core context, which in turn will trigger the EcuM_MasterCoreSync() function.
        Verify if the sent readiness state of the master core is correctly read and the function does not block on EcuM_MasterCoreSync().
        The EcuM_MasterCoreReadyPort port needs to be connected to the EcuM_MasterCoreSyncPort port in the Rte configuration
        container: RteBswRequiredSenderReceiverConnection.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_ImpTest_SchMReceive_Interface</srcid><srcstatus/><internalId>1041</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Bswmd.RequiredDatas</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>438</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Bswmd.RequiredDatas.EcuM_SlaveCoreSyncPort</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        One port shall be provided for the master core to read information about the slave
        core's readiness state.

        VariableDataPrototype EcuM_SlaveCoreSyncPort
        - Type: /AUTOSAR_Platform/ImplementationDataTypes/uint8
        - Purpose: The master core shall read from this variable to determine if the slave cores
          are ready. The user must connect the EcuM_SlaveCoreReadyPort to the EcuM_SlaveCoreSyncPort.
        - Expected Value: The coreId of the slave that is ready.
      </description>
      <verifycrit>
        Verify requirement by dynamic test execution. Trigger a call to EcuM_GoHalt() or EcuM_GoDown() in a
        master core context, which in turn will trigger the EcuM_SlaveCoreSync() function.
        Verify if the sent readiness state of each slave core is correctly read and the function does not block on EcuM_SlaveCoreSync().
        The EcuM_SlaveCoreReadyPort port needs to be connected to the EcuM_SlaveCoreSyncPort port in the Rte configuration
        container: RteBswRequiredSenderReceiverConnection.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_ImpTest_SchMReceive_Interface</srcid><srcstatus/><internalId>1041</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Bswmd.RequiredDatas</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>436</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>439</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.EcuM_GetCoreInstance</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Function name: EcuM_GetCoreInstance
        Syntax: EcuM_CoreContextType * EcuM_GetCoreInstance(void)
        Sync/Async: Synchronous
        Reentrancy: Reentrant
        Parameters (in): None
        Parameters (inout):None
        Parameters (out):None
        Return value: EcuM_Core{core-ID}_Context
        Description: Returns the core context data structure for the core which
        called the function.
      </description>
      <verifycrit>
        Verify requirement by dynamic test execution. Verify the correct core context data structure
        is updated if an API is called on the corresponding core.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_ImpTest_SchMReceive_Interface</srcid><srcstatus/><internalId>1041</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/EcuM_Cfg.c_810</srcid><srcstatus/><internalId>631</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>440</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.EcuM_GetMasterCoreInstance</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Function name: EcuM_GetMasterCoreInstance
        Syntax: EcuM_CoreContextType * EcuM_GetMasterCoreInstance(void)
        Sync/Async: Synchronous
        Reentrancy: Reentrant
        Parameters (in): None
        Parameters (inout):None
        Parameters (out):None
        Return value: EcuM_Core{master-core-ID}_Context
        Description: Returns the master core context data structure.
      </description>
      <verifycrit>
        Verify requirement by dynamic test execution. Verify that the master core context data structure
        is updated if an API is called on the master core.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_ImpTest_SchMSend_Interface</srcid><srcstatus/><internalId>1040</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/EcuM_Cfg.c_840</srcid><srcstatus/><internalId>632</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>441</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.DataStructure.EcuM_CoreContextType</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name        : EcuM_CoreContextType
        Type        : Record
        Description : Defines all core specific context data.
      </description>
      <verifycrit>
        Verify that the EcuM_CoreContextType data type is included in EcuM_Int.h
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_Int.h.m4_338</srcid><srcstatus/><internalId>710</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>442</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.MemoryMapping.InstanceData</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The memory sections ECUM_{VENDOR_ID}_{VENDOR_API_INFIX}_VAR_{INIT_POLICY}
        shall be used to instance specific data.
        The master core instance shall be mapped to the ECUM_VAR_{INIT_POLICY} memory section.
        Data mapped to these memory sections shall only be used in the core context that the
        EcuM instance is assigned to.
      </description>
      <verifycrit>
        Verify that core specific variables are correctly mapped to their corresponding memory sections.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/EcuM_Cfg.c_413</srcid><srcstatus/><internalId>627</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>443</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.CallingContext.MasterCoreOnly</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>
        The following EcuM Api functions may be called by
        the master core only.
        If they are called on a slave core they shall ignore the request by not
        performing any changes and throw the DET error ECUM_E_WRONG_CONTEXT if DET is enabled.

        Shutdown Target API:
        - EcuM_GetLastShutdownTarget
        - EcuM_GetShutdownTarget
        - EcuM_SelectShutdownTarget
        - EcuM_GetMostRecentShutdown
        - EcuM_GetNextRecentShutdown
        - EcuM_GetShutdownCause
        - EcuM_SelectShutdownCause

        EcuM Fixed Support:
        - EcuM_GoRun
        - EcuM_KillAllRUNRequests
        - EcuM_ReleasePOST_RUN
        - EcuM_ReleaseRUN
        - EcuM_RequestPOST_RUN
        - EcuM_RequestRUN
        - EcuM_GetStatusOfWakeupSource

        EcuM Boot Target:
        - EcuM_SelectBootTarget
        - EcuM_GetBootTarget
      </description>
      <verifycrit>
        Verify requirement by dynamic test execution. Verify that the above list of APIs can only perform
        changes on the master core.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_ImpTest_CallingContext_Master</srcid><srcstatus/><internalId>1042</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_612</srcid><srcstatus/><internalId>720</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>444</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.CallingContext.MasterSlave</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The following EcuM Api functions can be called by the
        master and slave cores:
          Version Info Api:
          - EcuM_GetVersionInfo

          Startup and Shutdown:
          - EcuM_Init
          - STATIC EcuM_Init_MultiCore
          - STATIC EcuM_StartAllCores
          - EcuM_StartupTwo
          - EcuM_Shutdown

          Wakeup source handling:
          - EcuM_MainFunction
          - EcuM_ValidateWakeupEvent
          - EcuM_GetExpiredWakeupEvents
          - EcuM_GetPendingWakeupEvents
          - EcuM_GetValidatedWakeupEvents
          - EcuM_ClearWakeupEvent
          - EcuM_SetWakeupEvent

          Sleep:
          - EcuM_GoHalt
          - EcuM_GoPoll
          - STATIC  EcuM_GoSleep
          - STATIC  EcuM_WakeupRestart

          Wakeup event notifications:
          - STATIC EcuM_SwitchWakeupStatus
          - STATIC EcuM_WksIndicateStatus_DISABLED
          - STATIC EcuM_WksIndicateStatus_EXPIRED
          - STATIC EcuM_WksIndicateStatus_NONE
          - STATIC EcuM_WksIndicateStatus_PENDING
          - STATIC EcuM_WksIndicateStatus_VALIDATED
          - STATIC EcuM_ComMWakeupIndication

          Core specific exclusive areas:
          - STATIC  EcuM_EnterExclusiveArea
          - STATIC  EcuM_ExitExclusiveArea

          Core specific Os scheduler resource handling:
          - STATIC  EcuM_GetResourceScheduler
          - STATIC  EcuM_ReleaseResourceScheduler
      </description>
      <comment>These Api functions shall be tested in both a master and slave
      core context.</comment>
      <verifycrit>
        Verify requirement by dynamic test execution. Verify that the above list of APIs perform changes both
        in a master core and a slave core context.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_01</srcid><srcstatus/><internalId>937</internalId></linkedfrom><linkedfrom><srcid>TS_EcuM_Slave_Poll_Sequence</srcid><srcstatus/><internalId>941</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_07</srcid><srcstatus/><internalId>944</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_21</srcid><srcstatus/><internalId>957</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_22</srcid><srcstatus/><internalId>958</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_100</srcid><srcstatus/><internalId>968</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_12_WIN32X86</srcid><srcstatus/><internalId>982</internalId></linkedfrom><linkedfrom><srcid>TS_EcuM_ImpTest_CallingContext_MasterSlave</srcid><srcstatus/><internalId>1043</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04095</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>348</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>445</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Bswmd.InternalExclusiveArea</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        For each core, one exclusive area shall be allocated.  This exclusive area
        shall be used to ensure data consistency when accessing the core context.
      </description>
      <verifycrit>
        Verify that one exclusive area is provided in the EcuM's basic software module description arxml file
        for each core in its corresponding internal behaviour.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_Bswmd.arxml.m4_339</srcid><srcstatus/><internalId>893</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>446</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Configuration.EcuMEnableMulticore</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The new boolean 'EcuMEnableMulticore' parameter shall be placed under the EcuMGeneral
        container and shall be true in order for the EcuM multi-core functionality to be enabled.
        The parameter's default value is false.
      </description>
      <comment>
        The multi-core functionality will be enabled if the EcuMEnableMulticore is set to true,
        and if more than one Os core is present in the Os configuration.
      </comment>
      <verifycrit>
        Verify that the multi-core functionality will be enabled if this parameter is set to true
        and the Os is configured with more than one core.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_2902</srcid><srcstatus/><internalId>880</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_60</srcid><srcstatus/><internalId>962</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_61_prep</srcid><srcstatus/><internalId>963</internalId></linkedfrom><linkedfrom><srcid>TS_EcuM_Shutdown_Target_Mode</srcid><srcstatus/><internalId>964</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_63</srcid><srcstatus/><internalId>965</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_64</srcid><srcstatus/><internalId>966</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_InvalidBootTarget</srcid><srcstatus/><internalId>967</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>447</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Configuration.EcuMEnableMcalOsCallouts</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The boolean 'EcuMEnableMcalOsCallouts' parameter shall be placed under the EcuMGeneral
        container and shall be true in order for EcuM to avoid direct function calls to Mcu and OS.
        The parameter's default value is false.
      </description>
      <verifycrit>
        Verify that the user-defined callouts are being called instead of direct function calls if this
        parameter is enabled.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM_EBParameters.xdm.m4_54</srcid><srcstatus/><internalId>886</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Slave_Poll_Sequence</srcid><srcstatus/><internalId>941</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_StartWakeupSource</srcid><srcstatus/><internalId>994</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCore_EcuStartup</srcid><srcstatus/><internalId>995</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreConfiguredMaster_Startup</srcid><srcstatus/><internalId>1016</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>448</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Configuration.EcuMMasterCoreId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The integer 'EcuMMasterCoreId' parameter shall be placed under the EcuMGeneral container
        and its value will map the EcuM master core to a specific Os core.
      </description>
      <comment>
        This is an optional parameter and shall be enabled only if the EcuM multi-core functionality
        is also enabled and its value should be lower than the total number of Os cores.
      </comment>
      <verifycrit>
        Verify that the EcuM master core is mapped to the configured Os Core ID by checking the value
        of the ECUM_CORE_ID_MASTER macro.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_2932</srcid><srcstatus/><internalId>881</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreConfiguredMaster_Startup</srcid><srcstatus/><internalId>1016</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>449</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Configuration.EcuMInitialCoreId</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The integer 'EcuMInitialCoreId' parameter shall be placed under the EcuMGeneral container
        and its value will map the EcuM initial core to a specific Os core.
      </description>
      <comment>
        This is an optional parameter and shall be enabled only if the EcuM multi-core functionality
        is also enabled and its value should be lower than the total number of Os cores, as it represents the value of a logical core.
      </comment>
      <verifycrit>
        Verify that the EcuM initial core is mapped to the configured Os Core ID by checking the value
        of the ECUM_CORE_ID_INITIAL macro.
        Verify that StartCore is not called with a logical core ID equal to ECUM_CORE_ID_INITIAL.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_2963</srcid><srcstatus/><internalId>882</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_11_WIN32X86</srcid><srcstatus/><internalId>980</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreConfiguredMaster_Startup</srcid><srcstatus/><internalId>1016</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>450</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Configuration.EcuMStartInitialCore</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The boolean 'EcuMStartInitialCore' parameter shall be placed under the EcuMGeneral container
        and if enabled, the OS StartCore() API will also be called for the core that boots up the system (initial core).
      </description>
      <comment>
        This is an optional parameter and shall be enabled only if the EcuM multi-core functionality
        is also enabled.
      </comment>
      <verifycrit>
        If enabled, verify that StartCore is also called for the logical core ID equal to ECUM_CORE_ID_INITIAL.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_2998</srcid><srcstatus/><internalId>883</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_11_WIN32X86</srcid><srcstatus/><internalId>980</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>451</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Source.MasterSlaveCoreSync</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        To implement the synchronization between master and slave cores, the SchM Sender-Receiver
        API shall be used.
        The Master Core EcuM is blocked by the EcuM_SlaveCoreSync() function until all slave cores
        have signalled that they are ready.
        To signal the master core that a slave core is ready, a slave core shall send its coreId
        to the EcuM_SlaveCoreReadyPort: SchM_Send_EcuM_1_Core_{core-ID}_EcuM_SlaveCoreReadyPort(coreId).
      </description>
      <comment>
        The master-slave synchronization sequence is shown in graphics/EcuM_MasterSlaveSync.PNG
      </comment>
      <verifycrit>
        Verify requirement by dynamic test execution. Call EcuM_GoHalt() on a master core
        in a context of transition to the Sleep state or call EcuM_GoDown() on a master core
        in a context of transition to the Shutdown state. Verify that no further
        actions are performed and the master core is blocked until all slave cores signal
        that they are ready.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_3499</srcid><srcstatus/><internalId>801</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>452</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Source.SlaveMasterCoreSync</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        To implement the synchronization between the slave cores and the master core, the SchM
        Sender-Receiver API shall be used.
        A Slave Core EcuM is blocked by the EcuM_MasterCoreSync() function until the master core
        EcuM has signalled that it is ready.
        To signal the slave cores that it is ready, the master core shall send its state to the
        EcuM_MasterCoreReadyPort: SchM_Send_EcuM_EcuM_MasterCoreReadyPort(TRUE).
      </description>
      <comment>
        The slave-master synchronization sequence is shown in graphics/EcuM_SlaveMasterSync.PNG
      </comment>
      <verifycrit>
        Verify requirement by dynamic test execution. Call EcuM_GoHalt() or EcuM_GoPoll()
        on a slave core in a context of transition to the Sleep state. Verify that no further
        actions are performed and the slave core is blocked until the master core signals
        it is ready.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/EcuM_Cfg.c_750</srcid><srcstatus/><internalId>629</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>453</internalId></specobject>

    <specobject>
      <id>EcuM.MultipleInstanceDetErrorHandling</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the EcuM multicore functionality is enabled and a DET error is reported in one
        EcuM API, then the Instance ID passed to DET shall correspond to the current Os Core ID.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_Int.h.m4_101</srcid><srcstatus/><internalId>708</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_Int.h.m4_128</srcid><srcstatus/><internalId>709</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_11_WIN32X86</srcid><srcstatus/><internalId>980</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>454</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.EcuM_OnCoreSync</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Function name: EcuM_OnCoreSync
        Syntax: EcuM_SyncActionType EcuM_OnCoreSync(void)
        Sync/Async: Synchronous
        Reentrancy: NonReentrant
        Parameters (in): None
        Parameters (inout):None
        Parameters (out):None
        Return value: EcuM_SyncActionType - ECUM_CONTINUE_SYNC: The current EcuM instance continues to wait
        for synchronization with the other cores.
        ECUM_ABORT_SYNC: Synchronization with the other cores is aborted.
        Description: Callout function which is executed when an EcuM instance is synchronizing on entry or
        exit from the Sleep/Shutdown states.
        This function shall be defined as a template for the integrator in EcuM_Callout_Stubs.c.
      </description>
      <verifycrit>
        Verify requirement by dynamic test execution. Using a Multi-Core configuration, verify that if
        ECUM_CONTINUE_SYNC is returned, the other EcuM instances are ready to transition into their next required state.
        If ECUM_ABORT_SYNC is returned, verify that the EcuM instance does not enter into its required state.
      </verifycrit>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_61</srcid><srcstatus/><internalId>977</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_11_WIN32X86</srcid><srcstatus/><internalId>980</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_13_WIN32X86</srcid><srcstatus/><internalId>984</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/EcuM_Cfg.c_782</srcid><srcstatus/><internalId>630</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_689</srcid><srcstatus/><internalId>664</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_3519</srcid><srcstatus/><internalId>802</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>455</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.EcuM_PreHaltSlave</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Function name: EcuM_PreHaltSlave
        Syntax: void EcuM_PreHaltSlave(void)
        Sync/Async: Synchronous
        Reentrancy: NonReentrant
        Parameters (in): None
        Parameters (inout):None
        Parameters (out):None
        Return value: None.
        Description: Callout function invoked during Halt activities in a slave core context.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_Cbk.h_552</srcid><srcstatus/><internalId>706</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>456</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Source.SlaveCore.PreHalt</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        During execution of the Halt sequence, EcuM shall call the EcuM_PreHaltSlave() callout 
        before the ECU is halted on a slave core.
      </description>
      <comment>
        This callout allows for synchronization with the PreHalt activities done on the master core.
      </comment>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_899</srcid><srcstatus/><internalId>728</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_11_WIN32X86</srcid><srcstatus/><internalId>980</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>457</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Configuration.EcuMPreHaltSlaveCallout</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>.
        Name                      EcuMPreHaltSlaveCallout
        Parent Container          EcuMGeneral
        Description               This parameter enables calling the EcuM_PreHaltSlave() callout function
                                  in the context of a slave core Halt sequence.
        Multiplicity              1
        Type                      boolean
        Default value             false
        Post-Build Variant Value  false
        Value Configuration Class Pre-compile time X All Variants
                                  Link time        -
                                  Post-build time  -
        Scope / Dependency        This is an optional parameter and shall be enabled only if the EcuM multi-core functionality
                                  is also enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_3027</srcid><srcstatus/><internalId>884</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_11_WIN32X86</srcid><srcstatus/><internalId>980</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>458</internalId></specobject>
    
    <specobject>
      <id>EcuM.Impl.Configuration.EcuMPreHaltSlaveCalloutEnabled</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>.
        If the boolean 'EcuMPreHaltSlaveCallout' parameter is enabled and the multicore functionality is enabled,
        the EcuM_GoHalt() function shall call the EcuM_PreHaltSlave() callout function in the context of each slave core.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_900</srcid><srcstatus/><internalId>729</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_11_WIN32X86</srcid><srcstatus/><internalId>980</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>459</internalId></specobject>

    <specobject>
      <id>EcuM.PollBlockingLoop</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        In the Poll sequence the EcuM shall call the callouts EcuM_SleepActivity() and EcuM_CheckWakeup() in
        a blocking loop until a pending or validated wakeup event is reported.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Poll_Sequence</srcid><srcstatus/><internalId>942</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>460</internalId></specobject>

    <specobject>
      <id>EcuM.RestartList_Error</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If entries in the restart list are not in the same order as the entries in the init list zero and one an error shall be reported.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Generic_RestartList_Error</srcid><srcstatus/><internalId>1030</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>461</internalId></specobject>

    <specobject>
      <id>EcuM.RestartList_Warning</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If there is an entry in the restart list which does not have a counterpart in the init list zero or one a warning shall be reported.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_Generic_RestartList_Warning</srcid><srcstatus/><internalId>1031</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>462</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.MemMap</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The EcuM module implementation shall use EcuM_MemMap.h instead of MemMap.h.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_182</srcid><srcstatus/><internalId>717</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>463</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.BootTargetSec</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The EcuM module implementation shall map the EcuM_BootTarget variable to
        the SEC_ECUM_BOOTTARGET memory section when the configuration parameter
        EcuMUseBoottargetSec is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM_BootTarget.c_33</srcid><srcstatus/><internalId>815</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_ComTest_BootTarget</srcid><srcstatus/><internalId>931</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>464</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.StartedCoreStatus</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The status value returned by the Os API StartCore() shall be verified for each Os core.
        If the API returns with an error, EcuM shall throw the DET error ECUM_E_UNSUCCESSFUL_CORE_START if DET is enabled.
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_11_WIN32X86</srcid><srcstatus/><internalId>980</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/EcuM_Cfg.c_887</srcid><srcstatus/><internalId>633</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>465</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Conf.PBVariant.DefaultState</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Name        : EcuMDefaultState {ECUM_DEFAULT_SHUTDOWN_TARGET}
        Description : This parameter describes the state part of the default shutdown
                      target selected when the ECU comes out of reset. If EcuMStateSleep
                      is selected, the parameter EcuMDefaultSleepModeRef selects
                      the specific sleep mode.
        Multiplicity: 1
        Type        : EcucEnumerationParamDef
        Range       :
          EcuMStateOff    - Corresponds to ECUM_STATE_OFF in EcuM_StateType.
          EcuMStateReset  - Corresponds to ECUM_STATE_RESET in EcuM_StateType.
                            This literal is only be applicable for EcuMFlex.
          EcuMStateSleep  - Corresponds to ECUM_STATE_SLEEP in EcuM_StateType.
        Post-Build Variant Value: true
        ConfigurationClass
          Pre-compile time    --
          Link time           --
          Post-build time     X   VARIANT-POST-BUILD
        Scope / Dependency
      </description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_20</srcid><srcstatus/><internalId>956</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_PBVARIANT_VARIANT_ONE</srcid><srcstatus/><internalId>1021</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_PBVARIANT_VARIANT_TWO</srcid><srcstatus/><internalId>1022</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.ECUM107_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>4</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>466</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Conf.PBVariant.EcuMEnableDriver</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The boolean 'EcuMEnableDriver' parameter shall be placed under the EcuMDriverInitItem list, part of both EcuMDriverInitListOne
        and EcuMDriverRestartList containers.
        If enabled, the corresponding DriverInitItem will be used by the EcuM_AL_DriverInitOne() or EcuM_AL_DriverRestart() functions.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_663</srcid><srcstatus/><internalId>846</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1325</srcid><srcstatus/><internalId>851</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_PBVARIANT_VARIANT_ONE</srcid><srcstatus/><internalId>1021</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_PBVARIANT_VARIANT_TWO</srcid><srcstatus/><internalId>1022</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>467</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.Conf.PBVariant.EcuMRelocatablePbcfgEnable</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The boolean configuration parameter EcuMRelocatablePbcfgEnable with CONFIG-CLASS PRE-COMPILE with default value of true
        SHALL be placed into the EcuMGeneral container.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_2845</srcid><srcstatus/><internalId>879</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_PBVARIANT_IS_VALID_CONFIG_VARIANT_ONE</srcid><srcstatus/><internalId>1019</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_PBVARIANT_IS_VALID_CONFIG_VARIANT_TWO</srcid><srcstatus/><internalId>1020</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_PBVARIANT_VARIANT_ONE</srcid><srcstatus/><internalId>1021</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_PBVARIANT_VARIANT_TWO</srcid><srcstatus/><internalId>1022</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>468</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.PBVariant.WrongInitConfigParameter</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        If the EcuMDevErrorDetect switch is enabled, the contents of the given
        configuration set used to initialize the EcuM shall be checked.
        If an error is detected the initialization of the ECU Mode
        Manager shall not be executed and the error shall be reported to the
        Development Error Tracer with the value ECUM_E_WRONG_CONFIG_PARAM.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1176</srcid><srcstatus/><internalId>739</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_PBVARIANT_IS_VALID_CONFIG_VARIANT_ONE</srcid><srcstatus/><internalId>1019</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_PBVARIANT_IS_VALID_CONFIG_VARIANT_TWO</srcid><srcstatus/><internalId>1020</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>469</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.PBVariant.Relocatable</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The post-build configuration SHALL only be relocatable if EcuMRelocatablePbcfgEnable is set to true
        and if PbcfgM enabled relocatable configurations.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/EcuM_Cfg.h.m4_27</srcid><srcstatus/><internalId>618</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/generate_var/xgen/EcuM.xgen_80</srcid><srcstatus/><internalId>919</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>470</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.PBVariant.IsValid</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The module SHALL implement the function EcuM_IsValidConfig().
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM.h_109</srcid><srcstatus/><internalId>676</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_PBVARIANT_IS_VALID_CONFIG_VARIANT_ONE</srcid><srcstatus/><internalId>1019</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_PBVARIANT_IS_VALID_CONFIG_VARIANT_TWO</srcid><srcstatus/><internalId>1020</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>471</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.PBVariant.Hash</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        The module post-build configuration struct SHALL be extended by a hash value.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/include/EcuM_Cfg.h.m4_15</srcid><srcstatus/><internalId>617</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>472</internalId></specobject>

    <specobject>
      <id>EcuM.EcuMDefaultAppModeBaseId</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        Name:          EcuMDefaultAppModeBaseId
        Description:   This parameter specifies an offset value for the EcuMDefaultAppMode to be used
                       and then sent as parameter to StartOS().
        Multiplicity:  1
        Type:          uint8
        Default value: 0
      </description>
      <comment>
      This is an optional parameter and shall be enabled only if EcuM is integrated with an OS
      that generates values for items in the OsAppMode list as 0-based and consecutive.
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_15_WIN32X86</srcid><srcstatus/><internalId>989</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>473</internalId></specobject>

    <specobject>
      <id>EcuM.Config.EcuMMainFunctionPeriod</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        Name                      EcuMMainFunctionPeriod
        Parent Container          EcuMGeneral
        Description               This parameter defines the schedule period of EcuM_MainFunction. Unit: [s]
        Multiplicity              1
        Type                      EcucFloatParamDef
        Range                     0.001 ... 255
        Default value             0.02
        Post-Build Variant Value  false
        Value Configuration Class Pre-compile time X All Variants
                                  Link time        -
                                  Post-build time  -
        Scope / Dependency        scope ECU
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/src/EcuM_Cfg.c_16</srcid><srcstatus/><internalId>623</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_2785</srcid><srcstatus/><internalId>878</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_03</srcid><srcstatus/><internalId>939</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_NotifyBswM</srcid><srcstatus/><internalId>1012</internalId></linkedfrom><linkedfrom><srcid>TS_EcuM_ImpTest_SchMSend_Interface</srcid><srcstatus/><internalId>1040</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>474</internalId></specobject>

    <specobject>
      <id>EcuM.EB.SchM_Call_ComM_EcuM_WakeUpIndication</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        If EcuMEnableMulticore parameter is enabled and EcuMCrossCoreComMWakeup is also enabled, 
        EcuM shall call ComM_EcuM_WakeUpIndication via SchM call (Schm Client Server interface).
      </description>
      <comment>
        If multiple wakeup events are configurred for a single ComM channel, EcuM shall call only once
        ComM_EcuM_WakeUpIndication via SchM call for the specific ComM channel per core.
      </comment>      
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_3357</srcid><srcstatus/><internalId>795</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_WAKEUPINDICATION_WIN32X86_1</srcid><srcstatus/><internalId>1004</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_WAKEUPINDICATION_WIN32X86_2</srcid><srcstatus/><internalId>1005</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_WAKEUPINDICATION_WIN32X86_3</srcid><srcstatus/><internalId>1006</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_WAKEUPINDICATION_WIN32X86_4</srcid><srcstatus/><internalId>1007</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>475</internalId></specobject>

    <specobject>
      <id>EcuM.EB.SchM_Call_ComM_EcuM_PNCWakeUpIndication</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        If EcuMEnableMulticore parameter is enabled and EcuMCrossCoreComMWakeup is also enabled, 
        EcuM shall call ComM_EcuM_PNCWakeUpIndication via SchM call (Schm Client Server interface).
      </description>
      <comment>
        If multiple wakeup events are configurred for a single ComM PNC, EcuM shall call only once
        ComM_EcuM_PNCWakeUpIndication via SchM call for the specific ComM PNC per core.
      </comment>            
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_3430</srcid><srcstatus/><internalId>798</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_PNCWAKEUPINDICATION_WIN32X86_1</srcid><srcstatus/><internalId>1008</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_PNCWAKEUPINDICATION_WIN32X86_2</srcid><srcstatus/><internalId>1009</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_PNCWAKEUPINDICATION_WIN32X86_3</srcid><srcstatus/><internalId>1010</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_PNCWAKEUPINDICATION_WIN32X86_4</srcid><srcstatus/><internalId>1011</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>476</internalId></specobject>

    <specobject>
      <id>EcuM.EB.SchM_Call_Client_Server_Channel_DET</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        If EcuMEnableMulticore parameter is enabled and EcuMCrossCoreComMWakeup is also enabled and 
        EcuMDevErrorDetect is enabled and SchM (client Server Interface) call for ComM_EcuM_WakeUpIndication
        returns a different value from SCHM_E_OK, DET development error (ECUM_E_COMMWAKEUPINDICATION (254) shall be reported) shall be reported
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_3361</srcid><srcstatus/><internalId>796</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_WAKEUPINDICATION_WIN32X86_4</srcid><srcstatus/><internalId>1007</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>477</internalId></specobject>

    <specobject>
      <id>EcuM.EB.SchM_Call_Client_Server_PNC_DET</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        If EcuMEnableMulticore is TRUE and EcuMCrossCoreComMWakeup is also true and 
        EcuMDevErrorDetect is enabled and SchM (client Server Interface) call for ComM_EcuM_PNCWakeUpIndication
        returns a different value from SCHM_E_OK, DET development error (ECUM_E_COMMPNCWAKEUPINDICATION (255) shall be reported
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_3434</srcid><srcstatus/><internalId>799</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_PNCWAKEUPINDICATION_WIN32X86_4</srcid><srcstatus/><internalId>1011</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>478</internalId></specobject>

    <specobject>
      <id>EcuM.EB.EcuMCrossCoreComMWakeup</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        Name        : EcuMCrossCoreComMWakeup
        Description : Enables EcuM to ComM cross core multicore support,
                      enables client server conections in RTE for interfaces ComM_EcuM_WakeUpIndication and ComM_EcuM_PNCWakeUpIndication
        Multiplicity: 1
        Type        : EcucBooleanParamDef
     　  Default value: FALSE
        ConfigurationClass
          Pre-compile time    All variants
          Link time           --
          Post-build time     --
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM_EBParameters.xdm.m4_72</srcid><srcstatus/><internalId>887</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_WAKEUPINDICATION_WIN32X86_1</srcid><srcstatus/><internalId>1004</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_WAKEUPINDICATION_WIN32X86_2</srcid><srcstatus/><internalId>1005</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_WAKEUPINDICATION_WIN32X86_3</srcid><srcstatus/><internalId>1006</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_WAKEUPINDICATION_WIN32X86_4</srcid><srcstatus/><internalId>1007</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_PNCWAKEUPINDICATION_WIN32X86_1</srcid><srcstatus/><internalId>1008</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_PNCWAKEUPINDICATION_WIN32X86_2</srcid><srcstatus/><internalId>1009</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_PNCWAKEUPINDICATION_WIN32X86_3</srcid><srcstatus/><internalId>1010</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_COMM_ECUM_PNCWAKEUPINDICATION_WIN32X86_4</srcid><srcstatus/><internalId>1011</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>479</internalId></specobject>

    <specobject>
      <id>EcuM.EB.Impl.EcuMBswMWakeupIndicationLastIsBest</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        If the EcuMBswMWakeupIndicationLastIsBest configuration parameter is enabled, EcuM shall only indicate the last state transition of a wakeup event to BswM.
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_3061</srcid><srcstatus/><internalId>793</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_NotifyBswMWakeup</srcid><srcstatus/><internalId>1013</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>480</internalId></specobject>

    <specobject>
      <id>EcuM.EB.Impl.Conf.EcuMBswMWakeupIndicationLastIsBest</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        Name        : EcuMBswMWakeupIndicationLastIsBest
        Description : Enables EcuM to indicate only the last state of a wakeup to BswM if more than one state transitions are made in-between two EcuM_MainFunction() calls.
        Multiplicity: 1
        Type        : EcucBooleanParamDef
        Default value: FALSE
        ConfigurationClass
          Pre-compile time    All variants
          Link time           --
          Post-build time     --
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM_EBParameters.xdm.m4_111</srcid><srcstatus/><internalId>888</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_NotifyBswMWakeup</srcid><srcstatus/><internalId>1013</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>481</internalId></specobject>

    <specobject>
       <id>EcuM.DetInclusion</id>
       <status>approved</status>
       <source>Elektrobit Automotive GmbH</source>
       <version>1</version>
       <description>The Det public header file shall always be included in order to have access to the Det runtime error functions.</description>
       <needscoverage>
          <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_Int.h.m4_16</srcid><srcstatus/><internalId>707</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>482</internalId></specobject>

    <specobject>
      <id>EcuM.EB.Impl.Configuration.EcuMDriverCoreId</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <version>1</version>
      <description>
        Name        : EcuMDriverCoreId
        Description : Indicates the coreId onto which the configured driver should be initialized or restarted.
        Multiplicity: 1
        Type        : EcucIntegerParamDef
        Default value: EcuMMasterCoreId if enabled / 0 otherwise.
        ConfigurationClass
          Pre-compile time    All variants
          Link time           --
          Post-build time     --
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_683</srcid><srcstatus/><internalId>847</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_998</srcid><srcstatus/><internalId>849</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/config/EcuM.xdm.m4_1345</srcid><srcstatus/><internalId>852</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInit_WIN32X86</srcid><srcstatus/><internalId>991</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInitDefaultValues_WIN32X86</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInitDefaultValuesMasterCoreId_WIN32X86</srcid><srcstatus/><internalId>993</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>483</internalId></specobject>

    <specobject>
       <id>EcuM.EB.Impl.SlaveCoreDriver_RestartList</id>
       <status>approved</status>
       <source>Elektrobit Automotive GmbH</source>
       <version>1</version>
       <description>The EcuM EcuM_AL_DriverRestart function shall be called by the EcuM_GoPoll/EcuM_GoHalt() 
       functions in their wakeup restart sequence, on each core.
       </description>
       <needscoverage>
          <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_3041</srcid><srcstatus/><internalId>791</internalId></linkedfrom></coveredby></needscov>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInit_WIN32X86</srcid><srcstatus/><internalId>991</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInitDefaultValues_WIN32X86</srcid><srcstatus/><internalId>992</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_MultiCoreDriverInitDefaultValuesMasterCoreId_WIN32X86</srcid><srcstatus/><internalId>993</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>484</internalId></specobject>

<specobject>
      <id>EcuM.Impl.EcuM_GetResource</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Function name: EcuM_GetResource
        Syntax: void EcuM_GetResource(ResourceType resource)
        Sync/Async: Synchronous
        Reentrancy: NonReentrant
        Parameters (in): resource
        Parameters (inout):None
        Parameters (out):None
        Return value: None.
        Description:Callout to avoid a direct function call to the OS GetResource API 
                    as a means of isolation between EcuM and the Os module
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_184</srcid><srcstatus/><internalId>640</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>485</internalId></specobject>

    <specobject>
      <id>EcuM.Impl.EcuM_ReleaseResource</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Function name: EcuM_ReleaseResource
        Syntax: void EcuM_ReleaseResource(ResourceType resource)
        Sync/Async: Synchronous
        Reentrancy: NonReentrant
        Parameters (in): resource
        Parameters (inout):None
        Parameters (out):None
        Return value: None.
        Description:Callout to avoid a direct function call to the OS ReleaseResource API 
                    as a means of isolation between EcuM and the Os module
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_190</srcid><srcstatus/><internalId>641</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>486</internalId></specobject>
    
    <specobject>
      <id>EcuM.Impl.EcuM_StartCore</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Function name: EcuM_StartCore
        Syntax: StatusType EcuM_StartCore(CoreIdType coreId)
        Sync/Async: Synchronous
        Reentrancy: NonReentrant
        Parameters (in): coreId
        Parameters (inout):None
        Parameters (out):None
        Return value: None.
        Description:Callout to avoid a direct function call to the OS StartCore API 
                    as a means of isolation between EcuM and the Os module
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_197</srcid><srcstatus/><internalId>642</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>487</internalId></specobject>
    
    <specobject>
      <id>EcuM.Impl.EcuM_StartOS</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Function name: EcuM_StartOS
        Syntax: void EcuM_StartOS(uint8 DefaultAppMode)
        Sync/Async: Synchronous
        Reentrancy: NonReentrant
        Parameters (in): DefaultAppMode
        Parameters (inout):None
        Parameters (out):None
        Return value: None.
        Description:Callout to avoid a direct function call to the OS StartOS API 
                    as a means of isolation between EcuM and the Os module
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_207</srcid><srcstatus/><internalId>643</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>488</internalId></specobject>
    
    <specobject>
      <id>EcuM.Impl.EcuM_ShutdownOS</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Function name: EcuM_ShutdownOS
        Syntax: void EcuM_ShutdownOS(void)
        Sync/Async: Synchronous
        Reentrancy: NonReentrant
        Parameters (in): None
        Parameters (inout):None
        Parameters (out):None
        Return value: None.
        Description:Callout to avoid a direct function call to the OS ShutdownOS API 
                    as a means of isolation between EcuM and the Os module
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_213</srcid><srcstatus/><internalId>644</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>489</internalId></specobject>
    
    <specobject>
      <id>EcuM.Impl.EcuM_ShutdownAllCores</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Function name: EcuM_ShutdownAllCores
        Syntax: void EcuM_ShutdownAllCores(void)
        Sync/Async: Synchronous
        Reentrancy: NonReentrant
        Parameters (in): None
        Parameters (inout):None
        Parameters (out):None
        Return value: None.
        Description:Callout to avoid a direct function call to the OS ShutdownAllCores API 
                    as a means of isolation between EcuM and the Os module
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_220</srcid><srcstatus/><internalId>645</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>490</internalId></specobject>
    
    <specobject>
      <id>EcuM.Impl.EcuM_GetCoreID</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Function name: EcuM_GetCoreID
        Syntax: CoreIdType EcuM_GetCoreID(void)
        Sync/Async: Synchronous
        Reentrancy: NonReentrant
        Parameters (in): None
        Parameters (inout):None
        Parameters (out):None
        Return value: CoreId.
        Description:Callout to avoid a direct function call to the OS GetCoreID API 
                    as a means of isolation between EcuM and the Os module
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_227</srcid><srcstatus/><internalId>646</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>491</internalId></specobject>
    
    <specobject>
      <id>EcuM.Impl.EcuM_McuSetMode</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Function name: EcuM_McuSetMode
        Syntax: void EcuM_McuSetMode(uint8 mcuMode)
        Sync/Async: Synchronous
        Reentrancy: NonReentrant
        Parameters (in): mcuMode
        Parameters (inout):None
        Parameters (out):None
        Return value: None.
        Description:Callout to avoid a direct function call to the Mcu Mcu_SetMode API 
                    as a means of isolation between EcuM and the Mcu module
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_238</srcid><srcstatus/><internalId>647</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>492</internalId></specobject>
    
    <specobject>
      <id>EcuM.Impl.EcuM_McuGetResetReason</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Function name: EcuM_McuGetResetReason
        Syntax: Mcu_ResetType EcuM_McuGetResetReason(void)
        Sync/Async: Synchronous
        Reentrancy: NonReentrant
        Parameters (in): None
        Parameters (inout):None
        Parameters (out):None
        Return value: McuResetReason.
        Description:Callout to avoid a direct function call to the Mcu Mcu_GetResetReason API 
                    as a means of isolation between EcuM and the Mcu module
      </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_244</srcid><srcstatus/><internalId>648</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>493</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>EcuM.BswInitFinished.Callback</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      When EcuMFixed support is enabled, EcuM shall provide a callback function
      void EcuM_GoRun(void), which is supposed to be called by BswM after all
      configuration tasks have been done. No EcuMFixed specific action shall be
      performed by EcuM_MainFunction() until this callback function has been
      called.
    &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;
    &lt;/pre&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_100</srcid><srcstatus/><internalId>968</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>494</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2308</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      When entering RUN II state, the callout EcuM_OnEnterRun shall be invoked and RUN
      mode shall be indicated. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_130</srcid><srcstatus/><internalId>971</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>495</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2310</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      The ECU State Manager module shall remain in RUN state for a configurable
      minimum duration (see 10.4 Configurable Parameters parameter
      EcuMRunMinimumDuration). 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_120</srcid><srcstatus/><internalId>970</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>496</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2311</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      When the last RUN request has been released, ECU State Manager module shall
      advance to the RUN III state. The evaluation is done with the next cyclic
      invocation of EcuM_MainFunction. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_130</srcid><srcstatus/><internalId>971</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_140</srcid><srcstatus/><internalId>972</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>497</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2865</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      When leaving RUN II state, the callout EcuM_OnExitRun shall be invoked and
      POSTRUN mode shall be indicated. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_130</srcid><srcstatus/><internalId>971</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_140</srcid><srcstatus/><internalId>972</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>498</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2761</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      When the last POST RUN request has been released and no RUN request has been
      issued, the ECU State Manager module shall advance to the SHUTDOWN state
      and shall invoke the callout EcuM_OnExitPostRun. The evaluation is done
      with the next cyclic invocation of EcuM_MainFunction. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_140</srcid><srcstatus/><internalId>972</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>499</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2866</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      While in RUN III state, if a RUN request is received, the ECU State Manager
      module shall immediately enter RUN II state again. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_160</srcid><srcstatus/><internalId>974</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>500</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuMf0025</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      The ECU State Manager module shall not put the ECU into SLEEP state before all
      run requests are released. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_130</srcid><srcstatus/><internalId>971</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>501</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2750</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      State changes shall be notified to SW-Cs through the RTE mode ports when the
      state change occurs. The ECU State Manager module shall not wait until
      the RTE has performed the mode switch completely. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_120</srcid><srcstatus/><internalId>970</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_130</srcid><srcstatus/><internalId>971</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_140</srcid><srcstatus/><internalId>972</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_150</srcid><srcstatus/><internalId>973</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>502</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2814</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: EcuM_RequestRUN  Syntax: Std_ReturnType EcuM_RequestRUN( 
      EcuM_UserType user  )  Service ID[hex]: 0x03  Sync/Async: Synchronous 
      Reentrancy: Reentrant  Parameters (in): user ID of the entity requesting
      the RUN state.  Parameters None  (inout):  Parameters (out): None 
      Std_ReturnType E_OK: The request was accepted by EcuM.  Return value:
      E_NOT_OK: The request was not accepted by EcuM, a detailed  error
      condition was sent to DET (see Error Codes below).  Description: Places a
      request for the RUN state. Requests can be placed by every user made 
      known to the state manager at configuration time. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_110</srcid><srcstatus/><internalId>969</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>503</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2143</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      Requests of EcuM_RequestRUN cannot be nested, i.e. one user can only place one
      request but not more. Additional or duplicate user requests by the same
      user shall be reported to DET. Of course the DET will only be notified
      under development conditions. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_110</srcid><srcstatus/><internalId>969</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>504</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2144</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      An implementation must track requests for each user known on the ECU. Run
      requests are specific to the user. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_110</srcid><srcstatus/><internalId>969</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>505</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2668</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      RUN requests shall be ignored after EcuM_KillAllRUNRequests has been executed
      until the shutdown has completed. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_150</srcid><srcstatus/><internalId>973</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>506</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2815</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: EcuM_ReleaseRUN  Syntax: Std_ReturnType EcuM_ReleaseRUN( 
      EcuM_UserType user  )  Service ID[hex]: 0x04  Sync/Async: Synchronous 
      Reentrancy: Reentrant  Parameters (in): user ID of the entity releasing
      the RUN state.  R4.0 Rev 1  (inout):  Parameters (out): None 
      Std_ReturnType E_OK: The release request was accepted by EcuM  E_NOT_OK:
      The release request was not accepted by EcuM, a  Return value:  detailed
      error condition was sent to DET (see Error Codes  below).  Description:
      Releases a RUN request previously done with a call to EcuM_RequestRUN.
      The  service is intended for implementing AUTOSAR ports. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_110</srcid><srcstatus/><internalId>969</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>507</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2789</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      The ECU State Manager module shall track requests by communication channels in
      exactly the same way as it tracks other users. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_110</srcid><srcstatus/><internalId>969</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>508</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2819</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: EcuM_RequestPOST_RUN  Syntax: Std_ReturnType EcuM_RequestPOST_RUN(
       EcuM_UserType user  )  Service ID[hex]: 0x0a  Sync/Async: Synchronous 
      Reentrancy: Reentrant  Parameters (in): user ID of the entity requesting
      the POST RUN state.  Parameters None  (inout):  Parameters (out): None 
      Std_ReturnType E_OK: The request was accepted by EcuM  Return value:
      E_NOT_OK: The request was not accepted by EcuM, a detailed  error
      condition was sent to DET (see Error Codes below).  Description: Places a
      request for the POST RUN state. Requests can be placed by every user 
      made known to the state manager at configuration time.  Requests for RUN
      and POST RUN must be tracked independently (in other words:  two
      independent variables).  The service is intended for implementing AUTOSAR
      ports. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_110</srcid><srcstatus/><internalId>969</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>509</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2820</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: EcuM_ReleasePOST_RUN  Syntax: Std_ReturnType EcuM_ReleasePOST_RUN(
       EcuM_UserType user  )  Service ID[hex]: 0x0b  Sync/Async: Synchronous 
      Reentrancy: Reentrant  Parameters (in): user ID of the entity releasing
      the POST RUN state.  Parameters None  (inout):  Parameters (out): None 
      Std_ReturnType E_OK: The release request was accepted by EcuM  E_NOT_OK:
      The release request was not accepted by EcuM, a  Return value:  detailed
      error condition was sent to DET (see Error Codes  below).  Description:
      Releases a POST RUN request previously done with a call to 
      EcuM_RequestPOST_RUN. The service is intended for implementing AUTOSAR 
      ports. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_110</srcid><srcstatus/><internalId>969</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>510</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2821</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: EcuM_KillAllRUNRequests  Syntax: void EcuM_KillAllRUNRequests( 
      void  )  Service ID[hex]: 0x05  Sync/Async: Synchronous  Reentrancy:
      Reentrant  Parameters (in): None  Parameters None  (inout):  Parameters
      (out): None  Return value: None  Description: The benefit of this
      function over an ECU reset is that the shutdown sequence is  executed,
      which e.g. takes care of writing back NV memory contents. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_150</srcid><srcstatus/><internalId>973</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>511</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM1872</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      The function unconditionally clears all requests to RUN and POST RUN. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_150</srcid><srcstatus/><internalId>973</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>512</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2600</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      As a consequence EcuM_RequestRUN and EcuM_RequestPOST_RUN must not accept any
      new requests unless the resulting shutdown has been completed. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_150</srcid><srcstatus/><internalId>973</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>513</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2832</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: EcuM_GetStatusOfWakeupSource  Syntax: EcuM_WakeupStatusType
      EcuM_GetStatusOfWakeupSource(  EcuM_WakeupSourceType sources  )  Service
      ID[hex]: 0x17  Sync/Async: Synchronous  Reentrancy: Reentrant  Parameters
      (in): sources The sources for which the status is returned  Parameters
      None  (inout):  Parameters (out): None  EcuM_WakeupStatusType Sum status
      of all wakeup sources passed in the in  Return value:  parameter. 
      Description: The sum status shall be computed according to the following
      algorithm:  If (EcuM_GetValidatedWakeupEvents() AND sources) is not 0
      then return  ECUM_WKSTATUS_VALIDATED.  If (EcuM_GetPendingWakeupEvents()
      AND sources) is not 0 then return  ECUM_WKSTATUS_PENDING.  If
      (EcuM_GetExpiredWakeupEvents() AND sources) is not 0 then return 
      ECUM_WKSTATUS_EXPIRED.  Otherwise, return ECUM_WKSTATUS_NONE. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_180</srcid><srcstatus/><internalId>975</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>514</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2754</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      When the EcuM_GetStatusOfWakeupSource service is called and parameter
      "sources"" equals 0, then this service shall return
      ECUM_WKSTATUS_NONE. If parameter "sources" equals
      ECUM_WKSOURCE_ALL_SOURCES, then this service shall return the sum status
      of all configured wakeup sources. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_180</srcid><srcstatus/><internalId>975</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>515</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2864</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      If parameter "sources" contains an unknown (unconfigured) wakeup source and
      is not ECUM_WKSOURCE_ALL_SOURCES, then the sum status of all known
      sources listed in parameter "sources" shall be returned. If
      Development Error Reporting is turned on, the service shall send the
      ECUM_E_UNKNOWN_WAKEUP_SOURCE error message to DET. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_110</srcid><srcstatus/><internalId>969</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_180</srcid><srcstatus/><internalId>975</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>516</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuMf0029</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      If the EcuM_MainFunction is called without having called EcuM_Init in advance
      (so the EcuM is un-initialized) the EcuM_MainFunction shall return
      immediately without performing any functionality and without raising any
      errors. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_100</srcid><srcstatus/><internalId>968</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>517</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2908</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: EcuM_AL_DriverInitTwo  Syntax: void EcuM_AL_DriverInitTwo(  const
      EcuM_ConfigType* ConfigPtr  )  Service ID[hex]: 0x00  Sync/Async:
      Synchronous  Reentrancy: Non Reentrant  ConfigPtr Pointer to the EcuM
      post-build configuration which contains pointers to  Parameters (in): 
      all other BSW module post-build configurations.  Parameters None 
      (inout):  Parameters (out): None  Return value: None  Description: This
      callout shall provide driver initialization of drivers which need OS and
      do not  need to wait for the NvM_ReadAll job to finish. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_100</srcid><srcstatus/><internalId>968</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>518</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2911</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: EcuM_OnEnterRun  R4.0 Rev 1  void  )  Service ID[hex]: 0x00 
      Sync/Async: Synchronous  Reentrancy: Non Reentrant  Parameters (in): None
       Parameters None  (inout):  Parameters (out): None  Return value: None 
      Description: On entry of RUN state is very similar to "just after
      startup". This call allows the  system designer to notify that RUN
      state has been reached. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_130</srcid><srcstatus/><internalId>971</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_140</srcid><srcstatus/><internalId>972</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_150</srcid><srcstatus/><internalId>973</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>519</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2912</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: EcuM_OnExitRun  Syntax: void EcuM_OnExitRun(  void  )  Service
      ID[hex]: 0x00  Sync/Async: Synchronous  Reentrancy: Non Reentrant 
      Parameters (in): None  Parameters None  (inout):  Parameters (out): None 
      Return value: None  Description: This call allows the system designer to
      notify that the APP RUN state is about to  be left. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_130</srcid><srcstatus/><internalId>971</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_140</srcid><srcstatus/><internalId>972</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_150</srcid><srcstatus/><internalId>973</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>520</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2913</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: EcuM_OnExitPostRun  Syntax: void EcuM_OnExitPostRun(  void  ) 
      Service ID[hex]: 0x00  Sync/Async: Synchronous  Reentrancy: Non Reentrant
       Parameters (in): None  Parameters None  (inout):  Parameters (out): None
       Return value: None  R4.0 Rev 1  about to be left. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_130</srcid><srcstatus/><internalId>971</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_140</srcid><srcstatus/><internalId>972</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_150</srcid><srcstatus/><internalId>973</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>521</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2914</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: EcuM_OnPrepShutdown  Syntax: void EcuM_OnPrepShutdown(  void  ) 
      Service ID[hex]: 0x00  Sync/Async: Synchronous  Reentrancy: Non Reentrant
       Parameters (in): None  Parameters None  (inout):  Parameters (out): None
       Return value: None  Description: This call allows the system designer to
      notify that the PREP SHUTDOWN state is  about to be entered. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_130</srcid><srcstatus/><internalId>971</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_140</srcid><srcstatus/><internalId>972</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_150</srcid><srcstatus/><internalId>973</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>522</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2915</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      Service name: EcuM_OnGoSleep  Syntax: void EcuM_OnGoSleep(  void  )  Service
      ID[hex]: 0x00  Sync/Async: Synchronous  Reentrancy: Non Reentrant 
      Parameters (in): None  Parameters None  (inout):  Parameters (out): None 
      Return value: None  Description: This call allows the system designer to
      notify that the GO SLEEP state is about to  be entered. 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_190</srcid><srcstatus/><internalId>976</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>523</internalId></specobject>

    <specobject>
      <id>EB.EcuM.ECUM165_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      Container Name EcuMFixedConfiguration  This container contains the configuration
      (parameters) of the EcuMFixed. Description  Only applicable if EcuMFixed
      is implemented. Configuration Parameters 
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_100</srcid><srcstatus/><internalId>968</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>524</internalId></specobject>

    <specobject>
      <id>EB.EcuM.ECUM129_Conf</id>
      <status>approved</status>
      <source>EB</source>
      <version>2</version>
      <description>&lt;pre&gt;
         Name: EcuMRunMinimumDuration {ECUM_RUN_SELF_REQUEST_PERIOD} 
         Description: Duration given in seconds for which the ECU State 
                      Manager will stay in  RUN state even when no one requests RUN. 
         This duration should be long  at least as long as a SW-Cs needs.
         to request RUN. 
         Multiplicity: 1 
         Type EcucFloatParamDef 
         Default value: 0.0
         Post-Build Variant Value: true
         ConfigurationClass 
           Pre-compile time -
           Link time - 
           Post-build time X VARIANT-POST-BUILD 
         Scope / Dependency
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_120</srcid><srcstatus/><internalId>970</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_130</srcid><srcstatus/><internalId>971</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_140</srcid><srcstatus/><internalId>972</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>525</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2762</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      The ECU State Manager module shall provide AUTOSAR ports for the following
      functionalities:
          1. requesting RUN
          2. releasing RUN
          3. requesting POST RUN
          4. releasing POST RUN
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_784</srcid><srcstatus/><internalId>894</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_CONF_110</srcid><srcstatus/><internalId>969</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_CONF_160</srcid><srcstatus/><internalId>974</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>526</internalId></specobject>

    <specobject>
      <id>EB.EcuM.EcuM2749</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
      The mode port of the ECU State Manager module shall declare the following modes:
          1. STARTUP
          2. RUN
          3. POST_RUN
          4. SLEEP
          5. WAKE_SLEEP
          6. SHUTDOWN
    &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_840</srcid><srcstatus/><internalId>896</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>527</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>EcuM.EB.ASR40.EcuM002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
        The EcuM configuration shall contain a configuration parameter
        EcuMEnableASR40ServiceAPI in the container
        EcuMGeneral with the following properties:
        Description: Configures whether the AUTOSAR 4.0 service API shall be provided.
        TRUE = Enables AUTOSAR 4.0 service API,
        FALSE = Disables AUTOSAR 4.0 service API.

        Multiplicity:       1
        Type:               EcucBooleanParamDef
        Default value:      false
        ConfigurationClass: Pre-compile time - all variants
        Scope / Dependency: Module
      &lt;/pre&gt;</description>
      <comment>&lt;pre&gt; &lt;/pre&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ImpTest_ASR40_SvcCompDescr</srcid><srcstatus/><internalId>1032</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ImpTest_ASR40_SvcCompDescr_FlexOnly</srcid><srcstatus/><internalId>1036</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>528</internalId></specobject>

    <specobject>
      <id>EcuM.EB.ASR40.EcuM003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
        The EcuM configuration shall contain a configuration parameter
        EcuMDefaultASRServiceAPI in the container
        EcuMGeneral with the following properties:

        Description: Defines the default AUTOSAR service API.
        AUTOSAR_40 = AUTOSAR 4.0 service API is the default one,
        AUTOSAR_R20_11 = AUTOSAR R20-11 service API is the default one,
        NONE = No default AUTOSAR service API is provided.

        Multiplicity: 1
        Type:               EcucEnumerationParamDef
        Range:              AUTOSAR_40, AUTOSAR_R20_11, NONE
        Default value:      AUTOSAR_R20_11
        ConfigurationClass: Pre-compile time - all variants
        Scope / Dependency: Module
      &lt;/pre&gt;</description>
      <comment>&lt;pre&gt; &lt;/pre&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ImpTest_ASR40_SvcCompDescr</srcid><srcstatus/><internalId>1032</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ImpTest_ASR40_SvcCompDescr_FlexOnly</srcid><srcstatus/><internalId>1036</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>529</internalId></specobject>

    <specobject>
      <id>EcuM.EB.ASR40.EcuM004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
          AUTOSAR 4.0 interface elements shall be placed in AUTOSAR package
          /AUTOSAR_EcuM/ASR40 if the pre-compile time configuration switch
          EcuMEnableASR40ServiceAPI = true.
      &lt;/pre&gt;</description>
      <comment>
        see
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/AUTOSAR_3.2_in_4.0#Service_modules_.28e.g..2C_Dcm.29
        (date: 19:47, 26 July 2012)
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ImpTest_ASR40_SvcCompDescr</srcid><srcstatus/><internalId>1032</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ImpTest_ASR40_SvcCompDescr_FlexOnly</srcid><srcstatus/><internalId>1036</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>530</internalId></specobject>

    <specobject>
      <id>EcuM.EB.ASR40.EcuM006</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
        AUTOSAR 4.0 interface elements shall be placed in AUTOSAR package
        /AUTOSAR_EcuM if the pre-compile time configuration switch
        DefaultASRServiceAPI = AUTOSAR_40.
      &lt;/pre&gt;</description>
      <comment>
        see
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/AUTOSAR_3.2_in_4.0#Service_modules_.28e.g..2C_Dcm.29
        (date: 19:47, 26 July 2012)
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ImpTest_ASR40_SvcCompDescr</srcid><srcstatus/><internalId>1032</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ImpTest_ASR40_SvcCompDescr_FlexOnly</srcid><srcstatus/><internalId>1036</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>531</internalId></specobject>

    <specobject>
      <id>EcuM.EB.ASR40.EcuM009</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
        The AUTOSAR 4.0 implementation and internal behavior elements of the EcuM Service Component
        shall be infixed with _ASR40_ and placed in AUTOSAR package
        /AUTOSAR_EcuM if the pre-compile time configuration switch
        EcuMEnableASR40ServiceAPI = true.
        
        If an element name contains no "_" then a postfix _ASR40 shall be aplied instead of the infix.
      &lt;/pre&gt;</description>
      <comment>
        see
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/AUTOSAR_3.2_in_4.0#Service_modules_.28e.g..2C_Dcm.29
        (date: 19:47, 26 July 2012)
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ImpTest_ASR40_SvcCompDescr</srcid><srcstatus/><internalId>1032</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ImpTest_ASR40_SvcCompDescr_FlexOnly</srcid><srcstatus/><internalId>1036</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>532</internalId></specobject>

    <specobject>
      <id>EcuM.EB.ASR40.EcuM011</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
        The AUTOSAR 4.0 implementation and internal behavior elements of the EcuM Service Component
        shall be placed in AUTOSAR package /AUTOSAR_EcuM
        if the pre-compile time configuration switch
        DefaultASRServiceAPI = AUTOSAR_40.

        Note: These elements are not infixed and exist additionally to
        EcuM.EB.ASR40.EcuM009 (i.e., this requirement is not conflicting).
      &lt;/pre&gt;</description>
      <comment>
        see
        http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/AUTOSAR_3.2_in_4.0#Service_modules_.28e.g..2C_Dcm.29
        (date: 19:47, 26 July 2012)
      </comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ImpTest_ASR40_SvcCompDescr</srcid><srcstatus/><internalId>1032</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ImpTest_ASR40_SvcCompDescr_FlexOnly</srcid><srcstatus/><internalId>1036</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>533</internalId></specobject>

    <specobject>
      <id>EcuM.EB.ASR40.EcuM017</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
        The files EcuM_Rte.c and
        EcuM_ASR40_Rte.c shall include EcuM_BSW.h and
        Rte_EcuM.h
      &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM_ASR40_Rte.c_40</srcid><srcstatus/><internalId>803</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_ASR40_Rte.c_45</srcid><srcstatus/><internalId>804</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_Rte.c_40</srcid><srcstatus/><internalId>821</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_Rte.c_49</srcid><srcstatus/><internalId>823</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>534</internalId></specobject>

    <specobject>
      <id>EcuM.EB.ASR40.EcuM100</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
        For all APIs called in the implementation
        of the Rte/SWC API,
        the file EcuM.h shall provide the following macro definition
        instead of the function declaration

        #define EcuM_&amp;lt;APIName&amp;gt; EcuM_ASR40_&amp;lt;APIName&amp;gt;

        Note: For AUTOSAR 4.0, this concerns the APIs
          - EcuM_ShutdownTarget
          - EcuM_BootTarget
          - EcuM_StateRequest
          - EcuM_CurrentMode
      &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;See AUTOSAR 3.2 support proof of concept Svc project
      http://wiki.elektrobit.com/index.php/Project:EB_tresos/Architecture/AUTOSAR_3.2_in_4.0#Example_module_.28Svc.29
      &lt;/pre&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_ImpTest_ASR40APIs</srcid><srcstatus/><internalId>1033</internalId></linkedfrom><linkedfrom><srcid>TS_EcuM_ImpTest_ASR40APIs_FlexOnly</srcid><srcstatus/><internalId>1037</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM.h_32</srcid><srcstatus/><internalId>667</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM.h_42</srcid><srcstatus/><internalId>668</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM.h_50</srcid><srcstatus/><internalId>669</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM.h_58</srcid><srcstatus/><internalId>670</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM.h_66</srcid><srcstatus/><internalId>671</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM.h_74</srcid><srcstatus/><internalId>672</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM.h_82</srcid><srcstatus/><internalId>673</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM.h_90</srcid><srcstatus/><internalId>674</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM.h_98</srcid><srcstatus/><internalId>675</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>535</internalId></specobject>

    <specobject>
      <id>EcuM.EB.ASR40.EcuM101</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
        For each AUTOSAR 4.0 API called in the implementation
        of the Rte/SWC API as defined in the EcuM Service Component,
        the file EcuM_BSW.h shall provide the
        function declaration, where the API name and the
        module specific parameter and return types are infixed with _ASR40_.

        Note: This concerns the following AUTOSAR 4.0 APIs:
          - EcuM_ShutdownTarget
          - EcuM_BootTarget
          - EcuM_StateRequest
          - EcuM_CurrentMode
      &lt;/pre&gt;</description>
      <furtherinfo>WRN.impl.needscoverage.count - This requirement is linked
        to each EcuM API with an ASR40 infix.
      </furtherinfo>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_ImpTest_ASR40APIs</srcid><srcstatus/><internalId>1033</internalId></linkedfrom><linkedfrom><srcid>TS_EcuM_ImpTest_ASR40APIs_FlexOnly</srcid><srcstatus/><internalId>1037</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_BSW.h_392</srcid><srcstatus/><internalId>680</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_BSW.h_463</srcid><srcstatus/><internalId>681</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_BSW.h_531</srcid><srcstatus/><internalId>682</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_BSW.h_565</srcid><srcstatus/><internalId>683</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_BSW.h_587</srcid><srcstatus/><internalId>684</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_BSW.h_612</srcid><srcstatus/><internalId>685</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_BSW.h_650</srcid><srcstatus/><internalId>686</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_BSW.h_821</srcid><srcstatus/><internalId>687</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_BSW.h_843</srcid><srcstatus/><internalId>688</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_BSW.h_864</srcid><srcstatus/><internalId>689</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_BSW.h_888</srcid><srcstatus/><internalId>690</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_BootTarget.h_98</srcid><srcstatus/><internalId>703</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_BootTarget.h_117</srcid><srcstatus/><internalId>704</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>536</internalId></specobject>

    <specobject>
      <id>EcuM.EB.ASR40.EcuM103</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
        For each AUTOSAR 4.0 API called in the implementation
        of the Rte/SWC API,
        the file EcuM_BSW_Types.h shall provide the AUTOSAR 4.0
        macro and type definitions with the infix _ASR40_
        required only if these macro and type definitions are not already
        provided via the Rte file Rte_EcuM.h.

        Note: This concerns the following AUTOSAR 4.0 typedefs:
        EcuM_StateType, EcuM_BootTargetType, EcuM_ModeType
      &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_ImpTest_ASR40APIs</srcid><srcstatus/><internalId>1033</internalId></linkedfrom><linkedfrom><srcid>TS_EcuM_ImpTest_ASR40Types</srcid><srcstatus/><internalId>1034</internalId></linkedfrom><linkedfrom><srcid>TS_EcuM_ImpTest_ASR40APIs_FlexOnly</srcid><srcstatus/><internalId>1037</internalId></linkedfrom><linkedfrom><srcid>TS_EcuM_ImpTest_ASR40Types_FlexOnly</srcid><srcstatus/><internalId>1038</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_BSW_Types.h_533</srcid><srcstatus/><internalId>695</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_BSW_Types.h_548</srcid><srcstatus/><internalId>697</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_BSW_Types.h_559</srcid><srcstatus/><internalId>699</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_BSW_Types.h_592</srcid><srcstatus/><internalId>701</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>537</internalId></specobject>

    <specobject>
      <id>EcuM.EB.ASR40.EcuM105</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
        For each AUTOSAR 4.0 API called in the implementation
        of the Rte/SWC API,
        the file EcuM_Types.h shall map all
        macro and type definitions required by these APIs
        to the corresponding macro and type definitions with the infix _ASR40_
        (provided in EcuM_BSW_Types.h).

        Note: This concerns the following AUTOSAR 4.0 typedefs:
        EcuM_StateType, EcuM_BootTargetType, EcuM_ModeType
      &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_ImpTest_ASR40APIs</srcid><srcstatus/><internalId>1033</internalId></linkedfrom><linkedfrom><srcid>TS_EcuM_ImpTest_ASR40Types</srcid><srcstatus/><internalId>1034</internalId></linkedfrom><linkedfrom><srcid>TS_EcuM_ImpTest_ASR40APIs_FlexOnly</srcid><srcstatus/><internalId>1037</internalId></linkedfrom><linkedfrom><srcid>TS_EcuM_ImpTest_ASR40Types_FlexOnly</srcid><srcstatus/><internalId>1038</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/include/EcuM_Types.h_17</srcid><srcstatus/><internalId>711</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_Types.h_28</srcid><srcstatus/><internalId>712</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_Types.h_38</srcid><srcstatus/><internalId>713</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/include/EcuM_Types.h_48</srcid><srcstatus/><internalId>714</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>538</internalId></specobject>

    <specobject>
      <id>EcuM.EB.ASR40.EcuM106</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
        For each AUTOSAR 4.0 API called in the implementation
        of the Rte/SWC API as defined in the EcuM Service Component,
        the file EcuM.c shall implement
        the function with the API name and the
        module specific parameter and return types infixed with _ASR40_.

        Note: This concerns the following AUTOSAR 4.0 APIs:
          - EcuM_ShutdownTarget
          - EcuM_BootTarget
          - EcuM_StateRequest
          - EcuM_CurrentMode
      &lt;/pre&gt;</description>
      <comment>&lt;pre&gt;This also aplies to the functions implemented in EcuM_BootTarget.c&lt;/pre&gt;</comment>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_ImpTest_ASR40APIs</srcid><srcstatus/><internalId>1033</internalId></linkedfrom><linkedfrom><srcid>TS_EcuM_ImpTest_ASR40APIs_FlexOnly</srcid><srcstatus/><internalId>1037</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1459</srcid><srcstatus/><internalId>749</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1525</srcid><srcstatus/><internalId>751</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1649</srcid><srcstatus/><internalId>753</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1754</srcid><srcstatus/><internalId>758</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1829</srcid><srcstatus/><internalId>759</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1877</srcid><srcstatus/><internalId>760</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_1959</srcid><srcstatus/><internalId>761</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_BootTarget.c_67</srcid><srcstatus/><internalId>816</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_BootTarget.c_128</srcid><srcstatus/><internalId>819</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>539</internalId></specobject>

    <specobject>
      <id>EcuM.EB.ASR40.EcuM109</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
        If the pre-compile time configuration switch
        EcuMEnableASR40ServiceAPI=true, then
        for each AUTOSAR 4.0 API called in the implementation
        of the Rte/SWC API as defined in the EcuM Service Component,
        the file EcuM_ASR40_Rte.c shall implement
        this function with a simple call to the corresponding AUTOSAR 4.0
        EcuM BSW API.

        Note: This concerns the following AUTOSAR 4.0 APIs:
          - EcuM_ShutdownTarget
          - EcuM_BootTarget
          - EcuM_StateRequest
          - EcuM_CurrentMode
      &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ImpTest_ASR40Call</srcid><srcstatus/><internalId>1035</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ImpTest_ASR40Call_FlexOnly</srcid><srcstatus/><internalId>1039</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM_ASR40_Rte.c_160</srcid><srcstatus/><internalId>805</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_ASR40_Rte.c_175</srcid><srcstatus/><internalId>806</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_ASR40_Rte.c_186</srcid><srcstatus/><internalId>807</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_ASR40_Rte.c_195</srcid><srcstatus/><internalId>808</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_ASR40_Rte.c_205</srcid><srcstatus/><internalId>809</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_ASR40_Rte.c_219</srcid><srcstatus/><internalId>810</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_ASR40_Rte.c_233</srcid><srcstatus/><internalId>811</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_ASR40_Rte.c_242</srcid><srcstatus/><internalId>812</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_ASR40_Rte.c_251</srcid><srcstatus/><internalId>813</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>540</internalId></specobject>

    <specobject>
      <id>EcuM.EB.ASR40.EcuM110</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>&lt;pre&gt;
        If the pre-compile time configuration switch
        DefaultASRServiceAPI=AUTOSAR_40, then
        for each AUTOSAR 4.0 API called in the implementation
        of the Rte/SWC API as defined in the EcuM Service Component,
        the file EcuM_Rte.c shall implement
        this function with a simple call to the corresponding AUTOSASR 4.0
        EcuM BSW API.

        Note: This concerns the following AUTOSAR 4.0 APIs:
          - EcuM_ShutdownTarget
          - EcuM_BootTarget
          - EcuM_StateRequest
          - EcuM_CurrentMode
      &lt;/pre&gt;</description>
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ImpTest_ASR40Call</srcid><srcstatus/><internalId>1035</internalId></linkedfrom><linkedfrom><srcid>TS_ECUM_ImpTest_ASR40Call_FlexOnly</srcid><srcstatus/><internalId>1039</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM_Rte.c_184</srcid><srcstatus/><internalId>824</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_Rte.c_196</srcid><srcstatus/><internalId>825</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_Rte.c_207</srcid><srcstatus/><internalId>826</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_Rte.c_216</srcid><srcstatus/><internalId>827</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_Rte.c_226</srcid><srcstatus/><internalId>828</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_Rte.c_240</srcid><srcstatus/><internalId>829</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_Rte.c_254</srcid><srcstatus/><internalId>830</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_Rte.c_263</srcid><srcstatus/><internalId>831</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_Rte.c_272</srcid><srcstatus/><internalId>832</internalId></linkedfrom><linkedfrom><srcid>src/Autosar/src/EcuM_Rte.c_316</srcid><srcstatus/><internalId>833</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>541</internalId></specobject>

  </specobjects>
    <specobjects doctype="man">
    <specobject>
      <id>EcuM.man.EcuM2989</id>
      <status>approved</status>
      <shortdesc>Manual review of filenames provided by our implementation</shortdesc>
      <version>1</version>
      <furtherinfo>This review shall be carried out for each external release.</furtherinfo>
      <verifycrit>Review is successful when fhe filenames of C source files provided by our implementation conforming to the pattern EcuM_xxx.c.</verifycrit>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2989</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>33</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>542</internalId></specobject>
    <specobject>
      <id>EcuM.man.ResourceConsumptionEcuMFlex</id>
      <status>approved</status>
      <source>EB manual test</source>
      <version>1</version>
      <description>
        Build compile test EcuM_ComTest_ResourceConsumptionFlex on TC29XT and get the RAM and ROM consumption
        from the automatically generated EcuM_ComTest_ResourceConsumptionFlex_codesize.xml file located either
        under LogBase\CodeSize on a testsystem build or under the build\CodeSize directory of EcuM's working
        copy in case of a local build.
        VP(EcuM.EB.Dsn.EcuMFlex.ROMConsumption_RefCfg): Verify the ROM consumption is less that the threshold
          specified in the requirement.
        VP(EcuM.EB.Dsn.EcuMFlex.RAMConsumption_RefCfg): Verify the RAM consumption is less that the threshold
          specified in the requirement.

        If the consumption exceeds the threshold, a consumption analysis shall be performed to
        determine the cause of the additional resource consumption.
        The result of the analysis shall trigger either:
        - an update of the resource view in the design and the existing threshold if there is a
          rationale for the additional resource consumption
        OR
        - measures to reduce the additional resource consumption below the existing threshold
          if there is no rationale for the additional resource consumption.
      </description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.Dsn.EcuMFlex.ROMConsumption_RefCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>925</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.Dsn.EcuMFlex.RAMConsumption_RefCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>923</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>543</internalId></specobject>
    <specobject>
      <id>EcuM.man.ResourceConsumptionEcuMFixed</id>
      <status>approved</status>
      <source>EB manual test</source>
      <version>1</version>
      <description>
        Build compile test EcuM_ComTest_ResourceConsumptionFixed on TC29XT and get the RAM and ROM consumption
        from the automatically generated EcuM_ComTest_ResourceConsumptionFixed_codesize.xml file located either
        under LogBase\CodeSize on a testsystem build or under the build\CodeSize directory of EcuM's working
        copy in case of a local build.
        VP(EcuM.EB.Dsn.EcuMFixed.ROMConsumption_RefCfg): Verify the ROM consumption is less that the threshold
          specified in the requirement.
        VP(EcuM.EB.Dsn.EcuMFixed.RAMConsumption_RefCfg): Verify the RAM consumption is less that the threshold
          specified in the requirement.

        If the consumption exceeds the threshold, a consumption analysis shall be performed to
        determine the cause of the additional resource consumption.
        The result of the analysis shall trigger either:
        - an update of the resource view in the design and the existing threshold if there is a
          rationale for the additional resource consumption
        OR
        - measures to reduce the additional resource consumption below the existing threshold
          if there is no rationale for the additional resource consumption.
      </description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.Dsn.EcuMFixed.ROMConsumption_RefCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>926</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.Dsn.EcuMFixed.RAMConsumption_RefCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>924</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>544</internalId></specobject>
  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>EcuM.EB.DBGINST001</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        Every public API of the module shall have debug instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_DBGINST_001</srcid><srcstatus/><internalId>927</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>545</internalId></specobject>

    <specobject>
      <id>EcuM.EB.DBGINST002</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The parameter of a API shall be available in the entry instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_DBGINST_001</srcid><srcstatus/><internalId>927</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>546</internalId></specobject>

    <specobject>
      <id>EcuM.EB.DBGINST003</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The parameter of a API shall be available in the exit instrumentation.
        If the API has a return value, the very first parameter of the macro shall contain the expected return value.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_DBGINST_001</srcid><srcstatus/><internalId>927</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>547</internalId></specobject>

    <specobject>
      <id>EcuM.EB.DBGINST004</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The default implementation of the debug instrumentation shall be an empty macro.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_DBGINST_001</srcid><srcstatus/><internalId>927</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>548</internalId></specobject>

    <specobject>
      <id>EcuM.EB.DBGINST005</id>
      <status>approved</status>
      <source>EB</source>
      <version>1</version>
      <description>
        The module shall include the header files Base_Dbg.h in order to allow changing the default implementation of the debug instrumentation.
      </description>
      <comment> </comment>
      <!-- Can be tested by an conformance and a compile test -->
      <needscoverage>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_DBGINST_001</srcid><srcstatus/><internalId>927</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>549</internalId></specobject>

  </specobjects>
    <specobjects doctype="swurs">

    <specobject>
      <id>EcuM.EB.Interface.Consistency</id>
       <status>approved</status>
       <source>EB</source>
       <version>1</version>
       <description>
        The module shall provide a mechanism to guarantee consistency of interfaces and
        types between its implementation and its code stub.
       </description>
       <comment>
        The code stub of a module shall provide the same external view than the module itself.
        This is mandatory because unit test of modules test against the code stubs of
        adjacent modules. Inconsistent stubs may result in the situation that incompatible
        interfaces are not detected as unit test stage.
       </comment>
       <verifycrit>
        Create a compile test with two permutations that call all interfaces of a module
        (in both permutations).
        p0: Behave like a regular compile test; call the module generator and compile against
        the implementation of the module.
        p1: Do not generate module code and do not compile the implementation of the module.
        Instead the module shall be replaced with its own code stub.
       </verifycrit>
       <needscoverage>
          <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_EcuM_VerifyCodeStub</srcid><srcstatus/><internalId>928</internalId></linkedfrom></coveredby></needscov>
       <containerCovstatus>covered</containerCovstatus></needscoverage>
       
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>550</internalId></specobject>

  </specobjects>
    <specobjects doctype="dev">
    <specobject>
      <id>dev.EcuM.AlarmClock</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>330</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>277</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04069</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>325</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04086</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>340</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04087</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>341</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04088</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>342</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04070</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>326</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04071</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>327</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04072</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>328</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04073</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>329</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04089</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>343</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>284</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>285</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM3013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>40</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04054</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>312</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04055</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>313</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04056</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>314</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04057</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>315</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04058</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>316</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04059</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>317</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04060</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>318</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>268</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04061</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>319</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04062</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>320</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04063</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>321</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04064</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>322</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>352</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>551</internalId></specobject>
    <specobject>
      <id>dev.EcuM.DefensiveBehaviour</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>356</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4047</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>73</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>552</internalId></specobject>
    <specobject>
      <id>dev.EcuM.MultiCore.DriverInitList</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>374</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4013</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>47</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>553</internalId></specobject>
    <specobject>
      <id>dev.EcuM.WkUpNotificationMadeDeferred</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>416</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02645</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>182</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04140</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>386</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>554</internalId></specobject>
    <specobject>
      <id>dev.EcuM.DebuggingSupport</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>433</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4035</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>67</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4036</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>68</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4037</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>69</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>555</internalId></specobject>
    <specobject>
      <id>dev.EcuM.NoProvisionOf_EcuM_GeneratedTypes.h</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>457</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2992</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>35</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>556</internalId></specobject>
    <specobject>
      <id>dev.EcuM.NoHashValueComputation</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>479</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02794</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>195</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02795</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>196</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02796</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>197</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02798</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>198</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02799</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>199</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>557</internalId></specobject>
    <specobject>
      <id>dev.EcuM.NoDefaultWakeupSourceReporting</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>508</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02601</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>178</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_04040.Bitfield</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>400</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>558</internalId></specobject>
    <specobject>
      <id>dev.EcuM.AutomaticDetInitialization</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>530</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2783</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>22</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>559</internalId></specobject>
    <specobject>
      <id>dev.EcuM.FileInclusion</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>555</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM3025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>44</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>560</internalId></specobject>
    <specobject>
      <id>dev.EcuM.DisableEnableInterrupts</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>576</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>561</internalId></specobject>
    <specobject>
      <id>dev.EcuM.MulticoreShutdownSynchronization.</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>598</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>562</internalId></specobject>
    <specobject>
      <id>dev.EcuM.ExpectedInterfaceCanSM.</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>620</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02858</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>563</internalId></specobject>
    <specobject>
      <id>dev.EcuM.AdditionalExpectedInterfaces.</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>650</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02858</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>564</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuMOSResource</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>667</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>565</internalId></specobject>
    <specobject>
      <id>dev.EcuM.MemMap</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>686</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2862</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>566</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuMWakeupSourcePolling</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>702</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>567</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuMSleepModeSuspend</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>718</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>568</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuMMainFunctionPeriod</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>738</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>569</internalId></specobject>
    <specobject>
      <id>dev.EcuM.MultiplOfEcuMResetReasonRef</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>761</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.ECUM128_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>5</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>570</internalId></specobject>
    <specobject>
      <id>dev.EcuM.MultiCoreGoSleepSequence</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>782</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR43.SWS_EcuM_04023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>82</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR43.SWS_EcuM_04027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>84</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>571</internalId></specobject>
    <specobject>
      <id>dev.EcuM.MultiCorePollSequence</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>805</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR43.SWS_EcuM_04025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>83</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR43.SWS_EcuM_04029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>85</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM3020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>42</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>572</internalId></specobject>
    <specobject>
      <id>dev.EcuM.StartPostOsSequence</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>819</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02932</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>573</internalId></specobject>
    <specobject>
      <id>dev.EcuM.OffPreOsReset</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>833</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>574</internalId></specobject>
    <specobject>
      <id>dev.EcuM.SlaveCoreHaltSeq</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>845</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>575</internalId></specobject>
    <specobject>
      <id>dev.EcuM.SlaveCorePbConfig</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>857</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>576</internalId></specobject>
    <specobject>
      <id>dev.EcuM.ShutdownTargetSleep</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>869</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04092</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>345</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>577</internalId></specobject>
    <specobject>
      <id>dev.EcuM.DetErrorCodes</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>881</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>262</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>578</internalId></specobject>
    <specobject>
      <id>dev.EcuM.RuntimeErrors</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>893</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_91003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>394</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>579</internalId></specobject>
    <specobject>
      <id>dev.EcuM.DevelopmentErrors</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>905</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>580</internalId></specobject>
    <specobject>
      <id>dev.EcuM.DevelopmentErrorsErrorHook</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>917</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>581</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuM_WakeupStatusType</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>929</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04091</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>344</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>582</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuMCheckWakeupTimeout</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>945</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00208</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>136</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>583</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuMSetProgrammableInterrupts</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>957</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00210</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>137</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>584</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuMPartitionRef</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>969</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00217</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>138</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>585</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuMModuleParameter</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>981</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00224</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>140</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>586</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuMDriverInitListBswM</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>993</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00226</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>141</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_91001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>392</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04142</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>387</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>361</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>587</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuMModuleRef</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1008</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00223</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>143</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>588</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuMEcucCoreDefinitionRef</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1020</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00229</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>145</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>391</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>589</internalId></specobject>
    <specobject>
      <id>dev.EcuM.ParentDriverInitListBswM</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1033</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>590</internalId></specobject>
    <specobject>
      <id>dev.EcuM.MultiplicityOfEcuMResetReasonRefEcuMComMChannelRef</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1046</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>591</internalId></specobject>
    <specobject>
      <id>dev.EcuM.MultiplicityOfEcuMModuleService</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1060</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>592</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuMWakeupSourceIdConfigRange</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1080</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>593</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuMFixedConfiguration</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1092</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>594</internalId></specobject>
    <specobject>
      <id>dev.EcuM.PostBuildVariantMultiplicity</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1116</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>595</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuMModuleServiceDefaultValue</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1130</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>596</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuM_GoDownHaltPoll</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1145</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_91002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>393</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>597</internalId></specobject>
    <specobject>
      <id>dev.EcuM.GetValidatedWakeupEvents</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1157</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>155</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>598</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuMErrorHookPrototype</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1169</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02904</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>599</internalId></specobject>
    <specobject>
      <id>dev.EcuM.ALDriverRestartCalloutPrototype</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1194</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02923</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>600</internalId></specobject>
    <specobject>
      <id>dev.EcuM.CalloutServiceIDAndHeader</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1206</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02926</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02905</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02916</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02924</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02925</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02919</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02906</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02917</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02928</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02907</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02918</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02929</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02922</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02923</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02920</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02921</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>601</internalId></specobject>
    <specobject>
      <id>dev.EcuM.ServiceInterfacesOnAllCores</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1238</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>347</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>602</internalId></specobject>
    <specobject>
      <id>dev.EcuM.AdditionalShutdownTargetClientServerOperations</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1250</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>264</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>603</internalId></specobject>
    <specobject>
      <id>dev.EcuM.AlarmClockPortInterface</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1262</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>353</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>356</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04113</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>360</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>604</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuM_LoopDetection</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1279</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02411</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04137</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>383</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>605</internalId></specobject>
    <specobject>
      <id>dev.EcuM.CheckWakeup</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1294</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04098</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>350</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02927</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>240</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04096</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>349</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>606</internalId></specobject>
    <specobject>
      <id>dev.EcuM.ModeHandlingRunRequestProtocol</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1308</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00221</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>139</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_91004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>395</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_91005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>396</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>354</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04129</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>376</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>375</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04127</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>374</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04126</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>373</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>355</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>368</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>388</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04120</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>367</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04125</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>372</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>371</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04123</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>370</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04122</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>369</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>389</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04118</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>365</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>364</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04139</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>385</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>363</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>275</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>362</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04119</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>366</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>379</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>378</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04130</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>377</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>273</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>274</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04135</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>381</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04112</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>359</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>272</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>380</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>607</internalId></specobject>
    <specobject>
      <id>dev.EcuM.ConfigVariantPreCompile</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1355</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>608</internalId></specobject>
    <specobject>
      <id>dev.EcuM.ValueClassVariantPreCompile</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1367</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>609</internalId></specobject>
    <specobject>
      <id>dev.EcuM.MultiplicityClassVariantPreCompile</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1379</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>610</internalId></specobject>
    <specobject>
      <id>dev.EcuM.ValueClassPreCompileAllVariants</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1391</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00121</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>99</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00146</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>106</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00186</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>123</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>124</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00195</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>125</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00199</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>128</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>611</internalId></specobject>
    <specobject>
      <id>dev.EcuM.MultiplicityClassPreCompileAllVariants</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1403</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>86</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00102</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>87</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>101</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>115</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00183</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>121</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00184</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>122</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00197</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>126</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00198</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>127</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00200</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>129</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00201</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>130</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00206</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>134</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00207</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>135</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>612</internalId></specobject>
    <specobject>
      <id>dev.EcuM.GetLastShutdownTargetStates</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1416</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02336</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>159</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>613</internalId></specobject>
    <specobject>
      <id>dev.EcuM.EcuM_ResetType</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1430</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>614</internalId></specobject>
    <specobject>
      <id>dev.EcuM.PbConfigDataInconsistent</id>
      <status>approved</status>
      <source>EB release notes</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/public/changelog/Deviations.xml</sourcefile>
      <sourceline>1448</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02904</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>615</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/include/EcuM_Cfg.h.m4_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/include/EcuM_Cfg.h.m4</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2993</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>36</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>616</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/EcuM_Cfg.h.m4_15</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/include/EcuM_Cfg.h.m4</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.PBVariant.Hash</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>472</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>617</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/EcuM_Cfg.h.m4_27</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/include/EcuM_Cfg.h.m4</sourcefile>
      <sourceline>27</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.PBVariant.Relocatable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>618</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/EcuM_Cfg.h.m4_101</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/include/EcuM_Cfg.h.m4</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2983</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>29</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>619</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/EcuM_Cfg.h.m4_292</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/include/EcuM_Cfg.h.m4</sourcefile>
      <sourceline>292</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02957</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>248</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>620</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/EcuM_Cfg.h.m4_340</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/include/EcuM_Cfg.h.m4</sourcefile>
      <sourceline>340</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>280</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>621</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/include/EcuM_Cfg.h.m4_363</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/include/EcuM_Cfg.h.m4</sourcefile>
      <sourceline>363</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>282</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>622</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/EcuM_Cfg.c_16</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/src/EcuM_Cfg.c</sourcefile>
      <sourceline>16</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Config.EcuMMainFunctionPeriod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>623</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/EcuM_Cfg.c_48</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/src/EcuM_Cfg.c</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2862</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>624</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/EcuM_Cfg.c_223</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/src/EcuM_Cfg.c</sourcefile>
      <sourceline>223</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>279</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>625</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/EcuM_Cfg.c_244</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/src/EcuM_Cfg.c</sourcefile>
      <sourceline>244</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02166</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>152</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>626</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/EcuM_Cfg.c_413</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/src/EcuM_Cfg.c</sourcefile>
      <sourceline>413</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.MemoryMapping.InstanceData</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>443</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>627</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/EcuM_Cfg.c_749</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/src/EcuM_Cfg.c</sourcefile>
      <sourceline>749</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_MasterCoreSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>628</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/EcuM_Cfg.c_750</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/src/EcuM_Cfg.c</sourcefile>
      <sourceline>750</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Source.SlaveMasterCoreSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>453</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>629</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/EcuM_Cfg.c_782</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/src/EcuM_Cfg.c</sourcefile>
      <sourceline>782</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_OnCoreSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>630</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/EcuM_Cfg.c_810</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/src/EcuM_Cfg.c</sourcefile>
      <sourceline>810</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_GetCoreInstance</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>631</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/EcuM_Cfg.c_840</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/src/EcuM_Cfg.c</sourcefile>
      <sourceline>840</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_GetMasterCoreInstance</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>632</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/src/EcuM_Cfg.c_887</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/src/EcuM_Cfg.c</sourcefile>
      <sourceline>887</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.StartedCoreStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>633</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/src/EcuM_PBcfg.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/src/EcuM_PBcfg.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2988</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>32</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>634</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_18</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02990</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>259</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>635</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_71</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02905</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>636</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_102</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>102</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02907</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>637</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_134</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>134</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02923</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>638</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_150</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>150</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02904</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>639</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_184</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>184</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_GetResource</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>485</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>640</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_190</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>190</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_ReleaseResource</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>486</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>641</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_197</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>197</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_StartCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>487</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>642</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_207</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>207</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_StartOS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>488</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>643</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_213</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>213</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_ShutdownOS</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>489</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>644</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_220</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>220</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_ShutdownAllCores</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>490</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>645</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_227</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>227</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_GetCoreID</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>491</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>646</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_238</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>238</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_McuSetMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>492</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>647</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_244</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>244</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_McuGetResetReason</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>493</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>648</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_256</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>256</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>649</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_269</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>269</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02906</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>650</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_288</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>288</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02916</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>651</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_299</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>299</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02917</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>652</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_310</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>310</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02918</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>653</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_357</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>357</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02919</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>654</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_377</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>377</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02920</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>655</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_397</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>397</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>656</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_441</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>441</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02921</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>657</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_465</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>465</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02922</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>658</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_504</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>504</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02924</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>659</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_534</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>534</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02925</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>660</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_565</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>565</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02926</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>661</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_620</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>620</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02928</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>662</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_634</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>634</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02929</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>663</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate/templates/EcuM_Callout_Stubs.c_689</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate/templates/EcuM_Callout_Stubs.c</sourcefile>
      <sourceline>689</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_OnCoreSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>664</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_macros/EcuM_Checks.m_32</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_macros/EcuM_Checks.m</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2720</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>15</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>665</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/EcuM.h_12</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM.h</sourcefile>
      <sourceline>12</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2862</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>666</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM.h_32</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM.h</sourcefile>
      <sourceline>32</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>667</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM.h_42</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM.h</sourcefile>
      <sourceline>42</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>668</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM.h_50</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM.h</sourcefile>
      <sourceline>50</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>669</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM.h_58</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM.h</sourcefile>
      <sourceline>58</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>670</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM.h_66</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM.h</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>671</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM.h_74</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM.h</sourcefile>
      <sourceline>74</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>672</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM.h_82</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM.h</sourcefile>
      <sourceline>82</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>673</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM.h_90</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM.h</sourcefile>
      <sourceline>90</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>674</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM.h_98</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM.h</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>675</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM.h_109</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM.h</sourcefile>
      <sourceline>109</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.PBVariant.IsValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>676</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/EcuM_BSW.h_29</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW.h</sourcefile>
      <sourceline>29</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2991</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>34</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>677</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW.h_41</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW.h</sourcefile>
      <sourceline>41</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02664</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>183</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>678</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW.h_254</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW.h</sourcefile>
      <sourceline>254</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2676</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>12</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>679</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW.h_392</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW.h</sourcefile>
      <sourceline>392</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>680</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW.h_463</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW.h</sourcefile>
      <sourceline>463</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>681</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW.h_531</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW.h</sourcefile>
      <sourceline>531</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>682</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW.h_565</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW.h</sourcefile>
      <sourceline>565</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>683</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW.h_587</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW.h</sourcefile>
      <sourceline>587</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>684</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW.h_612</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW.h</sourcefile>
      <sourceline>612</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>685</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW.h_650</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW.h</sourcefile>
      <sourceline>650</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>686</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW.h_821</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW.h</sourcefile>
      <sourceline>821</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>687</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW.h_843</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW.h</sourcefile>
      <sourceline>843</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>688</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW.h_864</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW.h</sourcefile>
      <sourceline>864</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>689</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW.h_888</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW.h</sourcefile>
      <sourceline>888</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>690</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/EcuM_BSW_Types.h_501</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW_Types.h</sourcefile>
      <sourceline>501</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_04040.Range</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>399</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>691</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW_Types.h_510</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW_Types.h</sourcefile>
      <sourceline>510</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04041</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>307</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>692</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW_Types.h_521</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW_Types.h</sourcefile>
      <sourceline>521</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_04044_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>413</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>693</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW_Types.h_524</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW_Types.h</sourcefile>
      <sourceline>524</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04044</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>308</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>694</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW_Types.h_533</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW_Types.h</sourcefile>
      <sourceline>533</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>695</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW_Types.h_542</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW_Types.h</sourcefile>
      <sourceline>542</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4039</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>70</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>696</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW_Types.h_548</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW_Types.h</sourcefile>
      <sourceline>548</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>697</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW_Types.h_553</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW_Types.h</sourcefile>
      <sourceline>553</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4067</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>78</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>698</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW_Types.h_559</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW_Types.h</sourcefile>
      <sourceline>559</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>699</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW_Types.h_566</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW_Types.h</sourcefile>
      <sourceline>566</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04045</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>309</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>700</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW_Types.h_592</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW_Types.h</sourcefile>
      <sourceline>592</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>701</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BSW_Types.h_598</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BSW_Types.h</sourcefile>
      <sourceline>598</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4042</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>71</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>702</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/EcuM_BootTarget.h_98</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BootTarget.h</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>703</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_BootTarget.h_117</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_BootTarget.h</sourcefile>
      <sourceline>117</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>704</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/EcuM_Cbk.h_6</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_Cbk.h</sourcefile>
      <sourceline>6</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2994</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>37</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>705</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_Cbk.h_552</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_Cbk.h</sourcefile>
      <sourceline>552</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_PreHaltSlave</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>456</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>706</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/EcuM_Int.h.m4_16</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_Int.h.m4</sourcefile>
      <sourceline>16</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.DetInclusion</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>482</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>707</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_Int.h.m4_101</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_Int.h.m4</sourcefile>
      <sourceline>101</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.MultipleInstanceDetErrorHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>708</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_Int.h.m4_128</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_Int.h.m4</sourcefile>
      <sourceline>128</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.MultipleInstanceDetErrorHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>709</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_Int.h.m4_338</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_Int.h.m4</sourcefile>
      <sourceline>338</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.DataStructure.EcuM_CoreContextType</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>442</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>710</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/include/EcuM_Types.h_17</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_Types.h</sourcefile>
      <sourceline>17</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>711</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_Types.h_28</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_Types.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>712</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_Types.h_38</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_Types.h</sourcefile>
      <sourceline>38</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>713</internalId></specobject>
    <specobject>
      <id>src/Autosar/include/EcuM_Types.h_48</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/include/EcuM_Types.h</sourcefile>
      <sourceline>48</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>714</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_60</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>60</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM3023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>715</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_90</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>90</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.Version.Check</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>401</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>716</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_182</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>182</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.MemMap</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>463</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>717</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_549</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>549</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02813</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>718</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_581</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>581</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>719</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_612</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>612</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.CallingContext.MasterCoreOnly</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>720</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_622</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>622</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>721</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_655</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>655</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>722</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_683</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>683</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02756</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>191</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>723</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_772</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>772</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>724</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_793</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>793</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>725</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_798</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>798</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>726</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_830</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>830</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Sleep</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>415</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>727</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_899</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>899</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Source.SlaveCore.PreHalt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>728</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_900</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>900</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMPreHaltSlaveCalloutEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>729</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_925</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>925</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>730</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_960</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>960</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>269</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>731</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1064</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1064</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02171</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>153</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>732</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1088</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1088</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02980</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>257</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>733</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1125</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1125</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>734</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1133</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1133</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>735</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1139</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1139</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>736</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1149</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1149</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02811</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>737</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1161</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1161</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>738</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1176</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1176</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.PBVariant.WrongInitConfigParameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>739</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1192</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1192</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04018</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>292</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02838</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>740</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1209</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1209</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>741</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1212</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1212</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04014</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>288</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>742</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1217</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1217</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.BswMStateIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>743</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1225</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1225</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02812</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>744</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1231</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1231</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>745</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1268</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1268</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>746</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1297</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1297</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>747</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1384</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1384</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>748</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1459</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1459</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>749</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1478</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1478</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02822</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>750</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1525</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1525</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02824</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>751</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1545</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1545</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>752</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1649</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1649</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02825</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>753</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1697</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1697</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_02336_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>754</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1702</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1702</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_02336_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>411</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>755</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1710</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1710</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_02336_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>756</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1715</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1715</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_02336_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>412</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>757</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1754</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1754</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>758</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1829</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1829</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>759</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1877</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1877</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>760</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_1959</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>1959</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>761</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2051</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2051</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.Dsn.Interaction.EcuMMultiCoreWakeupEventHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>922</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02827</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>762</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2068</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2068</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>261</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>763</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2080</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2080</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02828</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>764</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2099</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2099</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02683</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>765</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2121</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2121</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02830</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>766</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2149</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2149</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02831</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>767</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2182</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2182</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>286</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02837</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>768</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2225</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2225</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.BswMStateIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>769</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2229</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2229</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.BswMWakeupIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>770</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2371</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2371</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02826</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>771</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2401</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2401</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04138</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>384</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>772</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2406</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2406</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02572</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>175</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>773</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2421</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2421</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02712</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>189</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>774</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2434</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2434</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02709</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>187</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>775</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2455</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2455</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02829</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>776</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2485</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2485</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02791</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>777</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2488</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2488</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02790</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>778</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2537</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2537</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>779</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2579</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2579</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>780</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2617</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2617</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>781</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2659</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2659</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>782</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2912</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2912</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.BswMStateIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>783</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2916</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2916</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>784</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2938</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2938</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02546</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>785</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2952</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2952</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03010</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>263</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>786</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2962</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2962</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>787</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2977</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2977</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02546</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>169</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>788</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_2994</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>2994</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.BswMStateIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>789</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_3000</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>3000</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>790</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_3041</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>3041</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.Impl.SlaveCoreDriver_RestartList</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>791</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_3051</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>3051</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.BswMStateIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>792</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_3061</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>3061</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.Impl.EcuMBswMWakeupIndicationLastIsBest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>793</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_3331</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>3331</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ComMWakeupIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>794</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_3357</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>3357</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.SchM_Call_ComM_EcuM_WakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>795</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_3361</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>3361</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.SchM_Call_Client_Server_Channel_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>796</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_3404</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>3404</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ComMPNCWakeupIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>797</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_3430</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>3430</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.SchM_Call_ComM_EcuM_PNCWakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>798</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_3434</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>3434</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.SchM_Call_Client_Server_PNC_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>799</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_3498</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>3498</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_SlaveCoreSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>800</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_3499</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>3499</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Source.MasterSlaveCoreSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>452</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>801</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM.c.m4_3519</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM.c.m4</sourcefile>
      <sourceline>3519</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_OnCoreSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>802</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/EcuM_ASR40_Rte.c_40</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_ASR40_Rte.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>803</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_ASR40_Rte.c_45</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_ASR40_Rte.c</sourcefile>
      <sourceline>45</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>804</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_ASR40_Rte.c_160</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_ASR40_Rte.c</sourcefile>
      <sourceline>160</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>805</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_ASR40_Rte.c_175</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_ASR40_Rte.c</sourcefile>
      <sourceline>175</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>806</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_ASR40_Rte.c_186</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_ASR40_Rte.c</sourcefile>
      <sourceline>186</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>807</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_ASR40_Rte.c_195</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_ASR40_Rte.c</sourcefile>
      <sourceline>195</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>808</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_ASR40_Rte.c_205</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_ASR40_Rte.c</sourcefile>
      <sourceline>205</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>809</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_ASR40_Rte.c_219</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_ASR40_Rte.c</sourcefile>
      <sourceline>219</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>810</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_ASR40_Rte.c_233</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_ASR40_Rte.c</sourcefile>
      <sourceline>233</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>811</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_ASR40_Rte.c_242</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_ASR40_Rte.c</sourcefile>
      <sourceline>242</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>812</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_ASR40_Rte.c_251</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_ASR40_Rte.c</sourcefile>
      <sourceline>251</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>813</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/EcuM_BootTarget.c_3</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_BootTarget.c</sourcefile>
      <sourceline>3</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM3023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>43</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>814</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_BootTarget.c_33</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_BootTarget.c</sourcefile>
      <sourceline>33</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.BootTargetSec</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>815</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_BootTarget.c_67</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_BootTarget.c</sourcefile>
      <sourceline>67</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02835</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>816</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_BootTarget.c_78</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_BootTarget.c</sourcefile>
      <sourceline>78</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>817</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_BootTarget.c_103</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_BootTarget.c</sourcefile>
      <sourceline>103</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02247</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>158</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>818</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_BootTarget.c_128</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_BootTarget.c</sourcefile>
      <sourceline>128</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02836</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>819</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_BootTarget.c_139</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_BootTarget.c</sourcefile>
      <sourceline>139</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>820</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/src/EcuM_Rte.c_40</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_Rte.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>821</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_Rte.c_44</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_Rte.c</sourcefile>
      <sourceline>44</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2862</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>25</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>822</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_Rte.c_49</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_Rte.c</sourcefile>
      <sourceline>49</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>534</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>823</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_Rte.c_184</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_Rte.c</sourcefile>
      <sourceline>184</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>824</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_Rte.c_196</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_Rte.c</sourcefile>
      <sourceline>196</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>825</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_Rte.c_207</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_Rte.c</sourcefile>
      <sourceline>207</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>826</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_Rte.c_216</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_Rte.c</sourcefile>
      <sourceline>216</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>827</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_Rte.c_226</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_Rte.c</sourcefile>
      <sourceline>226</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>828</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_Rte.c_240</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_Rte.c</sourcefile>
      <sourceline>240</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>829</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_Rte.c_254</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_Rte.c</sourcefile>
      <sourceline>254</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>830</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_Rte.c_263</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_Rte.c</sourcefile>
      <sourceline>263</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>831</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_Rte.c_272</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_Rte.c</sourcefile>
      <sourceline>272</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>832</internalId></specobject>
    <specobject>
      <id>src/Autosar/src/EcuM_Rte.c_316</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/src/EcuM_Rte.c</sourcefile>
      <sourceline>316</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>833</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_17</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>17</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00225</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>144</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>834</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_84</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>84</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>88</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>835</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_98</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>98</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>120</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>836</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_151</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>151</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>837</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_168</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>168</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00104</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>89</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>838</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_202</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>202</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>839</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_260</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>260</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00107</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>92</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>840</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_298</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>298</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>841</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_337</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>337</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>842</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_379</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>379</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>843</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_417</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>417</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>844</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_584</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>584</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>845</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_663</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>663</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Conf.PBVariant.EcuMEnableDriver</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>846</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_683</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>683</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.Impl.Configuration.EcuMDriverCoreId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>847</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_718</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>718</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>848</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_998</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>998</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.Impl.Configuration.EcuMDriverCoreId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>849</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1032</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1032</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2719</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>14</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>850</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1325</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1325</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Conf.PBVariant.EcuMEnableDriver</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>851</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1345</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1345</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.Impl.Configuration.EcuMDriverCoreId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>852</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1379</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1379</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00131</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>102</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>853</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1415</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1415</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00132</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>103</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>854</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1452</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1452</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>105</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>855</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1476</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1476</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>856</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1502</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1502</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02958</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>249</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>857</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1513</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1513</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00152</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>111</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>858</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1555</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1555</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00150</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>109</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>859</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1620</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1620</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>860</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1665</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1665</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02625</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>181</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>861</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1677</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1677</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00151</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>110</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>862</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1700</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1700</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02165</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>151</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>863</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1714</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1714</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00153</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>112</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>864</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1738</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1738</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.ECUC_EcuM_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>865</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1766</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1766</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>866</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1795</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1795</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.ECUC_EcuM_00128</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>409</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>867</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1941</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1941</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00167</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>113</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>868</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_1954</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>1954</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00204</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>132</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>869</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_2310</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>2310</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00203</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>131</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>870</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_2388</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>2388</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>871</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_2416</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>2416</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>872</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_2502</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>2502</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>873</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_2527</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>2527</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>874</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_2570</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>2570</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00168</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>114</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>875</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_2735</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>2735</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00116</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>98</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>876</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_2748</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>2748</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>877</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_2785</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>2785</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Config.EcuMMainFunctionPeriod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>878</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_2845</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>2845</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Conf.PBVariant.EcuMRelocatablePbcfgEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>879</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_2902</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>2902</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMEnableMulticore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>880</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_2932</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>2932</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMMasterCoreId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>881</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_2963</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>2963</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMInitialCoreId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>882</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_2998</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>2998</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMStartInitialCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>883</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_3027</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>3027</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMPreHaltSlaveCallout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>884</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM.xdm.m4_3076</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM.xdm.m4</sourcefile>
      <sourceline>3076</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>885</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/config/EcuM_EBParameters.xdm.m4_54</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM_EBParameters.xdm.m4</sourcefile>
      <sourceline>54</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMEnableMcalOsCallouts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>886</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM_EBParameters.xdm.m4_72</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM_EBParameters.xdm.m4</sourcefile>
      <sourceline>72</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.EcuMCrossCoreComMWakeup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>887</internalId></specobject>
    <specobject>
      <id>src/Autosar/config/EcuM_EBParameters.xdm.m4_111</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/config/EcuM_EBParameters.xdm.m4</sourcefile>
      <sourceline>111</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.Impl.Conf.EcuMBswMWakeupIndicationLastIsBest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>888</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_Bswmd.arxml.m4_295</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_Bswmd.arxml.m4</sourcefile>
      <sourceline>295</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Bswmd.ProvidedDatas.SetSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>889</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_Bswmd.arxml.m4_301</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_Bswmd.arxml.m4</sourcefile>
      <sourceline>301</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Bswmd.ProvidedDatas.SetSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>890</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_Bswmd.arxml.m4_323</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_Bswmd.arxml.m4</sourcefile>
      <sourceline>323</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Bswmd.RequiredDatas.GetSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>891</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_Bswmd.arxml.m4_329</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_Bswmd.arxml.m4</sourcefile>
      <sourceline>329</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Bswmd.RequiredDatas.GetSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>892</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_Bswmd.arxml.m4_339</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_Bswmd.arxml.m4</sourcefile>
      <sourceline>339</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Bswmd.InternalExclusiveArea</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>446</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>893</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_784</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>784</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB.EcuM.EcuM2762</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>894</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_786</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>786</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>895</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_840</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>840</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EB.EcuM.EcuM2749</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>527</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>896</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_866</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>866</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>897</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_872</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>872</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03011_5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>898</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_892</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>892</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03011_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>899</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_912</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>912</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03011_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>900</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_933</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>933</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03011_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>901</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_948</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>948</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03011_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>902</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1035</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1035</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>903</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1040</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1040</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03012_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>904</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1054</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1054</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03012_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>905</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1236</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1236</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>906</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1251</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1251</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>907</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1285</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1285</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>908</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1291</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1291</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03011_5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>909</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1312</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1312</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03011_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>910</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1333</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1333</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03011_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>911</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1355</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1355</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03011_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>912</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1371</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1371</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03011_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>913</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1400</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1400</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04094</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>81</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>914</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1405</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1405</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03012_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>915</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4_1420</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_interface.arxml.m4</sourcefile>
      <sourceline>1420</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03012_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>916</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_internal.arxml.m4_66</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_internal.arxml.m4</sourcefile>
      <sourceline>66</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>917</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_swcd/swcd/EcuM_swc_internal.arxml.m4_75</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_swcd/swcd/EcuM_swc_internal.arxml.m4</sourcefile>
      <sourceline>75</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>918</internalId></specobject>
  </specobjects>
    <specobjects doctype="impl">
    <specobject>
      <id>src/Autosar/generate_var/xgen/EcuM.xgen_80</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_var/xgen/EcuM.xgen</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.PBVariant.Relocatable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>470</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>919</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/EcuM.xgen_85</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_var/xgen/EcuM.xgen</sourcefile>
      <sourceline>85</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04038</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>305</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>920</internalId></specobject>
    <specobject>
      <id>src/Autosar/generate_var/xgen/EcuM.xgen_88</id>
      <status>approved</status>
      <source>EB source code</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/src/Autosar/generate_var/xgen/EcuM.xgen</sourcefile>
      <sourceline>88</sourceline>
      <version>1</version>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02801</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>200</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>921</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>EcuM.EB.Dsn.Interaction.EcuMMultiCoreWakeupEventHandling</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/project/design/pdf/EcuM_Design-profiled.xml</sourcefile>
      <sourceline>2205</sourceline>
      <version>1</version>
      <description>
                   Each instance of the ECU Manager module shall process the wakeup events of its core.
                   The APIs responsible for wakeup event handling are &lt;code&gt;EcuM_GetPendingWakeupEvents&lt;/code&gt;,
                   &lt;code&gt;EcuM_ClearWakeupEvent&lt;/code&gt;, &lt;code&gt;EcuM_GetValidatedWakeupEvents&lt;/code&gt;
                   and &lt;code&gt;EcuM_GetExpiredWakeupEvents&lt;/code&gt;.
                </description>
      <needscoverage>
        <needscov><needsobj>impl</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>src/Autosar/src/EcuM.c.m4_2051</srcid><srcstatus/><internalId>762</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>922</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>EcuM.EB.Dsn.EcuMFlex.RAMConsumption_RefCfg</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/project/design/pdf/EcuM_Design-profiled.xml</sourcefile>
      <sourceline>7124</sourceline>
      <version>1</version>
      <description>
                  The RAM consumption for the reference configuration of the resource
                  consumption compile test for EcuM Flex must not exceed 80 bytes.
                </description>
      <needscoverage>
        <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.man.ResourceConsumptionEcuMFlex</srcid><srcstatus/><internalId>543</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ResourceConsumptionFlex</srcid><srcstatus/><internalId>935</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>923</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>EcuM.EB.Dsn.EcuMFixed.RAMConsumption_RefCfg</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/project/design/pdf/EcuM_Design-profiled.xml</sourcefile>
      <sourceline>7141</sourceline>
      <version>1</version>
      <description>
                  The RAM consumption for the reference configuration of the resource
                  consumption compile test for EcuM Fixed must not exceed 90 bytes.
                </description>
      <needscoverage>
        <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.man.ResourceConsumptionEcuMFixed</srcid><srcstatus/><internalId>544</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ResourceConsumptionFixed</srcid><srcstatus/><internalId>934</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>924</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>EcuM.EB.Dsn.EcuMFlex.ROMConsumption_RefCfg</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/project/design/pdf/EcuM_Design-profiled.xml</sourcefile>
      <sourceline>7412</sourceline>
      <version>1</version>
      <description>
                  The ROM consumption for the reference configuration of the resource
                  consumption compile test for EcuM Flex must not exceed 3000 bytes.
                </description>
      <needscoverage>
        <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.man.ResourceConsumptionEcuMFlex</srcid><srcstatus/><internalId>543</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ResourceConsumptionFlex</srcid><srcstatus/><internalId>935</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>925</internalId></specobject>
  </specobjects>
    <specobjects doctype="swdd">
    <specobject>
      <id>EcuM.EB.Dsn.EcuMFixed.ROMConsumption_RefCfg</id>
      <status>approved</status>
      <source>Elektrobit Automotive GmbH</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/doc/project/design/pdf/EcuM_Design-profiled.xml</sourcefile>
      <sourceline>7429</sourceline>
      <version>1</version>
      <description>
                  The ROM consumption for the reference configuration of the resource
                  consumption compile test for EcuM Fixed must not exceed 3800 bytes.
                </description>
      <needscoverage>
        <needscov><needsobj>man</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>EcuM.man.ResourceConsumptionEcuMFixed</srcid><srcstatus/><internalId>544</internalId></linkedfrom></coveredby></needscov>
        <needscov><needsobj>swuts</needsobj><objcovstatus>covered</objcovstatus><coveredby><linkedfrom><srcid>TS_ECUM_ResourceConsumptionFixed</srcid><srcstatus/><internalId>934</internalId></linkedfrom></coveredby></needscov>
      <containerCovstatus>covered</containerCovstatus></needscoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>926</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_EcuM_DBGINST_001</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/common_req/EcuM_DbgInst_Trace_APIs.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
   Test Dbg
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  VP: Successful compilation test.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.DBGINST001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>545</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.DBGINST002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>546</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.DBGINST003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>547</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.DBGINST004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>548</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.DBGINST005</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>549</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>927</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_EcuM_VerifyCodeStub</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/build/reqm/common_req/EcuM_VerifyStub_testspec.h</sourcefile>
      <sourceline>7</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    This test verifies that the code stub of the module is consistent with the
    implementation.
  
Test Object: 
    Relocatable post-build configuration macros generation.
  
Test Precondition: 
    Permutation [VerifyStub == true]:
      - Unit test contains its own code stub
      - Module is excluded from generation and compilation
    Permutation [VerifyStub == false]:
      - unit test excludes its own code stub
  
Test Execution: 
    01: Invoke all module APIs
    02: VP(EcuM.EB.Interface.Consistency):
        Unit test compiles (implicitly tested)
  
Test Input: 
  
Test Output: 
    Test is correctly generated and compiled.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.Interface.Consistency</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>550</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>928</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_COMP_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Compile/IN/EcuM_ComTest_01/source/application/test_config.h</sourcefile>
      <sourceline>18</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled when all compiler switches are enabled
    - Verify the generation of symbolic name macros when
      ECUM_PROVIDE_LEGACY_SYMBOLIC_NAMES is defined, that legacy
      symbols names are not provided by EcuM.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2729</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>281</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2634</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>EcuM.ShutdownHook</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>929</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_COMP_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Compile/IN/EcuM_ComTest_02/source/application/test_config.h</sourcefile>
      <sourceline>16</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    - Verify that source code gets compiled when all
      compiler switches are disabled.
    - Verify the generation of symbolic name macros when
      ECUM_PROVIDE_LEGACY_SYMBOLIC_NAMES is not defined, that legacy
      symbols names are not provided by EcuM.
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2729</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2634</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>11</internalId></provcov>
        <provcov>
          <linksto>EcuM.ShutdownHook</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>416</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>930</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_EcuM_ComTest_BootTarget</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Compile/IN/EcuM_ComTest_BootTarget/source/application/test_config.h</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Verify that source code gets compiled when the EB parameter EcuMUseBoottargetSec
      is enabled.
      In this test scenario, the EcuM generates the SEC_ECUM_BOOTTARGET memory section
      and maps the EcuM_BootTarget to this generated memory section.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.BootTargetSec</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>464</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>931</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_EcuM_ComTest_ComMPncOnly</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Compile/IN/EcuM_ComTest_ComMPnc/source/application/test_config.h</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
      Verify that source code gets compiled when an EcuM wakeup source is configured with a 
      ComMPnc reference only.
      In this test scenario, the EcuM configuration doesn't hold also any wakeup source with 
      a ComM channel reference.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ComMPNCWakeupIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>932</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_EcuM_ComTest_NoComM</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Compile/IN/EcuM_ComTest_NoComM/source/application/test_config.h</sourcefile>
      <sourceline>15</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
    &lt;para&gt;
    Verify that source code gets compiled without ComM.
    &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
    None
  
Test Execution: None.
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ComMInterface</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>418</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>933</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_ResourceConsumptionFixed</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Compile/IN/EcuM_ComTest_ResourceConsumptionFixed/source/application/EcuM_ComTest.c</sourcefile>
      <sourceline>55</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    Build the compile test in order to measure the resource (RAM/ROM) consumption
    VP(EcuM.EB.Dsn.EcuMFixed.ROMConsumption_RefCfg): Verify the ROM consumption of the test application
      is below the threshold specified in the requirement.
    VP(EcuM.EB.Dsn.EcuMFixed.RAMConsumption_RefCfg): Verify the ROM consumption of the test application
      is below the threshold specified in the requirement.
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.Dsn.EcuMFixed.ROMConsumption_RefCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>926</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.Dsn.EcuMFixed.RAMConsumption_RefCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>924</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>934</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_ResourceConsumptionFlex</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Compile/IN/EcuM_ComTest_ResourceConsumptionFlex/source/application/EcuM_ComTest.c</sourcefile>
      <sourceline>53</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  &lt;para&gt;
    Build the compile test in order to measure the resource (RAM/ROM) consumption
    VP(EcuM.EB.Dsn.EcuMFlex.ROMConsumption_RefCfg): Verify the ROM consumption of the test application
      is below the threshold specified in the requirement.
    VP(EcuM.EB.Dsn.EcuMFlex.RAMConsumption_RefCfg): Verify the ROM consumption of the test application
      is below the threshold specified in the requirement.
  &lt;/para&gt;
  
Test Object: None.
Test Precondition: 
  
Test Execution: 
  
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.Dsn.EcuMFlex.ROMConsumption_RefCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>925</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.Dsn.EcuMFlex.RAMConsumption_RefCfg</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swdd</linkdestdoctype><linkerror/><internalId>923</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>935</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_SCHM</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Compile/IN/EcuM_ComTest_SchM/source/application/EcuM_Compile_SchM.c</sourcefile>
      <sourceline>40</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
     This test checks that the EcuM module's generator generates a
     syntactically and semantically valid basic software module
     description (BSWMD) when the generator mode "generate_swcd" is
     invoked. It further tests that the SchM exclusive area API is
     correctly generated by the RTE generator based on the EcuM module's
     generated BSWMD.
  
Test Object: None.
Test Precondition: None.
Test Execution: 
    Ts5 build environment steps:
      The module configuration generator produces the BSWMD containing
      the information on the required exclusive areas.  This information
      is then used by the RTE generator to create the required SchM API
      for these exclusive areas. This implicitly verifies that the BSWMD
      is syntactically and semantically correct.  EcuM's static code
      makes use of this API (and the respective #defines) thus causing
      compile/link errors if the BSWMD does not contain the correct
      information.
  
Test Input: 
    Usage of a common ASR configuration having all adjacent ASR modules
    configured.
  
Test Output: 
    Compile succeeds.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.BSWMDGeneration_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>424</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.BSWMDGeneration_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>425</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.BSWMDGeneration_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>426</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>936</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_CONF_01</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/GetVersionInfo_test.c.m4</sourcefile>
      <sourceline>39</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
 To test the EcuM GetVersionInfo API with valid pointer as parameter.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
  Set the Version information values to invalid value before the call of
  EcuM_GetVersionInfo().
  Call EcuM_GetVersionInfo() with a valid pointer.
  Verify the version parameters.

Test Input: 
None

Test Output: 
The version information returned are those that are configured/hardcoded in
the module.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02813</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>206</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2728</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>16</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2729</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>17</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2935</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>26</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00149</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>108</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.CallingContext.MasterSlave</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>937</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_CONF_02</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>160</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test the status of wakeup sources after wakeup by a default wakeup source.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  The reset reason should be MCU_POWER_ON_RESET.
  EcuM must have been initialized just before this test case.

Test Execution: 
  Verify the status of all wakeup sources.

Test Input: 

Test Output: 
  MCU_POWER_ON_RESET is configured as the Reset reason for ECUM_WKSOURCE_POWER.
  Since ECUM_WKSOURCE_POWER is a default wakeup source, the status of
  ECUM_WKSOURCE_POWER will be ECUM_WKSTATUS_VALIDATED.
  Verifies all the configuration loaded successfully
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02623</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02566</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>938</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_03</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>281</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test the loading of post-build confguration and if all modules of StartPreOS
  sequence are initialized correctly and all required callouts are invoked.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM must be initialized.

Test Execution: 
  Verify whether the modules Mcu are initialized with the proper initialization parameters from the post-build
  configuration EcuM_Configuration_1.
  Verify the default shutdown mode and sleep mode.
  Verify the sequence of invocation of drivers configured for StartPreOS.

Test Input: 

Test Output: 
  Mcu, Gpt and Dem_PreInit
  will be initialized with proper parameters.
  Drivers initialized in StartPreOS will be invoked in the configured sequence.
  The shutdown target selected shall be ECUM_STATE_SLEEP.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02411</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02684</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02811</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02859</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>221</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02905</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02559</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM3007</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>38</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02906</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>227</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02730</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02907</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>228</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>95</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00114</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>96</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>94</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00124</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>100</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Conf.PBVariant.DefaultState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
        <provcov>
          <linksto>EcuM.Config.EcuMMainFunctionPeriod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>939</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_04</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>411</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test if all modules of StartPostOS are initialized correctly and all
  required callouts are invoked.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM must have finished the StartPreOS sequence.
  A Wakeup events WKS_TEST_3 must be set during the execution of the function
  EcuM_AL_DriverInitOne.

Test Execution: 
  1. Initialize the call sequence array.
  2. Call EcuM_StartupTwo() for execution of StartPostOS.
  3. VP:
     * Verify whether SchM and BswM initialized properly.
     * Verify the order of invocation of the PostOS inited items.
  4. Call EcuM_GetValidatedWakeupEvents() for retrieving the validated wakeup sources.
  5. VP:
     * Verify whether any wakeup source is validated during initialization(EcuM_Init()).
  6. Call EcuM_MainFunction().
  7. Clear all wakeup events.

Test Input: 

Test Output: 
  EcuM exits the StratPostOS state.
  The modules SchM and BswM are invoked in the correct sequence.
  EcuM finished the startup activities.
  Wakeupevents are handled during initialization: 'WKS_TEST_3' gets validated in EcuM_Init().
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02932</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02838</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02603</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>940</internalId></specobject>
    <specobject>
      <id>TS_EcuM_Slave_Poll_Sequence</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>508</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Test the behaviour of EcuM transition in Sleep (Poll sequence) phase
  during a slave core context.
  01. Verify the value of EcuM_LastShutdownTarget which should be
      updated only during the master core execution of EcuM_GoPoll.
  02. Verify that EcuM_WakeupRestart calls EcuM_AL_DriverRestart() also
      on the slave core.

  This test also verifies that EcuM performs changes when EcuM_GoPoll(),
  EcuM_GoSleep() and EcuM_WakeupRestart() are called both in a master and a slave core context.
  Also the static EcuM_GetResourceScheduler and EcuM_ReleaseResourceScheduler are tested during
  EcuM_GoSleep() and EcuM_WakeupRestart() in both core contexts.

Test Object: None.
Test Precondition: 
  EcuM is initialized.

Test Execution: 
  01. Set the value of EcuM_ShutdownTarget as ECUM_STATE_SLEEP
  02. Simulate the master core is ready, without executing EcuM_GoPoll() on the master core.
  03. Call EcuM_GoPoll() on the slave core.
  04. Verify that the value of EcuM_LastShutdownTarget has not been updated
      with the value of EcuM_ShutdownTarget.
  05. Verify that EcuM_AL_DriverRestart() has been called also from the slave
      core context of EcuM_WakeupRestart().
  06. Call EcuM_GoPoll() on the master core.
  07. Verify that the value of EcuM_LastShutdownTarget has been updated.
  08. Verify that EcuM_AL_DriverRestart() has been called from the master core
      context of EcuM_WakeupRestart().

Test Input: None.
Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMEnableMcalOsCallouts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04030</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>302</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.CallingContext.MasterSlave</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>941</internalId></specobject>
    <specobject>
      <id>TS_EcuM_Poll_Sequence</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>652</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
  To test that EcuM will only signal the status of wakeup sources that are
  re-enabled to BswM when it enters the SLEEP state.

  Test the behavior of EcuM transition in Sleep (Poll sequence) phase and
  transition to Up phase by a succesful wakeup event from a wakeup source
  which requires validation.

  01. Verify the activities in GoPoll Sequence
      - Callout EcuM_EnableWakeupSources() and the parameter
        'wakeupSource'[EcuM.SWS_EcuM_02918, EcuM.SWS_EcuM_02389]
  02. Verify the execution of Poll sequence  [EcuM.SWS_EcuM_02962]
  03. Verify Activities in Poll sequence - Callouts EcuM_SleepActivity() and
      EcuM_CheckWakeup()[EcuM.PollBlockingLoop, EcuM.SWS_EcuM_02928, EcuM.SWS_EcuM_02929]
  04. Verify the activities in Wakeup restart sequence
      [EcuM.SWS_EcuM_02947, EcuM.SWS_EcuM_02562,EcuM.SWS_EcuM_02963, EcuM.EB_Ref.DriverRestartList]
  05. Verify the callout EcuM_DisableWakeupSources() in wakeup restart
      sequence[EcuM.SWS_EcuM_02922]
  06. Verify the parameter of EcuM_DisableWakeupSources()[EcuM.SWS_EcuM_04084]
  07. Verify EcuM is not shutdown when reaches Sleep [EcuM.SWS_EcuM_02951]

Test Object: None.
Test Precondition: 
  01. EcuM is configured with the sleep mode ECUM_SLEEPMODE_0 in which the
      wakeup source WKS_TEST_1 is enabled and produces a not instantly verified
      wakeup event(This wakeup source requires validation and associated to
      ComM channel)
  02. Test callout EcuM_SleepActivity() shall be capable of triggering a wakeup
      event after specified invocation count.
  03. EcuM is initialized and in Up phase.

Test Execution: 
  01. Select the shutdown target as ECUM_STATE_SLEEP.
  02. Prepare a simulated wakeup source event WKS_TEST_1 by the test stubs which
      fire during sleep phase.
  03. Put ECU in sleep phase by calling EcuM_GoPoll()
  04. VP (EcuM.SWS_EcuM_02389, EcuM.SWS_EcuM_02918):  EcuM_EnableWakeupSources() is called to enable
      all wakeup sources related to sleep mode ECUM_SLEEPMODE_0
  05. VP (ECUC_EcuM_00101): Verify the WKS_TEST_1 is configured to ComM Channel
  06. VP (EcuM.SWS_EcuM_02962): Verify the call sequence in Poll sequence
  07. VP (EcuM3020_Refine, EcuM.SWS_EcuM_02928, EcuM.SWS_EcuM_02929, EcuM.EB_Ref.DriverRestartList, EcuM.SWS_EcuM_02963):
      Verify callouts - EcuM_SleepActivity(), EcuM_CheckWakeup(),
      BswM_EcuM_CurrentWakeup(),Mcu_SetMode() and Wakeup restart sequence.
  08. VP(EcuM.SWS_EcuM_02922,EcuM.SWS_EcuM_04084):
      Verify the callout EcuM_DisableWakeupSources() which was executed in
      wakeup validation sequence and the parameter passedis WKS_TEST_1
  09. VP (EcuM.SWS_EcuM_02951): The EcuM does _not_ call ShutdownOS() - This is checked
      implicitly: if ShutdownOS() would be called the test function context
      would not be properly left and the Ts5 test status would remain to be
      set as "not run".
  10. Simulate a wakeup event which is associated to ComM channel. This event
      will be triggered in "Sleep".
  11. Execute Halt sequence.
  12. VP:
     * Verify that wakeup source WKS_TEST_1 is indicated to BSWM.
     * Verify that wakeup source state ECUM_WKSTATUS_NONE is signalled to BswM.

Test Input: None.
Test Output: 
  The wakeup source WKS_TEST_1 is indicated to BSWM.
  The wakeup source state ECUM_WKSTATUS_NONE is indicated to BSWM.
  The wakeup source WKS_TEST_4 is not indicated to BSWM.
</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02837</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>218</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02918</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02389</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>162</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02962</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>EcuM.PollBlockingLoop</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>460</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02928</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>241</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04080</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>335</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02929</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>242</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02963</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02562</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>172</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02947</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>244</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00115</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>97</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB_Ref.DriverRestartList</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>397</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02922</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>235</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04084</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>338</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02951</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4049</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>75</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB_Ref.ECUC_EcuM_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>942</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_06</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>956</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  01. Test the wakeup validation of pending, not validated wakeup events
      of EcuM in Up phase and verifies the call sequences in accordance with
      the SWS for Up phase .
  02. Verify the EcuM_GetValidatedWakeupEvents() wakeup event returns
      the currently validated wakeup events
  03. Verify that "Wakeup validation" will not be executed for a particular
      wakeup source after the wakeup is validated (BswM notification is given).
      This ensures that the validation timer is stopped for this particular
      wakeup source. (EcuM.SWS_EcuM_02710)

Test Object: None.
Test Precondition: 
  EcuM sleep phase(Halt/Poll) shall be executed before this test case and
  has a pending wakeup event after exiting the sleep phase.

Test Execution: 
  01. Load the wakeup source WKS_TEST_1 for simulated wakeup and set the
      sleep activity counter offset to 30(Max count = 32) so that after two
      iteration the callout EcuM_CheckValidation() validates a wakeup event.
  02. Call EcuM_MainFunction() to initiate the wakeup validation sequence.
  03. VP:
      * Check whether callout EcuM_CheckValidation() is invoked by EcuM.
  04. Call EcuM_Mainfunction to check whether indications are provided to ComM and BswM after the
      wakeup is validated.
  05. VP:
      * Verify that the first cleared wakeup source state is equal to ECUM_WKSTATUS_NONE.
      * Verify that the second cleared wakeup source state is equal to ECUM_WKSTATUS_PENDING.
      * Verify that the third cleared wakeup source state is equal to ECUM_WKSTATUS_VALIDATED.
      * Verify whether indications are provided to BswM.
      * Verify the wakeup source validation is indicated to ComM.

Test Input: None.
Test Output: 
  UP phase activities
    EcuM_CheckValidation shall be invoked by EcuM at the start of wakeup
    validation sequence.
    Verify the event is not yet validated.
    The wakeup event get validated in EcuM_CheckValidation() callout.(Simulated
    wakeup validation in the second iteration ).
    The first wakeup source state is equal to ECUM_WKSTATUS_NONE.
    The second wakeup source state is equal to ECUM_WKSTATUS_PENDING.
    The third wakeup source state is equal to ECUM_WKSTATUS_VALIDATED.
    Indications shall be reported to ComM and BswM after the wakeup source
    WKS_TEST_1 is validated.

&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02539</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>168</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02975</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>254</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02925</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>238</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02710</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>188</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02791</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>194</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB_Ref.ECUC_EcuM_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>943</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_07</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>1121</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Test the behaviour of EcuM transition into Sleep (Halt sequence) phase.

  Test also verifies the call sequences in accordance with the
  SWS for Sleep phase(Halt sequence).

  This test also verifies that EcuM_GoHalt() performs changes in both
  master and a slave core context.

Test Object: None.
Test Precondition: 
  EcuM is configured with the sleep mode ECUM_SLEEPMODE_0.

  EcuM is initialized and in Up phase.

Test Execution: 

  Select shutdown target ECUM_STATE_SLEEP.

  Put ECU in sleep phase by calling EcuM_GoHalt()


Test Input: None.
Test Output: 

  Expected behaviour of EcuM in GoSleep, halt and WakeupRestart sequence:

  - EcuM_EnableWakeupSources() is called to enable all wakeup sources related
    to sleep mode ECUM_SLEEPMODE_0 (EcuM.SWS_EcuM_02389)

  - The EcuM does _not_ call ShutdownOS() (EcuM.SWS_EcuM_02951).  This is checked
    implicitly: if ShutdownOS() would be called the test function context
    would not be properly left and the Ts5 test status would remain to be set
    as "not run".

  - call BswM_EcuM_CurrentWakeup() with ECUM_WKSTATUS_NONE (fig 12)

  - disable scheduling (call of GetResource(RES_SCHEDULER), fig 12), this
    cannot be checked with real OS

  - Simulate the slave core is ready by calling EcuM_Send_SlaveCoreReadyPort()

  - EcuM_GoHalt() is called on the master core and EcuM blocks the master core
    until the slave core signalizes that it is ready (during the EcuM_SlaveCoreSync() function execution).

  - EcuM_GoHalt() is called on the slave core and EcuM blocks the slave core
    until the master core signalizes that it is ready (during the EcuM_MasterCoreSync() function execution).

  - EcuM calls the callout EcuM_GenerateRamHash() to check the RAM memory's
    integrity (EcuM.SWS_EcuM_02863)

  - EcuM calls the callouts EcuM_PreHalt()

  - Mcu_SetMode() called with parameter MCU_SLEEP_MODE (fig. 14, no req. ID)

  - EcuM shall be in Halt till a wakeup event occured. (In this case for testing
    purpose the ECU is not halted, which is done by returning from Mcu_SetMode
    test stub).

  - EcuM calls the callouts EcuM_PostHalt()

  - EcuM calls the callout EcuM_CheckRamHash() to check the RAM memory's
    integrity (EcuM.SWS_EcuM_02863)

  - EcuM will not indicate to BswM since no pending wakeup event has occurred.
    (In real scenario the execution reaches this point only when a wakeup event
    is detected. But the particular scenario cannot be simulated in Halt sequence)

  - Mcu_SetMode() called with parameter MCU_NORMAL_MODE. (fig 15)

  - call BswM_EcuM_CurrentWakeup() with ECUM_WKSTATUS_DISABLED (fig 15)

&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02960</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>250</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02963</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04066</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>324</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4048</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>74</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02961</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>251</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02923</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>236</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02918</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>231</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02951</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>245</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.EcuM_MasterCoreSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>427</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.EcuM_SlaveCoreSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>428</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.EcuM_SlaveSyncMask</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>429</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.CallingContext.MasterSlave</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>944</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_08</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>1363</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  01. Test wakeup validation timeout for an un-sucessful wakeup event which requires validation.
  02. Verify EcuM_StopWakeupSources() called in WakeupValidation Sequence [EcuM.SWS_EcuM_02926]
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM should be in the Up Phase.

Test Execution: 
  01. Select shutdown target as ECUM_STATE_SLEEP.
  02. Prepare a simulated wakeup source event WKS_TEST_1 by the test stubs which fire during sleep
      phase
  03. Put ECU in sleep phase by calling EcuM_GoPoll()
  04. Load the test validation timout.
  05. Call EcuM main function until the validation timer expires.
  06. Call EcuM main function.
  07. VP:
      * Verify the order of wakeup sources indicated to BswM.
      * Verify the order of wakeup sources state indicated to BswM.
      * Verify whether the not validated(expired) wakeup source status change is indicated to BswM.
      * Verify the parameter for EcuM_StartWakeupSources().
      * verify the parameters for EcuM_CheckValidation().
      * Verify the validated wakeup events.
      * Verify expired wakeup events.
  08. Call EcuM_ClearWakeupEvent() for WKS_TEST_1.
  09. Call EcuM_GetExpiredWakeupEvents() to get the expired wakeup events.
  10. VP (EcuM.SWS_EcuM_02683):
      * Verify that no wakeup event is expired since it is already cleared.
  11. Call EcuM_SetWakeupEvent with a wakeup source WKS_TEST_1 which requires validation.
  12. Call EcuM_GoHalt() for entering into EcuM Sleep phase.
  13. Load the test validation timout.
  14. Call EcuM main function until the validation timer expires.
  15. Call EcuM main function.
  16. VP:
      * Verify whether the not validated(expired) wakeup source status change is indicated to BswM.

Test Input: 

Test Output: 
  The order of wakeup sources indicated to BswM should be ECUM_WKSMASKALL, WKS_TEST_1, WKS_TEST_1,
  WKS_TEST_1.
  The order of wakeup sources state indicated to BswM should be ECUM_WKSTATUS_NONE,
  ECUM_WKSTATUS_PENDING, ECUM_WKSTATUS_DISABLED, ECUM_WKSTATUS_EXPIRED.
  BswM shall be indicated about the not validated(expired) wakeup source state change in GoPoll
  scenario.
  The parameter for EcuM_StartWakeupSources() shall be WKS_TEST_1.
  No wakeup events shall be validated.
  The expired wakeup event shall be WKS_TEST_1.
  EcuM_GetExpiredWakeupEvents() shall not return any wakeup event after clearing
    with a call of EcuM_ClearWakeupEvent().
  Wait till validation timer expires: BswM shall be indicated about the not validated(expired)
  wakeup source state change in GoHalt.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02496</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02533</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04076</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>332</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04082</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>337</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04081</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>336</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02707</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>186</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02926</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>239</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02831</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02683</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>945</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_09</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>1617</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test a user defined wakeup source which does not require validation.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM is initialized and in Up phase.

Test Execution: 
  1. Set a wakeup event WKS_TEST_3.
  2. Call EcuM_MainFunction() .
  3. VP:
     * Verify the validated wakeup events are indicated to BswM

Test Input: 

Test Output: 
  WKS_TEST_3 is a user defined wakeup source which requires no validation.

  So when EcuM_MainFunction() is called after setting the wakeup event, it gets validated.

  The validated wakeup source WKS_TEST_3 is indicated to BswM.
  &lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00148</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>107</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02566</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>174</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>946</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_10</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>1684</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  01. Test the reporting of the runtime error ECUM_E_RAM_CHECK_FAILED to Det
      when RAM integrity check fails in Halt sequence.
  02. Verify EcuM_ErrorHook() has been called for the failed Ram check [EcuM.SWS_EcuM_04033]
&lt;/para&gt;

Test Object: None.
Test Precondition: 

  EcuM is initialized and in Up phase.


Test Execution: 

  Set the return value of RamHash check to 0.

  Clear the DET stub counts.

  Call EcuM_GoHalt() to enter sleep phase (halt sequence).

  Verify that Generate and Check RamHash has been invoked.

  Call EcuM_MainFunction().

  Verify the reporting of Det runtime error ECUM_E_RAM_CHECK_FAILED to Det.

  Verify that no development error has been reported to DET.


Test Input: 

Test Output: 

  From the Sleep state EcuM_GenerateRamHash() and EcuM_CheckRamHash() shall be
  invoked. (EcuM.SWS_EcuM_02863)

  From the Wakeup state Det runtime error ECUM_E_RAM_CHECK_FAILED shall be reported.

  No development error will be reported to DET.

&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02863</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02904</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>225</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02919</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>232</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02921</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>234</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02987</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>258</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04033</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>304</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>947</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_11</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>1843</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test the EcuM sleep mode.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

  EcuM is initialized and in Up phase.

Test Execution: 

  Select the shutdown target as Sleep and with Sleep mode 1 .


Test Input: 

Test Output: 
  The selected shutdown target shall be ECUM_STATE_SLEEP
  and the selected mode shall be ECUM_SLEEPMODE_1.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00133</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>104</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>948</internalId></specobject>
    <specobject>
      <id>TS_ECUM_NotifyComM</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>1914</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test setting a wakeup event in Sleep and verify notification to ComM if
  the event get validated.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM should be Started up.

Test Execution: 
  01. Clear all wakeup events.
  02. Initialize stubs, callout flags.
  03. Select shutdown target as ECUM_STATE_SLEEP and select a sleep mode for
      entering Poll sequence.
  04. Simulate a wakeup event which is associated to ComM channel. This event
      will be triggered in "Sleep".
  05. Execute Poll sequence.
  06. Simulate validation of this pending event and invoke the Mainfunction.
  07. VP (EcuM.ComMWakeupIndication):
        ComM_GetStatus() has been called to ensure ComM initialization status.
  08. VP (EcuM.ComMWakeupIndication):
        Wakeup has been indicated to ComM via ComM_EcuM_WakeupIndication.
  09. VP (EcuM.SWS_EcuM_04003):
        Wakeup has been indicated to BswM via BswM_EcuM_CurrentWakeup.
  10. Simulate ComM status as "COMM_UNINIT".
  11. Set a wakeup event in sleep which has ComM channel association.
  12. Execute Poll Sequence
  13. Validate the wakeup event which is pending after exiting Sleep
  14. VP (EcuM.ComMWakeupIndication):
        ComM_GetStatus() has been called to ensure ComM initialization status.
  15. VP (EcuM.ComMWakeupIndication):
        Wakeup has not been indicated to ComM via ComM_EcuM_WakeupIndication
        since ComM is not initialized (ComM_GetStatus returned "COMM_UNINIT").

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02962</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02963</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>EcuM.ComMWakeupIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>420</internalId></provcov>
        <provcov>
          <linksto>EcuM.BswMWakeupIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>422</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>949</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_24</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>2089</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test the behavior of EcuM_GetValidatedWakeupEvents() and
  EcuM_ValidateWakeupEvent() for a wakeup event which needs validation and
  for a wakeup event which does not need validation.
&lt;/para&gt;

Test Object: 
  EcuM_GetValidatedWakeupEvents()
  EcuM_ValidateWakeupEvent()

Test Precondition: 
  EcuM has Started up.

Test Execution: 
01.  Select shutdown target as ECUM_STATE_SLEEP.
02.  Call EcuM_GoHalt() for entering into EcuM Sleep phase.
03.  Reset the BswM stub count.
04.  Call EcuM_SetWakeupEvent with a default wakeup source
     ECUM_WKSOURCE_INTERNAL_WDG which doesn't requires validation.
05.  Call EcuM_SetWakeupEvent with a wakeup source WKS_TEST_6 and WKS_TEST_11(for improving code
     coverage) which are not associated with ComM channel 0 which need validation.
06.  Call EcuM_GetValidatedWakeupEvents() for retrieving the validated
     wakeup sources.
07. VP:
   * Verify whether ECUM_WKSOURCE_INTERNAL_WDG is getting validated.
   * Verify that WKS_TEST_6 is not validated.
08. Call the EcuM_MainFunction() and also Call EcuM_GetValidatedWakeupEvents() for retrieving the
    validated wakeup sources.
09. VP:
   * Verify that after the EcuM_MainFunction has been executed, the previously validated wakeup
     events are returned by the function EcuM_GetValidatedWakeupEvents.
   * Verify whether no indications are provided to ComM channel since
     the WKS_TEST_6 is not validated.
   * Verify whether no indications are provided to BswM.
10.  Simulate a wakeup event which is associated to ComM channel. This event
     will be triggered in "Sleep".
11.  Call EcuM_GoPoll() for entering into EcuM Sleep phase from Up phase.
12.  Call EcuM_ValidateWakeupEvent() with wakeup source WKS_TEST_1 which is
     associated with a ComM channel.
13.  Verify whether indications are provided to ComM with correct channel as
     parameter.
14.  Call EcuM_GetValidatedWakeupEvents() for retrieving the validated
     wakeup sources.
15. VP:
      Verify whether WKS_TEST_5 is getting validated.
16.  Call EcuM_MainFunction for providing indication to BswM
17. VP:
      Check whether correct indications are provided to BswM.
18.  Call EcuM_SetWakeupEvent with a default wakeup source
     WKS_REQ_NO_VAL_COMMCH associated with ComM channel which requires
     NO validation.
19. VP:
     Verify whether indications are provided to ComM with correct channel as
     parameter
20 . Clear all wakeup events.
21.  Call EcuM_SetWakeupEvent with a wakeup source WKS_TEST_3 which is not associated with ComM
     channel and doesnot requires validation.
22.  Call EcuM_GoHalt() for entering into EcuM Sleep phase.
23.  Reset the BswM stub count.
24.  Invoke Mainfunction once to execute desired actions on validated events if there is any
25. VP:
     Verify whether indications are provided to BswM.
26.  Call EcuM_SetWakeupEvent with a wakeup source WKS_TEST_4 which is not associated with ComM
     channel and requires validation.
27.  Call EcuM_GoHalt() for entering into EcuM Sleep phase.
28.  Reset the BswM stub count.
29.  Call EcuM_ValidateWakeupEvent() with wakeup source WKS_TEST_4.
30.  Invoke Mainfunction once to execute desired actions on validated events if there is any
31. VP:
     Verify whether indications are provided to BswM.
32.  Simulate a wakeup event WKS_TEST_5 which is not associated to ComM channel. This event
     will be triggered in "Sleep".
33.  Call EcuM_GoPoll() for entering into EcuM Sleep phase.
34.  Call EcuM_ValidateWakeupEvent() with wakeup source WKS_TEST_5.
35.  Invoke Mainfunction once to execute desired actions on validated events if there is any
36. VP:
     Verify whether indications are provided to BswM.
37.  Simulate a wakeup event WKS_TEST_6 which is not associated to ComM channel. This event
     will be triggered in "Sleep".
38.  Call EcuM_GoPoll() for entering into EcuM Sleep phase.
39.  Invoke Mainfunction once to execute desired actions on validated events if there is any
40. VP:
     Verify whether indications are provided to BswM.

Test Input: None.
Test Output: 
  ECUM_WKSOURCE_INTERNAL_WDG shall get validated.
  After the EcuM_MainFunction has been executed, the previously validated wakeup event
  ECUM_WKSOURCE_INTERNAL_WDG shall be returned by the function EcuM_GetValidatedWakeupEvents.
  No indications should be provided to ComM and BswM.

  Indication shall be provided to ComM with channel as 0.
  WKS_TEST_1 shall get validated.
  BswM shall be indicated about the wakeup source WKS_TEST_1 state change.
  BswM shall be indicated about the wakeup source WKS_TEST_3 state change.
  BswM shall be indicated about the wakeup source WKS_TEST_4 state change.
  BswM shall be indicated about the wakeup source WKS_TEST_5 state change.
  BswM shall be indicated about the wakeup source WKS_TEST_6 state change.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02790</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02829</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02976</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04078</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>333</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>278</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02496</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>165</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02830</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>214</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02533</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>167</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02826</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_01117</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>147</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02858</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>220</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB_Ref.ECUC_EcuM_00101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>410</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>950</internalId></specobject>
    <specobject>
      <id>TS_ECUM_SetWakeupEvent_Prolonging</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>2502</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that when a wakeup event is set with timeout value more than previous wakeup source, then
  the timeout value will be prolonged.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
01. Set a wakeup event WKS_TEST_8.
02. Set a wakeup event WKS_TEST_12.
03. Initialize a local variable with timeout value of WKS_TEST_12.
04. Call Main function less than 3 times of timeout value of WKS_TEST_12.
05. Call EcuM_GetExpiredWakeupEvents() to get the expired wakeup events.
06. VP:
     * Verify that no wakeup source is expired.
07. Call main function until timeout value expires.
08. Call EcuM_GetExpiredWakeupEvents() to get the expired wakeup events.
09. VP:
     * Verify that no wakeup source is expired.
10. Call EcuM main function once again so that wakeup sources expires.
11. Call EcuM_GetExpiredWakeupEvents() to get the expired wakeup events.
12. VP:
     * Verify that wakeup sources WKS_TEST_8 and WKS_TEST_12 are expired.

Test Input: 

Test Output: 
  No wakeup sources are expired.
  No wakeup sources are expired.
  Wakeup sources WKS_TEST_8 and WKS_TEST_12 are expired.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02826</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02831</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>951</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_25</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>2616</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test the behavior of EcuM_ClearWakeupEvent() and to verify whether
  all the wakeup events are cleared and correct indications are provided
  to BswM regarding the wakeup status.
  Test also verify the behavior of Up phase when a pending wakeup event is
  present.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM must be Started up.

Test Execution: 
01. Select shutdown target as sleep.
02. Call EcuM_GetPendingWakeupEvents() to get the pending wakeup events.
03. Check whether the pending wakeup events are zero since it is already
    cleared.
04. Call EcuM_SetWakeupEvent() to set the wakeup events WKS_TEST_5 and WKS_TEST_6.
05. Call EcuM_GetValidatedWakeupEvents() to get the validated wakeup events.
06. VP:
    * Verify that no wakeup event is validated.
07. Call EcuM_GetPendingWakeupEvents() to get the pending wakeup events.
08. VP:
    * Verify that WKS_TEST_5 and WKS_TEST_6 wakeup events are pending.
09. Call mainfunction.
10. VP:
    * Verify whether EcuM_StartWakeupSources is called
11. Call EcuM_ValidateWakeupEvent() with wakeup source WKS_TEST_5.
12. Call EcuM_GetValidatedWakeupEvents() to get the validated wakeup events.
13. VP:
    * Verify that WKS_TEST_5 wakeup event is validated.
14. Call mainfunction.
15. Call EcuM_ClearWakeupEvent() to clear WKS_TEST_5 wakeup event.
16. Verify whether BswM has been indicated about the state changes.
17. Call EcuM_GetPendingWakeupEvents() to get the pending wakeup events.
18. vp:
     * Check whether the pending wakeup events are present.
19. Call EcuM_ClearWakeupEvent() to clear WKS_TEST_5 wakeup event.
20. Call mainfunction.
21. Call EcuM_GoPoll() to into sleep phase.
22. Call EcuM_ClearWakeupEvent() and call EcuM_SetWakeupEvent() for WKS_TEST_5.
23. Call EcuM_MainFunction() for wakeup validation.
24. Verify whether EcuM_CheckValidation is called since
    a wakeup event is pending and is not validated.
25. Clear BswM stub count and SleepActivityInvocation count and set SleepWks as
    ECUM_WKSOURCE_INTERNAL_WDG so as to set a wakeup event while
    in Sleep sequence.
26. Call EcuM_GoPoll to enter into sleep sequence.
27. VP:
     * Verify the calls to BswM.
28. Call EcuM_SetWakeupEvent() to set the wakeup event WKS_TEST_3.
29. Call EcuM_GetValidatedWakeupEvents() to get the validated wakeup events.
30. VP:
    * Verify whether the wakeup event WKS_TEST_3 is validated.
31. Call EcuM_ClearWakeupEvent() for WKS_TEST_3.
32. Call EcuM_GetValidatedWakeupEvents() to get the validated wakeup events.
33. VP (EcuM.SWS_EcuM_02683):
    * Verify whether the validated wakeup event is zero since it is already cleared.

Test Input: 

Test Output: 
  Indications shall be provided to BswM when EcuM_ClearWakeupEvent() is called.
  Before setting the wakeup event WKS_TEST_5 , no wakeup events shall be
  pending.
  EcuM_StartWakeupSources() shall be called.
  After setting the wakeup events WKS_TEST_5 and WKS_TEST_6, no wakeup events shall be pending
  and validated.
  After setting the wakeup event WKS_TEST_6, WKS_TEST_6 shall be pending.
  After clearing the wakeup event, no wakeup events will be pending.
  EcuM_CheckValidation shall be called from Up phase.
  All wakeup status changes are notified to BswM.
  The wakeup event WKS_TEST_3 is validated.
  After clearing the wakeup event, no wakeup events will be validated.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02683</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>184</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02828</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>212</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_01156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>148</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02827</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>211</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02924</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>952</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_26</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>2933</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
   To test the behavior of Sleep phase (Halt sequence) with a
   pending wakeup event.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
  Call main function once to reach the up phase.
  Set a wakeup event WKS_TEST_5.
  Check the status of wakeup event which shall be pending.
  Call EcuM_GoHalt() to reach the sleep phase.
  Validate the pending wakeup event.
  Check the call to McuSetMode in call sequence.

Test Input: 

Test Output: 
  EcuM shall not Halt in the sleep phase if a wakeup event detected
  during Sleep transition. It shall continue with restart sequence.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>953</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_27</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>3044</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test the API EcuM_SelectShutdownTarget() in GO_OFF_ONE state.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
01. Set a wakeup event ECUM_WKSOURCE_INTERNAL_WDG.
02. Set a wakeup event WKS_TEST_5.
03. Call Main function.
04. VP:
     * Verify the last shutdown target and sleep mode using EcuM_GetLastShutdownTarget().
05. Change the shutdown target to SLEEP
06. VP:
     * Verify the shutdown target and Sleep mode.
07. Change the shutdown target to RESET
08. VP:
     * Verify the shutdown target and Sleep mode
09. Change the shutdown target to OFF
10. VP:
     * Verify the selected shutdown target as ECUM_STATE_OFF.
11. Change the shutdown target to OFF

Test Input: 

Test Output: 
  Since EcuM woke up from the Sleep state, the last shutdown target
  will be ECUM_STATE_SLEEP
  and Sleep configuration will be EcuM_SLEEPMODE_0.
  All calls to EcuM_SelectShutdownTarget() will return E_OK.
  It is not possible to shutdown the Ecu by calling EcuM_GoDown() when the
  selected shutdown target is SLEEP
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02156</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>149</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02822</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02825</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>209</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02824</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>EcuM.ShutdownTarget</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>414</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>954</internalId></specobject>
    <specobject>
      <id>TS_ECUM_NotifyComMPnc</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_01/source/application/Tests.c</sourcefile>
      <sourceline>3183</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that a notification is sent to a ComM PNC in case a valid wakeup event occurs
  during the Sleep phase.
  This test has two parts:
  - the first part verifies that wakeup indications are sent to a ComM PNC when ComM is initialized;
  - the second part verifies that wakeup indications are not sent to a ComM PNC when ComM is uninitialized.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM is initialized.

Test Execution: 
Part 1: verify wakeup indications to ComM PNC after ComM is initialized:

  VP:  (ECUC_EcuM_00228):
     - the wakeup source EcuM_WKS_ComM_Pnc is associated with a ComM PNC.
  1.1  Clear all wakeup events.
  1.2  Initialize ComM.
  1.3  Initialize ComM stub flags.
  1.4  Select the shutdown target as ECUM_STATE_SLEEP and select a sleep mode for
       entering the Poll sequence.
  1.5  After two iterations of the callout EcuM_CheckWakeup(), a wakeup event
       associated to a ComM PNC will be set. This event will be triggered during Sleep.
  1.6  Set the EcuM_WKS_ComM_Pnc as the wakeup activated during Sleep.
  1.7  Execute Polling Sequence.
  1.8  Simulate the validation of the EcuM_WKS_ComM_Pnc wakeup event.
  1.9  Invoke MainFunction once to indicate the validated wakeup to ComM.
  1.10 Verify the calls to EcuM_ComMWakeupIndication() and EcuM_ComMPNCWakeupIndication()
       by verifying the ComM_GetStatus() counter.
  VP:  (EcuM.ComMPNCWakeupIndication):
     - Wakeup has been indicated to ComM via ComM_EcuM_PNCWakeUpIndication;
     - Verify the ComM PNC-Id in which EcuM has indicated the wakeup.

Part 2: verify wakeup events are NOT indicated to ComM PNC when ComM is uninitialized:

  2.1  Clear all wakeup events.
  2.2  Simulate ComM status as "COMM_UNINIT".
  2.3  Reset ComM stub flags.
  2.4  Select the shutdown target as ECUM_STATE_SLEEP and select a sleep mode for
       entering the Poll sequence.
  2.5  After two iterations of the callout EcuM_CheckWakeup(), a wakeup event
       associated to a ComM PNC will be set. This event will be triggered during Sleep.
  2.6  Set the EcuM_WKS_ComM_Pnc as the wakeup activated during Sleep.
  2.7  Execute Polling Sequence.
  2.8  Simulate the validation of the EcuM_WKS_ComM_Pnc wakeup event.
  2.9  Invoke MainFunction once to indicate the validated wakeup to ComM.
  2.10 Verify the calls to EcuM_ComMWakeupIndication() and EcuM_ComMPNCWakeupIndication()
       by verifying the ComM_GetStatus() counter.
  VP:  (EcuM.ComMPNCWakeupIndication):
     - Wakeup has not been indicated to ComM via ComM_EcuM_PNCWakeUpIndication, considering ComM is uninitialized;
     - Verify the ComM PNC-Id related to the EcuM wakeup is NOT reported, considering ComM is uninitialized.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02962</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>252</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02963</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>253</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00228</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>142</internalId></provcov>
        <provcov>
          <linksto>EcuM.ComMPNCWakeupIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>421</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>955</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_CONF_20</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_02/source/application/Tests.c</sourcefile>
      <sourceline>121</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test if all modules of StartPreOS sequence and StartPostOS
  sequence are initialized properly and all required callouts are invoked.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
    EcuM should be in the STARTUP PHASE.

Test Execution: 
01. VP:
     * Verify the default shutdown and sleep mode just after initilaization of EcuM.
     * Verify whether all the configured modules are initialized with proper initialization
       parameters.
     * Verify the order of invocation of module initialization functions and APIs/Callouts for
       StartPreOS.
02. Initialize the call sequence array.
03. Call EcuM_StartupTwo() for execution of StartPostOS.
04. VP:
     * Verify the order of invocation of module initialization functions and APIs/Callouts for
       StartPostOS.

Test Input: 

Test Output: 
  EcuM default shutdown target will be ECUM_STATE_RESET.
  All configured modules will be initialized with proper initialization parameters.
  The module initialization functions and APIs/Callouts will be invoked in the correct sequence for
  StartPreOS and StartPostOS.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02684</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>185</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02905</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>226</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02603</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>179</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2181</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>8</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02559</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>170</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02730</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>190</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04085</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>339</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02932</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>243</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02838</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>219</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02411</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>163</internalId></provcov>
        <provcov>
          <linksto>EcuM.DriverInit_MultiInstance</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>419</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>90</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Conf.PBVariant.DefaultState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>956</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_21</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_02/source/application/Tests.c</sourcefile>
      <sourceline>248</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test the status of wakeup sources after wakeup by a user
  defined wakeup source.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  The reset should occur because of the reset reason configured for User defined
  wakeup source WKS_TEST_2.
  WKS_TEST_2 should not have a ComM channel associated to it.
  EcuM must have been initialized just before this test case.

Test Execution: 
  01. Verify the status of all wakeup sources.
  02. Call EcuM_SetWakeupEvent with a wakeup source WKS_TEST_7 which is associated with a ComM channel.
  03. Simulate the validation of WKS_TEST_7 wakeup event.
  04. Call EcuM_GetValidatedWakeupEvents() for retrieving the validated wakeup sources.
  05. VP:
      * Verify whether WKS_TEST_7 is getting validated.
  06. Invoke Mainfunction.
  07. VP:
      * Verify whether indications are provided to BswM.

Test Input: 

Test Output: 
  The reset will occur because of the reset reason configured for User defined
  wakeup source WKS_TEST_2.
  Since WKS_TEST_2 is not a default wakeup source, the status of WKS_TEST_2
  will be ECUM_WKSTATUS_PENDING.
  The status of WKS_TEST_1 shall be ECUM_WKSTATUS_PENDING since wakeup source is set by driver
  during EcuM initialization.
  All the other wakeup sources will have the status ECUM_WKSTATUS_NONE.
  WKS_TEST_7 shall get validated.
  BswM shall be indicated about the wakeup source WKS_TEST_7 state is ECUM_WKSTATUS_VALIDATED.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02623</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>180</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.CallingContext.MasterSlave</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>957</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_22</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_02/source/application/Tests.c</sourcefile>
      <sourceline>399</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test the behavior of EcuM_SelectBootTarget() and EcuM_GetBootTarget().
  To test the wakeup events handling which are set by drivers during initialization of EcuM.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  A Wakeup events WKS_TEST_1 must be set during the execution of the function
  EcuM_AL_DriverInitOne.

Test Execution: 
  1. Select the boot target as ECUM_BOOT_TARGET_BOOTLOADER using the API EcuM_SelectBootTarget().
  2. VP:
     * Verify the boot target using EcuM_GetBootTarget().
  3. Select the boot target as ECUM_BOOT_TARGET_APP using the API EcuM_SelectBootTarget().
  4. VP:
     * Verify the boot target using EcuM_GetBootTarget().
  5. Call EcuM_SetWakeupEvent with a wakeup source WKS_TEST_1.
  6. Call EcuM_GetPendingWakeupEvents() for retrieving the pending wakeup sources.
  7. VP:
     * Verify whether any wakeup source is pending during initialization(EcuM_Init()).
  8. Call EcuM_MainFunction().

Test Input: 

Test Output: 
  Boot target will be ECUM_BOOT_TARGET_OEM_BOOTLOADER.
  After the change boot target will be ECUM_BOOT_TARGET_APP.
  Wakeupevents are handled during initialization: 'WKS_TEST_1' is pending in EcuM_Init().
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02835</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>216</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02836</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>217</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.CallingContext.MasterSlave</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>958</internalId></specobject>
    <specobject>
      <id>TS_ECUM_RamChkFail_PrdErrDisbld</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_02/source/application/Tests.c</sourcefile>
      <sourceline>488</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
     To test the reporting of the runtime error ECUM_E_RAM_CHECK_FAILED
     when Det is disabled
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM should be Started up.

Test Execution: 
  01. Clear all wakeup events.
  02. Select shutdown target as ECUM_STATE_SLEEP and select a sleep mode for
      entering Halt sequence.
  03. Simulate a wakeup event which is associated to ComM channel. This event
      will be triggered in "Sleep".
  04. Execute Halt sequence.
  05. Simulate validation of this pending event and invoke the Mainfunction.
  06. Verify that no errors are reported to DET(DET stub
      is disabled).

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02863</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>222</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>959</internalId></specobject>
    <specobject>
      <id>TS_EcuM_WakeupSource_NotExpired</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_02/source/application/Tests.c</sourcefile>
      <sourceline>580</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To verify wakeup validation sequence executed for pending wakeup events which are reported while
  moving to Sleep.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  The timeout value of the wakeup source tested is greater than the EcuM_MainFunction period
  (i.e. the EcuM_MainFunction must be executed at least once, before the wakeup source can timeout).

Test Execution: 
01. Select shutdown target as ECUM_STATE_SLEEP.
02. Call EcuM_SetWakeupEvent with a wakeup source WKS_TEST_1 associated with ComM channel 0 which
    need validation.
03. Call EcuM_GoHalt() for entering into EcuM Sleep phase.
04. Call EcuM_MainFunction() several times(less than the configured timeout).
05. Call EcuM_GetExpiredWakeupEvents() to get the Expired wakeup event.
06. VP:
    * Verify the wakeup source 'WKS_TEST_1' is not expired.
    * Verify whether the wakeup source 'WKS_TEST_1' state is PENDING.
07. Call EcuM_SelectShutdownTarget() with invalid shutdown target and mode.
08. Call EcuM_GetShutdownTarget() to get the currently selected shutdown target and mode.
09. VP:
    * Verify that selected shutdown target and mode are not the one set by
      EcuM_SelectShutdownTarget().
10. Change the shutdown target to OFF.
11. Invoke EcuM_GetLastShutdownTarget() with sleepMode as NULL pointer.
12. VP:
     * Verify whether EcuM_GetLastShutdownTarget() returns E_NOT_OK.

Test Input: 

Test Output: 
  The wakeup source WKS_TEST_1 is not expired.
  The wakeup source WKS_TEST_1 state shall be ECUM_WKSTATUS_PENDING.
  The selected shutdown target is not ECUM_STATE_INVALID.
  The mode is not ECUM_SLEEPMODE_2.
  The EcuM_GetLastShutdownTarget() returns E_NOT_OK.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02790</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>193</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02829</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>213</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02976</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>255</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_00624</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02788</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>192</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>960</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_30040</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_03/source/application/Tests.c</sourcefile>
      <sourceline>71</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test if all RTE ports provided by the EcuM are created correctly.

  Regression test for ASCECUM-1411.
  One generic request port is configured in BswM which triggers a EcuMSelectShutdownTarget action.
  EcuM also uses Rte interfaces and has multicore functionality enabled.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM_StartupTwo() was called to continue startup and Rte shall be started.

Test Execution: 
  Select Boot target as ECUM_BOOT_TARGET_APP.
  Get Boot target which will be updated in TestSwc_bootTarget.
  Check whether the retrieved Boot target is ECUM_BOOT_TARGET_APP.
  Select Boot target as ECUM_BOOT_TARGET_OEM_BOOTLOADER.
  Get Boot target which will be updated in TestSwc_bootTarget.
  Check whether the retrieved Boot target is ECUM_BOOT_TARGET_OEM_BOOTLOADER.
  Select Boot target as ECUM_BOOT_TARGET_SYS_BOOTLOADER.
  Get Boot target which will be updated in TestSwc_bootTarget.
  Check whether the retrieved Boot target is ECUM_BOOT_TARGET_SYS_BOOTLOADER.
  Select Shutdown target as ECUM_STATE_OFF.
  Select Shutdown target as ECUM_STATE_RESET.
  Get Shutdown target which will be updated in TestSwc_shutdownTarget.
  Check whether the retrieved Shutdown target is ECUM_STATE_RESET.
  Select Shutdown cause as ECUM_CAUSE_ECU_STATE.
  Get Shutdown cause which will be updated in TestSwc_shutdownCause.
  Check whether the retrieved Shutdown cause is ECUM_CAUSE_ECU_STATE.
  Get Most Recent Shutdown.
  Check whether the retrieved Shutdown cause is ECUM_CAUSE_ECU_STATE
  and Shutdown target is ECUM_STATE_RESET.
  Get Next Recent Shutdown.
  Check whether the retrieved Shutdown cause and Shutdown target is 0,
  since no EcuM shutdown occured to store the informations.

Test Input: 

Test Output: 
 The retrieved Boot target shall be ECUM_BOOT_TARGET_APP,
 ECUM_BOOT_TARGET_OEM_BOOTLOADER and ECUM_BOOT_TARGET_SYS_BOOTLOADER
 for the subsequent selection of Boot target.
 The retrieved Shutdown target shall be ECUM_STATE_RESET.
 The retrieved Shutdown cause shall be ECUM_CAUSE_ECU_STATE.
 The shutdown target and shutdown cause of the Most Recent shutdown
 shall be ECUM_STATE_RESET and ECUM_CAUSE_ECU_STATE respectively.
 The shutdown target ,shutdown cause of the Next Recent shutdown
 shall be 0 for both since no shutdown activity to store this
 information has occured.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2763</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>21</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>961</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_CONF_60</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_04/source/application/Tests.c</sourcefile>
      <sourceline>117</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test DET detection functionality for error ECUM_E_UNINIT.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
  Call the following APIs before EcuM initialization,
  EcuM_SelectShutdownTarget()
  EcuM_GetLastShutdownTarget()
  EcuM_GetShutdownTarget()
  EcuM_SetWakeupEvent()
  EcuM_GetPendingWakeupEvents()
  EcuM_SelectBootTarget()
  EcuM_ValidateWakeupEvent()
  EcuM_ClearWakeupEvent()
  EcuM_MainFunction()
  EcuM_GetExpiredWakeupEvents()
  EcuM_SelectShutdownCause()
  EcuM_GetShutdownCause()
  EcuM_GetMostRecentShutdown()
  EcuM_GetNextRecentShutdown()
  EcuM_StartupTwo()
  EcuM_Shutdown()
  EcuM_GoHalt()
  EcuM_GoPoll()
  EcuM_GoDown()

Test Input: 

Test Output: 
  Following APIs will return E_NOT_OK.
  EcuM_SelectShutdownTarget()
  EcuM_GetLastShutdownTarget()
  EcuM_GetShutdownTarget()
  EcuM_SelectBootTarget()
  EcuM_GetBootTarget()
  EcuM_SelectShutdownCause()
  EcuM_GetShutdownCause()
  All APIs called, will report the Det error ECUM_E_UNINIT.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2986</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMEnableMulticore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>962</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_61_prep</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_04/source/application/Tests.c</sourcefile>
      <sourceline>289</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Pseudo test step to init the EcuM and start the OS.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMEnableMulticore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>963</internalId></specobject>
    <specobject>
      <id>TS_EcuM_Shutdown_Target_Mode</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_04/source/application/Tests.c</sourcefile>
      <sourceline>337</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that the 'mode' parameter of APIs EcuM_SelectShutdownTarget(),
  EcuM_GetShutdownTarget() and EcuM_GetLastShutdownTarget() is ignored when
  the shutdown target is not equal to
  ECUM_STATE_SLEEP or ECUM_STATE_RESET.[EcuM.SWS_EcuM_02979]
&lt;/para&gt;

Test Object: 
  EcuM_SelectShutdownTarget(), EcuM_GetShutdownTarget(),
  EcuM_GetLastShutdownTarget().

Test Precondition: 
  None.

Test Execution: 
  01: Call EcuM_StartupTwo() for execution of startup sequence 2.
  02: Get the last shutdown target and sleep mode.
  03: VP EcuM.SWS_EcuM_02979(1):
      The last shutdown target shall be  ECUM_STATE_OFF and the sleep
      mode shall be SLEEP_MODE_TEST(The mode parameter not returned any values
      from EcuM_GetLastShutdownTarget())
  04: Select the shutdown target as ECUM_STATE_SLEEP and sleep mode
      EcuMConf_EcuMSleepMode_SLEEPMODE_0
  05: VP EcuM.SWS_EcuM_02979(2): 
        The current shutdown target shall be ECUM_STATE_SLEEP and
        sleep mode EcuMConf_EcuMSleepMode_SLEEPMODE_0
  06: Select the shutdown target as ECUM_STATE_RESET and mode as EcuMConf_EcuMResetMode_ECUM_RESET_IO
  07: VP EcuM.SWS_EcuM_02979(3):
      The current shutdown target shall be ECUM_STATE_RESET and
      reset mode is EcuMConf_EcuMResetMode_ECUM_RESET_IO
  08: Select shutdown target as ECUM_STATE_OFF and change sleep mode
      to SLEEP_MODE_TEST
  09: VP EcuM.SWS_EcuM_02979(4):
      Shutdown target shall be changed to ECUM_STATE_OFF and the Sleep mode is
      not changed(it shall be EcuMConf_EcuMResetMode_ECUM_RESET_IO)

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02979</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMEnableMulticore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>964</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_63</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_04/source/application/Tests.c</sourcefile>
      <sourceline>456</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test DET detection functionality for error ECUM_E_UNKNOWN_WAKEUP_SOURCE.
  All public API functions which report this error are checked here.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
  Call the following APIs with an invalid wakeup source.
  EcuM_SetWakeupEvent()
  EcuM_ValidateWakeupEvent()
  call EcuM_SelectShutdownTarget() with invalid parameters
  Verify the reporting of Det error.
  call EcuM_SelectShutdownCause() with invalid parameters
  Verify the reporting of Det error.


Test Input: 

Test Output: 
  Det error ECUM_E_UNKNOWN_WAKEUP_SOURCE will be reported.
  Det error ECUM_E_INVALID_PAR will be reported for EcuM_SelectShutdownTarget()
  Det error ECUM_E_INVALID_PAR will be reported for EcuM_SelectShutdownCause()
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02867</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>223</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02868</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>224</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2984</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMEnableMulticore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>965</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_64</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_04/source/application/Tests.c</sourcefile>
      <sourceline>544</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test the reporting of DET error ECUM_E_STATE_PAR_OUT_OF_RANGE.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
  Call EcuM_SelectShutdownTarget() with an invalid shutdown target.
  Verify the reporting of Det error.

Test Input: 

Test Output: 
  Det error ECUM_E_STATE_PAR_OUT_OF_RANGE will be reported.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_00624</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2984</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMEnableMulticore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>966</internalId></specobject>
    <specobject>
      <id>TS_ECUM_InvalidBootTarget</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_04/source/application/Tests.c</sourcefile>
      <sourceline>594</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test the reporting of DET error ECUM_E_INVALID_PAR.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
  1. Call EcuM_SelectBootTarget() with an invalid boot target.
  2. VP:
     Verify the reporting of Det error.

Test Input: 

Test Output: 
  Det error ECUM_E_INVALID_PAR will be reported.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2984</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMEnableMulticore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>447</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>967</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_CONF_100</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_05/source/application/Tests.c</sourcefile>
      <sourceline>114</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test the correct behaviour of EcuM_Init() and EcuM_StartupTwo()
  and verify that EcuM_MainFunction() does not call DET if called
  before EcuM_Init().
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM_Init() has been called.
  &amp;Gpt_Config and &amp;McuModuleConfiguration_0 configured as
  EcuMFixedConfiguration/EcuMFixedModuleConfigurationRef for Gpt and Mcu.

Test Execution: 
  01. Check call-outs
  02. Call EcuM_StartupTwo()
  03. Check call-outs()
  04. Call EcuM_MainFunction() a couple of times
  05. Call EcuM_GoRun()
  06. Call EcuM_MainFunction()
  07. Select shutdown target as ECUM_STATE_SLEEP.
  08. Call EcuM_SetWakeupEvent with a wakeup source EcuMConf_EcuMWakeupSource_WKS_TEST_2
      which is not associated with a ComM channel.
  09. Invoke Mainfunction.
  10. Simulate the validation of EcuMConf_EcuMWakeupSource_WKS_TEST_2 wakeup event.
  11. Call EcuM_GetValidatedWakeupEvents() for retrieving the validated wakeup sources.
  12. VP:
      * Verify whether EcuMConf_EcuMWakeupSource_WKS_TEST_2 is getting validated.

Test Input: 

Test Output: 
  The callout functions configured for InitListZero, DeterminePbc
  and InitListOne must have been called in the configured order during
  EcuM_Init() and EcuM_StartupTwo().
  The parameter passed to Gpt_Init() is &amp;Gpt_Config, the parameter passed
  to Mcu_Init is &amp;McuModuleConfiguration_0.
  No further action must have been performed during the first calls to
  EcuM_MainFunction().
  During the MainFunction after EcuM_GoRun() the RTE is switched to RUN mode
  and the enter-run callout is called.
  Wakeup source EcuMConf_EcuMWakeupSource_WKS_TEST_2 should not get validated since
  it is not associated with ComM channel.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB.EcuM.ECUM165_Conf</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>524</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2908</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>518</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuMf0029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>517</internalId></provcov>
        <provcov>
          <linksto>EcuM.BswInitFinished.Callback</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>494</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.CallingContext.MasterSlave</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>968</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_110</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_05/source/application/Tests.c</sourcefile>
      <sourceline>262</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test the DET errors of Rte_Call_R_StateRequest_RequestPOSTRUN,
  Rte_Call_R_StateRequest_ReleasePOSTRUN and EcuM_GetStatusOfWakeupSource().
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM_Init() and EcuM_StartupTwo() have been called.
  Wakeup sources configured for bits 0, 1, 2, 3, 4, 7, and 10.

Test Execution: 
  Call Rte_Call_R_StateRequest_ReleaseRUN() for an unrequested RUN
  Call Rte_Call_R_StateRequest_RequestRUN() twice for the same user
  Call Rte_Call_R_StateRequest_RequestRUN() for a different user
  Call Rte_Call_R_StateRequest_ReleaseRUN() for both users
  Call Rte_Call_R_StateRequest_ReleasePOSTRUN() for an unrequested POST_RUN
  Call Rte_Call_R_StateRequest_RequestPOSTRUN() twice for the same user
  Call Rte_Call_R_StateRequest_RequestPOSTRUN() for a different user
  Call Rte_Call_R_StateRequest_ReleasePOSTRUN() for both users
  Call EcuM_GetStatusOfWakeupSource() for some configured and an
    unconfigured source
  Call EcuM_GetStatusOfWakeupSource() for ECUM_WKSOURCE_ALL_SOURCES
  Call Rte_Call_R_StateRequest_RequestRUN() for an invalid user
  Call Rte_Call_R_StateRequest_ReleaseRUN() for an invalid user
  Call Rte_Call_R_StateRequest_RequestPOSTRUN() for an invalid user
  Call Rte_Call_R_StateRequest_ReleasePOSTRUN() for an invalid user

Test Input: 

Test Output: 
  DET error ECUM_E_MISMATCHED_RUN_RELEASE must be reported for the
  releases of unrequested runs.
  DET error ECUM_E_MULTIPLE_RUN_REQUESTS must be reported for the
  duplicate request calls with the same user.
  DET error ECUM_WKSOURCE_ALL_SOURCES must be reported for the
  EcuM_GetStatusOfWakeupSource() with unconfigured wakeup sources.
  All other calls must succeed without a DET error.
  DET error ECUM_E_INVALID_FIXED_USER must be reported for the
  request and releases of runs for an invalid user.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB.EcuM.EcuM2814</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>503</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2143</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>504</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2144</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>505</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2789</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>508</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2815</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>507</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2819</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>509</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2820</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>510</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2864</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2762</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>969</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_120</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_05/source/application/Tests.c</sourcefile>
      <sourceline>419</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test the timeout of the RUN state and verify that erroneous main function
  calls during "off" state have no effect.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM_Init(), EcuM_StartupTwo() and EcuM_GoRun() have been called.
  EcuMRunMinimumDuration is ten times as high as EcuMMainFunctionPeriod.

Test Execution: 
  01. Call EcuM_MainFunction() 9 times.
  02. Select the shutdown target ECUM_STATE_OFF.
  03. Call EcuM_SetWakeupEvent with a wakeup source EcuMConf_EcuMWakeupSource_WKS_TEST_2
      which is not associated with a ComM channel.
  04. Call EcuM_MainFunction() once.
  05. Simulate the validation of EcuMConf_EcuMWakeupSource_WKS_TEST_2 wakeup event.
  06. Call EcuM_GetValidatedWakeupEvents() for retrieving the validated wakeup sources.
  07. VP:
      * Verify whether EcuMConf_EcuMWakeupSource_WKS_TEST_2 is getting validated.
  08. Check callouts.
  09. Call EcuM_MainFunction() once.
  10. Check callouts.
  11. Call EcuM_MainFunction() at least ten times.

Test Input: 

Test Output: 
  Wakeup source EcuMConf_EcuMWakeupSource_WKS_TEST_2 should not get validated since it
  is not associated with ComM channel. During the tenth EcuM_MainFunction() call,
  the functions for system shutdown are called in this order:
  - EcuM_OnExitRun()
  - Rte mode indication(s)
  During the eleventh EcuM_MainFunction() call, the functions for system
  shutdown are called in this order:
  - Rte mode indication(s)
  - EcuM_OnExitPostRun()
  No callouts are called during any of the other EcuM_MainFunction()
  calls.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB.EcuM.EcuM2310</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>496</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2750</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.ECUM129_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>970</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_130</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_05/source/application/Tests.c</sourcefile>
      <sourceline>541</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test that the EcuM stays in RUN state until all RUN requests have been
  released and that state transitions take place within the EcuM_MainFunction().
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM_Init() and EcuM_StartupTwo() have been called.
  EcuMRunMinimumDuration is ten times as high as EcuMMainFunctionPeriod.

Test Execution: 
  Request a RUN state for user 0
  Call EcuM_Mainfunction() at least ten times
  Request a RUN state for user 1
  Call EcuM_Mainfunction() at least ten times
  Release the RUN state for user 0
  Call EcuM_Mainfunction() at least ten times
  Release the RUN state for user 0
  Call EcuM_MainFunction()

Test Input: 

Test Output: 
  During the first EcuM_MainFunction() call after the last RUN release, the
  functions for system shutdown are called in this order:
  - EcuM_OnExitRun()
  - Rte mode indication(s)
  No other callouts are called.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB.EcuM.EcuM2308</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>495</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2311</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>497</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2865</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuMf0025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>501</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2911</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2912</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2913</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2914</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2750</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.ECUM129_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>971</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_140</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_05/source/application/Tests.c</sourcefile>
      <sourceline>665</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test that the EcuM stays in POST_RUN state until all POST_RUN requests
  have been released and that state transitions take place within
  EcuM_MainFunction().
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuMRunMinimumDuration is ten times as high as EcuMMainFunctionPeriod.

Test Execution: 
  Select the shutdown target ECUM_STATE_SLEEP
  Request a RUN state and a POST_RUN state for user 0
  Call EcuM_Mainfunction() at least ten times
  Request a POST_RUN state for user 1
  Call EcuM_Mainfunction() at least ten times
  Release the RUN state for user 0
  Call EcuM_Mainfunction() at least ten times
  Release the POST_RUN state for user 1
  Call EcuM_Mainfunction() at least ten times
  Release the RUN state for user 0
  Call EcuM_MainFunction()

Test Input: 

Test Output: 
  During the first EcuM_MainFunction() call after the RUN release, the functions
  for transition to the POST_RUN state are called in this order:
  - EcuM_OnExitRun()
  - Rte mode indication(s)
  During the first EcuM_MainFunction() call after the last POST_RUN release, the
  functions for system shutdown are called in this order:
  - Rte mode indication(s)
  - EcuM_OnExitPostRun()
  No other callouts are called.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB.EcuM.EcuM2311</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>497</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2865</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>498</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2761</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>499</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2911</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2912</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2913</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2914</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2750</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.ECUM129_Conf</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>525</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>972</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_150</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_05/source/application/Tests.c</sourcefile>
      <sourceline>826</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test that the EcuM_KillAllRUNRequests() releases all RUN and POST_RUN requests
  and that further RUN and POST_RUN requests are ignored.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
  Select the shutdown target ECUM_STATE_OFF
  Make a variety of RUN and POST_RUN requests for different users, but do not
  release them again.
  Call EcuM_KillAllRUNRequests()
  Call Rte_Call_R_StateRequest_RequestRUN()
  Call Rte_Call_R_StateRequest_RequestPOSTRUN()
  Call EcuM_MainFunction()
  Call EcuM_MainFunction()

Test Input: 

Test Output: 
  During the EcuM_MainFunction() calls, the functions for system shutdown are
  called in this order:
  - EcuM_OnExitRun()
  - Rte mode indication(s)
  - Rte mode indication(s)
  - EcuM_OnExitPostRun()
  No other callouts are called.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB.EcuM.EcuM2911</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>519</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2912</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>520</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2913</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>521</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2914</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>522</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2821</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>511</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM1872</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>512</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2750</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>502</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2668</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>506</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2600</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>513</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>973</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_160</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_05/source/application/Tests.c</sourcefile>
      <sourceline>943</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test that the RUN state is entered immediately again when
  Rte_Call_R_StateRequest_RequestRUN is called from the POST_RUN state.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
  Call Rte_Call_R_StateRequest_RequestRUN()
  Call Rte_Call_R_StateRequest_RequestPOSTRUN()
  Call EcuM_MainFunction()
  Call Rte_Call_R_StateRequest_ReleaseRUN()
  Call EcuM_MainFunction()
  Call Rte_Call_R_StateRequest_RequestRUN()
  Call EcuM_MainFunction()
  Call Rte_Call_R_StateRequest_ReleaseRUN()
  Call EcuM_MainFunction()
  Call Rte_Call_R_StateRequest_ReleasePOSTRUN()
  Call EcuM_MainFunction()

Test Input: 

Test Output: 
  After RequestRUN, RequestPOSTRUN and ReleaseRUN, EcuM is in POST_RUN state
  During the EcuM_MainFunction() call after the next
  Rte_Call_R_StateRequest_RequestRUN(), EcuM enters RUN state.
  During the EcuM_MainFunction() call after the next
  Rte_Call_R_StateRequest_ReleaseRUN(), EcuM enters POST_RUN state.
  During the EcuM_MainFunction() call after the next
  Rte_Call_R_StateRequest_ReleasePOSTRUN(), EcuM shuts down.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB.EcuM.EcuM2866</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>500</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2762</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>526</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>974</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_180</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_05/source/application/Tests.c</sourcefile>
      <sourceline>1091</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify the correct behaviour of EcuM_GetStatusOfWakeupSource().
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  Wakeup sources configured for one standard source (Ids 0 to 4) and two
  additional sources.

Test Execution: 
  Set wakeup events for two sources, one standard source s1 (which does
    auto-validation), one non-standard source e2 (which needs to be
    validated).
  1.  Call EcuM_GetStatusOfWakeupSource() with 0 as argument.
  2.  Call EcuM_GetStatusOfWakeupSource() for s1.
  3.  Call EcuM_GetStatusOfWakeupSource() for s2.
  4.  Call EcuM_GetStatusOfWakeupSource() for a configured but unset source.
  5.  Call EcuM_GetStatusOfWakeupSource() for (s1 | a configured but
      unset source).
  6.  Call EcuM_GetStatusOfWakeupSource() for an undefined source.
  7.  Call EcuM_GetStatusOfWakeupSource() for (s1 | an undefined source).
  8.  Call EcuM_GetStatusOfWakeupSource() for (s2 | an undefined source).
  9.  Call EcuM_GetStatusOfWakeupSource() for ECUM_WKSOURCE_ALL_SOURCES.
  10. Call EcuM_MainFunction() continuously until the validation timeout
      is just about to expire.
  11. Call EcuM_GetStatusOfWakeupSource() for s2.
  12. Call EcuM_MainFunction() once again so that validation timeout expires.
  13. Call EcuM_GetStatusOfWakeupSource() for s2.
  14. Select shutdown target as ECUM_STATE_SLEEP.
  15. Call EcuM_SetWakeupEvent with a wakeup source EcuMConf_EcuMWakeupSource_WKS_TEST_1 which requires validation.
  16. Call EcuM_GoHalt() for entering into EcuM Sleep phase.
  17. Invoke Mainfunction once to execute desired actions on validated events if there is any
  18. Simulate the validation of EcuMConf_EcuMWakeupSource_WKS_TEST_1 wakeup event.
  19. Call EcuM_GetValidatedWakeupEvents() for retrieving the validated wakeup sources.
  20. VP:
      *  Verify whether EcuMConf_EcuMWakeupSource_WKS_TEST_1 is getting validated.
  21. Invoke Mainfunction.
  22. VP:
      * Verify whether indications are provided to BswM.

Test Input: 

Test Output: 
  The return values of EcuM_GetStatusOfWakeupSource() are in step...
   1: ECUM_WKSTATUS_NONE
   2: ECUM_WKSTATUS_VALIDATED
   3: ECUM_WKSTATUS_PENDING
   4: ECUM_WKSTATUS_NONE
   5: ECUM_WKSTATUS_PENDING
   6: ECUM_WKSTATUS_NONE
   7: ECUM_WKSTATUS_VALIDATED
   8: ECUM_WKSTATUS_PENDING
   9: ECUM_WKSTATUS_VALIDATED
  11: Not equal to ECUM_WKSTATUS_EXPIRED
  12: ECUM_WKSTATUS_EXPIRED
  EcuMConf_EcuMWakeupSource_WKS_TEST_1 shall get validated.
  BswM shall be indicated about the wakeup source EcuMConf_EcuMWakeupSource_WKS_TEST_1 state is ECUM_WKSTATUS_VALIDATED.
</description>
      <providescoverage>
        <provcov>
          <linksto>EB.EcuM.EcuM2832</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>514</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2754</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>515</internalId></provcov>
        <provcov>
          <linksto>EB.EcuM.EcuM2864</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>516</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>975</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_190</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_05/source/application/Tests.c</sourcefile>
      <sourceline>1284</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that the EcuM_OnGoSleep() callout is called before entering sleep
  state.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
  Select ECUM_STATE_SLEEP as shutdown target
  Call EcuM_GoHalt().

Test Input: 

Test Output: 
  During EcuM_GoHalt(), the following calls are made:
  - EcuM_GoToSleep()
  - EcuM_EnabloeWakeupSource()
  - EcuM_GenerateRamHash()
  - EcuM_PreHalt()
  - Mcu_SetMode()
  - EcuM_PostHalt()
  - EcuM_CheckRamHash()
  - Mcu_SetMode()
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EB.EcuM.EcuM2915</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>523</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>976</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_CONF_61</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_06/source/application/Tests.c</sourcefile>
      <sourceline>128</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test the reporting of runtime error ECUM_E_RAM_CHECK_FAILED to DET.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
  Set the return value for RamHashCheck.
  Select the shutdown target as Sleep and Sleep configuration with
  CpuSuspend enabled.
  Clear the DET stub count.
  Call EcuM_GoHalt to initialize the Sleep phase.
  Verify the calls to EcuM_GenerateRamHash() and EcuM_CheckRamHash()
  Verify the reporting of runtime error
  ECUM_E_DEMTODET_RAM_CHECK_FAILED to DET.
  Verify that no error has been reported to DEM.

Test Input: 

Test Output: 
  EcuMGenerateRamHash and EcuMCheckRamHash will be invoked from the Sleep state.
  Runtime error ECUM_E_RAM_CHECK_FAILED will be reported to DET.
  No error will be reported to DEM.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_OnCoreSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>977</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_62</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_06/source/application/Tests.c</sourcefile>
      <sourceline>241</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test DET detection functionality for error ECUM_E_NULL_POINTER.All public
  API functions which report this error are checked here.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM_StartupTwo() was called

Test Execution: 
  Pass null pointer to folowing APIs and verify the DET error reporting.
  EcuM_GetShutdownTarget().
  EcuM_GetLastShutdownTarget().
  EcuM_GetBootTarget().
  EcuM_GetVersionInfo().
  EcuM_GetShutdownCause().
  EcuM_GetMostRecentShutdown().
  Pass a null pointer as post build configuration to EcuM_Init()
  and verify DET error reporting.

Test Input: 

Test Output: 
  All the APIs called will return E_NOT_OK.
  Det error ECUM_E_NULL_POINTER will be reported.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02979</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02337</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>160</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2984</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>30</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>978</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_CONF_200</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_07/source/application/Tests.c</sourcefile>
      <sourceline>137</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test DET error detection functionality for the error ECUM_E_UNINIT.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  call Rte_Start().

Test Execution: 
  Call the following APIs before EcuM initialization,
  EcuM_ReleaseRUN()
  EcuM_RequestRUN()
  EcuM_ReleasePOST_RUN()
  EcuM_RequestPOST_RUN()
  EcuM_GoRun()
  EcuM_GetStatusOfWakeupSource()
  EcuM_KillAllRUNRequests()

Test Input: 

Test Output: 
  Following APIs will return E_NOT_OK.
  EcuM_ReleaseRUN()
  EcuM_RequestRUN()
  EcuM_ReleasePOST_RUN()
  EcuM_RequestPOST_RUN()
  EcuM_GoRun()
  EcuM_GetStatusOfWakeupSource() shall return ECUM_WKSTATUS_DISABLED.
  All APIs called, will report the Det error ECUM_E_UNINIT.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM2986</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>31</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00108</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>93</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>398</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>979</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_CONF_11_WIN32X86</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_08/source/application/Tests.c.m4</sourcefile>
      <sourceline>159</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test DET detection functionality regarding the reported EcuM InstanceId for all
  EcuM APIs except EcuM_MainFunction().
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
  VP. 1: EcuM APIs performing changes only on the master core and throwing
         ECUM_E_WRONG_CONTEXT DET error if called from the slave core.
         Verifying ECUM_E_UNINIT on the master core.
  APIs called before EcuM initialization:
       EcuM_GoRun()
       EcuM_ASR40_RequestRUN()
       EcuM_ASR40_ReleaseRUN()
       EcuM_ASR40_RequestPOST_RUN()
       EcuM_ASR40_ReleasePOST_RUN()
       EcuM_KillAllRUNRequests()
       EcuM_GetStatusOfWakeupSource()
       SelectBootTarget()
       GetBootTarget()
       EcuM_SelectShutdownTarget()
       EcuM_GetShutdownTarget()
       EcuM_GetLastShutdownTarget()
       EcuM_GetMostRecentShutdown()
       EcuM_GetNextRecentShutdown()
       EcuM_SelectShutdownCause()
       EcuM_GetShutdownCause()

  VP. 2a: EcuM APIS throwing the same DET error code from both master and
         slave core contexts: Verifying ECUM_E_UNINIT:
       EcuM_StartupTwo()
       EcuM_SetWakeupEvent()
       EcuM_GetPendingWakeupEvents()
       EcuM_ValidateWakeupEvent()
       EcuM_GetValidatedWakeupEvents()
       EcuM_ClearWakeupEvent()
       EcuM_GetExpiredWakeupEvents()
       EcuM_GoHalt()
       EcuM_GoPoll()
       EcuM_GoDown()

  VP. 2b: Verifying ECUM_E_NULL_POINTER:
       EcuM_Init()
       EcuM_GetVersionInfo()
  VP. 2c: EcuM APIs performing changes only on the master core and throwing
         ECUM_E_WRONG_CONTEXT DET error if called from the slave core.
         Verifying  ECUM_E_WRONG_CONTEXT on the slave core.
       EcuM_GoRun()
       EcuM_ASR40_RequestRUN()
       EcuM_ASR40_ReleaseRUN()
       EcuM_ASR40_RequestPOST_RUN()
       EcuM_ASR40_ReleasePOST_RUN()
       EcuM_KillAllRUNRequests()
       EcuM_GetStatusOfWakeupSource()
       SelectBootTarget()
       GetBootTarget()
       EcuM_SelectShutdownTarget()
       EcuM_GetShutdownTarget()
       EcuM_GetLastShutdownTarget()
       EcuM_GetMostRecentShutdown()
       EcuM_GetNextRecentShutdown()
       EcuM_SelectShutdownCause()
       EcuM_GetShutdownCause()

  VP. 3: EcuM APIs which are NOT throwing DET errors if they are called on a slave core
         Verifying ECUM_E_UNINIT:
       EcuM_Shutdown()

  VP. 4: EcuM DET errors which are not reported on the slave core
         but they are reported in a master core context.
         Verifying ECUM_E_RAM_CHECK_FAILED:

  VP. 5: Verifying EcuM_OnCoreSync() callout function.
  VP. 6: Verify the EcuM_PreHaltSlave() callout function is called during slave core Halt sequence.

Test Input: 

Test Output: 
  All APIs called, will report the Det error with the InstanceId parameter corresponding
  to the current EcuM core.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.MultipleInstanceDetErrorHandling</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>454</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.EcuM_OnCoreSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.StartedCoreStatus</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>465</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMStartInitialCore</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>451</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMInitialCoreId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Source.SlaveCore.PreHalt</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>457</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMPreHaltSlaveCallout</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>458</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMPreHaltSlaveCalloutEnabled</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>459</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>980</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_12_prep_WIN32X86</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_08/source/application/Tests.c.m4</sourcefile>
      <sourceline>547</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test the behavior of EcuM Shutdown with the shutdown target as RESET.
  This test case will be run only on a Windows platform, using the OS stub for OS APIs.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM is initialized and in Up phase.

Test Execution: 
  Clear the Scheduler and BswM de-initialization stub counts.
  Clear the callout stub flags of EcuM_OnGoOffOne() and EcuM_OnGoOffTwo()
  Verify the last shutdown target.
  Select the shutdown target as ECUM_STATE_RESET and reset mode
  as EcuM_ECUM_RESET_MCU.
  Call EcuM_GoDown to RESET the Ecu.

Test Input: 

Test Output: 
  Verify the selection of shutdown target as ECUM_STATE_RESET and reset modality as EcuM_ECUM_RESET_MCU.
  Verification of call sequence in EcuM_Godown is done in the subsequent test case.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02952</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>246</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>271</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02953</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>247</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>981</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_12_WIN32X86</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_08/source/application/Tests.c.m4</sourcefile>
      <sourceline>634</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To verify the behavior of EcuM shutdown with shutdown
  target selected as reset.
  This test case will be run only on a Windows platform, using the OS stub for OS APIs.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
01. VP:
    Verify the deinitialization of BswM and Scheduler in last reset.
    Verify the invocation of callouts EcuM_OnGoOffOne(), EcuM_AL_Reset
    and EcuM_OnGoOffTwo() are called
    Verify the last shutdown target as ECUM_STATE_RESET.
02. Get the most recent shutdown target using the API
    EcuM_GetNextRecentShutdown(), pass NULL_PTR for cause and time.
03. VP:
      Verify that DET eror - ECUM_E_NULL_POINTER is reported to DET.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04074</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>330</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04065</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>323</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02916</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>229</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02917</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>230</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_03021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>270</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.CallingContext.MasterSlave</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>982</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_13_prep_WIN32X86</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_08/source/application/Tests.c.m4</sourcefile>
      <sourceline>743</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test behavior EcuM_SelectShutdownCause.
  This test case will be run only on a Windows platform, using the OS stub for OS APIs.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
  Select the shutdown target as ECUM_STATE_RESET
  Select the shutdown cause as ECUM_CAUSE_ECU_STATE
  Shutdown the Ecu by calling EcuM_GoDown

Test Input: 

Test Output: 
  Ecu will shutdown and the shutdown information will be stored.
  The stored shutdown information cheked in next test case.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02822</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4046</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>72</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04020</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>293</internalId></provcov>
        <provcov>
          <linksto>intgr.EcuM.EB_INTREQ_EcuM_0001</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>0</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>983</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_13_WIN32X86</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_08/source/application/Tests.c.m4</sourcefile>
      <sourceline>832</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test behavior EcuM_GetShutdownCause, EcuM_GetMostRecentShutdown and
  EcuM_GetNextRecentShutdown APIs
  This test case will be run only on a Windows platform, using the OS stub for OS APIs.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
01. Select the shutdown cause as ECUM_CAUSE_DCM, using the
    API EcuM_SelectShutdownCause().
02. VP:
    Verify the selected shutdown cause as ECUM_CAUSE_DCM, using
    the API EcuM_GetShutdownCause().
03. Get the most recent shutdown cause by calling EcuM_GetMostRecentShutdown().
04. Get next recent shutdown causes by looping over.
05. VP:
    * Verify the information available as
        Shutdown target -&gt; ECUM_STATE_RESET,
        Shutdown cause  -&gt; ECUM_CAUSE_WDGM,
        Shutdown mode   -&gt; EcuM_ECUM_RESET_WDG,
        Shutdown time   -&gt; 0U
06. Select the shutdown target as OFF
07. Call EcuM_GoDown() when shutdown target as Reset.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.StoredShutdownOperations</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04050</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>310</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04051</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>311</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4053</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>77</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02824</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>208</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02812</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>205</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00172</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>116</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00173</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>117</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00176</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>119</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00175</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>118</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04022</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>294</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.EcuM_OnCoreSync</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>455</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>984</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_AL_SwitchOff_WIN32X86</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_08/source/application/Tests.c.m4</sourcefile>
      <sourceline>993</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
   Test the callout EcuM_AL_SwitchOff() called during shutdown when
   the selected shutdown target is ECUM_STATE_OFF.
   This test case will be run only on a Windows platform, using the OS stub for OS APIs.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  Shutdown target must be selected to ECUM_STATE_OFF and
  EcuM_GoDown() must be called before executing this test case.

Test Execution: 
  Verify EcuM_AL_SwitchOff() is invoked during shutdown

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02920</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>233</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04075</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>331</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>985</internalId></specobject>
    <specobject>
      <id>TS_ECUM_SdInfoBuffer_WIN32X86</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_08/source/application/Tests.c.m4</sourcefile>
      <sourceline>1041</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test EcuM_GetMostRecentShutdown() when the recent shutdown
  target is ECUM_STATE_OFF.
  This test case will be run only on a Windows platform, using the OS stub for OS APIs.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
01. Get the most recent shutdown target and cause
02. VP:
     * Verify the recent shut target as ECUM_STATE_OFF.
     * Verify the recent shutdown cause as ECUM_CAUSE_ECU_STATE.
03. Call EcuM_GoDown() 2 times to improve code coverage.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.StoredShutdownOperations</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>417</internalId></provcov>
        <provcov>
          <linksto>EcuM.ASR403.EcuM4052</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>76</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>986</internalId></specobject>
    <specobject>
      <id>TS_ECUM_ResetWakeupSource_WIN32X86</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_08/source/application/Tests.c.m4</sourcefile>
      <sourceline>1115</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies that when the EcuM starts, any wakeup sources that were previously
  started, can be started again (when a wakeup event is set).
  This test case will be run only on a Windows platform, using the OS stub for OS APIs.
&lt;/para&gt;

Test Object: EcuM_StartWakeupSources
Test Precondition: 
  None.

Test Execution: 
- Start the EcuM.
- Set a wakeup event EcuM_WKS_TEST_8.
- VP: The wakeup source has been started.
- Shut down the EcuM.
- Start the EcuM.
- Set the wakeup event EcuM_WKS_TEST_8 again.
- VP: Verify that the wakeup source has been started again.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02924</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>987</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_14_WIN32X86</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_08/source/application/Tests.c.m4</sourcefile>
      <sourceline>1219</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test behaviour of EcuM_GoDown in a slave core context.
  EcuM_GoDown() should de-initialize the SchM and BswM on both cores.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
  Set the variable GetCoreIDResult holding the Core ID to 1, to simulate the slave core.
  EcuM_GoDown is called.
  Verify if SchM and BswM have been de-initialized after call of EcuM_GoDown.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04021</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>80</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>988</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_15_WIN32X86</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_08/source/application/Tests.c.m4</sourcefile>
      <sourceline>1304</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies the offset value for the EcuMDefaultAppMode.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
    01: Call the function EcuM_Init() with a correct configuration.
    02a: VP: Check the value of DefaultAppMode to be equal to 0.
    02b: VP: Check the value of DefaultAppMode to be equal to 3.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EcuMDefaultAppModeBaseId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>473</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>989</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_16_WIN32X86</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_08/source/application/Tests.c.m4</sourcefile>
      <sourceline>1357</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    This test mainly covers the situation where the state of a core instance is the
    ECUM_STATE_STARTUP_TWO substate of the startup sequence.
    This state can be reached when the EcuM_StartupTwo() function is called.
    EcuM_StartupTwo() calls the SchM_Init() function, according to EcuM.SWS_EcuM_04093.
    In the context of the SchM_Init() function, a EcuM_MainFunction() call can be made.
    EcuM_MainFunction() retrieves the core instance information where the state is still
    ECUM_STATE_STARTUP_TWO. So, coverage can be made for the core instance state check.
  
Test Object: EcuM_StartupTwo()
Test Precondition: 
    EcuMEnableMulticore == true
    OsNumberOfCores == 2
  
Test Execution: 
    01 AP: Initialize the EcuM module
    02 AP: Change the OS GetCoreID call to return the satellite Core ID
    03 AP: The SchM_Init() call in EcuM_StartupTwo() will call the EcuM_MainFunction()
    04 VP(EcuM.SWS_EcuM_04093): Call the API in order to enter EcuM_MainFunction() with the satellite core state of "startup two"
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04093</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>346</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>990</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_MultiCoreDriverInit_WIN32X86</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_08/source/application/Tests.c.m4</sourcefile>
      <sourceline>1404</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test drivers in each init list are initialized in the context of the configured coreId
  
Test Object: None.
Test Precondition: 
    EcuMEnableMulticore == true
    OsNumberOfCores == 2
    InitListZero
      Det - mapped on Core0
    InitListOne
      Gpt - mapped on Core1
      Mcu - mapped on both Core0 and Core1
      Dem - mapped on Core1
    RestartList
      Mcu - mapped on both Core0 and Core1
  
Test Execution: 
    01. Initialize EcuM on both cores
    02. Check drivers are only initialized in the context of their configured cores for EcuM Init list zero and Init list one
    03. Trigger EcuM Halt mode
    04. Check drivers are only restarted in the context of their configured cores for EcuM Restart list.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.Impl.Configuration.EcuMDriverCoreId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.Impl.SlaveCoreDriver_RestartList</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>991</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_MultiCoreDriverInitDefaultValues_WIN32X86</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_08/source/application/Tests.c.m4</sourcefile>
      <sourceline>1482</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test drivers in each init list are initialized with the default value for EcuMDriverCoreId
    The default value is either EcuMMasterCoreId if it is enabled, or 0.
  
Test Object: None.
Test Precondition: 
    EcuMEnableMulticore == true
    OsNumberOfCores == 2
    InitListZero
      BswM - default value for core mapping
    InitListOne
      ComM - default value for core mapping
    RestartList
      BswM and ComM - default value for core mapping
  
Test Execution: 
    01. Initialize EcuM on both cores
    02. Check drivers are only initialized in the context of their configured cores for EcuM Init list zero and Init list one
    03. Trigger EcuM Halt mode
    04. Check drivers are only restarted in the context of their configured cores for EcuM Restart list.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.Impl.Configuration.EcuMDriverCoreId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.Impl.SlaveCoreDriver_RestartList</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>992</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_CONF_MultiCoreDriverInitDefaultValuesMasterCoreId_WIN32X86</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_08_ConfigurableMaster/source/application/Tests.c</sourcefile>
      <sourceline>154</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
    Test drivers in each init list are initialized with the default value for EcuMDriverCoreId
    The default value is either EcuMMasterCoreId if it is enabled, or 0.
  
Test Object: None.
Test Precondition: 
    EcuMEnableMulticore == true
    OsNumberOfCores == 2
    InitListZero
      BswM - default value for core mapping
    InitListOne
      ComM - default value for core mapping
    RestartList
      BswM and ComM - default value for core mapping
  
Test Execution: 
    01. Initialize EcuM on both cores
    02. Check drivers are only initialized in the context of their configured cores for EcuM Init list zero and Init list one
    03. Trigger EcuM Halt mode
    04. Check drivers are only restarted in the context of their configured cores for EcuM Restart list.
  
Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04145</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>390</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04016</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>290</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04026</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>298</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.Impl.Configuration.EcuMDriverCoreId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>483</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.Impl.SlaveCoreDriver_RestartList</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>484</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>993</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_StartWakeupSource</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_09/source/application/Tests.c</sourcefile>
      <sourceline>102</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Regression test for ASCECUM-673
Test Description: 
&lt;para&gt;
  The function EcuM_StartWakeupSources shall be called when a wakeup event has
  been set.  If an event is cleared and then set, it shall be possible to 
  re-start the wakeup source.  The purpose of this test is to verify that the 
  EcuM will start a wakeup source again, even if the wakeup event was previously
  cleared during the execution of the EcuM_MainFunction.
&lt;/para&gt;

Test Object: EcuM_StartWakeupSources
Test Precondition: 
  The EcuM is initialized.

Test Execution: 
- Clear all wakeup events
- Set the test wakeup event
- Instruct the callout function EcuM_CheckValidation to clear the wakeup event.
- Trigger the validation sequence
- VP1: Verify that the wakeup event has been cleared.
- Set the wakeup event again
- Instruct the callout function EcuM_CheckValidation to validate the wakeup 
  event.
- Trigger the validation sequence
- VP2: Verify that EcuM_StartWakeupSources has been executed again.
- VP3: Verify that the wakeup event has been validated.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02924</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>237</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMEnableMcalOsCallouts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>994</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_CONF_MultiCore_EcuStartup</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_10/source/application/Tests.c</sourcefile>
      <sourceline>80</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Verifies that all cores have been started by the Os.
Test Description: 
&lt;para&gt;
  This test case verifies that the EcuM correctly starts the multi-core Os.  If
  the EcuM correctly starts the multi-core Os, the Os StartupHook shall be
  executed for each core.
&lt;/para&gt;

Test Object: EcuM_Init
Test Precondition: 
  - The EcuM_Init function is called on the master-core within the test
    entry-point (i.e. main function).
  - The EcuM_Init function is called on the slave-core within the test
    entry-point (i.e. main function).

Test Execution: 
  - VP1: The Os has been started on the master-core.
  - VP2: The Os has been started on the slave-core.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMEnableMcalOsCallouts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>995</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_MultiCore_ShutdownPrep</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_10/source/application/Tests.c</sourcefile>
      <sourceline>137</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Verifies that the multi-core Os has been stopped by the EcuM.
Test Description: 
&lt;para&gt;
  This test case triggers a shutdown of the EcuM in order verify that the EcuM
  uses the correct multi-core Os Api function.
&lt;/para&gt;

Test Object: EcuM_GoDown
Test Precondition: 
  - The EcuM has been initialized.

Test Execution: 
  - Test result is set to TS5ATL_RESULT_SUCCESS

  - The slave core EcuM_GoDown function is activated (Partition2Task1), and the
    scheduler is signalled that task scheduling shall take place.
    The scheduler will indicate that the slave core is ready to shutdown, by calling
    SchM_Send_EcuM_SlaveCoreSyncPort_Slave.
  - EcuM_GoDown is executed on the master core, determines that the slave core
    has been de-initialized, and shuts down all cores.
  - VP1: The Os is shutdown and does not return control to test function.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>996</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_MultiCore_Shutdown</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_10/source/application/Tests.c</sourcefile>
      <sourceline>194</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Verifies that the function ShutdownAllCores has been executed by the EcuM.
Test Description: 
&lt;para&gt;
  At the end of the Master Core OffPreOS Sequence, the Os function
  ShutdownAllCores shall be called.  As a result, the master and slave cores
  shall be stopped by the Os.
&lt;/para&gt;

Test Object: ShutdownAllCores
Test Precondition: None.
Test Execution: 
  - VP1: The master-core has been stopped.
  - VP2: The slave-core has been stopped.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>997</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_CONF_MC_TestApplicationContext</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_11/source/application/Tests.c</sourcefile>
      <sourceline>93</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Multi-core test to verify the core context of the test application.
Test Description: 
 &lt;para&gt;
  This test case verifies that the test application is running in either the
  master core or slave core context.  This is required to verify that the test
  cases defined within this test application are testing both the master and 
  slave core variants.
 &lt;/para&gt;
 
Test Object: Core Context
Test Precondition: 
  - The EcuM is initialized.
  - The test application is running in the core context EBTEST_CORE_ID (defined 
    within test_config.h).
 
Test Execution: 
  - VP: The test is running on the correct core context.
 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>998</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_MC_WakeupEventStatus_Clear</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_11/source/application/Tests.c</sourcefile>
      <sourceline>138</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Multi-core test to verify the processing of wakeup events.
Test Description: 
 &lt;para&gt;
  All wakeup events are set and then cleared on a single core.
 &lt;/para&gt;
 
Test Object: EcuM_ClearWakeupEvent
Test Precondition: 
  - The EcuM is initialized.
  - The EcuM is running in the core context EBTEST_CORE_ID (defined within 
    test_config.h).  
 
Test Execution: 
  - Set wakeup event for all EcuM wakeup sources.
  - Clear wakeup event for all EcuM wakeup sources.
  - VP1: No wakeup sources are validated.
  - VP2: No wakeup sources are pending.
  - VP3: No wakeup sources are expired.
 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>999</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_MC_WakeupEventStatus_Set</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_11/source/application/Tests.c</sourcefile>
      <sourceline>196</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Multi-core test to verify the processing of wakeup events.
Test Description: 
 &lt;para&gt;
  All wakeup events are set on a single core.
 &lt;/para&gt;
 
Test Object: EcuM_SetWakeupEvent
Test Precondition: 
  - The EcuM is initialized.
  - The EcuM is running in the core context EBTEST_CORE_ID (defined within 
    test_config.h).  
 
Test Execution: 
  - Clear all EcuM wakeup events.
  - Set wakeup event for all EcuM wakeup sources.
  - VP1: All wakeup sources of the default sleep mode that do not require 
         validation have been validated.
  - VP2: All wakeup sources of the default sleep mode that require validation 
         are pending.
  - VP3: No wakeup sources are expired.
 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1000</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_MC_WakeupEventStatus_Validate</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_11/source/application/Tests.c</sourcefile>
      <sourceline>256</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Multi-core test to verify the processing of wakeup events.
Test Description: 
 &lt;para&gt;
  A wakeup event for a single wakeup source is set and validated on a single 
  core.
 &lt;/para&gt;
 
Test Object: EcuM_ValidateWakeupEvent
Test Precondition: 
  - The EcuM is initialized.
  - The EcuM is running in the core context EBTEST_CORE_ID (defined within 
    test_config.h).  
 
Test Execution: 
  - Clear all EcuM wakeup events.
  - Set wakeup event for the wakeup source EcuM_WKS_TEST_1.
  - Validated wakeup event for the wakeup source EcuM_WKS_TEST_1.
  - VP1: The wakeup event for EcuM_WKS_TEST_1 shall be validated.
  - VP2: No wakeup sources are pending.
  - VP3: No wakeup sources are expired.
 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1001</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_MC_WakeupEventStatus_Expire</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_11/source/application/Tests.c</sourcefile>
      <sourceline>317</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Multi-core test to verify the processing of wakeup events.
Test Description: 
 &lt;para&gt;
  A wakeup event for a wakeup source is set and expires on a single core.
 &lt;/para&gt;
 
Test Object: EcuM_SetWakeupEvent
Test Precondition: 
  - The EcuM is initialized.
  - The EcuM is running in the core context EBTEST_CORE_ID (defined within 
    test_config.h).  
 
Test Execution: 
  - Clear all EcuM wakeup events.
  - Set wakeup event for the wakeup source EcuM_WKS_TEST_1.
  - Call the EcuM_MainFunction until the wakeup event expires.
  - VP1: No wakeup sources are validated.
  - VP2: No wakeup sources are pending.
  - VP3: The wakeup event for EcuM_WKS_TEST_1 has expired.
 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1002</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_MC_WakeupEventProlonging</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_11/source/application/Tests.c</sourcefile>
      <sourceline>386</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Multi-core test for wakeup source validation prolonging
Test Description: 
 &lt;para&gt;
  Verify that when a wakeup event is set with timeout value more than previous 
  wakeup source, then the timeout value will be prolonged.
 &lt;/para&gt;
 
Test Object: EcuM_SetWakeupEvent
Test Precondition: 
  - The EcuM has been initialized.
  - The EcuM is running in the core context EBTEST_CORE_ID (defined within 
    test_config.h).  
 
Test Execution: 
  - Clear all wakeup events.
  - Set wakeup events for the wakeup sources EcuM_WKS_TEST_1 and EcuM_WKS_TEST_5.
  - Call the EcuM_MainFunction until the wakeup timeout of EcuM_WKS_TEST_5 has been 
    exceeded.
  - VP1: The wakeup event for EcuM_WKS_TEST_5 has not expired because the wakeup 
         event for EcuM_WKS_TEST_1 has extended the validation timeout.
  - Call the EcuM_MainFunction until the wakeup timeout of EcuM_WKS_TEST_1 has 
    been reached.
  - VP2: No wakeup events have expired.
  - Call the EcuM_MainFunction once to trigger a validation timeout.
  - VP3: The wakeup events for EcuM_WKS_TEST_1 and EcuM_WKS_TEST_5 have expired.
 
Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04012</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>287</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02565</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>173</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02826</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>210</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02831</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>215</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1003</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_CONF_COMM_ECUM_WAKEUPINDICATION_WIN32X86_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_12/source/application/Tests.c</sourcefile>
      <sourceline>146</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test shall prove that in case multicore is enabled and EcuMCrossCoreComMWakeup is set to true
  Schm call is used to call ComM_EcuM_WakeUpIndication for master core.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  Multicore is enabled.
  EcuMCrossCoreComMWakeup is set to true.
  At least a ComM channel shall be configured in EcuMWakeupSource

Test Execution: 
  01: Initialize stubs and module
  02: Call EcuM_SetWakeupEvent for EcuM_WKS_TEST_1
  03: VP(EcuM.EB.SchM_Call_ComM_EcuM_WakeUpIndication)
      - Check that ComM_EcuM_WakeUpIndication is called via SchM

Test Input: 
 - Call EcuM_SetWakeupEvent for EcuM_WKS_TEST_1

Test Output: 
 - Check that ComM_EcuM_WakeUpIndication is called via SchM call
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.SchM_Call_ComM_EcuM_WakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.EcuMCrossCoreComMWakeup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1004</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_COMM_ECUM_WAKEUPINDICATION_WIN32X86_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_12/source/application/Tests.c</sourcefile>
      <sourceline>229</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test shall prove that in case multicore is enabled and EcuMCrossCoreComMWakeup is set to true
  Schm call is used to call ComM_EcuM_WakeUpIndication for slave core.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  Multicore is enabled.
  EcuMCrossCoreComMWakeup is set to true.
  At least a ComM channel shall be configured in EcuMWakeupSource

Test Execution: 
  01: Initialize stubs and module
  02: Call EcuM_SetWakeupEvent for EcuM_WKS_TEST_1
  03: VP(EcuM.EB.SchM_Call_ComM_EcuM_WakeUpIndication)
      - Check that ComM_EcuM_WakeUpIndication is called via SchM

Test Input: 
 - Call EcuM_SetWakeupEvent for EcuM_WKS_TEST_1

Test Output: 
 - Check that ComM_EcuM_WakeUpIndication is called via SchM call
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.SchM_Call_ComM_EcuM_WakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.EcuMCrossCoreComMWakeup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1005</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_COMM_ECUM_WAKEUPINDICATION_WIN32X86_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_12/source/application/Tests.c</sourcefile>
      <sourceline>310</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test shall prove that in case multicore is enabled and EcuMCrossCoreComMWakeup is set to true
  Schm call is used to call ComM_EcuM_WakeUpIndication.
  The test also checks if two different wakeup events are called for a single channel,
  the SchM call is performed only once per channel
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  Multicore is enabled.
  EcuMCrossCoreComMWakeup is set to true.
  Two identical ComM channels are configured in EcuMWakeupSource

Test Execution: 
  01: Initialize stubs and module
  02: Call EcuM_SetWakeupEvent for EcuM_WKS_TEST_1, EcuM_WKS_TEST_2, EcuM_WKS_TEST_3
  03: VP(EcuM.EB.SchM_Call_ComM_EcuM_WakeUpIndication)
      - Check that ComM_EcuM_WakeUpIndication is called twice (once for each Channel) via SchM

Test Input: 
 - Call EcuM_SetWakeupEvent for EcuM_WKS_TEST_1, EcuM_WKS_TEST_2 and EcuM_WKS_TEST_3

Test Output: 
 - Check that ComM_EcuM_WakeUpIndication is called for channel linked to EcuM_WKS_TEST_1
 - Check that ComM_EcuM_WakeUpIndication is called for channel linked to EcuM_WKS_TEST_2 and EcuM_WKS_TEST_3
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.SchM_Call_ComM_EcuM_WakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.EcuMCrossCoreComMWakeup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1006</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_COMM_ECUM_WAKEUPINDICATION_WIN32X86_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_12/source/application/Tests.c</sourcefile>
      <sourceline>396</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test shall prove that in case multicore is enabled and EcuMCrossCoreComMWakeup is set to true
  Schm call is used to call ComM_EcuM_WakeUpIndication.
  If SchM call returns a value different than SCHM_E_OK Det is reported
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  Multicore is enabled.
  EcuMCrossCoreComMWakeup is set to true.

Test Execution: 
  01: Initialize stubs and module
  02: Call EcuM_SetWakeupEvent for EcuM_WKS_TEST_1
  03: VP(EcuM.EB.SchM_Call_ComM_EcuM_WakeUpIndication, 
         EcuM.EB.SchM_Call_Client_Server_Channel_DET)
      - Check that ComM_EcuM_WakeUpIndication is called only once via SchM and 
        since SchM returned a value different than SCHM_E_OK, det is reported

Test Input: 
 - Call EcuM_SetWakeupEvent for EcuM_WKS_TEST_1

Test Output: 
 - Check that ComM_EcuM_WakeUpIndication is called only once via SchM call
 - Since SchM returned a value different than SCHM_E_OK, det is reported
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.SchM_Call_ComM_EcuM_WakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>475</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.SchM_Call_Client_Server_Channel_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>477</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.EcuMCrossCoreComMWakeup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1007</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_CONF_COMM_ECUM_PNCWAKEUPINDICATION_WIN32X86_1</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_13/source/application/Tests.c</sourcefile>
      <sourceline>146</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test shall prove that in case multicore is enabled and EcuMCrossCoreComMWakeup is set to true
  Schm call is used to call ComM_EcuM_PNCWakeUpIndication for master core.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  Multicore is enabled.
  EcuMCrossCoreComMWakeup is set to true.
  At least a ComM PNC shall be configured in EcuMWakeupSource

Test Execution: 
  01: Initialize stubs and module
  02: Call EcuM_SetWakeupEvent for EcuM_WKS_TEST_1
  03: VP(EcuM.EB.SchM_Call_ComM_EcuM_PNCWakeUpIndication)
      - Check that ComM_EcuM_PNCWakeUpIndication is called via SchM

Test Input: 
 - Call EcuM_SetWakeupEvent for EcuM_WKS_TEST_1

Test Output: 
 - Check that ComM_EcuM_PNCWakeUpIndication is called via SchM call
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.SchM_Call_ComM_EcuM_PNCWakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.EcuMCrossCoreComMWakeup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1008</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_COMM_ECUM_PNCWAKEUPINDICATION_WIN32X86_2</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_13/source/application/Tests.c</sourcefile>
      <sourceline>226</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test shall prove that in case multicore is enabled and EcuMCrossCoreComMWakeup is set to true
  Schm call is used to call ComM_EcuM_PNCWakeUpIndication for slave core.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  Multicore is enabled.
  EcuMCrossCoreComMWakeup is set to true.
  At least a ComM PNC shall be configured in EcuMWakeupSource

Test Execution: 
  01: Initialize stubs and module
  02: Call EcuM_SetWakeupEvent for EcuM_WKS_TEST_1
  03: VP(EcuM.EB.SchM_Call_ComM_EcuM_PNCWakeUpIndication)
      - Check that ComM_EcuM_PNCWakeUpIndication is called via SchM

Test Input: 
 - Call EcuM_SetWakeupEvent for EcuM_WKS_TEST_1

Test Output: 
 - Check that ComM_EcuM_PNCWakeUpIndication is called via SchM call
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.SchM_Call_ComM_EcuM_PNCWakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.EcuMCrossCoreComMWakeup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1009</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_COMM_ECUM_PNCWAKEUPINDICATION_WIN32X86_3</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_13/source/application/Tests.c</sourcefile>
      <sourceline>306</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test shall prove that in case multicore is enabled and EcuMCrossCoreComMWakeup is set to true
  Schm call is used to call ComM_EcuM_PNCWakeUpIndication.
  The test also checks if two different wakeup events are called for a single PNC,
  the SchM call is performed only once per PNC
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  Multicore is enabled.
  EcuMCrossCoreComMWakeup is set to true.
  Two identical ComM PNCs are configured in EcuMWakeupSource

Test Execution: 
  01: Initialize stubs and module
  02: Call EcuM_SetWakeupEvent for EcuM_WKS_TEST_1, EcuM_WKS_TEST_2 and EcuM_WKS_TEST_3
  03: VP(EcuM.EB.SchM_Call_ComM_EcuM_PNCWakeUpIndication)
      - Check that ComM_EcuM_PNCWakeUpIndication is called only once via SchM

Test Input: 
 - Call EcuM_SetWakeupEvent for EcuM_WKS_TEST_1, EcuM_WKS_TEST_2 and EcuM_WKS_TEST_3

Test Output: 
 - Check that ComM_EcuM_WakeUpIndication is called for PNC linked to EcuM_WKS_TEST_1
 - Check that ComM_EcuM_WakeUpIndication is called for PNC linked to EcuM_WKS_TEST_2 and EcuM_WKS_TEST_3
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.SchM_Call_ComM_EcuM_PNCWakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.EcuMCrossCoreComMWakeup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1010</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_COMM_ECUM_PNCWAKEUPINDICATION_WIN32X86_4</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_13/source/application/Tests.c</sourcefile>
      <sourceline>392</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test shall prove that in case multicore is enabled and EcuMCrossCoreComMWakeup is set to true
  Schm call is used to call ComM_EcuM_PNCWakeUpIndication.
  If SchM call returns a value different than SCHM_E_OK Det is reported
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  Multicore is enabled.
  EcuMCrossCoreComMWakeup is set to true.

Test Execution: 
  01: Initialize stubs and module
  02: Call EcuM_SetWakeupEvent for EcuM_WKS_TEST_1
  03: VP(EcuM.EB.SchM_Call_ComM_EcuM_PNCWakeUpIndication, 
         EcuM.EB.SchM_Call_Client_Server_PNC_DET)
      - Check that ComM_EcuM_PNCWakeUpIndication is called only once via SchM and 
        since SchM returned a value different than SCHM_E_OK, det is reported

Test Input: 
 - Call EcuM_SetWakeupEvent for EcuM_WKS_TEST_1

Test Output: 
 - Check that ComM_EcuM_PNCWakeUpIndication is called only once via SchM call
 - Since SchM returned a value different than SCHM_E_OK, det is reported
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.SchM_Call_ComM_EcuM_PNCWakeUpIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>476</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.SchM_Call_Client_Server_PNC_DET</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>478</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.EcuMCrossCoreComMWakeup</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>479</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1011</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_NotifyBswM</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_BswM/source/application/Tests.c</sourcefile>
      <sourceline>116</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that BswM is notified regarding some EcuM state changes.
  There are 3 states which are not reported to BswM:
  - ECUM_STATE_STARTUP_ONE and ECUM_STATE_STARTUP_TWO, because they are reported
    before EcuM initializes the BswM.
  - ECUM_STATE_OFF, because it is reported after EcuM de-initializes the BswM.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM is initialized.

Test Execution: 
  1.1  Initialize BswM stub flags.
  1.2  Clear all wakeup events.
  1.3  Initialize BswM.
  VP.1:  (EcuM.BswMStateIndication)
     - Verify EcuM state is reported to BswM in the StartPostOs sequence.
  1.4  Select the shutdown target as ECUM_STATE_SLEEP and select a sleep mode for
       entering the Poll sequence.
  1.5  After two iterations of the callout EcuM_CheckWakeup(), a wakeup event
       will be set. This event will be triggered during Sleep.
  1.6  Set the EcuM_Wks_BswM as the wakeup activated during Sleep.
  1.7  Execute Polling Sequence.
  VP.2:  (EcuM.BswMStateIndication)
     - Verify EcuM state is reported to BswM in the GoSleep and WakeupRestart sequences.
  1.8  Simulate the validation of the EcuM_Wks_BswM wakeup event.
  1.9  Invoke MainFunction to indicate to BswM that EcuM is back in RUN state.
  VP.3:  (EcuM.BswMStateIndication):
     - Verify EcuM state is reported to BswM in the WakeupValidation sequence.

Test Input: 

Test Output: 

 EcuM and BswM are initialized
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.BswMStateIndication</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>423</internalId></provcov>
        <provcov>
          <linksto>EcuM.Config.EcuMMainFunctionPeriod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1012</internalId></specobject>
    <specobject>
      <id>TS_ECUM_NotifyBswMWakeup</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_BswM/source/application/Tests.c</sourcefile>
      <sourceline>294</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that EcuM notifies BswM only of the last state transition of a wakeup source which changes its
  state multiple times in-between 2 EcuM_MainFunction() calls.
  The EcuM_Wks_BswM wakeup will transition to pending, to validated to cleared.
  This test verifies that only the last state transition (cleared) will be indicated to BswM.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM is initialized.
  EcuMBswMWakeupIndicationLastIsBest is enabled.

Test Execution: 
  1.1   Clear the only validated wakeup during EcuM_Init() for a clean base for wakeup comparison on both cores
  1.2   Initialize BswM stub flags.
  1.3   Initialize BswM.
  1.4   Select the shutdown target as ECUM_STATE_SLEEP and select a sleep mode for
        entering the Poll sequence.
  1.5   First wakeup state transition (pending): - After two iterations of the callout EcuM_SleepActivity(), a wakeup event
        will be set. This event will be triggered during Sleep.
  1.6   Set the EcuM_Wks_BswM as the wakeup activated during Sleep.
  1.7   Execute Polling Sequence.
  1.8   Second wakeup state transition (validated): Simulate the validation of the EcuM_Wks_BswM wakeup event.
  1.9   Third wakeup state transition (cleared): Clear the previously set and validated wakeup event.
  1.10  Invoke MainFunction to indicate the state of the wakeup to BswM.
  VP:  (EcuM.EB.Impl.EcuMBswMWakeupIndicationLastIsBest):
     -  Verify that only the last state of the EcuM_Wks_BswM wakeup is reported to BswM, on both cores.
  1.11  Let the wakeup event expire on both cores and verify their state

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.Impl.EcuMBswMWakeupIndicationLastIsBest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>480</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.Impl.Conf.EcuMBswMWakeupIndicationLastIsBest</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>481</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1013</internalId></specobject>
    <specobject>
      <id>TS_ECUM_WakeupEventsOnPollingEntry</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_BswM/source/application/Tests.c</sourcefile>
      <sourceline>526</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that Pending or Validated wakeup events set before entering and also while entering the SLEEP phase
  are not being deleted during entry in the sleep Poll Sequence.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM is initialized.

Test Execution: 
  1.1  Initialize EcuM_SleepActivity() flags.
  1.2  Clear all wakeup events.
  1.3  Select the shutdown target as ECUM_STATE_SLEEP and select a sleep mode for entering the Poll sequence.
  1.4  Set and validate one wakeup event before entry to sleep on both EcuM instances: EcuM_Wks_Poll_1 and EcuM_Wks_Poll_1_Core1.
  1.5  Set one pending wakeup event before entry to sleep: EcuM_Wks_Poll_2 and EcuM_Wks_Poll_2_Core1. (will be validated during Sleep)
  1.6  Execute Polling Sequence.
  1.7  Check that both validated events EcuM_Wks_Poll_1 and EcuM_Wks_Poll_2 have NOT been deleted
  1.8  Check that both validated events EcuM_Wks_Poll_1_Core1 and EcuM_Wks_Poll_2_Core1 have NOT been deleted
  1.9  Check that the EcuM_SleepActivity() callout has not been invoked during Poll sequence.

Test Input: 

Test Output: 

</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04025</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>297</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04029</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>301</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1014</internalId></specobject>
    <specobject>
      <id>TS_ECUM_WakeupEventsOnHaltEntry</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_BswM/source/application/Tests.c</sourcefile>
      <sourceline>674</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that Pending or Validated wakeup events set before entering and also while entering the SLEEP phase
  are not being deleted during entry in the sleep Halt Sequence.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM is initialized.

Test Execution: 
  1.1  Initialize Mcu_SetMode() flags.
  1.2  Clear all wakeup events.
  1.3  Select the shutdown target as ECUM_STATE_SLEEP and select a sleep mode for entering the Halt sequence.
  1.4  Set and validate one wakeup event before entry to sleep on both EcuM instances: EcuM_Wks_Halt_1 and EcuM_Wks_Halt_1_Core1.
  1.5  Set one pending wakeup event before entry to sleep: EcuM_Wks_Halt_2 and EcuM_Wks_Halt_2_Core1. (will be validated during Sleep)
  1.6  Execute Halt Sequence.
  1.7  Check that both validated events EcuM_Wks_Halt_1 and EcuM_Wks_Halt_2 have NOT been deleted
  1.8  Check that both validated events EcuM_Wks_Halt_1_Core1 and Wks_Halt_2_Core1_Core1 have NOT been deleted
  1.9  Check that the Mcu_SetMode() callout has not been invoked during Halt sequence.

Test Input: 

Test Output: 

</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04023</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>295</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04027</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>299</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04024</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>296</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04028</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>300</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02188</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>157</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1015</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_CONF_MultiCoreConfiguredMaster_Startup</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_ConfigurableMaster/source/application/Tests.c</sourcefile>
      <sourceline>88</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Verifies that all cores have been started by the Os.
Test Description: 
&lt;para&gt;
  This test case verifies that the EcuM correctly starts the multi-core Os.  
  If the EcuM correctly starts the multi-core Os, the Os StartupHook shall be
  executed for each core.
  The Master Core EcuM is configured on Os core-ID 1, using the EcuMMasterCoreId
  configuration parameter.
&lt;/para&gt;

Test Object: EcuM_Init
Test Precondition: 
  - The EcuM_Init function is called on the master-core within the test
    entry-point (i.e. main function).
  - The EcuM_Init function is called on the slave core-ID 0 within the test
    entry-point (i.e. main function).
  - The EcuM_Init function is called on the slave core-ID 2 within the test
    entry-point (i.e. main function).

Test Execution: 
  - VP1: The Os has been started first on the EcuM initial core (similar to EcuM slave configured as core ID 0).
         The Os has been started on the EcuM slave-core configured as core ID 2.
  - VP2: The Os has been started on the EcuM master-core (configured as core ID 1).
  - VP3: The designated master core EcuM still performs the same tasks even if it is configured on
         a different core than core 0.
         Verify the callouts have been called from a master core context.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.EcuM_CoreIdInitial</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>431</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMEnableMcalOsCallouts</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>448</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04015</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>289</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMInitialCoreId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>450</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Configuration.EcuMMasterCoreId</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>449</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.EcuM_CoreIdMaster</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>430</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04017</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>291</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1016</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_MultiCoreConfiguredMaster_ShutdownPrep</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_ConfigurableMaster/source/application/Tests.c</sourcefile>
      <sourceline>156</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Verifies that the multi-core Os has been stopped by the EcuM.
Test Description: 
&lt;para&gt;
  This test case triggers a shutdown of the EcuM in order verify that the EcuM
  uses the correct multi-core Os Api function.
&lt;/para&gt;

Test Object: EcuM_GoDown
Test Precondition: 
  - The EcuM and the SchM has been initialized on each core.

Test Execution: 
  - Test result is set to TS5ATL_RESULT_SUCCESS

  - The slave core-ID 0 EcuM_GoDown function is activated (Partition1Task3), and the
    scheduler is signaled that task scheduling shall take place.
    The scheduler will indicate that the slave core is ready to shutdown, by calling
    SchM_Send_EcuM_1_Core_0_EcuM_SlaveCoreReadyPort.
  - The slave core-ID 2 EcuM_GoDown function is activated (Partition2Task1), and the
    scheduler is signaled that task scheduling shall take place.
    The scheduler will indicate that the slave core is ready to shutdown, by calling
    SchM_Send_EcuM_1_Core_2_EcuM_SlaveCoreReadyPort.
  - EcuM_GoDown is executed on the configured master core (core-ID 1), determines that the slave core
    has been de-initialized, and shuts down all cores.
  - VP1: The Os is shutdown and does not return control to test function.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1017</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_MultiCoreConfiguredMaster_Shutdown</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_ConfigurableMaster/source/application/Tests.c</sourcefile>
      <sourceline>221</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: Verifies that the function ShutdownAllCores has been executed by the EcuM.
Test Description: 
&lt;para&gt;
  At the end of the Master Core OffPreOS Sequence, the Os function
  ShutdownAllCores shall be called.  As a result, the master and slave cores
  shall be stopped by the Os.
&lt;/para&gt;

Test Object: ShutdownAllCores
Test Precondition: None.
Test Execution: 
  - VP1: The master-core has been stopped.
  - VP2: The slave-cores have been stopped.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1018</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_CONF_PBVARIANT_IS_VALID_CONFIG_VARIANT_ONE</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_PostBuildVariant/source/application/Tests.c</sourcefile>
      <sourceline>79</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that the function EcuM_IsValidConfig() is implemented as specified
  for one of its variants: EcuM_Config_0_VariantOne.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  The EcuM module is not initialized.

Test Execution: 
    01: Create an invalid configuration regarding the endianness and alignment.
    02: Call the function EcuM_Init() with this invalid configuration.
    03: VP:
        A Det call must have been performed correctly.
    04: Create an invalid configuration regarding the compile time configuration.
    05: Call the function EcuM_Init() with this invalid configuration.
    06: VP:
        A Det call must have been performed correctly.
    07: Create an invalid configuration regarding the link time configuration.
    08: Call the function EcuM_Init() with this invalid configuration.
    09: VP:
        A Det call must have been performed correctly.
    10: Create an invalid configuration regarding the published information configuration.
    11: Call the function EcuM_Init() with this invalid configuration.
    12: VP:
        A Det call must have been performed correctly.
    13: Call EcuM_Init with NULL_PTR.
    14: VP:
        Check if Det error is reported.
    15: Call the function EcuM_Init() with a correct configuration.
    16: VP:
        No Det call must have been performed.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.PBVariant.WrongInitConfigParameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.PBVariant.IsValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Conf.PBVariant.EcuMRelocatablePbcfgEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1019</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_PBVARIANT_IS_VALID_CONFIG_VARIANT_TWO</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_PostBuildVariant/source/application/Tests.c</sourcefile>
      <sourceline>244</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verify that the function EcuM_IsValidConfig() is implemented as specified
  for one of its variants: EcuM_Config_0_VariantTwo.
&lt;/para&gt;

Test Object: None.
Test Precondition: 

Test Execution: 
    01: Create an invalid configuration regarding the endianness and alignment.
    02: Call the function EcuM_Init() with this invalid configuration.
    03: VP:
        A Det call must have been performed correctly.
    04: Create an invalid configuration regarding the compile time configuration.
    05: Call the function EcuM_Init() with this invalid configuration.
    06: VP:
        A Det call must have been performed correctly.
    07: Create an invalid configuration regarding the link time configuration.
    08: Call the function EcuM_Init() with this invalid configuration.
    09: VP:
        A Det call must have been performed correctly.
    10: Create an invalid configuration regarding the published information configuration.
    11: Call the function EcuM_Init() with this invalid configuration.
    12: VP:
        A Det call must have been performed correctly.
    13: Call EcuM_Init with NULL_PTR.
    14: VP:
        Check if Det error is reported.
    15: Call the function EcuM_Init() with a correct configuration.
    16: VP:
        No Det call must have been performed.

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.PBVariant.WrongInitConfigParameter</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>469</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.PBVariant.IsValid</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>471</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Conf.PBVariant.EcuMRelocatablePbcfgEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1020</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_PBVARIANT_VARIANT_ONE</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_PostBuildVariant/source/application/Tests.c</sourcefile>
      <sourceline>408</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies the values of post-build EcuM configuration parameters
  for one of its variants: EcuM_Config_0_VariantOne.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
  01. Initialize EcuM using the EcuM_Config_0_VariantOne as configuration.
  02. Check if the Drivers for StartPreOS phase were initialized in the expected sequence.
  03. Verify that the modules configured in Init Block 1 (Mcu,Gpt and Dem)
      are initialized with the proper initialization parameters from the post-build
      configuration EcuM_Config_0_VariantOne.
  04. Verify default shutdown target (SLEEP) and default sleep mode (SLEEPMODE_0) from the post-build configuration EcuM_Config_0_VariantOne.
  05. Clear all wakeup events and select Sleep as a shutdown target.
  06. Simulate a wakeup event so that after two iteration, the callout stub will trigger it during Sleep phase.
  07. Trigger Sleep phase by EcuM_GoPoll().
  08. Check that drivers in the RestartList (Det) are initialized in the expected sequence.
       Verify the restarted modules are initialized with the proper initialization parameters.
  09. Check EcuM value of DefaultAppMode passed as argument to StartOS().
  10. Enter the EcuM Fixed state ECUM_STATE_APP_RUN.
  11. Check the value of the EcuM Fixed configuration parameter EcuMRunMinimumDuration.

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Conf.PBVariant.EcuMRelocatablePbcfgEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Conf.PBVariant.DefaultState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Conf.PBVariant.EcuMEnableDriver</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1021</internalId></specobject>
    <specobject>
      <id>TS_ECUM_CONF_PBVARIANT_VARIANT_TWO</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_PostBuildVariant/source/application/Tests.c</sourcefile>
      <sourceline>571</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies the values of post-build EcuM configuration parameters
  for one of its variants: EcuM_Config_0_VariantTwo.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
  01. Initialize EcuM using the EcuM_Config_0_VariantTwo as configuration.
  02. Check if the Drivers for StartPreOS phase were initialized in the expected sequence.
  03a. Verify that the modules configured in Init Block 1 (Dem)
      are initialized with the proper initialization parameters from the post-build
      configuration EcuM_Config_0_VariantTwo.
  03b. Check that Mcu, Gpt (configured in VariantOne in Init List One) are not initialized in VariantTwo
       (already done with the StartPreOS_CallSequence but added an extra check) 
  04. Verify default shutdown target (RESET) and default sleep mode (RESET_MCU) from the post-build configuration EcuM_Config_0_VariantTwo.
  05. Clear all wakeup events and select Sleep as a shutdown target.
  06. Simulate a wakeup event so that after two iteration, the callout stub will trigger it during Sleep phase.
  07. Trigger Sleep phase by EcuM_GoPoll().
  08a. Check that drivers in the RestartList are initialized in the expected sequence.
       Verify the restarted modules are initialized with the proper initialization parameters.
  08b. Check that Det (configured in VariantOne in the Restart List, are not restarted in VariantTwo)
       (already done with the Sleep_CallSequence but added an extra check) 
  09. Check EcuM value of DefaultAppMode passed as argument to StartOS().
  10. Enter the EcuM Fixed state ECUM_STATE_APP_RUN.
  11. Check the value of the EcuM Fixed configuration parameter EcuMRunMinimumDuration.

Test Input: 

Test Output: 
</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Conf.PBVariant.EcuMRelocatablePbcfgEnable</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>468</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Conf.PBVariant.DefaultState</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>466</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Conf.PBVariant.EcuMEnableDriver</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>467</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00205</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>133</internalId></provcov>
        <provcov>
          <linksto>EcuM.ECUC_EcuM_00106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>91</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1022</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_ASR_R2011_Uninit</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_R2011/source/application/Tests.c.m4</sourcefile>
      <sourceline>91</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test DET detection functionality for error ECUM_E_UNINIT of the EcuM_SelectShutdownTarget() API
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 
  Call the EcuM_SelectShutdownTarget() API before EcuM initialization

Test Input: 

Test Output: 
  EcuM_SelectShutdownTarget() will return E_NOT_OK.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1023</internalId></specobject>
    <specobject>
      <id>TS_ECUM_ASR_R2011_Prep</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_R2011/source/application/Tests.c.m4</sourcefile>
      <sourceline>136</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Pseudo test to initialize the EcuM and start the OS.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  None.

Test Execution: 

Test Input: 

Test Output: 
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02811</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>204</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1024</internalId></specobject>
    <specobject>
      <id>TS_ECUM_ASR_R2011_BootTarget</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_R2011/source/application/Tests.c.m4</sourcefile>
      <sourceline>184</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that all Boot Target RTE ports in the context of R20-11
  provided by the EcuM are created correctly.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  Start Rte and continue startup by calling EcuM_StartupTwo().

Test Execution: 
  1.1 Start EcuM and Rte.
Check Boot Target:
  1.2 Select Boot target as ECUM_BOOT_TARGET_APP.
  1.3 Get Boot target which will be updated in TestSwc_bootTarget.
  1.4 Check whether the retrieved Boot target is ECUM_BOOT_TARGET_APP.
  1.5 Select Boot target as ECUM_BOOT_TARGET_OEM_BOOTLOADER.
  1.6 Get Boot target which will be updated in TestSwc_bootTarget.
  1.7 Check whether the retrieved Boot target is ECUM_BOOT_TARGET_OEM_BOOTLOADER.
  1.8 Select Boot target as ECUM_BOOT_TARGET_SYS_BOOTLOADER.
  1.9 Get Boot target which will be updated in TestSwc_bootTarget.
  1.10 Check whether the retrieved Boot target is ECUM_BOOT_TARGET_SYS_BOOTLOADER.

Test Input: 

Test Output: 
  The retrieved Boot target shall be ECUM_BOOT_TARGET_APP,
  ECUM_BOOT_TARGET_OEM_BOOTLOADER and ECUM_BOOT_TARGET_SYS_BOOTLOADER
  for the subsequent selection of Boot target.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>357</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03012_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>407</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03012_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>408</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1025</internalId></specobject>
    <specobject>
      <id>TS_ECUM_ASR_R2011_ShutdownTarget</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_R2011/source/application/Tests.c.m4</sourcefile>
      <sourceline>273</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies that all Shutdown Target RTE ports in the context of R20-11
  provided by the EcuM are created correctly.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM is initialized and Rte is started.

Test Execution: 
  1.1 Call EcuM_SelectShutdownTarget() API from a slave core and check that Det error is reported.
Check Shutdown Target RESET:
  1.2 Select Shutdown target as ECUM_SHUTDOWN_TARGET_SLEEP.
  1.3 Select Shutdown target as ECUM_SHUTDOWN_TARGET_RESET.
  1.4 Get Shutdown target which will be updated in TestSwc_shutdownTarget and sleep mode in TestSwc_sleepMode.
  1.5 Check whether the retrieved Shutdown target is ECUM_SHUTDOWN_TARGET_RESET and sleep mode is ECUM_RESET_MCU
Check Shutdown Target SLEEP:
  1.6 Select Shutdown target as ECUM_SHUTDOWN_TARGET_SLEEP.
  1.7 Get Shutdown target which will be updated in TestSwc_shutdownTarget and sleep mode in TestSwc_sleepMode.
  1.8 Check whether the retrieved Shutdown target is ECUM_SHUTDOWN_TARGET_SLEEP and sleep mode is SLEEPMODE_0
Check Shutdown Target OFF:
  1.9 Select Shutdown target as ECUM_SHUTDOWN_TARGET_OFF.
  1.10 Get Shutdown target which will be updated in TestSwc_shutdownTarget.
  1.11 Check whether the retrieved Shutdown target is ECUM_SHUTDOWN_TARGET_OFF.
Check Shutdown Cause ECU_STATE:
  1.12 Select Shutdown cause as ECUM_CAUSE_ECU_STATE.
  1.13 Get Shutdown cause which will be updated in TestSwc_shutdownCause.
  1.14 Check whether the retrieved Shutdown cause is ECUM_CAUSE_ECU_STATE.
Check last shutdown target:
  1.15 Retrieve last shutdown target and shutdown mode by calling TestSwc_shutdownTarget() which will be updated in TestSwc_shutdownTarget and TestSwc_mode
  1.16 Check whether the retrieved Shutdown target is ECUM_SHUTDOWN_TARGET_OFF and shutdown mode is SLEEPMODE_0
  1.17 Select an invalid shutdown target and verify it does not store a shutdown target and sleep mode.

Test Input: 

Test Output: 
 The retrieved Shutdown target values shall be ECUM_SHUTDOWN_TARGET_SLEEP, ECUM_SHUTDOWN_TARGET_RESET and ECUM_SHUTDOWN_TARGET_OFF.
 The retrieved Shutdown cause shall be ECUM_CAUSE_ECU_STATE.
</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_00624</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>146</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02185</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>156</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02822</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>207</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02979</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03011_1</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>402</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03011_2</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>403</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03011_3</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>404</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03011_4</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>405</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB_Ref.SWS_EcuM_03011_5</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>406</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1026</internalId></specobject>
    <specobject>
      <id>TS_ECUM_ASR_R2011_Det</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_R2011/source/application/Tests.c.m4</sourcefile>
      <sourceline>426</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test DET detection functionality for Shutdown Target APIs called through RTE ports
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM is initialized and Rte is started.

Test Execution: 
Call the following APIs with invalid parameters:
  EcuM_GetShutdownTarget()
  EcuM_GetLastShutdownTarget()
  EcuM_SelectShutdownTarget()

Test Input: 

Test Output: 
Following APIs will return Det errors.
  EcuM_GetShutdownTarget()
  EcuM_GetLastShutdownTarget()
  EcuM_SelectShutdownTarget()
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04032</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>303</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1027</internalId></specobject>
    <specobject>
      <id>TS_ECUM_ASR_R2011_ShutdownPrep</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_R2011/source/application/Tests.c.m4</sourcefile>
      <sourceline>504</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Test the sleep and shutdown of EcuM and the OS after selecting a shutdown target using the provided Rte ports.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM is initialized and Rte is started.

Test Execution: 
  1.1 Select Shutdown Target as SLEEP
  1.2 Put ECU into a HALT sleep mode.
  1.3 Check the last shutdown target has been stored correctly.
  1.4 Select Shutdown Target as RESET
  1.5 Put ECU into a HALT sleep mode.
  1.6 Check the last shutdown target has been stored correctly.
  1.7 Clear all wakeup events before shutting down the Os
  1.8 Select either a RESET or OFF shutdown target
  1.9 Shutdown the OS.

Test Input: 

Test Output: 

&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.SWS_EcuM_02979</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>256</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>351</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04136</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>382</internalId></provcov>
        <provcov>
          <linksto>EcuM.SWS_EcuM_04111</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>358</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1028</internalId></specobject>
    <specobject>
      <id>TS_ECUM_ASR_R2011_Shutdown</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Conformance/IN/EcuM_ConTest_R2011/source/application/Tests.c.m4</sourcefile>
      <sourceline>594</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  Verifies that the function ShutdownOS has been executed by the EcuM.
  As a result, the master EcuM instance shall be stopped by the Os.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM is initialized and Rte is started.

Test Execution: 
  VP1: The EcuM core instance has been stopped.

Test Input: 

Test Output: 
  The OS ShutdownHook function is called for the EcuM core instance.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.ASR42.SWS_EcuM_04019</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>79</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1029</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_EcuM_Generic_RestartList_Error</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Generic/IN/EcuM_Generic_RestartList_Error/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that EcuM displays an error message at generation
  if the entries in the Restart List are not in the same order as in the Init List Zero
  and Init List One.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  In EcuM
  /AUTOSAR/TOP-LEVEL-PACKAGES/EcuM/ELEMENTS/EcuM/EcuMConfiguration/EcuM_Config_0/EcuMCommonConfiguration/EcuMDriverRestartList
  /AUTOSAR/TOP-LEVEL-PACKAGES/EcuM/ELEMENTS/EcuM/EcuMConfiguration/EcuM_Config_0/EcuMCommonConfiguration/EcuMDriverInitListZero
  /AUTOSAR/TOP-LEVEL-PACKAGES/EcuM/ELEMENTS/EcuM/EcuMConfiguration/EcuM_Config_0/EcuMCommonConfiguration/EcuMDriverInitListOne
  are enabled and each one is configured with at least one EcuMDriverInitItem.

Test Execution: 
  VP(EcuM.RestartList_Error):
  The following error must be issued by EcuM at generation: 
  - Entries in the restart list should be in the same order as in init list zero and one.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.RestartList_Error</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>461</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1030</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_EcuM_Generic_RestartList_Warning</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Generic/IN/EcuM_Generic_RestartList_Warning/source/application/EbTest_Config.h</sourcefile>
      <sourceline>28</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test checks that EcuM displays a warning message at generation
  if entries in the Restart List do not have a corresponding entry neither in the Init List Zero
  or Init List One.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  In EcuM
  /AUTOSAR/TOP-LEVEL-PACKAGES/EcuM/ELEMENTS/EcuM/EcuMConfiguration/EcuM_Config_0/EcuMCommonConfiguration/EcuMDriverRestartList
  /AUTOSAR/TOP-LEVEL-PACKAGES/EcuM/ELEMENTS/EcuM/EcuMConfiguration/EcuM_Config_0/EcuMCommonConfiguration/EcuMDriverInitListZero
  /AUTOSAR/TOP-LEVEL-PACKAGES/EcuM/ELEMENTS/EcuM/EcuMConfiguration/EcuM_Config_0/EcuMCommonConfiguration/EcuMDriverInitListOne
  are enabled and each one is configured with at least one EcuMDriverInitItem.

Test Execution: 
  VP(EcuM.RestartList_Warning):
  The following warning must be issued by EcuM at generation: 
  - There is one entry in the restart list which does not have a counterpart in init list zero or one.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.RestartList_Warning</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>462</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1031</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_ImpTest_ASR40_SvcCompDescr</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Implementation/IN/EcuM_ImpTest_ASR40/source/application/Tests.c</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that the generated service description complies
to the EcuM configuration.

Test Object: None.
Test Precondition: 

Test Execution: 

This test is executed with the following permutations:
   Parameter / Permutation      |    p0    |    p2    |    p7    |
-------------------------------------------|----------|----------|
EcuMEnableASR40ServiceAPI       |  false   |  true    |  true    |
EcuMDefaultASRServiceAPI        |AUTOSAR_40|  NONE    |AUTOSAR_40|


Ts5-Process execution steps:
  01: Ts5 build step: Generate all files
  02: Compare generated System Description files
      with golden reference files
  03: Include comparison difference of 02 in this test
  04: VP
      If no difference in 03 exists, then nothing
      will be included and the test compiles

      If a difference exists in 03, then the gnu diff
      tool generates some characters which cannot be
      compiled which will be indicated by the ts5 environment.


Test Input: 

System Description reference files (EcuM_swc_interface.arxml and
EcuM_swc_internal.arxml) are provided in directory "reference"
and contains the following definition of the
EcuM Service:

For Permutations: p0
Service EcuStateManager
{
    // For each user the ECU State Manager provides a port
    // to request/release RUN and POSTRUN states.
    // there are NU users;
    ProvidePort EcuM_StateRequest SR0;
    ...
    ProvidePort EcuM_StateRequest SR5;

    ProvidePort EcuM_CurrentMode currentMode;

    ProvidePort EcuM_ShutdownTarget shutdownTarget;

    ProvidePort EcuM_BootTarget bootTarget;

  InternalBehavior
  {
      RunnableEntity RequestRUN
    symbol "EcuM_RequestRUN"
    canbeInvokedConcurrently = TRUE
      RunnableEntity ReleaseRUN
    symbol "EcuM_ReleaseRUN"
    canbeInvokedConcurrently = TRUE
      RunnableEntity RequestPOSTRUN
    symbol "EcuM_RequestPOST_RUN"
    canbeInvokedConcurrently = TRUE
      RunnableEntity ReleasePOSTRUN
    symbol "EcuM_ReleasePOST_RUN"
    canbeInvokedConcurrently = TRUE
      RunnableEntity SelectShutdownTarget
    symbol "EcuM_SelectShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetShutdownTarget
    symbol "EcuM_GetShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetLastShutdownTarget
    symbol "EcuM_GetLastShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity SelectBootTarget
    symbol "EcuM_SelectBootTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetBootTarget
    symbol "EcuM_GetBootTarget"
    canbeInvokedConcurrently = TRUE

    SR0.RequestRUN -&amp;gt; RequestRUN;
    SR0.ReleaseRUN -&amp;gt; ReleaseRUN;
    SR0.RequestPOSTRUN -&amp;gt; RequestPOSTRUN;
    SR0.ReleasePOSTRUN -&amp;gt; RequestPOSTRUN;
    PortArgument
    {
      port = SR0,
      value.type = EcuM_UserType,
      value.value = EcuM_User[0].User
    };
    ...
    SR5.RequestRUN -&amp;gt; RequestRUN;
    SR5.ReleaseRUN -&amp;gt; ReleaseRUN;
    SR5.RequestPOSTRUN -&amp;gt; RequestPOSTRUN;
    SR5.ReleasePOSTRUN -&amp;gt; RequestPOSTRUN;
    PortArgument
    {
      port = SR5,
      value.type = EcuM_UserType,
      value.value = EcuM_User[5].User
    };

    shutDownTarget.SelectShutdownTarget -&amp;gt; SelectShutdownTarget;
    shutDownTarget.GetShutdownTarget -&amp;gt; GetShutdownTarget;
    shutDownTarget.GetLastShutdownTarget -&amp;gt; GetLastShutdownTarget;
    bootTarget.SelectBootTarget -&amp;gt; SelectBootTarget;
    bootTarget.GetBootTarget -&amp;gt; GetBootTarget;
  };
};

For Permutations: p2
Service EcuStateManager
{
    // Using one instance for ASR40 as
    // _INFIX_ or _POSTFIX

    // For each user the ECU State Manager provides a port
    // to request/release RUN and POSTRUN states.
    // there are NU users;

    ProvidePort EcuM_StateRequest SR_INFIX_0;
    ...
    ProvidePort EcuM_StateRequest SR_INFIX_5;

    ProvidePort EcuM_CurrentMode currentMode_POSTFIX;

    ProvidePort EcuM_ShutdownTarget shutdownTarget_POSTFIX;

    ProvidePort EcuM_BootTarget bootTarget_POSTFIX;

  InternalBehavior
  {
      RunnableEntity RequestRUN
    symbol "EcuM_INFIX_RequestRUN"
    canbeInvokedConcurrently = TRUE
      RunnableEntity ReleaseRUN
    symbol "EcuM_INFIX_ReleaseRUN"
    canbeInvokedConcurrently = TRUE
      RunnableEntity RequestPOSTRUN
    symbol "EcuM_INFIX_RequestPOST_RUN"
    canbeInvokedConcurrently = TRUE
      RunnableEntity ReleasePOSTRUN
    symbol "EcuM_INFIX_ReleasePOST_RUN"
    canbeInvokedConcurrently = TRUE
      RunnableEntity SelectShutdownTarget
    symbol "EcuM_INFIX_SelectShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetShutdownTarget
    symbol "EcuM_INFIX_GetShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetLastShutdownTarget
    symbol "EcuM_INFIX_GetLastShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity SelectBootTarget
    symbol "EcuM_INFIX_SelectBootTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetBootTarget
    symbol "EcuM_INFIX_GetBootTarget"
    canbeInvokedConcurrently = TRUE

    SR_INFIX_0.RequestRUN -&amp;gt; RequestRUN;
    SR_INFIX_0.ReleaseRUN -&amp;gt; ReleaseRUN;
    SR_INFIX_0.RequestPOSTRUN -&amp;gt; RequestPOSTRUN;
    SR_INFIX_0.ReleasePOSTRUN -&amp;gt; RequestPOSTRUN;
    PortArgument
    {
      port = SR_INFIX_0,
      value.type = EcuM_INFIX_UserType,
      value.value = EcuM_INFIX_User[0].User
    };
    ...
    SR_INFIX_5.RequestRUN -&amp;gt; RequestRUN;
    SR_INFIX_5.ReleaseRUN -&amp;gt; ReleaseRUN;
    SR_INFIX_5.RequestPOSTRUN -&amp;gt; RequestPOSTRUN;
    SR_INFIX_5.ReleasePOSTRUN -&amp;gt; RequestPOSTRUN;
    PortArgument
    {
      port = SR_INFIX_5,
      value.type = EcuM_INFIX_UserType,
      value.value = EcuM_INFIX_User[5].User
    };

    shutDownTarget_POSTFIX.SelectShutdownTarget -&amp;gt; SelectShutdownTarget;
    shutDownTarget_POSTFIX.GetShutdownTarget -&amp;gt; GetShutdownTarget;
    shutDownTarget_POSTFIX.GetLastShutdownTarget -&amp;gt; GetLastShutdownTarget;
    bootTarget_POSTFIX.SelectBootTarget -&amp;gt; SelectBootTarget;
    bootTarget_POSTFIX.GetBootTarget -&amp;gt; GetBootTarget;
  };
};

For Permutations: p7
Service EcuStateManager
{
    // Using one instance for ASR40 as
    // _INFIX_ or _POSTFIX

    // For each user the ECU State Manager provides a port
    // to request/release RUN and POSTRUN states.
    // there are NU users;

    ProvidePort EcuM_StateRequest SR_INFIX_0;
    ...
    ProvidePort EcuM_StateRequest SR_INFIX_5;

    ProvidePort EcuM_StateRequest SR0;
    ...
    ProvidePort EcuM_StateRequest SR5;

    ProvidePort EcuM_CurrentMode currentMode_POSTFIX;
    ProvidePort EcuM_ShutdownTarget shutdownTarget_POSTFIX;
    ProvidePort EcuM_BootTarget bootTarget_POSTFIX;

    ProvidePort EcuM_CurrentMode currentMode;
    ProvidePort EcuM_ShutdownTarget shutdownTarget;
    ProvidePort EcuM_BootTarget bootTarget;

  InternalBehavior
  {
      RunnableEntity RequestRUN
    symbol "EcuM_INFIX_RequestRUN"
    canbeInvokedConcurrently = TRUE
      RunnableEntity ReleaseRUN
    symbol "EcuM_INFIX_ReleaseRUN"
    canbeInvokedConcurrently = TRUE
      RunnableEntity RequestPOSTRUN
    symbol "EcuM_INFIX_RequestPOST_RUN"
    canbeInvokedConcurrently = TRUE
      RunnableEntity ReleasePOSTRUN
    symbol "EcuM_INFIX_ReleasePOST_RUN"
    canbeInvokedConcurrently = TRUE
      RunnableEntity SelectShutdownTarget
    symbol "EcuM_INFIX_SelectShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetShutdownTarget
    symbol "EcuM_INFIX_GetShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetLastShutdownTarget
    symbol "EcuM_INFIX_GetLastShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity SelectBootTarget
    symbol "EcuM_INFIX_SelectBootTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetBootTarget
    symbol "EcuM_INFIX_GetBootTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity RequestRUN
    symbol "EcuM_RequestRUN"
    canbeInvokedConcurrently = TRUE
      RunnableEntity ReleaseRUN
    symbol "EcuM_ReleaseRUN"
    canbeInvokedConcurrently = TRUE
      RunnableEntity RequestPOSTRUN
    symbol "EcuM_RequestPOST_RUN"
    canbeInvokedConcurrently = TRUE
      RunnableEntity ReleasePOSTRUN
    symbol "EcuM_ReleasePOST_RUN"
    canbeInvokedConcurrently = TRUE
      RunnableEntity SelectShutdownTarget
    symbol "EcuM_SelectShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetShutdownTarget
    symbol "EcuM_GetShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetLastShutdownTarget
    symbol "EcuM_GetLastShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity SelectBootTarget
    symbol "EcuM_SelectBootTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetBootTarget
    symbol "EcuM_GetBootTarget"
    canbeInvokedConcurrently = TRUE

    // Infixed
    SR_INFIX_0.RequestRUN -&amp;gt; RequestRUN;
    SR_INFIX_0.ReleaseRUN -&amp;gt; ReleaseRUN;
    SR_INFIX_0.RequestPOSTRUN -&amp;gt; RequestPOSTRUN;
    SR_INFIX_0.ReleasePOSTRUN -&amp;gt; RequestPOSTRUN;
    PortArgument
    {
      port = SR_INFIX_0,
      value.type = EcuM_INFIX_UserType,
      value.value = EcuM_INFIX_User[0].User
    };
    ...
    SR_INFIX_5.RequestRUN -&amp;gt; RequestRUN;
    SR_INFIX_5.ReleaseRUN -&amp;gt; ReleaseRUN;
    SR_INFIX_5.RequestPOSTRUN -&amp;gt; RequestPOSTRUN;
    SR_INFIX_5.ReleasePOSTRUN -&amp;gt; RequestPOSTRUN;
    PortArgument
    {
      port = SR_INFIX_5,
      value.type = EcuM_INFIX_UserType,
      value.value = EcuM_INFIX_User[5].User
    };

    shutDownTarget_POSTFIX.SelectShutdownTarget -&amp;gt; SelectShutdownTarget;
    shutDownTarget_POSTFIX.GetShutdownTarget -&amp;gt; GetShutdownTarget;
    shutDownTarget_POSTFIX.GetLastShutdownTarget -&amp;gt; GetLastShutdownTarget;
    bootTarget_POSTFIX.SelectBootTarget -&amp;gt; SelectBootTarget;
    bootTarget_POSTFIX.GetBootTarget -&amp;gt; GetBootTarget;

    // default
    SR0.RequestRUN -&amp;gt; RequestRUN;
    SR0.ReleaseRUN -&amp;gt; ReleaseRUN;
    SR0.RequestPOSTRUN -&amp;gt; RequestPOSTRUN;
    SR0.ReleasePOSTRUN -&amp;gt; RequestPOSTRUN;
    PortArgument
    {
      port = SR0,
      value.type = EcuM_UserType,
      value.value = EcuM_User[0].User
    };
    ...
    SR5.RequestRUN -&amp;gt; RequestRUN;
    SR5.ReleaseRUN -&amp;gt; ReleaseRUN;
    SR5.RequestPOSTRUN -&amp;gt; RequestPOSTRUN;
    SR5.ReleasePOSTRUN -&amp;gt; RequestPOSTRUN;
    PortArgument
    {
      port = SR5,
      value.type = EcuM_UserType,
      value.value = EcuM_User[5].User
    };

    shutDownTarget.SelectShutdownTarget -&amp;gt; SelectShutdownTarget;
    shutDownTarget.GetShutdownTarget -&amp;gt; GetShutdownTarget;
    shutDownTarget.GetLastShutdownTarget -&amp;gt; GetLastShutdownTarget;
    bootTarget.SelectBootTarget -&amp;gt; SelectBootTarget;
    bootTarget.GetBootTarget -&amp;gt; GetBootTarget;
  };
};


Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1032</internalId></specobject>
    <specobject>
      <id>TS_EcuM_ImpTest_ASR40APIs</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Implementation/IN/EcuM_ImpTest_ASR40/source/application/Tests.c</sourcefile>
      <sourceline>442</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Check that the EcuM provides the correct ASR40 APIs
  as specified.

Test Object: None.
Test Precondition: 

For permutations: p2
  Test Component "TestSwc0" is connected to the EcuM Service Component in ASR40 behavior
  Test Component "TestSwc1" is connected to the EcuM Service Component in ASR40 behavior


Test Execution: 

  01: VP (EcuM.EB.ASR40.EcuM100, EcuM.EB.ASR40.EcuM101)
      The following APIs are defined as macros to corresponding functions infixed with ASR40:
      - "EcuM_SelectShutdownTarget"
      - "EcuM_GetShutdownTarget"
      - "EcuM_GetLastShutdownTarget"
      - "EcuM_GetMostRecentShutdown"
      - "EcuM_NextRecentShutdown"
      - "EcuM_SelectShutdownCause"
      - "EcuM_GetShutdownCause"
      - "EcuM_SelectBootTarget"
      - "EcuM_GetBootTarget"
  02: VP (EcuM.EB.ASR40.EcuM103, EcuM.EB.ASR40.EcuM105, EcuM.EB.ASR40.EcuM106)
      The following APIs without infix can be called
      - "EcuM_SelectShutdownTarget"
      - "EcuM_GetShutdownTarget"
      - "EcuM_GetLastShutdownTarget"
      - "EcuM_GetMostRecentShutdown"
      - "EcuM_NextRecentShutdown"
      - "EcuM_SelectShutdownCause"
      - "EcuM_GetShutdownCause"
      - "EcuM_SelectBootTarget"
      - "EcuM_GetBootTarget"
  03: VP (EcuM.EB.ASR40.EcuM103, EcuM.EB.ASR40.EcuM105, EcuM.EB.ASR40.EcuM106)
      There exist an implementation for the following APIs infixed with ASR40 and
      it can be called.
      - "EcuM_ASR40_SelectShutdownTarget"
      - "EcuM_ASR40_GetShutdownTarget"
      - "EcuM_ASR40_GetLastShutdownTarget"
      - "EcuM_ASR40_GetMostRecentShutdown"
      - "EcuM_ASR40_NextRecentShutdown"
      - "EcuM_ASR40_SelectShutdownCause"
      - "EcuM_ASR40_GetShutdownCause"
      - "EcuM_ASR40_SelectBootTarget"
      - "EcuM_ASR40_GetBootTarget"
  04: VP (EcuM.EB.ASR40.EcuM102, EcuM.EB.ASR40.EcuM104, EcuM.EB.ASR40.EcuM107)
      There exist an implementation for the following APIs infixed with ASR40 and
      it can be called.
      - "EcuM_ASR40_SelectShutdownTarget"
      - "EcuM_ASR40_GetShutdownTarget"
      - "EcuM_ASR40_GetLastShutdownTarget"
      - "EcuM_ASR40_SelectBootTarget"
      - "EcuM_ASR40_GetBootTarget"

Test Input: 

Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1033</internalId></specobject>
    <specobject>
      <id>TS_EcuM_ImpTest_ASR40Types</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Implementation/IN/EcuM_ImpTest_ASR40/source/application/Tests.c</sourcefile>
      <sourceline>642</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Test Object: None.
Test Precondition: 

Test Execution: 

  01: VP (EcuM.EB.ASR40.EcuM103)
      Variables with type EcuM_ASR40_StateType, EcuM_ASR40_ShutdownCauseType,
      and EcuM_ASR40_BootTargetType can be instantiated and equals type "uint8"
  02: VP (EcuM.EB.ASR40.EcuM105)
      Variables with type EcuM_StateType, EcuM_ShutdownCauseType, and
      EcuM_BootTargetType can be instantiated and equals type uint8


Test Input: 

Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1034</internalId></specobject>
    <specobject>
      <id>TS_ECUM_ImpTest_ASR40Call</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Implementation/IN/EcuM_ImpTest_ASR40/source/application/Tests.c</sourcefile>
      <sourceline>739</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test if all ASR40 RTE ports provided by the EcuM are created
  correctly.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM_StartupTwo() was called to continue startup and Rte shall be started.

Test Execution: 
  By using ASR40 as default API:

  Select Boot target as ECUM_BOOT_TARGET_APP.
  Get Boot target which will be updated in TestSwc_ASR40_bootTarget.
  Check whether the retrieved Boot target is ECUM_BOOT_TARGET_APP.
  Select Boot target as ECUM_BOOT_TARGET_OEM_BOOTLOADER.
  Get Boot target which will be updated in TestSwc_ASR40_bootTarget.
  Check whether the retrieved Boot target is ECUM_BOOT_TARGET_OEM_BOOTLOADER.
  Select Boot target as ECUM_BOOT_TARGET_SYS_BOOTLOADER.
  Get Boot target which will be updated in TestSwc_ASR40_bootTarget.
  Check whether the retrieved Boot target is ECUM_BOOT_TARGET_SYS_BOOTLOADER.
  Select Shutdown target as ECUM_STATE_OFF.
  Select Shutdown target as ECUM_STATE_RESET.
  Get Shutdown target which will be updated in TestSwc_ASR40_shutdownTarget.
  Check whether the retrieved Shutdown target is ECUM_STATE_RESET.
  Select Shutdown cause as ECUM_CAUSE_ECU_STATE.
  Get Shutdown cause which will be updated in TestSwc_ASR40_shutdownCause.
  Check whether the retrieved Shutdown cause is ECUM_CAUSE_ECU_STATE.
  Get Most Recent Shutdown.
  Check whether the retrieved Shutdown cause is ECUM_CAUSE_ECU_STATE
  and Shutdown target is ECUM_STATE_RESET.
  Get Next Recent Shutdown.
  Check whether the retrieved Shutdown cause and Shutdown target is 0,
  since no EcuM shutdown occurred to store the informations

Test Input: 

Test Output: 
 The retrieved Boot target shall be ECUM_BOOT_TARGET_APP,
 ECUM_BOOT_TARGET_OEM_BOOTLOADER and ECUM_BOOT_TARGET_SYS_BOOTLOADER (only ASR40)
 for the subsequent selection of Boot target.
 The retrieved Shutdown target shall be ECUM_STATE_RESET.
 The retrieved Shutdown cause (only ASR40) shall be ECUM_CAUSE_ECU_STATE.
 The shutdown target and, in case of ASR40, shutdown cause of the
 Most Recent shutdown shall be ECUM_STATE_RESET and ECUM_CAUSE_ECU_STATE
 respectively.
 The shutdown target ,shutdown cause of the Next Recent shutdown
 shall be 0 for both since no shutdown activity to store this
 information has occured.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1035</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_ECUM_ImpTest_ASR40_SvcCompDescr_FlexOnly</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Implementation/IN/EcuM_ImpTest_ASR40_FlexOnly/source/application/Tests.c</sourcefile>
      <sourceline>73</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
Check that the generated service description complies
to the EcuM configuration.

Test Object: None.
Test Precondition: 

Test Execution: 

This test is executed with the following permutations:
   Parameter / Permutation      |    p0    |    p2    |    p7    |
-------------------------------------------|----------|----------|
EcuMEnableASR40ServiceAPI       |  false   |  true    |  true    |
EcuMDefaultASRServiceAPI        |AUTOSAR_40|  NONE    |AUTOSAR_40|


Ts5-Process execution steps:
  01: Ts5 build step: Generate all files
  02: Compare generated System Description files
      with golden reference files
  03: Include comparison difference of 02 in this test
  04: VP
      If no difference in 03 exists, then nothing
      will be included and the test compiles

      If a difference exists in 03, then the gnu diff
      tool generates some characters which cannot be
      compiled which will be indicated by the ts5 environment.


Test Input: 

System Description reference files (EcuM_swc_interface.arxml and
EcuM_swc_internal.arxml) are provided in directory "reference"
and contains the following definition of the
EcuM Service:

For Permutations: p0
Service EcuStateManager
{
    ProvidePort EcuM_ShutdownTarget shutdownTarget;

    ProvidePort EcuM_BootTarget bootTarget;

  InternalBehavior
  {
      RunnableEntity SelectShutdownTarget
    symbol "EcuM_SelectShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetShutdownTarget
    symbol "EcuM_GetShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetLastShutdownTarget
    symbol "EcuM_GetLastShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity SelectBootTarget
    symbol "EcuM_SelectBootTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetBootTarget
    symbol "EcuM_GetBootTarget"
    canbeInvokedConcurrently = TRUE

    shutDownTarget.SelectShutdownTarget -&amp;gt; SelectShutdownTarget;
    shutDownTarget.GetShutdownTarget -&amp;gt; GetShutdownTarget;
    shutDownTarget.GetLastShutdownTarget -&amp;gt; GetLastShutdownTarget;
    bootTarget.SelectBootTarget -&amp;gt; SelectBootTarget;
    bootTarget.GetBootTarget -&amp;gt; GetBootTarget;
  };
};

For Permutations: p2
Service EcuStateManager
{
    // Using one instance for ASR40 as
    // _INFIX_ or _POSTFIX

    ProvidePort EcuM_ShutdownTarget shutdownTarget_POSTFIX;

    ProvidePort EcuM_BootTarget bootTarget_POSTFIX;

  InternalBehavior
  {
      RunnableEntity SelectShutdownTarget
    symbol "EcuM_INFIX_SelectShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetShutdownTarget
    symbol "EcuM_INFIX_GetShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetLastShutdownTarget
    symbol "EcuM_INFIX_GetLastShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity SelectBootTarget
    symbol "EcuM_INFIX_SelectBootTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetBootTarget
    symbol "EcuM_INFIX_GetBootTarget"
    canbeInvokedConcurrently = TRUE

    shutDownTarget_POSTFIX.SelectShutdownTarget -&amp;gt; SelectShutdownTarget;
    shutDownTarget_POSTFIX.GetShutdownTarget -&amp;gt; GetShutdownTarget;
    shutDownTarget_POSTFIX.GetLastShutdownTarget -&amp;gt; GetLastShutdownTarget;
    bootTarget_POSTFIX.SelectBootTarget -&amp;gt; SelectBootTarget;
    bootTarget_POSTFIX.GetBootTarget -&amp;gt; GetBootTarget;
  };
};

For Permutations: p7
Service EcuStateManager
{
    // Using one instance for ASR40 as
    // _INFIX_ or _POSTFIX

    ProvidePort EcuM_ShutdownTarget shutdownTarget_POSTFIX;
    ProvidePort EcuM_BootTarget bootTarget_POSTFIX;

    ProvidePort EcuM_ShutdownTarget shutdownTarget;
    ProvidePort EcuM_BootTarget bootTarget;

  InternalBehavior
  {
      RunnableEntity SelectShutdownTarget
    symbol "EcuM_INFIX_SelectShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetShutdownTarget
    symbol "EcuM_INFIX_GetShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetLastShutdownTarget
    symbol "EcuM_INFIX_GetLastShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity SelectBootTarget
    symbol "EcuM_INFIX_SelectBootTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetBootTarget
    symbol "EcuM_INFIX_GetBootTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity SelectShutdownTarget
    symbol "EcuM_SelectShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetShutdownTarget
    symbol "EcuM_GetShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetLastShutdownTarget
    symbol "EcuM_GetLastShutdownTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity SelectBootTarget
    symbol "EcuM_SelectBootTarget"
    canbeInvokedConcurrently = TRUE
      RunnableEntity GetBootTarget
    symbol "EcuM_GetBootTarget"
    canbeInvokedConcurrently = TRUE

    shutDownTarget_POSTFIX.SelectShutdownTarget -&amp;gt; SelectShutdownTarget;
    shutDownTarget_POSTFIX.GetShutdownTarget -&amp;gt; GetShutdownTarget;
    shutDownTarget_POSTFIX.GetLastShutdownTarget -&amp;gt; GetLastShutdownTarget;
    bootTarget_POSTFIX.SelectBootTarget -&amp;gt; SelectBootTarget;
    bootTarget_POSTFIX.GetBootTarget -&amp;gt; GetBootTarget;

    shutDownTarget.SelectShutdownTarget -&amp;gt; SelectShutdownTarget;
    shutDownTarget.GetShutdownTarget -&amp;gt; GetShutdownTarget;
    shutDownTarget.GetLastShutdownTarget -&amp;gt; GetLastShutdownTarget;
    bootTarget.SelectBootTarget -&amp;gt; SelectBootTarget;
    bootTarget.GetBootTarget -&amp;gt; GetBootTarget;
  };
};


Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM002</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>528</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM003</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>529</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM004</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>530</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM009</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>532</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM006</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>531</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM011</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>533</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1036</internalId></specobject>
    <specobject>
      <id>TS_EcuM_ImpTest_ASR40APIs_FlexOnly</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Implementation/IN/EcuM_ImpTest_ASR40_FlexOnly/source/application/Tests.c</sourcefile>
      <sourceline>271</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
  Check that the EcuM provides the correct ASR40 APIs
  as specified.

Test Object: None.
Test Precondition: 

For permutations: p2
  Test Component "TestSwc0" is connected to the EcuM Service Component in ASR40 behavior
  Test Component "TestSwc1" is connected to the EcuM Service Component in ASR40 behavior


Test Execution: 

  01: VP (EcuM.EB.ASR40.EcuM100, EcuM.EB.ASR40.EcuM101)
      The following APIs are defined as macros to corresponding functions infixed with ASR40:
      - "EcuM_SelectShutdownTarget"
      - "EcuM_GetShutdownTarget"
      - "EcuM_GetLastShutdownTarget"
      - "EcuM_GetMostRecentShutdown"
      - "EcuM_NextRecentShutdown"
      - "EcuM_SelectShutdownCause"
      - "EcuM_GetShutdownCause"
      - "EcuM_SelectBootTarget"
      - "EcuM_GetBootTarget"
  02: VP (EcuM.EB.ASR40.EcuM103, EcuM.EB.ASR40.EcuM105, EcuM.EB.ASR40.EcuM106)
      The following APIs without infix can be called
      - "EcuM_SelectShutdownTarget"
      - "EcuM_GetShutdownTarget"
      - "EcuM_GetLastShutdownTarget"
      - "EcuM_GetMostRecentShutdown"
      - "EcuM_NextRecentShutdown"
      - "EcuM_SelectShutdownCause"
      - "EcuM_GetShutdownCause"
      - "EcuM_SelectBootTarget"
      - "EcuM_GetBootTarget"
  03: VP (EcuM.EB.ASR40.EcuM103, EcuM.EB.ASR40.EcuM105, EcuM.EB.ASR40.EcuM106)
      There exist an implementation for the following APIs infixed with ASR40 and
      it can be called.
      - "EcuM_ASR40_SelectShutdownTarget"
      - "EcuM_ASR40_GetShutdownTarget"
      - "EcuM_ASR40_GetLastShutdownTarget"
      - "EcuM_ASR40_GetMostRecentShutdown"
      - "EcuM_ASR40_NextRecentShutdown"
      - "EcuM_ASR40_SelectShutdownCause"
      - "EcuM_ASR40_GetShutdownCause"
      - "EcuM_ASR40_SelectBootTarget"
      - "EcuM_ASR40_GetBootTarget"
  04: VP (EcuM.EB.ASR40.EcuM102, EcuM.EB.ASR40.EcuM104, EcuM.EB.ASR40.EcuM107)
      There exist an implementation for the following APIs infixed with ASR40 and
      it can be called.
      - "EcuM_ASR40_SelectShutdownTarget"
      - "EcuM_ASR40_GetShutdownTarget"
      - "EcuM_ASR40_GetLastShutdownTarget"
      - "EcuM_ASR40_SelectBootTarget"
      - "EcuM_ASR40_GetBootTarget"

Test Input: 

Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM100</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>535</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM101</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>536</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM106</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>539</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1037</internalId></specobject>
    <specobject>
      <id>TS_EcuM_ImpTest_ASR40Types_FlexOnly</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Implementation/IN/EcuM_ImpTest_ASR40_FlexOnly/source/application/Tests.c</sourcefile>
      <sourceline>464</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 

Test Object: None.
Test Precondition: 

Test Execution: 

  01: VP (EcuM.EB.ASR40.EcuM103)
      Variables with type EcuM_ASR40_StateType, EcuM_ASR40_ShutdownCauseType,
      and EcuM_ASR40_BootTargetType can be instantiated and equals type "uint8"
  02: VP (EcuM.EB.ASR40.EcuM105)
      Variables with type EcuM_StateType, EcuM_ShutdownCauseType, and
      EcuM_BootTargetType can be instantiated and equals type uint8


Test Input: 

Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM103</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>537</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM105</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>538</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1038</internalId></specobject>
    <specobject>
      <id>TS_ECUM_ImpTest_ASR40Call_FlexOnly</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Implementation/IN/EcuM_ImpTest_ASR40_FlexOnly/source/application/Tests.c</sourcefile>
      <sourceline>561</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  To test if all ASR40 RTE ports provided by the EcuM are created
  correctly.
&lt;/para&gt;

Test Object: None.
Test Precondition: 
  EcuM_StartupTwo() was called to continue startup and Rte shall be started.

Test Execution: 
  By using ASR40 as default API:

  Select Boot target as ECUM_BOOT_TARGET_APP.
  Get Boot target which will be updated in TestSwc_ASR40_bootTarget.
  Check whether the retrieved Boot target is ECUM_BOOT_TARGET_APP.
  Select Boot target as ECUM_BOOT_TARGET_OEM_BOOTLOADER.
  Get Boot target which will be updated in TestSwc_ASR40_bootTarget.
  Check whether the retrieved Boot target is ECUM_BOOT_TARGET_OEM_BOOTLOADER.
  Select Boot target as ECUM_BOOT_TARGET_SYS_BOOTLOADER.
  Get Boot target which will be updated in TestSwc_ASR40_bootTarget.
  Check whether the retrieved Boot target is ECUM_BOOT_TARGET_SYS_BOOTLOADER.
  Select Shutdown target as ECUM_STATE_OFF.
  Select Shutdown target as ECUM_STATE_RESET.
  Get Shutdown target which will be updated in TestSwc_ASR40_shutdownTarget.
  Check whether the retrieved Shutdown target is ECUM_STATE_RESET.
  Select Shutdown cause as ECUM_CAUSE_ECU_STATE.
  Get Shutdown cause which will be updated in TestSwc_ASR40_shutdownCause.
  Check whether the retrieved Shutdown cause is ECUM_CAUSE_ECU_STATE.
  Get Most Recent Shutdown.
  Check whether the retrieved Shutdown cause is ECUM_CAUSE_ECU_STATE
  and Shutdown target is ECUM_STATE_RESET.
  Get Next Recent Shutdown.
  Check whether the retrieved Shutdown cause and Shutdown target is 0,
  since no EcuM shutdown occurred to store the informations

Test Input: 

Test Output: 
 The retrieved Boot target shall be ECUM_BOOT_TARGET_APP,
 ECUM_BOOT_TARGET_OEM_BOOTLOADER and ECUM_BOOT_TARGET_SYS_BOOTLOADER (only ASR40)
 for the subsequent selection of Boot target.
 The retrieved Shutdown target shall be ECUM_STATE_RESET.
 The retrieved Shutdown cause (only ASR40) shall be ECUM_CAUSE_ECU_STATE.
 The shutdown target and, in case of ASR40, shutdown cause of the
 Most Recent shutdown shall be ECUM_STATE_RESET and ECUM_CAUSE_ECU_STATE
 respectively.
 The shutdown target ,shutdown cause of the Next Recent shutdown
 shall be 0 for both since no shutdown activity to store this
 information has occured.
&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM109</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>540</internalId></provcov>
        <provcov>
          <linksto>EcuM.EB.ASR40.EcuM110</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>541</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1039</internalId></specobject>
  </specobjects>
    <specobjects doctype="swuts">
    <specobject>
      <id>TS_EcuM_ImpTest_SchMSend_Interface</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Implementation/IN/EcuM_ImpTest_SchM_Interface/source/application/Tests.c.m4</sourcefile>
      <sourceline>373</sourceline>
      <version>1</version>
      <description>Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies the SchM Sender-Receiver Interface in regard
  to EcuM data provided ports.
&lt;/para&gt;

Test Object: SchM_Send APIs
Test Precondition: 
 - The EcuM_Init function is called on the master-core within the test
    entry-point (i.e. main function).
 - The EcuM_Init function is called on the slave-core within the test
    entry-point (i.e. main function).
 - The Schedule Manager needs to be initialized on both Os partitions
   (the state of both Os partitions need to be SCHM_PARTITION_ACTIVE).

Test Execution: 
 - VP1: EcuM_SelectShutdownTarget triggers a call to SchM_Send_EcuM_EcuM_SetSleepMode(EcuM_SLEEPMODE_1);
        The Testing_GetSleepMode port is connected to the EcuM_SetSleepMode, in order to verify the sent value.
        The master core instance EcuM_Core0_Context is also verified
 - VP2: EcuM_GoHalt() called in a slave core context, triggers a call to SchM_Send_EcuM_1_Core_1_EcuM_SlaveCoreReadyPort(coreID);
        The Testing_SlaveCoreSyncPort port is connected to the EcuM_SlaveCoreReadyPort, in order to verify the sent value.
 - VP3: EcuM_GoHalt() called in a master core context, triggers a call to SchM_Send_EcuM_EcuM_MasterCoreReadyPort(TRUE);
        The Testing_MasterCoreSyncPort port is connected to the EcuM_MasterCoreReadyPort, in order to verify the sent value.

Test Input: None.
Test Output: None.</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Bswmd.ProvidedDatas.SetSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>433</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Bswmd.ProvidedDatas.EcuM_MasterCoreReadyPort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>434</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Bswmd.ProvidedDatas.EcuM_SlaveCoreReadyPort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>435</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.EcuM_GetMasterCoreInstance</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>441</internalId></provcov>
        <provcov>
          <linksto>EcuM.Config.EcuMMainFunctionPeriod</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>474</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1040</internalId></specobject>
    <specobject>
      <id>TS_EcuM_ImpTest_SchMReceive_Interface</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Implementation/IN/EcuM_ImpTest_SchM_Interface/source/application/Tests.c.m4</sourcefile>
      <sourceline>453</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies the SchM Sender-Receiver Interface in regard
  to EcuM required ports.
&lt;/para&gt;

Test Object: SchM_Receive APIs
Test Precondition: 
 - The EcuM_Init function is called on the master-core within the test
    entry-point (i.e. main function).
 - The EcuM_Init function is called on the slave-core within the test
    entry-point (i.e. main function).
 - The Schedule Manager needs to be initialized on both Os partitions
   (the state of both Os partitions need to be SCHM_PARTITION_ACTIVE).

Test Execution: 
 - VP1: The test simulates that the slave core is ready by sending data to its queue.
        The data is read by calling SchM_Receive_EcuM_EcuM_SlaveCoreSyncPort(&amp;slavecoreID).
        The application would enter  an infinite loop if there is no data to read.
 - VP2: The test simulates that the master core is ready by sending data to its queue.
        The data is read by calling SchM_Receive_EcuM_1_Core_1_EcuM_MasterCoreSyncPort(&amp;EcuM_IsMasterReady).
        The application would enter  an infinite loop if there is no data to read.
 - VP3: The sent sleep mode value EcuM_SLEEPMODE_1 on the slave core is read and also verified
        by the global slaveCoreSleepMode variable. The slave core instance EcuM_Core1_Context is also verified.

Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.Bswmd.RequiredDatas.EcuM_SlaveCoreSyncPort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>439</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Bswmd.RequiredDatas.EcuM_MasterCoreSyncPort</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>438</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.Bswmd.RequiredDatas.GetSleepMode</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>437</internalId></provcov>
        <provcov>
          <linksto>EcuM.Impl.EcuM_GetCoreInstance</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>440</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1041</internalId></specobject>
    <specobject>
      <id>TS_EcuM_ImpTest_CallingContext_Master</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Implementation/IN/EcuM_ImpTest_SchM_Interface/source/application/Tests.c.m4</sourcefile>
      <sourceline>520</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies a list of EcuM APIs which should make no changes
  if they are called in a slave core context.
&lt;/para&gt;

Test Object: EcuM Master-Core APIs
Test Precondition: 
 - The EcuM_Init function is called on the master-core within the test
    entry-point (i.e. main function).
 - The EcuM_Init function is called on the slave-core within the test
    entry-point (i.e. main function).
 - The Schedule Manager needs to be initialized on both Os partitions
   (the state of both Os partitions need to be SCHM_PARTITION_ACTIVE).

Test Execution: 

  The test verifies that the APIs related to the EcuM.Impl.CallingContext.MasterCoreOnly requirement
  return E_NOT_OK and thus makes no changes if they are called from a slave core Os Partition.
  Also the test verifies that the DET error E_WRONG_CONTEXT is reported if the APIs are
  called from a slave core context.

  Testing the EcuM_KillAllRUNRequests API:
  Expected values if EcuM_KillAllRUNRequests() would be called in a master core context
    Dem_ReportErrorStatus_Stub.Count == 1U;
    Dem_ReportErrorStatus_Stub.EventId == TEST_DEM_ALLRUNREQUESTSKILLED_ID;
    Dem_ReportErrorStatus_Stub.EventStatus == TEST_DEM_ALLRUNREQUESTSKILLED_STATUS;


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.CallingContext.MasterCoreOnly</linksto>
          <dstversion>2</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>444</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1042</internalId></specobject>
    <specobject>
      <id>TS_EcuM_ImpTest_CallingContext_MasterSlave</id>
      <status>approved</status>
      <source>EB test case specification (asc_EcuM)</source>
      <sourcefile>/cygdrive/c/work/workspace/LEAD_ACG-9.3.0/asc_EcuM/test/ts5/Implementation/IN/EcuM_ImpTest_SchM_Interface/source/application/Tests.c.m4</sourcefile>
      <sourceline>582</sourceline>
      <version>1</version>
      <description>&lt;pre&gt;Test Synopsis: None.
Test Description: 
&lt;para&gt;
  This test verifies a list of EcuM APIs which should perform changes when they are called
  in a slave core context.
  The master core context of these APIs is already being tested by EcuM tests
  running in single core context.
&lt;/para&gt;

Test Object: EcuM Master-Core and Slave-Core APIs
Test Precondition: 
 - The EcuM_Init function is called on the master-core within the test
    entry-point (i.e. main function).
 - The EcuM_Init function is called on the slave-core within the test
    entry-point (i.e. main function).
 - The Schedule Manager needs to be initialized on both Os partitions
   (the state of both Os partitions need to be SCHM_PARTITION_ACTIVE).

Test Execution: 

 The test verifies that the following list of APIs perform changes when
 they are called in a slave core context.

        - EcuM_GetVersionInfo
        
        - EcuM_Init
        - EcuM_StartupTwo
        - EcuM_Shutdown

        - EcuM_MainFunction
        - EcuM_ValidateWakeupEvent
        - EcuM_GetExpiredWakeupEvents
        - EcuM_GetPendingWakeupEvents
        - EcuM_GetValidatedWakeupEvents
        - EcuM_ClearWakeupEvent
        - EcuM_SetWakeupEvent

        - STATIC EcuM_SwitchWakeupStatus
        - STATIC EcuM_WksIndicateStatus_DISABLED
        - STATIC EcuM_WksIndicateStatus_EXPIRED
        - STATIC EcuM_WksIndicateStatus_NONE
        - STATIC EcuM_WksIndicateStatus_PENDING
        - STATIC EcuM_WksIndicateStatus_VALIDATED
        - STATIC EcuM_ComMWakeupIndication

        Core specific exclusive areas:
        - STATIC  EcuM_EnterExclusiveArea
        - STATIC  EcuM_ExitExclusiveArea


Test Input: None.
Test Output: None.&lt;/pre&gt;</description>
      <providescoverage>
        <provcov>
          <linksto>EcuM.Impl.CallingContext.MasterSlave</linksto>
          <dstversion>1</dstversion>
        <linkstatus>linked</linkstatus><linkdestdoctype>swurs</linkdestdoctype><linkerror/><internalId>445</internalId></provcov>
      </providescoverage>
    <violations/><oreqmViolations/><covstatus>covered</covstatus><internalId>1043</internalId></specobject>
  </specobjects>
  </specdocument>
  <violations/>
  <oreqmViolations/>
</tracingresults>
